
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: # Copyright (C) 2002-2007 Python Software Foundation
2: # Contact: email-sig@python.org
3: 
4: '''Email address parsing code.
5: 
6: Lifted directly from rfc822.py.  This should eventually be rewritten.
7: '''
8: 
9: __all__ = [
10:     'mktime_tz',
11:     'parsedate',
12:     'parsedate_tz',
13:     'quote',
14:     ]
15: 
16: import time, calendar
17: 
18: SPACE = ' '
19: EMPTYSTRING = ''
20: COMMASPACE = ', '
21: 
22: # Parse a date field
23: _monthnames = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul',
24:                'aug', 'sep', 'oct', 'nov', 'dec',
25:                'january', 'february', 'march', 'april', 'may', 'june', 'july',
26:                'august', 'september', 'october', 'november', 'december']
27: 
28: _daynames = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun']
29: 
30: # The timezone table does not include the military time zones defined
31: # in RFC822, other than Z.  According to RFC1123, the description in
32: # RFC822 gets the signs wrong, so we can't rely on any such time
33: # zones.  RFC1123 recommends that numeric timezone indicators be used
34: # instead of timezone names.
35: 
36: _timezones = {'UT':0, 'UTC':0, 'GMT':0, 'Z':0,
37:               'AST': -400, 'ADT': -300,  # Atlantic (used in Canada)
38:               'EST': -500, 'EDT': -400,  # Eastern
39:               'CST': -600, 'CDT': -500,  # Central
40:               'MST': -700, 'MDT': -600,  # Mountain
41:               'PST': -800, 'PDT': -700   # Pacific
42:               }
43: 
44: 
45: def parsedate_tz(data):
46:     '''Convert a date string to a time tuple.
47: 
48:     Accounts for military timezones.
49:     '''
50:     data = data.split()
51:     # The FWS after the comma after the day-of-week is optional, so search and
52:     # adjust for this.
53:     if data[0].endswith(',') or data[0].lower() in _daynames:
54:         # There's a dayname here. Skip it
55:         del data[0]
56:     else:
57:         i = data[0].rfind(',')
58:         if i >= 0:
59:             data[0] = data[0][i+1:]
60:     if len(data) == 3: # RFC 850 date, deprecated
61:         stuff = data[0].split('-')
62:         if len(stuff) == 3:
63:             data = stuff + data[1:]
64:     if len(data) == 4:
65:         s = data[3]
66:         i = s.find('+')
67:         if i > 0:
68:             data[3:] = [s[:i], s[i+1:]]
69:         else:
70:             data.append('') # Dummy tz
71:     if len(data) < 5:
72:         return None
73:     data = data[:5]
74:     [dd, mm, yy, tm, tz] = data
75:     mm = mm.lower()
76:     if mm not in _monthnames:
77:         dd, mm = mm, dd.lower()
78:         if mm not in _monthnames:
79:             return None
80:     mm = _monthnames.index(mm) + 1
81:     if mm > 12:
82:         mm -= 12
83:     if dd[-1] == ',':
84:         dd = dd[:-1]
85:     i = yy.find(':')
86:     if i > 0:
87:         yy, tm = tm, yy
88:     if yy[-1] == ',':
89:         yy = yy[:-1]
90:     if not yy[0].isdigit():
91:         yy, tz = tz, yy
92:     if tm[-1] == ',':
93:         tm = tm[:-1]
94:     tm = tm.split(':')
95:     if len(tm) == 2:
96:         [thh, tmm] = tm
97:         tss = '0'
98:     elif len(tm) == 3:
99:         [thh, tmm, tss] = tm
100:     else:
101:         return None
102:     try:
103:         yy = int(yy)
104:         dd = int(dd)
105:         thh = int(thh)
106:         tmm = int(tmm)
107:         tss = int(tss)
108:     except ValueError:
109:         return None
110:     # Check for a yy specified in two-digit format, then convert it to the
111:     # appropriate four-digit format, according to the POSIX standard. RFC 822
112:     # calls for a two-digit yy, but RFC 2822 (which obsoletes RFC 822)
113:     # mandates a 4-digit yy. For more information, see the documentation for
114:     # the time module.
115:     if yy < 100:
116:         # The year is between 1969 and 1999 (inclusive).
117:         if yy > 68:
118:             yy += 1900
119:         # The year is between 2000 and 2068 (inclusive).
120:         else:
121:             yy += 2000
122:     tzoffset = None
123:     tz = tz.upper()
124:     if tz in _timezones:
125:         tzoffset = _timezones[tz]
126:     else:
127:         try:
128:             tzoffset = int(tz)
129:         except ValueError:
130:             pass
131:     # Convert a timezone offset into seconds ; -0500 -> -18000
132:     if tzoffset:
133:         if tzoffset < 0:
134:             tzsign = -1
135:             tzoffset = -tzoffset
136:         else:
137:             tzsign = 1
138:         tzoffset = tzsign * ( (tzoffset//100)*3600 + (tzoffset % 100)*60)
139:     # Daylight Saving Time flag is set to -1, since DST is unknown.
140:     return yy, mm, dd, thh, tmm, tss, 0, 1, -1, tzoffset
141: 
142: 
143: def parsedate(data):
144:     '''Convert a time string to a time tuple.'''
145:     t = parsedate_tz(data)
146:     if isinstance(t, tuple):
147:         return t[:9]
148:     else:
149:         return t
150: 
151: 
152: def mktime_tz(data):
153:     '''Turn a 10-tuple as returned by parsedate_tz() into a POSIX timestamp.'''
154:     if data[9] is None:
155:         # No zone info, so localtime is better assumption than GMT
156:         return time.mktime(data[:8] + (-1,))
157:     else:
158:         t = calendar.timegm(data)
159:         return t - data[9]
160: 
161: 
162: def quote(str):
163:     '''Prepare string to be used in a quoted string.
164: 
165:     Turns backslash and double quote characters into quoted pairs.  These
166:     are the only characters that need to be quoted inside a quoted string.
167:     Does not add the surrounding double quotes.
168:     '''
169:     return str.replace('\\', '\\\\').replace('"', '\\"')
170: 
171: 
172: class AddrlistClass:
173:     '''Address parser class by Ben Escoto.
174: 
175:     To understand what this class does, it helps to have a copy of RFC 2822 in
176:     front of you.
177: 
178:     Note: this class interface is deprecated and may be removed in the future.
179:     Use rfc822.AddressList instead.
180:     '''
181: 
182:     def __init__(self, field):
183:         '''Initialize a new instance.
184: 
185:         `field' is an unparsed address header field, containing
186:         one or more addresses.
187:         '''
188:         self.specials = '()<>@,:;.\"[]'
189:         self.pos = 0
190:         self.LWS = ' \t'
191:         self.CR = '\r\n'
192:         self.FWS = self.LWS + self.CR
193:         self.atomends = self.specials + self.LWS + self.CR
194:         # Note that RFC 2822 now specifies `.' as obs-phrase, meaning that it
195:         # is obsolete syntax.  RFC 2822 requires that we recognize obsolete
196:         # syntax, so allow dots in phrases.
197:         self.phraseends = self.atomends.replace('.', '')
198:         self.field = field
199:         self.commentlist = []
200: 
201:     def gotonext(self):
202:         '''Parse up to the start of the next address.'''
203:         while self.pos < len(self.field):
204:             if self.field[self.pos] in self.LWS + '\n\r':
205:                 self.pos += 1
206:             elif self.field[self.pos] == '(':
207:                 self.commentlist.append(self.getcomment())
208:             else:
209:                 break
210: 
211:     def getaddrlist(self):
212:         '''Parse all addresses.
213: 
214:         Returns a list containing all of the addresses.
215:         '''
216:         result = []
217:         while self.pos < len(self.field):
218:             ad = self.getaddress()
219:             if ad:
220:                 result += ad
221:             else:
222:                 result.append(('', ''))
223:         return result
224: 
225:     def getaddress(self):
226:         '''Parse the next address.'''
227:         self.commentlist = []
228:         self.gotonext()
229: 
230:         oldpos = self.pos
231:         oldcl = self.commentlist
232:         plist = self.getphraselist()
233: 
234:         self.gotonext()
235:         returnlist = []
236: 
237:         if self.pos >= len(self.field):
238:             # Bad email address technically, no domain.
239:             if plist:
240:                 returnlist = [(SPACE.join(self.commentlist), plist[0])]
241: 
242:         elif self.field[self.pos] in '.@':
243:             # email address is just an addrspec
244:             # this isn't very efficient since we start over
245:             self.pos = oldpos
246:             self.commentlist = oldcl
247:             addrspec = self.getaddrspec()
248:             returnlist = [(SPACE.join(self.commentlist), addrspec)]
249: 
250:         elif self.field[self.pos] == ':':
251:             # address is a group
252:             returnlist = []
253: 
254:             fieldlen = len(self.field)
255:             self.pos += 1
256:             while self.pos < len(self.field):
257:                 self.gotonext()
258:                 if self.pos < fieldlen and self.field[self.pos] == ';':
259:                     self.pos += 1
260:                     break
261:                 returnlist = returnlist + self.getaddress()
262: 
263:         elif self.field[self.pos] == '<':
264:             # Address is a phrase then a route addr
265:             routeaddr = self.getrouteaddr()
266: 
267:             if self.commentlist:
268:                 returnlist = [(SPACE.join(plist) + ' (' +
269:                                ' '.join(self.commentlist) + ')', routeaddr)]
270:             else:
271:                 returnlist = [(SPACE.join(plist), routeaddr)]
272: 
273:         else:
274:             if plist:
275:                 returnlist = [(SPACE.join(self.commentlist), plist[0])]
276:             elif self.field[self.pos] in self.specials:
277:                 self.pos += 1
278: 
279:         self.gotonext()
280:         if self.pos < len(self.field) and self.field[self.pos] == ',':
281:             self.pos += 1
282:         return returnlist
283: 
284:     def getrouteaddr(self):
285:         '''Parse a route address (Return-path value).
286: 
287:         This method just skips all the route stuff and returns the addrspec.
288:         '''
289:         if self.field[self.pos] != '<':
290:             return
291: 
292:         expectroute = False
293:         self.pos += 1
294:         self.gotonext()
295:         adlist = ''
296:         while self.pos < len(self.field):
297:             if expectroute:
298:                 self.getdomain()
299:                 expectroute = False
300:             elif self.field[self.pos] == '>':
301:                 self.pos += 1
302:                 break
303:             elif self.field[self.pos] == '@':
304:                 self.pos += 1
305:                 expectroute = True
306:             elif self.field[self.pos] == ':':
307:                 self.pos += 1
308:             else:
309:                 adlist = self.getaddrspec()
310:                 self.pos += 1
311:                 break
312:             self.gotonext()
313: 
314:         return adlist
315: 
316:     def getaddrspec(self):
317:         '''Parse an RFC 2822 addr-spec.'''
318:         aslist = []
319: 
320:         self.gotonext()
321:         while self.pos < len(self.field):
322:             if self.field[self.pos] == '.':
323:                 aslist.append('.')
324:                 self.pos += 1
325:             elif self.field[self.pos] == '"':
326:                 aslist.append('"%s"' % quote(self.getquote()))
327:             elif self.field[self.pos] in self.atomends:
328:                 break
329:             else:
330:                 aslist.append(self.getatom())
331:             self.gotonext()
332: 
333:         if self.pos >= len(self.field) or self.field[self.pos] != '@':
334:             return EMPTYSTRING.join(aslist)
335: 
336:         aslist.append('@')
337:         self.pos += 1
338:         self.gotonext()
339:         return EMPTYSTRING.join(aslist) + self.getdomain()
340: 
341:     def getdomain(self):
342:         '''Get the complete domain name from an address.'''
343:         sdlist = []
344:         while self.pos < len(self.field):
345:             if self.field[self.pos] in self.LWS:
346:                 self.pos += 1
347:             elif self.field[self.pos] == '(':
348:                 self.commentlist.append(self.getcomment())
349:             elif self.field[self.pos] == '[':
350:                 sdlist.append(self.getdomainliteral())
351:             elif self.field[self.pos] == '.':
352:                 self.pos += 1
353:                 sdlist.append('.')
354:             elif self.field[self.pos] in self.atomends:
355:                 break
356:             else:
357:                 sdlist.append(self.getatom())
358:         return EMPTYSTRING.join(sdlist)
359: 
360:     def getdelimited(self, beginchar, endchars, allowcomments=True):
361:         '''Parse a header fragment delimited by special characters.
362: 
363:         `beginchar' is the start character for the fragment.
364:         If self is not looking at an instance of `beginchar' then
365:         getdelimited returns the empty string.
366: 
367:         `endchars' is a sequence of allowable end-delimiting characters.
368:         Parsing stops when one of these is encountered.
369: 
370:         If `allowcomments' is non-zero, embedded RFC 2822 comments are allowed
371:         within the parsed fragment.
372:         '''
373:         if self.field[self.pos] != beginchar:
374:             return ''
375: 
376:         slist = ['']
377:         quote = False
378:         self.pos += 1
379:         while self.pos < len(self.field):
380:             if quote:
381:                 slist.append(self.field[self.pos])
382:                 quote = False
383:             elif self.field[self.pos] in endchars:
384:                 self.pos += 1
385:                 break
386:             elif allowcomments and self.field[self.pos] == '(':
387:                 slist.append(self.getcomment())
388:                 continue        # have already advanced pos from getcomment
389:             elif self.field[self.pos] == '\\':
390:                 quote = True
391:             else:
392:                 slist.append(self.field[self.pos])
393:             self.pos += 1
394: 
395:         return EMPTYSTRING.join(slist)
396: 
397:     def getquote(self):
398:         '''Get a quote-delimited fragment from self's field.'''
399:         return self.getdelimited('"', '"\r', False)
400: 
401:     def getcomment(self):
402:         '''Get a parenthesis-delimited fragment from self's field.'''
403:         return self.getdelimited('(', ')\r', True)
404: 
405:     def getdomainliteral(self):
406:         '''Parse an RFC 2822 domain-literal.'''
407:         return '[%s]' % self.getdelimited('[', ']\r', False)
408: 
409:     def getatom(self, atomends=None):
410:         '''Parse an RFC 2822 atom.
411: 
412:         Optional atomends specifies a different set of end token delimiters
413:         (the default is to use self.atomends).  This is used e.g. in
414:         getphraselist() since phrase endings must not include the `.' (which
415:         is legal in phrases).'''
416:         atomlist = ['']
417:         if atomends is None:
418:             atomends = self.atomends
419: 
420:         while self.pos < len(self.field):
421:             if self.field[self.pos] in atomends:
422:                 break
423:             else:
424:                 atomlist.append(self.field[self.pos])
425:             self.pos += 1
426: 
427:         return EMPTYSTRING.join(atomlist)
428: 
429:     def getphraselist(self):
430:         '''Parse a sequence of RFC 2822 phrases.
431: 
432:         A phrase is a sequence of words, which are in turn either RFC 2822
433:         atoms or quoted-strings.  Phrases are canonicalized by squeezing all
434:         runs of continuous whitespace into one space.
435:         '''
436:         plist = []
437: 
438:         while self.pos < len(self.field):
439:             if self.field[self.pos] in self.FWS:
440:                 self.pos += 1
441:             elif self.field[self.pos] == '"':
442:                 plist.append(self.getquote())
443:             elif self.field[self.pos] == '(':
444:                 self.commentlist.append(self.getcomment())
445:             elif self.field[self.pos] in self.phraseends:
446:                 break
447:             else:
448:                 plist.append(self.getatom(self.phraseends))
449: 
450:         return plist
451: 
452: class AddressList(AddrlistClass):
453:     '''An AddressList encapsulates a list of parsed RFC 2822 addresses.'''
454:     def __init__(self, field):
455:         AddrlistClass.__init__(self, field)
456:         if field:
457:             self.addresslist = self.getaddrlist()
458:         else:
459:             self.addresslist = []
460: 
461:     def __len__(self):
462:         return len(self.addresslist)
463: 
464:     def __add__(self, other):
465:         # Set union
466:         newaddr = AddressList(None)
467:         newaddr.addresslist = self.addresslist[:]
468:         for x in other.addresslist:
469:             if not x in self.addresslist:
470:                 newaddr.addresslist.append(x)
471:         return newaddr
472: 
473:     def __iadd__(self, other):
474:         # Set union, in-place
475:         for x in other.addresslist:
476:             if not x in self.addresslist:
477:                 self.addresslist.append(x)
478:         return self
479: 
480:     def __sub__(self, other):
481:         # Set difference
482:         newaddr = AddressList(None)
483:         for x in self.addresslist:
484:             if not x in other.addresslist:
485:                 newaddr.addresslist.append(x)
486:         return newaddr
487: 
488:     def __isub__(self, other):
489:         # Set difference, in-place
490:         for x in other.addresslist:
491:             if x in self.addresslist:
492:                 self.addresslist.remove(x)
493:         return self
494: 
495:     def __getitem__(self, index):
496:         # Make indexing, slices, and 'in' work
497:         return self.addresslist[index]
498: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_19017 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 7, (-1)), 'str', 'Email address parsing code.\n\nLifted directly from rfc822.py.  This should eventually be rewritten.\n')

# Assigning a List to a Name (line 9):

# Assigning a List to a Name (line 9):
__all__ = ['mktime_tz', 'parsedate', 'parsedate_tz', 'quote']
module_type_store.set_exportable_members(['mktime_tz', 'parsedate', 'parsedate_tz', 'quote'])

# Obtaining an instance of the builtin type 'list' (line 9)
list_19018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 9, 10), 'list')
# Adding type elements to the builtin type 'list' instance (line 9)
# Adding element type (line 9)
str_19019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 10, 4), 'str', 'mktime_tz')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 9, 10), list_19018, str_19019)
# Adding element type (line 9)
str_19020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 11, 4), 'str', 'parsedate')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 9, 10), list_19018, str_19020)
# Adding element type (line 9)
str_19021 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 12, 4), 'str', 'parsedate_tz')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 9, 10), list_19018, str_19021)
# Adding element type (line 9)
str_19022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, 4), 'str', 'quote')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 9, 10), list_19018, str_19022)

# Assigning a type to the variable '__all__' (line 9)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), '__all__', list_19018)
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 16, 0))

# Multiple import statement. import time (1/2) (line 16)
import time

import_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'time', time, module_type_store)
# Multiple import statement. import calendar (2/2) (line 16)
import calendar

import_module(stypy.reporting.localization.Localization(__file__, 16, 0), 'calendar', calendar, module_type_store)


# Assigning a Str to a Name (line 18):

# Assigning a Str to a Name (line 18):
str_19023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 18, 8), 'str', ' ')
# Assigning a type to the variable 'SPACE' (line 18)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'SPACE', str_19023)

# Assigning a Str to a Name (line 19):

# Assigning a Str to a Name (line 19):
str_19024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 19, 14), 'str', '')
# Assigning a type to the variable 'EMPTYSTRING' (line 19)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 0), 'EMPTYSTRING', str_19024)

# Assigning a Str to a Name (line 20):

# Assigning a Str to a Name (line 20):
str_19025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 13), 'str', ', ')
# Assigning a type to the variable 'COMMASPACE' (line 20)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 0), 'COMMASPACE', str_19025)

# Assigning a List to a Name (line 23):

# Assigning a List to a Name (line 23):

# Obtaining an instance of the builtin type 'list' (line 23)
list_19026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 14), 'list')
# Adding type elements to the builtin type 'list' instance (line 23)
# Adding element type (line 23)
str_19027 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 15), 'str', 'jan')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19027)
# Adding element type (line 23)
str_19028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 22), 'str', 'feb')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19028)
# Adding element type (line 23)
str_19029 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 29), 'str', 'mar')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19029)
# Adding element type (line 23)
str_19030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 36), 'str', 'apr')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19030)
# Adding element type (line 23)
str_19031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 43), 'str', 'may')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19031)
# Adding element type (line 23)
str_19032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 50), 'str', 'jun')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19032)
# Adding element type (line 23)
str_19033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 57), 'str', 'jul')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19033)
# Adding element type (line 23)
str_19034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 15), 'str', 'aug')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19034)
# Adding element type (line 23)
str_19035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 22), 'str', 'sep')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19035)
# Adding element type (line 23)
str_19036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 29), 'str', 'oct')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19036)
# Adding element type (line 23)
str_19037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 36), 'str', 'nov')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19037)
# Adding element type (line 23)
str_19038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 24, 43), 'str', 'dec')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19038)
# Adding element type (line 23)
str_19039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 15), 'str', 'january')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19039)
# Adding element type (line 23)
str_19040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 26), 'str', 'february')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19040)
# Adding element type (line 23)
str_19041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 38), 'str', 'march')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19041)
# Adding element type (line 23)
str_19042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 47), 'str', 'april')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19042)
# Adding element type (line 23)
str_19043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 56), 'str', 'may')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19043)
# Adding element type (line 23)
str_19044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 63), 'str', 'june')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19044)
# Adding element type (line 23)
str_19045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 25, 71), 'str', 'july')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19045)
# Adding element type (line 23)
str_19046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 26, 15), 'str', 'august')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19046)
# Adding element type (line 23)
str_19047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 26, 25), 'str', 'september')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19047)
# Adding element type (line 23)
str_19048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 26, 38), 'str', 'october')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19048)
# Adding element type (line 23)
str_19049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 26, 49), 'str', 'november')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19049)
# Adding element type (line 23)
str_19050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 26, 61), 'str', 'december')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 14), list_19026, str_19050)

# Assigning a type to the variable '_monthnames' (line 23)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 0), '_monthnames', list_19026)

# Assigning a List to a Name (line 28):

# Assigning a List to a Name (line 28):

# Obtaining an instance of the builtin type 'list' (line 28)
list_19051 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 12), 'list')
# Adding type elements to the builtin type 'list' instance (line 28)
# Adding element type (line 28)
str_19052 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 13), 'str', 'mon')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 12), list_19051, str_19052)
# Adding element type (line 28)
str_19053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 20), 'str', 'tue')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 12), list_19051, str_19053)
# Adding element type (line 28)
str_19054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 27), 'str', 'wed')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 12), list_19051, str_19054)
# Adding element type (line 28)
str_19055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 34), 'str', 'thu')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 12), list_19051, str_19055)
# Adding element type (line 28)
str_19056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 41), 'str', 'fri')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 12), list_19051, str_19056)
# Adding element type (line 28)
str_19057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 48), 'str', 'sat')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 12), list_19051, str_19057)
# Adding element type (line 28)
str_19058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 55), 'str', 'sun')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 28, 12), list_19051, str_19058)

# Assigning a type to the variable '_daynames' (line 28)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 0), '_daynames', list_19051)

# Assigning a Dict to a Name (line 36):

# Assigning a Dict to a Name (line 36):

# Obtaining an instance of the builtin type 'dict' (line 36)
dict_19059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 13), 'dict')
# Adding type elements to the builtin type 'dict' instance (line 36)
# Adding element type (key, value) (line 36)
str_19060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 14), 'str', 'UT')
int_19061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 19), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19060, int_19061))
# Adding element type (key, value) (line 36)
str_19062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 22), 'str', 'UTC')
int_19063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 28), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19062, int_19063))
# Adding element type (key, value) (line 36)
str_19064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 31), 'str', 'GMT')
int_19065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 37), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19064, int_19065))
# Adding element type (key, value) (line 36)
str_19066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 40), 'str', 'Z')
int_19067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 36, 44), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19066, int_19067))
# Adding element type (key, value) (line 36)
str_19068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 37, 14), 'str', 'AST')
int_19069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 37, 21), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19068, int_19069))
# Adding element type (key, value) (line 36)
str_19070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 37, 27), 'str', 'ADT')
int_19071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 37, 34), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19070, int_19071))
# Adding element type (key, value) (line 36)
str_19072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 38, 14), 'str', 'EST')
int_19073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 38, 21), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19072, int_19073))
# Adding element type (key, value) (line 36)
str_19074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 38, 27), 'str', 'EDT')
int_19075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 38, 34), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19074, int_19075))
# Adding element type (key, value) (line 36)
str_19076 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 39, 14), 'str', 'CST')
int_19077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 39, 21), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19076, int_19077))
# Adding element type (key, value) (line 36)
str_19078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 39, 27), 'str', 'CDT')
int_19079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 39, 34), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19078, int_19079))
# Adding element type (key, value) (line 36)
str_19080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 40, 14), 'str', 'MST')
int_19081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 40, 21), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19080, int_19081))
# Adding element type (key, value) (line 36)
str_19082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 40, 27), 'str', 'MDT')
int_19083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 40, 34), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19082, int_19083))
# Adding element type (key, value) (line 36)
str_19084 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 14), 'str', 'PST')
int_19085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 21), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19084, int_19085))
# Adding element type (key, value) (line 36)
str_19086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 27), 'str', 'PDT')
int_19087 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 34), 'int')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 36, 13), dict_19059, (str_19086, int_19087))

# Assigning a type to the variable '_timezones' (line 36)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 0), '_timezones', dict_19059)

@norecursion
def parsedate_tz(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'parsedate_tz'
    module_type_store = module_type_store.open_function_context('parsedate_tz', 45, 0, False)
    
    # Passed parameters checking function
    parsedate_tz.stypy_localization = localization
    parsedate_tz.stypy_type_of_self = None
    parsedate_tz.stypy_type_store = module_type_store
    parsedate_tz.stypy_function_name = 'parsedate_tz'
    parsedate_tz.stypy_param_names_list = ['data']
    parsedate_tz.stypy_varargs_param_name = None
    parsedate_tz.stypy_kwargs_param_name = None
    parsedate_tz.stypy_call_defaults = defaults
    parsedate_tz.stypy_call_varargs = varargs
    parsedate_tz.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'parsedate_tz', ['data'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'parsedate_tz', localization, ['data'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'parsedate_tz(...)' code ##################

    str_19088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 49, (-1)), 'str', 'Convert a date string to a time tuple.\n\n    Accounts for military timezones.\n    ')
    
    # Assigning a Call to a Name (line 50):
    
    # Assigning a Call to a Name (line 50):
    
    # Call to split(...): (line 50)
    # Processing the call keyword arguments (line 50)
    kwargs_19091 = {}
    # Getting the type of 'data' (line 50)
    data_19089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 11), 'data', False)
    # Obtaining the member 'split' of a type (line 50)
    split_19090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 11), data_19089, 'split')
    # Calling split(args, kwargs) (line 50)
    split_call_result_19092 = invoke(stypy.reporting.localization.Localization(__file__, 50, 11), split_19090, *[], **kwargs_19091)
    
    # Assigning a type to the variable 'data' (line 50)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 4), 'data', split_call_result_19092)
    
    # Evaluating a boolean operation
    
    # Call to endswith(...): (line 53)
    # Processing the call arguments (line 53)
    str_19098 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 24), 'str', ',')
    # Processing the call keyword arguments (line 53)
    kwargs_19099 = {}
    
    # Obtaining the type of the subscript
    int_19093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 12), 'int')
    # Getting the type of 'data' (line 53)
    data_19094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 7), 'data', False)
    # Obtaining the member '__getitem__' of a type (line 53)
    getitem___19095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 7), data_19094, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 53)
    subscript_call_result_19096 = invoke(stypy.reporting.localization.Localization(__file__, 53, 7), getitem___19095, int_19093)
    
    # Obtaining the member 'endswith' of a type (line 53)
    endswith_19097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 7), subscript_call_result_19096, 'endswith')
    # Calling endswith(args, kwargs) (line 53)
    endswith_call_result_19100 = invoke(stypy.reporting.localization.Localization(__file__, 53, 7), endswith_19097, *[str_19098], **kwargs_19099)
    
    
    
    # Call to lower(...): (line 53)
    # Processing the call keyword arguments (line 53)
    kwargs_19106 = {}
    
    # Obtaining the type of the subscript
    int_19101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 37), 'int')
    # Getting the type of 'data' (line 53)
    data_19102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 32), 'data', False)
    # Obtaining the member '__getitem__' of a type (line 53)
    getitem___19103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 32), data_19102, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 53)
    subscript_call_result_19104 = invoke(stypy.reporting.localization.Localization(__file__, 53, 32), getitem___19103, int_19101)
    
    # Obtaining the member 'lower' of a type (line 53)
    lower_19105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 32), subscript_call_result_19104, 'lower')
    # Calling lower(args, kwargs) (line 53)
    lower_call_result_19107 = invoke(stypy.reporting.localization.Localization(__file__, 53, 32), lower_19105, *[], **kwargs_19106)
    
    # Getting the type of '_daynames' (line 53)
    _daynames_19108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 51), '_daynames')
    # Applying the binary operator 'in' (line 53)
    result_contains_19109 = python_operator(stypy.reporting.localization.Localization(__file__, 53, 32), 'in', lower_call_result_19107, _daynames_19108)
    
    # Applying the binary operator 'or' (line 53)
    result_or_keyword_19110 = python_operator(stypy.reporting.localization.Localization(__file__, 53, 7), 'or', endswith_call_result_19100, result_contains_19109)
    
    # Testing if the type of an if condition is none (line 53)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 53, 4), result_or_keyword_19110):
        
        # Assigning a Call to a Name (line 57):
        
        # Assigning a Call to a Name (line 57):
        
        # Call to rfind(...): (line 57)
        # Processing the call arguments (line 57)
        str_19122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 26), 'str', ',')
        # Processing the call keyword arguments (line 57)
        kwargs_19123 = {}
        
        # Obtaining the type of the subscript
        int_19117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 17), 'int')
        # Getting the type of 'data' (line 57)
        data_19118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 12), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 57)
        getitem___19119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 12), data_19118, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 57)
        subscript_call_result_19120 = invoke(stypy.reporting.localization.Localization(__file__, 57, 12), getitem___19119, int_19117)
        
        # Obtaining the member 'rfind' of a type (line 57)
        rfind_19121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 12), subscript_call_result_19120, 'rfind')
        # Calling rfind(args, kwargs) (line 57)
        rfind_call_result_19124 = invoke(stypy.reporting.localization.Localization(__file__, 57, 12), rfind_19121, *[str_19122], **kwargs_19123)
        
        # Assigning a type to the variable 'i' (line 57)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 8), 'i', rfind_call_result_19124)
        
        # Getting the type of 'i' (line 58)
        i_19125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 11), 'i')
        int_19126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 58, 16), 'int')
        # Applying the binary operator '>=' (line 58)
        result_ge_19127 = python_operator(stypy.reporting.localization.Localization(__file__, 58, 11), '>=', i_19125, int_19126)
        
        # Testing if the type of an if condition is none (line 58)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 58, 8), result_ge_19127):
            pass
        else:
            
            # Testing the type of an if condition (line 58)
            if_condition_19128 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 58, 8), result_ge_19127)
            # Assigning a type to the variable 'if_condition_19128' (line 58)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 58, 8), 'if_condition_19128', if_condition_19128)
            # SSA begins for if statement (line 58)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Subscript (line 59):
            
            # Assigning a Subscript to a Subscript (line 59):
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 59)
            i_19129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 30), 'i')
            int_19130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 32), 'int')
            # Applying the binary operator '+' (line 59)
            result_add_19131 = python_operator(stypy.reporting.localization.Localization(__file__, 59, 30), '+', i_19129, int_19130)
            
            slice_19132 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 59, 22), result_add_19131, None, None)
            
            # Obtaining the type of the subscript
            int_19133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 27), 'int')
            # Getting the type of 'data' (line 59)
            data_19134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 22), 'data')
            # Obtaining the member '__getitem__' of a type (line 59)
            getitem___19135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 22), data_19134, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 59)
            subscript_call_result_19136 = invoke(stypy.reporting.localization.Localization(__file__, 59, 22), getitem___19135, int_19133)
            
            # Obtaining the member '__getitem__' of a type (line 59)
            getitem___19137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 22), subscript_call_result_19136, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 59)
            subscript_call_result_19138 = invoke(stypy.reporting.localization.Localization(__file__, 59, 22), getitem___19137, slice_19132)
            
            # Getting the type of 'data' (line 59)
            data_19139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 12), 'data')
            int_19140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 17), 'int')
            # Storing an element on a container (line 59)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 12), data_19139, (int_19140, subscript_call_result_19138))
            # SSA join for if statement (line 58)
            module_type_store = module_type_store.join_ssa_context()
            

    else:
        
        # Testing the type of an if condition (line 53)
        if_condition_19111 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 53, 4), result_or_keyword_19110)
        # Assigning a type to the variable 'if_condition_19111' (line 53)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 53, 4), 'if_condition_19111', if_condition_19111)
        # SSA begins for if statement (line 53)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Deleting a member
        # Getting the type of 'data' (line 55)
        data_19112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 12), 'data')
        
        # Obtaining the type of the subscript
        int_19113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 17), 'int')
        # Getting the type of 'data' (line 55)
        data_19114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 12), 'data')
        # Obtaining the member '__getitem__' of a type (line 55)
        getitem___19115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 12), data_19114, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 55)
        subscript_call_result_19116 = invoke(stypy.reporting.localization.Localization(__file__, 55, 12), getitem___19115, int_19113)
        
        del_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 8), data_19112, subscript_call_result_19116)
        # SSA branch for the else part of an if statement (line 53)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Call to a Name (line 57):
        
        # Assigning a Call to a Name (line 57):
        
        # Call to rfind(...): (line 57)
        # Processing the call arguments (line 57)
        str_19122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 26), 'str', ',')
        # Processing the call keyword arguments (line 57)
        kwargs_19123 = {}
        
        # Obtaining the type of the subscript
        int_19117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 57, 17), 'int')
        # Getting the type of 'data' (line 57)
        data_19118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 57, 12), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 57)
        getitem___19119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 12), data_19118, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 57)
        subscript_call_result_19120 = invoke(stypy.reporting.localization.Localization(__file__, 57, 12), getitem___19119, int_19117)
        
        # Obtaining the member 'rfind' of a type (line 57)
        rfind_19121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 57, 12), subscript_call_result_19120, 'rfind')
        # Calling rfind(args, kwargs) (line 57)
        rfind_call_result_19124 = invoke(stypy.reporting.localization.Localization(__file__, 57, 12), rfind_19121, *[str_19122], **kwargs_19123)
        
        # Assigning a type to the variable 'i' (line 57)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 8), 'i', rfind_call_result_19124)
        
        # Getting the type of 'i' (line 58)
        i_19125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 11), 'i')
        int_19126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 58, 16), 'int')
        # Applying the binary operator '>=' (line 58)
        result_ge_19127 = python_operator(stypy.reporting.localization.Localization(__file__, 58, 11), '>=', i_19125, int_19126)
        
        # Testing if the type of an if condition is none (line 58)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 58, 8), result_ge_19127):
            pass
        else:
            
            # Testing the type of an if condition (line 58)
            if_condition_19128 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 58, 8), result_ge_19127)
            # Assigning a type to the variable 'if_condition_19128' (line 58)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 58, 8), 'if_condition_19128', if_condition_19128)
            # SSA begins for if statement (line 58)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Subscript (line 59):
            
            # Assigning a Subscript to a Subscript (line 59):
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 59)
            i_19129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 30), 'i')
            int_19130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 32), 'int')
            # Applying the binary operator '+' (line 59)
            result_add_19131 = python_operator(stypy.reporting.localization.Localization(__file__, 59, 30), '+', i_19129, int_19130)
            
            slice_19132 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 59, 22), result_add_19131, None, None)
            
            # Obtaining the type of the subscript
            int_19133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 27), 'int')
            # Getting the type of 'data' (line 59)
            data_19134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 22), 'data')
            # Obtaining the member '__getitem__' of a type (line 59)
            getitem___19135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 22), data_19134, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 59)
            subscript_call_result_19136 = invoke(stypy.reporting.localization.Localization(__file__, 59, 22), getitem___19135, int_19133)
            
            # Obtaining the member '__getitem__' of a type (line 59)
            getitem___19137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 22), subscript_call_result_19136, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 59)
            subscript_call_result_19138 = invoke(stypy.reporting.localization.Localization(__file__, 59, 22), getitem___19137, slice_19132)
            
            # Getting the type of 'data' (line 59)
            data_19139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 12), 'data')
            int_19140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 59, 17), 'int')
            # Storing an element on a container (line 59)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 59, 12), data_19139, (int_19140, subscript_call_result_19138))
            # SSA join for if statement (line 58)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for if statement (line 53)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Call to len(...): (line 60)
    # Processing the call arguments (line 60)
    # Getting the type of 'data' (line 60)
    data_19142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 11), 'data', False)
    # Processing the call keyword arguments (line 60)
    kwargs_19143 = {}
    # Getting the type of 'len' (line 60)
    len_19141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 7), 'len', False)
    # Calling len(args, kwargs) (line 60)
    len_call_result_19144 = invoke(stypy.reporting.localization.Localization(__file__, 60, 7), len_19141, *[data_19142], **kwargs_19143)
    
    int_19145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 60, 20), 'int')
    # Applying the binary operator '==' (line 60)
    result_eq_19146 = python_operator(stypy.reporting.localization.Localization(__file__, 60, 7), '==', len_call_result_19144, int_19145)
    
    # Testing if the type of an if condition is none (line 60)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 60, 4), result_eq_19146):
        pass
    else:
        
        # Testing the type of an if condition (line 60)
        if_condition_19147 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 60, 4), result_eq_19146)
        # Assigning a type to the variable 'if_condition_19147' (line 60)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 4), 'if_condition_19147', if_condition_19147)
        # SSA begins for if statement (line 60)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 61):
        
        # Assigning a Call to a Name (line 61):
        
        # Call to split(...): (line 61)
        # Processing the call arguments (line 61)
        str_19153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 30), 'str', '-')
        # Processing the call keyword arguments (line 61)
        kwargs_19154 = {}
        
        # Obtaining the type of the subscript
        int_19148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 21), 'int')
        # Getting the type of 'data' (line 61)
        data_19149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 16), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 61)
        getitem___19150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 16), data_19149, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 61)
        subscript_call_result_19151 = invoke(stypy.reporting.localization.Localization(__file__, 61, 16), getitem___19150, int_19148)
        
        # Obtaining the member 'split' of a type (line 61)
        split_19152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 16), subscript_call_result_19151, 'split')
        # Calling split(args, kwargs) (line 61)
        split_call_result_19155 = invoke(stypy.reporting.localization.Localization(__file__, 61, 16), split_19152, *[str_19153], **kwargs_19154)
        
        # Assigning a type to the variable 'stuff' (line 61)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 8), 'stuff', split_call_result_19155)
        
        
        # Call to len(...): (line 62)
        # Processing the call arguments (line 62)
        # Getting the type of 'stuff' (line 62)
        stuff_19157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 15), 'stuff', False)
        # Processing the call keyword arguments (line 62)
        kwargs_19158 = {}
        # Getting the type of 'len' (line 62)
        len_19156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 62, 11), 'len', False)
        # Calling len(args, kwargs) (line 62)
        len_call_result_19159 = invoke(stypy.reporting.localization.Localization(__file__, 62, 11), len_19156, *[stuff_19157], **kwargs_19158)
        
        int_19160 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 62, 25), 'int')
        # Applying the binary operator '==' (line 62)
        result_eq_19161 = python_operator(stypy.reporting.localization.Localization(__file__, 62, 11), '==', len_call_result_19159, int_19160)
        
        # Testing if the type of an if condition is none (line 62)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 62, 8), result_eq_19161):
            pass
        else:
            
            # Testing the type of an if condition (line 62)
            if_condition_19162 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 62, 8), result_eq_19161)
            # Assigning a type to the variable 'if_condition_19162' (line 62)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 62, 8), 'if_condition_19162', if_condition_19162)
            # SSA begins for if statement (line 62)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a BinOp to a Name (line 63):
            
            # Assigning a BinOp to a Name (line 63):
            # Getting the type of 'stuff' (line 63)
            stuff_19163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 19), 'stuff')
            
            # Obtaining the type of the subscript
            int_19164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 63, 32), 'int')
            slice_19165 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 63, 27), int_19164, None, None)
            # Getting the type of 'data' (line 63)
            data_19166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 27), 'data')
            # Obtaining the member '__getitem__' of a type (line 63)
            getitem___19167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 63, 27), data_19166, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 63)
            subscript_call_result_19168 = invoke(stypy.reporting.localization.Localization(__file__, 63, 27), getitem___19167, slice_19165)
            
            # Applying the binary operator '+' (line 63)
            result_add_19169 = python_operator(stypy.reporting.localization.Localization(__file__, 63, 19), '+', stuff_19163, subscript_call_result_19168)
            
            # Assigning a type to the variable 'data' (line 63)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 63, 12), 'data', result_add_19169)
            # SSA join for if statement (line 62)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for if statement (line 60)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Call to len(...): (line 64)
    # Processing the call arguments (line 64)
    # Getting the type of 'data' (line 64)
    data_19171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 11), 'data', False)
    # Processing the call keyword arguments (line 64)
    kwargs_19172 = {}
    # Getting the type of 'len' (line 64)
    len_19170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 64, 7), 'len', False)
    # Calling len(args, kwargs) (line 64)
    len_call_result_19173 = invoke(stypy.reporting.localization.Localization(__file__, 64, 7), len_19170, *[data_19171], **kwargs_19172)
    
    int_19174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 64, 20), 'int')
    # Applying the binary operator '==' (line 64)
    result_eq_19175 = python_operator(stypy.reporting.localization.Localization(__file__, 64, 7), '==', len_call_result_19173, int_19174)
    
    # Testing if the type of an if condition is none (line 64)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 64, 4), result_eq_19175):
        pass
    else:
        
        # Testing the type of an if condition (line 64)
        if_condition_19176 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 64, 4), result_eq_19175)
        # Assigning a type to the variable 'if_condition_19176' (line 64)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 64, 4), 'if_condition_19176', if_condition_19176)
        # SSA begins for if statement (line 64)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 65):
        
        # Assigning a Subscript to a Name (line 65):
        
        # Obtaining the type of the subscript
        int_19177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 65, 17), 'int')
        # Getting the type of 'data' (line 65)
        data_19178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 12), 'data')
        # Obtaining the member '__getitem__' of a type (line 65)
        getitem___19179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 65, 12), data_19178, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 65)
        subscript_call_result_19180 = invoke(stypy.reporting.localization.Localization(__file__, 65, 12), getitem___19179, int_19177)
        
        # Assigning a type to the variable 's' (line 65)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 65, 8), 's', subscript_call_result_19180)
        
        # Assigning a Call to a Name (line 66):
        
        # Assigning a Call to a Name (line 66):
        
        # Call to find(...): (line 66)
        # Processing the call arguments (line 66)
        str_19183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, 19), 'str', '+')
        # Processing the call keyword arguments (line 66)
        kwargs_19184 = {}
        # Getting the type of 's' (line 66)
        s_19181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 66, 12), 's', False)
        # Obtaining the member 'find' of a type (line 66)
        find_19182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 66, 12), s_19181, 'find')
        # Calling find(args, kwargs) (line 66)
        find_call_result_19185 = invoke(stypy.reporting.localization.Localization(__file__, 66, 12), find_19182, *[str_19183], **kwargs_19184)
        
        # Assigning a type to the variable 'i' (line 66)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 8), 'i', find_call_result_19185)
        
        # Getting the type of 'i' (line 67)
        i_19186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 11), 'i')
        int_19187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 67, 15), 'int')
        # Applying the binary operator '>' (line 67)
        result_gt_19188 = python_operator(stypy.reporting.localization.Localization(__file__, 67, 11), '>', i_19186, int_19187)
        
        # Testing if the type of an if condition is none (line 67)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 67, 8), result_gt_19188):
            
            # Call to append(...): (line 70)
            # Processing the call arguments (line 70)
            str_19208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 24), 'str', '')
            # Processing the call keyword arguments (line 70)
            kwargs_19209 = {}
            # Getting the type of 'data' (line 70)
            data_19206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 12), 'data', False)
            # Obtaining the member 'append' of a type (line 70)
            append_19207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 12), data_19206, 'append')
            # Calling append(args, kwargs) (line 70)
            append_call_result_19210 = invoke(stypy.reporting.localization.Localization(__file__, 70, 12), append_19207, *[str_19208], **kwargs_19209)
            
        else:
            
            # Testing the type of an if condition (line 67)
            if_condition_19189 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 67, 8), result_gt_19188)
            # Assigning a type to the variable 'if_condition_19189' (line 67)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 67, 8), 'if_condition_19189', if_condition_19189)
            # SSA begins for if statement (line 67)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a List to a Subscript (line 68):
            
            # Assigning a List to a Subscript (line 68):
            
            # Obtaining an instance of the builtin type 'list' (line 68)
            list_19190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 23), 'list')
            # Adding type elements to the builtin type 'list' instance (line 68)
            # Adding element type (line 68)
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 68)
            i_19191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 27), 'i')
            slice_19192 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 68, 24), None, i_19191, None)
            # Getting the type of 's' (line 68)
            s_19193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 24), 's')
            # Obtaining the member '__getitem__' of a type (line 68)
            getitem___19194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 24), s_19193, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 68)
            subscript_call_result_19195 = invoke(stypy.reporting.localization.Localization(__file__, 68, 24), getitem___19194, slice_19192)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 68, 23), list_19190, subscript_call_result_19195)
            # Adding element type (line 68)
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 68)
            i_19196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 33), 'i')
            int_19197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 35), 'int')
            # Applying the binary operator '+' (line 68)
            result_add_19198 = python_operator(stypy.reporting.localization.Localization(__file__, 68, 33), '+', i_19196, int_19197)
            
            slice_19199 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 68, 31), result_add_19198, None, None)
            # Getting the type of 's' (line 68)
            s_19200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 31), 's')
            # Obtaining the member '__getitem__' of a type (line 68)
            getitem___19201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 31), s_19200, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 68)
            subscript_call_result_19202 = invoke(stypy.reporting.localization.Localization(__file__, 68, 31), getitem___19201, slice_19199)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 68, 23), list_19190, subscript_call_result_19202)
            
            # Getting the type of 'data' (line 68)
            data_19203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 12), 'data')
            int_19204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 68, 17), 'int')
            slice_19205 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 68, 12), int_19204, None, None)
            # Storing an element on a container (line 68)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 68, 12), data_19203, (slice_19205, list_19190))
            # SSA branch for the else part of an if statement (line 67)
            module_type_store.open_ssa_branch('else')
            
            # Call to append(...): (line 70)
            # Processing the call arguments (line 70)
            str_19208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 70, 24), 'str', '')
            # Processing the call keyword arguments (line 70)
            kwargs_19209 = {}
            # Getting the type of 'data' (line 70)
            data_19206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 12), 'data', False)
            # Obtaining the member 'append' of a type (line 70)
            append_19207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 12), data_19206, 'append')
            # Calling append(args, kwargs) (line 70)
            append_call_result_19210 = invoke(stypy.reporting.localization.Localization(__file__, 70, 12), append_19207, *[str_19208], **kwargs_19209)
            
            # SSA join for if statement (line 67)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for if statement (line 64)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Call to len(...): (line 71)
    # Processing the call arguments (line 71)
    # Getting the type of 'data' (line 71)
    data_19212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 11), 'data', False)
    # Processing the call keyword arguments (line 71)
    kwargs_19213 = {}
    # Getting the type of 'len' (line 71)
    len_19211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 7), 'len', False)
    # Calling len(args, kwargs) (line 71)
    len_call_result_19214 = invoke(stypy.reporting.localization.Localization(__file__, 71, 7), len_19211, *[data_19212], **kwargs_19213)
    
    int_19215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 71, 19), 'int')
    # Applying the binary operator '<' (line 71)
    result_lt_19216 = python_operator(stypy.reporting.localization.Localization(__file__, 71, 7), '<', len_call_result_19214, int_19215)
    
    # Testing if the type of an if condition is none (line 71)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 71, 4), result_lt_19216):
        pass
    else:
        
        # Testing the type of an if condition (line 71)
        if_condition_19217 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 71, 4), result_lt_19216)
        # Assigning a type to the variable 'if_condition_19217' (line 71)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 71, 4), 'if_condition_19217', if_condition_19217)
        # SSA begins for if statement (line 71)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Getting the type of 'None' (line 72)
        None_19218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 15), 'None')
        # Assigning a type to the variable 'stypy_return_type' (line 72)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 8), 'stypy_return_type', None_19218)
        # SSA join for if statement (line 71)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a Subscript to a Name (line 73):
    
    # Assigning a Subscript to a Name (line 73):
    
    # Obtaining the type of the subscript
    int_19219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 73, 17), 'int')
    slice_19220 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 73, 11), None, int_19219, None)
    # Getting the type of 'data' (line 73)
    data_19221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 11), 'data')
    # Obtaining the member '__getitem__' of a type (line 73)
    getitem___19222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 11), data_19221, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 73)
    subscript_call_result_19223 = invoke(stypy.reporting.localization.Localization(__file__, 73, 11), getitem___19222, slice_19220)
    
    # Assigning a type to the variable 'data' (line 73)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 4), 'data', subscript_call_result_19223)
    
    # Assigning a Name to a List (line 74):
    
    # Assigning a Subscript to a Name (line 74):
    
    # Obtaining the type of the subscript
    int_19224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 74, 4), 'int')
    # Getting the type of 'data' (line 74)
    data_19225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 27), 'data')
    # Obtaining the member '__getitem__' of a type (line 74)
    getitem___19226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 74, 4), data_19225, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 74)
    subscript_call_result_19227 = invoke(stypy.reporting.localization.Localization(__file__, 74, 4), getitem___19226, int_19224)
    
    # Assigning a type to the variable 'list_var_assignment_19001' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19001', subscript_call_result_19227)
    
    # Assigning a Subscript to a Name (line 74):
    
    # Obtaining the type of the subscript
    int_19228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 74, 4), 'int')
    # Getting the type of 'data' (line 74)
    data_19229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 27), 'data')
    # Obtaining the member '__getitem__' of a type (line 74)
    getitem___19230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 74, 4), data_19229, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 74)
    subscript_call_result_19231 = invoke(stypy.reporting.localization.Localization(__file__, 74, 4), getitem___19230, int_19228)
    
    # Assigning a type to the variable 'list_var_assignment_19002' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19002', subscript_call_result_19231)
    
    # Assigning a Subscript to a Name (line 74):
    
    # Obtaining the type of the subscript
    int_19232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 74, 4), 'int')
    # Getting the type of 'data' (line 74)
    data_19233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 27), 'data')
    # Obtaining the member '__getitem__' of a type (line 74)
    getitem___19234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 74, 4), data_19233, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 74)
    subscript_call_result_19235 = invoke(stypy.reporting.localization.Localization(__file__, 74, 4), getitem___19234, int_19232)
    
    # Assigning a type to the variable 'list_var_assignment_19003' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19003', subscript_call_result_19235)
    
    # Assigning a Subscript to a Name (line 74):
    
    # Obtaining the type of the subscript
    int_19236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 74, 4), 'int')
    # Getting the type of 'data' (line 74)
    data_19237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 27), 'data')
    # Obtaining the member '__getitem__' of a type (line 74)
    getitem___19238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 74, 4), data_19237, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 74)
    subscript_call_result_19239 = invoke(stypy.reporting.localization.Localization(__file__, 74, 4), getitem___19238, int_19236)
    
    # Assigning a type to the variable 'list_var_assignment_19004' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19004', subscript_call_result_19239)
    
    # Assigning a Subscript to a Name (line 74):
    
    # Obtaining the type of the subscript
    int_19240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 74, 4), 'int')
    # Getting the type of 'data' (line 74)
    data_19241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 27), 'data')
    # Obtaining the member '__getitem__' of a type (line 74)
    getitem___19242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 74, 4), data_19241, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 74)
    subscript_call_result_19243 = invoke(stypy.reporting.localization.Localization(__file__, 74, 4), getitem___19242, int_19240)
    
    # Assigning a type to the variable 'list_var_assignment_19005' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19005', subscript_call_result_19243)
    
    # Assigning a Name to a Name (line 74):
    # Getting the type of 'list_var_assignment_19001' (line 74)
    list_var_assignment_19001_19244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19001')
    # Assigning a type to the variable 'dd' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 5), 'dd', list_var_assignment_19001_19244)
    
    # Assigning a Name to a Name (line 74):
    # Getting the type of 'list_var_assignment_19002' (line 74)
    list_var_assignment_19002_19245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19002')
    # Assigning a type to the variable 'mm' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 9), 'mm', list_var_assignment_19002_19245)
    
    # Assigning a Name to a Name (line 74):
    # Getting the type of 'list_var_assignment_19003' (line 74)
    list_var_assignment_19003_19246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19003')
    # Assigning a type to the variable 'yy' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 13), 'yy', list_var_assignment_19003_19246)
    
    # Assigning a Name to a Name (line 74):
    # Getting the type of 'list_var_assignment_19004' (line 74)
    list_var_assignment_19004_19247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19004')
    # Assigning a type to the variable 'tm' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 17), 'tm', list_var_assignment_19004_19247)
    
    # Assigning a Name to a Name (line 74):
    # Getting the type of 'list_var_assignment_19005' (line 74)
    list_var_assignment_19005_19248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 74, 4), 'list_var_assignment_19005')
    # Assigning a type to the variable 'tz' (line 74)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 21), 'tz', list_var_assignment_19005_19248)
    
    # Assigning a Call to a Name (line 75):
    
    # Assigning a Call to a Name (line 75):
    
    # Call to lower(...): (line 75)
    # Processing the call keyword arguments (line 75)
    kwargs_19251 = {}
    # Getting the type of 'mm' (line 75)
    mm_19249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 9), 'mm', False)
    # Obtaining the member 'lower' of a type (line 75)
    lower_19250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 9), mm_19249, 'lower')
    # Calling lower(args, kwargs) (line 75)
    lower_call_result_19252 = invoke(stypy.reporting.localization.Localization(__file__, 75, 9), lower_19250, *[], **kwargs_19251)
    
    # Assigning a type to the variable 'mm' (line 75)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 4), 'mm', lower_call_result_19252)
    
    # Getting the type of 'mm' (line 76)
    mm_19253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 7), 'mm')
    # Getting the type of '_monthnames' (line 76)
    _monthnames_19254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 76, 17), '_monthnames')
    # Applying the binary operator 'notin' (line 76)
    result_contains_19255 = python_operator(stypy.reporting.localization.Localization(__file__, 76, 7), 'notin', mm_19253, _monthnames_19254)
    
    # Testing if the type of an if condition is none (line 76)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 76, 4), result_contains_19255):
        pass
    else:
        
        # Testing the type of an if condition (line 76)
        if_condition_19256 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 76, 4), result_contains_19255)
        # Assigning a type to the variable 'if_condition_19256' (line 76)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 76, 4), 'if_condition_19256', if_condition_19256)
        # SSA begins for if statement (line 76)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 77):
        
        # Assigning a Name to a Name (line 77):
        # Getting the type of 'mm' (line 77)
        mm_19257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 17), 'mm')
        # Assigning a type to the variable 'tuple_assignment_19006' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'tuple_assignment_19006', mm_19257)
        
        # Assigning a Call to a Name (line 77):
        
        # Call to lower(...): (line 77)
        # Processing the call keyword arguments (line 77)
        kwargs_19260 = {}
        # Getting the type of 'dd' (line 77)
        dd_19258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 21), 'dd', False)
        # Obtaining the member 'lower' of a type (line 77)
        lower_19259 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 77, 21), dd_19258, 'lower')
        # Calling lower(args, kwargs) (line 77)
        lower_call_result_19261 = invoke(stypy.reporting.localization.Localization(__file__, 77, 21), lower_19259, *[], **kwargs_19260)
        
        # Assigning a type to the variable 'tuple_assignment_19007' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'tuple_assignment_19007', lower_call_result_19261)
        
        # Assigning a Name to a Name (line 77):
        # Getting the type of 'tuple_assignment_19006' (line 77)
        tuple_assignment_19006_19262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'tuple_assignment_19006')
        # Assigning a type to the variable 'dd' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'dd', tuple_assignment_19006_19262)
        
        # Assigning a Name to a Name (line 77):
        # Getting the type of 'tuple_assignment_19007' (line 77)
        tuple_assignment_19007_19263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'tuple_assignment_19007')
        # Assigning a type to the variable 'mm' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 12), 'mm', tuple_assignment_19007_19263)
        
        # Getting the type of 'mm' (line 78)
        mm_19264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 11), 'mm')
        # Getting the type of '_monthnames' (line 78)
        _monthnames_19265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 21), '_monthnames')
        # Applying the binary operator 'notin' (line 78)
        result_contains_19266 = python_operator(stypy.reporting.localization.Localization(__file__, 78, 11), 'notin', mm_19264, _monthnames_19265)
        
        # Testing if the type of an if condition is none (line 78)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 78, 8), result_contains_19266):
            pass
        else:
            
            # Testing the type of an if condition (line 78)
            if_condition_19267 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 78, 8), result_contains_19266)
            # Assigning a type to the variable 'if_condition_19267' (line 78)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 8), 'if_condition_19267', if_condition_19267)
            # SSA begins for if statement (line 78)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'None' (line 79)
            None_19268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 19), 'None')
            # Assigning a type to the variable 'stypy_return_type' (line 79)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 12), 'stypy_return_type', None_19268)
            # SSA join for if statement (line 78)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for if statement (line 76)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a BinOp to a Name (line 80):
    
    # Assigning a BinOp to a Name (line 80):
    
    # Call to index(...): (line 80)
    # Processing the call arguments (line 80)
    # Getting the type of 'mm' (line 80)
    mm_19271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 27), 'mm', False)
    # Processing the call keyword arguments (line 80)
    kwargs_19272 = {}
    # Getting the type of '_monthnames' (line 80)
    _monthnames_19269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 9), '_monthnames', False)
    # Obtaining the member 'index' of a type (line 80)
    index_19270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 9), _monthnames_19269, 'index')
    # Calling index(args, kwargs) (line 80)
    index_call_result_19273 = invoke(stypy.reporting.localization.Localization(__file__, 80, 9), index_19270, *[mm_19271], **kwargs_19272)
    
    int_19274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 80, 33), 'int')
    # Applying the binary operator '+' (line 80)
    result_add_19275 = python_operator(stypy.reporting.localization.Localization(__file__, 80, 9), '+', index_call_result_19273, int_19274)
    
    # Assigning a type to the variable 'mm' (line 80)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 4), 'mm', result_add_19275)
    
    # Getting the type of 'mm' (line 81)
    mm_19276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 7), 'mm')
    int_19277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 12), 'int')
    # Applying the binary operator '>' (line 81)
    result_gt_19278 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 7), '>', mm_19276, int_19277)
    
    # Testing if the type of an if condition is none (line 81)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 81, 4), result_gt_19278):
        pass
    else:
        
        # Testing the type of an if condition (line 81)
        if_condition_19279 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 81, 4), result_gt_19278)
        # Assigning a type to the variable 'if_condition_19279' (line 81)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 4), 'if_condition_19279', if_condition_19279)
        # SSA begins for if statement (line 81)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'mm' (line 82)
        mm_19280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'mm')
        int_19281 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, 14), 'int')
        # Applying the binary operator '-=' (line 82)
        result_isub_19282 = python_operator(stypy.reporting.localization.Localization(__file__, 82, 8), '-=', mm_19280, int_19281)
        # Assigning a type to the variable 'mm' (line 82)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'mm', result_isub_19282)
        
        # SSA join for if statement (line 81)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Obtaining the type of the subscript
    int_19283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 10), 'int')
    # Getting the type of 'dd' (line 83)
    dd_19284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 7), 'dd')
    # Obtaining the member '__getitem__' of a type (line 83)
    getitem___19285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 83, 7), dd_19284, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 83)
    subscript_call_result_19286 = invoke(stypy.reporting.localization.Localization(__file__, 83, 7), getitem___19285, int_19283)
    
    str_19287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 83, 17), 'str', ',')
    # Applying the binary operator '==' (line 83)
    result_eq_19288 = python_operator(stypy.reporting.localization.Localization(__file__, 83, 7), '==', subscript_call_result_19286, str_19287)
    
    # Testing if the type of an if condition is none (line 83)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 83, 4), result_eq_19288):
        pass
    else:
        
        # Testing the type of an if condition (line 83)
        if_condition_19289 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 83, 4), result_eq_19288)
        # Assigning a type to the variable 'if_condition_19289' (line 83)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 4), 'if_condition_19289', if_condition_19289)
        # SSA begins for if statement (line 83)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 84):
        
        # Assigning a Subscript to a Name (line 84):
        
        # Obtaining the type of the subscript
        int_19290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 17), 'int')
        slice_19291 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 84, 13), None, int_19290, None)
        # Getting the type of 'dd' (line 84)
        dd_19292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 13), 'dd')
        # Obtaining the member '__getitem__' of a type (line 84)
        getitem___19293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 13), dd_19292, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 84)
        subscript_call_result_19294 = invoke(stypy.reporting.localization.Localization(__file__, 84, 13), getitem___19293, slice_19291)
        
        # Assigning a type to the variable 'dd' (line 84)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 8), 'dd', subscript_call_result_19294)
        # SSA join for if statement (line 83)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a Call to a Name (line 85):
    
    # Assigning a Call to a Name (line 85):
    
    # Call to find(...): (line 85)
    # Processing the call arguments (line 85)
    str_19297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 85, 16), 'str', ':')
    # Processing the call keyword arguments (line 85)
    kwargs_19298 = {}
    # Getting the type of 'yy' (line 85)
    yy_19295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 8), 'yy', False)
    # Obtaining the member 'find' of a type (line 85)
    find_19296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 85, 8), yy_19295, 'find')
    # Calling find(args, kwargs) (line 85)
    find_call_result_19299 = invoke(stypy.reporting.localization.Localization(__file__, 85, 8), find_19296, *[str_19297], **kwargs_19298)
    
    # Assigning a type to the variable 'i' (line 85)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 4), 'i', find_call_result_19299)
    
    # Getting the type of 'i' (line 86)
    i_19300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 7), 'i')
    int_19301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 11), 'int')
    # Applying the binary operator '>' (line 86)
    result_gt_19302 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 7), '>', i_19300, int_19301)
    
    # Testing if the type of an if condition is none (line 86)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 86, 4), result_gt_19302):
        pass
    else:
        
        # Testing the type of an if condition (line 86)
        if_condition_19303 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 86, 4), result_gt_19302)
        # Assigning a type to the variable 'if_condition_19303' (line 86)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 4), 'if_condition_19303', if_condition_19303)
        # SSA begins for if statement (line 86)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 87):
        
        # Assigning a Name to a Name (line 87):
        # Getting the type of 'tm' (line 87)
        tm_19304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 17), 'tm')
        # Assigning a type to the variable 'tuple_assignment_19008' (line 87)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 87, 8), 'tuple_assignment_19008', tm_19304)
        
        # Assigning a Name to a Name (line 87):
        # Getting the type of 'yy' (line 87)
        yy_19305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 21), 'yy')
        # Assigning a type to the variable 'tuple_assignment_19009' (line 87)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 87, 8), 'tuple_assignment_19009', yy_19305)
        
        # Assigning a Name to a Name (line 87):
        # Getting the type of 'tuple_assignment_19008' (line 87)
        tuple_assignment_19008_19306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 8), 'tuple_assignment_19008')
        # Assigning a type to the variable 'yy' (line 87)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 87, 8), 'yy', tuple_assignment_19008_19306)
        
        # Assigning a Name to a Name (line 87):
        # Getting the type of 'tuple_assignment_19009' (line 87)
        tuple_assignment_19009_19307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 8), 'tuple_assignment_19009')
        # Assigning a type to the variable 'tm' (line 87)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 87, 12), 'tm', tuple_assignment_19009_19307)
        # SSA join for if statement (line 86)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Obtaining the type of the subscript
    int_19308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 10), 'int')
    # Getting the type of 'yy' (line 88)
    yy_19309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 7), 'yy')
    # Obtaining the member '__getitem__' of a type (line 88)
    getitem___19310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 88, 7), yy_19309, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 88)
    subscript_call_result_19311 = invoke(stypy.reporting.localization.Localization(__file__, 88, 7), getitem___19310, int_19308)
    
    str_19312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 17), 'str', ',')
    # Applying the binary operator '==' (line 88)
    result_eq_19313 = python_operator(stypy.reporting.localization.Localization(__file__, 88, 7), '==', subscript_call_result_19311, str_19312)
    
    # Testing if the type of an if condition is none (line 88)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 88, 4), result_eq_19313):
        pass
    else:
        
        # Testing the type of an if condition (line 88)
        if_condition_19314 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 88, 4), result_eq_19313)
        # Assigning a type to the variable 'if_condition_19314' (line 88)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 4), 'if_condition_19314', if_condition_19314)
        # SSA begins for if statement (line 88)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 89):
        
        # Assigning a Subscript to a Name (line 89):
        
        # Obtaining the type of the subscript
        int_19315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 17), 'int')
        slice_19316 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 89, 13), None, int_19315, None)
        # Getting the type of 'yy' (line 89)
        yy_19317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 89, 13), 'yy')
        # Obtaining the member '__getitem__' of a type (line 89)
        getitem___19318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 89, 13), yy_19317, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 89)
        subscript_call_result_19319 = invoke(stypy.reporting.localization.Localization(__file__, 89, 13), getitem___19318, slice_19316)
        
        # Assigning a type to the variable 'yy' (line 89)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 8), 'yy', subscript_call_result_19319)
        # SSA join for if statement (line 88)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Call to isdigit(...): (line 90)
    # Processing the call keyword arguments (line 90)
    kwargs_19325 = {}
    
    # Obtaining the type of the subscript
    int_19320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 90, 14), 'int')
    # Getting the type of 'yy' (line 90)
    yy_19321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 90, 11), 'yy', False)
    # Obtaining the member '__getitem__' of a type (line 90)
    getitem___19322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 11), yy_19321, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 90)
    subscript_call_result_19323 = invoke(stypy.reporting.localization.Localization(__file__, 90, 11), getitem___19322, int_19320)
    
    # Obtaining the member 'isdigit' of a type (line 90)
    isdigit_19324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 90, 11), subscript_call_result_19323, 'isdigit')
    # Calling isdigit(args, kwargs) (line 90)
    isdigit_call_result_19326 = invoke(stypy.reporting.localization.Localization(__file__, 90, 11), isdigit_19324, *[], **kwargs_19325)
    
    # Applying the 'not' unary operator (line 90)
    result_not__19327 = python_operator(stypy.reporting.localization.Localization(__file__, 90, 7), 'not', isdigit_call_result_19326)
    
    # Testing if the type of an if condition is none (line 90)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 90, 4), result_not__19327):
        pass
    else:
        
        # Testing the type of an if condition (line 90)
        if_condition_19328 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 90, 4), result_not__19327)
        # Assigning a type to the variable 'if_condition_19328' (line 90)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 90, 4), 'if_condition_19328', if_condition_19328)
        # SSA begins for if statement (line 90)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Tuple to a Tuple (line 91):
        
        # Assigning a Name to a Name (line 91):
        # Getting the type of 'tz' (line 91)
        tz_19329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 17), 'tz')
        # Assigning a type to the variable 'tuple_assignment_19010' (line 91)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'tuple_assignment_19010', tz_19329)
        
        # Assigning a Name to a Name (line 91):
        # Getting the type of 'yy' (line 91)
        yy_19330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 21), 'yy')
        # Assigning a type to the variable 'tuple_assignment_19011' (line 91)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'tuple_assignment_19011', yy_19330)
        
        # Assigning a Name to a Name (line 91):
        # Getting the type of 'tuple_assignment_19010' (line 91)
        tuple_assignment_19010_19331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'tuple_assignment_19010')
        # Assigning a type to the variable 'yy' (line 91)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'yy', tuple_assignment_19010_19331)
        
        # Assigning a Name to a Name (line 91):
        # Getting the type of 'tuple_assignment_19011' (line 91)
        tuple_assignment_19011_19332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'tuple_assignment_19011')
        # Assigning a type to the variable 'tz' (line 91)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 12), 'tz', tuple_assignment_19011_19332)
        # SSA join for if statement (line 90)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Obtaining the type of the subscript
    int_19333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 10), 'int')
    # Getting the type of 'tm' (line 92)
    tm_19334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 7), 'tm')
    # Obtaining the member '__getitem__' of a type (line 92)
    getitem___19335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 92, 7), tm_19334, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 92)
    subscript_call_result_19336 = invoke(stypy.reporting.localization.Localization(__file__, 92, 7), getitem___19335, int_19333)
    
    str_19337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 92, 17), 'str', ',')
    # Applying the binary operator '==' (line 92)
    result_eq_19338 = python_operator(stypy.reporting.localization.Localization(__file__, 92, 7), '==', subscript_call_result_19336, str_19337)
    
    # Testing if the type of an if condition is none (line 92)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 92, 4), result_eq_19338):
        pass
    else:
        
        # Testing the type of an if condition (line 92)
        if_condition_19339 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 92, 4), result_eq_19338)
        # Assigning a type to the variable 'if_condition_19339' (line 92)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 4), 'if_condition_19339', if_condition_19339)
        # SSA begins for if statement (line 92)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 93):
        
        # Assigning a Subscript to a Name (line 93):
        
        # Obtaining the type of the subscript
        int_19340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 93, 17), 'int')
        slice_19341 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 93, 13), None, int_19340, None)
        # Getting the type of 'tm' (line 93)
        tm_19342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 13), 'tm')
        # Obtaining the member '__getitem__' of a type (line 93)
        getitem___19343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 93, 13), tm_19342, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 93)
        subscript_call_result_19344 = invoke(stypy.reporting.localization.Localization(__file__, 93, 13), getitem___19343, slice_19341)
        
        # Assigning a type to the variable 'tm' (line 93)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 8), 'tm', subscript_call_result_19344)
        # SSA join for if statement (line 92)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a Call to a Name (line 94):
    
    # Assigning a Call to a Name (line 94):
    
    # Call to split(...): (line 94)
    # Processing the call arguments (line 94)
    str_19347 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 94, 18), 'str', ':')
    # Processing the call keyword arguments (line 94)
    kwargs_19348 = {}
    # Getting the type of 'tm' (line 94)
    tm_19345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 9), 'tm', False)
    # Obtaining the member 'split' of a type (line 94)
    split_19346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 9), tm_19345, 'split')
    # Calling split(args, kwargs) (line 94)
    split_call_result_19349 = invoke(stypy.reporting.localization.Localization(__file__, 94, 9), split_19346, *[str_19347], **kwargs_19348)
    
    # Assigning a type to the variable 'tm' (line 94)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 4), 'tm', split_call_result_19349)
    
    
    # Call to len(...): (line 95)
    # Processing the call arguments (line 95)
    # Getting the type of 'tm' (line 95)
    tm_19351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 11), 'tm', False)
    # Processing the call keyword arguments (line 95)
    kwargs_19352 = {}
    # Getting the type of 'len' (line 95)
    len_19350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 7), 'len', False)
    # Calling len(args, kwargs) (line 95)
    len_call_result_19353 = invoke(stypy.reporting.localization.Localization(__file__, 95, 7), len_19350, *[tm_19351], **kwargs_19352)
    
    int_19354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 95, 18), 'int')
    # Applying the binary operator '==' (line 95)
    result_eq_19355 = python_operator(stypy.reporting.localization.Localization(__file__, 95, 7), '==', len_call_result_19353, int_19354)
    
    # Testing if the type of an if condition is none (line 95)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 95, 4), result_eq_19355):
        
        
        # Call to len(...): (line 98)
        # Processing the call arguments (line 98)
        # Getting the type of 'tm' (line 98)
        tm_19369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 13), 'tm', False)
        # Processing the call keyword arguments (line 98)
        kwargs_19370 = {}
        # Getting the type of 'len' (line 98)
        len_19368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 9), 'len', False)
        # Calling len(args, kwargs) (line 98)
        len_call_result_19371 = invoke(stypy.reporting.localization.Localization(__file__, 98, 9), len_19368, *[tm_19369], **kwargs_19370)
        
        int_19372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 20), 'int')
        # Applying the binary operator '==' (line 98)
        result_eq_19373 = python_operator(stypy.reporting.localization.Localization(__file__, 98, 9), '==', len_call_result_19371, int_19372)
        
        # Testing if the type of an if condition is none (line 98)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 98, 9), result_eq_19373):
            # Getting the type of 'None' (line 101)
            None_19390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 15), 'None')
            # Assigning a type to the variable 'stypy_return_type' (line 101)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'stypy_return_type', None_19390)
        else:
            
            # Testing the type of an if condition (line 98)
            if_condition_19374 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 98, 9), result_eq_19373)
            # Assigning a type to the variable 'if_condition_19374' (line 98)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 9), 'if_condition_19374', if_condition_19374)
            # SSA begins for if statement (line 98)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a List (line 99):
            
            # Assigning a Subscript to a Name (line 99):
            
            # Obtaining the type of the subscript
            int_19375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 8), 'int')
            # Getting the type of 'tm' (line 99)
            tm_19376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 26), 'tm')
            # Obtaining the member '__getitem__' of a type (line 99)
            getitem___19377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 8), tm_19376, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 99)
            subscript_call_result_19378 = invoke(stypy.reporting.localization.Localization(__file__, 99, 8), getitem___19377, int_19375)
            
            # Assigning a type to the variable 'list_var_assignment_19014' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19014', subscript_call_result_19378)
            
            # Assigning a Subscript to a Name (line 99):
            
            # Obtaining the type of the subscript
            int_19379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 8), 'int')
            # Getting the type of 'tm' (line 99)
            tm_19380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 26), 'tm')
            # Obtaining the member '__getitem__' of a type (line 99)
            getitem___19381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 8), tm_19380, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 99)
            subscript_call_result_19382 = invoke(stypy.reporting.localization.Localization(__file__, 99, 8), getitem___19381, int_19379)
            
            # Assigning a type to the variable 'list_var_assignment_19015' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19015', subscript_call_result_19382)
            
            # Assigning a Subscript to a Name (line 99):
            
            # Obtaining the type of the subscript
            int_19383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 8), 'int')
            # Getting the type of 'tm' (line 99)
            tm_19384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 26), 'tm')
            # Obtaining the member '__getitem__' of a type (line 99)
            getitem___19385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 8), tm_19384, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 99)
            subscript_call_result_19386 = invoke(stypy.reporting.localization.Localization(__file__, 99, 8), getitem___19385, int_19383)
            
            # Assigning a type to the variable 'list_var_assignment_19016' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19016', subscript_call_result_19386)
            
            # Assigning a Name to a Name (line 99):
            # Getting the type of 'list_var_assignment_19014' (line 99)
            list_var_assignment_19014_19387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19014')
            # Assigning a type to the variable 'thh' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 9), 'thh', list_var_assignment_19014_19387)
            
            # Assigning a Name to a Name (line 99):
            # Getting the type of 'list_var_assignment_19015' (line 99)
            list_var_assignment_19015_19388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19015')
            # Assigning a type to the variable 'tmm' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 14), 'tmm', list_var_assignment_19015_19388)
            
            # Assigning a Name to a Name (line 99):
            # Getting the type of 'list_var_assignment_19016' (line 99)
            list_var_assignment_19016_19389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19016')
            # Assigning a type to the variable 'tss' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 19), 'tss', list_var_assignment_19016_19389)
            # SSA branch for the else part of an if statement (line 98)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'None' (line 101)
            None_19390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 15), 'None')
            # Assigning a type to the variable 'stypy_return_type' (line 101)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'stypy_return_type', None_19390)
            # SSA join for if statement (line 98)
            module_type_store = module_type_store.join_ssa_context()
            

    else:
        
        # Testing the type of an if condition (line 95)
        if_condition_19356 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 95, 4), result_eq_19355)
        # Assigning a type to the variable 'if_condition_19356' (line 95)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 4), 'if_condition_19356', if_condition_19356)
        # SSA begins for if statement (line 95)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Name to a List (line 96):
        
        # Assigning a Subscript to a Name (line 96):
        
        # Obtaining the type of the subscript
        int_19357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 8), 'int')
        # Getting the type of 'tm' (line 96)
        tm_19358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 21), 'tm')
        # Obtaining the member '__getitem__' of a type (line 96)
        getitem___19359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 96, 8), tm_19358, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 96)
        subscript_call_result_19360 = invoke(stypy.reporting.localization.Localization(__file__, 96, 8), getitem___19359, int_19357)
        
        # Assigning a type to the variable 'list_var_assignment_19012' (line 96)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 8), 'list_var_assignment_19012', subscript_call_result_19360)
        
        # Assigning a Subscript to a Name (line 96):
        
        # Obtaining the type of the subscript
        int_19361 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 8), 'int')
        # Getting the type of 'tm' (line 96)
        tm_19362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 21), 'tm')
        # Obtaining the member '__getitem__' of a type (line 96)
        getitem___19363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 96, 8), tm_19362, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 96)
        subscript_call_result_19364 = invoke(stypy.reporting.localization.Localization(__file__, 96, 8), getitem___19363, int_19361)
        
        # Assigning a type to the variable 'list_var_assignment_19013' (line 96)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 8), 'list_var_assignment_19013', subscript_call_result_19364)
        
        # Assigning a Name to a Name (line 96):
        # Getting the type of 'list_var_assignment_19012' (line 96)
        list_var_assignment_19012_19365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 8), 'list_var_assignment_19012')
        # Assigning a type to the variable 'thh' (line 96)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 9), 'thh', list_var_assignment_19012_19365)
        
        # Assigning a Name to a Name (line 96):
        # Getting the type of 'list_var_assignment_19013' (line 96)
        list_var_assignment_19013_19366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 8), 'list_var_assignment_19013')
        # Assigning a type to the variable 'tmm' (line 96)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 14), 'tmm', list_var_assignment_19013_19366)
        
        # Assigning a Str to a Name (line 97):
        
        # Assigning a Str to a Name (line 97):
        str_19367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 97, 14), 'str', '0')
        # Assigning a type to the variable 'tss' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'tss', str_19367)
        # SSA branch for the else part of an if statement (line 95)
        module_type_store.open_ssa_branch('else')
        
        
        # Call to len(...): (line 98)
        # Processing the call arguments (line 98)
        # Getting the type of 'tm' (line 98)
        tm_19369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 13), 'tm', False)
        # Processing the call keyword arguments (line 98)
        kwargs_19370 = {}
        # Getting the type of 'len' (line 98)
        len_19368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 9), 'len', False)
        # Calling len(args, kwargs) (line 98)
        len_call_result_19371 = invoke(stypy.reporting.localization.Localization(__file__, 98, 9), len_19368, *[tm_19369], **kwargs_19370)
        
        int_19372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 20), 'int')
        # Applying the binary operator '==' (line 98)
        result_eq_19373 = python_operator(stypy.reporting.localization.Localization(__file__, 98, 9), '==', len_call_result_19371, int_19372)
        
        # Testing if the type of an if condition is none (line 98)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 98, 9), result_eq_19373):
            # Getting the type of 'None' (line 101)
            None_19390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 15), 'None')
            # Assigning a type to the variable 'stypy_return_type' (line 101)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'stypy_return_type', None_19390)
        else:
            
            # Testing the type of an if condition (line 98)
            if_condition_19374 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 98, 9), result_eq_19373)
            # Assigning a type to the variable 'if_condition_19374' (line 98)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 98, 9), 'if_condition_19374', if_condition_19374)
            # SSA begins for if statement (line 98)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a List (line 99):
            
            # Assigning a Subscript to a Name (line 99):
            
            # Obtaining the type of the subscript
            int_19375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 8), 'int')
            # Getting the type of 'tm' (line 99)
            tm_19376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 26), 'tm')
            # Obtaining the member '__getitem__' of a type (line 99)
            getitem___19377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 8), tm_19376, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 99)
            subscript_call_result_19378 = invoke(stypy.reporting.localization.Localization(__file__, 99, 8), getitem___19377, int_19375)
            
            # Assigning a type to the variable 'list_var_assignment_19014' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19014', subscript_call_result_19378)
            
            # Assigning a Subscript to a Name (line 99):
            
            # Obtaining the type of the subscript
            int_19379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 8), 'int')
            # Getting the type of 'tm' (line 99)
            tm_19380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 26), 'tm')
            # Obtaining the member '__getitem__' of a type (line 99)
            getitem___19381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 8), tm_19380, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 99)
            subscript_call_result_19382 = invoke(stypy.reporting.localization.Localization(__file__, 99, 8), getitem___19381, int_19379)
            
            # Assigning a type to the variable 'list_var_assignment_19015' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19015', subscript_call_result_19382)
            
            # Assigning a Subscript to a Name (line 99):
            
            # Obtaining the type of the subscript
            int_19383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 99, 8), 'int')
            # Getting the type of 'tm' (line 99)
            tm_19384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 26), 'tm')
            # Obtaining the member '__getitem__' of a type (line 99)
            getitem___19385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 99, 8), tm_19384, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 99)
            subscript_call_result_19386 = invoke(stypy.reporting.localization.Localization(__file__, 99, 8), getitem___19385, int_19383)
            
            # Assigning a type to the variable 'list_var_assignment_19016' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19016', subscript_call_result_19386)
            
            # Assigning a Name to a Name (line 99):
            # Getting the type of 'list_var_assignment_19014' (line 99)
            list_var_assignment_19014_19387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19014')
            # Assigning a type to the variable 'thh' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 9), 'thh', list_var_assignment_19014_19387)
            
            # Assigning a Name to a Name (line 99):
            # Getting the type of 'list_var_assignment_19015' (line 99)
            list_var_assignment_19015_19388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19015')
            # Assigning a type to the variable 'tmm' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 14), 'tmm', list_var_assignment_19015_19388)
            
            # Assigning a Name to a Name (line 99):
            # Getting the type of 'list_var_assignment_19016' (line 99)
            list_var_assignment_19016_19389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 8), 'list_var_assignment_19016')
            # Assigning a type to the variable 'tss' (line 99)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 99, 19), 'tss', list_var_assignment_19016_19389)
            # SSA branch for the else part of an if statement (line 98)
            module_type_store.open_ssa_branch('else')
            # Getting the type of 'None' (line 101)
            None_19390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 15), 'None')
            # Assigning a type to the variable 'stypy_return_type' (line 101)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 8), 'stypy_return_type', None_19390)
            # SSA join for if statement (line 98)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for if statement (line 95)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # SSA begins for try-except statement (line 102)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
    
    # Assigning a Call to a Name (line 103):
    
    # Assigning a Call to a Name (line 103):
    
    # Call to int(...): (line 103)
    # Processing the call arguments (line 103)
    # Getting the type of 'yy' (line 103)
    yy_19392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 17), 'yy', False)
    # Processing the call keyword arguments (line 103)
    kwargs_19393 = {}
    # Getting the type of 'int' (line 103)
    int_19391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 13), 'int', False)
    # Calling int(args, kwargs) (line 103)
    int_call_result_19394 = invoke(stypy.reporting.localization.Localization(__file__, 103, 13), int_19391, *[yy_19392], **kwargs_19393)
    
    # Assigning a type to the variable 'yy' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 8), 'yy', int_call_result_19394)
    
    # Assigning a Call to a Name (line 104):
    
    # Assigning a Call to a Name (line 104):
    
    # Call to int(...): (line 104)
    # Processing the call arguments (line 104)
    # Getting the type of 'dd' (line 104)
    dd_19396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 17), 'dd', False)
    # Processing the call keyword arguments (line 104)
    kwargs_19397 = {}
    # Getting the type of 'int' (line 104)
    int_19395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 13), 'int', False)
    # Calling int(args, kwargs) (line 104)
    int_call_result_19398 = invoke(stypy.reporting.localization.Localization(__file__, 104, 13), int_19395, *[dd_19396], **kwargs_19397)
    
    # Assigning a type to the variable 'dd' (line 104)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 8), 'dd', int_call_result_19398)
    
    # Assigning a Call to a Name (line 105):
    
    # Assigning a Call to a Name (line 105):
    
    # Call to int(...): (line 105)
    # Processing the call arguments (line 105)
    # Getting the type of 'thh' (line 105)
    thh_19400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 18), 'thh', False)
    # Processing the call keyword arguments (line 105)
    kwargs_19401 = {}
    # Getting the type of 'int' (line 105)
    int_19399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 14), 'int', False)
    # Calling int(args, kwargs) (line 105)
    int_call_result_19402 = invoke(stypy.reporting.localization.Localization(__file__, 105, 14), int_19399, *[thh_19400], **kwargs_19401)
    
    # Assigning a type to the variable 'thh' (line 105)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 105, 8), 'thh', int_call_result_19402)
    
    # Assigning a Call to a Name (line 106):
    
    # Assigning a Call to a Name (line 106):
    
    # Call to int(...): (line 106)
    # Processing the call arguments (line 106)
    # Getting the type of 'tmm' (line 106)
    tmm_19404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 18), 'tmm', False)
    # Processing the call keyword arguments (line 106)
    kwargs_19405 = {}
    # Getting the type of 'int' (line 106)
    int_19403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 14), 'int', False)
    # Calling int(args, kwargs) (line 106)
    int_call_result_19406 = invoke(stypy.reporting.localization.Localization(__file__, 106, 14), int_19403, *[tmm_19404], **kwargs_19405)
    
    # Assigning a type to the variable 'tmm' (line 106)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 106, 8), 'tmm', int_call_result_19406)
    
    # Assigning a Call to a Name (line 107):
    
    # Assigning a Call to a Name (line 107):
    
    # Call to int(...): (line 107)
    # Processing the call arguments (line 107)
    # Getting the type of 'tss' (line 107)
    tss_19408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 18), 'tss', False)
    # Processing the call keyword arguments (line 107)
    kwargs_19409 = {}
    # Getting the type of 'int' (line 107)
    int_19407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 14), 'int', False)
    # Calling int(args, kwargs) (line 107)
    int_call_result_19410 = invoke(stypy.reporting.localization.Localization(__file__, 107, 14), int_19407, *[tss_19408], **kwargs_19409)
    
    # Assigning a type to the variable 'tss' (line 107)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'tss', int_call_result_19410)
    # SSA branch for the except part of a try statement (line 102)
    # SSA branch for the except 'ValueError' branch of a try statement (line 102)
    module_type_store.open_ssa_branch('except')
    # Getting the type of 'None' (line 109)
    None_19411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 15), 'None')
    # Assigning a type to the variable 'stypy_return_type' (line 109)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 8), 'stypy_return_type', None_19411)
    # SSA join for try-except statement (line 102)
    module_type_store = module_type_store.join_ssa_context()
    
    
    # Getting the type of 'yy' (line 115)
    yy_19412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 7), 'yy')
    int_19413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 115, 12), 'int')
    # Applying the binary operator '<' (line 115)
    result_lt_19414 = python_operator(stypy.reporting.localization.Localization(__file__, 115, 7), '<', yy_19412, int_19413)
    
    # Testing if the type of an if condition is none (line 115)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 115, 4), result_lt_19414):
        pass
    else:
        
        # Testing the type of an if condition (line 115)
        if_condition_19415 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 115, 4), result_lt_19414)
        # Assigning a type to the variable 'if_condition_19415' (line 115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 4), 'if_condition_19415', if_condition_19415)
        # SSA begins for if statement (line 115)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'yy' (line 117)
        yy_19416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 11), 'yy')
        int_19417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 117, 16), 'int')
        # Applying the binary operator '>' (line 117)
        result_gt_19418 = python_operator(stypy.reporting.localization.Localization(__file__, 117, 11), '>', yy_19416, int_19417)
        
        # Testing if the type of an if condition is none (line 117)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 117, 8), result_gt_19418):
            
            # Getting the type of 'yy' (line 121)
            yy_19423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 12), 'yy')
            int_19424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 18), 'int')
            # Applying the binary operator '+=' (line 121)
            result_iadd_19425 = python_operator(stypy.reporting.localization.Localization(__file__, 121, 12), '+=', yy_19423, int_19424)
            # Assigning a type to the variable 'yy' (line 121)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 12), 'yy', result_iadd_19425)
            
        else:
            
            # Testing the type of an if condition (line 117)
            if_condition_19419 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 117, 8), result_gt_19418)
            # Assigning a type to the variable 'if_condition_19419' (line 117)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'if_condition_19419', if_condition_19419)
            # SSA begins for if statement (line 117)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'yy' (line 118)
            yy_19420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 12), 'yy')
            int_19421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 118, 18), 'int')
            # Applying the binary operator '+=' (line 118)
            result_iadd_19422 = python_operator(stypy.reporting.localization.Localization(__file__, 118, 12), '+=', yy_19420, int_19421)
            # Assigning a type to the variable 'yy' (line 118)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 118, 12), 'yy', result_iadd_19422)
            
            # SSA branch for the else part of an if statement (line 117)
            module_type_store.open_ssa_branch('else')
            
            # Getting the type of 'yy' (line 121)
            yy_19423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 12), 'yy')
            int_19424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 18), 'int')
            # Applying the binary operator '+=' (line 121)
            result_iadd_19425 = python_operator(stypy.reporting.localization.Localization(__file__, 121, 12), '+=', yy_19423, int_19424)
            # Assigning a type to the variable 'yy' (line 121)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 12), 'yy', result_iadd_19425)
            
            # SSA join for if statement (line 117)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for if statement (line 115)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a Name to a Name (line 122):
    
    # Assigning a Name to a Name (line 122):
    # Getting the type of 'None' (line 122)
    None_19426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 15), 'None')
    # Assigning a type to the variable 'tzoffset' (line 122)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 122, 4), 'tzoffset', None_19426)
    
    # Assigning a Call to a Name (line 123):
    
    # Assigning a Call to a Name (line 123):
    
    # Call to upper(...): (line 123)
    # Processing the call keyword arguments (line 123)
    kwargs_19429 = {}
    # Getting the type of 'tz' (line 123)
    tz_19427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 9), 'tz', False)
    # Obtaining the member 'upper' of a type (line 123)
    upper_19428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 9), tz_19427, 'upper')
    # Calling upper(args, kwargs) (line 123)
    upper_call_result_19430 = invoke(stypy.reporting.localization.Localization(__file__, 123, 9), upper_19428, *[], **kwargs_19429)
    
    # Assigning a type to the variable 'tz' (line 123)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 123, 4), 'tz', upper_call_result_19430)
    
    # Getting the type of 'tz' (line 124)
    tz_19431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 7), 'tz')
    # Getting the type of '_timezones' (line 124)
    _timezones_19432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 13), '_timezones')
    # Applying the binary operator 'in' (line 124)
    result_contains_19433 = python_operator(stypy.reporting.localization.Localization(__file__, 124, 7), 'in', tz_19431, _timezones_19432)
    
    # Testing if the type of an if condition is none (line 124)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 124, 4), result_contains_19433):
        
        
        # SSA begins for try-except statement (line 127)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 128):
        
        # Assigning a Call to a Name (line 128):
        
        # Call to int(...): (line 128)
        # Processing the call arguments (line 128)
        # Getting the type of 'tz' (line 128)
        tz_19440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 27), 'tz', False)
        # Processing the call keyword arguments (line 128)
        kwargs_19441 = {}
        # Getting the type of 'int' (line 128)
        int_19439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 23), 'int', False)
        # Calling int(args, kwargs) (line 128)
        int_call_result_19442 = invoke(stypy.reporting.localization.Localization(__file__, 128, 23), int_19439, *[tz_19440], **kwargs_19441)
        
        # Assigning a type to the variable 'tzoffset' (line 128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 12), 'tzoffset', int_call_result_19442)
        # SSA branch for the except part of a try statement (line 127)
        # SSA branch for the except 'ValueError' branch of a try statement (line 127)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 127)
        module_type_store = module_type_store.join_ssa_context()
        
    else:
        
        # Testing the type of an if condition (line 124)
        if_condition_19434 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 124, 4), result_contains_19433)
        # Assigning a type to the variable 'if_condition_19434' (line 124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 4), 'if_condition_19434', if_condition_19434)
        # SSA begins for if statement (line 124)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Subscript to a Name (line 125):
        
        # Assigning a Subscript to a Name (line 125):
        
        # Obtaining the type of the subscript
        # Getting the type of 'tz' (line 125)
        tz_19435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 30), 'tz')
        # Getting the type of '_timezones' (line 125)
        _timezones_19436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 19), '_timezones')
        # Obtaining the member '__getitem__' of a type (line 125)
        getitem___19437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 19), _timezones_19436, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 125)
        subscript_call_result_19438 = invoke(stypy.reporting.localization.Localization(__file__, 125, 19), getitem___19437, tz_19435)
        
        # Assigning a type to the variable 'tzoffset' (line 125)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 125, 8), 'tzoffset', subscript_call_result_19438)
        # SSA branch for the else part of an if statement (line 124)
        module_type_store.open_ssa_branch('else')
        
        
        # SSA begins for try-except statement (line 127)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Assigning a Call to a Name (line 128):
        
        # Assigning a Call to a Name (line 128):
        
        # Call to int(...): (line 128)
        # Processing the call arguments (line 128)
        # Getting the type of 'tz' (line 128)
        tz_19440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 27), 'tz', False)
        # Processing the call keyword arguments (line 128)
        kwargs_19441 = {}
        # Getting the type of 'int' (line 128)
        int_19439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 23), 'int', False)
        # Calling int(args, kwargs) (line 128)
        int_call_result_19442 = invoke(stypy.reporting.localization.Localization(__file__, 128, 23), int_19439, *[tz_19440], **kwargs_19441)
        
        # Assigning a type to the variable 'tzoffset' (line 128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 12), 'tzoffset', int_call_result_19442)
        # SSA branch for the except part of a try statement (line 127)
        # SSA branch for the except 'ValueError' branch of a try statement (line 127)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA join for try-except statement (line 127)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for if statement (line 124)
        module_type_store = module_type_store.join_ssa_context()
        

    # Getting the type of 'tzoffset' (line 132)
    tzoffset_19443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 7), 'tzoffset')
    # Testing if the type of an if condition is none (line 132)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 132, 4), tzoffset_19443):
        pass
    else:
        
        # Testing the type of an if condition (line 132)
        if_condition_19444 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 132, 4), tzoffset_19443)
        # Assigning a type to the variable 'if_condition_19444' (line 132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 4), 'if_condition_19444', if_condition_19444)
        # SSA begins for if statement (line 132)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'tzoffset' (line 133)
        tzoffset_19445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 11), 'tzoffset')
        int_19446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 22), 'int')
        # Applying the binary operator '<' (line 133)
        result_lt_19447 = python_operator(stypy.reporting.localization.Localization(__file__, 133, 11), '<', tzoffset_19445, int_19446)
        
        # Testing if the type of an if condition is none (line 133)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 133, 8), result_lt_19447):
            
            # Assigning a Num to a Name (line 137):
            
            # Assigning a Num to a Name (line 137):
            int_19452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 21), 'int')
            # Assigning a type to the variable 'tzsign' (line 137)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 12), 'tzsign', int_19452)
        else:
            
            # Testing the type of an if condition (line 133)
            if_condition_19448 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 133, 8), result_lt_19447)
            # Assigning a type to the variable 'if_condition_19448' (line 133)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 133, 8), 'if_condition_19448', if_condition_19448)
            # SSA begins for if statement (line 133)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Num to a Name (line 134):
            
            # Assigning a Num to a Name (line 134):
            int_19449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 134, 21), 'int')
            # Assigning a type to the variable 'tzsign' (line 134)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 134, 12), 'tzsign', int_19449)
            
            # Assigning a UnaryOp to a Name (line 135):
            
            # Assigning a UnaryOp to a Name (line 135):
            
            # Getting the type of 'tzoffset' (line 135)
            tzoffset_19450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 24), 'tzoffset')
            # Applying the 'usub' unary operator (line 135)
            result___neg___19451 = python_operator(stypy.reporting.localization.Localization(__file__, 135, 23), 'usub', tzoffset_19450)
            
            # Assigning a type to the variable 'tzoffset' (line 135)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 12), 'tzoffset', result___neg___19451)
            # SSA branch for the else part of an if statement (line 133)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Num to a Name (line 137):
            
            # Assigning a Num to a Name (line 137):
            int_19452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 137, 21), 'int')
            # Assigning a type to the variable 'tzsign' (line 137)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 12), 'tzsign', int_19452)
            # SSA join for if statement (line 133)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a BinOp to a Name (line 138):
        
        # Assigning a BinOp to a Name (line 138):
        # Getting the type of 'tzsign' (line 138)
        tzsign_19453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 19), 'tzsign')
        # Getting the type of 'tzoffset' (line 138)
        tzoffset_19454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 31), 'tzoffset')
        int_19455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 41), 'int')
        # Applying the binary operator '//' (line 138)
        result_floordiv_19456 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 31), '//', tzoffset_19454, int_19455)
        
        int_19457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 46), 'int')
        # Applying the binary operator '*' (line 138)
        result_mul_19458 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 30), '*', result_floordiv_19456, int_19457)
        
        # Getting the type of 'tzoffset' (line 138)
        tzoffset_19459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 54), 'tzoffset')
        int_19460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 65), 'int')
        # Applying the binary operator '%' (line 138)
        result_mod_19461 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 54), '%', tzoffset_19459, int_19460)
        
        int_19462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 70), 'int')
        # Applying the binary operator '*' (line 138)
        result_mul_19463 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 53), '*', result_mod_19461, int_19462)
        
        # Applying the binary operator '+' (line 138)
        result_add_19464 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 30), '+', result_mul_19458, result_mul_19463)
        
        # Applying the binary operator '*' (line 138)
        result_mul_19465 = python_operator(stypy.reporting.localization.Localization(__file__, 138, 19), '*', tzsign_19453, result_add_19464)
        
        # Assigning a type to the variable 'tzoffset' (line 138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 8), 'tzoffset', result_mul_19465)
        # SSA join for if statement (line 132)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Obtaining an instance of the builtin type 'tuple' (line 140)
    tuple_19466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 11), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 140)
    # Adding element type (line 140)
    # Getting the type of 'yy' (line 140)
    yy_19467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 11), 'yy')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, yy_19467)
    # Adding element type (line 140)
    # Getting the type of 'mm' (line 140)
    mm_19468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 15), 'mm')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, mm_19468)
    # Adding element type (line 140)
    # Getting the type of 'dd' (line 140)
    dd_19469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 19), 'dd')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, dd_19469)
    # Adding element type (line 140)
    # Getting the type of 'thh' (line 140)
    thh_19470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 23), 'thh')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, thh_19470)
    # Adding element type (line 140)
    # Getting the type of 'tmm' (line 140)
    tmm_19471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 28), 'tmm')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, tmm_19471)
    # Adding element type (line 140)
    # Getting the type of 'tss' (line 140)
    tss_19472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 33), 'tss')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, tss_19472)
    # Adding element type (line 140)
    int_19473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 38), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, int_19473)
    # Adding element type (line 140)
    int_19474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 41), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, int_19474)
    # Adding element type (line 140)
    int_19475 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 140, 44), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, int_19475)
    # Adding element type (line 140)
    # Getting the type of 'tzoffset' (line 140)
    tzoffset_19476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 48), 'tzoffset')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 140, 11), tuple_19466, tzoffset_19476)
    
    # Assigning a type to the variable 'stypy_return_type' (line 140)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 4), 'stypy_return_type', tuple_19466)
    
    # ################# End of 'parsedate_tz(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'parsedate_tz' in the type store
    # Getting the type of 'stypy_return_type' (line 45)
    stypy_return_type_19477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19477)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'parsedate_tz'
    return stypy_return_type_19477

# Assigning a type to the variable 'parsedate_tz' (line 45)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 0), 'parsedate_tz', parsedate_tz)

@norecursion
def parsedate(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'parsedate'
    module_type_store = module_type_store.open_function_context('parsedate', 143, 0, False)
    
    # Passed parameters checking function
    parsedate.stypy_localization = localization
    parsedate.stypy_type_of_self = None
    parsedate.stypy_type_store = module_type_store
    parsedate.stypy_function_name = 'parsedate'
    parsedate.stypy_param_names_list = ['data']
    parsedate.stypy_varargs_param_name = None
    parsedate.stypy_kwargs_param_name = None
    parsedate.stypy_call_defaults = defaults
    parsedate.stypy_call_varargs = varargs
    parsedate.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'parsedate', ['data'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'parsedate', localization, ['data'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'parsedate(...)' code ##################

    str_19478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 144, 4), 'str', 'Convert a time string to a time tuple.')
    
    # Assigning a Call to a Name (line 145):
    
    # Assigning a Call to a Name (line 145):
    
    # Call to parsedate_tz(...): (line 145)
    # Processing the call arguments (line 145)
    # Getting the type of 'data' (line 145)
    data_19480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 21), 'data', False)
    # Processing the call keyword arguments (line 145)
    kwargs_19481 = {}
    # Getting the type of 'parsedate_tz' (line 145)
    parsedate_tz_19479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'parsedate_tz', False)
    # Calling parsedate_tz(args, kwargs) (line 145)
    parsedate_tz_call_result_19482 = invoke(stypy.reporting.localization.Localization(__file__, 145, 8), parsedate_tz_19479, *[data_19480], **kwargs_19481)
    
    # Assigning a type to the variable 't' (line 145)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 't', parsedate_tz_call_result_19482)
    
    # Type idiom detected: calculating its left and rigth part (line 146)
    # Getting the type of 'tuple' (line 146)
    tuple_19483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 21), 'tuple')
    # Getting the type of 't' (line 146)
    t_19484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 18), 't')
    
    (may_be_19485, more_types_in_union_19486) = may_be_subtype(tuple_19483, t_19484)

    if may_be_19485:

        if more_types_in_union_19486:
            # Runtime conditional SSA (line 146)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        # Assigning a type to the variable 't' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 't', remove_not_subtype_from_union(t_19484, tuple))
        
        # Obtaining the type of the subscript
        int_19487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 18), 'int')
        slice_19488 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 147, 15), None, int_19487, None)
        # Getting the type of 't' (line 147)
        t_19489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 15), 't')
        # Obtaining the member '__getitem__' of a type (line 147)
        getitem___19490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 147, 15), t_19489, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 147)
        subscript_call_result_19491 = invoke(stypy.reporting.localization.Localization(__file__, 147, 15), getitem___19490, slice_19488)
        
        # Assigning a type to the variable 'stypy_return_type' (line 147)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 8), 'stypy_return_type', subscript_call_result_19491)

        if more_types_in_union_19486:
            # Runtime conditional SSA for else branch (line 146)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_19485) or more_types_in_union_19486):
        # Assigning a type to the variable 't' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 't', remove_subtype_from_union(t_19484, tuple))
        # Getting the type of 't' (line 149)
        t_19492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 15), 't')
        # Assigning a type to the variable 'stypy_return_type' (line 149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 149, 8), 'stypy_return_type', t_19492)

        if (may_be_19485 and more_types_in_union_19486):
            # SSA join for if statement (line 146)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # ################# End of 'parsedate(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'parsedate' in the type store
    # Getting the type of 'stypy_return_type' (line 143)
    stypy_return_type_19493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19493)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'parsedate'
    return stypy_return_type_19493

# Assigning a type to the variable 'parsedate' (line 143)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 0), 'parsedate', parsedate)

@norecursion
def mktime_tz(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'mktime_tz'
    module_type_store = module_type_store.open_function_context('mktime_tz', 152, 0, False)
    
    # Passed parameters checking function
    mktime_tz.stypy_localization = localization
    mktime_tz.stypy_type_of_self = None
    mktime_tz.stypy_type_store = module_type_store
    mktime_tz.stypy_function_name = 'mktime_tz'
    mktime_tz.stypy_param_names_list = ['data']
    mktime_tz.stypy_varargs_param_name = None
    mktime_tz.stypy_kwargs_param_name = None
    mktime_tz.stypy_call_defaults = defaults
    mktime_tz.stypy_call_varargs = varargs
    mktime_tz.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'mktime_tz', ['data'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'mktime_tz', localization, ['data'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'mktime_tz(...)' code ##################

    str_19494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 153, 4), 'str', 'Turn a 10-tuple as returned by parsedate_tz() into a POSIX timestamp.')
    
    # Type idiom detected: calculating its left and rigth part (line 154)
    
    # Obtaining the type of the subscript
    int_19495 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 12), 'int')
    # Getting the type of 'data' (line 154)
    data_19496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 7), 'data')
    # Obtaining the member '__getitem__' of a type (line 154)
    getitem___19497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 7), data_19496, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 154)
    subscript_call_result_19498 = invoke(stypy.reporting.localization.Localization(__file__, 154, 7), getitem___19497, int_19495)
    
    # Getting the type of 'None' (line 154)
    None_19499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 18), 'None')
    
    (may_be_19500, more_types_in_union_19501) = may_be_none(subscript_call_result_19498, None_19499)

    if may_be_19500:

        if more_types_in_union_19501:
            # Runtime conditional SSA (line 154)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
        else:
            module_type_store = module_type_store

        
        # Call to mktime(...): (line 156)
        # Processing the call arguments (line 156)
        
        # Obtaining the type of the subscript
        int_19504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 33), 'int')
        slice_19505 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 156, 27), None, int_19504, None)
        # Getting the type of 'data' (line 156)
        data_19506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 27), 'data', False)
        # Obtaining the member '__getitem__' of a type (line 156)
        getitem___19507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 27), data_19506, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 156)
        subscript_call_result_19508 = invoke(stypy.reporting.localization.Localization(__file__, 156, 27), getitem___19507, slice_19505)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 156)
        tuple_19509 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 39), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 156)
        # Adding element type (line 156)
        int_19510 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 156, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 156, 39), tuple_19509, int_19510)
        
        # Applying the binary operator '+' (line 156)
        result_add_19511 = python_operator(stypy.reporting.localization.Localization(__file__, 156, 27), '+', subscript_call_result_19508, tuple_19509)
        
        # Processing the call keyword arguments (line 156)
        kwargs_19512 = {}
        # Getting the type of 'time' (line 156)
        time_19502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 15), 'time', False)
        # Obtaining the member 'mktime' of a type (line 156)
        mktime_19503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 15), time_19502, 'mktime')
        # Calling mktime(args, kwargs) (line 156)
        mktime_call_result_19513 = invoke(stypy.reporting.localization.Localization(__file__, 156, 15), mktime_19503, *[result_add_19511], **kwargs_19512)
        
        # Assigning a type to the variable 'stypy_return_type' (line 156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 156, 8), 'stypy_return_type', mktime_call_result_19513)

        if more_types_in_union_19501:
            # Runtime conditional SSA for else branch (line 154)
            module_type_store.open_ssa_branch('idiom else')



    if ((not may_be_19500) or more_types_in_union_19501):
        
        # Assigning a Call to a Name (line 158):
        
        # Assigning a Call to a Name (line 158):
        
        # Call to timegm(...): (line 158)
        # Processing the call arguments (line 158)
        # Getting the type of 'data' (line 158)
        data_19516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 28), 'data', False)
        # Processing the call keyword arguments (line 158)
        kwargs_19517 = {}
        # Getting the type of 'calendar' (line 158)
        calendar_19514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 12), 'calendar', False)
        # Obtaining the member 'timegm' of a type (line 158)
        timegm_19515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 12), calendar_19514, 'timegm')
        # Calling timegm(args, kwargs) (line 158)
        timegm_call_result_19518 = invoke(stypy.reporting.localization.Localization(__file__, 158, 12), timegm_19515, *[data_19516], **kwargs_19517)
        
        # Assigning a type to the variable 't' (line 158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 158, 8), 't', timegm_call_result_19518)
        # Getting the type of 't' (line 159)
        t_19519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 15), 't')
        
        # Obtaining the type of the subscript
        int_19520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 159, 24), 'int')
        # Getting the type of 'data' (line 159)
        data_19521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 19), 'data')
        # Obtaining the member '__getitem__' of a type (line 159)
        getitem___19522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 19), data_19521, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 159)
        subscript_call_result_19523 = invoke(stypy.reporting.localization.Localization(__file__, 159, 19), getitem___19522, int_19520)
        
        # Applying the binary operator '-' (line 159)
        result_sub_19524 = python_operator(stypy.reporting.localization.Localization(__file__, 159, 15), '-', t_19519, subscript_call_result_19523)
        
        # Assigning a type to the variable 'stypy_return_type' (line 159)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 'stypy_return_type', result_sub_19524)

        if (may_be_19500 and more_types_in_union_19501):
            # SSA join for if statement (line 154)
            module_type_store = module_type_store.join_ssa_context()


    
    
    # ################# End of 'mktime_tz(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'mktime_tz' in the type store
    # Getting the type of 'stypy_return_type' (line 152)
    stypy_return_type_19525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19525)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'mktime_tz'
    return stypy_return_type_19525

# Assigning a type to the variable 'mktime_tz' (line 152)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 152, 0), 'mktime_tz', mktime_tz)

@norecursion
def quote(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'quote'
    module_type_store = module_type_store.open_function_context('quote', 162, 0, False)
    
    # Passed parameters checking function
    quote.stypy_localization = localization
    quote.stypy_type_of_self = None
    quote.stypy_type_store = module_type_store
    quote.stypy_function_name = 'quote'
    quote.stypy_param_names_list = ['str']
    quote.stypy_varargs_param_name = None
    quote.stypy_kwargs_param_name = None
    quote.stypy_call_defaults = defaults
    quote.stypy_call_varargs = varargs
    quote.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'quote', ['str'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'quote', localization, ['str'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'quote(...)' code ##################

    str_19526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 168, (-1)), 'str', 'Prepare string to be used in a quoted string.\n\n    Turns backslash and double quote characters into quoted pairs.  These\n    are the only characters that need to be quoted inside a quoted string.\n    Does not add the surrounding double quotes.\n    ')
    
    # Call to replace(...): (line 169)
    # Processing the call arguments (line 169)
    str_19534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 45), 'str', '"')
    str_19535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 50), 'str', '\\"')
    # Processing the call keyword arguments (line 169)
    kwargs_19536 = {}
    
    # Call to replace(...): (line 169)
    # Processing the call arguments (line 169)
    str_19529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 23), 'str', '\\')
    str_19530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 29), 'str', '\\\\')
    # Processing the call keyword arguments (line 169)
    kwargs_19531 = {}
    # Getting the type of 'str' (line 169)
    str_19527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 169, 11), 'str', False)
    # Obtaining the member 'replace' of a type (line 169)
    replace_19528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 169, 11), str_19527, 'replace')
    # Calling replace(args, kwargs) (line 169)
    replace_call_result_19532 = invoke(stypy.reporting.localization.Localization(__file__, 169, 11), replace_19528, *[str_19529, str_19530], **kwargs_19531)
    
    # Obtaining the member 'replace' of a type (line 169)
    replace_19533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 169, 11), replace_call_result_19532, 'replace')
    # Calling replace(args, kwargs) (line 169)
    replace_call_result_19537 = invoke(stypy.reporting.localization.Localization(__file__, 169, 11), replace_19533, *[str_19534, str_19535], **kwargs_19536)
    
    # Assigning a type to the variable 'stypy_return_type' (line 169)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 4), 'stypy_return_type', replace_call_result_19537)
    
    # ################# End of 'quote(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'quote' in the type store
    # Getting the type of 'stypy_return_type' (line 162)
    stypy_return_type_19538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_19538)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'quote'
    return stypy_return_type_19538

# Assigning a type to the variable 'quote' (line 162)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 162, 0), 'quote', quote)
# Declaration of the 'AddrlistClass' class

class AddrlistClass:
    str_19539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, (-1)), 'str', 'Address parser class by Ben Escoto.\n\n    To understand what this class does, it helps to have a copy of RFC 2822 in\n    front of you.\n\n    Note: this class interface is deprecated and may be removed in the future.\n    Use rfc822.AddressList instead.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 182, 4, False)
        # Assigning a type to the variable 'self' (line 183)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 183, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.__init__', ['field'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['field'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        str_19540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, (-1)), 'str', "Initialize a new instance.\n\n        `field' is an unparsed address header field, containing\n        one or more addresses.\n        ")
        
        # Assigning a Str to a Attribute (line 188):
        
        # Assigning a Str to a Attribute (line 188):
        str_19541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 24), 'str', '()<>@,:;."[]')
        # Getting the type of 'self' (line 188)
        self_19542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'self')
        # Setting the type of the member 'specials' of a type (line 188)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 8), self_19542, 'specials', str_19541)
        
        # Assigning a Num to a Attribute (line 189):
        
        # Assigning a Num to a Attribute (line 189):
        int_19543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 19), 'int')
        # Getting the type of 'self' (line 189)
        self_19544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'self')
        # Setting the type of the member 'pos' of a type (line 189)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 8), self_19544, 'pos', int_19543)
        
        # Assigning a Str to a Attribute (line 190):
        
        # Assigning a Str to a Attribute (line 190):
        str_19545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 190, 19), 'str', ' \t')
        # Getting the type of 'self' (line 190)
        self_19546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'self')
        # Setting the type of the member 'LWS' of a type (line 190)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 8), self_19546, 'LWS', str_19545)
        
        # Assigning a Str to a Attribute (line 191):
        
        # Assigning a Str to a Attribute (line 191):
        str_19547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 191, 18), 'str', '\r\n')
        # Getting the type of 'self' (line 191)
        self_19548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 8), 'self')
        # Setting the type of the member 'CR' of a type (line 191)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 8), self_19548, 'CR', str_19547)
        
        # Assigning a BinOp to a Attribute (line 192):
        
        # Assigning a BinOp to a Attribute (line 192):
        # Getting the type of 'self' (line 192)
        self_19549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 19), 'self')
        # Obtaining the member 'LWS' of a type (line 192)
        LWS_19550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 19), self_19549, 'LWS')
        # Getting the type of 'self' (line 192)
        self_19551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 30), 'self')
        # Obtaining the member 'CR' of a type (line 192)
        CR_19552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 30), self_19551, 'CR')
        # Applying the binary operator '+' (line 192)
        result_add_19553 = python_operator(stypy.reporting.localization.Localization(__file__, 192, 19), '+', LWS_19550, CR_19552)
        
        # Getting the type of 'self' (line 192)
        self_19554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 8), 'self')
        # Setting the type of the member 'FWS' of a type (line 192)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 8), self_19554, 'FWS', result_add_19553)
        
        # Assigning a BinOp to a Attribute (line 193):
        
        # Assigning a BinOp to a Attribute (line 193):
        # Getting the type of 'self' (line 193)
        self_19555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 24), 'self')
        # Obtaining the member 'specials' of a type (line 193)
        specials_19556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 24), self_19555, 'specials')
        # Getting the type of 'self' (line 193)
        self_19557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 40), 'self')
        # Obtaining the member 'LWS' of a type (line 193)
        LWS_19558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 40), self_19557, 'LWS')
        # Applying the binary operator '+' (line 193)
        result_add_19559 = python_operator(stypy.reporting.localization.Localization(__file__, 193, 24), '+', specials_19556, LWS_19558)
        
        # Getting the type of 'self' (line 193)
        self_19560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 51), 'self')
        # Obtaining the member 'CR' of a type (line 193)
        CR_19561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 51), self_19560, 'CR')
        # Applying the binary operator '+' (line 193)
        result_add_19562 = python_operator(stypy.reporting.localization.Localization(__file__, 193, 49), '+', result_add_19559, CR_19561)
        
        # Getting the type of 'self' (line 193)
        self_19563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 8), 'self')
        # Setting the type of the member 'atomends' of a type (line 193)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 8), self_19563, 'atomends', result_add_19562)
        
        # Assigning a Call to a Attribute (line 197):
        
        # Assigning a Call to a Attribute (line 197):
        
        # Call to replace(...): (line 197)
        # Processing the call arguments (line 197)
        str_19567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 48), 'str', '.')
        str_19568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 53), 'str', '')
        # Processing the call keyword arguments (line 197)
        kwargs_19569 = {}
        # Getting the type of 'self' (line 197)
        self_19564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 26), 'self', False)
        # Obtaining the member 'atomends' of a type (line 197)
        atomends_19565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 26), self_19564, 'atomends')
        # Obtaining the member 'replace' of a type (line 197)
        replace_19566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 26), atomends_19565, 'replace')
        # Calling replace(args, kwargs) (line 197)
        replace_call_result_19570 = invoke(stypy.reporting.localization.Localization(__file__, 197, 26), replace_19566, *[str_19567, str_19568], **kwargs_19569)
        
        # Getting the type of 'self' (line 197)
        self_19571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'self')
        # Setting the type of the member 'phraseends' of a type (line 197)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 8), self_19571, 'phraseends', replace_call_result_19570)
        
        # Assigning a Name to a Attribute (line 198):
        
        # Assigning a Name to a Attribute (line 198):
        # Getting the type of 'field' (line 198)
        field_19572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 21), 'field')
        # Getting the type of 'self' (line 198)
        self_19573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'self')
        # Setting the type of the member 'field' of a type (line 198)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 8), self_19573, 'field', field_19572)
        
        # Assigning a List to a Attribute (line 199):
        
        # Assigning a List to a Attribute (line 199):
        
        # Obtaining an instance of the builtin type 'list' (line 199)
        list_19574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 199, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 199)
        
        # Getting the type of 'self' (line 199)
        self_19575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'self')
        # Setting the type of the member 'commentlist' of a type (line 199)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 8), self_19575, 'commentlist', list_19574)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def gotonext(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'gotonext'
        module_type_store = module_type_store.open_function_context('gotonext', 201, 4, False)
        # Assigning a type to the variable 'self' (line 202)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.gotonext')
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.gotonext.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.gotonext', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'gotonext', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'gotonext(...)' code ##################

        str_19576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 202, 8), 'str', 'Parse up to the start of the next address.')
        
        
        # Getting the type of 'self' (line 203)
        self_19577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 14), 'self')
        # Obtaining the member 'pos' of a type (line 203)
        pos_19578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 14), self_19577, 'pos')
        
        # Call to len(...): (line 203)
        # Processing the call arguments (line 203)
        # Getting the type of 'self' (line 203)
        self_19580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 203)
        field_19581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 203, 29), self_19580, 'field')
        # Processing the call keyword arguments (line 203)
        kwargs_19582 = {}
        # Getting the type of 'len' (line 203)
        len_19579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 25), 'len', False)
        # Calling len(args, kwargs) (line 203)
        len_call_result_19583 = invoke(stypy.reporting.localization.Localization(__file__, 203, 25), len_19579, *[field_19581], **kwargs_19582)
        
        # Applying the binary operator '<' (line 203)
        result_lt_19584 = python_operator(stypy.reporting.localization.Localization(__file__, 203, 14), '<', pos_19578, len_call_result_19583)
        
        # Assigning a type to the variable 'result_lt_19584' (line 203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 8), 'result_lt_19584', result_lt_19584)
        # Testing if the while is going to be iterated (line 203)
        # Testing the type of an if condition (line 203)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 203, 8), result_lt_19584)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 203, 8), result_lt_19584):
            # SSA begins for while statement (line 203)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'self' (line 204)
            self_19585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 26), 'self')
            # Obtaining the member 'pos' of a type (line 204)
            pos_19586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 26), self_19585, 'pos')
            # Getting the type of 'self' (line 204)
            self_19587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 15), 'self')
            # Obtaining the member 'field' of a type (line 204)
            field_19588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 15), self_19587, 'field')
            # Obtaining the member '__getitem__' of a type (line 204)
            getitem___19589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 15), field_19588, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 204)
            subscript_call_result_19590 = invoke(stypy.reporting.localization.Localization(__file__, 204, 15), getitem___19589, pos_19586)
            
            # Getting the type of 'self' (line 204)
            self_19591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 39), 'self')
            # Obtaining the member 'LWS' of a type (line 204)
            LWS_19592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 204, 39), self_19591, 'LWS')
            str_19593 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 50), 'str', '\n\r')
            # Applying the binary operator '+' (line 204)
            result_add_19594 = python_operator(stypy.reporting.localization.Localization(__file__, 204, 39), '+', LWS_19592, str_19593)
            
            # Applying the binary operator 'in' (line 204)
            result_contains_19595 = python_operator(stypy.reporting.localization.Localization(__file__, 204, 15), 'in', subscript_call_result_19590, result_add_19594)
            
            # Testing if the type of an if condition is none (line 204)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 204, 12), result_contains_19595):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 206)
                self_19602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 28), 'self')
                # Obtaining the member 'pos' of a type (line 206)
                pos_19603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 28), self_19602, 'pos')
                # Getting the type of 'self' (line 206)
                self_19604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 17), 'self')
                # Obtaining the member 'field' of a type (line 206)
                field_19605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 17), self_19604, 'field')
                # Obtaining the member '__getitem__' of a type (line 206)
                getitem___19606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 17), field_19605, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 206)
                subscript_call_result_19607 = invoke(stypy.reporting.localization.Localization(__file__, 206, 17), getitem___19606, pos_19603)
                
                str_19608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 41), 'str', '(')
                # Applying the binary operator '==' (line 206)
                result_eq_19609 = python_operator(stypy.reporting.localization.Localization(__file__, 206, 17), '==', subscript_call_result_19607, str_19608)
                
                # Testing if the type of an if condition is none (line 206)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 206, 17), result_eq_19609):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 206)
                    if_condition_19610 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 206, 17), result_eq_19609)
                    # Assigning a type to the variable 'if_condition_19610' (line 206)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 17), 'if_condition_19610', if_condition_19610)
                    # SSA begins for if statement (line 206)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 207)
                    # Processing the call arguments (line 207)
                    
                    # Call to getcomment(...): (line 207)
                    # Processing the call keyword arguments (line 207)
                    kwargs_19616 = {}
                    # Getting the type of 'self' (line 207)
                    self_19614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 40), 'self', False)
                    # Obtaining the member 'getcomment' of a type (line 207)
                    getcomment_19615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 40), self_19614, 'getcomment')
                    # Calling getcomment(args, kwargs) (line 207)
                    getcomment_call_result_19617 = invoke(stypy.reporting.localization.Localization(__file__, 207, 40), getcomment_19615, *[], **kwargs_19616)
                    
                    # Processing the call keyword arguments (line 207)
                    kwargs_19618 = {}
                    # Getting the type of 'self' (line 207)
                    self_19611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 16), 'self', False)
                    # Obtaining the member 'commentlist' of a type (line 207)
                    commentlist_19612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 16), self_19611, 'commentlist')
                    # Obtaining the member 'append' of a type (line 207)
                    append_19613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 16), commentlist_19612, 'append')
                    # Calling append(args, kwargs) (line 207)
                    append_call_result_19619 = invoke(stypy.reporting.localization.Localization(__file__, 207, 16), append_19613, *[getcomment_call_result_19617], **kwargs_19618)
                    
                    # SSA branch for the else part of an if statement (line 206)
                    module_type_store.open_ssa_branch('else')
                    # SSA join for if statement (line 206)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 204)
                if_condition_19596 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 204, 12), result_contains_19595)
                # Assigning a type to the variable 'if_condition_19596' (line 204)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 12), 'if_condition_19596', if_condition_19596)
                # SSA begins for if statement (line 204)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Getting the type of 'self' (line 205)
                self_19597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 16), 'self')
                # Obtaining the member 'pos' of a type (line 205)
                pos_19598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 16), self_19597, 'pos')
                int_19599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 205, 28), 'int')
                # Applying the binary operator '+=' (line 205)
                result_iadd_19600 = python_operator(stypy.reporting.localization.Localization(__file__, 205, 16), '+=', pos_19598, int_19599)
                # Getting the type of 'self' (line 205)
                self_19601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 205, 16), 'self')
                # Setting the type of the member 'pos' of a type (line 205)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 205, 16), self_19601, 'pos', result_iadd_19600)
                
                # SSA branch for the else part of an if statement (line 204)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 206)
                self_19602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 28), 'self')
                # Obtaining the member 'pos' of a type (line 206)
                pos_19603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 28), self_19602, 'pos')
                # Getting the type of 'self' (line 206)
                self_19604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 17), 'self')
                # Obtaining the member 'field' of a type (line 206)
                field_19605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 17), self_19604, 'field')
                # Obtaining the member '__getitem__' of a type (line 206)
                getitem___19606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 17), field_19605, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 206)
                subscript_call_result_19607 = invoke(stypy.reporting.localization.Localization(__file__, 206, 17), getitem___19606, pos_19603)
                
                str_19608 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 206, 41), 'str', '(')
                # Applying the binary operator '==' (line 206)
                result_eq_19609 = python_operator(stypy.reporting.localization.Localization(__file__, 206, 17), '==', subscript_call_result_19607, str_19608)
                
                # Testing if the type of an if condition is none (line 206)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 206, 17), result_eq_19609):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 206)
                    if_condition_19610 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 206, 17), result_eq_19609)
                    # Assigning a type to the variable 'if_condition_19610' (line 206)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 17), 'if_condition_19610', if_condition_19610)
                    # SSA begins for if statement (line 206)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 207)
                    # Processing the call arguments (line 207)
                    
                    # Call to getcomment(...): (line 207)
                    # Processing the call keyword arguments (line 207)
                    kwargs_19616 = {}
                    # Getting the type of 'self' (line 207)
                    self_19614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 40), 'self', False)
                    # Obtaining the member 'getcomment' of a type (line 207)
                    getcomment_19615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 40), self_19614, 'getcomment')
                    # Calling getcomment(args, kwargs) (line 207)
                    getcomment_call_result_19617 = invoke(stypy.reporting.localization.Localization(__file__, 207, 40), getcomment_19615, *[], **kwargs_19616)
                    
                    # Processing the call keyword arguments (line 207)
                    kwargs_19618 = {}
                    # Getting the type of 'self' (line 207)
                    self_19611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 16), 'self', False)
                    # Obtaining the member 'commentlist' of a type (line 207)
                    commentlist_19612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 16), self_19611, 'commentlist')
                    # Obtaining the member 'append' of a type (line 207)
                    append_19613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 16), commentlist_19612, 'append')
                    # Calling append(args, kwargs) (line 207)
                    append_call_result_19619 = invoke(stypy.reporting.localization.Localization(__file__, 207, 16), append_19613, *[getcomment_call_result_19617], **kwargs_19618)
                    
                    # SSA branch for the else part of an if statement (line 206)
                    module_type_store.open_ssa_branch('else')
                    # SSA join for if statement (line 206)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 204)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for while statement (line 203)
            module_type_store = module_type_store.join_ssa_context()

        
        
        # ################# End of 'gotonext(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'gotonext' in the type store
        # Getting the type of 'stypy_return_type' (line 201)
        stypy_return_type_19620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19620)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'gotonext'
        return stypy_return_type_19620


    @norecursion
    def getaddrlist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getaddrlist'
        module_type_store = module_type_store.open_function_context('getaddrlist', 211, 4, False)
        # Assigning a type to the variable 'self' (line 212)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 212, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getaddrlist')
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getaddrlist.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getaddrlist', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getaddrlist', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getaddrlist(...)' code ##################

        str_19621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 215, (-1)), 'str', 'Parse all addresses.\n\n        Returns a list containing all of the addresses.\n        ')
        
        # Assigning a List to a Name (line 216):
        
        # Assigning a List to a Name (line 216):
        
        # Obtaining an instance of the builtin type 'list' (line 216)
        list_19622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 216)
        
        # Assigning a type to the variable 'result' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'result', list_19622)
        
        
        # Getting the type of 'self' (line 217)
        self_19623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 14), 'self')
        # Obtaining the member 'pos' of a type (line 217)
        pos_19624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 14), self_19623, 'pos')
        
        # Call to len(...): (line 217)
        # Processing the call arguments (line 217)
        # Getting the type of 'self' (line 217)
        self_19626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 217)
        field_19627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 29), self_19626, 'field')
        # Processing the call keyword arguments (line 217)
        kwargs_19628 = {}
        # Getting the type of 'len' (line 217)
        len_19625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 25), 'len', False)
        # Calling len(args, kwargs) (line 217)
        len_call_result_19629 = invoke(stypy.reporting.localization.Localization(__file__, 217, 25), len_19625, *[field_19627], **kwargs_19628)
        
        # Applying the binary operator '<' (line 217)
        result_lt_19630 = python_operator(stypy.reporting.localization.Localization(__file__, 217, 14), '<', pos_19624, len_call_result_19629)
        
        # Assigning a type to the variable 'result_lt_19630' (line 217)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), 'result_lt_19630', result_lt_19630)
        # Testing if the while is going to be iterated (line 217)
        # Testing the type of an if condition (line 217)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 217, 8), result_lt_19630)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 217, 8), result_lt_19630):
            # SSA begins for while statement (line 217)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Assigning a Call to a Name (line 218):
            
            # Assigning a Call to a Name (line 218):
            
            # Call to getaddress(...): (line 218)
            # Processing the call keyword arguments (line 218)
            kwargs_19633 = {}
            # Getting the type of 'self' (line 218)
            self_19631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 17), 'self', False)
            # Obtaining the member 'getaddress' of a type (line 218)
            getaddress_19632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 17), self_19631, 'getaddress')
            # Calling getaddress(args, kwargs) (line 218)
            getaddress_call_result_19634 = invoke(stypy.reporting.localization.Localization(__file__, 218, 17), getaddress_19632, *[], **kwargs_19633)
            
            # Assigning a type to the variable 'ad' (line 218)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 12), 'ad', getaddress_call_result_19634)
            # Getting the type of 'ad' (line 219)
            ad_19635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 15), 'ad')
            # Testing if the type of an if condition is none (line 219)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 219, 12), ad_19635):
                
                # Call to append(...): (line 222)
                # Processing the call arguments (line 222)
                
                # Obtaining an instance of the builtin type 'tuple' (line 222)
                tuple_19642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 31), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 222)
                # Adding element type (line 222)
                str_19643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 31), 'str', '')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 31), tuple_19642, str_19643)
                # Adding element type (line 222)
                str_19644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 35), 'str', '')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 31), tuple_19642, str_19644)
                
                # Processing the call keyword arguments (line 222)
                kwargs_19645 = {}
                # Getting the type of 'result' (line 222)
                result_19640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 16), 'result', False)
                # Obtaining the member 'append' of a type (line 222)
                append_19641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 16), result_19640, 'append')
                # Calling append(args, kwargs) (line 222)
                append_call_result_19646 = invoke(stypy.reporting.localization.Localization(__file__, 222, 16), append_19641, *[tuple_19642], **kwargs_19645)
                
            else:
                
                # Testing the type of an if condition (line 219)
                if_condition_19636 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 219, 12), ad_19635)
                # Assigning a type to the variable 'if_condition_19636' (line 219)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 12), 'if_condition_19636', if_condition_19636)
                # SSA begins for if statement (line 219)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Getting the type of 'result' (line 220)
                result_19637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 16), 'result')
                # Getting the type of 'ad' (line 220)
                ad_19638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 26), 'ad')
                # Applying the binary operator '+=' (line 220)
                result_iadd_19639 = python_operator(stypy.reporting.localization.Localization(__file__, 220, 16), '+=', result_19637, ad_19638)
                # Assigning a type to the variable 'result' (line 220)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 16), 'result', result_iadd_19639)
                
                # SSA branch for the else part of an if statement (line 219)
                module_type_store.open_ssa_branch('else')
                
                # Call to append(...): (line 222)
                # Processing the call arguments (line 222)
                
                # Obtaining an instance of the builtin type 'tuple' (line 222)
                tuple_19642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 31), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 222)
                # Adding element type (line 222)
                str_19643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 31), 'str', '')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 31), tuple_19642, str_19643)
                # Adding element type (line 222)
                str_19644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 222, 35), 'str', '')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 31), tuple_19642, str_19644)
                
                # Processing the call keyword arguments (line 222)
                kwargs_19645 = {}
                # Getting the type of 'result' (line 222)
                result_19640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 16), 'result', False)
                # Obtaining the member 'append' of a type (line 222)
                append_19641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 16), result_19640, 'append')
                # Calling append(args, kwargs) (line 222)
                append_call_result_19646 = invoke(stypy.reporting.localization.Localization(__file__, 222, 16), append_19641, *[tuple_19642], **kwargs_19645)
                
                # SSA join for if statement (line 219)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for while statement (line 217)
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'result' (line 223)
        result_19647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 15), 'result')
        # Assigning a type to the variable 'stypy_return_type' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 8), 'stypy_return_type', result_19647)
        
        # ################# End of 'getaddrlist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getaddrlist' in the type store
        # Getting the type of 'stypy_return_type' (line 211)
        stypy_return_type_19648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19648)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getaddrlist'
        return stypy_return_type_19648


    @norecursion
    def getaddress(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getaddress'
        module_type_store = module_type_store.open_function_context('getaddress', 225, 4, False)
        # Assigning a type to the variable 'self' (line 226)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getaddress')
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getaddress.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getaddress', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getaddress', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getaddress(...)' code ##################

        str_19649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 226, 8), 'str', 'Parse the next address.')
        
        # Assigning a List to a Attribute (line 227):
        
        # Assigning a List to a Attribute (line 227):
        
        # Obtaining an instance of the builtin type 'list' (line 227)
        list_19650 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 227)
        
        # Getting the type of 'self' (line 227)
        self_19651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'self')
        # Setting the type of the member 'commentlist' of a type (line 227)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 8), self_19651, 'commentlist', list_19650)
        
        # Call to gotonext(...): (line 228)
        # Processing the call keyword arguments (line 228)
        kwargs_19654 = {}
        # Getting the type of 'self' (line 228)
        self_19652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'self', False)
        # Obtaining the member 'gotonext' of a type (line 228)
        gotonext_19653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 8), self_19652, 'gotonext')
        # Calling gotonext(args, kwargs) (line 228)
        gotonext_call_result_19655 = invoke(stypy.reporting.localization.Localization(__file__, 228, 8), gotonext_19653, *[], **kwargs_19654)
        
        
        # Assigning a Attribute to a Name (line 230):
        
        # Assigning a Attribute to a Name (line 230):
        # Getting the type of 'self' (line 230)
        self_19656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 17), 'self')
        # Obtaining the member 'pos' of a type (line 230)
        pos_19657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 17), self_19656, 'pos')
        # Assigning a type to the variable 'oldpos' (line 230)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 230, 8), 'oldpos', pos_19657)
        
        # Assigning a Attribute to a Name (line 231):
        
        # Assigning a Attribute to a Name (line 231):
        # Getting the type of 'self' (line 231)
        self_19658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 231, 16), 'self')
        # Obtaining the member 'commentlist' of a type (line 231)
        commentlist_19659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 231, 16), self_19658, 'commentlist')
        # Assigning a type to the variable 'oldcl' (line 231)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 8), 'oldcl', commentlist_19659)
        
        # Assigning a Call to a Name (line 232):
        
        # Assigning a Call to a Name (line 232):
        
        # Call to getphraselist(...): (line 232)
        # Processing the call keyword arguments (line 232)
        kwargs_19662 = {}
        # Getting the type of 'self' (line 232)
        self_19660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 16), 'self', False)
        # Obtaining the member 'getphraselist' of a type (line 232)
        getphraselist_19661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 16), self_19660, 'getphraselist')
        # Calling getphraselist(args, kwargs) (line 232)
        getphraselist_call_result_19663 = invoke(stypy.reporting.localization.Localization(__file__, 232, 16), getphraselist_19661, *[], **kwargs_19662)
        
        # Assigning a type to the variable 'plist' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'plist', getphraselist_call_result_19663)
        
        # Call to gotonext(...): (line 234)
        # Processing the call keyword arguments (line 234)
        kwargs_19666 = {}
        # Getting the type of 'self' (line 234)
        self_19664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'self', False)
        # Obtaining the member 'gotonext' of a type (line 234)
        gotonext_19665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 8), self_19664, 'gotonext')
        # Calling gotonext(args, kwargs) (line 234)
        gotonext_call_result_19667 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), gotonext_19665, *[], **kwargs_19666)
        
        
        # Assigning a List to a Name (line 235):
        
        # Assigning a List to a Name (line 235):
        
        # Obtaining an instance of the builtin type 'list' (line 235)
        list_19668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 235)
        
        # Assigning a type to the variable 'returnlist' (line 235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'returnlist', list_19668)
        
        # Getting the type of 'self' (line 237)
        self_19669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 11), 'self')
        # Obtaining the member 'pos' of a type (line 237)
        pos_19670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 11), self_19669, 'pos')
        
        # Call to len(...): (line 237)
        # Processing the call arguments (line 237)
        # Getting the type of 'self' (line 237)
        self_19672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 27), 'self', False)
        # Obtaining the member 'field' of a type (line 237)
        field_19673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 27), self_19672, 'field')
        # Processing the call keyword arguments (line 237)
        kwargs_19674 = {}
        # Getting the type of 'len' (line 237)
        len_19671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 23), 'len', False)
        # Calling len(args, kwargs) (line 237)
        len_call_result_19675 = invoke(stypy.reporting.localization.Localization(__file__, 237, 23), len_19671, *[field_19673], **kwargs_19674)
        
        # Applying the binary operator '>=' (line 237)
        result_ge_19676 = python_operator(stypy.reporting.localization.Localization(__file__, 237, 11), '>=', pos_19670, len_call_result_19675)
        
        # Testing if the type of an if condition is none (line 237)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 237, 8), result_ge_19676):
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'self' (line 242)
            self_19692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 24), 'self')
            # Obtaining the member 'pos' of a type (line 242)
            pos_19693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 24), self_19692, 'pos')
            # Getting the type of 'self' (line 242)
            self_19694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 13), 'self')
            # Obtaining the member 'field' of a type (line 242)
            field_19695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 13), self_19694, 'field')
            # Obtaining the member '__getitem__' of a type (line 242)
            getitem___19696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 13), field_19695, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 242)
            subscript_call_result_19697 = invoke(stypy.reporting.localization.Localization(__file__, 242, 13), getitem___19696, pos_19693)
            
            str_19698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 37), 'str', '.@')
            # Applying the binary operator 'in' (line 242)
            result_contains_19699 = python_operator(stypy.reporting.localization.Localization(__file__, 242, 13), 'in', subscript_call_result_19697, str_19698)
            
            # Testing if the type of an if condition is none (line 242)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 242, 13), result_contains_19699):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 250)
                self_19718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 24), 'self')
                # Obtaining the member 'pos' of a type (line 250)
                pos_19719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 24), self_19718, 'pos')
                # Getting the type of 'self' (line 250)
                self_19720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'self')
                # Obtaining the member 'field' of a type (line 250)
                field_19721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), self_19720, 'field')
                # Obtaining the member '__getitem__' of a type (line 250)
                getitem___19722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), field_19721, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 250)
                subscript_call_result_19723 = invoke(stypy.reporting.localization.Localization(__file__, 250, 13), getitem___19722, pos_19719)
                
                str_19724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 37), 'str', ':')
                # Applying the binary operator '==' (line 250)
                result_eq_19725 = python_operator(stypy.reporting.localization.Localization(__file__, 250, 13), '==', subscript_call_result_19723, str_19724)
                
                # Testing if the type of an if condition is none (line 250)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 250)
                    if_condition_19726 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725)
                    # Assigning a type to the variable 'if_condition_19726' (line 250)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'if_condition_19726', if_condition_19726)
                    # SSA begins for if statement (line 250)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Obtaining an instance of the builtin type 'list' (line 252)
                    list_19727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 25), 'list')
                    # Adding type elements to the builtin type 'list' instance (line 252)
                    
                    # Assigning a type to the variable 'returnlist' (line 252)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'returnlist', list_19727)
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Call to len(...): (line 254)
                    # Processing the call arguments (line 254)
                    # Getting the type of 'self' (line 254)
                    self_19729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 27), 'self', False)
                    # Obtaining the member 'field' of a type (line 254)
                    field_19730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 27), self_19729, 'field')
                    # Processing the call keyword arguments (line 254)
                    kwargs_19731 = {}
                    # Getting the type of 'len' (line 254)
                    len_19728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 23), 'len', False)
                    # Calling len(args, kwargs) (line 254)
                    len_call_result_19732 = invoke(stypy.reporting.localization.Localization(__file__, 254, 23), len_19728, *[field_19730], **kwargs_19731)
                    
                    # Assigning a type to the variable 'fieldlen' (line 254)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'fieldlen', len_call_result_19732)
                    
                    # Getting the type of 'self' (line 255)
                    self_19733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Obtaining the member 'pos' of a type (line 255)
                    pos_19734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19733, 'pos')
                    int_19735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 24), 'int')
                    # Applying the binary operator '+=' (line 255)
                    result_iadd_19736 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 12), '+=', pos_19734, int_19735)
                    # Getting the type of 'self' (line 255)
                    self_19737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Setting the type of the member 'pos' of a type (line 255)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19737, 'pos', result_iadd_19736)
                    
                    
                    
                    # Getting the type of 'self' (line 256)
                    self_19738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 18), 'self')
                    # Obtaining the member 'pos' of a type (line 256)
                    pos_19739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 18), self_19738, 'pos')
                    
                    # Call to len(...): (line 256)
                    # Processing the call arguments (line 256)
                    # Getting the type of 'self' (line 256)
                    self_19741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 33), 'self', False)
                    # Obtaining the member 'field' of a type (line 256)
                    field_19742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 33), self_19741, 'field')
                    # Processing the call keyword arguments (line 256)
                    kwargs_19743 = {}
                    # Getting the type of 'len' (line 256)
                    len_19740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 29), 'len', False)
                    # Calling len(args, kwargs) (line 256)
                    len_call_result_19744 = invoke(stypy.reporting.localization.Localization(__file__, 256, 29), len_19740, *[field_19742], **kwargs_19743)
                    
                    # Applying the binary operator '<' (line 256)
                    result_lt_19745 = python_operator(stypy.reporting.localization.Localization(__file__, 256, 18), '<', pos_19739, len_call_result_19744)
                    
                    # Assigning a type to the variable 'result_lt_19745' (line 256)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 12), 'result_lt_19745', result_lt_19745)
                    # Testing if the while is going to be iterated (line 256)
                    # Testing the type of an if condition (line 256)
                    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745)

                    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745):
                        # SSA begins for while statement (line 256)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
                        
                        # Call to gotonext(...): (line 257)
                        # Processing the call keyword arguments (line 257)
                        kwargs_19748 = {}
                        # Getting the type of 'self' (line 257)
                        self_19746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 16), 'self', False)
                        # Obtaining the member 'gotonext' of a type (line 257)
                        gotonext_19747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 16), self_19746, 'gotonext')
                        # Calling gotonext(args, kwargs) (line 257)
                        gotonext_call_result_19749 = invoke(stypy.reporting.localization.Localization(__file__, 257, 16), gotonext_19747, *[], **kwargs_19748)
                        
                        
                        # Evaluating a boolean operation
                        
                        # Getting the type of 'self' (line 258)
                        self_19750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 19), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 19), self_19750, 'pos')
                        # Getting the type of 'fieldlen' (line 258)
                        fieldlen_19752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 30), 'fieldlen')
                        # Applying the binary operator '<' (line 258)
                        result_lt_19753 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), '<', pos_19751, fieldlen_19752)
                        
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 258)
                        self_19754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 54), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 54), self_19754, 'pos')
                        # Getting the type of 'self' (line 258)
                        self_19756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 43), 'self')
                        # Obtaining the member 'field' of a type (line 258)
                        field_19757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), self_19756, 'field')
                        # Obtaining the member '__getitem__' of a type (line 258)
                        getitem___19758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), field_19757, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 258)
                        subscript_call_result_19759 = invoke(stypy.reporting.localization.Localization(__file__, 258, 43), getitem___19758, pos_19755)
                        
                        str_19760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 67), 'str', ';')
                        # Applying the binary operator '==' (line 258)
                        result_eq_19761 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 43), '==', subscript_call_result_19759, str_19760)
                        
                        # Applying the binary operator 'and' (line 258)
                        result_and_keyword_19762 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), 'and', result_lt_19753, result_eq_19761)
                        
                        # Testing if the type of an if condition is none (line 258)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 258)
                            if_condition_19763 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762)
                            # Assigning a type to the variable 'if_condition_19763' (line 258)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 16), 'if_condition_19763', if_condition_19763)
                            # SSA begins for if statement (line 258)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 259)
                            self_19764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Obtaining the member 'pos' of a type (line 259)
                            pos_19765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19764, 'pos')
                            int_19766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 32), 'int')
                            # Applying the binary operator '+=' (line 259)
                            result_iadd_19767 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 20), '+=', pos_19765, int_19766)
                            # Getting the type of 'self' (line 259)
                            self_19768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Setting the type of the member 'pos' of a type (line 259)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19768, 'pos', result_iadd_19767)
                            
                            # SSA join for if statement (line 258)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        
                        # Assigning a BinOp to a Name (line 261):
                        
                        # Assigning a BinOp to a Name (line 261):
                        # Getting the type of 'returnlist' (line 261)
                        returnlist_19769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 29), 'returnlist')
                        
                        # Call to getaddress(...): (line 261)
                        # Processing the call keyword arguments (line 261)
                        kwargs_19772 = {}
                        # Getting the type of 'self' (line 261)
                        self_19770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 42), 'self', False)
                        # Obtaining the member 'getaddress' of a type (line 261)
                        getaddress_19771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 42), self_19770, 'getaddress')
                        # Calling getaddress(args, kwargs) (line 261)
                        getaddress_call_result_19773 = invoke(stypy.reporting.localization.Localization(__file__, 261, 42), getaddress_19771, *[], **kwargs_19772)
                        
                        # Applying the binary operator '+' (line 261)
                        result_add_19774 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 29), '+', returnlist_19769, getaddress_call_result_19773)
                        
                        # Assigning a type to the variable 'returnlist' (line 261)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'returnlist', result_add_19774)
                        # SSA join for while statement (line 256)
                        module_type_store = module_type_store.join_ssa_context()

                    
                    # SSA branch for the else part of an if statement (line 250)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 250)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 242)
                if_condition_19700 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 242, 13), result_contains_19699)
                # Assigning a type to the variable 'if_condition_19700' (line 242)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 13), 'if_condition_19700', if_condition_19700)
                # SSA begins for if statement (line 242)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Name to a Attribute (line 245):
                
                # Assigning a Name to a Attribute (line 245):
                # Getting the type of 'oldpos' (line 245)
                oldpos_19701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 23), 'oldpos')
                # Getting the type of 'self' (line 245)
                self_19702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 12), 'self')
                # Setting the type of the member 'pos' of a type (line 245)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 12), self_19702, 'pos', oldpos_19701)
                
                # Assigning a Name to a Attribute (line 246):
                
                # Assigning a Name to a Attribute (line 246):
                # Getting the type of 'oldcl' (line 246)
                oldcl_19703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 31), 'oldcl')
                # Getting the type of 'self' (line 246)
                self_19704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'self')
                # Setting the type of the member 'commentlist' of a type (line 246)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 12), self_19704, 'commentlist', oldcl_19703)
                
                # Assigning a Call to a Name (line 247):
                
                # Assigning a Call to a Name (line 247):
                
                # Call to getaddrspec(...): (line 247)
                # Processing the call keyword arguments (line 247)
                kwargs_19707 = {}
                # Getting the type of 'self' (line 247)
                self_19705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 23), 'self', False)
                # Obtaining the member 'getaddrspec' of a type (line 247)
                getaddrspec_19706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 23), self_19705, 'getaddrspec')
                # Calling getaddrspec(args, kwargs) (line 247)
                getaddrspec_call_result_19708 = invoke(stypy.reporting.localization.Localization(__file__, 247, 23), getaddrspec_19706, *[], **kwargs_19707)
                
                # Assigning a type to the variable 'addrspec' (line 247)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'addrspec', getaddrspec_call_result_19708)
                
                # Assigning a List to a Name (line 248):
                
                # Assigning a List to a Name (line 248):
                
                # Obtaining an instance of the builtin type 'list' (line 248)
                list_19709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 25), 'list')
                # Adding type elements to the builtin type 'list' instance (line 248)
                # Adding element type (line 248)
                
                # Obtaining an instance of the builtin type 'tuple' (line 248)
                tuple_19710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 27), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 248)
                # Adding element type (line 248)
                
                # Call to join(...): (line 248)
                # Processing the call arguments (line 248)
                # Getting the type of 'self' (line 248)
                self_19713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 38), 'self', False)
                # Obtaining the member 'commentlist' of a type (line 248)
                commentlist_19714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 38), self_19713, 'commentlist')
                # Processing the call keyword arguments (line 248)
                kwargs_19715 = {}
                # Getting the type of 'SPACE' (line 248)
                SPACE_19711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 27), 'SPACE', False)
                # Obtaining the member 'join' of a type (line 248)
                join_19712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 27), SPACE_19711, 'join')
                # Calling join(args, kwargs) (line 248)
                join_call_result_19716 = invoke(stypy.reporting.localization.Localization(__file__, 248, 27), join_19712, *[commentlist_19714], **kwargs_19715)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 27), tuple_19710, join_call_result_19716)
                # Adding element type (line 248)
                # Getting the type of 'addrspec' (line 248)
                addrspec_19717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 57), 'addrspec')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 27), tuple_19710, addrspec_19717)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 25), list_19709, tuple_19710)
                
                # Assigning a type to the variable 'returnlist' (line 248)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 12), 'returnlist', list_19709)
                # SSA branch for the else part of an if statement (line 242)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 250)
                self_19718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 24), 'self')
                # Obtaining the member 'pos' of a type (line 250)
                pos_19719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 24), self_19718, 'pos')
                # Getting the type of 'self' (line 250)
                self_19720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'self')
                # Obtaining the member 'field' of a type (line 250)
                field_19721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), self_19720, 'field')
                # Obtaining the member '__getitem__' of a type (line 250)
                getitem___19722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), field_19721, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 250)
                subscript_call_result_19723 = invoke(stypy.reporting.localization.Localization(__file__, 250, 13), getitem___19722, pos_19719)
                
                str_19724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 37), 'str', ':')
                # Applying the binary operator '==' (line 250)
                result_eq_19725 = python_operator(stypy.reporting.localization.Localization(__file__, 250, 13), '==', subscript_call_result_19723, str_19724)
                
                # Testing if the type of an if condition is none (line 250)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 250)
                    if_condition_19726 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725)
                    # Assigning a type to the variable 'if_condition_19726' (line 250)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'if_condition_19726', if_condition_19726)
                    # SSA begins for if statement (line 250)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Obtaining an instance of the builtin type 'list' (line 252)
                    list_19727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 25), 'list')
                    # Adding type elements to the builtin type 'list' instance (line 252)
                    
                    # Assigning a type to the variable 'returnlist' (line 252)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'returnlist', list_19727)
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Call to len(...): (line 254)
                    # Processing the call arguments (line 254)
                    # Getting the type of 'self' (line 254)
                    self_19729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 27), 'self', False)
                    # Obtaining the member 'field' of a type (line 254)
                    field_19730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 27), self_19729, 'field')
                    # Processing the call keyword arguments (line 254)
                    kwargs_19731 = {}
                    # Getting the type of 'len' (line 254)
                    len_19728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 23), 'len', False)
                    # Calling len(args, kwargs) (line 254)
                    len_call_result_19732 = invoke(stypy.reporting.localization.Localization(__file__, 254, 23), len_19728, *[field_19730], **kwargs_19731)
                    
                    # Assigning a type to the variable 'fieldlen' (line 254)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'fieldlen', len_call_result_19732)
                    
                    # Getting the type of 'self' (line 255)
                    self_19733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Obtaining the member 'pos' of a type (line 255)
                    pos_19734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19733, 'pos')
                    int_19735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 24), 'int')
                    # Applying the binary operator '+=' (line 255)
                    result_iadd_19736 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 12), '+=', pos_19734, int_19735)
                    # Getting the type of 'self' (line 255)
                    self_19737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Setting the type of the member 'pos' of a type (line 255)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19737, 'pos', result_iadd_19736)
                    
                    
                    
                    # Getting the type of 'self' (line 256)
                    self_19738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 18), 'self')
                    # Obtaining the member 'pos' of a type (line 256)
                    pos_19739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 18), self_19738, 'pos')
                    
                    # Call to len(...): (line 256)
                    # Processing the call arguments (line 256)
                    # Getting the type of 'self' (line 256)
                    self_19741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 33), 'self', False)
                    # Obtaining the member 'field' of a type (line 256)
                    field_19742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 33), self_19741, 'field')
                    # Processing the call keyword arguments (line 256)
                    kwargs_19743 = {}
                    # Getting the type of 'len' (line 256)
                    len_19740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 29), 'len', False)
                    # Calling len(args, kwargs) (line 256)
                    len_call_result_19744 = invoke(stypy.reporting.localization.Localization(__file__, 256, 29), len_19740, *[field_19742], **kwargs_19743)
                    
                    # Applying the binary operator '<' (line 256)
                    result_lt_19745 = python_operator(stypy.reporting.localization.Localization(__file__, 256, 18), '<', pos_19739, len_call_result_19744)
                    
                    # Assigning a type to the variable 'result_lt_19745' (line 256)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 12), 'result_lt_19745', result_lt_19745)
                    # Testing if the while is going to be iterated (line 256)
                    # Testing the type of an if condition (line 256)
                    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745)

                    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745):
                        # SSA begins for while statement (line 256)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
                        
                        # Call to gotonext(...): (line 257)
                        # Processing the call keyword arguments (line 257)
                        kwargs_19748 = {}
                        # Getting the type of 'self' (line 257)
                        self_19746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 16), 'self', False)
                        # Obtaining the member 'gotonext' of a type (line 257)
                        gotonext_19747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 16), self_19746, 'gotonext')
                        # Calling gotonext(args, kwargs) (line 257)
                        gotonext_call_result_19749 = invoke(stypy.reporting.localization.Localization(__file__, 257, 16), gotonext_19747, *[], **kwargs_19748)
                        
                        
                        # Evaluating a boolean operation
                        
                        # Getting the type of 'self' (line 258)
                        self_19750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 19), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 19), self_19750, 'pos')
                        # Getting the type of 'fieldlen' (line 258)
                        fieldlen_19752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 30), 'fieldlen')
                        # Applying the binary operator '<' (line 258)
                        result_lt_19753 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), '<', pos_19751, fieldlen_19752)
                        
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 258)
                        self_19754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 54), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 54), self_19754, 'pos')
                        # Getting the type of 'self' (line 258)
                        self_19756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 43), 'self')
                        # Obtaining the member 'field' of a type (line 258)
                        field_19757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), self_19756, 'field')
                        # Obtaining the member '__getitem__' of a type (line 258)
                        getitem___19758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), field_19757, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 258)
                        subscript_call_result_19759 = invoke(stypy.reporting.localization.Localization(__file__, 258, 43), getitem___19758, pos_19755)
                        
                        str_19760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 67), 'str', ';')
                        # Applying the binary operator '==' (line 258)
                        result_eq_19761 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 43), '==', subscript_call_result_19759, str_19760)
                        
                        # Applying the binary operator 'and' (line 258)
                        result_and_keyword_19762 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), 'and', result_lt_19753, result_eq_19761)
                        
                        # Testing if the type of an if condition is none (line 258)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 258)
                            if_condition_19763 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762)
                            # Assigning a type to the variable 'if_condition_19763' (line 258)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 16), 'if_condition_19763', if_condition_19763)
                            # SSA begins for if statement (line 258)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 259)
                            self_19764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Obtaining the member 'pos' of a type (line 259)
                            pos_19765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19764, 'pos')
                            int_19766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 32), 'int')
                            # Applying the binary operator '+=' (line 259)
                            result_iadd_19767 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 20), '+=', pos_19765, int_19766)
                            # Getting the type of 'self' (line 259)
                            self_19768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Setting the type of the member 'pos' of a type (line 259)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19768, 'pos', result_iadd_19767)
                            
                            # SSA join for if statement (line 258)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        
                        # Assigning a BinOp to a Name (line 261):
                        
                        # Assigning a BinOp to a Name (line 261):
                        # Getting the type of 'returnlist' (line 261)
                        returnlist_19769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 29), 'returnlist')
                        
                        # Call to getaddress(...): (line 261)
                        # Processing the call keyword arguments (line 261)
                        kwargs_19772 = {}
                        # Getting the type of 'self' (line 261)
                        self_19770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 42), 'self', False)
                        # Obtaining the member 'getaddress' of a type (line 261)
                        getaddress_19771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 42), self_19770, 'getaddress')
                        # Calling getaddress(args, kwargs) (line 261)
                        getaddress_call_result_19773 = invoke(stypy.reporting.localization.Localization(__file__, 261, 42), getaddress_19771, *[], **kwargs_19772)
                        
                        # Applying the binary operator '+' (line 261)
                        result_add_19774 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 29), '+', returnlist_19769, getaddress_call_result_19773)
                        
                        # Assigning a type to the variable 'returnlist' (line 261)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'returnlist', result_add_19774)
                        # SSA join for while statement (line 256)
                        module_type_store = module_type_store.join_ssa_context()

                    
                    # SSA branch for the else part of an if statement (line 250)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 250)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 242)
                module_type_store = module_type_store.join_ssa_context()
                

        else:
            
            # Testing the type of an if condition (line 237)
            if_condition_19677 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 237, 8), result_ge_19676)
            # Assigning a type to the variable 'if_condition_19677' (line 237)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'if_condition_19677', if_condition_19677)
            # SSA begins for if statement (line 237)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'plist' (line 239)
            plist_19678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 15), 'plist')
            # Testing if the type of an if condition is none (line 239)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 239, 12), plist_19678):
                pass
            else:
                
                # Testing the type of an if condition (line 239)
                if_condition_19679 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 239, 12), plist_19678)
                # Assigning a type to the variable 'if_condition_19679' (line 239)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 12), 'if_condition_19679', if_condition_19679)
                # SSA begins for if statement (line 239)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a List to a Name (line 240):
                
                # Assigning a List to a Name (line 240):
                
                # Obtaining an instance of the builtin type 'list' (line 240)
                list_19680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 29), 'list')
                # Adding type elements to the builtin type 'list' instance (line 240)
                # Adding element type (line 240)
                
                # Obtaining an instance of the builtin type 'tuple' (line 240)
                tuple_19681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 31), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 240)
                # Adding element type (line 240)
                
                # Call to join(...): (line 240)
                # Processing the call arguments (line 240)
                # Getting the type of 'self' (line 240)
                self_19684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 42), 'self', False)
                # Obtaining the member 'commentlist' of a type (line 240)
                commentlist_19685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 42), self_19684, 'commentlist')
                # Processing the call keyword arguments (line 240)
                kwargs_19686 = {}
                # Getting the type of 'SPACE' (line 240)
                SPACE_19682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 31), 'SPACE', False)
                # Obtaining the member 'join' of a type (line 240)
                join_19683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 31), SPACE_19682, 'join')
                # Calling join(args, kwargs) (line 240)
                join_call_result_19687 = invoke(stypy.reporting.localization.Localization(__file__, 240, 31), join_19683, *[commentlist_19685], **kwargs_19686)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 31), tuple_19681, join_call_result_19687)
                # Adding element type (line 240)
                
                # Obtaining the type of the subscript
                int_19688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 67), 'int')
                # Getting the type of 'plist' (line 240)
                plist_19689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 61), 'plist')
                # Obtaining the member '__getitem__' of a type (line 240)
                getitem___19690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 61), plist_19689, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 240)
                subscript_call_result_19691 = invoke(stypy.reporting.localization.Localization(__file__, 240, 61), getitem___19690, int_19688)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 31), tuple_19681, subscript_call_result_19691)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 29), list_19680, tuple_19681)
                
                # Assigning a type to the variable 'returnlist' (line 240)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 16), 'returnlist', list_19680)
                # SSA join for if statement (line 239)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA branch for the else part of an if statement (line 237)
            module_type_store.open_ssa_branch('else')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'self' (line 242)
            self_19692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 24), 'self')
            # Obtaining the member 'pos' of a type (line 242)
            pos_19693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 24), self_19692, 'pos')
            # Getting the type of 'self' (line 242)
            self_19694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 13), 'self')
            # Obtaining the member 'field' of a type (line 242)
            field_19695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 13), self_19694, 'field')
            # Obtaining the member '__getitem__' of a type (line 242)
            getitem___19696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 13), field_19695, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 242)
            subscript_call_result_19697 = invoke(stypy.reporting.localization.Localization(__file__, 242, 13), getitem___19696, pos_19693)
            
            str_19698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 37), 'str', '.@')
            # Applying the binary operator 'in' (line 242)
            result_contains_19699 = python_operator(stypy.reporting.localization.Localization(__file__, 242, 13), 'in', subscript_call_result_19697, str_19698)
            
            # Testing if the type of an if condition is none (line 242)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 242, 13), result_contains_19699):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 250)
                self_19718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 24), 'self')
                # Obtaining the member 'pos' of a type (line 250)
                pos_19719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 24), self_19718, 'pos')
                # Getting the type of 'self' (line 250)
                self_19720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'self')
                # Obtaining the member 'field' of a type (line 250)
                field_19721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), self_19720, 'field')
                # Obtaining the member '__getitem__' of a type (line 250)
                getitem___19722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), field_19721, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 250)
                subscript_call_result_19723 = invoke(stypy.reporting.localization.Localization(__file__, 250, 13), getitem___19722, pos_19719)
                
                str_19724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 37), 'str', ':')
                # Applying the binary operator '==' (line 250)
                result_eq_19725 = python_operator(stypy.reporting.localization.Localization(__file__, 250, 13), '==', subscript_call_result_19723, str_19724)
                
                # Testing if the type of an if condition is none (line 250)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 250)
                    if_condition_19726 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725)
                    # Assigning a type to the variable 'if_condition_19726' (line 250)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'if_condition_19726', if_condition_19726)
                    # SSA begins for if statement (line 250)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Obtaining an instance of the builtin type 'list' (line 252)
                    list_19727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 25), 'list')
                    # Adding type elements to the builtin type 'list' instance (line 252)
                    
                    # Assigning a type to the variable 'returnlist' (line 252)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'returnlist', list_19727)
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Call to len(...): (line 254)
                    # Processing the call arguments (line 254)
                    # Getting the type of 'self' (line 254)
                    self_19729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 27), 'self', False)
                    # Obtaining the member 'field' of a type (line 254)
                    field_19730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 27), self_19729, 'field')
                    # Processing the call keyword arguments (line 254)
                    kwargs_19731 = {}
                    # Getting the type of 'len' (line 254)
                    len_19728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 23), 'len', False)
                    # Calling len(args, kwargs) (line 254)
                    len_call_result_19732 = invoke(stypy.reporting.localization.Localization(__file__, 254, 23), len_19728, *[field_19730], **kwargs_19731)
                    
                    # Assigning a type to the variable 'fieldlen' (line 254)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'fieldlen', len_call_result_19732)
                    
                    # Getting the type of 'self' (line 255)
                    self_19733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Obtaining the member 'pos' of a type (line 255)
                    pos_19734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19733, 'pos')
                    int_19735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 24), 'int')
                    # Applying the binary operator '+=' (line 255)
                    result_iadd_19736 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 12), '+=', pos_19734, int_19735)
                    # Getting the type of 'self' (line 255)
                    self_19737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Setting the type of the member 'pos' of a type (line 255)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19737, 'pos', result_iadd_19736)
                    
                    
                    
                    # Getting the type of 'self' (line 256)
                    self_19738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 18), 'self')
                    # Obtaining the member 'pos' of a type (line 256)
                    pos_19739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 18), self_19738, 'pos')
                    
                    # Call to len(...): (line 256)
                    # Processing the call arguments (line 256)
                    # Getting the type of 'self' (line 256)
                    self_19741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 33), 'self', False)
                    # Obtaining the member 'field' of a type (line 256)
                    field_19742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 33), self_19741, 'field')
                    # Processing the call keyword arguments (line 256)
                    kwargs_19743 = {}
                    # Getting the type of 'len' (line 256)
                    len_19740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 29), 'len', False)
                    # Calling len(args, kwargs) (line 256)
                    len_call_result_19744 = invoke(stypy.reporting.localization.Localization(__file__, 256, 29), len_19740, *[field_19742], **kwargs_19743)
                    
                    # Applying the binary operator '<' (line 256)
                    result_lt_19745 = python_operator(stypy.reporting.localization.Localization(__file__, 256, 18), '<', pos_19739, len_call_result_19744)
                    
                    # Assigning a type to the variable 'result_lt_19745' (line 256)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 12), 'result_lt_19745', result_lt_19745)
                    # Testing if the while is going to be iterated (line 256)
                    # Testing the type of an if condition (line 256)
                    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745)

                    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745):
                        # SSA begins for while statement (line 256)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
                        
                        # Call to gotonext(...): (line 257)
                        # Processing the call keyword arguments (line 257)
                        kwargs_19748 = {}
                        # Getting the type of 'self' (line 257)
                        self_19746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 16), 'self', False)
                        # Obtaining the member 'gotonext' of a type (line 257)
                        gotonext_19747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 16), self_19746, 'gotonext')
                        # Calling gotonext(args, kwargs) (line 257)
                        gotonext_call_result_19749 = invoke(stypy.reporting.localization.Localization(__file__, 257, 16), gotonext_19747, *[], **kwargs_19748)
                        
                        
                        # Evaluating a boolean operation
                        
                        # Getting the type of 'self' (line 258)
                        self_19750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 19), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 19), self_19750, 'pos')
                        # Getting the type of 'fieldlen' (line 258)
                        fieldlen_19752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 30), 'fieldlen')
                        # Applying the binary operator '<' (line 258)
                        result_lt_19753 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), '<', pos_19751, fieldlen_19752)
                        
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 258)
                        self_19754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 54), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 54), self_19754, 'pos')
                        # Getting the type of 'self' (line 258)
                        self_19756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 43), 'self')
                        # Obtaining the member 'field' of a type (line 258)
                        field_19757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), self_19756, 'field')
                        # Obtaining the member '__getitem__' of a type (line 258)
                        getitem___19758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), field_19757, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 258)
                        subscript_call_result_19759 = invoke(stypy.reporting.localization.Localization(__file__, 258, 43), getitem___19758, pos_19755)
                        
                        str_19760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 67), 'str', ';')
                        # Applying the binary operator '==' (line 258)
                        result_eq_19761 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 43), '==', subscript_call_result_19759, str_19760)
                        
                        # Applying the binary operator 'and' (line 258)
                        result_and_keyword_19762 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), 'and', result_lt_19753, result_eq_19761)
                        
                        # Testing if the type of an if condition is none (line 258)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 258)
                            if_condition_19763 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762)
                            # Assigning a type to the variable 'if_condition_19763' (line 258)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 16), 'if_condition_19763', if_condition_19763)
                            # SSA begins for if statement (line 258)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 259)
                            self_19764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Obtaining the member 'pos' of a type (line 259)
                            pos_19765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19764, 'pos')
                            int_19766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 32), 'int')
                            # Applying the binary operator '+=' (line 259)
                            result_iadd_19767 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 20), '+=', pos_19765, int_19766)
                            # Getting the type of 'self' (line 259)
                            self_19768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Setting the type of the member 'pos' of a type (line 259)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19768, 'pos', result_iadd_19767)
                            
                            # SSA join for if statement (line 258)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        
                        # Assigning a BinOp to a Name (line 261):
                        
                        # Assigning a BinOp to a Name (line 261):
                        # Getting the type of 'returnlist' (line 261)
                        returnlist_19769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 29), 'returnlist')
                        
                        # Call to getaddress(...): (line 261)
                        # Processing the call keyword arguments (line 261)
                        kwargs_19772 = {}
                        # Getting the type of 'self' (line 261)
                        self_19770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 42), 'self', False)
                        # Obtaining the member 'getaddress' of a type (line 261)
                        getaddress_19771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 42), self_19770, 'getaddress')
                        # Calling getaddress(args, kwargs) (line 261)
                        getaddress_call_result_19773 = invoke(stypy.reporting.localization.Localization(__file__, 261, 42), getaddress_19771, *[], **kwargs_19772)
                        
                        # Applying the binary operator '+' (line 261)
                        result_add_19774 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 29), '+', returnlist_19769, getaddress_call_result_19773)
                        
                        # Assigning a type to the variable 'returnlist' (line 261)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'returnlist', result_add_19774)
                        # SSA join for while statement (line 256)
                        module_type_store = module_type_store.join_ssa_context()

                    
                    # SSA branch for the else part of an if statement (line 250)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 250)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 242)
                if_condition_19700 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 242, 13), result_contains_19699)
                # Assigning a type to the variable 'if_condition_19700' (line 242)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 13), 'if_condition_19700', if_condition_19700)
                # SSA begins for if statement (line 242)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Name to a Attribute (line 245):
                
                # Assigning a Name to a Attribute (line 245):
                # Getting the type of 'oldpos' (line 245)
                oldpos_19701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 23), 'oldpos')
                # Getting the type of 'self' (line 245)
                self_19702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 12), 'self')
                # Setting the type of the member 'pos' of a type (line 245)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 12), self_19702, 'pos', oldpos_19701)
                
                # Assigning a Name to a Attribute (line 246):
                
                # Assigning a Name to a Attribute (line 246):
                # Getting the type of 'oldcl' (line 246)
                oldcl_19703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 31), 'oldcl')
                # Getting the type of 'self' (line 246)
                self_19704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'self')
                # Setting the type of the member 'commentlist' of a type (line 246)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 12), self_19704, 'commentlist', oldcl_19703)
                
                # Assigning a Call to a Name (line 247):
                
                # Assigning a Call to a Name (line 247):
                
                # Call to getaddrspec(...): (line 247)
                # Processing the call keyword arguments (line 247)
                kwargs_19707 = {}
                # Getting the type of 'self' (line 247)
                self_19705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 23), 'self', False)
                # Obtaining the member 'getaddrspec' of a type (line 247)
                getaddrspec_19706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 23), self_19705, 'getaddrspec')
                # Calling getaddrspec(args, kwargs) (line 247)
                getaddrspec_call_result_19708 = invoke(stypy.reporting.localization.Localization(__file__, 247, 23), getaddrspec_19706, *[], **kwargs_19707)
                
                # Assigning a type to the variable 'addrspec' (line 247)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'addrspec', getaddrspec_call_result_19708)
                
                # Assigning a List to a Name (line 248):
                
                # Assigning a List to a Name (line 248):
                
                # Obtaining an instance of the builtin type 'list' (line 248)
                list_19709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 25), 'list')
                # Adding type elements to the builtin type 'list' instance (line 248)
                # Adding element type (line 248)
                
                # Obtaining an instance of the builtin type 'tuple' (line 248)
                tuple_19710 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 248, 27), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 248)
                # Adding element type (line 248)
                
                # Call to join(...): (line 248)
                # Processing the call arguments (line 248)
                # Getting the type of 'self' (line 248)
                self_19713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 38), 'self', False)
                # Obtaining the member 'commentlist' of a type (line 248)
                commentlist_19714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 38), self_19713, 'commentlist')
                # Processing the call keyword arguments (line 248)
                kwargs_19715 = {}
                # Getting the type of 'SPACE' (line 248)
                SPACE_19711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 27), 'SPACE', False)
                # Obtaining the member 'join' of a type (line 248)
                join_19712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 27), SPACE_19711, 'join')
                # Calling join(args, kwargs) (line 248)
                join_call_result_19716 = invoke(stypy.reporting.localization.Localization(__file__, 248, 27), join_19712, *[commentlist_19714], **kwargs_19715)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 27), tuple_19710, join_call_result_19716)
                # Adding element type (line 248)
                # Getting the type of 'addrspec' (line 248)
                addrspec_19717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 57), 'addrspec')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 27), tuple_19710, addrspec_19717)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 248, 25), list_19709, tuple_19710)
                
                # Assigning a type to the variable 'returnlist' (line 248)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 12), 'returnlist', list_19709)
                # SSA branch for the else part of an if statement (line 242)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 250)
                self_19718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 24), 'self')
                # Obtaining the member 'pos' of a type (line 250)
                pos_19719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 24), self_19718, 'pos')
                # Getting the type of 'self' (line 250)
                self_19720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'self')
                # Obtaining the member 'field' of a type (line 250)
                field_19721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), self_19720, 'field')
                # Obtaining the member '__getitem__' of a type (line 250)
                getitem___19722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 13), field_19721, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 250)
                subscript_call_result_19723 = invoke(stypy.reporting.localization.Localization(__file__, 250, 13), getitem___19722, pos_19719)
                
                str_19724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 37), 'str', ':')
                # Applying the binary operator '==' (line 250)
                result_eq_19725 = python_operator(stypy.reporting.localization.Localization(__file__, 250, 13), '==', subscript_call_result_19723, str_19724)
                
                # Testing if the type of an if condition is none (line 250)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 250)
                    if_condition_19726 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 250, 13), result_eq_19725)
                    # Assigning a type to the variable 'if_condition_19726' (line 250)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 13), 'if_condition_19726', if_condition_19726)
                    # SSA begins for if statement (line 250)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Assigning a List to a Name (line 252):
                    
                    # Obtaining an instance of the builtin type 'list' (line 252)
                    list_19727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 25), 'list')
                    # Adding type elements to the builtin type 'list' instance (line 252)
                    
                    # Assigning a type to the variable 'returnlist' (line 252)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 12), 'returnlist', list_19727)
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Assigning a Call to a Name (line 254):
                    
                    # Call to len(...): (line 254)
                    # Processing the call arguments (line 254)
                    # Getting the type of 'self' (line 254)
                    self_19729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 27), 'self', False)
                    # Obtaining the member 'field' of a type (line 254)
                    field_19730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 27), self_19729, 'field')
                    # Processing the call keyword arguments (line 254)
                    kwargs_19731 = {}
                    # Getting the type of 'len' (line 254)
                    len_19728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 23), 'len', False)
                    # Calling len(args, kwargs) (line 254)
                    len_call_result_19732 = invoke(stypy.reporting.localization.Localization(__file__, 254, 23), len_19728, *[field_19730], **kwargs_19731)
                    
                    # Assigning a type to the variable 'fieldlen' (line 254)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 12), 'fieldlen', len_call_result_19732)
                    
                    # Getting the type of 'self' (line 255)
                    self_19733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Obtaining the member 'pos' of a type (line 255)
                    pos_19734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19733, 'pos')
                    int_19735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 24), 'int')
                    # Applying the binary operator '+=' (line 255)
                    result_iadd_19736 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 12), '+=', pos_19734, int_19735)
                    # Getting the type of 'self' (line 255)
                    self_19737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 12), 'self')
                    # Setting the type of the member 'pos' of a type (line 255)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 12), self_19737, 'pos', result_iadd_19736)
                    
                    
                    
                    # Getting the type of 'self' (line 256)
                    self_19738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 18), 'self')
                    # Obtaining the member 'pos' of a type (line 256)
                    pos_19739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 18), self_19738, 'pos')
                    
                    # Call to len(...): (line 256)
                    # Processing the call arguments (line 256)
                    # Getting the type of 'self' (line 256)
                    self_19741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 33), 'self', False)
                    # Obtaining the member 'field' of a type (line 256)
                    field_19742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 33), self_19741, 'field')
                    # Processing the call keyword arguments (line 256)
                    kwargs_19743 = {}
                    # Getting the type of 'len' (line 256)
                    len_19740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 29), 'len', False)
                    # Calling len(args, kwargs) (line 256)
                    len_call_result_19744 = invoke(stypy.reporting.localization.Localization(__file__, 256, 29), len_19740, *[field_19742], **kwargs_19743)
                    
                    # Applying the binary operator '<' (line 256)
                    result_lt_19745 = python_operator(stypy.reporting.localization.Localization(__file__, 256, 18), '<', pos_19739, len_call_result_19744)
                    
                    # Assigning a type to the variable 'result_lt_19745' (line 256)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 12), 'result_lt_19745', result_lt_19745)
                    # Testing if the while is going to be iterated (line 256)
                    # Testing the type of an if condition (line 256)
                    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745)

                    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 256, 12), result_lt_19745):
                        # SSA begins for while statement (line 256)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
                        
                        # Call to gotonext(...): (line 257)
                        # Processing the call keyword arguments (line 257)
                        kwargs_19748 = {}
                        # Getting the type of 'self' (line 257)
                        self_19746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 16), 'self', False)
                        # Obtaining the member 'gotonext' of a type (line 257)
                        gotonext_19747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 16), self_19746, 'gotonext')
                        # Calling gotonext(args, kwargs) (line 257)
                        gotonext_call_result_19749 = invoke(stypy.reporting.localization.Localization(__file__, 257, 16), gotonext_19747, *[], **kwargs_19748)
                        
                        
                        # Evaluating a boolean operation
                        
                        # Getting the type of 'self' (line 258)
                        self_19750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 19), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 19), self_19750, 'pos')
                        # Getting the type of 'fieldlen' (line 258)
                        fieldlen_19752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 30), 'fieldlen')
                        # Applying the binary operator '<' (line 258)
                        result_lt_19753 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), '<', pos_19751, fieldlen_19752)
                        
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 258)
                        self_19754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 54), 'self')
                        # Obtaining the member 'pos' of a type (line 258)
                        pos_19755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 54), self_19754, 'pos')
                        # Getting the type of 'self' (line 258)
                        self_19756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 43), 'self')
                        # Obtaining the member 'field' of a type (line 258)
                        field_19757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), self_19756, 'field')
                        # Obtaining the member '__getitem__' of a type (line 258)
                        getitem___19758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 43), field_19757, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 258)
                        subscript_call_result_19759 = invoke(stypy.reporting.localization.Localization(__file__, 258, 43), getitem___19758, pos_19755)
                        
                        str_19760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 67), 'str', ';')
                        # Applying the binary operator '==' (line 258)
                        result_eq_19761 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 43), '==', subscript_call_result_19759, str_19760)
                        
                        # Applying the binary operator 'and' (line 258)
                        result_and_keyword_19762 = python_operator(stypy.reporting.localization.Localization(__file__, 258, 19), 'and', result_lt_19753, result_eq_19761)
                        
                        # Testing if the type of an if condition is none (line 258)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 258)
                            if_condition_19763 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 258, 16), result_and_keyword_19762)
                            # Assigning a type to the variable 'if_condition_19763' (line 258)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 16), 'if_condition_19763', if_condition_19763)
                            # SSA begins for if statement (line 258)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 259)
                            self_19764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Obtaining the member 'pos' of a type (line 259)
                            pos_19765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19764, 'pos')
                            int_19766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 259, 32), 'int')
                            # Applying the binary operator '+=' (line 259)
                            result_iadd_19767 = python_operator(stypy.reporting.localization.Localization(__file__, 259, 20), '+=', pos_19765, int_19766)
                            # Getting the type of 'self' (line 259)
                            self_19768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 20), 'self')
                            # Setting the type of the member 'pos' of a type (line 259)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 20), self_19768, 'pos', result_iadd_19767)
                            
                            # SSA join for if statement (line 258)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        
                        # Assigning a BinOp to a Name (line 261):
                        
                        # Assigning a BinOp to a Name (line 261):
                        # Getting the type of 'returnlist' (line 261)
                        returnlist_19769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 29), 'returnlist')
                        
                        # Call to getaddress(...): (line 261)
                        # Processing the call keyword arguments (line 261)
                        kwargs_19772 = {}
                        # Getting the type of 'self' (line 261)
                        self_19770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 42), 'self', False)
                        # Obtaining the member 'getaddress' of a type (line 261)
                        getaddress_19771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 42), self_19770, 'getaddress')
                        # Calling getaddress(args, kwargs) (line 261)
                        getaddress_call_result_19773 = invoke(stypy.reporting.localization.Localization(__file__, 261, 42), getaddress_19771, *[], **kwargs_19772)
                        
                        # Applying the binary operator '+' (line 261)
                        result_add_19774 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 29), '+', returnlist_19769, getaddress_call_result_19773)
                        
                        # Assigning a type to the variable 'returnlist' (line 261)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'returnlist', result_add_19774)
                        # SSA join for while statement (line 256)
                        module_type_store = module_type_store.join_ssa_context()

                    
                    # SSA branch for the else part of an if statement (line 250)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 263)
                    self_19775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 24), 'self')
                    # Obtaining the member 'pos' of a type (line 263)
                    pos_19776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 24), self_19775, 'pos')
                    # Getting the type of 'self' (line 263)
                    self_19777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'self')
                    # Obtaining the member 'field' of a type (line 263)
                    field_19778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), self_19777, 'field')
                    # Obtaining the member '__getitem__' of a type (line 263)
                    getitem___19779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 13), field_19778, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 263)
                    subscript_call_result_19780 = invoke(stypy.reporting.localization.Localization(__file__, 263, 13), getitem___19779, pos_19776)
                    
                    str_19781 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 37), 'str', '<')
                    # Applying the binary operator '==' (line 263)
                    result_eq_19782 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 13), '==', subscript_call_result_19780, str_19781)
                    
                    # Testing if the type of an if condition is none (line 263)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782):
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 263)
                        if_condition_19783 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 263, 13), result_eq_19782)
                        # Assigning a type to the variable 'if_condition_19783' (line 263)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 13), 'if_condition_19783', if_condition_19783)
                        # SSA begins for if statement (line 263)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Assigning a Call to a Name (line 265):
                        
                        # Call to getrouteaddr(...): (line 265)
                        # Processing the call keyword arguments (line 265)
                        kwargs_19786 = {}
                        # Getting the type of 'self' (line 265)
                        self_19784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 24), 'self', False)
                        # Obtaining the member 'getrouteaddr' of a type (line 265)
                        getrouteaddr_19785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 24), self_19784, 'getrouteaddr')
                        # Calling getrouteaddr(args, kwargs) (line 265)
                        getrouteaddr_call_result_19787 = invoke(stypy.reporting.localization.Localization(__file__, 265, 24), getrouteaddr_19785, *[], **kwargs_19786)
                        
                        # Assigning a type to the variable 'routeaddr' (line 265)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'routeaddr', getrouteaddr_call_result_19787)
                        # Getting the type of 'self' (line 267)
                        self_19788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'self')
                        # Obtaining the member 'commentlist' of a type (line 267)
                        commentlist_19789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 15), self_19788, 'commentlist')
                        # Testing if the type of an if condition is none (line 267)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                        else:
                            
                            # Testing the type of an if condition (line 267)
                            if_condition_19790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 267, 12), commentlist_19789)
                            # Assigning a type to the variable 'if_condition_19790' (line 267)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'if_condition_19790', if_condition_19790)
                            # SSA begins for if statement (line 267)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Assigning a List to a Name (line 268):
                            
                            # Obtaining an instance of the builtin type 'list' (line 268)
                            list_19791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 268)
                            tuple_19792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 268)
                            # Adding element type (line 268)
                            
                            # Call to join(...): (line 268)
                            # Processing the call arguments (line 268)
                            # Getting the type of 'plist' (line 268)
                            plist_19795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 42), 'plist', False)
                            # Processing the call keyword arguments (line 268)
                            kwargs_19796 = {}
                            # Getting the type of 'SPACE' (line 268)
                            SPACE_19793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 268)
                            join_19794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 31), SPACE_19793, 'join')
                            # Calling join(args, kwargs) (line 268)
                            join_call_result_19797 = invoke(stypy.reporting.localization.Localization(__file__, 268, 31), join_19794, *[plist_19795], **kwargs_19796)
                            
                            str_19798 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 51), 'str', ' (')
                            # Applying the binary operator '+' (line 268)
                            result_add_19799 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 31), '+', join_call_result_19797, str_19798)
                            
                            
                            # Call to join(...): (line 269)
                            # Processing the call arguments (line 269)
                            # Getting the type of 'self' (line 269)
                            self_19802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 40), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 269)
                            commentlist_19803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 40), self_19802, 'commentlist')
                            # Processing the call keyword arguments (line 269)
                            kwargs_19804 = {}
                            str_19800 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 31), 'str', ' ')
                            # Obtaining the member 'join' of a type (line 269)
                            join_19801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 31), str_19800, 'join')
                            # Calling join(args, kwargs) (line 269)
                            join_call_result_19805 = invoke(stypy.reporting.localization.Localization(__file__, 269, 31), join_19801, *[commentlist_19803], **kwargs_19804)
                            
                            # Applying the binary operator '+' (line 268)
                            result_add_19806 = python_operator(stypy.reporting.localization.Localization(__file__, 268, 56), '+', result_add_19799, join_call_result_19805)
                            
                            str_19807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 60), 'str', ')')
                            # Applying the binary operator '+' (line 269)
                            result_add_19808 = python_operator(stypy.reporting.localization.Localization(__file__, 269, 58), '+', result_add_19806, str_19807)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, result_add_19808)
                            # Adding element type (line 268)
                            # Getting the type of 'routeaddr' (line 269)
                            routeaddr_19809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 65), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 31), tuple_19792, routeaddr_19809)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 268, 29), list_19791, tuple_19792)
                            
                            # Assigning a type to the variable 'returnlist' (line 268)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 16), 'returnlist', list_19791)
                            # SSA branch for the else part of an if statement (line 267)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Assigning a List to a Name (line 271):
                            
                            # Obtaining an instance of the builtin type 'list' (line 271)
                            list_19810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 271)
                            tuple_19811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 271)
                            # Adding element type (line 271)
                            
                            # Call to join(...): (line 271)
                            # Processing the call arguments (line 271)
                            # Getting the type of 'plist' (line 271)
                            plist_19814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 42), 'plist', False)
                            # Processing the call keyword arguments (line 271)
                            kwargs_19815 = {}
                            # Getting the type of 'SPACE' (line 271)
                            SPACE_19812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 271)
                            join_19813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 31), SPACE_19812, 'join')
                            # Calling join(args, kwargs) (line 271)
                            join_call_result_19816 = invoke(stypy.reporting.localization.Localization(__file__, 271, 31), join_19813, *[plist_19814], **kwargs_19815)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, join_call_result_19816)
                            # Adding element type (line 271)
                            # Getting the type of 'routeaddr' (line 271)
                            routeaddr_19817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 50), 'routeaddr')
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 31), tuple_19811, routeaddr_19817)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 271, 29), list_19810, tuple_19811)
                            
                            # Assigning a type to the variable 'returnlist' (line 271)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'returnlist', list_19810)
                            # SSA join for if statement (line 267)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA branch for the else part of an if statement (line 263)
                        module_type_store.open_ssa_branch('else')
                        # Getting the type of 'plist' (line 274)
                        plist_19818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 15), 'plist')
                        # Testing if the type of an if condition is none (line 274)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 274)
                            if_condition_19819 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 274, 12), plist_19818)
                            # Assigning a type to the variable 'if_condition_19819' (line 274)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'if_condition_19819', if_condition_19819)
                            # SSA begins for if statement (line 274)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Assigning a List to a Name (line 275):
                            
                            # Obtaining an instance of the builtin type 'list' (line 275)
                            list_19820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 29), 'list')
                            # Adding type elements to the builtin type 'list' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Obtaining an instance of the builtin type 'tuple' (line 275)
                            tuple_19821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 31), 'tuple')
                            # Adding type elements to the builtin type 'tuple' instance (line 275)
                            # Adding element type (line 275)
                            
                            # Call to join(...): (line 275)
                            # Processing the call arguments (line 275)
                            # Getting the type of 'self' (line 275)
                            self_19824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 42), 'self', False)
                            # Obtaining the member 'commentlist' of a type (line 275)
                            commentlist_19825 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 42), self_19824, 'commentlist')
                            # Processing the call keyword arguments (line 275)
                            kwargs_19826 = {}
                            # Getting the type of 'SPACE' (line 275)
                            SPACE_19822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 31), 'SPACE', False)
                            # Obtaining the member 'join' of a type (line 275)
                            join_19823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 31), SPACE_19822, 'join')
                            # Calling join(args, kwargs) (line 275)
                            join_call_result_19827 = invoke(stypy.reporting.localization.Localization(__file__, 275, 31), join_19823, *[commentlist_19825], **kwargs_19826)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, join_call_result_19827)
                            # Adding element type (line 275)
                            
                            # Obtaining the type of the subscript
                            int_19828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 275, 67), 'int')
                            # Getting the type of 'plist' (line 275)
                            plist_19829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 61), 'plist')
                            # Obtaining the member '__getitem__' of a type (line 275)
                            getitem___19830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 61), plist_19829, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 275)
                            subscript_call_result_19831 = invoke(stypy.reporting.localization.Localization(__file__, 275, 61), getitem___19830, int_19828)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 31), tuple_19821, subscript_call_result_19831)
                            
                            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 275, 29), list_19820, tuple_19821)
                            
                            # Assigning a type to the variable 'returnlist' (line 275)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 275, 16), 'returnlist', list_19820)
                            # SSA branch for the else part of an if statement (line 274)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 276)
                            self_19832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 276)
                            pos_19833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 28), self_19832, 'pos')
                            # Getting the type of 'self' (line 276)
                            self_19834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'self')
                            # Obtaining the member 'field' of a type (line 276)
                            field_19835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), self_19834, 'field')
                            # Obtaining the member '__getitem__' of a type (line 276)
                            getitem___19836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 17), field_19835, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 276)
                            subscript_call_result_19837 = invoke(stypy.reporting.localization.Localization(__file__, 276, 17), getitem___19836, pos_19833)
                            
                            # Getting the type of 'self' (line 276)
                            self_19838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 41), 'self')
                            # Obtaining the member 'specials' of a type (line 276)
                            specials_19839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 41), self_19838, 'specials')
                            # Applying the binary operator 'in' (line 276)
                            result_contains_19840 = python_operator(stypy.reporting.localization.Localization(__file__, 276, 17), 'in', subscript_call_result_19837, specials_19839)
                            
                            # Testing if the type of an if condition is none (line 276)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 276)
                                if_condition_19841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 276, 17), result_contains_19840)
                                # Assigning a type to the variable 'if_condition_19841' (line 276)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 276, 17), 'if_condition_19841', if_condition_19841)
                                # SSA begins for if statement (line 276)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'self' (line 277)
                                self_19842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Obtaining the member 'pos' of a type (line 277)
                                pos_19843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19842, 'pos')
                                int_19844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 28), 'int')
                                # Applying the binary operator '+=' (line 277)
                                result_iadd_19845 = python_operator(stypy.reporting.localization.Localization(__file__, 277, 16), '+=', pos_19843, int_19844)
                                # Getting the type of 'self' (line 277)
                                self_19846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'self')
                                # Setting the type of the member 'pos' of a type (line 277)
                                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 16), self_19846, 'pos', result_iadd_19845)
                                
                                # SSA join for if statement (line 276)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 274)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 263)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 250)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 242)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for if statement (line 237)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to gotonext(...): (line 279)
        # Processing the call keyword arguments (line 279)
        kwargs_19849 = {}
        # Getting the type of 'self' (line 279)
        self_19847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'self', False)
        # Obtaining the member 'gotonext' of a type (line 279)
        gotonext_19848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 8), self_19847, 'gotonext')
        # Calling gotonext(args, kwargs) (line 279)
        gotonext_call_result_19850 = invoke(stypy.reporting.localization.Localization(__file__, 279, 8), gotonext_19848, *[], **kwargs_19849)
        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 280)
        self_19851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 11), 'self')
        # Obtaining the member 'pos' of a type (line 280)
        pos_19852 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 11), self_19851, 'pos')
        
        # Call to len(...): (line 280)
        # Processing the call arguments (line 280)
        # Getting the type of 'self' (line 280)
        self_19854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 26), 'self', False)
        # Obtaining the member 'field' of a type (line 280)
        field_19855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 26), self_19854, 'field')
        # Processing the call keyword arguments (line 280)
        kwargs_19856 = {}
        # Getting the type of 'len' (line 280)
        len_19853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 22), 'len', False)
        # Calling len(args, kwargs) (line 280)
        len_call_result_19857 = invoke(stypy.reporting.localization.Localization(__file__, 280, 22), len_19853, *[field_19855], **kwargs_19856)
        
        # Applying the binary operator '<' (line 280)
        result_lt_19858 = python_operator(stypy.reporting.localization.Localization(__file__, 280, 11), '<', pos_19852, len_call_result_19857)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 280)
        self_19859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 53), 'self')
        # Obtaining the member 'pos' of a type (line 280)
        pos_19860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 53), self_19859, 'pos')
        # Getting the type of 'self' (line 280)
        self_19861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 42), 'self')
        # Obtaining the member 'field' of a type (line 280)
        field_19862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 42), self_19861, 'field')
        # Obtaining the member '__getitem__' of a type (line 280)
        getitem___19863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 42), field_19862, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 280)
        subscript_call_result_19864 = invoke(stypy.reporting.localization.Localization(__file__, 280, 42), getitem___19863, pos_19860)
        
        str_19865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 66), 'str', ',')
        # Applying the binary operator '==' (line 280)
        result_eq_19866 = python_operator(stypy.reporting.localization.Localization(__file__, 280, 42), '==', subscript_call_result_19864, str_19865)
        
        # Applying the binary operator 'and' (line 280)
        result_and_keyword_19867 = python_operator(stypy.reporting.localization.Localization(__file__, 280, 11), 'and', result_lt_19858, result_eq_19866)
        
        # Testing if the type of an if condition is none (line 280)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 280, 8), result_and_keyword_19867):
            pass
        else:
            
            # Testing the type of an if condition (line 280)
            if_condition_19868 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 280, 8), result_and_keyword_19867)
            # Assigning a type to the variable 'if_condition_19868' (line 280)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 8), 'if_condition_19868', if_condition_19868)
            # SSA begins for if statement (line 280)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'self' (line 281)
            self_19869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 12), 'self')
            # Obtaining the member 'pos' of a type (line 281)
            pos_19870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 12), self_19869, 'pos')
            int_19871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 281, 24), 'int')
            # Applying the binary operator '+=' (line 281)
            result_iadd_19872 = python_operator(stypy.reporting.localization.Localization(__file__, 281, 12), '+=', pos_19870, int_19871)
            # Getting the type of 'self' (line 281)
            self_19873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 12), 'self')
            # Setting the type of the member 'pos' of a type (line 281)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 12), self_19873, 'pos', result_iadd_19872)
            
            # SSA join for if statement (line 280)
            module_type_store = module_type_store.join_ssa_context()
            

        # Getting the type of 'returnlist' (line 282)
        returnlist_19874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 15), 'returnlist')
        # Assigning a type to the variable 'stypy_return_type' (line 282)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 8), 'stypy_return_type', returnlist_19874)
        
        # ################# End of 'getaddress(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getaddress' in the type store
        # Getting the type of 'stypy_return_type' (line 225)
        stypy_return_type_19875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19875)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getaddress'
        return stypy_return_type_19875


    @norecursion
    def getrouteaddr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getrouteaddr'
        module_type_store = module_type_store.open_function_context('getrouteaddr', 284, 4, False)
        # Assigning a type to the variable 'self' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getrouteaddr')
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getrouteaddr.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getrouteaddr', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getrouteaddr', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getrouteaddr(...)' code ##################

        str_19876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 288, (-1)), 'str', 'Parse a route address (Return-path value).\n\n        This method just skips all the route stuff and returns the addrspec.\n        ')
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 289)
        self_19877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 22), 'self')
        # Obtaining the member 'pos' of a type (line 289)
        pos_19878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 22), self_19877, 'pos')
        # Getting the type of 'self' (line 289)
        self_19879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 11), 'self')
        # Obtaining the member 'field' of a type (line 289)
        field_19880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 11), self_19879, 'field')
        # Obtaining the member '__getitem__' of a type (line 289)
        getitem___19881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 11), field_19880, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 289)
        subscript_call_result_19882 = invoke(stypy.reporting.localization.Localization(__file__, 289, 11), getitem___19881, pos_19878)
        
        str_19883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 289, 35), 'str', '<')
        # Applying the binary operator '!=' (line 289)
        result_ne_19884 = python_operator(stypy.reporting.localization.Localization(__file__, 289, 11), '!=', subscript_call_result_19882, str_19883)
        
        # Testing if the type of an if condition is none (line 289)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 289, 8), result_ne_19884):
            pass
        else:
            
            # Testing the type of an if condition (line 289)
            if_condition_19885 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 289, 8), result_ne_19884)
            # Assigning a type to the variable 'if_condition_19885' (line 289)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 8), 'if_condition_19885', if_condition_19885)
            # SSA begins for if statement (line 289)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Assigning a type to the variable 'stypy_return_type' (line 290)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 12), 'stypy_return_type', types.NoneType)
            # SSA join for if statement (line 289)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Name to a Name (line 292):
        
        # Assigning a Name to a Name (line 292):
        # Getting the type of 'False' (line 292)
        False_19886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 22), 'False')
        # Assigning a type to the variable 'expectroute' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'expectroute', False_19886)
        
        # Getting the type of 'self' (line 293)
        self_19887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 8), 'self')
        # Obtaining the member 'pos' of a type (line 293)
        pos_19888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 8), self_19887, 'pos')
        int_19889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 293, 20), 'int')
        # Applying the binary operator '+=' (line 293)
        result_iadd_19890 = python_operator(stypy.reporting.localization.Localization(__file__, 293, 8), '+=', pos_19888, int_19889)
        # Getting the type of 'self' (line 293)
        self_19891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 8), 'self')
        # Setting the type of the member 'pos' of a type (line 293)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 293, 8), self_19891, 'pos', result_iadd_19890)
        
        
        # Call to gotonext(...): (line 294)
        # Processing the call keyword arguments (line 294)
        kwargs_19894 = {}
        # Getting the type of 'self' (line 294)
        self_19892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'self', False)
        # Obtaining the member 'gotonext' of a type (line 294)
        gotonext_19893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 8), self_19892, 'gotonext')
        # Calling gotonext(args, kwargs) (line 294)
        gotonext_call_result_19895 = invoke(stypy.reporting.localization.Localization(__file__, 294, 8), gotonext_19893, *[], **kwargs_19894)
        
        
        # Assigning a Str to a Name (line 295):
        
        # Assigning a Str to a Name (line 295):
        str_19896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 295, 17), 'str', '')
        # Assigning a type to the variable 'adlist' (line 295)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 295, 8), 'adlist', str_19896)
        
        
        # Getting the type of 'self' (line 296)
        self_19897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 14), 'self')
        # Obtaining the member 'pos' of a type (line 296)
        pos_19898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 14), self_19897, 'pos')
        
        # Call to len(...): (line 296)
        # Processing the call arguments (line 296)
        # Getting the type of 'self' (line 296)
        self_19900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 296)
        field_19901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 29), self_19900, 'field')
        # Processing the call keyword arguments (line 296)
        kwargs_19902 = {}
        # Getting the type of 'len' (line 296)
        len_19899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 25), 'len', False)
        # Calling len(args, kwargs) (line 296)
        len_call_result_19903 = invoke(stypy.reporting.localization.Localization(__file__, 296, 25), len_19899, *[field_19901], **kwargs_19902)
        
        # Applying the binary operator '<' (line 296)
        result_lt_19904 = python_operator(stypy.reporting.localization.Localization(__file__, 296, 14), '<', pos_19898, len_call_result_19903)
        
        # Assigning a type to the variable 'result_lt_19904' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'result_lt_19904', result_lt_19904)
        # Testing if the while is going to be iterated (line 296)
        # Testing the type of an if condition (line 296)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 296, 8), result_lt_19904)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 296, 8), result_lt_19904):
            # SSA begins for while statement (line 296)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            # Getting the type of 'expectroute' (line 297)
            expectroute_19905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 15), 'expectroute')
            # Testing if the type of an if condition is none (line 297)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 297, 12), expectroute_19905):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 300)
                self_19912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 28), 'self')
                # Obtaining the member 'pos' of a type (line 300)
                pos_19913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 28), self_19912, 'pos')
                # Getting the type of 'self' (line 300)
                self_19914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 17), 'self')
                # Obtaining the member 'field' of a type (line 300)
                field_19915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 17), self_19914, 'field')
                # Obtaining the member '__getitem__' of a type (line 300)
                getitem___19916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 17), field_19915, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 300)
                subscript_call_result_19917 = invoke(stypy.reporting.localization.Localization(__file__, 300, 17), getitem___19916, pos_19913)
                
                str_19918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 41), 'str', '>')
                # Applying the binary operator '==' (line 300)
                result_eq_19919 = python_operator(stypy.reporting.localization.Localization(__file__, 300, 17), '==', subscript_call_result_19917, str_19918)
                
                # Testing if the type of an if condition is none (line 300)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 300, 17), result_eq_19919):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 303)
                    self_19926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 303)
                    pos_19927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 28), self_19926, 'pos')
                    # Getting the type of 'self' (line 303)
                    self_19928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'self')
                    # Obtaining the member 'field' of a type (line 303)
                    field_19929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), self_19928, 'field')
                    # Obtaining the member '__getitem__' of a type (line 303)
                    getitem___19930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), field_19929, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 303)
                    subscript_call_result_19931 = invoke(stypy.reporting.localization.Localization(__file__, 303, 17), getitem___19930, pos_19927)
                    
                    str_19932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 41), 'str', '@')
                    # Applying the binary operator '==' (line 303)
                    result_eq_19933 = python_operator(stypy.reporting.localization.Localization(__file__, 303, 17), '==', subscript_call_result_19931, str_19932)
                    
                    # Testing if the type of an if condition is none (line 303)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 303)
                        if_condition_19934 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933)
                        # Assigning a type to the variable 'if_condition_19934' (line 303)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'if_condition_19934', if_condition_19934)
                        # SSA begins for if statement (line 303)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Getting the type of 'self' (line 304)
                        self_19935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Obtaining the member 'pos' of a type (line 304)
                        pos_19936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19935, 'pos')
                        int_19937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 28), 'int')
                        # Applying the binary operator '+=' (line 304)
                        result_iadd_19938 = python_operator(stypy.reporting.localization.Localization(__file__, 304, 16), '+=', pos_19936, int_19937)
                        # Getting the type of 'self' (line 304)
                        self_19939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Setting the type of the member 'pos' of a type (line 304)
                        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19939, 'pos', result_iadd_19938)
                        
                        
                        # Assigning a Name to a Name (line 305):
                        
                        # Assigning a Name to a Name (line 305):
                        # Getting the type of 'True' (line 305)
                        True_19940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 30), 'True')
                        # Assigning a type to the variable 'expectroute' (line 305)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 16), 'expectroute', True_19940)
                        # SSA branch for the else part of an if statement (line 303)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 303)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 300)
                    if_condition_19920 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 300, 17), result_eq_19919)
                    # Assigning a type to the variable 'if_condition_19920' (line 300)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 17), 'if_condition_19920', if_condition_19920)
                    # SSA begins for if statement (line 300)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Getting the type of 'self' (line 301)
                    self_19921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 16), 'self')
                    # Obtaining the member 'pos' of a type (line 301)
                    pos_19922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 16), self_19921, 'pos')
                    int_19923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 28), 'int')
                    # Applying the binary operator '+=' (line 301)
                    result_iadd_19924 = python_operator(stypy.reporting.localization.Localization(__file__, 301, 16), '+=', pos_19922, int_19923)
                    # Getting the type of 'self' (line 301)
                    self_19925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 16), 'self')
                    # Setting the type of the member 'pos' of a type (line 301)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 16), self_19925, 'pos', result_iadd_19924)
                    
                    # SSA branch for the else part of an if statement (line 300)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 303)
                    self_19926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 303)
                    pos_19927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 28), self_19926, 'pos')
                    # Getting the type of 'self' (line 303)
                    self_19928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'self')
                    # Obtaining the member 'field' of a type (line 303)
                    field_19929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), self_19928, 'field')
                    # Obtaining the member '__getitem__' of a type (line 303)
                    getitem___19930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), field_19929, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 303)
                    subscript_call_result_19931 = invoke(stypy.reporting.localization.Localization(__file__, 303, 17), getitem___19930, pos_19927)
                    
                    str_19932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 41), 'str', '@')
                    # Applying the binary operator '==' (line 303)
                    result_eq_19933 = python_operator(stypy.reporting.localization.Localization(__file__, 303, 17), '==', subscript_call_result_19931, str_19932)
                    
                    # Testing if the type of an if condition is none (line 303)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 303)
                        if_condition_19934 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933)
                        # Assigning a type to the variable 'if_condition_19934' (line 303)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'if_condition_19934', if_condition_19934)
                        # SSA begins for if statement (line 303)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Getting the type of 'self' (line 304)
                        self_19935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Obtaining the member 'pos' of a type (line 304)
                        pos_19936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19935, 'pos')
                        int_19937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 28), 'int')
                        # Applying the binary operator '+=' (line 304)
                        result_iadd_19938 = python_operator(stypy.reporting.localization.Localization(__file__, 304, 16), '+=', pos_19936, int_19937)
                        # Getting the type of 'self' (line 304)
                        self_19939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Setting the type of the member 'pos' of a type (line 304)
                        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19939, 'pos', result_iadd_19938)
                        
                        
                        # Assigning a Name to a Name (line 305):
                        
                        # Assigning a Name to a Name (line 305):
                        # Getting the type of 'True' (line 305)
                        True_19940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 30), 'True')
                        # Assigning a type to the variable 'expectroute' (line 305)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 16), 'expectroute', True_19940)
                        # SSA branch for the else part of an if statement (line 303)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 303)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 300)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 297)
                if_condition_19906 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 297, 12), expectroute_19905)
                # Assigning a type to the variable 'if_condition_19906' (line 297)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 12), 'if_condition_19906', if_condition_19906)
                # SSA begins for if statement (line 297)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to getdomain(...): (line 298)
                # Processing the call keyword arguments (line 298)
                kwargs_19909 = {}
                # Getting the type of 'self' (line 298)
                self_19907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 16), 'self', False)
                # Obtaining the member 'getdomain' of a type (line 298)
                getdomain_19908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 16), self_19907, 'getdomain')
                # Calling getdomain(args, kwargs) (line 298)
                getdomain_call_result_19910 = invoke(stypy.reporting.localization.Localization(__file__, 298, 16), getdomain_19908, *[], **kwargs_19909)
                
                
                # Assigning a Name to a Name (line 299):
                
                # Assigning a Name to a Name (line 299):
                # Getting the type of 'False' (line 299)
                False_19911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 30), 'False')
                # Assigning a type to the variable 'expectroute' (line 299)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 299, 16), 'expectroute', False_19911)
                # SSA branch for the else part of an if statement (line 297)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 300)
                self_19912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 28), 'self')
                # Obtaining the member 'pos' of a type (line 300)
                pos_19913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 28), self_19912, 'pos')
                # Getting the type of 'self' (line 300)
                self_19914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 17), 'self')
                # Obtaining the member 'field' of a type (line 300)
                field_19915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 17), self_19914, 'field')
                # Obtaining the member '__getitem__' of a type (line 300)
                getitem___19916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 17), field_19915, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 300)
                subscript_call_result_19917 = invoke(stypy.reporting.localization.Localization(__file__, 300, 17), getitem___19916, pos_19913)
                
                str_19918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 300, 41), 'str', '>')
                # Applying the binary operator '==' (line 300)
                result_eq_19919 = python_operator(stypy.reporting.localization.Localization(__file__, 300, 17), '==', subscript_call_result_19917, str_19918)
                
                # Testing if the type of an if condition is none (line 300)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 300, 17), result_eq_19919):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 303)
                    self_19926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 303)
                    pos_19927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 28), self_19926, 'pos')
                    # Getting the type of 'self' (line 303)
                    self_19928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'self')
                    # Obtaining the member 'field' of a type (line 303)
                    field_19929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), self_19928, 'field')
                    # Obtaining the member '__getitem__' of a type (line 303)
                    getitem___19930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), field_19929, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 303)
                    subscript_call_result_19931 = invoke(stypy.reporting.localization.Localization(__file__, 303, 17), getitem___19930, pos_19927)
                    
                    str_19932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 41), 'str', '@')
                    # Applying the binary operator '==' (line 303)
                    result_eq_19933 = python_operator(stypy.reporting.localization.Localization(__file__, 303, 17), '==', subscript_call_result_19931, str_19932)
                    
                    # Testing if the type of an if condition is none (line 303)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 303)
                        if_condition_19934 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933)
                        # Assigning a type to the variable 'if_condition_19934' (line 303)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'if_condition_19934', if_condition_19934)
                        # SSA begins for if statement (line 303)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Getting the type of 'self' (line 304)
                        self_19935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Obtaining the member 'pos' of a type (line 304)
                        pos_19936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19935, 'pos')
                        int_19937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 28), 'int')
                        # Applying the binary operator '+=' (line 304)
                        result_iadd_19938 = python_operator(stypy.reporting.localization.Localization(__file__, 304, 16), '+=', pos_19936, int_19937)
                        # Getting the type of 'self' (line 304)
                        self_19939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Setting the type of the member 'pos' of a type (line 304)
                        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19939, 'pos', result_iadd_19938)
                        
                        
                        # Assigning a Name to a Name (line 305):
                        
                        # Assigning a Name to a Name (line 305):
                        # Getting the type of 'True' (line 305)
                        True_19940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 30), 'True')
                        # Assigning a type to the variable 'expectroute' (line 305)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 16), 'expectroute', True_19940)
                        # SSA branch for the else part of an if statement (line 303)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 303)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 300)
                    if_condition_19920 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 300, 17), result_eq_19919)
                    # Assigning a type to the variable 'if_condition_19920' (line 300)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 17), 'if_condition_19920', if_condition_19920)
                    # SSA begins for if statement (line 300)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Getting the type of 'self' (line 301)
                    self_19921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 16), 'self')
                    # Obtaining the member 'pos' of a type (line 301)
                    pos_19922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 16), self_19921, 'pos')
                    int_19923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 28), 'int')
                    # Applying the binary operator '+=' (line 301)
                    result_iadd_19924 = python_operator(stypy.reporting.localization.Localization(__file__, 301, 16), '+=', pos_19922, int_19923)
                    # Getting the type of 'self' (line 301)
                    self_19925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 16), 'self')
                    # Setting the type of the member 'pos' of a type (line 301)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 16), self_19925, 'pos', result_iadd_19924)
                    
                    # SSA branch for the else part of an if statement (line 300)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 303)
                    self_19926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 303)
                    pos_19927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 28), self_19926, 'pos')
                    # Getting the type of 'self' (line 303)
                    self_19928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'self')
                    # Obtaining the member 'field' of a type (line 303)
                    field_19929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), self_19928, 'field')
                    # Obtaining the member '__getitem__' of a type (line 303)
                    getitem___19930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 17), field_19929, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 303)
                    subscript_call_result_19931 = invoke(stypy.reporting.localization.Localization(__file__, 303, 17), getitem___19930, pos_19927)
                    
                    str_19932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 41), 'str', '@')
                    # Applying the binary operator '==' (line 303)
                    result_eq_19933 = python_operator(stypy.reporting.localization.Localization(__file__, 303, 17), '==', subscript_call_result_19931, str_19932)
                    
                    # Testing if the type of an if condition is none (line 303)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 303)
                        if_condition_19934 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 303, 17), result_eq_19933)
                        # Assigning a type to the variable 'if_condition_19934' (line 303)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 17), 'if_condition_19934', if_condition_19934)
                        # SSA begins for if statement (line 303)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Getting the type of 'self' (line 304)
                        self_19935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Obtaining the member 'pos' of a type (line 304)
                        pos_19936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19935, 'pos')
                        int_19937 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 28), 'int')
                        # Applying the binary operator '+=' (line 304)
                        result_iadd_19938 = python_operator(stypy.reporting.localization.Localization(__file__, 304, 16), '+=', pos_19936, int_19937)
                        # Getting the type of 'self' (line 304)
                        self_19939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 16), 'self')
                        # Setting the type of the member 'pos' of a type (line 304)
                        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 16), self_19939, 'pos', result_iadd_19938)
                        
                        
                        # Assigning a Name to a Name (line 305):
                        
                        # Assigning a Name to a Name (line 305):
                        # Getting the type of 'True' (line 305)
                        True_19940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 30), 'True')
                        # Assigning a type to the variable 'expectroute' (line 305)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 16), 'expectroute', True_19940)
                        # SSA branch for the else part of an if statement (line 303)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 306)
                        self_19941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 306)
                        pos_19942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 28), self_19941, 'pos')
                        # Getting the type of 'self' (line 306)
                        self_19943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'self')
                        # Obtaining the member 'field' of a type (line 306)
                        field_19944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), self_19943, 'field')
                        # Obtaining the member '__getitem__' of a type (line 306)
                        getitem___19945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 17), field_19944, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 306)
                        subscript_call_result_19946 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), getitem___19945, pos_19942)
                        
                        str_19947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 41), 'str', ':')
                        # Applying the binary operator '==' (line 306)
                        result_eq_19948 = python_operator(stypy.reporting.localization.Localization(__file__, 306, 17), '==', subscript_call_result_19946, str_19947)
                        
                        # Testing if the type of an if condition is none (line 306)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                        else:
                            
                            # Testing the type of an if condition (line 306)
                            if_condition_19949 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 306, 17), result_eq_19948)
                            # Assigning a type to the variable 'if_condition_19949' (line 306)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'if_condition_19949', if_condition_19949)
                            # SSA begins for if statement (line 306)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 307)
                            self_19950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 307)
                            pos_19951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19950, 'pos')
                            int_19952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 307, 28), 'int')
                            # Applying the binary operator '+=' (line 307)
                            result_iadd_19953 = python_operator(stypy.reporting.localization.Localization(__file__, 307, 16), '+=', pos_19951, int_19952)
                            # Getting the type of 'self' (line 307)
                            self_19954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 307)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 16), self_19954, 'pos', result_iadd_19953)
                            
                            # SSA branch for the else part of an if statement (line 306)
                            module_type_store.open_ssa_branch('else')
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Assigning a Call to a Name (line 309):
                            
                            # Call to getaddrspec(...): (line 309)
                            # Processing the call keyword arguments (line 309)
                            kwargs_19957 = {}
                            # Getting the type of 'self' (line 309)
                            self_19955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 25), 'self', False)
                            # Obtaining the member 'getaddrspec' of a type (line 309)
                            getaddrspec_19956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 309, 25), self_19955, 'getaddrspec')
                            # Calling getaddrspec(args, kwargs) (line 309)
                            getaddrspec_call_result_19958 = invoke(stypy.reporting.localization.Localization(__file__, 309, 25), getaddrspec_19956, *[], **kwargs_19957)
                            
                            # Assigning a type to the variable 'adlist' (line 309)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 309, 16), 'adlist', getaddrspec_call_result_19958)
                            
                            # Getting the type of 'self' (line 310)
                            self_19959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 310)
                            pos_19960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19959, 'pos')
                            int_19961 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 310, 28), 'int')
                            # Applying the binary operator '+=' (line 310)
                            result_iadd_19962 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 16), '+=', pos_19960, int_19961)
                            # Getting the type of 'self' (line 310)
                            self_19963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 310)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 16), self_19963, 'pos', result_iadd_19962)
                            
                            # SSA join for if statement (line 306)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 303)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 300)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 297)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to gotonext(...): (line 312)
            # Processing the call keyword arguments (line 312)
            kwargs_19966 = {}
            # Getting the type of 'self' (line 312)
            self_19964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 12), 'self', False)
            # Obtaining the member 'gotonext' of a type (line 312)
            gotonext_19965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 12), self_19964, 'gotonext')
            # Calling gotonext(args, kwargs) (line 312)
            gotonext_call_result_19967 = invoke(stypy.reporting.localization.Localization(__file__, 312, 12), gotonext_19965, *[], **kwargs_19966)
            
            # SSA join for while statement (line 296)
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'adlist' (line 314)
        adlist_19968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 15), 'adlist')
        # Assigning a type to the variable 'stypy_return_type' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'stypy_return_type', adlist_19968)
        
        # ################# End of 'getrouteaddr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getrouteaddr' in the type store
        # Getting the type of 'stypy_return_type' (line 284)
        stypy_return_type_19969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_19969)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getrouteaddr'
        return stypy_return_type_19969


    @norecursion
    def getaddrspec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getaddrspec'
        module_type_store = module_type_store.open_function_context('getaddrspec', 316, 4, False)
        # Assigning a type to the variable 'self' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getaddrspec')
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getaddrspec.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getaddrspec', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getaddrspec', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getaddrspec(...)' code ##################

        str_19970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 8), 'str', 'Parse an RFC 2822 addr-spec.')
        
        # Assigning a List to a Name (line 318):
        
        # Assigning a List to a Name (line 318):
        
        # Obtaining an instance of the builtin type 'list' (line 318)
        list_19971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 318)
        
        # Assigning a type to the variable 'aslist' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'aslist', list_19971)
        
        # Call to gotonext(...): (line 320)
        # Processing the call keyword arguments (line 320)
        kwargs_19974 = {}
        # Getting the type of 'self' (line 320)
        self_19972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'self', False)
        # Obtaining the member 'gotonext' of a type (line 320)
        gotonext_19973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 8), self_19972, 'gotonext')
        # Calling gotonext(args, kwargs) (line 320)
        gotonext_call_result_19975 = invoke(stypy.reporting.localization.Localization(__file__, 320, 8), gotonext_19973, *[], **kwargs_19974)
        
        
        
        # Getting the type of 'self' (line 321)
        self_19976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 14), 'self')
        # Obtaining the member 'pos' of a type (line 321)
        pos_19977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 14), self_19976, 'pos')
        
        # Call to len(...): (line 321)
        # Processing the call arguments (line 321)
        # Getting the type of 'self' (line 321)
        self_19979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 321)
        field_19980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 29), self_19979, 'field')
        # Processing the call keyword arguments (line 321)
        kwargs_19981 = {}
        # Getting the type of 'len' (line 321)
        len_19978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 25), 'len', False)
        # Calling len(args, kwargs) (line 321)
        len_call_result_19982 = invoke(stypy.reporting.localization.Localization(__file__, 321, 25), len_19978, *[field_19980], **kwargs_19981)
        
        # Applying the binary operator '<' (line 321)
        result_lt_19983 = python_operator(stypy.reporting.localization.Localization(__file__, 321, 14), '<', pos_19977, len_call_result_19982)
        
        # Assigning a type to the variable 'result_lt_19983' (line 321)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 321, 8), 'result_lt_19983', result_lt_19983)
        # Testing if the while is going to be iterated (line 321)
        # Testing the type of an if condition (line 321)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 321, 8), result_lt_19983)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 321, 8), result_lt_19983):
            # SSA begins for while statement (line 321)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'self' (line 322)
            self_19984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 26), 'self')
            # Obtaining the member 'pos' of a type (line 322)
            pos_19985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 26), self_19984, 'pos')
            # Getting the type of 'self' (line 322)
            self_19986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 15), 'self')
            # Obtaining the member 'field' of a type (line 322)
            field_19987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 15), self_19986, 'field')
            # Obtaining the member '__getitem__' of a type (line 322)
            getitem___19988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 15), field_19987, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 322)
            subscript_call_result_19989 = invoke(stypy.reporting.localization.Localization(__file__, 322, 15), getitem___19988, pos_19985)
            
            str_19990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 39), 'str', '.')
            # Applying the binary operator '==' (line 322)
            result_eq_19991 = python_operator(stypy.reporting.localization.Localization(__file__, 322, 15), '==', subscript_call_result_19989, str_19990)
            
            # Testing if the type of an if condition is none (line 322)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 322, 12), result_eq_19991):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 325)
                self_20003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 28), 'self')
                # Obtaining the member 'pos' of a type (line 325)
                pos_20004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 28), self_20003, 'pos')
                # Getting the type of 'self' (line 325)
                self_20005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 17), 'self')
                # Obtaining the member 'field' of a type (line 325)
                field_20006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 17), self_20005, 'field')
                # Obtaining the member '__getitem__' of a type (line 325)
                getitem___20007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 17), field_20006, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 325)
                subscript_call_result_20008 = invoke(stypy.reporting.localization.Localization(__file__, 325, 17), getitem___20007, pos_20004)
                
                str_20009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 41), 'str', '"')
                # Applying the binary operator '==' (line 325)
                result_eq_20010 = python_operator(stypy.reporting.localization.Localization(__file__, 325, 17), '==', subscript_call_result_20008, str_20009)
                
                # Testing if the type of an if condition is none (line 325)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 325, 17), result_eq_20010):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 327)
                    self_20025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 327)
                    pos_20026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 28), self_20025, 'pos')
                    # Getting the type of 'self' (line 327)
                    self_20027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'self')
                    # Obtaining the member 'field' of a type (line 327)
                    field_20028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), self_20027, 'field')
                    # Obtaining the member '__getitem__' of a type (line 327)
                    getitem___20029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), field_20028, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 327)
                    subscript_call_result_20030 = invoke(stypy.reporting.localization.Localization(__file__, 327, 17), getitem___20029, pos_20026)
                    
                    # Getting the type of 'self' (line 327)
                    self_20031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 41), 'self')
                    # Obtaining the member 'atomends' of a type (line 327)
                    atomends_20032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 41), self_20031, 'atomends')
                    # Applying the binary operator 'in' (line 327)
                    result_contains_20033 = python_operator(stypy.reporting.localization.Localization(__file__, 327, 17), 'in', subscript_call_result_20030, atomends_20032)
                    
                    # Testing if the type of an if condition is none (line 327)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033):
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                    else:
                        
                        # Testing the type of an if condition (line 327)
                        if_condition_20034 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033)
                        # Assigning a type to the variable 'if_condition_20034' (line 327)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'if_condition_20034', if_condition_20034)
                        # SSA begins for if statement (line 327)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        # SSA branch for the else part of an if statement (line 327)
                        module_type_store.open_ssa_branch('else')
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                        # SSA join for if statement (line 327)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 325)
                    if_condition_20011 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 325, 17), result_eq_20010)
                    # Assigning a type to the variable 'if_condition_20011' (line 325)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 17), 'if_condition_20011', if_condition_20011)
                    # SSA begins for if statement (line 325)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 326)
                    # Processing the call arguments (line 326)
                    str_20014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 30), 'str', '"%s"')
                    
                    # Call to quote(...): (line 326)
                    # Processing the call arguments (line 326)
                    
                    # Call to getquote(...): (line 326)
                    # Processing the call keyword arguments (line 326)
                    kwargs_20018 = {}
                    # Getting the type of 'self' (line 326)
                    self_20016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 45), 'self', False)
                    # Obtaining the member 'getquote' of a type (line 326)
                    getquote_20017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 45), self_20016, 'getquote')
                    # Calling getquote(args, kwargs) (line 326)
                    getquote_call_result_20019 = invoke(stypy.reporting.localization.Localization(__file__, 326, 45), getquote_20017, *[], **kwargs_20018)
                    
                    # Processing the call keyword arguments (line 326)
                    kwargs_20020 = {}
                    # Getting the type of 'quote' (line 326)
                    quote_20015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 39), 'quote', False)
                    # Calling quote(args, kwargs) (line 326)
                    quote_call_result_20021 = invoke(stypy.reporting.localization.Localization(__file__, 326, 39), quote_20015, *[getquote_call_result_20019], **kwargs_20020)
                    
                    # Applying the binary operator '%' (line 326)
                    result_mod_20022 = python_operator(stypy.reporting.localization.Localization(__file__, 326, 30), '%', str_20014, quote_call_result_20021)
                    
                    # Processing the call keyword arguments (line 326)
                    kwargs_20023 = {}
                    # Getting the type of 'aslist' (line 326)
                    aslist_20012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 16), 'aslist', False)
                    # Obtaining the member 'append' of a type (line 326)
                    append_20013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 16), aslist_20012, 'append')
                    # Calling append(args, kwargs) (line 326)
                    append_call_result_20024 = invoke(stypy.reporting.localization.Localization(__file__, 326, 16), append_20013, *[result_mod_20022], **kwargs_20023)
                    
                    # SSA branch for the else part of an if statement (line 325)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 327)
                    self_20025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 327)
                    pos_20026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 28), self_20025, 'pos')
                    # Getting the type of 'self' (line 327)
                    self_20027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'self')
                    # Obtaining the member 'field' of a type (line 327)
                    field_20028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), self_20027, 'field')
                    # Obtaining the member '__getitem__' of a type (line 327)
                    getitem___20029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), field_20028, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 327)
                    subscript_call_result_20030 = invoke(stypy.reporting.localization.Localization(__file__, 327, 17), getitem___20029, pos_20026)
                    
                    # Getting the type of 'self' (line 327)
                    self_20031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 41), 'self')
                    # Obtaining the member 'atomends' of a type (line 327)
                    atomends_20032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 41), self_20031, 'atomends')
                    # Applying the binary operator 'in' (line 327)
                    result_contains_20033 = python_operator(stypy.reporting.localization.Localization(__file__, 327, 17), 'in', subscript_call_result_20030, atomends_20032)
                    
                    # Testing if the type of an if condition is none (line 327)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033):
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                    else:
                        
                        # Testing the type of an if condition (line 327)
                        if_condition_20034 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033)
                        # Assigning a type to the variable 'if_condition_20034' (line 327)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'if_condition_20034', if_condition_20034)
                        # SSA begins for if statement (line 327)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        # SSA branch for the else part of an if statement (line 327)
                        module_type_store.open_ssa_branch('else')
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                        # SSA join for if statement (line 327)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 325)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 322)
                if_condition_19992 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 322, 12), result_eq_19991)
                # Assigning a type to the variable 'if_condition_19992' (line 322)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 322, 12), 'if_condition_19992', if_condition_19992)
                # SSA begins for if statement (line 322)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 323)
                # Processing the call arguments (line 323)
                str_19995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 30), 'str', '.')
                # Processing the call keyword arguments (line 323)
                kwargs_19996 = {}
                # Getting the type of 'aslist' (line 323)
                aslist_19993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 16), 'aslist', False)
                # Obtaining the member 'append' of a type (line 323)
                append_19994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 16), aslist_19993, 'append')
                # Calling append(args, kwargs) (line 323)
                append_call_result_19997 = invoke(stypy.reporting.localization.Localization(__file__, 323, 16), append_19994, *[str_19995], **kwargs_19996)
                
                
                # Getting the type of 'self' (line 324)
                self_19998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 16), 'self')
                # Obtaining the member 'pos' of a type (line 324)
                pos_19999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 16), self_19998, 'pos')
                int_20000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 324, 28), 'int')
                # Applying the binary operator '+=' (line 324)
                result_iadd_20001 = python_operator(stypy.reporting.localization.Localization(__file__, 324, 16), '+=', pos_19999, int_20000)
                # Getting the type of 'self' (line 324)
                self_20002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 16), 'self')
                # Setting the type of the member 'pos' of a type (line 324)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 16), self_20002, 'pos', result_iadd_20001)
                
                # SSA branch for the else part of an if statement (line 322)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 325)
                self_20003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 28), 'self')
                # Obtaining the member 'pos' of a type (line 325)
                pos_20004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 28), self_20003, 'pos')
                # Getting the type of 'self' (line 325)
                self_20005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 17), 'self')
                # Obtaining the member 'field' of a type (line 325)
                field_20006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 17), self_20005, 'field')
                # Obtaining the member '__getitem__' of a type (line 325)
                getitem___20007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 325, 17), field_20006, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 325)
                subscript_call_result_20008 = invoke(stypy.reporting.localization.Localization(__file__, 325, 17), getitem___20007, pos_20004)
                
                str_20009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 325, 41), 'str', '"')
                # Applying the binary operator '==' (line 325)
                result_eq_20010 = python_operator(stypy.reporting.localization.Localization(__file__, 325, 17), '==', subscript_call_result_20008, str_20009)
                
                # Testing if the type of an if condition is none (line 325)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 325, 17), result_eq_20010):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 327)
                    self_20025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 327)
                    pos_20026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 28), self_20025, 'pos')
                    # Getting the type of 'self' (line 327)
                    self_20027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'self')
                    # Obtaining the member 'field' of a type (line 327)
                    field_20028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), self_20027, 'field')
                    # Obtaining the member '__getitem__' of a type (line 327)
                    getitem___20029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), field_20028, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 327)
                    subscript_call_result_20030 = invoke(stypy.reporting.localization.Localization(__file__, 327, 17), getitem___20029, pos_20026)
                    
                    # Getting the type of 'self' (line 327)
                    self_20031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 41), 'self')
                    # Obtaining the member 'atomends' of a type (line 327)
                    atomends_20032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 41), self_20031, 'atomends')
                    # Applying the binary operator 'in' (line 327)
                    result_contains_20033 = python_operator(stypy.reporting.localization.Localization(__file__, 327, 17), 'in', subscript_call_result_20030, atomends_20032)
                    
                    # Testing if the type of an if condition is none (line 327)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033):
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                    else:
                        
                        # Testing the type of an if condition (line 327)
                        if_condition_20034 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033)
                        # Assigning a type to the variable 'if_condition_20034' (line 327)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'if_condition_20034', if_condition_20034)
                        # SSA begins for if statement (line 327)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        # SSA branch for the else part of an if statement (line 327)
                        module_type_store.open_ssa_branch('else')
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                        # SSA join for if statement (line 327)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 325)
                    if_condition_20011 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 325, 17), result_eq_20010)
                    # Assigning a type to the variable 'if_condition_20011' (line 325)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 325, 17), 'if_condition_20011', if_condition_20011)
                    # SSA begins for if statement (line 325)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 326)
                    # Processing the call arguments (line 326)
                    str_20014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 30), 'str', '"%s"')
                    
                    # Call to quote(...): (line 326)
                    # Processing the call arguments (line 326)
                    
                    # Call to getquote(...): (line 326)
                    # Processing the call keyword arguments (line 326)
                    kwargs_20018 = {}
                    # Getting the type of 'self' (line 326)
                    self_20016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 45), 'self', False)
                    # Obtaining the member 'getquote' of a type (line 326)
                    getquote_20017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 45), self_20016, 'getquote')
                    # Calling getquote(args, kwargs) (line 326)
                    getquote_call_result_20019 = invoke(stypy.reporting.localization.Localization(__file__, 326, 45), getquote_20017, *[], **kwargs_20018)
                    
                    # Processing the call keyword arguments (line 326)
                    kwargs_20020 = {}
                    # Getting the type of 'quote' (line 326)
                    quote_20015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 39), 'quote', False)
                    # Calling quote(args, kwargs) (line 326)
                    quote_call_result_20021 = invoke(stypy.reporting.localization.Localization(__file__, 326, 39), quote_20015, *[getquote_call_result_20019], **kwargs_20020)
                    
                    # Applying the binary operator '%' (line 326)
                    result_mod_20022 = python_operator(stypy.reporting.localization.Localization(__file__, 326, 30), '%', str_20014, quote_call_result_20021)
                    
                    # Processing the call keyword arguments (line 326)
                    kwargs_20023 = {}
                    # Getting the type of 'aslist' (line 326)
                    aslist_20012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 16), 'aslist', False)
                    # Obtaining the member 'append' of a type (line 326)
                    append_20013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 16), aslist_20012, 'append')
                    # Calling append(args, kwargs) (line 326)
                    append_call_result_20024 = invoke(stypy.reporting.localization.Localization(__file__, 326, 16), append_20013, *[result_mod_20022], **kwargs_20023)
                    
                    # SSA branch for the else part of an if statement (line 325)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 327)
                    self_20025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 327)
                    pos_20026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 28), self_20025, 'pos')
                    # Getting the type of 'self' (line 327)
                    self_20027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'self')
                    # Obtaining the member 'field' of a type (line 327)
                    field_20028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), self_20027, 'field')
                    # Obtaining the member '__getitem__' of a type (line 327)
                    getitem___20029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 17), field_20028, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 327)
                    subscript_call_result_20030 = invoke(stypy.reporting.localization.Localization(__file__, 327, 17), getitem___20029, pos_20026)
                    
                    # Getting the type of 'self' (line 327)
                    self_20031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 41), 'self')
                    # Obtaining the member 'atomends' of a type (line 327)
                    atomends_20032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 41), self_20031, 'atomends')
                    # Applying the binary operator 'in' (line 327)
                    result_contains_20033 = python_operator(stypy.reporting.localization.Localization(__file__, 327, 17), 'in', subscript_call_result_20030, atomends_20032)
                    
                    # Testing if the type of an if condition is none (line 327)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033):
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                    else:
                        
                        # Testing the type of an if condition (line 327)
                        if_condition_20034 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 327, 17), result_contains_20033)
                        # Assigning a type to the variable 'if_condition_20034' (line 327)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 17), 'if_condition_20034', if_condition_20034)
                        # SSA begins for if statement (line 327)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        # SSA branch for the else part of an if statement (line 327)
                        module_type_store.open_ssa_branch('else')
                        
                        # Call to append(...): (line 330)
                        # Processing the call arguments (line 330)
                        
                        # Call to getatom(...): (line 330)
                        # Processing the call keyword arguments (line 330)
                        kwargs_20039 = {}
                        # Getting the type of 'self' (line 330)
                        self_20037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 30), 'self', False)
                        # Obtaining the member 'getatom' of a type (line 330)
                        getatom_20038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 30), self_20037, 'getatom')
                        # Calling getatom(args, kwargs) (line 330)
                        getatom_call_result_20040 = invoke(stypy.reporting.localization.Localization(__file__, 330, 30), getatom_20038, *[], **kwargs_20039)
                        
                        # Processing the call keyword arguments (line 330)
                        kwargs_20041 = {}
                        # Getting the type of 'aslist' (line 330)
                        aslist_20035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 16), 'aslist', False)
                        # Obtaining the member 'append' of a type (line 330)
                        append_20036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 16), aslist_20035, 'append')
                        # Calling append(args, kwargs) (line 330)
                        append_call_result_20042 = invoke(stypy.reporting.localization.Localization(__file__, 330, 16), append_20036, *[getatom_call_result_20040], **kwargs_20041)
                        
                        # SSA join for if statement (line 327)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 325)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 322)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to gotonext(...): (line 331)
            # Processing the call keyword arguments (line 331)
            kwargs_20045 = {}
            # Getting the type of 'self' (line 331)
            self_20043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 12), 'self', False)
            # Obtaining the member 'gotonext' of a type (line 331)
            gotonext_20044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 331, 12), self_20043, 'gotonext')
            # Calling gotonext(args, kwargs) (line 331)
            gotonext_call_result_20046 = invoke(stypy.reporting.localization.Localization(__file__, 331, 12), gotonext_20044, *[], **kwargs_20045)
            
            # SSA join for while statement (line 321)
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Evaluating a boolean operation
        
        # Getting the type of 'self' (line 333)
        self_20047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 11), 'self')
        # Obtaining the member 'pos' of a type (line 333)
        pos_20048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 11), self_20047, 'pos')
        
        # Call to len(...): (line 333)
        # Processing the call arguments (line 333)
        # Getting the type of 'self' (line 333)
        self_20050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 27), 'self', False)
        # Obtaining the member 'field' of a type (line 333)
        field_20051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 27), self_20050, 'field')
        # Processing the call keyword arguments (line 333)
        kwargs_20052 = {}
        # Getting the type of 'len' (line 333)
        len_20049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 23), 'len', False)
        # Calling len(args, kwargs) (line 333)
        len_call_result_20053 = invoke(stypy.reporting.localization.Localization(__file__, 333, 23), len_20049, *[field_20051], **kwargs_20052)
        
        # Applying the binary operator '>=' (line 333)
        result_ge_20054 = python_operator(stypy.reporting.localization.Localization(__file__, 333, 11), '>=', pos_20048, len_call_result_20053)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 333)
        self_20055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 53), 'self')
        # Obtaining the member 'pos' of a type (line 333)
        pos_20056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 53), self_20055, 'pos')
        # Getting the type of 'self' (line 333)
        self_20057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 42), 'self')
        # Obtaining the member 'field' of a type (line 333)
        field_20058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 42), self_20057, 'field')
        # Obtaining the member '__getitem__' of a type (line 333)
        getitem___20059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 42), field_20058, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 333)
        subscript_call_result_20060 = invoke(stypy.reporting.localization.Localization(__file__, 333, 42), getitem___20059, pos_20056)
        
        str_20061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 66), 'str', '@')
        # Applying the binary operator '!=' (line 333)
        result_ne_20062 = python_operator(stypy.reporting.localization.Localization(__file__, 333, 42), '!=', subscript_call_result_20060, str_20061)
        
        # Applying the binary operator 'or' (line 333)
        result_or_keyword_20063 = python_operator(stypy.reporting.localization.Localization(__file__, 333, 11), 'or', result_ge_20054, result_ne_20062)
        
        # Testing if the type of an if condition is none (line 333)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 333, 8), result_or_keyword_20063):
            pass
        else:
            
            # Testing the type of an if condition (line 333)
            if_condition_20064 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 333, 8), result_or_keyword_20063)
            # Assigning a type to the variable 'if_condition_20064' (line 333)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'if_condition_20064', if_condition_20064)
            # SSA begins for if statement (line 333)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to join(...): (line 334)
            # Processing the call arguments (line 334)
            # Getting the type of 'aslist' (line 334)
            aslist_20067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 36), 'aslist', False)
            # Processing the call keyword arguments (line 334)
            kwargs_20068 = {}
            # Getting the type of 'EMPTYSTRING' (line 334)
            EMPTYSTRING_20065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 19), 'EMPTYSTRING', False)
            # Obtaining the member 'join' of a type (line 334)
            join_20066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 19), EMPTYSTRING_20065, 'join')
            # Calling join(args, kwargs) (line 334)
            join_call_result_20069 = invoke(stypy.reporting.localization.Localization(__file__, 334, 19), join_20066, *[aslist_20067], **kwargs_20068)
            
            # Assigning a type to the variable 'stypy_return_type' (line 334)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'stypy_return_type', join_call_result_20069)
            # SSA join for if statement (line 333)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 336)
        # Processing the call arguments (line 336)
        str_20072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 22), 'str', '@')
        # Processing the call keyword arguments (line 336)
        kwargs_20073 = {}
        # Getting the type of 'aslist' (line 336)
        aslist_20070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'aslist', False)
        # Obtaining the member 'append' of a type (line 336)
        append_20071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 8), aslist_20070, 'append')
        # Calling append(args, kwargs) (line 336)
        append_call_result_20074 = invoke(stypy.reporting.localization.Localization(__file__, 336, 8), append_20071, *[str_20072], **kwargs_20073)
        
        
        # Getting the type of 'self' (line 337)
        self_20075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'self')
        # Obtaining the member 'pos' of a type (line 337)
        pos_20076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 8), self_20075, 'pos')
        int_20077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 20), 'int')
        # Applying the binary operator '+=' (line 337)
        result_iadd_20078 = python_operator(stypy.reporting.localization.Localization(__file__, 337, 8), '+=', pos_20076, int_20077)
        # Getting the type of 'self' (line 337)
        self_20079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'self')
        # Setting the type of the member 'pos' of a type (line 337)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 8), self_20079, 'pos', result_iadd_20078)
        
        
        # Call to gotonext(...): (line 338)
        # Processing the call keyword arguments (line 338)
        kwargs_20082 = {}
        # Getting the type of 'self' (line 338)
        self_20080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 8), 'self', False)
        # Obtaining the member 'gotonext' of a type (line 338)
        gotonext_20081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 8), self_20080, 'gotonext')
        # Calling gotonext(args, kwargs) (line 338)
        gotonext_call_result_20083 = invoke(stypy.reporting.localization.Localization(__file__, 338, 8), gotonext_20081, *[], **kwargs_20082)
        
        
        # Call to join(...): (line 339)
        # Processing the call arguments (line 339)
        # Getting the type of 'aslist' (line 339)
        aslist_20086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 32), 'aslist', False)
        # Processing the call keyword arguments (line 339)
        kwargs_20087 = {}
        # Getting the type of 'EMPTYSTRING' (line 339)
        EMPTYSTRING_20084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 15), 'EMPTYSTRING', False)
        # Obtaining the member 'join' of a type (line 339)
        join_20085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 15), EMPTYSTRING_20084, 'join')
        # Calling join(args, kwargs) (line 339)
        join_call_result_20088 = invoke(stypy.reporting.localization.Localization(__file__, 339, 15), join_20085, *[aslist_20086], **kwargs_20087)
        
        
        # Call to getdomain(...): (line 339)
        # Processing the call keyword arguments (line 339)
        kwargs_20091 = {}
        # Getting the type of 'self' (line 339)
        self_20089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 42), 'self', False)
        # Obtaining the member 'getdomain' of a type (line 339)
        getdomain_20090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 42), self_20089, 'getdomain')
        # Calling getdomain(args, kwargs) (line 339)
        getdomain_call_result_20092 = invoke(stypy.reporting.localization.Localization(__file__, 339, 42), getdomain_20090, *[], **kwargs_20091)
        
        # Applying the binary operator '+' (line 339)
        result_add_20093 = python_operator(stypy.reporting.localization.Localization(__file__, 339, 15), '+', join_call_result_20088, getdomain_call_result_20092)
        
        # Assigning a type to the variable 'stypy_return_type' (line 339)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 339, 8), 'stypy_return_type', result_add_20093)
        
        # ################# End of 'getaddrspec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getaddrspec' in the type store
        # Getting the type of 'stypy_return_type' (line 316)
        stypy_return_type_20094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20094)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getaddrspec'
        return stypy_return_type_20094


    @norecursion
    def getdomain(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getdomain'
        module_type_store = module_type_store.open_function_context('getdomain', 341, 4, False)
        # Assigning a type to the variable 'self' (line 342)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getdomain')
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getdomain.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getdomain', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getdomain', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getdomain(...)' code ##################

        str_20095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 8), 'str', 'Get the complete domain name from an address.')
        
        # Assigning a List to a Name (line 343):
        
        # Assigning a List to a Name (line 343):
        
        # Obtaining an instance of the builtin type 'list' (line 343)
        list_20096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 343, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 343)
        
        # Assigning a type to the variable 'sdlist' (line 343)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'sdlist', list_20096)
        
        
        # Getting the type of 'self' (line 344)
        self_20097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 14), 'self')
        # Obtaining the member 'pos' of a type (line 344)
        pos_20098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 14), self_20097, 'pos')
        
        # Call to len(...): (line 344)
        # Processing the call arguments (line 344)
        # Getting the type of 'self' (line 344)
        self_20100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 344)
        field_20101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 29), self_20100, 'field')
        # Processing the call keyword arguments (line 344)
        kwargs_20102 = {}
        # Getting the type of 'len' (line 344)
        len_20099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 25), 'len', False)
        # Calling len(args, kwargs) (line 344)
        len_call_result_20103 = invoke(stypy.reporting.localization.Localization(__file__, 344, 25), len_20099, *[field_20101], **kwargs_20102)
        
        # Applying the binary operator '<' (line 344)
        result_lt_20104 = python_operator(stypy.reporting.localization.Localization(__file__, 344, 14), '<', pos_20098, len_call_result_20103)
        
        # Assigning a type to the variable 'result_lt_20104' (line 344)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 8), 'result_lt_20104', result_lt_20104)
        # Testing if the while is going to be iterated (line 344)
        # Testing the type of an if condition (line 344)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 344, 8), result_lt_20104)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 344, 8), result_lt_20104):
            # SSA begins for while statement (line 344)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'self' (line 345)
            self_20105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 26), 'self')
            # Obtaining the member 'pos' of a type (line 345)
            pos_20106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 26), self_20105, 'pos')
            # Getting the type of 'self' (line 345)
            self_20107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 15), 'self')
            # Obtaining the member 'field' of a type (line 345)
            field_20108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 15), self_20107, 'field')
            # Obtaining the member '__getitem__' of a type (line 345)
            getitem___20109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 15), field_20108, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 345)
            subscript_call_result_20110 = invoke(stypy.reporting.localization.Localization(__file__, 345, 15), getitem___20109, pos_20106)
            
            # Getting the type of 'self' (line 345)
            self_20111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 39), 'self')
            # Obtaining the member 'LWS' of a type (line 345)
            LWS_20112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 39), self_20111, 'LWS')
            # Applying the binary operator 'in' (line 345)
            result_contains_20113 = python_operator(stypy.reporting.localization.Localization(__file__, 345, 15), 'in', subscript_call_result_20110, LWS_20112)
            
            # Testing if the type of an if condition is none (line 345)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 345, 12), result_contains_20113):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 347)
                self_20120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 28), 'self')
                # Obtaining the member 'pos' of a type (line 347)
                pos_20121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 28), self_20120, 'pos')
                # Getting the type of 'self' (line 347)
                self_20122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 17), 'self')
                # Obtaining the member 'field' of a type (line 347)
                field_20123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 17), self_20122, 'field')
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___20124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 17), field_20123, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_20125 = invoke(stypy.reporting.localization.Localization(__file__, 347, 17), getitem___20124, pos_20121)
                
                str_20126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 41), 'str', '(')
                # Applying the binary operator '==' (line 347)
                result_eq_20127 = python_operator(stypy.reporting.localization.Localization(__file__, 347, 17), '==', subscript_call_result_20125, str_20126)
                
                # Testing if the type of an if condition is none (line 347)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 347, 17), result_eq_20127):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 349)
                    self_20138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 349)
                    pos_20139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 28), self_20138, 'pos')
                    # Getting the type of 'self' (line 349)
                    self_20140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'self')
                    # Obtaining the member 'field' of a type (line 349)
                    field_20141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), self_20140, 'field')
                    # Obtaining the member '__getitem__' of a type (line 349)
                    getitem___20142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), field_20141, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 349)
                    subscript_call_result_20143 = invoke(stypy.reporting.localization.Localization(__file__, 349, 17), getitem___20142, pos_20139)
                    
                    str_20144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 41), 'str', '[')
                    # Applying the binary operator '==' (line 349)
                    result_eq_20145 = python_operator(stypy.reporting.localization.Localization(__file__, 349, 17), '==', subscript_call_result_20143, str_20144)
                    
                    # Testing if the type of an if condition is none (line 349)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 349)
                        if_condition_20146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145)
                        # Assigning a type to the variable 'if_condition_20146' (line 349)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'if_condition_20146', if_condition_20146)
                        # SSA begins for if statement (line 349)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 350)
                        # Processing the call arguments (line 350)
                        
                        # Call to getdomainliteral(...): (line 350)
                        # Processing the call keyword arguments (line 350)
                        kwargs_20151 = {}
                        # Getting the type of 'self' (line 350)
                        self_20149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 30), 'self', False)
                        # Obtaining the member 'getdomainliteral' of a type (line 350)
                        getdomainliteral_20150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 30), self_20149, 'getdomainliteral')
                        # Calling getdomainliteral(args, kwargs) (line 350)
                        getdomainliteral_call_result_20152 = invoke(stypy.reporting.localization.Localization(__file__, 350, 30), getdomainliteral_20150, *[], **kwargs_20151)
                        
                        # Processing the call keyword arguments (line 350)
                        kwargs_20153 = {}
                        # Getting the type of 'sdlist' (line 350)
                        sdlist_20147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 16), 'sdlist', False)
                        # Obtaining the member 'append' of a type (line 350)
                        append_20148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 16), sdlist_20147, 'append')
                        # Calling append(args, kwargs) (line 350)
                        append_call_result_20154 = invoke(stypy.reporting.localization.Localization(__file__, 350, 16), append_20148, *[getdomainliteral_call_result_20152], **kwargs_20153)
                        
                        # SSA branch for the else part of an if statement (line 349)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 349)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 347)
                    if_condition_20128 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 347, 17), result_eq_20127)
                    # Assigning a type to the variable 'if_condition_20128' (line 347)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 17), 'if_condition_20128', if_condition_20128)
                    # SSA begins for if statement (line 347)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 348)
                    # Processing the call arguments (line 348)
                    
                    # Call to getcomment(...): (line 348)
                    # Processing the call keyword arguments (line 348)
                    kwargs_20134 = {}
                    # Getting the type of 'self' (line 348)
                    self_20132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 40), 'self', False)
                    # Obtaining the member 'getcomment' of a type (line 348)
                    getcomment_20133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 40), self_20132, 'getcomment')
                    # Calling getcomment(args, kwargs) (line 348)
                    getcomment_call_result_20135 = invoke(stypy.reporting.localization.Localization(__file__, 348, 40), getcomment_20133, *[], **kwargs_20134)
                    
                    # Processing the call keyword arguments (line 348)
                    kwargs_20136 = {}
                    # Getting the type of 'self' (line 348)
                    self_20129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 16), 'self', False)
                    # Obtaining the member 'commentlist' of a type (line 348)
                    commentlist_20130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 16), self_20129, 'commentlist')
                    # Obtaining the member 'append' of a type (line 348)
                    append_20131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 16), commentlist_20130, 'append')
                    # Calling append(args, kwargs) (line 348)
                    append_call_result_20137 = invoke(stypy.reporting.localization.Localization(__file__, 348, 16), append_20131, *[getcomment_call_result_20135], **kwargs_20136)
                    
                    # SSA branch for the else part of an if statement (line 347)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 349)
                    self_20138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 349)
                    pos_20139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 28), self_20138, 'pos')
                    # Getting the type of 'self' (line 349)
                    self_20140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'self')
                    # Obtaining the member 'field' of a type (line 349)
                    field_20141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), self_20140, 'field')
                    # Obtaining the member '__getitem__' of a type (line 349)
                    getitem___20142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), field_20141, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 349)
                    subscript_call_result_20143 = invoke(stypy.reporting.localization.Localization(__file__, 349, 17), getitem___20142, pos_20139)
                    
                    str_20144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 41), 'str', '[')
                    # Applying the binary operator '==' (line 349)
                    result_eq_20145 = python_operator(stypy.reporting.localization.Localization(__file__, 349, 17), '==', subscript_call_result_20143, str_20144)
                    
                    # Testing if the type of an if condition is none (line 349)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 349)
                        if_condition_20146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145)
                        # Assigning a type to the variable 'if_condition_20146' (line 349)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'if_condition_20146', if_condition_20146)
                        # SSA begins for if statement (line 349)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 350)
                        # Processing the call arguments (line 350)
                        
                        # Call to getdomainliteral(...): (line 350)
                        # Processing the call keyword arguments (line 350)
                        kwargs_20151 = {}
                        # Getting the type of 'self' (line 350)
                        self_20149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 30), 'self', False)
                        # Obtaining the member 'getdomainliteral' of a type (line 350)
                        getdomainliteral_20150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 30), self_20149, 'getdomainliteral')
                        # Calling getdomainliteral(args, kwargs) (line 350)
                        getdomainliteral_call_result_20152 = invoke(stypy.reporting.localization.Localization(__file__, 350, 30), getdomainliteral_20150, *[], **kwargs_20151)
                        
                        # Processing the call keyword arguments (line 350)
                        kwargs_20153 = {}
                        # Getting the type of 'sdlist' (line 350)
                        sdlist_20147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 16), 'sdlist', False)
                        # Obtaining the member 'append' of a type (line 350)
                        append_20148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 16), sdlist_20147, 'append')
                        # Calling append(args, kwargs) (line 350)
                        append_call_result_20154 = invoke(stypy.reporting.localization.Localization(__file__, 350, 16), append_20148, *[getdomainliteral_call_result_20152], **kwargs_20153)
                        
                        # SSA branch for the else part of an if statement (line 349)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 349)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 347)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 345)
                if_condition_20114 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 345, 12), result_contains_20113)
                # Assigning a type to the variable 'if_condition_20114' (line 345)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 12), 'if_condition_20114', if_condition_20114)
                # SSA begins for if statement (line 345)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Getting the type of 'self' (line 346)
                self_20115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 16), 'self')
                # Obtaining the member 'pos' of a type (line 346)
                pos_20116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 346, 16), self_20115, 'pos')
                int_20117 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 346, 28), 'int')
                # Applying the binary operator '+=' (line 346)
                result_iadd_20118 = python_operator(stypy.reporting.localization.Localization(__file__, 346, 16), '+=', pos_20116, int_20117)
                # Getting the type of 'self' (line 346)
                self_20119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 16), 'self')
                # Setting the type of the member 'pos' of a type (line 346)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 346, 16), self_20119, 'pos', result_iadd_20118)
                
                # SSA branch for the else part of an if statement (line 345)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 347)
                self_20120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 28), 'self')
                # Obtaining the member 'pos' of a type (line 347)
                pos_20121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 28), self_20120, 'pos')
                # Getting the type of 'self' (line 347)
                self_20122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 17), 'self')
                # Obtaining the member 'field' of a type (line 347)
                field_20123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 17), self_20122, 'field')
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___20124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 17), field_20123, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_20125 = invoke(stypy.reporting.localization.Localization(__file__, 347, 17), getitem___20124, pos_20121)
                
                str_20126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 41), 'str', '(')
                # Applying the binary operator '==' (line 347)
                result_eq_20127 = python_operator(stypy.reporting.localization.Localization(__file__, 347, 17), '==', subscript_call_result_20125, str_20126)
                
                # Testing if the type of an if condition is none (line 347)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 347, 17), result_eq_20127):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 349)
                    self_20138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 349)
                    pos_20139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 28), self_20138, 'pos')
                    # Getting the type of 'self' (line 349)
                    self_20140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'self')
                    # Obtaining the member 'field' of a type (line 349)
                    field_20141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), self_20140, 'field')
                    # Obtaining the member '__getitem__' of a type (line 349)
                    getitem___20142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), field_20141, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 349)
                    subscript_call_result_20143 = invoke(stypy.reporting.localization.Localization(__file__, 349, 17), getitem___20142, pos_20139)
                    
                    str_20144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 41), 'str', '[')
                    # Applying the binary operator '==' (line 349)
                    result_eq_20145 = python_operator(stypy.reporting.localization.Localization(__file__, 349, 17), '==', subscript_call_result_20143, str_20144)
                    
                    # Testing if the type of an if condition is none (line 349)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 349)
                        if_condition_20146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145)
                        # Assigning a type to the variable 'if_condition_20146' (line 349)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'if_condition_20146', if_condition_20146)
                        # SSA begins for if statement (line 349)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 350)
                        # Processing the call arguments (line 350)
                        
                        # Call to getdomainliteral(...): (line 350)
                        # Processing the call keyword arguments (line 350)
                        kwargs_20151 = {}
                        # Getting the type of 'self' (line 350)
                        self_20149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 30), 'self', False)
                        # Obtaining the member 'getdomainliteral' of a type (line 350)
                        getdomainliteral_20150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 30), self_20149, 'getdomainliteral')
                        # Calling getdomainliteral(args, kwargs) (line 350)
                        getdomainliteral_call_result_20152 = invoke(stypy.reporting.localization.Localization(__file__, 350, 30), getdomainliteral_20150, *[], **kwargs_20151)
                        
                        # Processing the call keyword arguments (line 350)
                        kwargs_20153 = {}
                        # Getting the type of 'sdlist' (line 350)
                        sdlist_20147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 16), 'sdlist', False)
                        # Obtaining the member 'append' of a type (line 350)
                        append_20148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 16), sdlist_20147, 'append')
                        # Calling append(args, kwargs) (line 350)
                        append_call_result_20154 = invoke(stypy.reporting.localization.Localization(__file__, 350, 16), append_20148, *[getdomainliteral_call_result_20152], **kwargs_20153)
                        
                        # SSA branch for the else part of an if statement (line 349)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 349)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 347)
                    if_condition_20128 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 347, 17), result_eq_20127)
                    # Assigning a type to the variable 'if_condition_20128' (line 347)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 17), 'if_condition_20128', if_condition_20128)
                    # SSA begins for if statement (line 347)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 348)
                    # Processing the call arguments (line 348)
                    
                    # Call to getcomment(...): (line 348)
                    # Processing the call keyword arguments (line 348)
                    kwargs_20134 = {}
                    # Getting the type of 'self' (line 348)
                    self_20132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 40), 'self', False)
                    # Obtaining the member 'getcomment' of a type (line 348)
                    getcomment_20133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 40), self_20132, 'getcomment')
                    # Calling getcomment(args, kwargs) (line 348)
                    getcomment_call_result_20135 = invoke(stypy.reporting.localization.Localization(__file__, 348, 40), getcomment_20133, *[], **kwargs_20134)
                    
                    # Processing the call keyword arguments (line 348)
                    kwargs_20136 = {}
                    # Getting the type of 'self' (line 348)
                    self_20129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 16), 'self', False)
                    # Obtaining the member 'commentlist' of a type (line 348)
                    commentlist_20130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 16), self_20129, 'commentlist')
                    # Obtaining the member 'append' of a type (line 348)
                    append_20131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 16), commentlist_20130, 'append')
                    # Calling append(args, kwargs) (line 348)
                    append_call_result_20137 = invoke(stypy.reporting.localization.Localization(__file__, 348, 16), append_20131, *[getcomment_call_result_20135], **kwargs_20136)
                    
                    # SSA branch for the else part of an if statement (line 347)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 349)
                    self_20138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 349)
                    pos_20139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 28), self_20138, 'pos')
                    # Getting the type of 'self' (line 349)
                    self_20140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'self')
                    # Obtaining the member 'field' of a type (line 349)
                    field_20141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), self_20140, 'field')
                    # Obtaining the member '__getitem__' of a type (line 349)
                    getitem___20142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 17), field_20141, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 349)
                    subscript_call_result_20143 = invoke(stypy.reporting.localization.Localization(__file__, 349, 17), getitem___20142, pos_20139)
                    
                    str_20144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 41), 'str', '[')
                    # Applying the binary operator '==' (line 349)
                    result_eq_20145 = python_operator(stypy.reporting.localization.Localization(__file__, 349, 17), '==', subscript_call_result_20143, str_20144)
                    
                    # Testing if the type of an if condition is none (line 349)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 349)
                        if_condition_20146 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 349, 17), result_eq_20145)
                        # Assigning a type to the variable 'if_condition_20146' (line 349)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 17), 'if_condition_20146', if_condition_20146)
                        # SSA begins for if statement (line 349)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 350)
                        # Processing the call arguments (line 350)
                        
                        # Call to getdomainliteral(...): (line 350)
                        # Processing the call keyword arguments (line 350)
                        kwargs_20151 = {}
                        # Getting the type of 'self' (line 350)
                        self_20149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 30), 'self', False)
                        # Obtaining the member 'getdomainliteral' of a type (line 350)
                        getdomainliteral_20150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 30), self_20149, 'getdomainliteral')
                        # Calling getdomainliteral(args, kwargs) (line 350)
                        getdomainliteral_call_result_20152 = invoke(stypy.reporting.localization.Localization(__file__, 350, 30), getdomainliteral_20150, *[], **kwargs_20151)
                        
                        # Processing the call keyword arguments (line 350)
                        kwargs_20153 = {}
                        # Getting the type of 'sdlist' (line 350)
                        sdlist_20147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 16), 'sdlist', False)
                        # Obtaining the member 'append' of a type (line 350)
                        append_20148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 16), sdlist_20147, 'append')
                        # Calling append(args, kwargs) (line 350)
                        append_call_result_20154 = invoke(stypy.reporting.localization.Localization(__file__, 350, 16), append_20148, *[getdomainliteral_call_result_20152], **kwargs_20153)
                        
                        # SSA branch for the else part of an if statement (line 349)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 351)
                        self_20155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 351)
                        pos_20156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 28), self_20155, 'pos')
                        # Getting the type of 'self' (line 351)
                        self_20157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'self')
                        # Obtaining the member 'field' of a type (line 351)
                        field_20158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), self_20157, 'field')
                        # Obtaining the member '__getitem__' of a type (line 351)
                        getitem___20159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 17), field_20158, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                        subscript_call_result_20160 = invoke(stypy.reporting.localization.Localization(__file__, 351, 17), getitem___20159, pos_20156)
                        
                        str_20161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 41), 'str', '.')
                        # Applying the binary operator '==' (line 351)
                        result_eq_20162 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 17), '==', subscript_call_result_20160, str_20161)
                        
                        # Testing if the type of an if condition is none (line 351)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 351)
                            if_condition_20163 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 17), result_eq_20162)
                            # Assigning a type to the variable 'if_condition_20163' (line 351)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 17), 'if_condition_20163', if_condition_20163)
                            # SSA begins for if statement (line 351)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'self' (line 352)
                            self_20164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Obtaining the member 'pos' of a type (line 352)
                            pos_20165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20164, 'pos')
                            int_20166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 28), 'int')
                            # Applying the binary operator '+=' (line 352)
                            result_iadd_20167 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 16), '+=', pos_20165, int_20166)
                            # Getting the type of 'self' (line 352)
                            self_20168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 16), 'self')
                            # Setting the type of the member 'pos' of a type (line 352)
                            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 16), self_20168, 'pos', result_iadd_20167)
                            
                            
                            # Call to append(...): (line 353)
                            # Processing the call arguments (line 353)
                            str_20171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 353, 30), 'str', '.')
                            # Processing the call keyword arguments (line 353)
                            kwargs_20172 = {}
                            # Getting the type of 'sdlist' (line 353)
                            sdlist_20169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 16), 'sdlist', False)
                            # Obtaining the member 'append' of a type (line 353)
                            append_20170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 16), sdlist_20169, 'append')
                            # Calling append(args, kwargs) (line 353)
                            append_call_result_20173 = invoke(stypy.reporting.localization.Localization(__file__, 353, 16), append_20170, *[str_20171], **kwargs_20172)
                            
                            # SSA branch for the else part of an if statement (line 351)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 354)
                            self_20174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'self')
                            # Obtaining the member 'pos' of a type (line 354)
                            pos_20175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), self_20174, 'pos')
                            # Getting the type of 'self' (line 354)
                            self_20176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'self')
                            # Obtaining the member 'field' of a type (line 354)
                            field_20177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), self_20176, 'field')
                            # Obtaining the member '__getitem__' of a type (line 354)
                            getitem___20178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 17), field_20177, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
                            subscript_call_result_20179 = invoke(stypy.reporting.localization.Localization(__file__, 354, 17), getitem___20178, pos_20175)
                            
                            # Getting the type of 'self' (line 354)
                            self_20180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 41), 'self')
                            # Obtaining the member 'atomends' of a type (line 354)
                            atomends_20181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 41), self_20180, 'atomends')
                            # Applying the binary operator 'in' (line 354)
                            result_contains_20182 = python_operator(stypy.reporting.localization.Localization(__file__, 354, 17), 'in', subscript_call_result_20179, atomends_20181)
                            
                            # Testing if the type of an if condition is none (line 354)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182):
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                            else:
                                
                                # Testing the type of an if condition (line 354)
                                if_condition_20183 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 354, 17), result_contains_20182)
                                # Assigning a type to the variable 'if_condition_20183' (line 354)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 17), 'if_condition_20183', if_condition_20183)
                                # SSA begins for if statement (line 354)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                # SSA branch for the else part of an if statement (line 354)
                                module_type_store.open_ssa_branch('else')
                                
                                # Call to append(...): (line 357)
                                # Processing the call arguments (line 357)
                                
                                # Call to getatom(...): (line 357)
                                # Processing the call keyword arguments (line 357)
                                kwargs_20188 = {}
                                # Getting the type of 'self' (line 357)
                                self_20186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 30), 'self', False)
                                # Obtaining the member 'getatom' of a type (line 357)
                                getatom_20187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 30), self_20186, 'getatom')
                                # Calling getatom(args, kwargs) (line 357)
                                getatom_call_result_20189 = invoke(stypy.reporting.localization.Localization(__file__, 357, 30), getatom_20187, *[], **kwargs_20188)
                                
                                # Processing the call keyword arguments (line 357)
                                kwargs_20190 = {}
                                # Getting the type of 'sdlist' (line 357)
                                sdlist_20184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 16), 'sdlist', False)
                                # Obtaining the member 'append' of a type (line 357)
                                append_20185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 16), sdlist_20184, 'append')
                                # Calling append(args, kwargs) (line 357)
                                append_call_result_20191 = invoke(stypy.reporting.localization.Localization(__file__, 357, 16), append_20185, *[getatom_call_result_20189], **kwargs_20190)
                                
                                # SSA join for if statement (line 354)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 351)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 349)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 347)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 345)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for while statement (line 344)
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to join(...): (line 358)
        # Processing the call arguments (line 358)
        # Getting the type of 'sdlist' (line 358)
        sdlist_20194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 32), 'sdlist', False)
        # Processing the call keyword arguments (line 358)
        kwargs_20195 = {}
        # Getting the type of 'EMPTYSTRING' (line 358)
        EMPTYSTRING_20192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 15), 'EMPTYSTRING', False)
        # Obtaining the member 'join' of a type (line 358)
        join_20193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 15), EMPTYSTRING_20192, 'join')
        # Calling join(args, kwargs) (line 358)
        join_call_result_20196 = invoke(stypy.reporting.localization.Localization(__file__, 358, 15), join_20193, *[sdlist_20194], **kwargs_20195)
        
        # Assigning a type to the variable 'stypy_return_type' (line 358)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 8), 'stypy_return_type', join_call_result_20196)
        
        # ################# End of 'getdomain(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getdomain' in the type store
        # Getting the type of 'stypy_return_type' (line 341)
        stypy_return_type_20197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20197)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getdomain'
        return stypy_return_type_20197


    @norecursion
    def getdelimited(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'True' (line 360)
        True_20198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 62), 'True')
        defaults = [True_20198]
        # Create a new context for function 'getdelimited'
        module_type_store = module_type_store.open_function_context('getdelimited', 360, 4, False)
        # Assigning a type to the variable 'self' (line 361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getdelimited')
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_param_names_list', ['beginchar', 'endchars', 'allowcomments'])
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getdelimited.__dict__.__setitem__('stypy_declared_arg_number', 4)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getdelimited', ['beginchar', 'endchars', 'allowcomments'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getdelimited', localization, ['beginchar', 'endchars', 'allowcomments'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getdelimited(...)' code ##################

        str_20199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, (-1)), 'str', "Parse a header fragment delimited by special characters.\n\n        `beginchar' is the start character for the fragment.\n        If self is not looking at an instance of `beginchar' then\n        getdelimited returns the empty string.\n\n        `endchars' is a sequence of allowable end-delimiting characters.\n        Parsing stops when one of these is encountered.\n\n        If `allowcomments' is non-zero, embedded RFC 2822 comments are allowed\n        within the parsed fragment.\n        ")
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'self' (line 373)
        self_20200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 22), 'self')
        # Obtaining the member 'pos' of a type (line 373)
        pos_20201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 22), self_20200, 'pos')
        # Getting the type of 'self' (line 373)
        self_20202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 11), 'self')
        # Obtaining the member 'field' of a type (line 373)
        field_20203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 11), self_20202, 'field')
        # Obtaining the member '__getitem__' of a type (line 373)
        getitem___20204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 11), field_20203, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 373)
        subscript_call_result_20205 = invoke(stypy.reporting.localization.Localization(__file__, 373, 11), getitem___20204, pos_20201)
        
        # Getting the type of 'beginchar' (line 373)
        beginchar_20206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 35), 'beginchar')
        # Applying the binary operator '!=' (line 373)
        result_ne_20207 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 11), '!=', subscript_call_result_20205, beginchar_20206)
        
        # Testing if the type of an if condition is none (line 373)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 373, 8), result_ne_20207):
            pass
        else:
            
            # Testing the type of an if condition (line 373)
            if_condition_20208 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 373, 8), result_ne_20207)
            # Assigning a type to the variable 'if_condition_20208' (line 373)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'if_condition_20208', if_condition_20208)
            # SSA begins for if statement (line 373)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            str_20209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 374, 19), 'str', '')
            # Assigning a type to the variable 'stypy_return_type' (line 374)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 374, 12), 'stypy_return_type', str_20209)
            # SSA join for if statement (line 373)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a List to a Name (line 376):
        
        # Assigning a List to a Name (line 376):
        
        # Obtaining an instance of the builtin type 'list' (line 376)
        list_20210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 376)
        # Adding element type (line 376)
        str_20211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 376, 17), 'str', '')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 376, 16), list_20210, str_20211)
        
        # Assigning a type to the variable 'slist' (line 376)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 376, 8), 'slist', list_20210)
        
        # Assigning a Name to a Name (line 377):
        
        # Assigning a Name to a Name (line 377):
        # Getting the type of 'False' (line 377)
        False_20212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 16), 'False')
        # Assigning a type to the variable 'quote' (line 377)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 8), 'quote', False_20212)
        
        # Getting the type of 'self' (line 378)
        self_20213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 8), 'self')
        # Obtaining the member 'pos' of a type (line 378)
        pos_20214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 8), self_20213, 'pos')
        int_20215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 20), 'int')
        # Applying the binary operator '+=' (line 378)
        result_iadd_20216 = python_operator(stypy.reporting.localization.Localization(__file__, 378, 8), '+=', pos_20214, int_20215)
        # Getting the type of 'self' (line 378)
        self_20217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 8), 'self')
        # Setting the type of the member 'pos' of a type (line 378)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 8), self_20217, 'pos', result_iadd_20216)
        
        
        
        # Getting the type of 'self' (line 379)
        self_20218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 14), 'self')
        # Obtaining the member 'pos' of a type (line 379)
        pos_20219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 14), self_20218, 'pos')
        
        # Call to len(...): (line 379)
        # Processing the call arguments (line 379)
        # Getting the type of 'self' (line 379)
        self_20221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 379)
        field_20222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 29), self_20221, 'field')
        # Processing the call keyword arguments (line 379)
        kwargs_20223 = {}
        # Getting the type of 'len' (line 379)
        len_20220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 25), 'len', False)
        # Calling len(args, kwargs) (line 379)
        len_call_result_20224 = invoke(stypy.reporting.localization.Localization(__file__, 379, 25), len_20220, *[field_20222], **kwargs_20223)
        
        # Applying the binary operator '<' (line 379)
        result_lt_20225 = python_operator(stypy.reporting.localization.Localization(__file__, 379, 14), '<', pos_20219, len_call_result_20224)
        
        # Assigning a type to the variable 'result_lt_20225' (line 379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 8), 'result_lt_20225', result_lt_20225)
        # Testing if the while is going to be iterated (line 379)
        # Testing the type of an if condition (line 379)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 379, 8), result_lt_20225)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 379, 8), result_lt_20225):
            # SSA begins for while statement (line 379)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            # Getting the type of 'quote' (line 380)
            quote_20226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 15), 'quote')
            # Testing if the type of an if condition is none (line 380)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 380, 12), quote_20226):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 383)
                self_20239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 28), 'self')
                # Obtaining the member 'pos' of a type (line 383)
                pos_20240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 28), self_20239, 'pos')
                # Getting the type of 'self' (line 383)
                self_20241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 17), 'self')
                # Obtaining the member 'field' of a type (line 383)
                field_20242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 17), self_20241, 'field')
                # Obtaining the member '__getitem__' of a type (line 383)
                getitem___20243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 17), field_20242, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 383)
                subscript_call_result_20244 = invoke(stypy.reporting.localization.Localization(__file__, 383, 17), getitem___20243, pos_20240)
                
                # Getting the type of 'endchars' (line 383)
                endchars_20245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 41), 'endchars')
                # Applying the binary operator 'in' (line 383)
                result_contains_20246 = python_operator(stypy.reporting.localization.Localization(__file__, 383, 17), 'in', subscript_call_result_20244, endchars_20245)
                
                # Testing if the type of an if condition is none (line 383)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 383, 17), result_contains_20246):
                    
                    # Evaluating a boolean operation
                    # Getting the type of 'allowcomments' (line 386)
                    allowcomments_20253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'allowcomments')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 386)
                    self_20254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 46), 'self')
                    # Obtaining the member 'pos' of a type (line 386)
                    pos_20255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 46), self_20254, 'pos')
                    # Getting the type of 'self' (line 386)
                    self_20256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 35), 'self')
                    # Obtaining the member 'field' of a type (line 386)
                    field_20257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), self_20256, 'field')
                    # Obtaining the member '__getitem__' of a type (line 386)
                    getitem___20258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), field_20257, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 386)
                    subscript_call_result_20259 = invoke(stypy.reporting.localization.Localization(__file__, 386, 35), getitem___20258, pos_20255)
                    
                    str_20260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 59), 'str', '(')
                    # Applying the binary operator '==' (line 386)
                    result_eq_20261 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 35), '==', subscript_call_result_20259, str_20260)
                    
                    # Applying the binary operator 'and' (line 386)
                    result_and_keyword_20262 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 17), 'and', allowcomments_20253, result_eq_20261)
                    
                    # Testing if the type of an if condition is none (line 386)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 386)
                        if_condition_20263 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262)
                        # Assigning a type to the variable 'if_condition_20263' (line 386)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'if_condition_20263', if_condition_20263)
                        # SSA begins for if statement (line 386)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 387)
                        # Processing the call arguments (line 387)
                        
                        # Call to getcomment(...): (line 387)
                        # Processing the call keyword arguments (line 387)
                        kwargs_20268 = {}
                        # Getting the type of 'self' (line 387)
                        self_20266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 29), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 387)
                        getcomment_20267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 29), self_20266, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 387)
                        getcomment_call_result_20269 = invoke(stypy.reporting.localization.Localization(__file__, 387, 29), getcomment_20267, *[], **kwargs_20268)
                        
                        # Processing the call keyword arguments (line 387)
                        kwargs_20270 = {}
                        # Getting the type of 'slist' (line 387)
                        slist_20264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 16), 'slist', False)
                        # Obtaining the member 'append' of a type (line 387)
                        append_20265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 16), slist_20264, 'append')
                        # Calling append(args, kwargs) (line 387)
                        append_call_result_20271 = invoke(stypy.reporting.localization.Localization(__file__, 387, 16), append_20265, *[getcomment_call_result_20269], **kwargs_20270)
                        
                        # SSA branch for the else part of an if statement (line 386)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 386)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 383)
                    if_condition_20247 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 383, 17), result_contains_20246)
                    # Assigning a type to the variable 'if_condition_20247' (line 383)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 17), 'if_condition_20247', if_condition_20247)
                    # SSA begins for if statement (line 383)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Getting the type of 'self' (line 384)
                    self_20248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 16), 'self')
                    # Obtaining the member 'pos' of a type (line 384)
                    pos_20249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 16), self_20248, 'pos')
                    int_20250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 28), 'int')
                    # Applying the binary operator '+=' (line 384)
                    result_iadd_20251 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 16), '+=', pos_20249, int_20250)
                    # Getting the type of 'self' (line 384)
                    self_20252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 16), 'self')
                    # Setting the type of the member 'pos' of a type (line 384)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 16), self_20252, 'pos', result_iadd_20251)
                    
                    # SSA branch for the else part of an if statement (line 383)
                    module_type_store.open_ssa_branch('else')
                    
                    # Evaluating a boolean operation
                    # Getting the type of 'allowcomments' (line 386)
                    allowcomments_20253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'allowcomments')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 386)
                    self_20254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 46), 'self')
                    # Obtaining the member 'pos' of a type (line 386)
                    pos_20255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 46), self_20254, 'pos')
                    # Getting the type of 'self' (line 386)
                    self_20256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 35), 'self')
                    # Obtaining the member 'field' of a type (line 386)
                    field_20257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), self_20256, 'field')
                    # Obtaining the member '__getitem__' of a type (line 386)
                    getitem___20258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), field_20257, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 386)
                    subscript_call_result_20259 = invoke(stypy.reporting.localization.Localization(__file__, 386, 35), getitem___20258, pos_20255)
                    
                    str_20260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 59), 'str', '(')
                    # Applying the binary operator '==' (line 386)
                    result_eq_20261 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 35), '==', subscript_call_result_20259, str_20260)
                    
                    # Applying the binary operator 'and' (line 386)
                    result_and_keyword_20262 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 17), 'and', allowcomments_20253, result_eq_20261)
                    
                    # Testing if the type of an if condition is none (line 386)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 386)
                        if_condition_20263 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262)
                        # Assigning a type to the variable 'if_condition_20263' (line 386)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'if_condition_20263', if_condition_20263)
                        # SSA begins for if statement (line 386)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 387)
                        # Processing the call arguments (line 387)
                        
                        # Call to getcomment(...): (line 387)
                        # Processing the call keyword arguments (line 387)
                        kwargs_20268 = {}
                        # Getting the type of 'self' (line 387)
                        self_20266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 29), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 387)
                        getcomment_20267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 29), self_20266, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 387)
                        getcomment_call_result_20269 = invoke(stypy.reporting.localization.Localization(__file__, 387, 29), getcomment_20267, *[], **kwargs_20268)
                        
                        # Processing the call keyword arguments (line 387)
                        kwargs_20270 = {}
                        # Getting the type of 'slist' (line 387)
                        slist_20264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 16), 'slist', False)
                        # Obtaining the member 'append' of a type (line 387)
                        append_20265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 16), slist_20264, 'append')
                        # Calling append(args, kwargs) (line 387)
                        append_call_result_20271 = invoke(stypy.reporting.localization.Localization(__file__, 387, 16), append_20265, *[getcomment_call_result_20269], **kwargs_20270)
                        
                        # SSA branch for the else part of an if statement (line 386)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 386)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 383)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 380)
                if_condition_20227 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 380, 12), quote_20226)
                # Assigning a type to the variable 'if_condition_20227' (line 380)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 380, 12), 'if_condition_20227', if_condition_20227)
                # SSA begins for if statement (line 380)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 381)
                # Processing the call arguments (line 381)
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 381)
                self_20230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 40), 'self', False)
                # Obtaining the member 'pos' of a type (line 381)
                pos_20231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 40), self_20230, 'pos')
                # Getting the type of 'self' (line 381)
                self_20232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 29), 'self', False)
                # Obtaining the member 'field' of a type (line 381)
                field_20233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 29), self_20232, 'field')
                # Obtaining the member '__getitem__' of a type (line 381)
                getitem___20234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 29), field_20233, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 381)
                subscript_call_result_20235 = invoke(stypy.reporting.localization.Localization(__file__, 381, 29), getitem___20234, pos_20231)
                
                # Processing the call keyword arguments (line 381)
                kwargs_20236 = {}
                # Getting the type of 'slist' (line 381)
                slist_20228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 16), 'slist', False)
                # Obtaining the member 'append' of a type (line 381)
                append_20229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 16), slist_20228, 'append')
                # Calling append(args, kwargs) (line 381)
                append_call_result_20237 = invoke(stypy.reporting.localization.Localization(__file__, 381, 16), append_20229, *[subscript_call_result_20235], **kwargs_20236)
                
                
                # Assigning a Name to a Name (line 382):
                
                # Assigning a Name to a Name (line 382):
                # Getting the type of 'False' (line 382)
                False_20238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 24), 'False')
                # Assigning a type to the variable 'quote' (line 382)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 16), 'quote', False_20238)
                # SSA branch for the else part of an if statement (line 380)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 383)
                self_20239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 28), 'self')
                # Obtaining the member 'pos' of a type (line 383)
                pos_20240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 28), self_20239, 'pos')
                # Getting the type of 'self' (line 383)
                self_20241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 17), 'self')
                # Obtaining the member 'field' of a type (line 383)
                field_20242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 17), self_20241, 'field')
                # Obtaining the member '__getitem__' of a type (line 383)
                getitem___20243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 17), field_20242, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 383)
                subscript_call_result_20244 = invoke(stypy.reporting.localization.Localization(__file__, 383, 17), getitem___20243, pos_20240)
                
                # Getting the type of 'endchars' (line 383)
                endchars_20245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 41), 'endchars')
                # Applying the binary operator 'in' (line 383)
                result_contains_20246 = python_operator(stypy.reporting.localization.Localization(__file__, 383, 17), 'in', subscript_call_result_20244, endchars_20245)
                
                # Testing if the type of an if condition is none (line 383)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 383, 17), result_contains_20246):
                    
                    # Evaluating a boolean operation
                    # Getting the type of 'allowcomments' (line 386)
                    allowcomments_20253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'allowcomments')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 386)
                    self_20254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 46), 'self')
                    # Obtaining the member 'pos' of a type (line 386)
                    pos_20255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 46), self_20254, 'pos')
                    # Getting the type of 'self' (line 386)
                    self_20256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 35), 'self')
                    # Obtaining the member 'field' of a type (line 386)
                    field_20257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), self_20256, 'field')
                    # Obtaining the member '__getitem__' of a type (line 386)
                    getitem___20258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), field_20257, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 386)
                    subscript_call_result_20259 = invoke(stypy.reporting.localization.Localization(__file__, 386, 35), getitem___20258, pos_20255)
                    
                    str_20260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 59), 'str', '(')
                    # Applying the binary operator '==' (line 386)
                    result_eq_20261 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 35), '==', subscript_call_result_20259, str_20260)
                    
                    # Applying the binary operator 'and' (line 386)
                    result_and_keyword_20262 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 17), 'and', allowcomments_20253, result_eq_20261)
                    
                    # Testing if the type of an if condition is none (line 386)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 386)
                        if_condition_20263 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262)
                        # Assigning a type to the variable 'if_condition_20263' (line 386)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'if_condition_20263', if_condition_20263)
                        # SSA begins for if statement (line 386)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 387)
                        # Processing the call arguments (line 387)
                        
                        # Call to getcomment(...): (line 387)
                        # Processing the call keyword arguments (line 387)
                        kwargs_20268 = {}
                        # Getting the type of 'self' (line 387)
                        self_20266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 29), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 387)
                        getcomment_20267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 29), self_20266, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 387)
                        getcomment_call_result_20269 = invoke(stypy.reporting.localization.Localization(__file__, 387, 29), getcomment_20267, *[], **kwargs_20268)
                        
                        # Processing the call keyword arguments (line 387)
                        kwargs_20270 = {}
                        # Getting the type of 'slist' (line 387)
                        slist_20264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 16), 'slist', False)
                        # Obtaining the member 'append' of a type (line 387)
                        append_20265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 16), slist_20264, 'append')
                        # Calling append(args, kwargs) (line 387)
                        append_call_result_20271 = invoke(stypy.reporting.localization.Localization(__file__, 387, 16), append_20265, *[getcomment_call_result_20269], **kwargs_20270)
                        
                        # SSA branch for the else part of an if statement (line 386)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 386)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 383)
                    if_condition_20247 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 383, 17), result_contains_20246)
                    # Assigning a type to the variable 'if_condition_20247' (line 383)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 17), 'if_condition_20247', if_condition_20247)
                    # SSA begins for if statement (line 383)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Getting the type of 'self' (line 384)
                    self_20248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 16), 'self')
                    # Obtaining the member 'pos' of a type (line 384)
                    pos_20249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 16), self_20248, 'pos')
                    int_20250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 28), 'int')
                    # Applying the binary operator '+=' (line 384)
                    result_iadd_20251 = python_operator(stypy.reporting.localization.Localization(__file__, 384, 16), '+=', pos_20249, int_20250)
                    # Getting the type of 'self' (line 384)
                    self_20252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 16), 'self')
                    # Setting the type of the member 'pos' of a type (line 384)
                    module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 16), self_20252, 'pos', result_iadd_20251)
                    
                    # SSA branch for the else part of an if statement (line 383)
                    module_type_store.open_ssa_branch('else')
                    
                    # Evaluating a boolean operation
                    # Getting the type of 'allowcomments' (line 386)
                    allowcomments_20253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'allowcomments')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 386)
                    self_20254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 46), 'self')
                    # Obtaining the member 'pos' of a type (line 386)
                    pos_20255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 46), self_20254, 'pos')
                    # Getting the type of 'self' (line 386)
                    self_20256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 35), 'self')
                    # Obtaining the member 'field' of a type (line 386)
                    field_20257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), self_20256, 'field')
                    # Obtaining the member '__getitem__' of a type (line 386)
                    getitem___20258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 386, 35), field_20257, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 386)
                    subscript_call_result_20259 = invoke(stypy.reporting.localization.Localization(__file__, 386, 35), getitem___20258, pos_20255)
                    
                    str_20260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 386, 59), 'str', '(')
                    # Applying the binary operator '==' (line 386)
                    result_eq_20261 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 35), '==', subscript_call_result_20259, str_20260)
                    
                    # Applying the binary operator 'and' (line 386)
                    result_and_keyword_20262 = python_operator(stypy.reporting.localization.Localization(__file__, 386, 17), 'and', allowcomments_20253, result_eq_20261)
                    
                    # Testing if the type of an if condition is none (line 386)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 386)
                        if_condition_20263 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 386, 17), result_and_keyword_20262)
                        # Assigning a type to the variable 'if_condition_20263' (line 386)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 17), 'if_condition_20263', if_condition_20263)
                        # SSA begins for if statement (line 386)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 387)
                        # Processing the call arguments (line 387)
                        
                        # Call to getcomment(...): (line 387)
                        # Processing the call keyword arguments (line 387)
                        kwargs_20268 = {}
                        # Getting the type of 'self' (line 387)
                        self_20266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 29), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 387)
                        getcomment_20267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 29), self_20266, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 387)
                        getcomment_call_result_20269 = invoke(stypy.reporting.localization.Localization(__file__, 387, 29), getcomment_20267, *[], **kwargs_20268)
                        
                        # Processing the call keyword arguments (line 387)
                        kwargs_20270 = {}
                        # Getting the type of 'slist' (line 387)
                        slist_20264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 16), 'slist', False)
                        # Obtaining the member 'append' of a type (line 387)
                        append_20265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 16), slist_20264, 'append')
                        # Calling append(args, kwargs) (line 387)
                        append_call_result_20271 = invoke(stypy.reporting.localization.Localization(__file__, 387, 16), append_20265, *[getcomment_call_result_20269], **kwargs_20270)
                        
                        # SSA branch for the else part of an if statement (line 386)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 389)
                        self_20272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 389)
                        pos_20273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 28), self_20272, 'pos')
                        # Getting the type of 'self' (line 389)
                        self_20274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'self')
                        # Obtaining the member 'field' of a type (line 389)
                        field_20275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), self_20274, 'field')
                        # Obtaining the member '__getitem__' of a type (line 389)
                        getitem___20276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 17), field_20275, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
                        subscript_call_result_20277 = invoke(stypy.reporting.localization.Localization(__file__, 389, 17), getitem___20276, pos_20273)
                        
                        str_20278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 41), 'str', '\\')
                        # Applying the binary operator '==' (line 389)
                        result_eq_20279 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 17), '==', subscript_call_result_20277, str_20278)
                        
                        # Testing if the type of an if condition is none (line 389)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279):
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                        else:
                            
                            # Testing the type of an if condition (line 389)
                            if_condition_20280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 389, 17), result_eq_20279)
                            # Assigning a type to the variable 'if_condition_20280' (line 389)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 17), 'if_condition_20280', if_condition_20280)
                            # SSA begins for if statement (line 389)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 390):
                            
                            # Assigning a Name to a Name (line 390):
                            # Getting the type of 'True' (line 390)
                            True_20281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 24), 'True')
                            # Assigning a type to the variable 'quote' (line 390)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'quote', True_20281)
                            # SSA branch for the else part of an if statement (line 389)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 392)
                            # Processing the call arguments (line 392)
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'self' (line 392)
                            self_20284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 40), 'self', False)
                            # Obtaining the member 'pos' of a type (line 392)
                            pos_20285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 40), self_20284, 'pos')
                            # Getting the type of 'self' (line 392)
                            self_20286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 29), 'self', False)
                            # Obtaining the member 'field' of a type (line 392)
                            field_20287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), self_20286, 'field')
                            # Obtaining the member '__getitem__' of a type (line 392)
                            getitem___20288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 29), field_20287, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 392)
                            subscript_call_result_20289 = invoke(stypy.reporting.localization.Localization(__file__, 392, 29), getitem___20288, pos_20285)
                            
                            # Processing the call keyword arguments (line 392)
                            kwargs_20290 = {}
                            # Getting the type of 'slist' (line 392)
                            slist_20282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'slist', False)
                            # Obtaining the member 'append' of a type (line 392)
                            append_20283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), slist_20282, 'append')
                            # Calling append(args, kwargs) (line 392)
                            append_call_result_20291 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_20283, *[subscript_call_result_20289], **kwargs_20290)
                            
                            # SSA join for if statement (line 389)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 386)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 383)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 380)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Getting the type of 'self' (line 393)
            self_20292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 12), 'self')
            # Obtaining the member 'pos' of a type (line 393)
            pos_20293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 12), self_20292, 'pos')
            int_20294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 24), 'int')
            # Applying the binary operator '+=' (line 393)
            result_iadd_20295 = python_operator(stypy.reporting.localization.Localization(__file__, 393, 12), '+=', pos_20293, int_20294)
            # Getting the type of 'self' (line 393)
            self_20296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 12), 'self')
            # Setting the type of the member 'pos' of a type (line 393)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 12), self_20296, 'pos', result_iadd_20295)
            
            # SSA join for while statement (line 379)
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to join(...): (line 395)
        # Processing the call arguments (line 395)
        # Getting the type of 'slist' (line 395)
        slist_20299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 32), 'slist', False)
        # Processing the call keyword arguments (line 395)
        kwargs_20300 = {}
        # Getting the type of 'EMPTYSTRING' (line 395)
        EMPTYSTRING_20297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 15), 'EMPTYSTRING', False)
        # Obtaining the member 'join' of a type (line 395)
        join_20298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 15), EMPTYSTRING_20297, 'join')
        # Calling join(args, kwargs) (line 395)
        join_call_result_20301 = invoke(stypy.reporting.localization.Localization(__file__, 395, 15), join_20298, *[slist_20299], **kwargs_20300)
        
        # Assigning a type to the variable 'stypy_return_type' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 8), 'stypy_return_type', join_call_result_20301)
        
        # ################# End of 'getdelimited(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getdelimited' in the type store
        # Getting the type of 'stypy_return_type' (line 360)
        stypy_return_type_20302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20302)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getdelimited'
        return stypy_return_type_20302


    @norecursion
    def getquote(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getquote'
        module_type_store = module_type_store.open_function_context('getquote', 397, 4, False)
        # Assigning a type to the variable 'self' (line 398)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 398, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getquote.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getquote')
        AddrlistClass.getquote.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getquote.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getquote.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getquote', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getquote', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getquote(...)' code ##################

        str_20303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 8), 'str', "Get a quote-delimited fragment from self's field.")
        
        # Call to getdelimited(...): (line 399)
        # Processing the call arguments (line 399)
        str_20306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 33), 'str', '"')
        str_20307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 399, 38), 'str', '"\r')
        # Getting the type of 'False' (line 399)
        False_20308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 45), 'False', False)
        # Processing the call keyword arguments (line 399)
        kwargs_20309 = {}
        # Getting the type of 'self' (line 399)
        self_20304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 15), 'self', False)
        # Obtaining the member 'getdelimited' of a type (line 399)
        getdelimited_20305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 15), self_20304, 'getdelimited')
        # Calling getdelimited(args, kwargs) (line 399)
        getdelimited_call_result_20310 = invoke(stypy.reporting.localization.Localization(__file__, 399, 15), getdelimited_20305, *[str_20306, str_20307, False_20308], **kwargs_20309)
        
        # Assigning a type to the variable 'stypy_return_type' (line 399)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), 'stypy_return_type', getdelimited_call_result_20310)
        
        # ################# End of 'getquote(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getquote' in the type store
        # Getting the type of 'stypy_return_type' (line 397)
        stypy_return_type_20311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20311)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getquote'
        return stypy_return_type_20311


    @norecursion
    def getcomment(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getcomment'
        module_type_store = module_type_store.open_function_context('getcomment', 401, 4, False)
        # Assigning a type to the variable 'self' (line 402)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 402, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getcomment')
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getcomment.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getcomment', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getcomment', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getcomment(...)' code ##################

        str_20312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 8), 'str', "Get a parenthesis-delimited fragment from self's field.")
        
        # Call to getdelimited(...): (line 403)
        # Processing the call arguments (line 403)
        str_20315 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 33), 'str', '(')
        str_20316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 403, 38), 'str', ')\r')
        # Getting the type of 'True' (line 403)
        True_20317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 45), 'True', False)
        # Processing the call keyword arguments (line 403)
        kwargs_20318 = {}
        # Getting the type of 'self' (line 403)
        self_20313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 15), 'self', False)
        # Obtaining the member 'getdelimited' of a type (line 403)
        getdelimited_20314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 15), self_20313, 'getdelimited')
        # Calling getdelimited(args, kwargs) (line 403)
        getdelimited_call_result_20319 = invoke(stypy.reporting.localization.Localization(__file__, 403, 15), getdelimited_20314, *[str_20315, str_20316, True_20317], **kwargs_20318)
        
        # Assigning a type to the variable 'stypy_return_type' (line 403)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 8), 'stypy_return_type', getdelimited_call_result_20319)
        
        # ################# End of 'getcomment(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getcomment' in the type store
        # Getting the type of 'stypy_return_type' (line 401)
        stypy_return_type_20320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20320)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getcomment'
        return stypy_return_type_20320


    @norecursion
    def getdomainliteral(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getdomainliteral'
        module_type_store = module_type_store.open_function_context('getdomainliteral', 405, 4, False)
        # Assigning a type to the variable 'self' (line 406)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 406, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getdomainliteral')
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getdomainliteral.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getdomainliteral', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getdomainliteral', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getdomainliteral(...)' code ##################

        str_20321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 406, 8), 'str', 'Parse an RFC 2822 domain-literal.')
        str_20322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 15), 'str', '[%s]')
        
        # Call to getdelimited(...): (line 407)
        # Processing the call arguments (line 407)
        str_20325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 42), 'str', '[')
        str_20326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 47), 'str', ']\r')
        # Getting the type of 'False' (line 407)
        False_20327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 54), 'False', False)
        # Processing the call keyword arguments (line 407)
        kwargs_20328 = {}
        # Getting the type of 'self' (line 407)
        self_20323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 24), 'self', False)
        # Obtaining the member 'getdelimited' of a type (line 407)
        getdelimited_20324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 24), self_20323, 'getdelimited')
        # Calling getdelimited(args, kwargs) (line 407)
        getdelimited_call_result_20329 = invoke(stypy.reporting.localization.Localization(__file__, 407, 24), getdelimited_20324, *[str_20325, str_20326, False_20327], **kwargs_20328)
        
        # Applying the binary operator '%' (line 407)
        result_mod_20330 = python_operator(stypy.reporting.localization.Localization(__file__, 407, 15), '%', str_20322, getdelimited_call_result_20329)
        
        # Assigning a type to the variable 'stypy_return_type' (line 407)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 407, 8), 'stypy_return_type', result_mod_20330)
        
        # ################# End of 'getdomainliteral(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getdomainliteral' in the type store
        # Getting the type of 'stypy_return_type' (line 405)
        stypy_return_type_20331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20331)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getdomainliteral'
        return stypy_return_type_20331


    @norecursion
    def getatom(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        # Getting the type of 'None' (line 409)
        None_20332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 31), 'None')
        defaults = [None_20332]
        # Create a new context for function 'getatom'
        module_type_store = module_type_store.open_function_context('getatom', 409, 4, False)
        # Assigning a type to the variable 'self' (line 410)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getatom.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getatom')
        AddrlistClass.getatom.__dict__.__setitem__('stypy_param_names_list', ['atomends'])
        AddrlistClass.getatom.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getatom.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getatom', ['atomends'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getatom', localization, ['atomends'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getatom(...)' code ##################

        str_20333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, (-1)), 'str', "Parse an RFC 2822 atom.\n\n        Optional atomends specifies a different set of end token delimiters\n        (the default is to use self.atomends).  This is used e.g. in\n        getphraselist() since phrase endings must not include the `.' (which\n        is legal in phrases).")
        
        # Assigning a List to a Name (line 416):
        
        # Assigning a List to a Name (line 416):
        
        # Obtaining an instance of the builtin type 'list' (line 416)
        list_20334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 416)
        # Adding element type (line 416)
        str_20335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 416, 20), 'str', '')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 416, 19), list_20334, str_20335)
        
        # Assigning a type to the variable 'atomlist' (line 416)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'atomlist', list_20334)
        
        # Type idiom detected: calculating its left and rigth part (line 417)
        # Getting the type of 'atomends' (line 417)
        atomends_20336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 11), 'atomends')
        # Getting the type of 'None' (line 417)
        None_20337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 23), 'None')
        
        (may_be_20338, more_types_in_union_20339) = may_be_none(atomends_20336, None_20337)

        if may_be_20338:

            if more_types_in_union_20339:
                # Runtime conditional SSA (line 417)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Attribute to a Name (line 418):
            
            # Assigning a Attribute to a Name (line 418):
            # Getting the type of 'self' (line 418)
            self_20340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 23), 'self')
            # Obtaining the member 'atomends' of a type (line 418)
            atomends_20341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 23), self_20340, 'atomends')
            # Assigning a type to the variable 'atomends' (line 418)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 418, 12), 'atomends', atomends_20341)

            if more_types_in_union_20339:
                # SSA join for if statement (line 417)
                module_type_store = module_type_store.join_ssa_context()


        
        
        
        # Getting the type of 'self' (line 420)
        self_20342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 14), 'self')
        # Obtaining the member 'pos' of a type (line 420)
        pos_20343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 14), self_20342, 'pos')
        
        # Call to len(...): (line 420)
        # Processing the call arguments (line 420)
        # Getting the type of 'self' (line 420)
        self_20345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 420)
        field_20346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 29), self_20345, 'field')
        # Processing the call keyword arguments (line 420)
        kwargs_20347 = {}
        # Getting the type of 'len' (line 420)
        len_20344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 25), 'len', False)
        # Calling len(args, kwargs) (line 420)
        len_call_result_20348 = invoke(stypy.reporting.localization.Localization(__file__, 420, 25), len_20344, *[field_20346], **kwargs_20347)
        
        # Applying the binary operator '<' (line 420)
        result_lt_20349 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 14), '<', pos_20343, len_call_result_20348)
        
        # Assigning a type to the variable 'result_lt_20349' (line 420)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 8), 'result_lt_20349', result_lt_20349)
        # Testing if the while is going to be iterated (line 420)
        # Testing the type of an if condition (line 420)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 420, 8), result_lt_20349)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 420, 8), result_lt_20349):
            # SSA begins for while statement (line 420)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'self' (line 421)
            self_20350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 26), 'self')
            # Obtaining the member 'pos' of a type (line 421)
            pos_20351 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 26), self_20350, 'pos')
            # Getting the type of 'self' (line 421)
            self_20352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 15), 'self')
            # Obtaining the member 'field' of a type (line 421)
            field_20353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 15), self_20352, 'field')
            # Obtaining the member '__getitem__' of a type (line 421)
            getitem___20354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 15), field_20353, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 421)
            subscript_call_result_20355 = invoke(stypy.reporting.localization.Localization(__file__, 421, 15), getitem___20354, pos_20351)
            
            # Getting the type of 'atomends' (line 421)
            atomends_20356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 39), 'atomends')
            # Applying the binary operator 'in' (line 421)
            result_contains_20357 = python_operator(stypy.reporting.localization.Localization(__file__, 421, 15), 'in', subscript_call_result_20355, atomends_20356)
            
            # Testing if the type of an if condition is none (line 421)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 421, 12), result_contains_20357):
                
                # Call to append(...): (line 424)
                # Processing the call arguments (line 424)
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 424)
                self_20361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 43), 'self', False)
                # Obtaining the member 'pos' of a type (line 424)
                pos_20362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 43), self_20361, 'pos')
                # Getting the type of 'self' (line 424)
                self_20363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 32), 'self', False)
                # Obtaining the member 'field' of a type (line 424)
                field_20364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 32), self_20363, 'field')
                # Obtaining the member '__getitem__' of a type (line 424)
                getitem___20365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 32), field_20364, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 424)
                subscript_call_result_20366 = invoke(stypy.reporting.localization.Localization(__file__, 424, 32), getitem___20365, pos_20362)
                
                # Processing the call keyword arguments (line 424)
                kwargs_20367 = {}
                # Getting the type of 'atomlist' (line 424)
                atomlist_20359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 16), 'atomlist', False)
                # Obtaining the member 'append' of a type (line 424)
                append_20360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 16), atomlist_20359, 'append')
                # Calling append(args, kwargs) (line 424)
                append_call_result_20368 = invoke(stypy.reporting.localization.Localization(__file__, 424, 16), append_20360, *[subscript_call_result_20366], **kwargs_20367)
                
            else:
                
                # Testing the type of an if condition (line 421)
                if_condition_20358 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 421, 12), result_contains_20357)
                # Assigning a type to the variable 'if_condition_20358' (line 421)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 421, 12), 'if_condition_20358', if_condition_20358)
                # SSA begins for if statement (line 421)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # SSA branch for the else part of an if statement (line 421)
                module_type_store.open_ssa_branch('else')
                
                # Call to append(...): (line 424)
                # Processing the call arguments (line 424)
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 424)
                self_20361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 43), 'self', False)
                # Obtaining the member 'pos' of a type (line 424)
                pos_20362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 43), self_20361, 'pos')
                # Getting the type of 'self' (line 424)
                self_20363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 32), 'self', False)
                # Obtaining the member 'field' of a type (line 424)
                field_20364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 32), self_20363, 'field')
                # Obtaining the member '__getitem__' of a type (line 424)
                getitem___20365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 32), field_20364, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 424)
                subscript_call_result_20366 = invoke(stypy.reporting.localization.Localization(__file__, 424, 32), getitem___20365, pos_20362)
                
                # Processing the call keyword arguments (line 424)
                kwargs_20367 = {}
                # Getting the type of 'atomlist' (line 424)
                atomlist_20359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 16), 'atomlist', False)
                # Obtaining the member 'append' of a type (line 424)
                append_20360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 16), atomlist_20359, 'append')
                # Calling append(args, kwargs) (line 424)
                append_call_result_20368 = invoke(stypy.reporting.localization.Localization(__file__, 424, 16), append_20360, *[subscript_call_result_20366], **kwargs_20367)
                
                # SSA join for if statement (line 421)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Getting the type of 'self' (line 425)
            self_20369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'self')
            # Obtaining the member 'pos' of a type (line 425)
            pos_20370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 12), self_20369, 'pos')
            int_20371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 425, 24), 'int')
            # Applying the binary operator '+=' (line 425)
            result_iadd_20372 = python_operator(stypy.reporting.localization.Localization(__file__, 425, 12), '+=', pos_20370, int_20371)
            # Getting the type of 'self' (line 425)
            self_20373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'self')
            # Setting the type of the member 'pos' of a type (line 425)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 12), self_20373, 'pos', result_iadd_20372)
            
            # SSA join for while statement (line 420)
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to join(...): (line 427)
        # Processing the call arguments (line 427)
        # Getting the type of 'atomlist' (line 427)
        atomlist_20376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 32), 'atomlist', False)
        # Processing the call keyword arguments (line 427)
        kwargs_20377 = {}
        # Getting the type of 'EMPTYSTRING' (line 427)
        EMPTYSTRING_20374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 15), 'EMPTYSTRING', False)
        # Obtaining the member 'join' of a type (line 427)
        join_20375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 15), EMPTYSTRING_20374, 'join')
        # Calling join(args, kwargs) (line 427)
        join_call_result_20378 = invoke(stypy.reporting.localization.Localization(__file__, 427, 15), join_20375, *[atomlist_20376], **kwargs_20377)
        
        # Assigning a type to the variable 'stypy_return_type' (line 427)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 8), 'stypy_return_type', join_call_result_20378)
        
        # ################# End of 'getatom(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getatom' in the type store
        # Getting the type of 'stypy_return_type' (line 409)
        stypy_return_type_20379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20379)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getatom'
        return stypy_return_type_20379


    @norecursion
    def getphraselist(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'getphraselist'
        module_type_store = module_type_store.open_function_context('getphraselist', 429, 4, False)
        # Assigning a type to the variable 'self' (line 430)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_localization', localization)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_function_name', 'AddrlistClass.getphraselist')
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_param_names_list', [])
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddrlistClass.getphraselist.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddrlistClass.getphraselist', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'getphraselist', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'getphraselist(...)' code ##################

        str_20380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, (-1)), 'str', 'Parse a sequence of RFC 2822 phrases.\n\n        A phrase is a sequence of words, which are in turn either RFC 2822\n        atoms or quoted-strings.  Phrases are canonicalized by squeezing all\n        runs of continuous whitespace into one space.\n        ')
        
        # Assigning a List to a Name (line 436):
        
        # Assigning a List to a Name (line 436):
        
        # Obtaining an instance of the builtin type 'list' (line 436)
        list_20381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 436, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 436)
        
        # Assigning a type to the variable 'plist' (line 436)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'plist', list_20381)
        
        
        # Getting the type of 'self' (line 438)
        self_20382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 14), 'self')
        # Obtaining the member 'pos' of a type (line 438)
        pos_20383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 14), self_20382, 'pos')
        
        # Call to len(...): (line 438)
        # Processing the call arguments (line 438)
        # Getting the type of 'self' (line 438)
        self_20385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 29), 'self', False)
        # Obtaining the member 'field' of a type (line 438)
        field_20386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 29), self_20385, 'field')
        # Processing the call keyword arguments (line 438)
        kwargs_20387 = {}
        # Getting the type of 'len' (line 438)
        len_20384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 25), 'len', False)
        # Calling len(args, kwargs) (line 438)
        len_call_result_20388 = invoke(stypy.reporting.localization.Localization(__file__, 438, 25), len_20384, *[field_20386], **kwargs_20387)
        
        # Applying the binary operator '<' (line 438)
        result_lt_20389 = python_operator(stypy.reporting.localization.Localization(__file__, 438, 14), '<', pos_20383, len_call_result_20388)
        
        # Assigning a type to the variable 'result_lt_20389' (line 438)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 8), 'result_lt_20389', result_lt_20389)
        # Testing if the while is going to be iterated (line 438)
        # Testing the type of an if condition (line 438)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 438, 8), result_lt_20389)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 438, 8), result_lt_20389):
            # SSA begins for while statement (line 438)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'self' (line 439)
            self_20390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 26), 'self')
            # Obtaining the member 'pos' of a type (line 439)
            pos_20391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 26), self_20390, 'pos')
            # Getting the type of 'self' (line 439)
            self_20392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 15), 'self')
            # Obtaining the member 'field' of a type (line 439)
            field_20393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 15), self_20392, 'field')
            # Obtaining the member '__getitem__' of a type (line 439)
            getitem___20394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 15), field_20393, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 439)
            subscript_call_result_20395 = invoke(stypy.reporting.localization.Localization(__file__, 439, 15), getitem___20394, pos_20391)
            
            # Getting the type of 'self' (line 439)
            self_20396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 39), 'self')
            # Obtaining the member 'FWS' of a type (line 439)
            FWS_20397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 39), self_20396, 'FWS')
            # Applying the binary operator 'in' (line 439)
            result_contains_20398 = python_operator(stypy.reporting.localization.Localization(__file__, 439, 15), 'in', subscript_call_result_20395, FWS_20397)
            
            # Testing if the type of an if condition is none (line 439)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 439, 12), result_contains_20398):
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 441)
                self_20405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 28), 'self')
                # Obtaining the member 'pos' of a type (line 441)
                pos_20406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 28), self_20405, 'pos')
                # Getting the type of 'self' (line 441)
                self_20407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 17), 'self')
                # Obtaining the member 'field' of a type (line 441)
                field_20408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 17), self_20407, 'field')
                # Obtaining the member '__getitem__' of a type (line 441)
                getitem___20409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 17), field_20408, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 441)
                subscript_call_result_20410 = invoke(stypy.reporting.localization.Localization(__file__, 441, 17), getitem___20409, pos_20406)
                
                str_20411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 41), 'str', '"')
                # Applying the binary operator '==' (line 441)
                result_eq_20412 = python_operator(stypy.reporting.localization.Localization(__file__, 441, 17), '==', subscript_call_result_20410, str_20411)
                
                # Testing if the type of an if condition is none (line 441)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 441, 17), result_eq_20412):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 443)
                    self_20422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 443)
                    pos_20423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 28), self_20422, 'pos')
                    # Getting the type of 'self' (line 443)
                    self_20424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'self')
                    # Obtaining the member 'field' of a type (line 443)
                    field_20425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), self_20424, 'field')
                    # Obtaining the member '__getitem__' of a type (line 443)
                    getitem___20426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), field_20425, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 443)
                    subscript_call_result_20427 = invoke(stypy.reporting.localization.Localization(__file__, 443, 17), getitem___20426, pos_20423)
                    
                    str_20428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 41), 'str', '(')
                    # Applying the binary operator '==' (line 443)
                    result_eq_20429 = python_operator(stypy.reporting.localization.Localization(__file__, 443, 17), '==', subscript_call_result_20427, str_20428)
                    
                    # Testing if the type of an if condition is none (line 443)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 443)
                        if_condition_20430 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429)
                        # Assigning a type to the variable 'if_condition_20430' (line 443)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'if_condition_20430', if_condition_20430)
                        # SSA begins for if statement (line 443)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 444)
                        # Processing the call arguments (line 444)
                        
                        # Call to getcomment(...): (line 444)
                        # Processing the call keyword arguments (line 444)
                        kwargs_20436 = {}
                        # Getting the type of 'self' (line 444)
                        self_20434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 40), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 444)
                        getcomment_20435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 40), self_20434, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 444)
                        getcomment_call_result_20437 = invoke(stypy.reporting.localization.Localization(__file__, 444, 40), getcomment_20435, *[], **kwargs_20436)
                        
                        # Processing the call keyword arguments (line 444)
                        kwargs_20438 = {}
                        # Getting the type of 'self' (line 444)
                        self_20431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'self', False)
                        # Obtaining the member 'commentlist' of a type (line 444)
                        commentlist_20432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), self_20431, 'commentlist')
                        # Obtaining the member 'append' of a type (line 444)
                        append_20433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), commentlist_20432, 'append')
                        # Calling append(args, kwargs) (line 444)
                        append_call_result_20439 = invoke(stypy.reporting.localization.Localization(__file__, 444, 16), append_20433, *[getcomment_call_result_20437], **kwargs_20438)
                        
                        # SSA branch for the else part of an if statement (line 443)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 443)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 441)
                    if_condition_20413 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 441, 17), result_eq_20412)
                    # Assigning a type to the variable 'if_condition_20413' (line 441)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 17), 'if_condition_20413', if_condition_20413)
                    # SSA begins for if statement (line 441)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 442)
                    # Processing the call arguments (line 442)
                    
                    # Call to getquote(...): (line 442)
                    # Processing the call keyword arguments (line 442)
                    kwargs_20418 = {}
                    # Getting the type of 'self' (line 442)
                    self_20416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 29), 'self', False)
                    # Obtaining the member 'getquote' of a type (line 442)
                    getquote_20417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 29), self_20416, 'getquote')
                    # Calling getquote(args, kwargs) (line 442)
                    getquote_call_result_20419 = invoke(stypy.reporting.localization.Localization(__file__, 442, 29), getquote_20417, *[], **kwargs_20418)
                    
                    # Processing the call keyword arguments (line 442)
                    kwargs_20420 = {}
                    # Getting the type of 'plist' (line 442)
                    plist_20414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'plist', False)
                    # Obtaining the member 'append' of a type (line 442)
                    append_20415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 16), plist_20414, 'append')
                    # Calling append(args, kwargs) (line 442)
                    append_call_result_20421 = invoke(stypy.reporting.localization.Localization(__file__, 442, 16), append_20415, *[getquote_call_result_20419], **kwargs_20420)
                    
                    # SSA branch for the else part of an if statement (line 441)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 443)
                    self_20422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 443)
                    pos_20423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 28), self_20422, 'pos')
                    # Getting the type of 'self' (line 443)
                    self_20424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'self')
                    # Obtaining the member 'field' of a type (line 443)
                    field_20425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), self_20424, 'field')
                    # Obtaining the member '__getitem__' of a type (line 443)
                    getitem___20426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), field_20425, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 443)
                    subscript_call_result_20427 = invoke(stypy.reporting.localization.Localization(__file__, 443, 17), getitem___20426, pos_20423)
                    
                    str_20428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 41), 'str', '(')
                    # Applying the binary operator '==' (line 443)
                    result_eq_20429 = python_operator(stypy.reporting.localization.Localization(__file__, 443, 17), '==', subscript_call_result_20427, str_20428)
                    
                    # Testing if the type of an if condition is none (line 443)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 443)
                        if_condition_20430 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429)
                        # Assigning a type to the variable 'if_condition_20430' (line 443)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'if_condition_20430', if_condition_20430)
                        # SSA begins for if statement (line 443)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 444)
                        # Processing the call arguments (line 444)
                        
                        # Call to getcomment(...): (line 444)
                        # Processing the call keyword arguments (line 444)
                        kwargs_20436 = {}
                        # Getting the type of 'self' (line 444)
                        self_20434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 40), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 444)
                        getcomment_20435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 40), self_20434, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 444)
                        getcomment_call_result_20437 = invoke(stypy.reporting.localization.Localization(__file__, 444, 40), getcomment_20435, *[], **kwargs_20436)
                        
                        # Processing the call keyword arguments (line 444)
                        kwargs_20438 = {}
                        # Getting the type of 'self' (line 444)
                        self_20431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'self', False)
                        # Obtaining the member 'commentlist' of a type (line 444)
                        commentlist_20432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), self_20431, 'commentlist')
                        # Obtaining the member 'append' of a type (line 444)
                        append_20433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), commentlist_20432, 'append')
                        # Calling append(args, kwargs) (line 444)
                        append_call_result_20439 = invoke(stypy.reporting.localization.Localization(__file__, 444, 16), append_20433, *[getcomment_call_result_20437], **kwargs_20438)
                        
                        # SSA branch for the else part of an if statement (line 443)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 443)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 441)
                    module_type_store = module_type_store.join_ssa_context()
                    

            else:
                
                # Testing the type of an if condition (line 439)
                if_condition_20399 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 439, 12), result_contains_20398)
                # Assigning a type to the variable 'if_condition_20399' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 12), 'if_condition_20399', if_condition_20399)
                # SSA begins for if statement (line 439)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Getting the type of 'self' (line 440)
                self_20400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'self')
                # Obtaining the member 'pos' of a type (line 440)
                pos_20401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 16), self_20400, 'pos')
                int_20402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 28), 'int')
                # Applying the binary operator '+=' (line 440)
                result_iadd_20403 = python_operator(stypy.reporting.localization.Localization(__file__, 440, 16), '+=', pos_20401, int_20402)
                # Getting the type of 'self' (line 440)
                self_20404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'self')
                # Setting the type of the member 'pos' of a type (line 440)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 16), self_20404, 'pos', result_iadd_20403)
                
                # SSA branch for the else part of an if statement (line 439)
                module_type_store.open_ssa_branch('else')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'self' (line 441)
                self_20405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 28), 'self')
                # Obtaining the member 'pos' of a type (line 441)
                pos_20406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 28), self_20405, 'pos')
                # Getting the type of 'self' (line 441)
                self_20407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 17), 'self')
                # Obtaining the member 'field' of a type (line 441)
                field_20408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 17), self_20407, 'field')
                # Obtaining the member '__getitem__' of a type (line 441)
                getitem___20409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 17), field_20408, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 441)
                subscript_call_result_20410 = invoke(stypy.reporting.localization.Localization(__file__, 441, 17), getitem___20409, pos_20406)
                
                str_20411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 441, 41), 'str', '"')
                # Applying the binary operator '==' (line 441)
                result_eq_20412 = python_operator(stypy.reporting.localization.Localization(__file__, 441, 17), '==', subscript_call_result_20410, str_20411)
                
                # Testing if the type of an if condition is none (line 441)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 441, 17), result_eq_20412):
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 443)
                    self_20422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 443)
                    pos_20423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 28), self_20422, 'pos')
                    # Getting the type of 'self' (line 443)
                    self_20424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'self')
                    # Obtaining the member 'field' of a type (line 443)
                    field_20425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), self_20424, 'field')
                    # Obtaining the member '__getitem__' of a type (line 443)
                    getitem___20426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), field_20425, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 443)
                    subscript_call_result_20427 = invoke(stypy.reporting.localization.Localization(__file__, 443, 17), getitem___20426, pos_20423)
                    
                    str_20428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 41), 'str', '(')
                    # Applying the binary operator '==' (line 443)
                    result_eq_20429 = python_operator(stypy.reporting.localization.Localization(__file__, 443, 17), '==', subscript_call_result_20427, str_20428)
                    
                    # Testing if the type of an if condition is none (line 443)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 443)
                        if_condition_20430 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429)
                        # Assigning a type to the variable 'if_condition_20430' (line 443)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'if_condition_20430', if_condition_20430)
                        # SSA begins for if statement (line 443)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 444)
                        # Processing the call arguments (line 444)
                        
                        # Call to getcomment(...): (line 444)
                        # Processing the call keyword arguments (line 444)
                        kwargs_20436 = {}
                        # Getting the type of 'self' (line 444)
                        self_20434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 40), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 444)
                        getcomment_20435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 40), self_20434, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 444)
                        getcomment_call_result_20437 = invoke(stypy.reporting.localization.Localization(__file__, 444, 40), getcomment_20435, *[], **kwargs_20436)
                        
                        # Processing the call keyword arguments (line 444)
                        kwargs_20438 = {}
                        # Getting the type of 'self' (line 444)
                        self_20431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'self', False)
                        # Obtaining the member 'commentlist' of a type (line 444)
                        commentlist_20432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), self_20431, 'commentlist')
                        # Obtaining the member 'append' of a type (line 444)
                        append_20433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), commentlist_20432, 'append')
                        # Calling append(args, kwargs) (line 444)
                        append_call_result_20439 = invoke(stypy.reporting.localization.Localization(__file__, 444, 16), append_20433, *[getcomment_call_result_20437], **kwargs_20438)
                        
                        # SSA branch for the else part of an if statement (line 443)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 443)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 441)
                    if_condition_20413 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 441, 17), result_eq_20412)
                    # Assigning a type to the variable 'if_condition_20413' (line 441)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 441, 17), 'if_condition_20413', if_condition_20413)
                    # SSA begins for if statement (line 441)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to append(...): (line 442)
                    # Processing the call arguments (line 442)
                    
                    # Call to getquote(...): (line 442)
                    # Processing the call keyword arguments (line 442)
                    kwargs_20418 = {}
                    # Getting the type of 'self' (line 442)
                    self_20416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 29), 'self', False)
                    # Obtaining the member 'getquote' of a type (line 442)
                    getquote_20417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 29), self_20416, 'getquote')
                    # Calling getquote(args, kwargs) (line 442)
                    getquote_call_result_20419 = invoke(stypy.reporting.localization.Localization(__file__, 442, 29), getquote_20417, *[], **kwargs_20418)
                    
                    # Processing the call keyword arguments (line 442)
                    kwargs_20420 = {}
                    # Getting the type of 'plist' (line 442)
                    plist_20414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'plist', False)
                    # Obtaining the member 'append' of a type (line 442)
                    append_20415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 16), plist_20414, 'append')
                    # Calling append(args, kwargs) (line 442)
                    append_call_result_20421 = invoke(stypy.reporting.localization.Localization(__file__, 442, 16), append_20415, *[getquote_call_result_20419], **kwargs_20420)
                    
                    # SSA branch for the else part of an if statement (line 441)
                    module_type_store.open_ssa_branch('else')
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'self' (line 443)
                    self_20422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 28), 'self')
                    # Obtaining the member 'pos' of a type (line 443)
                    pos_20423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 28), self_20422, 'pos')
                    # Getting the type of 'self' (line 443)
                    self_20424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'self')
                    # Obtaining the member 'field' of a type (line 443)
                    field_20425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), self_20424, 'field')
                    # Obtaining the member '__getitem__' of a type (line 443)
                    getitem___20426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 17), field_20425, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 443)
                    subscript_call_result_20427 = invoke(stypy.reporting.localization.Localization(__file__, 443, 17), getitem___20426, pos_20423)
                    
                    str_20428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 41), 'str', '(')
                    # Applying the binary operator '==' (line 443)
                    result_eq_20429 = python_operator(stypy.reporting.localization.Localization(__file__, 443, 17), '==', subscript_call_result_20427, str_20428)
                    
                    # Testing if the type of an if condition is none (line 443)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429):
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 443)
                        if_condition_20430 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 443, 17), result_eq_20429)
                        # Assigning a type to the variable 'if_condition_20430' (line 443)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 443, 17), 'if_condition_20430', if_condition_20430)
                        # SSA begins for if statement (line 443)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 444)
                        # Processing the call arguments (line 444)
                        
                        # Call to getcomment(...): (line 444)
                        # Processing the call keyword arguments (line 444)
                        kwargs_20436 = {}
                        # Getting the type of 'self' (line 444)
                        self_20434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 40), 'self', False)
                        # Obtaining the member 'getcomment' of a type (line 444)
                        getcomment_20435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 40), self_20434, 'getcomment')
                        # Calling getcomment(args, kwargs) (line 444)
                        getcomment_call_result_20437 = invoke(stypy.reporting.localization.Localization(__file__, 444, 40), getcomment_20435, *[], **kwargs_20436)
                        
                        # Processing the call keyword arguments (line 444)
                        kwargs_20438 = {}
                        # Getting the type of 'self' (line 444)
                        self_20431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'self', False)
                        # Obtaining the member 'commentlist' of a type (line 444)
                        commentlist_20432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), self_20431, 'commentlist')
                        # Obtaining the member 'append' of a type (line 444)
                        append_20433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 16), commentlist_20432, 'append')
                        # Calling append(args, kwargs) (line 444)
                        append_call_result_20439 = invoke(stypy.reporting.localization.Localization(__file__, 444, 16), append_20433, *[getcomment_call_result_20437], **kwargs_20438)
                        
                        # SSA branch for the else part of an if statement (line 443)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'self' (line 445)
                        self_20440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 28), 'self')
                        # Obtaining the member 'pos' of a type (line 445)
                        pos_20441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 28), self_20440, 'pos')
                        # Getting the type of 'self' (line 445)
                        self_20442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'self')
                        # Obtaining the member 'field' of a type (line 445)
                        field_20443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), self_20442, 'field')
                        # Obtaining the member '__getitem__' of a type (line 445)
                        getitem___20444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 17), field_20443, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 445)
                        subscript_call_result_20445 = invoke(stypy.reporting.localization.Localization(__file__, 445, 17), getitem___20444, pos_20441)
                        
                        # Getting the type of 'self' (line 445)
                        self_20446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 41), 'self')
                        # Obtaining the member 'phraseends' of a type (line 445)
                        phraseends_20447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 41), self_20446, 'phraseends')
                        # Applying the binary operator 'in' (line 445)
                        result_contains_20448 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 17), 'in', subscript_call_result_20445, phraseends_20447)
                        
                        # Testing if the type of an if condition is none (line 445)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448):
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                        else:
                            
                            # Testing the type of an if condition (line 445)
                            if_condition_20449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 445, 17), result_contains_20448)
                            # Assigning a type to the variable 'if_condition_20449' (line 445)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'if_condition_20449', if_condition_20449)
                            # SSA begins for if statement (line 445)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA branch for the else part of an if statement (line 445)
                            module_type_store.open_ssa_branch('else')
                            
                            # Call to append(...): (line 448)
                            # Processing the call arguments (line 448)
                            
                            # Call to getatom(...): (line 448)
                            # Processing the call arguments (line 448)
                            # Getting the type of 'self' (line 448)
                            self_20454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 42), 'self', False)
                            # Obtaining the member 'phraseends' of a type (line 448)
                            phraseends_20455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 42), self_20454, 'phraseends')
                            # Processing the call keyword arguments (line 448)
                            kwargs_20456 = {}
                            # Getting the type of 'self' (line 448)
                            self_20452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 29), 'self', False)
                            # Obtaining the member 'getatom' of a type (line 448)
                            getatom_20453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 29), self_20452, 'getatom')
                            # Calling getatom(args, kwargs) (line 448)
                            getatom_call_result_20457 = invoke(stypy.reporting.localization.Localization(__file__, 448, 29), getatom_20453, *[phraseends_20455], **kwargs_20456)
                            
                            # Processing the call keyword arguments (line 448)
                            kwargs_20458 = {}
                            # Getting the type of 'plist' (line 448)
                            plist_20450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 16), 'plist', False)
                            # Obtaining the member 'append' of a type (line 448)
                            append_20451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 16), plist_20450, 'append')
                            # Calling append(args, kwargs) (line 448)
                            append_call_result_20459 = invoke(stypy.reporting.localization.Localization(__file__, 448, 16), append_20451, *[getatom_call_result_20457], **kwargs_20458)
                            
                            # SSA join for if statement (line 445)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 443)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 441)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 439)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for while statement (line 438)
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'plist' (line 450)
        plist_20460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 15), 'plist')
        # Assigning a type to the variable 'stypy_return_type' (line 450)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 8), 'stypy_return_type', plist_20460)
        
        # ################# End of 'getphraselist(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'getphraselist' in the type store
        # Getting the type of 'stypy_return_type' (line 429)
        stypy_return_type_20461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20461)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'getphraselist'
        return stypy_return_type_20461


# Assigning a type to the variable 'AddrlistClass' (line 172)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 0), 'AddrlistClass', AddrlistClass)
# Declaration of the 'AddressList' class
# Getting the type of 'AddrlistClass' (line 452)
AddrlistClass_20462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 18), 'AddrlistClass')

class AddressList(AddrlistClass_20462, ):
    str_20463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 453, 4), 'str', 'An AddressList encapsulates a list of parsed RFC 2822 addresses.')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 454, 4, False)
        # Assigning a type to the variable 'self' (line 455)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddressList.__init__', ['field'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['field'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Call to __init__(...): (line 455)
        # Processing the call arguments (line 455)
        # Getting the type of 'self' (line 455)
        self_20466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 31), 'self', False)
        # Getting the type of 'field' (line 455)
        field_20467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 37), 'field', False)
        # Processing the call keyword arguments (line 455)
        kwargs_20468 = {}
        # Getting the type of 'AddrlistClass' (line 455)
        AddrlistClass_20464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 8), 'AddrlistClass', False)
        # Obtaining the member '__init__' of a type (line 455)
        init___20465 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 8), AddrlistClass_20464, '__init__')
        # Calling __init__(args, kwargs) (line 455)
        init___call_result_20469 = invoke(stypy.reporting.localization.Localization(__file__, 455, 8), init___20465, *[self_20466, field_20467], **kwargs_20468)
        
        # Getting the type of 'field' (line 456)
        field_20470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 11), 'field')
        # Testing if the type of an if condition is none (line 456)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 456, 8), field_20470):
            
            # Assigning a List to a Attribute (line 459):
            
            # Assigning a List to a Attribute (line 459):
            
            # Obtaining an instance of the builtin type 'list' (line 459)
            list_20477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 31), 'list')
            # Adding type elements to the builtin type 'list' instance (line 459)
            
            # Getting the type of 'self' (line 459)
            self_20478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 12), 'self')
            # Setting the type of the member 'addresslist' of a type (line 459)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 12), self_20478, 'addresslist', list_20477)
        else:
            
            # Testing the type of an if condition (line 456)
            if_condition_20471 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 456, 8), field_20470)
            # Assigning a type to the variable 'if_condition_20471' (line 456)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 8), 'if_condition_20471', if_condition_20471)
            # SSA begins for if statement (line 456)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Attribute (line 457):
            
            # Assigning a Call to a Attribute (line 457):
            
            # Call to getaddrlist(...): (line 457)
            # Processing the call keyword arguments (line 457)
            kwargs_20474 = {}
            # Getting the type of 'self' (line 457)
            self_20472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 31), 'self', False)
            # Obtaining the member 'getaddrlist' of a type (line 457)
            getaddrlist_20473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 457, 31), self_20472, 'getaddrlist')
            # Calling getaddrlist(args, kwargs) (line 457)
            getaddrlist_call_result_20475 = invoke(stypy.reporting.localization.Localization(__file__, 457, 31), getaddrlist_20473, *[], **kwargs_20474)
            
            # Getting the type of 'self' (line 457)
            self_20476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 12), 'self')
            # Setting the type of the member 'addresslist' of a type (line 457)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 457, 12), self_20476, 'addresslist', getaddrlist_call_result_20475)
            # SSA branch for the else part of an if statement (line 456)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a List to a Attribute (line 459):
            
            # Assigning a List to a Attribute (line 459):
            
            # Obtaining an instance of the builtin type 'list' (line 459)
            list_20477 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 31), 'list')
            # Adding type elements to the builtin type 'list' instance (line 459)
            
            # Getting the type of 'self' (line 459)
            self_20478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 12), 'self')
            # Setting the type of the member 'addresslist' of a type (line 459)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 12), self_20478, 'addresslist', list_20477)
            # SSA join for if statement (line 456)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def __len__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__len__'
        module_type_store = module_type_store.open_function_context('__len__', 461, 4, False)
        # Assigning a type to the variable 'self' (line 462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddressList.__len__.__dict__.__setitem__('stypy_localization', localization)
        AddressList.__len__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddressList.__len__.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddressList.__len__.__dict__.__setitem__('stypy_function_name', 'AddressList.__len__')
        AddressList.__len__.__dict__.__setitem__('stypy_param_names_list', [])
        AddressList.__len__.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddressList.__len__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddressList.__len__.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddressList.__len__.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddressList.__len__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddressList.__len__.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddressList.__len__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__len__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__len__(...)' code ##################

        
        # Call to len(...): (line 462)
        # Processing the call arguments (line 462)
        # Getting the type of 'self' (line 462)
        self_20480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 19), 'self', False)
        # Obtaining the member 'addresslist' of a type (line 462)
        addresslist_20481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 19), self_20480, 'addresslist')
        # Processing the call keyword arguments (line 462)
        kwargs_20482 = {}
        # Getting the type of 'len' (line 462)
        len_20479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 15), 'len', False)
        # Calling len(args, kwargs) (line 462)
        len_call_result_20483 = invoke(stypy.reporting.localization.Localization(__file__, 462, 15), len_20479, *[addresslist_20481], **kwargs_20482)
        
        # Assigning a type to the variable 'stypy_return_type' (line 462)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 8), 'stypy_return_type', len_call_result_20483)
        
        # ################# End of '__len__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__len__' in the type store
        # Getting the type of 'stypy_return_type' (line 461)
        stypy_return_type_20484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20484)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__len__'
        return stypy_return_type_20484


    @norecursion
    def __add__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__add__'
        module_type_store = module_type_store.open_function_context('__add__', 464, 4, False)
        # Assigning a type to the variable 'self' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddressList.__add__.__dict__.__setitem__('stypy_localization', localization)
        AddressList.__add__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddressList.__add__.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddressList.__add__.__dict__.__setitem__('stypy_function_name', 'AddressList.__add__')
        AddressList.__add__.__dict__.__setitem__('stypy_param_names_list', ['other'])
        AddressList.__add__.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddressList.__add__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddressList.__add__.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddressList.__add__.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddressList.__add__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddressList.__add__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddressList.__add__', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__add__', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__add__(...)' code ##################

        
        # Assigning a Call to a Name (line 466):
        
        # Assigning a Call to a Name (line 466):
        
        # Call to AddressList(...): (line 466)
        # Processing the call arguments (line 466)
        # Getting the type of 'None' (line 466)
        None_20486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 30), 'None', False)
        # Processing the call keyword arguments (line 466)
        kwargs_20487 = {}
        # Getting the type of 'AddressList' (line 466)
        AddressList_20485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 18), 'AddressList', False)
        # Calling AddressList(args, kwargs) (line 466)
        AddressList_call_result_20488 = invoke(stypy.reporting.localization.Localization(__file__, 466, 18), AddressList_20485, *[None_20486], **kwargs_20487)
        
        # Assigning a type to the variable 'newaddr' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'newaddr', AddressList_call_result_20488)
        
        # Assigning a Subscript to a Attribute (line 467):
        
        # Assigning a Subscript to a Attribute (line 467):
        
        # Obtaining the type of the subscript
        slice_20489 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 467, 30), None, None, None)
        # Getting the type of 'self' (line 467)
        self_20490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 30), 'self')
        # Obtaining the member 'addresslist' of a type (line 467)
        addresslist_20491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 30), self_20490, 'addresslist')
        # Obtaining the member '__getitem__' of a type (line 467)
        getitem___20492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 30), addresslist_20491, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 467)
        subscript_call_result_20493 = invoke(stypy.reporting.localization.Localization(__file__, 467, 30), getitem___20492, slice_20489)
        
        # Getting the type of 'newaddr' (line 467)
        newaddr_20494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 8), 'newaddr')
        # Setting the type of the member 'addresslist' of a type (line 467)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 8), newaddr_20494, 'addresslist', subscript_call_result_20493)
        
        # Getting the type of 'other' (line 468)
        other_20495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 17), 'other')
        # Obtaining the member 'addresslist' of a type (line 468)
        addresslist_20496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 17), other_20495, 'addresslist')
        # Assigning a type to the variable 'addresslist_20496' (line 468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'addresslist_20496', addresslist_20496)
        # Testing if the for loop is going to be iterated (line 468)
        # Testing the type of a for loop iterable (line 468)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 468, 8), addresslist_20496)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 468, 8), addresslist_20496):
            # Getting the type of the for loop variable (line 468)
            for_loop_var_20497 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 468, 8), addresslist_20496)
            # Assigning a type to the variable 'x' (line 468)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'x', for_loop_var_20497)
            # SSA begins for a for statement (line 468)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Getting the type of 'x' (line 469)
            x_20498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 19), 'x')
            # Getting the type of 'self' (line 469)
            self_20499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 24), 'self')
            # Obtaining the member 'addresslist' of a type (line 469)
            addresslist_20500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 24), self_20499, 'addresslist')
            # Applying the binary operator 'in' (line 469)
            result_contains_20501 = python_operator(stypy.reporting.localization.Localization(__file__, 469, 19), 'in', x_20498, addresslist_20500)
            
            # Applying the 'not' unary operator (line 469)
            result_not__20502 = python_operator(stypy.reporting.localization.Localization(__file__, 469, 15), 'not', result_contains_20501)
            
            # Testing if the type of an if condition is none (line 469)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 469, 12), result_not__20502):
                pass
            else:
                
                # Testing the type of an if condition (line 469)
                if_condition_20503 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 469, 12), result_not__20502)
                # Assigning a type to the variable 'if_condition_20503' (line 469)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 12), 'if_condition_20503', if_condition_20503)
                # SSA begins for if statement (line 469)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 470)
                # Processing the call arguments (line 470)
                # Getting the type of 'x' (line 470)
                x_20507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 43), 'x', False)
                # Processing the call keyword arguments (line 470)
                kwargs_20508 = {}
                # Getting the type of 'newaddr' (line 470)
                newaddr_20504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'newaddr', False)
                # Obtaining the member 'addresslist' of a type (line 470)
                addresslist_20505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 16), newaddr_20504, 'addresslist')
                # Obtaining the member 'append' of a type (line 470)
                append_20506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 16), addresslist_20505, 'append')
                # Calling append(args, kwargs) (line 470)
                append_call_result_20509 = invoke(stypy.reporting.localization.Localization(__file__, 470, 16), append_20506, *[x_20507], **kwargs_20508)
                
                # SSA join for if statement (line 469)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'newaddr' (line 471)
        newaddr_20510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 15), 'newaddr')
        # Assigning a type to the variable 'stypy_return_type' (line 471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'stypy_return_type', newaddr_20510)
        
        # ################# End of '__add__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__add__' in the type store
        # Getting the type of 'stypy_return_type' (line 464)
        stypy_return_type_20511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20511)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__add__'
        return stypy_return_type_20511


    @norecursion
    def __iadd__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__iadd__'
        module_type_store = module_type_store.open_function_context('__iadd__', 473, 4, False)
        # Assigning a type to the variable 'self' (line 474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddressList.__iadd__.__dict__.__setitem__('stypy_localization', localization)
        AddressList.__iadd__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddressList.__iadd__.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddressList.__iadd__.__dict__.__setitem__('stypy_function_name', 'AddressList.__iadd__')
        AddressList.__iadd__.__dict__.__setitem__('stypy_param_names_list', ['other'])
        AddressList.__iadd__.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddressList.__iadd__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddressList.__iadd__.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddressList.__iadd__.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddressList.__iadd__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddressList.__iadd__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddressList.__iadd__', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__iadd__', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__iadd__(...)' code ##################

        
        # Getting the type of 'other' (line 475)
        other_20512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 17), 'other')
        # Obtaining the member 'addresslist' of a type (line 475)
        addresslist_20513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 475, 17), other_20512, 'addresslist')
        # Assigning a type to the variable 'addresslist_20513' (line 475)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 8), 'addresslist_20513', addresslist_20513)
        # Testing if the for loop is going to be iterated (line 475)
        # Testing the type of a for loop iterable (line 475)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 475, 8), addresslist_20513)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 475, 8), addresslist_20513):
            # Getting the type of the for loop variable (line 475)
            for_loop_var_20514 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 475, 8), addresslist_20513)
            # Assigning a type to the variable 'x' (line 475)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 8), 'x', for_loop_var_20514)
            # SSA begins for a for statement (line 475)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Getting the type of 'x' (line 476)
            x_20515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 19), 'x')
            # Getting the type of 'self' (line 476)
            self_20516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 476, 24), 'self')
            # Obtaining the member 'addresslist' of a type (line 476)
            addresslist_20517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 476, 24), self_20516, 'addresslist')
            # Applying the binary operator 'in' (line 476)
            result_contains_20518 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 19), 'in', x_20515, addresslist_20517)
            
            # Applying the 'not' unary operator (line 476)
            result_not__20519 = python_operator(stypy.reporting.localization.Localization(__file__, 476, 15), 'not', result_contains_20518)
            
            # Testing if the type of an if condition is none (line 476)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 476, 12), result_not__20519):
                pass
            else:
                
                # Testing the type of an if condition (line 476)
                if_condition_20520 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 476, 12), result_not__20519)
                # Assigning a type to the variable 'if_condition_20520' (line 476)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 12), 'if_condition_20520', if_condition_20520)
                # SSA begins for if statement (line 476)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 477)
                # Processing the call arguments (line 477)
                # Getting the type of 'x' (line 477)
                x_20524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 40), 'x', False)
                # Processing the call keyword arguments (line 477)
                kwargs_20525 = {}
                # Getting the type of 'self' (line 477)
                self_20521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 16), 'self', False)
                # Obtaining the member 'addresslist' of a type (line 477)
                addresslist_20522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 16), self_20521, 'addresslist')
                # Obtaining the member 'append' of a type (line 477)
                append_20523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 16), addresslist_20522, 'append')
                # Calling append(args, kwargs) (line 477)
                append_call_result_20526 = invoke(stypy.reporting.localization.Localization(__file__, 477, 16), append_20523, *[x_20524], **kwargs_20525)
                
                # SSA join for if statement (line 476)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'self' (line 478)
        self_20527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 15), 'self')
        # Assigning a type to the variable 'stypy_return_type' (line 478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'stypy_return_type', self_20527)
        
        # ################# End of '__iadd__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__iadd__' in the type store
        # Getting the type of 'stypy_return_type' (line 473)
        stypy_return_type_20528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20528)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__iadd__'
        return stypy_return_type_20528


    @norecursion
    def __sub__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__sub__'
        module_type_store = module_type_store.open_function_context('__sub__', 480, 4, False)
        # Assigning a type to the variable 'self' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddressList.__sub__.__dict__.__setitem__('stypy_localization', localization)
        AddressList.__sub__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddressList.__sub__.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddressList.__sub__.__dict__.__setitem__('stypy_function_name', 'AddressList.__sub__')
        AddressList.__sub__.__dict__.__setitem__('stypy_param_names_list', ['other'])
        AddressList.__sub__.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddressList.__sub__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddressList.__sub__.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddressList.__sub__.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddressList.__sub__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddressList.__sub__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddressList.__sub__', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__sub__', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__sub__(...)' code ##################

        
        # Assigning a Call to a Name (line 482):
        
        # Assigning a Call to a Name (line 482):
        
        # Call to AddressList(...): (line 482)
        # Processing the call arguments (line 482)
        # Getting the type of 'None' (line 482)
        None_20530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 30), 'None', False)
        # Processing the call keyword arguments (line 482)
        kwargs_20531 = {}
        # Getting the type of 'AddressList' (line 482)
        AddressList_20529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 18), 'AddressList', False)
        # Calling AddressList(args, kwargs) (line 482)
        AddressList_call_result_20532 = invoke(stypy.reporting.localization.Localization(__file__, 482, 18), AddressList_20529, *[None_20530], **kwargs_20531)
        
        # Assigning a type to the variable 'newaddr' (line 482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 8), 'newaddr', AddressList_call_result_20532)
        
        # Getting the type of 'self' (line 483)
        self_20533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 17), 'self')
        # Obtaining the member 'addresslist' of a type (line 483)
        addresslist_20534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 17), self_20533, 'addresslist')
        # Assigning a type to the variable 'addresslist_20534' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 8), 'addresslist_20534', addresslist_20534)
        # Testing if the for loop is going to be iterated (line 483)
        # Testing the type of a for loop iterable (line 483)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 483, 8), addresslist_20534)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 483, 8), addresslist_20534):
            # Getting the type of the for loop variable (line 483)
            for_loop_var_20535 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 483, 8), addresslist_20534)
            # Assigning a type to the variable 'x' (line 483)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 8), 'x', for_loop_var_20535)
            # SSA begins for a for statement (line 483)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Getting the type of 'x' (line 484)
            x_20536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 19), 'x')
            # Getting the type of 'other' (line 484)
            other_20537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 24), 'other')
            # Obtaining the member 'addresslist' of a type (line 484)
            addresslist_20538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 24), other_20537, 'addresslist')
            # Applying the binary operator 'in' (line 484)
            result_contains_20539 = python_operator(stypy.reporting.localization.Localization(__file__, 484, 19), 'in', x_20536, addresslist_20538)
            
            # Applying the 'not' unary operator (line 484)
            result_not__20540 = python_operator(stypy.reporting.localization.Localization(__file__, 484, 15), 'not', result_contains_20539)
            
            # Testing if the type of an if condition is none (line 484)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 484, 12), result_not__20540):
                pass
            else:
                
                # Testing the type of an if condition (line 484)
                if_condition_20541 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 484, 12), result_not__20540)
                # Assigning a type to the variable 'if_condition_20541' (line 484)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 12), 'if_condition_20541', if_condition_20541)
                # SSA begins for if statement (line 484)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 485)
                # Processing the call arguments (line 485)
                # Getting the type of 'x' (line 485)
                x_20545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 43), 'x', False)
                # Processing the call keyword arguments (line 485)
                kwargs_20546 = {}
                # Getting the type of 'newaddr' (line 485)
                newaddr_20542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 16), 'newaddr', False)
                # Obtaining the member 'addresslist' of a type (line 485)
                addresslist_20543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 16), newaddr_20542, 'addresslist')
                # Obtaining the member 'append' of a type (line 485)
                append_20544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 16), addresslist_20543, 'append')
                # Calling append(args, kwargs) (line 485)
                append_call_result_20547 = invoke(stypy.reporting.localization.Localization(__file__, 485, 16), append_20544, *[x_20545], **kwargs_20546)
                
                # SSA join for if statement (line 484)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'newaddr' (line 486)
        newaddr_20548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 15), 'newaddr')
        # Assigning a type to the variable 'stypy_return_type' (line 486)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 486, 8), 'stypy_return_type', newaddr_20548)
        
        # ################# End of '__sub__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__sub__' in the type store
        # Getting the type of 'stypy_return_type' (line 480)
        stypy_return_type_20549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20549)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__sub__'
        return stypy_return_type_20549


    @norecursion
    def __isub__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__isub__'
        module_type_store = module_type_store.open_function_context('__isub__', 488, 4, False)
        # Assigning a type to the variable 'self' (line 489)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddressList.__isub__.__dict__.__setitem__('stypy_localization', localization)
        AddressList.__isub__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddressList.__isub__.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddressList.__isub__.__dict__.__setitem__('stypy_function_name', 'AddressList.__isub__')
        AddressList.__isub__.__dict__.__setitem__('stypy_param_names_list', ['other'])
        AddressList.__isub__.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddressList.__isub__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddressList.__isub__.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddressList.__isub__.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddressList.__isub__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddressList.__isub__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddressList.__isub__', ['other'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__isub__', localization, ['other'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__isub__(...)' code ##################

        
        # Getting the type of 'other' (line 490)
        other_20550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 17), 'other')
        # Obtaining the member 'addresslist' of a type (line 490)
        addresslist_20551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 17), other_20550, 'addresslist')
        # Assigning a type to the variable 'addresslist_20551' (line 490)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'addresslist_20551', addresslist_20551)
        # Testing if the for loop is going to be iterated (line 490)
        # Testing the type of a for loop iterable (line 490)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 490, 8), addresslist_20551)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 490, 8), addresslist_20551):
            # Getting the type of the for loop variable (line 490)
            for_loop_var_20552 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 490, 8), addresslist_20551)
            # Assigning a type to the variable 'x' (line 490)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 490, 8), 'x', for_loop_var_20552)
            # SSA begins for a for statement (line 490)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Getting the type of 'x' (line 491)
            x_20553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 15), 'x')
            # Getting the type of 'self' (line 491)
            self_20554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 20), 'self')
            # Obtaining the member 'addresslist' of a type (line 491)
            addresslist_20555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 20), self_20554, 'addresslist')
            # Applying the binary operator 'in' (line 491)
            result_contains_20556 = python_operator(stypy.reporting.localization.Localization(__file__, 491, 15), 'in', x_20553, addresslist_20555)
            
            # Testing if the type of an if condition is none (line 491)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 491, 12), result_contains_20556):
                pass
            else:
                
                # Testing the type of an if condition (line 491)
                if_condition_20557 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 491, 12), result_contains_20556)
                # Assigning a type to the variable 'if_condition_20557' (line 491)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'if_condition_20557', if_condition_20557)
                # SSA begins for if statement (line 491)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to remove(...): (line 492)
                # Processing the call arguments (line 492)
                # Getting the type of 'x' (line 492)
                x_20561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 40), 'x', False)
                # Processing the call keyword arguments (line 492)
                kwargs_20562 = {}
                # Getting the type of 'self' (line 492)
                self_20558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 16), 'self', False)
                # Obtaining the member 'addresslist' of a type (line 492)
                addresslist_20559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 16), self_20558, 'addresslist')
                # Obtaining the member 'remove' of a type (line 492)
                remove_20560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 16), addresslist_20559, 'remove')
                # Calling remove(args, kwargs) (line 492)
                remove_call_result_20563 = invoke(stypy.reporting.localization.Localization(__file__, 492, 16), remove_20560, *[x_20561], **kwargs_20562)
                
                # SSA join for if statement (line 491)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'self' (line 493)
        self_20564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 15), 'self')
        # Assigning a type to the variable 'stypy_return_type' (line 493)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 493, 8), 'stypy_return_type', self_20564)
        
        # ################# End of '__isub__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__isub__' in the type store
        # Getting the type of 'stypy_return_type' (line 488)
        stypy_return_type_20565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20565)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__isub__'
        return stypy_return_type_20565


    @norecursion
    def __getitem__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__getitem__'
        module_type_store = module_type_store.open_function_context('__getitem__', 495, 4, False)
        # Assigning a type to the variable 'self' (line 496)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 496, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        AddressList.__getitem__.__dict__.__setitem__('stypy_localization', localization)
        AddressList.__getitem__.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        AddressList.__getitem__.__dict__.__setitem__('stypy_type_store', module_type_store)
        AddressList.__getitem__.__dict__.__setitem__('stypy_function_name', 'AddressList.__getitem__')
        AddressList.__getitem__.__dict__.__setitem__('stypy_param_names_list', ['index'])
        AddressList.__getitem__.__dict__.__setitem__('stypy_varargs_param_name', None)
        AddressList.__getitem__.__dict__.__setitem__('stypy_kwargs_param_name', None)
        AddressList.__getitem__.__dict__.__setitem__('stypy_call_defaults', defaults)
        AddressList.__getitem__.__dict__.__setitem__('stypy_call_varargs', varargs)
        AddressList.__getitem__.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        AddressList.__getitem__.__dict__.__setitem__('stypy_declared_arg_number', 2)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'AddressList.__getitem__', ['index'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__getitem__', localization, ['index'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__getitem__(...)' code ##################

        
        # Obtaining the type of the subscript
        # Getting the type of 'index' (line 497)
        index_20566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 32), 'index')
        # Getting the type of 'self' (line 497)
        self_20567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 15), 'self')
        # Obtaining the member 'addresslist' of a type (line 497)
        addresslist_20568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 15), self_20567, 'addresslist')
        # Obtaining the member '__getitem__' of a type (line 497)
        getitem___20569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 15), addresslist_20568, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 497)
        subscript_call_result_20570 = invoke(stypy.reporting.localization.Localization(__file__, 497, 15), getitem___20569, index_20566)
        
        # Assigning a type to the variable 'stypy_return_type' (line 497)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 497, 8), 'stypy_return_type', subscript_call_result_20570)
        
        # ################# End of '__getitem__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__getitem__' in the type store
        # Getting the type of 'stypy_return_type' (line 495)
        stypy_return_type_20571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_20571)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__getitem__'
        return stypy_return_type_20571


# Assigning a type to the variable 'AddressList' (line 452)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 0), 'AddressList', AddressList)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
