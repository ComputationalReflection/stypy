
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: import difflib
2: import pprint
3: import pickle
4: import re
5: import sys
6: 
7: from copy import deepcopy
8: from test import test_support
9: 
10: import unittest
11: 
12: from unittest.test.support import (
13:     TestEquality, TestHashing, LoggingResult, ResultWithNoStartTestRunStopTestRun
14: )
15: 
16: 
17: class Test(object):
18:     "Keep these TestCase classes out of the main namespace"
19: 
20:     class Foo(unittest.TestCase):
21:         def runTest(self): pass
22:         def test1(self): pass
23: 
24:     class Bar(Foo):
25:         def test2(self): pass
26: 
27:     class LoggingTestCase(unittest.TestCase):
28:         '''A test case which logs its calls.'''
29: 
30:         def __init__(self, events):
31:             super(Test.LoggingTestCase, self).__init__('test')
32:             self.events = events
33: 
34:         def setUp(self):
35:             self.events.append('setUp')
36: 
37:         def test(self):
38:             self.events.append('test')
39: 
40:         def tearDown(self):
41:             self.events.append('tearDown')
42: 
43: 
44: class Test_TestCase(unittest.TestCase, TestEquality, TestHashing):
45: 
46:     ### Set up attributes used by inherited tests
47:     ################################################################
48: 
49:     # Used by TestHashing.test_hash and TestEquality.test_eq
50:     eq_pairs = [(Test.Foo('test1'), Test.Foo('test1'))]
51: 
52:     # Used by TestEquality.test_ne
53:     ne_pairs = [(Test.Foo('test1'), Test.Foo('runTest'))
54:                ,(Test.Foo('test1'), Test.Bar('test1'))
55:                ,(Test.Foo('test1'), Test.Bar('test2'))]
56: 
57:     ################################################################
58:     ### /Set up attributes used by inherited tests
59: 
60: 
61:     # "class TestCase([methodName])"
62:     # ...
63:     # "Each instance of TestCase will run a single test method: the
64:     # method named methodName."
65:     # ...
66:     # "methodName defaults to "runTest"."
67:     #
68:     # Make sure it really is optional, and that it defaults to the proper
69:     # thing.
70:     def test_init__no_test_name(self):
71:         class Test(unittest.TestCase):
72:             def runTest(self): raise TypeError()
73:             def test(self): pass
74: 
75:         self.assertEqual(Test().id()[-13:], '.Test.runTest')
76: 
77:     # "class TestCase([methodName])"
78:     # ...
79:     # "Each instance of TestCase will run a single test method: the
80:     # method named methodName."
81:     def test_init__test_name__valid(self):
82:         class Test(unittest.TestCase):
83:             def runTest(self): raise TypeError()
84:             def test(self): pass
85: 
86:         self.assertEqual(Test('test').id()[-10:], '.Test.test')
87: 
88:     # "class TestCase([methodName])"
89:     # ...
90:     # "Each instance of TestCase will run a single test method: the
91:     # method named methodName."
92:     def test_init__test_name__invalid(self):
93:         class Test(unittest.TestCase):
94:             def runTest(self): raise TypeError()
95:             def test(self): pass
96: 
97:         try:
98:             Test('testfoo')
99:         except ValueError:
100:             pass
101:         else:
102:             self.fail("Failed to raise ValueError")
103: 
104:     # "Return the number of tests represented by the this test object. For
105:     # TestCase instances, this will always be 1"
106:     def test_countTestCases(self):
107:         class Foo(unittest.TestCase):
108:             def test(self): pass
109: 
110:         self.assertEqual(Foo('test').countTestCases(), 1)
111: 
112:     # "Return the default type of test result object to be used to run this
113:     # test. For TestCase instances, this will always be
114:     # unittest.TestResult;  subclasses of TestCase should
115:     # override this as necessary."
116:     def test_defaultTestResult(self):
117:         class Foo(unittest.TestCase):
118:             def runTest(self):
119:                 pass
120: 
121:         result = Foo().defaultTestResult()
122:         self.assertEqual(type(result), unittest.TestResult)
123: 
124:     # "When a setUp() method is defined, the test runner will run that method
125:     # prior to each test. Likewise, if a tearDown() method is defined, the
126:     # test runner will invoke that method after each test. In the example,
127:     # setUp() was used to create a fresh sequence for each test."
128:     #
129:     # Make sure the proper call order is maintained, even if setUp() raises
130:     # an exception.
131:     def test_run_call_order__error_in_setUp(self):
132:         events = []
133:         result = LoggingResult(events)
134: 
135:         class Foo(Test.LoggingTestCase):
136:             def setUp(self):
137:                 super(Foo, self).setUp()
138:                 raise RuntimeError('raised by Foo.setUp')
139: 
140:         Foo(events).run(result)
141:         expected = ['startTest', 'setUp', 'addError', 'stopTest']
142:         self.assertEqual(events, expected)
143: 
144:     # "With a temporary result stopTestRun is called when setUp errors.
145:     def test_run_call_order__error_in_setUp_default_result(self):
146:         events = []
147: 
148:         class Foo(Test.LoggingTestCase):
149:             def defaultTestResult(self):
150:                 return LoggingResult(self.events)
151: 
152:             def setUp(self):
153:                 super(Foo, self).setUp()
154:                 raise RuntimeError('raised by Foo.setUp')
155: 
156:         Foo(events).run()
157:         expected = ['startTestRun', 'startTest', 'setUp', 'addError',
158:                     'stopTest', 'stopTestRun']
159:         self.assertEqual(events, expected)
160: 
161:     # "When a setUp() method is defined, the test runner will run that method
162:     # prior to each test. Likewise, if a tearDown() method is defined, the
163:     # test runner will invoke that method after each test. In the example,
164:     # setUp() was used to create a fresh sequence for each test."
165:     #
166:     # Make sure the proper call order is maintained, even if the test raises
167:     # an error (as opposed to a failure).
168:     def test_run_call_order__error_in_test(self):
169:         events = []
170:         result = LoggingResult(events)
171: 
172:         class Foo(Test.LoggingTestCase):
173:             def test(self):
174:                 super(Foo, self).test()
175:                 raise RuntimeError('raised by Foo.test')
176: 
177:         expected = ['startTest', 'setUp', 'test', 'addError', 'tearDown',
178:                     'stopTest']
179:         Foo(events).run(result)
180:         self.assertEqual(events, expected)
181: 
182:     # "With a default result, an error in the test still results in stopTestRun
183:     # being called."
184:     def test_run_call_order__error_in_test_default_result(self):
185:         events = []
186: 
187:         class Foo(Test.LoggingTestCase):
188:             def defaultTestResult(self):
189:                 return LoggingResult(self.events)
190: 
191:             def test(self):
192:                 super(Foo, self).test()
193:                 raise RuntimeError('raised by Foo.test')
194: 
195:         expected = ['startTestRun', 'startTest', 'setUp', 'test', 'addError',
196:                     'tearDown', 'stopTest', 'stopTestRun']
197:         Foo(events).run()
198:         self.assertEqual(events, expected)
199: 
200:     # "When a setUp() method is defined, the test runner will run that method
201:     # prior to each test. Likewise, if a tearDown() method is defined, the
202:     # test runner will invoke that method after each test. In the example,
203:     # setUp() was used to create a fresh sequence for each test."
204:     #
205:     # Make sure the proper call order is maintained, even if the test signals
206:     # a failure (as opposed to an error).
207:     def test_run_call_order__failure_in_test(self):
208:         events = []
209:         result = LoggingResult(events)
210: 
211:         class Foo(Test.LoggingTestCase):
212:             def test(self):
213:                 super(Foo, self).test()
214:                 self.fail('raised by Foo.test')
215: 
216:         expected = ['startTest', 'setUp', 'test', 'addFailure', 'tearDown',
217:                     'stopTest']
218:         Foo(events).run(result)
219:         self.assertEqual(events, expected)
220: 
221:     # "When a test fails with a default result stopTestRun is still called."
222:     def test_run_call_order__failure_in_test_default_result(self):
223: 
224:         class Foo(Test.LoggingTestCase):
225:             def defaultTestResult(self):
226:                 return LoggingResult(self.events)
227:             def test(self):
228:                 super(Foo, self).test()
229:                 self.fail('raised by Foo.test')
230: 
231:         expected = ['startTestRun', 'startTest', 'setUp', 'test', 'addFailure',
232:                     'tearDown', 'stopTest', 'stopTestRun']
233:         events = []
234:         Foo(events).run()
235:         self.assertEqual(events, expected)
236: 
237:     # "When a setUp() method is defined, the test runner will run that method
238:     # prior to each test. Likewise, if a tearDown() method is defined, the
239:     # test runner will invoke that method after each test. In the example,
240:     # setUp() was used to create a fresh sequence for each test."
241:     #
242:     # Make sure the proper call order is maintained, even if tearDown() raises
243:     # an exception.
244:     def test_run_call_order__error_in_tearDown(self):
245:         events = []
246:         result = LoggingResult(events)
247: 
248:         class Foo(Test.LoggingTestCase):
249:             def tearDown(self):
250:                 super(Foo, self).tearDown()
251:                 raise RuntimeError('raised by Foo.tearDown')
252: 
253:         Foo(events).run(result)
254:         expected = ['startTest', 'setUp', 'test', 'tearDown', 'addError',
255:                     'stopTest']
256:         self.assertEqual(events, expected)
257: 
258:     # "When tearDown errors with a default result stopTestRun is still called."
259:     def test_run_call_order__error_in_tearDown_default_result(self):
260: 
261:         class Foo(Test.LoggingTestCase):
262:             def defaultTestResult(self):
263:                 return LoggingResult(self.events)
264:             def tearDown(self):
265:                 super(Foo, self).tearDown()
266:                 raise RuntimeError('raised by Foo.tearDown')
267: 
268:         events = []
269:         Foo(events).run()
270:         expected = ['startTestRun', 'startTest', 'setUp', 'test', 'tearDown',
271:                     'addError', 'stopTest', 'stopTestRun']
272:         self.assertEqual(events, expected)
273: 
274:     # "TestCase.run() still works when the defaultTestResult is a TestResult
275:     # that does not support startTestRun and stopTestRun.
276:     def test_run_call_order_default_result(self):
277: 
278:         class Foo(unittest.TestCase):
279:             def defaultTestResult(self):
280:                 return ResultWithNoStartTestRunStopTestRun()
281:             def test(self):
282:                 pass
283: 
284:         Foo('test').run()
285: 
286:     # "This class attribute gives the exception raised by the test() method.
287:     # If a test framework needs to use a specialized exception, possibly to
288:     # carry additional information, it must subclass this exception in
289:     # order to ``play fair'' with the framework.  The initial value of this
290:     # attribute is AssertionError"
291:     def test_failureException__default(self):
292:         class Foo(unittest.TestCase):
293:             def test(self):
294:                 pass
295: 
296:         self.assertIs(Foo('test').failureException, AssertionError)
297: 
298:     # "This class attribute gives the exception raised by the test() method.
299:     # If a test framework needs to use a specialized exception, possibly to
300:     # carry additional information, it must subclass this exception in
301:     # order to ``play fair'' with the framework."
302:     #
303:     # Make sure TestCase.run() respects the designated failureException
304:     def test_failureException__subclassing__explicit_raise(self):
305:         events = []
306:         result = LoggingResult(events)
307: 
308:         class Foo(unittest.TestCase):
309:             def test(self):
310:                 raise RuntimeError()
311: 
312:             failureException = RuntimeError
313: 
314:         self.assertIs(Foo('test').failureException, RuntimeError)
315: 
316: 
317:         Foo('test').run(result)
318:         expected = ['startTest', 'addFailure', 'stopTest']
319:         self.assertEqual(events, expected)
320: 
321:     # "This class attribute gives the exception raised by the test() method.
322:     # If a test framework needs to use a specialized exception, possibly to
323:     # carry additional information, it must subclass this exception in
324:     # order to ``play fair'' with the framework."
325:     #
326:     # Make sure TestCase.run() respects the designated failureException
327:     def test_failureException__subclassing__implicit_raise(self):
328:         events = []
329:         result = LoggingResult(events)
330: 
331:         class Foo(unittest.TestCase):
332:             def test(self):
333:                 self.fail("foo")
334: 
335:             failureException = RuntimeError
336: 
337:         self.assertIs(Foo('test').failureException, RuntimeError)
338: 
339: 
340:         Foo('test').run(result)
341:         expected = ['startTest', 'addFailure', 'stopTest']
342:         self.assertEqual(events, expected)
343: 
344:     # "The default implementation does nothing."
345:     def test_setUp(self):
346:         class Foo(unittest.TestCase):
347:             def runTest(self):
348:                 pass
349: 
350:         # ... and nothing should happen
351:         Foo().setUp()
352: 
353:     # "The default implementation does nothing."
354:     def test_tearDown(self):
355:         class Foo(unittest.TestCase):
356:             def runTest(self):
357:                 pass
358: 
359:         # ... and nothing should happen
360:         Foo().tearDown()
361: 
362:     # "Return a string identifying the specific test case."
363:     #
364:     # Because of the vague nature of the docs, I'm not going to lock this
365:     # test down too much. Really all that can be asserted is that the id()
366:     # will be a string (either 8-byte or unicode -- again, because the docs
367:     # just say "string")
368:     def test_id(self):
369:         class Foo(unittest.TestCase):
370:             def runTest(self):
371:                 pass
372: 
373:         self.assertIsInstance(Foo().id(), basestring)
374: 
375:     # "If result is omitted or None, a temporary result object is created
376:     # and used, but is not made available to the caller. As TestCase owns the
377:     # temporary result startTestRun and stopTestRun are called.
378: 
379:     def test_run__uses_defaultTestResult(self):
380:         events = []
381: 
382:         class Foo(unittest.TestCase):
383:             def test(self):
384:                 events.append('test')
385: 
386:             def defaultTestResult(self):
387:                 return LoggingResult(events)
388: 
389:         # Make run() find a result object on its own
390:         Foo('test').run()
391: 
392:         expected = ['startTestRun', 'startTest', 'test', 'addSuccess',
393:             'stopTest', 'stopTestRun']
394:         self.assertEqual(events, expected)
395: 
396:     def testShortDescriptionWithoutDocstring(self):
397:         self.assertIsNone(self.shortDescription())
398: 
399:     @unittest.skipIf(sys.flags.optimize >= 2,
400:                      "Docstrings are omitted with -O2 and above")
401:     def testShortDescriptionWithOneLineDocstring(self):
402:         '''Tests shortDescription() for a method with a docstring.'''
403:         self.assertEqual(
404:                 self.shortDescription(),
405:                 'Tests shortDescription() for a method with a docstring.')
406: 
407:     @unittest.skipIf(sys.flags.optimize >= 2,
408:                      "Docstrings are omitted with -O2 and above")
409:     def testShortDescriptionWithMultiLineDocstring(self):
410:         '''Tests shortDescription() for a method with a longer docstring.
411: 
412:         This method ensures that only the first line of a docstring is
413:         returned used in the short description, no matter how long the
414:         whole thing is.
415:         '''
416:         self.assertEqual(
417:                 self.shortDescription(),
418:                  'Tests shortDescription() for a method with a longer '
419:                  'docstring.')
420: 
421:     def testAddTypeEqualityFunc(self):
422:         class SadSnake(object):
423:             '''Dummy class for test_addTypeEqualityFunc.'''
424:         s1, s2 = SadSnake(), SadSnake()
425:         self.assertNotEqual(s1, s2)
426:         def AllSnakesCreatedEqual(a, b, msg=None):
427:             return type(a) is type(b) is SadSnake
428:         self.addTypeEqualityFunc(SadSnake, AllSnakesCreatedEqual)
429:         self.assertEqual(s1, s2)
430:         # No this doesn't clean up and remove the SadSnake equality func
431:         # from this TestCase instance but since its a local nothing else
432:         # will ever notice that.
433: 
434:     def testAssertIs(self):
435:         thing = object()
436:         self.assertIs(thing, thing)
437:         self.assertRaises(self.failureException, self.assertIs, thing, object())
438: 
439:     def testAssertIsNot(self):
440:         thing = object()
441:         self.assertIsNot(thing, object())
442:         self.assertRaises(self.failureException, self.assertIsNot, thing, thing)
443: 
444:     def testAssertIsInstance(self):
445:         thing = []
446:         self.assertIsInstance(thing, list)
447:         self.assertRaises(self.failureException, self.assertIsInstance,
448:                           thing, dict)
449: 
450:     def testAssertNotIsInstance(self):
451:         thing = []
452:         self.assertNotIsInstance(thing, dict)
453:         self.assertRaises(self.failureException, self.assertNotIsInstance,
454:                           thing, list)
455: 
456:     def testAssertIn(self):
457:         animals = {'monkey': 'banana', 'cow': 'grass', 'seal': 'fish'}
458: 
459:         self.assertIn('a', 'abc')
460:         self.assertIn(2, [1, 2, 3])
461:         self.assertIn('monkey', animals)
462: 
463:         self.assertNotIn('d', 'abc')
464:         self.assertNotIn(0, [1, 2, 3])
465:         self.assertNotIn('otter', animals)
466: 
467:         self.assertRaises(self.failureException, self.assertIn, 'x', 'abc')
468:         self.assertRaises(self.failureException, self.assertIn, 4, [1, 2, 3])
469:         self.assertRaises(self.failureException, self.assertIn, 'elephant',
470:                           animals)
471: 
472:         self.assertRaises(self.failureException, self.assertNotIn, 'c', 'abc')
473:         self.assertRaises(self.failureException, self.assertNotIn, 1, [1, 2, 3])
474:         self.assertRaises(self.failureException, self.assertNotIn, 'cow',
475:                           animals)
476: 
477:     def testAssertDictContainsSubset(self):
478:         self.assertDictContainsSubset({}, {})
479:         self.assertDictContainsSubset({}, {'a': 1})
480:         self.assertDictContainsSubset({'a': 1}, {'a': 1})
481:         self.assertDictContainsSubset({'a': 1}, {'a': 1, 'b': 2})
482:         self.assertDictContainsSubset({'a': 1, 'b': 2}, {'a': 1, 'b': 2})
483: 
484:         with self.assertRaises(self.failureException):
485:             self.assertDictContainsSubset({1: "one"}, {})
486: 
487:         with self.assertRaises(self.failureException):
488:             self.assertDictContainsSubset({'a': 2}, {'a': 1})
489: 
490:         with self.assertRaises(self.failureException):
491:             self.assertDictContainsSubset({'c': 1}, {'a': 1})
492: 
493:         with self.assertRaises(self.failureException):
494:             self.assertDictContainsSubset({'a': 1, 'c': 1}, {'a': 1})
495: 
496:         with self.assertRaises(self.failureException):
497:             self.assertDictContainsSubset({'a': 1, 'c': 1}, {'a': 1})
498: 
499:         with test_support.check_warnings(("", UnicodeWarning)):
500:             one = ''.join(chr(i) for i in range(255))
501:             # this used to cause a UnicodeDecodeError constructing the failure msg
502:             with self.assertRaises(self.failureException):
503:                 self.assertDictContainsSubset({'foo': one}, {'foo': u'\uFFFD'})
504: 
505:     def testAssertEqual(self):
506:         equal_pairs = [
507:                 ((), ()),
508:                 ({}, {}),
509:                 ([], []),
510:                 (set(), set()),
511:                 (frozenset(), frozenset())]
512:         for a, b in equal_pairs:
513:             # This mess of try excepts is to test the assertEqual behavior
514:             # itself.
515:             try:
516:                 self.assertEqual(a, b)
517:             except self.failureException:
518:                 self.fail('assertEqual(%r, %r) failed' % (a, b))
519:             try:
520:                 self.assertEqual(a, b, msg='foo')
521:             except self.failureException:
522:                 self.fail('assertEqual(%r, %r) with msg= failed' % (a, b))
523:             try:
524:                 self.assertEqual(a, b, 'foo')
525:             except self.failureException:
526:                 self.fail('assertEqual(%r, %r) with third parameter failed' %
527:                           (a, b))
528: 
529:         unequal_pairs = [
530:                ((), []),
531:                ({}, set()),
532:                (set([4,1]), frozenset([4,2])),
533:                (frozenset([4,5]), set([2,3])),
534:                (set([3,4]), set([5,4]))]
535:         for a, b in unequal_pairs:
536:             self.assertRaises(self.failureException, self.assertEqual, a, b)
537:             self.assertRaises(self.failureException, self.assertEqual, a, b,
538:                               'foo')
539:             self.assertRaises(self.failureException, self.assertEqual, a, b,
540:                               msg='foo')
541: 
542:     def testEquality(self):
543:         self.assertListEqual([], [])
544:         self.assertTupleEqual((), ())
545:         self.assertSequenceEqual([], ())
546: 
547:         a = [0, 'a', []]
548:         b = []
549:         self.assertRaises(unittest.TestCase.failureException,
550:                           self.assertListEqual, a, b)
551:         self.assertRaises(unittest.TestCase.failureException,
552:                           self.assertListEqual, tuple(a), tuple(b))
553:         self.assertRaises(unittest.TestCase.failureException,
554:                           self.assertSequenceEqual, a, tuple(b))
555: 
556:         b.extend(a)
557:         self.assertListEqual(a, b)
558:         self.assertTupleEqual(tuple(a), tuple(b))
559:         self.assertSequenceEqual(a, tuple(b))
560:         self.assertSequenceEqual(tuple(a), b)
561: 
562:         self.assertRaises(self.failureException, self.assertListEqual,
563:                           a, tuple(b))
564:         self.assertRaises(self.failureException, self.assertTupleEqual,
565:                           tuple(a), b)
566:         self.assertRaises(self.failureException, self.assertListEqual, None, b)
567:         self.assertRaises(self.failureException, self.assertTupleEqual, None,
568:                           tuple(b))
569:         self.assertRaises(self.failureException, self.assertSequenceEqual,
570:                           None, tuple(b))
571:         self.assertRaises(self.failureException, self.assertListEqual, 1, 1)
572:         self.assertRaises(self.failureException, self.assertTupleEqual, 1, 1)
573:         self.assertRaises(self.failureException, self.assertSequenceEqual,
574:                           1, 1)
575: 
576:         self.assertDictEqual({}, {})
577: 
578:         c = { 'x': 1 }
579:         d = {}
580:         self.assertRaises(unittest.TestCase.failureException,
581:                           self.assertDictEqual, c, d)
582: 
583:         d.update(c)
584:         self.assertDictEqual(c, d)
585: 
586:         d['x'] = 0
587:         self.assertRaises(unittest.TestCase.failureException,
588:                           self.assertDictEqual, c, d, 'These are unequal')
589: 
590:         self.assertRaises(self.failureException, self.assertDictEqual, None, d)
591:         self.assertRaises(self.failureException, self.assertDictEqual, [], d)
592:         self.assertRaises(self.failureException, self.assertDictEqual, 1, 1)
593: 
594:     def testAssertSequenceEqualMaxDiff(self):
595:         self.assertEqual(self.maxDiff, 80*8)
596:         seq1 = 'a' + 'x' * 80**2
597:         seq2 = 'b' + 'x' * 80**2
598:         diff = '\n'.join(difflib.ndiff(pprint.pformat(seq1).splitlines(),
599:                                        pprint.pformat(seq2).splitlines()))
600:         # the +1 is the leading \n added by assertSequenceEqual
601:         omitted = unittest.case.DIFF_OMITTED % (len(diff) + 1,)
602: 
603:         self.maxDiff = len(diff)//2
604:         try:
605:             self.assertSequenceEqual(seq1, seq2)
606:         except self.failureException as e:
607:             msg = e.args[0]
608:         else:
609:             self.fail('assertSequenceEqual did not fail.')
610:         self.assertLess(len(msg), len(diff))
611:         self.assertIn(omitted, msg)
612: 
613:         self.maxDiff = len(diff) * 2
614:         try:
615:             self.assertSequenceEqual(seq1, seq2)
616:         except self.failureException as e:
617:             msg = e.args[0]
618:         else:
619:             self.fail('assertSequenceEqual did not fail.')
620:         self.assertGreater(len(msg), len(diff))
621:         self.assertNotIn(omitted, msg)
622: 
623:         self.maxDiff = None
624:         try:
625:             self.assertSequenceEqual(seq1, seq2)
626:         except self.failureException as e:
627:             msg = e.args[0]
628:         else:
629:             self.fail('assertSequenceEqual did not fail.')
630:         self.assertGreater(len(msg), len(diff))
631:         self.assertNotIn(omitted, msg)
632: 
633:     def testTruncateMessage(self):
634:         self.maxDiff = 1
635:         message = self._truncateMessage('foo', 'bar')
636:         omitted = unittest.case.DIFF_OMITTED % len('bar')
637:         self.assertEqual(message, 'foo' + omitted)
638: 
639:         self.maxDiff = None
640:         message = self._truncateMessage('foo', 'bar')
641:         self.assertEqual(message, 'foobar')
642: 
643:         self.maxDiff = 4
644:         message = self._truncateMessage('foo', 'bar')
645:         self.assertEqual(message, 'foobar')
646: 
647:     def testAssertDictEqualTruncates(self):
648:         test = unittest.TestCase('assertEqual')
649:         def truncate(msg, diff):
650:             return 'foo'
651:         test._truncateMessage = truncate
652:         try:
653:             test.assertDictEqual({}, {1: 0})
654:         except self.failureException as e:
655:             self.assertEqual(str(e), 'foo')
656:         else:
657:             self.fail('assertDictEqual did not fail')
658: 
659:     def testAssertMultiLineEqualTruncates(self):
660:         test = unittest.TestCase('assertEqual')
661:         def truncate(msg, diff):
662:             return 'foo'
663:         test._truncateMessage = truncate
664:         try:
665:             test.assertMultiLineEqual('foo', 'bar')
666:         except self.failureException as e:
667:             self.assertEqual(str(e), 'foo')
668:         else:
669:             self.fail('assertMultiLineEqual did not fail')
670: 
671:     def testAssertEqual_diffThreshold(self):
672:         # check threshold value
673:         self.assertEqual(self._diffThreshold, 2**16)
674:         # disable madDiff to get diff markers
675:         self.maxDiff = None
676: 
677:         # set a lower threshold value and add a cleanup to restore it
678:         old_threshold = self._diffThreshold
679:         self._diffThreshold = 2**8
680:         self.addCleanup(lambda: setattr(self, '_diffThreshold', old_threshold))
681: 
682:         # under the threshold: diff marker (^) in error message
683:         s = u'x' * (2**7)
684:         with self.assertRaises(self.failureException) as cm:
685:             self.assertEqual(s + 'a', s + 'b')
686:         self.assertIn('^', str(cm.exception))
687:         self.assertEqual(s + 'a', s + 'a')
688: 
689:         # over the threshold: diff not used and marker (^) not in error message
690:         s = u'x' * (2**9)
691:         # if the path that uses difflib is taken, _truncateMessage will be
692:         # called -- replace it with explodingTruncation to verify that this
693:         # doesn't happen
694:         def explodingTruncation(message, diff):
695:             raise SystemError('this should not be raised')
696:         old_truncate = self._truncateMessage
697:         self._truncateMessage = explodingTruncation
698:         self.addCleanup(lambda: setattr(self, '_truncateMessage', old_truncate))
699: 
700:         s1, s2 = s + 'a', s + 'b'
701:         with self.assertRaises(self.failureException) as cm:
702:             self.assertEqual(s1, s2)
703:         self.assertNotIn('^', str(cm.exception))
704:         self.assertEqual(str(cm.exception), '%r != %r' % (s1, s2))
705:         self.assertEqual(s + 'a', s + 'a')
706: 
707:     def testAssertItemsEqual(self):
708:         a = object()
709:         self.assertItemsEqual([1, 2, 3], [3, 2, 1])
710:         self.assertItemsEqual(['foo', 'bar', 'baz'], ['bar', 'baz', 'foo'])
711:         self.assertItemsEqual([a, a, 2, 2, 3], (a, 2, 3, a, 2))
712:         self.assertItemsEqual([1, "2", "a", "a"], ["a", "2", True, "a"])
713:         self.assertRaises(self.failureException, self.assertItemsEqual,
714:                           [1, 2] + [3] * 100, [1] * 100 + [2, 3])
715:         self.assertRaises(self.failureException, self.assertItemsEqual,
716:                           [1, "2", "a", "a"], ["a", "2", True, 1])
717:         self.assertRaises(self.failureException, self.assertItemsEqual,
718:                           [10], [10, 11])
719:         self.assertRaises(self.failureException, self.assertItemsEqual,
720:                           [10, 11], [10])
721:         self.assertRaises(self.failureException, self.assertItemsEqual,
722:                           [10, 11, 10], [10, 11])
723: 
724:         # Test that sequences of unhashable objects can be tested for sameness:
725:         self.assertItemsEqual([[1, 2], [3, 4], 0], [False, [3, 4], [1, 2]])
726:         # Test that iterator of unhashable objects can be tested for sameness:
727:         self.assertItemsEqual(iter([1, 2, [], 3, 4]),
728:                               iter([1, 2, [], 3, 4]))
729: 
730:         # hashable types, but not orderable
731:         self.assertRaises(self.failureException, self.assertItemsEqual,
732:                           [], [divmod, 'x', 1, 5j, 2j, frozenset()])
733:         # comparing dicts
734:         self.assertItemsEqual([{'a': 1}, {'b': 2}], [{'b': 2}, {'a': 1}])
735:         # comparing heterogenous non-hashable sequences
736:         self.assertItemsEqual([1, 'x', divmod, []], [divmod, [], 'x', 1])
737:         self.assertRaises(self.failureException, self.assertItemsEqual,
738:                           [], [divmod, [], 'x', 1, 5j, 2j, set()])
739:         self.assertRaises(self.failureException, self.assertItemsEqual,
740:                           [[1]], [[2]])
741: 
742:         # Same elements, but not same sequence length
743:         self.assertRaises(self.failureException, self.assertItemsEqual,
744:                           [1, 1, 2], [2, 1])
745:         self.assertRaises(self.failureException, self.assertItemsEqual,
746:                           [1, 1, "2", "a", "a"], ["2", "2", True, "a"])
747:         self.assertRaises(self.failureException, self.assertItemsEqual,
748:                           [1, {'b': 2}, None, True], [{'b': 2}, True, None])
749: 
750:         # Same elements which don't reliably compare, in
751:         # different order, see issue 10242
752:         a = [{2,4}, {1,2}]
753:         b = a[::-1]
754:         self.assertItemsEqual(a, b)
755: 
756:         # test utility functions supporting assertItemsEqual()
757: 
758:         diffs = set(unittest.util._count_diff_all_purpose('aaabccd', 'abbbcce'))
759:         expected = {(3,1,'a'), (1,3,'b'), (1,0,'d'), (0,1,'e')}
760:         self.assertEqual(diffs, expected)
761: 
762:         diffs = unittest.util._count_diff_all_purpose([[]], [])
763:         self.assertEqual(diffs, [(1, 0, [])])
764: 
765:         diffs = set(unittest.util._count_diff_hashable('aaabccd', 'abbbcce'))
766:         expected = {(3,1,'a'), (1,3,'b'), (1,0,'d'), (0,1,'e')}
767:         self.assertEqual(diffs, expected)
768: 
769:     def testAssertSetEqual(self):
770:         set1 = set()
771:         set2 = set()
772:         self.assertSetEqual(set1, set2)
773: 
774:         self.assertRaises(self.failureException, self.assertSetEqual, None, set2)
775:         self.assertRaises(self.failureException, self.assertSetEqual, [], set2)
776:         self.assertRaises(self.failureException, self.assertSetEqual, set1, None)
777:         self.assertRaises(self.failureException, self.assertSetEqual, set1, [])
778: 
779:         set1 = set(['a'])
780:         set2 = set()
781:         self.assertRaises(self.failureException, self.assertSetEqual, set1, set2)
782: 
783:         set1 = set(['a'])
784:         set2 = set(['a'])
785:         self.assertSetEqual(set1, set2)
786: 
787:         set1 = set(['a'])
788:         set2 = set(['a', 'b'])
789:         self.assertRaises(self.failureException, self.assertSetEqual, set1, set2)
790: 
791:         set1 = set(['a'])
792:         set2 = frozenset(['a', 'b'])
793:         self.assertRaises(self.failureException, self.assertSetEqual, set1, set2)
794: 
795:         set1 = set(['a', 'b'])
796:         set2 = frozenset(['a', 'b'])
797:         self.assertSetEqual(set1, set2)
798: 
799:         set1 = set()
800:         set2 = "foo"
801:         self.assertRaises(self.failureException, self.assertSetEqual, set1, set2)
802:         self.assertRaises(self.failureException, self.assertSetEqual, set2, set1)
803: 
804:         # make sure any string formatting is tuple-safe
805:         set1 = set([(0, 1), (2, 3)])
806:         set2 = set([(4, 5)])
807:         self.assertRaises(self.failureException, self.assertSetEqual, set1, set2)
808: 
809:     def testInequality(self):
810:         # Try ints
811:         self.assertGreater(2, 1)
812:         self.assertGreaterEqual(2, 1)
813:         self.assertGreaterEqual(1, 1)
814:         self.assertLess(1, 2)
815:         self.assertLessEqual(1, 2)
816:         self.assertLessEqual(1, 1)
817:         self.assertRaises(self.failureException, self.assertGreater, 1, 2)
818:         self.assertRaises(self.failureException, self.assertGreater, 1, 1)
819:         self.assertRaises(self.failureException, self.assertGreaterEqual, 1, 2)
820:         self.assertRaises(self.failureException, self.assertLess, 2, 1)
821:         self.assertRaises(self.failureException, self.assertLess, 1, 1)
822:         self.assertRaises(self.failureException, self.assertLessEqual, 2, 1)
823: 
824:         # Try Floats
825:         self.assertGreater(1.1, 1.0)
826:         self.assertGreaterEqual(1.1, 1.0)
827:         self.assertGreaterEqual(1.0, 1.0)
828:         self.assertLess(1.0, 1.1)
829:         self.assertLessEqual(1.0, 1.1)
830:         self.assertLessEqual(1.0, 1.0)
831:         self.assertRaises(self.failureException, self.assertGreater, 1.0, 1.1)
832:         self.assertRaises(self.failureException, self.assertGreater, 1.0, 1.0)
833:         self.assertRaises(self.failureException, self.assertGreaterEqual, 1.0, 1.1)
834:         self.assertRaises(self.failureException, self.assertLess, 1.1, 1.0)
835:         self.assertRaises(self.failureException, self.assertLess, 1.0, 1.0)
836:         self.assertRaises(self.failureException, self.assertLessEqual, 1.1, 1.0)
837: 
838:         # Try Strings
839:         self.assertGreater('bug', 'ant')
840:         self.assertGreaterEqual('bug', 'ant')
841:         self.assertGreaterEqual('ant', 'ant')
842:         self.assertLess('ant', 'bug')
843:         self.assertLessEqual('ant', 'bug')
844:         self.assertLessEqual('ant', 'ant')
845:         self.assertRaises(self.failureException, self.assertGreater, 'ant', 'bug')
846:         self.assertRaises(self.failureException, self.assertGreater, 'ant', 'ant')
847:         self.assertRaises(self.failureException, self.assertGreaterEqual, 'ant', 'bug')
848:         self.assertRaises(self.failureException, self.assertLess, 'bug', 'ant')
849:         self.assertRaises(self.failureException, self.assertLess, 'ant', 'ant')
850:         self.assertRaises(self.failureException, self.assertLessEqual, 'bug', 'ant')
851: 
852:         # Try Unicode
853:         self.assertGreater(u'bug', u'ant')
854:         self.assertGreaterEqual(u'bug', u'ant')
855:         self.assertGreaterEqual(u'ant', u'ant')
856:         self.assertLess(u'ant', u'bug')
857:         self.assertLessEqual(u'ant', u'bug')
858:         self.assertLessEqual(u'ant', u'ant')
859:         self.assertRaises(self.failureException, self.assertGreater, u'ant', u'bug')
860:         self.assertRaises(self.failureException, self.assertGreater, u'ant', u'ant')
861:         self.assertRaises(self.failureException, self.assertGreaterEqual, u'ant',
862:                           u'bug')
863:         self.assertRaises(self.failureException, self.assertLess, u'bug', u'ant')
864:         self.assertRaises(self.failureException, self.assertLess, u'ant', u'ant')
865:         self.assertRaises(self.failureException, self.assertLessEqual, u'bug', u'ant')
866: 
867:         # Try Mixed String/Unicode
868:         self.assertGreater('bug', u'ant')
869:         self.assertGreater(u'bug', 'ant')
870:         self.assertGreaterEqual('bug', u'ant')
871:         self.assertGreaterEqual(u'bug', 'ant')
872:         self.assertGreaterEqual('ant', u'ant')
873:         self.assertGreaterEqual(u'ant', 'ant')
874:         self.assertLess('ant', u'bug')
875:         self.assertLess(u'ant', 'bug')
876:         self.assertLessEqual('ant', u'bug')
877:         self.assertLessEqual(u'ant', 'bug')
878:         self.assertLessEqual('ant', u'ant')
879:         self.assertLessEqual(u'ant', 'ant')
880:         self.assertRaises(self.failureException, self.assertGreater, 'ant', u'bug')
881:         self.assertRaises(self.failureException, self.assertGreater, u'ant', 'bug')
882:         self.assertRaises(self.failureException, self.assertGreater, 'ant', u'ant')
883:         self.assertRaises(self.failureException, self.assertGreater, u'ant', 'ant')
884:         self.assertRaises(self.failureException, self.assertGreaterEqual, 'ant',
885:                           u'bug')
886:         self.assertRaises(self.failureException, self.assertGreaterEqual, u'ant',
887:                           'bug')
888:         self.assertRaises(self.failureException, self.assertLess, 'bug', u'ant')
889:         self.assertRaises(self.failureException, self.assertLess, u'bug', 'ant')
890:         self.assertRaises(self.failureException, self.assertLess, 'ant', u'ant')
891:         self.assertRaises(self.failureException, self.assertLess, u'ant', 'ant')
892:         self.assertRaises(self.failureException, self.assertLessEqual, 'bug', u'ant')
893:         self.assertRaises(self.failureException, self.assertLessEqual, u'bug', 'ant')
894: 
895:     def testAssertMultiLineEqual(self):
896:         sample_text = b'''\
897: http://www.python.org/doc/2.3/lib/module-unittest.html
898: test case
899:     A test case is the smallest unit of testing. [...]
900: '''
901:         revised_sample_text = b'''\
902: http://www.python.org/doc/2.4.1/lib/module-unittest.html
903: test case
904:     A test case is the smallest unit of testing. [...] You may provide your
905:     own implementation that does not subclass from TestCase, of course.
906: '''
907:         sample_text_error = b'''\
908: - http://www.python.org/doc/2.3/lib/module-unittest.html
909: ?                             ^
910: + http://www.python.org/doc/2.4.1/lib/module-unittest.html
911: ?                             ^^^
912:   test case
913: -     A test case is the smallest unit of testing. [...]
914: +     A test case is the smallest unit of testing. [...] You may provide your
915: ?                                                       +++++++++++++++++++++
916: +     own implementation that does not subclass from TestCase, of course.
917: '''
918:         self.maxDiff = None
919:         for type_changer in (lambda x: x, lambda x: x.decode('utf8')):
920:             try:
921:                 self.assertMultiLineEqual(type_changer(sample_text),
922:                                           type_changer(revised_sample_text))
923:             except self.failureException, e:
924:                 # need to remove the first line of the error message
925:                 error = str(e).encode('utf8').split('\n', 1)[1]
926: 
927:                 # assertMultiLineEqual is hooked up as the default for
928:                 # unicode strings - so we can't use it for this check
929:                 self.assertTrue(sample_text_error == error)
930: 
931:     def testAsertEqualSingleLine(self):
932:         sample_text = u"laden swallows fly slowly"
933:         revised_sample_text = u"unladen swallows fly quickly"
934:         sample_text_error = '''\
935: - laden swallows fly slowly
936: ?                    ^^^^
937: + unladen swallows fly quickly
938: ? ++                   ^^^^^
939: '''
940:         try:
941:             self.assertEqual(sample_text, revised_sample_text)
942:         except self.failureException as e:
943:             error = str(e).split('\n', 1)[1]
944:             self.assertTrue(sample_text_error == error)
945: 
946:     def testAssertIsNone(self):
947:         self.assertIsNone(None)
948:         self.assertRaises(self.failureException, self.assertIsNone, False)
949:         self.assertIsNotNone('DjZoPloGears on Rails')
950:         self.assertRaises(self.failureException, self.assertIsNotNone, None)
951: 
952:     def testAssertRegexpMatches(self):
953:         self.assertRegexpMatches('asdfabasdf', r'ab+')
954:         self.assertRaises(self.failureException, self.assertRegexpMatches,
955:                           'saaas', r'aaaa')
956: 
957:     def testAssertRaisesCallable(self):
958:         class ExceptionMock(Exception):
959:             pass
960:         def Stub():
961:             raise ExceptionMock('We expect')
962:         self.assertRaises(ExceptionMock, Stub)
963:         # A tuple of exception classes is accepted
964:         self.assertRaises((ValueError, ExceptionMock), Stub)
965:         # *args and **kwargs also work
966:         self.assertRaises(ValueError, int, '19', base=8)
967:         # Failure when no exception is raised
968:         with self.assertRaises(self.failureException):
969:             self.assertRaises(ExceptionMock, lambda: 0)
970:         # Failure when another exception is raised
971:         with self.assertRaises(ExceptionMock):
972:             self.assertRaises(ValueError, Stub)
973: 
974:     def testAssertRaisesContext(self):
975:         class ExceptionMock(Exception):
976:             pass
977:         def Stub():
978:             raise ExceptionMock('We expect')
979:         with self.assertRaises(ExceptionMock):
980:             Stub()
981:         # A tuple of exception classes is accepted
982:         with self.assertRaises((ValueError, ExceptionMock)) as cm:
983:             Stub()
984:         # The context manager exposes caught exception
985:         self.assertIsInstance(cm.exception, ExceptionMock)
986:         self.assertEqual(cm.exception.args[0], 'We expect')
987:         # *args and **kwargs also work
988:         with self.assertRaises(ValueError):
989:             int('19', base=8)
990:         # Failure when no exception is raised
991:         with self.assertRaises(self.failureException):
992:             with self.assertRaises(ExceptionMock):
993:                 pass
994:         # Failure when another exception is raised
995:         with self.assertRaises(ExceptionMock):
996:             self.assertRaises(ValueError, Stub)
997: 
998:     def testAssertRaisesRegexp(self):
999:         class ExceptionMock(Exception):
1000:             pass
1001: 
1002:         def Stub():
1003:             raise ExceptionMock('We expect')
1004: 
1005:         self.assertRaisesRegexp(ExceptionMock, re.compile('expect$'), Stub)
1006:         self.assertRaisesRegexp(ExceptionMock, 'expect$', Stub)
1007:         self.assertRaisesRegexp(ExceptionMock, u'expect$', Stub)
1008: 
1009:     def testAssertNotRaisesRegexp(self):
1010:         self.assertRaisesRegexp(
1011:                 self.failureException, '^Exception not raised$',
1012:                 self.assertRaisesRegexp, Exception, re.compile('x'),
1013:                 lambda: None)
1014:         self.assertRaisesRegexp(
1015:                 self.failureException, '^Exception not raised$',
1016:                 self.assertRaisesRegexp, Exception, 'x',
1017:                 lambda: None)
1018:         self.assertRaisesRegexp(
1019:                 self.failureException, '^Exception not raised$',
1020:                 self.assertRaisesRegexp, Exception, u'x',
1021:                 lambda: None)
1022: 
1023:     def testAssertRaisesRegexpInvalidRegexp(self):
1024:         # Issue 20145.
1025:         class MyExc(Exception):
1026:             pass
1027:         self.assertRaises(TypeError, self.assertRaisesRegexp, MyExc, lambda: True)
1028: 
1029:     def testAssertRaisesRegexpMismatch(self):
1030:         def Stub():
1031:             raise Exception('Unexpected')
1032: 
1033:         self.assertRaisesRegexp(
1034:                 self.failureException,
1035:                 r'"\^Expected\$" does not match "Unexpected"',
1036:                 self.assertRaisesRegexp, Exception, '^Expected$',
1037:                 Stub)
1038:         self.assertRaisesRegexp(
1039:                 self.failureException,
1040:                 r'"\^Expected\$" does not match "Unexpected"',
1041:                 self.assertRaisesRegexp, Exception, u'^Expected$',
1042:                 Stub)
1043:         self.assertRaisesRegexp(
1044:                 self.failureException,
1045:                 r'"\^Expected\$" does not match "Unexpected"',
1046:                 self.assertRaisesRegexp, Exception,
1047:                 re.compile('^Expected$'), Stub)
1048: 
1049:     def testAssertRaisesExcValue(self):
1050:         class ExceptionMock(Exception):
1051:             pass
1052: 
1053:         def Stub(foo):
1054:             raise ExceptionMock(foo)
1055:         v = "particular value"
1056: 
1057:         ctx = self.assertRaises(ExceptionMock)
1058:         with ctx:
1059:             Stub(v)
1060:         e = ctx.exception
1061:         self.assertIsInstance(e, ExceptionMock)
1062:         self.assertEqual(e.args[0], v)
1063: 
1064:     def testSynonymAssertMethodNames(self):
1065:         '''Test undocumented method name synonyms.
1066: 
1067:         Please do not use these methods names in your own code.
1068: 
1069:         This test confirms their continued existence and functionality
1070:         in order to avoid breaking existing code.
1071:         '''
1072:         self.assertNotEquals(3, 5)
1073:         self.assertEquals(3, 3)
1074:         self.assertAlmostEquals(2.0, 2.0)
1075:         self.assertNotAlmostEquals(3.0, 5.0)
1076:         self.assert_(True)
1077: 
1078:     def testPendingDeprecationMethodNames(self):
1079:         '''Test fail* methods pending deprecation, they will warn in 3.2.
1080: 
1081:         Do not use these methods.  They will go away in 3.3.
1082:         '''
1083:         with test_support.check_warnings():
1084:             self.failIfEqual(3, 5)
1085:             self.failUnlessEqual(3, 3)
1086:             self.failUnlessAlmostEqual(2.0, 2.0)
1087:             self.failIfAlmostEqual(3.0, 5.0)
1088:             self.failUnless(True)
1089:             self.failUnlessRaises(TypeError, lambda _: 3.14 + u'spam')
1090:             self.failIf(False)
1091: 
1092:     def testDeepcopy(self):
1093:         # Issue: 5660
1094:         class TestableTest(unittest.TestCase):
1095:             def testNothing(self):
1096:                 pass
1097: 
1098:         test = TestableTest('testNothing')
1099: 
1100:         # This shouldn't blow up
1101:         deepcopy(test)
1102: 
1103:     def testKeyboardInterrupt(self):
1104:         def _raise(self=None):
1105:             raise KeyboardInterrupt
1106:         def nothing(self):
1107:             pass
1108: 
1109:         class Test1(unittest.TestCase):
1110:             test_something = _raise
1111: 
1112:         class Test2(unittest.TestCase):
1113:             setUp = _raise
1114:             test_something = nothing
1115: 
1116:         class Test3(unittest.TestCase):
1117:             test_something = nothing
1118:             tearDown = _raise
1119: 
1120:         class Test4(unittest.TestCase):
1121:             def test_something(self):
1122:                 self.addCleanup(_raise)
1123: 
1124:         for klass in (Test1, Test2, Test3, Test4):
1125:             with self.assertRaises(KeyboardInterrupt):
1126:                 klass('test_something').run()
1127: 
1128:     def testSystemExit(self):
1129:         def _raise(self=None):
1130:             raise SystemExit
1131:         def nothing(self):
1132:             pass
1133: 
1134:         class Test1(unittest.TestCase):
1135:             test_something = _raise
1136: 
1137:         class Test2(unittest.TestCase):
1138:             setUp = _raise
1139:             test_something = nothing
1140: 
1141:         class Test3(unittest.TestCase):
1142:             test_something = nothing
1143:             tearDown = _raise
1144: 
1145:         class Test4(unittest.TestCase):
1146:             def test_something(self):
1147:                 self.addCleanup(_raise)
1148: 
1149:         for klass in (Test1, Test2, Test3, Test4):
1150:             result = unittest.TestResult()
1151:             klass('test_something').run(result)
1152:             self.assertEqual(len(result.errors), 1)
1153:             self.assertEqual(result.testsRun, 1)
1154: 
1155:     def testPickle(self):
1156:         # Issue 10326
1157: 
1158:         # Can't use TestCase classes defined in Test class as
1159:         # pickle does not work with inner classes
1160:         test = unittest.TestCase('run')
1161:         for protocol in range(pickle.HIGHEST_PROTOCOL + 1):
1162: 
1163:             # blew up prior to fix
1164:             pickled_test = pickle.dumps(test, protocol=protocol)
1165: 
1166:             unpickled_test = pickle.loads(pickled_test)
1167:             self.assertEqual(test, unpickled_test)
1168: 
1169: 
1170: if __name__ == '__main__':
1171:     unittest.main()
1172: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 1, 0))

# 'import difflib' statement (line 1)
import difflib

import_module(stypy.reporting.localization.Localization(__file__, 1, 0), 'difflib', difflib, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 2, 0))

# 'import pprint' statement (line 2)
import pprint

import_module(stypy.reporting.localization.Localization(__file__, 2, 0), 'pprint', pprint, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 3, 0))

# 'import pickle' statement (line 3)
import pickle

import_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'pickle', pickle, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 4, 0))

# 'import re' statement (line 4)
import re

import_module(stypy.reporting.localization.Localization(__file__, 4, 0), 're', re, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 5, 0))

# 'import sys' statement (line 5)
import sys

import_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'sys', sys, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 7, 0))

# 'from copy import deepcopy' statement (line 7)
from copy import deepcopy

import_from_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'copy', None, module_type_store, ['deepcopy'], [deepcopy])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 8, 0))

# 'from test import test_support' statement (line 8)
from test import test_support

import_from_module(stypy.reporting.localization.Localization(__file__, 8, 0), 'test', None, module_type_store, ['test_support'], [test_support])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 10, 0))

# 'import unittest' statement (line 10)
import unittest

import_module(stypy.reporting.localization.Localization(__file__, 10, 0), 'unittest', unittest, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 12, 0))

# 'from unittest.test.support import TestEquality, TestHashing, LoggingResult, ResultWithNoStartTestRunStopTestRun' statement (line 12)
update_path_to_current_file_folder('C:/Python27/lib/unittest/test/')
import_195081 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'unittest.test.support')

if (type(import_195081) is not StypyTypeError):

    if (import_195081 != 'pyd_module'):
        __import__(import_195081)
        sys_modules_195082 = sys.modules[import_195081]
        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'unittest.test.support', sys_modules_195082.module_type_store, module_type_store, ['TestEquality', 'TestHashing', 'LoggingResult', 'ResultWithNoStartTestRunStopTestRun'])
        nest_module(stypy.reporting.localization.Localization(__file__, 12, 0), __file__, sys_modules_195082, sys_modules_195082.module_type_store, module_type_store)
    else:
        from unittest.test.support import TestEquality, TestHashing, LoggingResult, ResultWithNoStartTestRunStopTestRun

        import_from_module(stypy.reporting.localization.Localization(__file__, 12, 0), 'unittest.test.support', None, module_type_store, ['TestEquality', 'TestHashing', 'LoggingResult', 'ResultWithNoStartTestRunStopTestRun'], [TestEquality, TestHashing, LoggingResult, ResultWithNoStartTestRunStopTestRun])

else:
    # Assigning a type to the variable 'unittest.test.support' (line 12)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 12, 0), 'unittest.test.support', import_195081)

remove_current_file_folder_from_path('C:/Python27/lib/unittest/test/')

# Declaration of the 'Test' class

class Test(object, ):
    str_195083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 18, 4), 'str', 'Keep these TestCase classes out of the main namespace')
    # Declaration of the 'Foo' class
    # Getting the type of 'unittest' (line 20)
    unittest_195084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 14), 'unittest')
    # Obtaining the member 'TestCase' of a type (line 20)
    TestCase_195085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 14), unittest_195084, 'TestCase')

    class Foo(TestCase_195085, ):

        @norecursion
        def runTest(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'runTest'
            module_type_store = module_type_store.open_function_context('runTest', 21, 8, False)
            # Assigning a type to the variable 'self' (line 22)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            Foo.runTest.__dict__.__setitem__('stypy_localization', localization)
            Foo.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            Foo.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
            Foo.runTest.__dict__.__setitem__('stypy_function_name', 'Foo.runTest')
            Foo.runTest.__dict__.__setitem__('stypy_param_names_list', [])
            Foo.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
            Foo.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
            Foo.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
            Foo.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
            Foo.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            Foo.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.runTest', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'runTest', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'runTest(...)' code ##################

            pass
            
            # ################# End of 'runTest(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'runTest' in the type store
            # Getting the type of 'stypy_return_type' (line 21)
            stypy_return_type_195086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_195086)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'runTest'
            return stypy_return_type_195086


        @norecursion
        def test1(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'test1'
            module_type_store = module_type_store.open_function_context('test1', 22, 8, False)
            # Assigning a type to the variable 'self' (line 23)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            Foo.test1.__dict__.__setitem__('stypy_localization', localization)
            Foo.test1.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            Foo.test1.__dict__.__setitem__('stypy_type_store', module_type_store)
            Foo.test1.__dict__.__setitem__('stypy_function_name', 'Foo.test1')
            Foo.test1.__dict__.__setitem__('stypy_param_names_list', [])
            Foo.test1.__dict__.__setitem__('stypy_varargs_param_name', None)
            Foo.test1.__dict__.__setitem__('stypy_kwargs_param_name', None)
            Foo.test1.__dict__.__setitem__('stypy_call_defaults', defaults)
            Foo.test1.__dict__.__setitem__('stypy_call_varargs', varargs)
            Foo.test1.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            Foo.test1.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test1', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'test1', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'test1(...)' code ##################

            pass
            
            # ################# End of 'test1(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'test1' in the type store
            # Getting the type of 'stypy_return_type' (line 22)
            stypy_return_type_195087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_195087)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'test1'
            return stypy_return_type_195087

    
    # Assigning a type to the variable 'Foo' (line 20)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 4), 'Foo', Foo)
    # Declaration of the 'Bar' class
    # Getting the type of 'Foo' (line 24)
    Foo_195088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 14), 'Foo')

    class Bar(Foo_195088, ):

        @norecursion
        def test2(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'test2'
            module_type_store = module_type_store.open_function_context('test2', 25, 8, False)
            # Assigning a type to the variable 'self' (line 26)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 26, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            Bar.test2.__dict__.__setitem__('stypy_localization', localization)
            Bar.test2.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            Bar.test2.__dict__.__setitem__('stypy_type_store', module_type_store)
            Bar.test2.__dict__.__setitem__('stypy_function_name', 'Bar.test2')
            Bar.test2.__dict__.__setitem__('stypy_param_names_list', [])
            Bar.test2.__dict__.__setitem__('stypy_varargs_param_name', None)
            Bar.test2.__dict__.__setitem__('stypy_kwargs_param_name', None)
            Bar.test2.__dict__.__setitem__('stypy_call_defaults', defaults)
            Bar.test2.__dict__.__setitem__('stypy_call_varargs', varargs)
            Bar.test2.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            Bar.test2.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'Bar.test2', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'test2', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'test2(...)' code ##################

            pass
            
            # ################# End of 'test2(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'test2' in the type store
            # Getting the type of 'stypy_return_type' (line 25)
            stypy_return_type_195089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 25, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_195089)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'test2'
            return stypy_return_type_195089

    
    # Assigning a type to the variable 'Bar' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 4), 'Bar', Bar)
    # Declaration of the 'LoggingTestCase' class
    # Getting the type of 'unittest' (line 27)
    unittest_195090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 26), 'unittest')
    # Obtaining the member 'TestCase' of a type (line 27)
    TestCase_195091 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 26), unittest_195090, 'TestCase')

    class LoggingTestCase(TestCase_195091, ):
        str_195092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 8), 'str', 'A test case which logs its calls.')

        @norecursion
        def __init__(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '__init__'
            module_type_store = module_type_store.open_function_context('__init__', 30, 8, False)
            # Assigning a type to the variable 'self' (line 31)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'LoggingTestCase.__init__', ['events'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return

            # Initialize method data
            init_call_information(module_type_store, '__init__', localization, ['events'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '__init__(...)' code ##################

            
            # Call to __init__(...): (line 31)
            # Processing the call arguments (line 31)
            str_195100 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 55), 'str', 'test')
            # Processing the call keyword arguments (line 31)
            kwargs_195101 = {}
            
            # Call to super(...): (line 31)
            # Processing the call arguments (line 31)
            # Getting the type of 'Test' (line 31)
            Test_195094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 18), 'Test', False)
            # Obtaining the member 'LoggingTestCase' of a type (line 31)
            LoggingTestCase_195095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 31, 18), Test_195094, 'LoggingTestCase')
            # Getting the type of 'self' (line 31)
            self_195096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 40), 'self', False)
            # Processing the call keyword arguments (line 31)
            kwargs_195097 = {}
            # Getting the type of 'super' (line 31)
            super_195093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 12), 'super', False)
            # Calling super(args, kwargs) (line 31)
            super_call_result_195098 = invoke(stypy.reporting.localization.Localization(__file__, 31, 12), super_195093, *[LoggingTestCase_195095, self_195096], **kwargs_195097)
            
            # Obtaining the member '__init__' of a type (line 31)
            init___195099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 31, 12), super_call_result_195098, '__init__')
            # Calling __init__(args, kwargs) (line 31)
            init___call_result_195102 = invoke(stypy.reporting.localization.Localization(__file__, 31, 12), init___195099, *[str_195100], **kwargs_195101)
            
            
            # Assigning a Name to a Attribute (line 32):
            
            # Assigning a Name to a Attribute (line 32):
            # Getting the type of 'events' (line 32)
            events_195103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 26), 'events')
            # Getting the type of 'self' (line 32)
            self_195104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 12), 'self')
            # Setting the type of the member 'events' of a type (line 32)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 32, 12), self_195104, 'events', events_195103)
            
            # ################# End of '__init__(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()


        @norecursion
        def setUp(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'setUp'
            module_type_store = module_type_store.open_function_context('setUp', 34, 8, False)
            # Assigning a type to the variable 'self' (line 35)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_localization', localization)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_type_store', module_type_store)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_function_name', 'LoggingTestCase.setUp')
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_param_names_list', [])
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_varargs_param_name', None)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_kwargs_param_name', None)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_call_defaults', defaults)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_call_varargs', varargs)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            LoggingTestCase.setUp.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'LoggingTestCase.setUp', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'setUp', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'setUp(...)' code ##################

            
            # Call to append(...): (line 35)
            # Processing the call arguments (line 35)
            str_195108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 35, 31), 'str', 'setUp')
            # Processing the call keyword arguments (line 35)
            kwargs_195109 = {}
            # Getting the type of 'self' (line 35)
            self_195105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'self', False)
            # Obtaining the member 'events' of a type (line 35)
            events_195106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 35, 12), self_195105, 'events')
            # Obtaining the member 'append' of a type (line 35)
            append_195107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 35, 12), events_195106, 'append')
            # Calling append(args, kwargs) (line 35)
            append_call_result_195110 = invoke(stypy.reporting.localization.Localization(__file__, 35, 12), append_195107, *[str_195108], **kwargs_195109)
            
            
            # ################# End of 'setUp(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'setUp' in the type store
            # Getting the type of 'stypy_return_type' (line 34)
            stypy_return_type_195111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 34, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_195111)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'setUp'
            return stypy_return_type_195111


        @norecursion
        def test(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'test'
            module_type_store = module_type_store.open_function_context('test', 37, 8, False)
            # Assigning a type to the variable 'self' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            LoggingTestCase.test.__dict__.__setitem__('stypy_localization', localization)
            LoggingTestCase.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            LoggingTestCase.test.__dict__.__setitem__('stypy_type_store', module_type_store)
            LoggingTestCase.test.__dict__.__setitem__('stypy_function_name', 'LoggingTestCase.test')
            LoggingTestCase.test.__dict__.__setitem__('stypy_param_names_list', [])
            LoggingTestCase.test.__dict__.__setitem__('stypy_varargs_param_name', None)
            LoggingTestCase.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
            LoggingTestCase.test.__dict__.__setitem__('stypy_call_defaults', defaults)
            LoggingTestCase.test.__dict__.__setitem__('stypy_call_varargs', varargs)
            LoggingTestCase.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            LoggingTestCase.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'LoggingTestCase.test', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'test', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'test(...)' code ##################

            
            # Call to append(...): (line 38)
            # Processing the call arguments (line 38)
            str_195115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 38, 31), 'str', 'test')
            # Processing the call keyword arguments (line 38)
            kwargs_195116 = {}
            # Getting the type of 'self' (line 38)
            self_195112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'self', False)
            # Obtaining the member 'events' of a type (line 38)
            events_195113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 38, 12), self_195112, 'events')
            # Obtaining the member 'append' of a type (line 38)
            append_195114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 38, 12), events_195113, 'append')
            # Calling append(args, kwargs) (line 38)
            append_call_result_195117 = invoke(stypy.reporting.localization.Localization(__file__, 38, 12), append_195114, *[str_195115], **kwargs_195116)
            
            
            # ################# End of 'test(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'test' in the type store
            # Getting the type of 'stypy_return_type' (line 37)
            stypy_return_type_195118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_195118)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'test'
            return stypy_return_type_195118


        @norecursion
        def tearDown(type_of_self, localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'tearDown'
            module_type_store = module_type_store.open_function_context('tearDown', 40, 8, False)
            # Assigning a type to the variable 'self' (line 41)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 41, 8), 'self', type_of_self)
            
            # Passed parameters checking function
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_localization', localization)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_type_of_self', type_of_self)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_type_store', module_type_store)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_function_name', 'LoggingTestCase.tearDown')
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_param_names_list', [])
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_varargs_param_name', None)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_kwargs_param_name', None)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_call_defaults', defaults)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_call_varargs', varargs)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_call_kwargs', kwargs)
            LoggingTestCase.tearDown.__dict__.__setitem__('stypy_declared_arg_number', 1)
            arguments = process_argument_values(localization, type_of_self, module_type_store, 'LoggingTestCase.tearDown', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'tearDown', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'tearDown(...)' code ##################

            
            # Call to append(...): (line 41)
            # Processing the call arguments (line 41)
            str_195122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 41, 31), 'str', 'tearDown')
            # Processing the call keyword arguments (line 41)
            kwargs_195123 = {}
            # Getting the type of 'self' (line 41)
            self_195119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 41, 12), 'self', False)
            # Obtaining the member 'events' of a type (line 41)
            events_195120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 41, 12), self_195119, 'events')
            # Obtaining the member 'append' of a type (line 41)
            append_195121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 41, 12), events_195120, 'append')
            # Calling append(args, kwargs) (line 41)
            append_call_result_195124 = invoke(stypy.reporting.localization.Localization(__file__, 41, 12), append_195121, *[str_195122], **kwargs_195123)
            
            
            # ################# End of 'tearDown(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'tearDown' in the type store
            # Getting the type of 'stypy_return_type' (line 40)
            stypy_return_type_195125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 40, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_195125)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'tearDown'
            return stypy_return_type_195125

    
    # Assigning a type to the variable 'LoggingTestCase' (line 27)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 4), 'LoggingTestCase', LoggingTestCase)

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 17, 0, False)
        # Assigning a type to the variable 'self' (line 18)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 18, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Test' (line 17)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 17, 0), 'Test', Test)
# Declaration of the 'Test_TestCase' class
# Getting the type of 'unittest' (line 44)
unittest_195126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 20), 'unittest')
# Obtaining the member 'TestCase' of a type (line 44)
TestCase_195127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 44, 20), unittest_195126, 'TestCase')
# Getting the type of 'TestEquality' (line 44)
TestEquality_195128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 39), 'TestEquality')
# Getting the type of 'TestHashing' (line 44)
TestHashing_195129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 53), 'TestHashing')

class Test_TestCase(TestCase_195127, TestEquality_195128, TestHashing_195129, ):
    
    # Assigning a List to a Name (line 50):
    
    # Assigning a List to a Name (line 53):

    @norecursion
    def test_init__no_test_name(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_init__no_test_name'
        module_type_store = module_type_store.open_function_context('test_init__no_test_name', 70, 4, False)
        # Assigning a type to the variable 'self' (line 71)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 71, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_init__no_test_name')
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_init__no_test_name.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_init__no_test_name', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_init__no_test_name', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_init__no_test_name(...)' code ##################

        # Declaration of the 'Test' class
        # Getting the type of 'unittest' (line 71)
        unittest_195130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 19), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 71)
        TestCase_195131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 71, 19), unittest_195130, 'TestCase')

        class Test(TestCase_195131, ):

            @norecursion
            def runTest(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'runTest'
                module_type_store = module_type_store.open_function_context('runTest', 72, 12, False)
                # Assigning a type to the variable 'self' (line 73)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test.runTest.__dict__.__setitem__('stypy_localization', localization)
                Test.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test.runTest.__dict__.__setitem__('stypy_function_name', 'Test.runTest')
                Test.runTest.__dict__.__setitem__('stypy_param_names_list', [])
                Test.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test.runTest', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'runTest', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'runTest(...)' code ##################

                
                # Call to TypeError(...): (line 72)
                # Processing the call keyword arguments (line 72)
                kwargs_195133 = {}
                # Getting the type of 'TypeError' (line 72)
                TypeError_195132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 37), 'TypeError', False)
                # Calling TypeError(args, kwargs) (line 72)
                TypeError_call_result_195134 = invoke(stypy.reporting.localization.Localization(__file__, 72, 37), TypeError_195132, *[], **kwargs_195133)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 72, 31), TypeError_call_result_195134, 'raise parameter', BaseException)
                
                # ################# End of 'runTest(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'runTest' in the type store
                # Getting the type of 'stypy_return_type' (line 72)
                stypy_return_type_195135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195135)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'runTest'
                return stypy_return_type_195135


            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 73, 12, False)
                # Assigning a type to the variable 'self' (line 74)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 74, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test.test.__dict__.__setitem__('stypy_localization', localization)
                Test.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test.test.__dict__.__setitem__('stypy_function_name', 'Test.test')
                Test.test.__dict__.__setitem__('stypy_param_names_list', [])
                Test.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                pass
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 73)
                stypy_return_type_195136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195136)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195136

        
        # Assigning a type to the variable 'Test' (line 71)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 71, 8), 'Test', Test)
        
        # Call to assertEqual(...): (line 75)
        # Processing the call arguments (line 75)
        
        # Obtaining the type of the subscript
        int_195139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 37), 'int')
        slice_195140 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 75, 25), int_195139, None, None)
        
        # Call to id(...): (line 75)
        # Processing the call keyword arguments (line 75)
        kwargs_195145 = {}
        
        # Call to Test(...): (line 75)
        # Processing the call keyword arguments (line 75)
        kwargs_195142 = {}
        # Getting the type of 'Test' (line 75)
        Test_195141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 25), 'Test', False)
        # Calling Test(args, kwargs) (line 75)
        Test_call_result_195143 = invoke(stypy.reporting.localization.Localization(__file__, 75, 25), Test_195141, *[], **kwargs_195142)
        
        # Obtaining the member 'id' of a type (line 75)
        id_195144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 25), Test_call_result_195143, 'id')
        # Calling id(args, kwargs) (line 75)
        id_call_result_195146 = invoke(stypy.reporting.localization.Localization(__file__, 75, 25), id_195144, *[], **kwargs_195145)
        
        # Obtaining the member '__getitem__' of a type (line 75)
        getitem___195147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 25), id_call_result_195146, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 75)
        subscript_call_result_195148 = invoke(stypy.reporting.localization.Localization(__file__, 75, 25), getitem___195147, slice_195140)
        
        str_195149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 75, 44), 'str', '.Test.runTest')
        # Processing the call keyword arguments (line 75)
        kwargs_195150 = {}
        # Getting the type of 'self' (line 75)
        self_195137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 75)
        assertEqual_195138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 8), self_195137, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 75)
        assertEqual_call_result_195151 = invoke(stypy.reporting.localization.Localization(__file__, 75, 8), assertEqual_195138, *[subscript_call_result_195148, str_195149], **kwargs_195150)
        
        
        # ################# End of 'test_init__no_test_name(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_init__no_test_name' in the type store
        # Getting the type of 'stypy_return_type' (line 70)
        stypy_return_type_195152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195152)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_init__no_test_name'
        return stypy_return_type_195152


    @norecursion
    def test_init__test_name__valid(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_init__test_name__valid'
        module_type_store = module_type_store.open_function_context('test_init__test_name__valid', 81, 4, False)
        # Assigning a type to the variable 'self' (line 82)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_init__test_name__valid')
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_init__test_name__valid.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_init__test_name__valid', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_init__test_name__valid', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_init__test_name__valid(...)' code ##################

        # Declaration of the 'Test' class
        # Getting the type of 'unittest' (line 82)
        unittest_195153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 19), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 82)
        TestCase_195154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 19), unittest_195153, 'TestCase')

        class Test(TestCase_195154, ):

            @norecursion
            def runTest(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'runTest'
                module_type_store = module_type_store.open_function_context('runTest', 83, 12, False)
                # Assigning a type to the variable 'self' (line 84)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 84, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test.runTest.__dict__.__setitem__('stypy_localization', localization)
                Test.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test.runTest.__dict__.__setitem__('stypy_function_name', 'Test.runTest')
                Test.runTest.__dict__.__setitem__('stypy_param_names_list', [])
                Test.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test.runTest', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'runTest', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'runTest(...)' code ##################

                
                # Call to TypeError(...): (line 83)
                # Processing the call keyword arguments (line 83)
                kwargs_195156 = {}
                # Getting the type of 'TypeError' (line 83)
                TypeError_195155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 37), 'TypeError', False)
                # Calling TypeError(args, kwargs) (line 83)
                TypeError_call_result_195157 = invoke(stypy.reporting.localization.Localization(__file__, 83, 37), TypeError_195155, *[], **kwargs_195156)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 83, 31), TypeError_call_result_195157, 'raise parameter', BaseException)
                
                # ################# End of 'runTest(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'runTest' in the type store
                # Getting the type of 'stypy_return_type' (line 83)
                stypy_return_type_195158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195158)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'runTest'
                return stypy_return_type_195158


            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 84, 12, False)
                # Assigning a type to the variable 'self' (line 85)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test.test.__dict__.__setitem__('stypy_localization', localization)
                Test.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test.test.__dict__.__setitem__('stypy_function_name', 'Test.test')
                Test.test.__dict__.__setitem__('stypy_param_names_list', [])
                Test.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                pass
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 84)
                stypy_return_type_195159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195159)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195159

        
        # Assigning a type to the variable 'Test' (line 82)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 8), 'Test', Test)
        
        # Call to assertEqual(...): (line 86)
        # Processing the call arguments (line 86)
        
        # Obtaining the type of the subscript
        int_195162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 43), 'int')
        slice_195163 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 86, 25), int_195162, None, None)
        
        # Call to id(...): (line 86)
        # Processing the call keyword arguments (line 86)
        kwargs_195169 = {}
        
        # Call to Test(...): (line 86)
        # Processing the call arguments (line 86)
        str_195165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 30), 'str', 'test')
        # Processing the call keyword arguments (line 86)
        kwargs_195166 = {}
        # Getting the type of 'Test' (line 86)
        Test_195164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 25), 'Test', False)
        # Calling Test(args, kwargs) (line 86)
        Test_call_result_195167 = invoke(stypy.reporting.localization.Localization(__file__, 86, 25), Test_195164, *[str_195165], **kwargs_195166)
        
        # Obtaining the member 'id' of a type (line 86)
        id_195168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 25), Test_call_result_195167, 'id')
        # Calling id(args, kwargs) (line 86)
        id_call_result_195170 = invoke(stypy.reporting.localization.Localization(__file__, 86, 25), id_195168, *[], **kwargs_195169)
        
        # Obtaining the member '__getitem__' of a type (line 86)
        getitem___195171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 25), id_call_result_195170, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 86)
        subscript_call_result_195172 = invoke(stypy.reporting.localization.Localization(__file__, 86, 25), getitem___195171, slice_195163)
        
        str_195173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 50), 'str', '.Test.test')
        # Processing the call keyword arguments (line 86)
        kwargs_195174 = {}
        # Getting the type of 'self' (line 86)
        self_195160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 86)
        assertEqual_195161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 8), self_195160, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 86)
        assertEqual_call_result_195175 = invoke(stypy.reporting.localization.Localization(__file__, 86, 8), assertEqual_195161, *[subscript_call_result_195172, str_195173], **kwargs_195174)
        
        
        # ################# End of 'test_init__test_name__valid(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_init__test_name__valid' in the type store
        # Getting the type of 'stypy_return_type' (line 81)
        stypy_return_type_195176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195176)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_init__test_name__valid'
        return stypy_return_type_195176


    @norecursion
    def test_init__test_name__invalid(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_init__test_name__invalid'
        module_type_store = module_type_store.open_function_context('test_init__test_name__invalid', 92, 4, False)
        # Assigning a type to the variable 'self' (line 93)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_init__test_name__invalid')
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_init__test_name__invalid.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_init__test_name__invalid', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_init__test_name__invalid', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_init__test_name__invalid(...)' code ##################

        # Declaration of the 'Test' class
        # Getting the type of 'unittest' (line 93)
        unittest_195177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 19), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 93)
        TestCase_195178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 93, 19), unittest_195177, 'TestCase')

        class Test(TestCase_195178, ):

            @norecursion
            def runTest(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'runTest'
                module_type_store = module_type_store.open_function_context('runTest', 94, 12, False)
                # Assigning a type to the variable 'self' (line 95)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 95, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test.runTest.__dict__.__setitem__('stypy_localization', localization)
                Test.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test.runTest.__dict__.__setitem__('stypy_function_name', 'Test.runTest')
                Test.runTest.__dict__.__setitem__('stypy_param_names_list', [])
                Test.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test.runTest', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'runTest', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'runTest(...)' code ##################

                
                # Call to TypeError(...): (line 94)
                # Processing the call keyword arguments (line 94)
                kwargs_195180 = {}
                # Getting the type of 'TypeError' (line 94)
                TypeError_195179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 37), 'TypeError', False)
                # Calling TypeError(args, kwargs) (line 94)
                TypeError_call_result_195181 = invoke(stypy.reporting.localization.Localization(__file__, 94, 37), TypeError_195179, *[], **kwargs_195180)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 94, 31), TypeError_call_result_195181, 'raise parameter', BaseException)
                
                # ################# End of 'runTest(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'runTest' in the type store
                # Getting the type of 'stypy_return_type' (line 94)
                stypy_return_type_195182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195182)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'runTest'
                return stypy_return_type_195182


            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 95, 12, False)
                # Assigning a type to the variable 'self' (line 96)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test.test.__dict__.__setitem__('stypy_localization', localization)
                Test.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test.test.__dict__.__setitem__('stypy_function_name', 'Test.test')
                Test.test.__dict__.__setitem__('stypy_param_names_list', [])
                Test.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                pass
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 95)
                stypy_return_type_195183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 95, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195183)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195183

        
        # Assigning a type to the variable 'Test' (line 93)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 93, 8), 'Test', Test)
        
        
        # SSA begins for try-except statement (line 97)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to Test(...): (line 98)
        # Processing the call arguments (line 98)
        str_195185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 98, 17), 'str', 'testfoo')
        # Processing the call keyword arguments (line 98)
        kwargs_195186 = {}
        # Getting the type of 'Test' (line 98)
        Test_195184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 12), 'Test', False)
        # Calling Test(args, kwargs) (line 98)
        Test_call_result_195187 = invoke(stypy.reporting.localization.Localization(__file__, 98, 12), Test_195184, *[str_195185], **kwargs_195186)
        
        # SSA branch for the except part of a try statement (line 97)
        # SSA branch for the except 'ValueError' branch of a try statement (line 97)
        module_type_store.open_ssa_branch('except')
        pass
        # SSA branch for the else branch of a try statement (line 97)
        module_type_store.open_ssa_branch('except else')
        
        # Call to fail(...): (line 102)
        # Processing the call arguments (line 102)
        str_195190 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 102, 22), 'str', 'Failed to raise ValueError')
        # Processing the call keyword arguments (line 102)
        kwargs_195191 = {}
        # Getting the type of 'self' (line 102)
        self_195188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 12), 'self', False)
        # Obtaining the member 'fail' of a type (line 102)
        fail_195189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 12), self_195188, 'fail')
        # Calling fail(args, kwargs) (line 102)
        fail_call_result_195192 = invoke(stypy.reporting.localization.Localization(__file__, 102, 12), fail_195189, *[str_195190], **kwargs_195191)
        
        # SSA join for try-except statement (line 97)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'test_init__test_name__invalid(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_init__test_name__invalid' in the type store
        # Getting the type of 'stypy_return_type' (line 92)
        stypy_return_type_195193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195193)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_init__test_name__invalid'
        return stypy_return_type_195193


    @norecursion
    def test_countTestCases(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_countTestCases'
        module_type_store = module_type_store.open_function_context('test_countTestCases', 106, 4, False)
        # Assigning a type to the variable 'self' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_countTestCases')
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_countTestCases.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_countTestCases', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_countTestCases', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_countTestCases(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 107)
        unittest_195194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 107)
        TestCase_195195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 18), unittest_195194, 'TestCase')

        class Foo(TestCase_195195, ):

            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 108, 12, False)
                # Assigning a type to the variable 'self' (line 109)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 109, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                pass
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 108)
                stypy_return_type_195196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195196)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195196

        
        # Assigning a type to the variable 'Foo' (line 107)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'Foo', Foo)
        
        # Call to assertEqual(...): (line 110)
        # Processing the call arguments (line 110)
        
        # Call to countTestCases(...): (line 110)
        # Processing the call keyword arguments (line 110)
        kwargs_195204 = {}
        
        # Call to Foo(...): (line 110)
        # Processing the call arguments (line 110)
        str_195200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 29), 'str', 'test')
        # Processing the call keyword arguments (line 110)
        kwargs_195201 = {}
        # Getting the type of 'Foo' (line 110)
        Foo_195199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 25), 'Foo', False)
        # Calling Foo(args, kwargs) (line 110)
        Foo_call_result_195202 = invoke(stypy.reporting.localization.Localization(__file__, 110, 25), Foo_195199, *[str_195200], **kwargs_195201)
        
        # Obtaining the member 'countTestCases' of a type (line 110)
        countTestCases_195203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 25), Foo_call_result_195202, 'countTestCases')
        # Calling countTestCases(args, kwargs) (line 110)
        countTestCases_call_result_195205 = invoke(stypy.reporting.localization.Localization(__file__, 110, 25), countTestCases_195203, *[], **kwargs_195204)
        
        int_195206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 110, 55), 'int')
        # Processing the call keyword arguments (line 110)
        kwargs_195207 = {}
        # Getting the type of 'self' (line 110)
        self_195197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 110)
        assertEqual_195198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 8), self_195197, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 110)
        assertEqual_call_result_195208 = invoke(stypy.reporting.localization.Localization(__file__, 110, 8), assertEqual_195198, *[countTestCases_call_result_195205, int_195206], **kwargs_195207)
        
        
        # ################# End of 'test_countTestCases(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_countTestCases' in the type store
        # Getting the type of 'stypy_return_type' (line 106)
        stypy_return_type_195209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195209)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_countTestCases'
        return stypy_return_type_195209


    @norecursion
    def test_defaultTestResult(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_defaultTestResult'
        module_type_store = module_type_store.open_function_context('test_defaultTestResult', 116, 4, False)
        # Assigning a type to the variable 'self' (line 117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_defaultTestResult')
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_defaultTestResult', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_defaultTestResult', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_defaultTestResult(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 117)
        unittest_195210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 117)
        TestCase_195211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 18), unittest_195210, 'TestCase')

        class Foo(TestCase_195211, ):

            @norecursion
            def runTest(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'runTest'
                module_type_store = module_type_store.open_function_context('runTest', 118, 12, False)
                # Assigning a type to the variable 'self' (line 119)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.runTest.__dict__.__setitem__('stypy_localization', localization)
                Foo.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.runTest.__dict__.__setitem__('stypy_function_name', 'Foo.runTest')
                Foo.runTest.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.runTest', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'runTest', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'runTest(...)' code ##################

                pass
                
                # ################# End of 'runTest(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'runTest' in the type store
                # Getting the type of 'stypy_return_type' (line 118)
                stypy_return_type_195212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 118, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195212)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'runTest'
                return stypy_return_type_195212

        
        # Assigning a type to the variable 'Foo' (line 117)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'Foo', Foo)
        
        # Assigning a Call to a Name (line 121):
        
        # Assigning a Call to a Name (line 121):
        
        # Call to defaultTestResult(...): (line 121)
        # Processing the call keyword arguments (line 121)
        kwargs_195217 = {}
        
        # Call to Foo(...): (line 121)
        # Processing the call keyword arguments (line 121)
        kwargs_195214 = {}
        # Getting the type of 'Foo' (line 121)
        Foo_195213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 17), 'Foo', False)
        # Calling Foo(args, kwargs) (line 121)
        Foo_call_result_195215 = invoke(stypy.reporting.localization.Localization(__file__, 121, 17), Foo_195213, *[], **kwargs_195214)
        
        # Obtaining the member 'defaultTestResult' of a type (line 121)
        defaultTestResult_195216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 17), Foo_call_result_195215, 'defaultTestResult')
        # Calling defaultTestResult(args, kwargs) (line 121)
        defaultTestResult_call_result_195218 = invoke(stypy.reporting.localization.Localization(__file__, 121, 17), defaultTestResult_195216, *[], **kwargs_195217)
        
        # Assigning a type to the variable 'result' (line 121)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 8), 'result', defaultTestResult_call_result_195218)
        
        # Call to assertEqual(...): (line 122)
        # Processing the call arguments (line 122)
        
        # Call to type(...): (line 122)
        # Processing the call arguments (line 122)
        # Getting the type of 'result' (line 122)
        result_195222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 30), 'result', False)
        # Processing the call keyword arguments (line 122)
        kwargs_195223 = {}
        # Getting the type of 'type' (line 122)
        type_195221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 25), 'type', False)
        # Calling type(args, kwargs) (line 122)
        type_call_result_195224 = invoke(stypy.reporting.localization.Localization(__file__, 122, 25), type_195221, *[result_195222], **kwargs_195223)
        
        # Getting the type of 'unittest' (line 122)
        unittest_195225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 39), 'unittest', False)
        # Obtaining the member 'TestResult' of a type (line 122)
        TestResult_195226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 39), unittest_195225, 'TestResult')
        # Processing the call keyword arguments (line 122)
        kwargs_195227 = {}
        # Getting the type of 'self' (line 122)
        self_195219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 122)
        assertEqual_195220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 8), self_195219, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 122)
        assertEqual_call_result_195228 = invoke(stypy.reporting.localization.Localization(__file__, 122, 8), assertEqual_195220, *[type_call_result_195224, TestResult_195226], **kwargs_195227)
        
        
        # ################# End of 'test_defaultTestResult(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_defaultTestResult' in the type store
        # Getting the type of 'stypy_return_type' (line 116)
        stypy_return_type_195229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195229)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_defaultTestResult'
        return stypy_return_type_195229


    @norecursion
    def test_run_call_order__error_in_setUp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__error_in_setUp'
        module_type_store = module_type_store.open_function_context('test_run_call_order__error_in_setUp', 131, 4, False)
        # Assigning a type to the variable 'self' (line 132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__error_in_setUp')
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__error_in_setUp.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__error_in_setUp', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__error_in_setUp', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__error_in_setUp(...)' code ##################

        
        # Assigning a List to a Name (line 132):
        
        # Assigning a List to a Name (line 132):
        
        # Obtaining an instance of the builtin type 'list' (line 132)
        list_195230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 132, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 132)
        
        # Assigning a type to the variable 'events' (line 132)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 132, 8), 'events', list_195230)
        
        # Assigning a Call to a Name (line 133):
        
        # Assigning a Call to a Name (line 133):
        
        # Call to LoggingResult(...): (line 133)
        # Processing the call arguments (line 133)
        # Getting the type of 'events' (line 133)
        events_195232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 31), 'events', False)
        # Processing the call keyword arguments (line 133)
        kwargs_195233 = {}
        # Getting the type of 'LoggingResult' (line 133)
        LoggingResult_195231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 17), 'LoggingResult', False)
        # Calling LoggingResult(args, kwargs) (line 133)
        LoggingResult_call_result_195234 = invoke(stypy.reporting.localization.Localization(__file__, 133, 17), LoggingResult_195231, *[events_195232], **kwargs_195233)
        
        # Assigning a type to the variable 'result' (line 133)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 133, 8), 'result', LoggingResult_call_result_195234)
        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 135)
        Test_195235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 135)
        LoggingTestCase_195236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 18), Test_195235, 'LoggingTestCase')

        class Foo(LoggingTestCase_195236, ):

            @norecursion
            def setUp(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'setUp'
                module_type_store = module_type_store.open_function_context('setUp', 136, 12, False)
                # Assigning a type to the variable 'self' (line 137)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.setUp.__dict__.__setitem__('stypy_localization', localization)
                Foo.setUp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.setUp.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.setUp.__dict__.__setitem__('stypy_function_name', 'Foo.setUp')
                Foo.setUp.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.setUp.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.setUp.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.setUp.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.setUp.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.setUp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.setUp.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.setUp', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'setUp', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'setUp(...)' code ##################

                
                # Call to setUp(...): (line 137)
                # Processing the call keyword arguments (line 137)
                kwargs_195243 = {}
                
                # Call to super(...): (line 137)
                # Processing the call arguments (line 137)
                # Getting the type of 'Foo' (line 137)
                Foo_195238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 22), 'Foo', False)
                # Getting the type of 'self' (line 137)
                self_195239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 27), 'self', False)
                # Processing the call keyword arguments (line 137)
                kwargs_195240 = {}
                # Getting the type of 'super' (line 137)
                super_195237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 16), 'super', False)
                # Calling super(args, kwargs) (line 137)
                super_call_result_195241 = invoke(stypy.reporting.localization.Localization(__file__, 137, 16), super_195237, *[Foo_195238, self_195239], **kwargs_195240)
                
                # Obtaining the member 'setUp' of a type (line 137)
                setUp_195242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 137, 16), super_call_result_195241, 'setUp')
                # Calling setUp(args, kwargs) (line 137)
                setUp_call_result_195244 = invoke(stypy.reporting.localization.Localization(__file__, 137, 16), setUp_195242, *[], **kwargs_195243)
                
                
                # Call to RuntimeError(...): (line 138)
                # Processing the call arguments (line 138)
                str_195246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 138, 35), 'str', 'raised by Foo.setUp')
                # Processing the call keyword arguments (line 138)
                kwargs_195247 = {}
                # Getting the type of 'RuntimeError' (line 138)
                RuntimeError_195245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 138, 22), 'RuntimeError', False)
                # Calling RuntimeError(args, kwargs) (line 138)
                RuntimeError_call_result_195248 = invoke(stypy.reporting.localization.Localization(__file__, 138, 22), RuntimeError_195245, *[str_195246], **kwargs_195247)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 138, 16), RuntimeError_call_result_195248, 'raise parameter', BaseException)
                
                # ################# End of 'setUp(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'setUp' in the type store
                # Getting the type of 'stypy_return_type' (line 136)
                stypy_return_type_195249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195249)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'setUp'
                return stypy_return_type_195249

        
        # Assigning a type to the variable 'Foo' (line 135)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 8), 'Foo', Foo)
        
        # Call to run(...): (line 140)
        # Processing the call arguments (line 140)
        # Getting the type of 'result' (line 140)
        result_195255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 24), 'result', False)
        # Processing the call keyword arguments (line 140)
        kwargs_195256 = {}
        
        # Call to Foo(...): (line 140)
        # Processing the call arguments (line 140)
        # Getting the type of 'events' (line 140)
        events_195251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 12), 'events', False)
        # Processing the call keyword arguments (line 140)
        kwargs_195252 = {}
        # Getting the type of 'Foo' (line 140)
        Foo_195250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 140)
        Foo_call_result_195253 = invoke(stypy.reporting.localization.Localization(__file__, 140, 8), Foo_195250, *[events_195251], **kwargs_195252)
        
        # Obtaining the member 'run' of a type (line 140)
        run_195254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 140, 8), Foo_call_result_195253, 'run')
        # Calling run(args, kwargs) (line 140)
        run_call_result_195257 = invoke(stypy.reporting.localization.Localization(__file__, 140, 8), run_195254, *[result_195255], **kwargs_195256)
        
        
        # Assigning a List to a Name (line 141):
        
        # Assigning a List to a Name (line 141):
        
        # Obtaining an instance of the builtin type 'list' (line 141)
        list_195258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 141)
        # Adding element type (line 141)
        str_195259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 20), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 19), list_195258, str_195259)
        # Adding element type (line 141)
        str_195260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 33), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 19), list_195258, str_195260)
        # Adding element type (line 141)
        str_195261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 42), 'str', 'addError')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 19), list_195258, str_195261)
        # Adding element type (line 141)
        str_195262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 54), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 19), list_195258, str_195262)
        
        # Assigning a type to the variable 'expected' (line 141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'expected', list_195258)
        
        # Call to assertEqual(...): (line 142)
        # Processing the call arguments (line 142)
        # Getting the type of 'events' (line 142)
        events_195265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 25), 'events', False)
        # Getting the type of 'expected' (line 142)
        expected_195266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 33), 'expected', False)
        # Processing the call keyword arguments (line 142)
        kwargs_195267 = {}
        # Getting the type of 'self' (line 142)
        self_195263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 142)
        assertEqual_195264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 8), self_195263, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 142)
        assertEqual_call_result_195268 = invoke(stypy.reporting.localization.Localization(__file__, 142, 8), assertEqual_195264, *[events_195265, expected_195266], **kwargs_195267)
        
        
        # ################# End of 'test_run_call_order__error_in_setUp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__error_in_setUp' in the type store
        # Getting the type of 'stypy_return_type' (line 131)
        stypy_return_type_195269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195269)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__error_in_setUp'
        return stypy_return_type_195269


    @norecursion
    def test_run_call_order__error_in_setUp_default_result(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__error_in_setUp_default_result'
        module_type_store = module_type_store.open_function_context('test_run_call_order__error_in_setUp_default_result', 145, 4, False)
        # Assigning a type to the variable 'self' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__error_in_setUp_default_result')
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__error_in_setUp_default_result.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__error_in_setUp_default_result', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__error_in_setUp_default_result', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__error_in_setUp_default_result(...)' code ##################

        
        # Assigning a List to a Name (line 146):
        
        # Assigning a List to a Name (line 146):
        
        # Obtaining an instance of the builtin type 'list' (line 146)
        list_195270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 146)
        
        # Assigning a type to the variable 'events' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'events', list_195270)
        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 148)
        Test_195271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 148)
        LoggingTestCase_195272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 18), Test_195271, 'LoggingTestCase')

        class Foo(LoggingTestCase_195272, ):

            @norecursion
            def defaultTestResult(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'defaultTestResult'
                module_type_store = module_type_store.open_function_context('defaultTestResult', 149, 12, False)
                # Assigning a type to the variable 'self' (line 150)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Foo.defaultTestResult')
                Foo.defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.defaultTestResult', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'defaultTestResult', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'defaultTestResult(...)' code ##################

                
                # Call to LoggingResult(...): (line 150)
                # Processing the call arguments (line 150)
                # Getting the type of 'self' (line 150)
                self_195274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 37), 'self', False)
                # Obtaining the member 'events' of a type (line 150)
                events_195275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 37), self_195274, 'events')
                # Processing the call keyword arguments (line 150)
                kwargs_195276 = {}
                # Getting the type of 'LoggingResult' (line 150)
                LoggingResult_195273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 23), 'LoggingResult', False)
                # Calling LoggingResult(args, kwargs) (line 150)
                LoggingResult_call_result_195277 = invoke(stypy.reporting.localization.Localization(__file__, 150, 23), LoggingResult_195273, *[events_195275], **kwargs_195276)
                
                # Assigning a type to the variable 'stypy_return_type' (line 150)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 150, 16), 'stypy_return_type', LoggingResult_call_result_195277)
                
                # ################# End of 'defaultTestResult(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'defaultTestResult' in the type store
                # Getting the type of 'stypy_return_type' (line 149)
                stypy_return_type_195278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 149, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195278)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'defaultTestResult'
                return stypy_return_type_195278


            @norecursion
            def setUp(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'setUp'
                module_type_store = module_type_store.open_function_context('setUp', 152, 12, False)
                # Assigning a type to the variable 'self' (line 153)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.setUp.__dict__.__setitem__('stypy_localization', localization)
                Foo.setUp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.setUp.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.setUp.__dict__.__setitem__('stypy_function_name', 'Foo.setUp')
                Foo.setUp.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.setUp.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.setUp.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.setUp.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.setUp.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.setUp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.setUp.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.setUp', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'setUp', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'setUp(...)' code ##################

                
                # Call to setUp(...): (line 153)
                # Processing the call keyword arguments (line 153)
                kwargs_195285 = {}
                
                # Call to super(...): (line 153)
                # Processing the call arguments (line 153)
                # Getting the type of 'Foo' (line 153)
                Foo_195280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 22), 'Foo', False)
                # Getting the type of 'self' (line 153)
                self_195281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 27), 'self', False)
                # Processing the call keyword arguments (line 153)
                kwargs_195282 = {}
                # Getting the type of 'super' (line 153)
                super_195279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 16), 'super', False)
                # Calling super(args, kwargs) (line 153)
                super_call_result_195283 = invoke(stypy.reporting.localization.Localization(__file__, 153, 16), super_195279, *[Foo_195280, self_195281], **kwargs_195282)
                
                # Obtaining the member 'setUp' of a type (line 153)
                setUp_195284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 16), super_call_result_195283, 'setUp')
                # Calling setUp(args, kwargs) (line 153)
                setUp_call_result_195286 = invoke(stypy.reporting.localization.Localization(__file__, 153, 16), setUp_195284, *[], **kwargs_195285)
                
                
                # Call to RuntimeError(...): (line 154)
                # Processing the call arguments (line 154)
                str_195288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 35), 'str', 'raised by Foo.setUp')
                # Processing the call keyword arguments (line 154)
                kwargs_195289 = {}
                # Getting the type of 'RuntimeError' (line 154)
                RuntimeError_195287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 22), 'RuntimeError', False)
                # Calling RuntimeError(args, kwargs) (line 154)
                RuntimeError_call_result_195290 = invoke(stypy.reporting.localization.Localization(__file__, 154, 22), RuntimeError_195287, *[str_195288], **kwargs_195289)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 154, 16), RuntimeError_call_result_195290, 'raise parameter', BaseException)
                
                # ################# End of 'setUp(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'setUp' in the type store
                # Getting the type of 'stypy_return_type' (line 152)
                stypy_return_type_195291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 152, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195291)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'setUp'
                return stypy_return_type_195291

        
        # Assigning a type to the variable 'Foo' (line 148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'Foo', Foo)
        
        # Call to run(...): (line 156)
        # Processing the call keyword arguments (line 156)
        kwargs_195297 = {}
        
        # Call to Foo(...): (line 156)
        # Processing the call arguments (line 156)
        # Getting the type of 'events' (line 156)
        events_195293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 12), 'events', False)
        # Processing the call keyword arguments (line 156)
        kwargs_195294 = {}
        # Getting the type of 'Foo' (line 156)
        Foo_195292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 156)
        Foo_call_result_195295 = invoke(stypy.reporting.localization.Localization(__file__, 156, 8), Foo_195292, *[events_195293], **kwargs_195294)
        
        # Obtaining the member 'run' of a type (line 156)
        run_195296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 8), Foo_call_result_195295, 'run')
        # Calling run(args, kwargs) (line 156)
        run_call_result_195298 = invoke(stypy.reporting.localization.Localization(__file__, 156, 8), run_195296, *[], **kwargs_195297)
        
        
        # Assigning a List to a Name (line 157):
        
        # Assigning a List to a Name (line 157):
        
        # Obtaining an instance of the builtin type 'list' (line 157)
        list_195299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 157)
        # Adding element type (line 157)
        str_195300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 20), 'str', 'startTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 19), list_195299, str_195300)
        # Adding element type (line 157)
        str_195301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 36), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 19), list_195299, str_195301)
        # Adding element type (line 157)
        str_195302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 49), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 19), list_195299, str_195302)
        # Adding element type (line 157)
        str_195303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 58), 'str', 'addError')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 19), list_195299, str_195303)
        # Adding element type (line 157)
        str_195304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 20), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 19), list_195299, str_195304)
        # Adding element type (line 157)
        str_195305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 158, 32), 'str', 'stopTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 19), list_195299, str_195305)
        
        # Assigning a type to the variable 'expected' (line 157)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'expected', list_195299)
        
        # Call to assertEqual(...): (line 159)
        # Processing the call arguments (line 159)
        # Getting the type of 'events' (line 159)
        events_195308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 25), 'events', False)
        # Getting the type of 'expected' (line 159)
        expected_195309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 33), 'expected', False)
        # Processing the call keyword arguments (line 159)
        kwargs_195310 = {}
        # Getting the type of 'self' (line 159)
        self_195306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 159)
        assertEqual_195307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 8), self_195306, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 159)
        assertEqual_call_result_195311 = invoke(stypy.reporting.localization.Localization(__file__, 159, 8), assertEqual_195307, *[events_195308, expected_195309], **kwargs_195310)
        
        
        # ################# End of 'test_run_call_order__error_in_setUp_default_result(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__error_in_setUp_default_result' in the type store
        # Getting the type of 'stypy_return_type' (line 145)
        stypy_return_type_195312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195312)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__error_in_setUp_default_result'
        return stypy_return_type_195312


    @norecursion
    def test_run_call_order__error_in_test(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__error_in_test'
        module_type_store = module_type_store.open_function_context('test_run_call_order__error_in_test', 168, 4, False)
        # Assigning a type to the variable 'self' (line 169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__error_in_test')
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__error_in_test.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__error_in_test', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__error_in_test', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__error_in_test(...)' code ##################

        
        # Assigning a List to a Name (line 169):
        
        # Assigning a List to a Name (line 169):
        
        # Obtaining an instance of the builtin type 'list' (line 169)
        list_195313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 169, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 169)
        
        # Assigning a type to the variable 'events' (line 169)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 169, 8), 'events', list_195313)
        
        # Assigning a Call to a Name (line 170):
        
        # Assigning a Call to a Name (line 170):
        
        # Call to LoggingResult(...): (line 170)
        # Processing the call arguments (line 170)
        # Getting the type of 'events' (line 170)
        events_195315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 31), 'events', False)
        # Processing the call keyword arguments (line 170)
        kwargs_195316 = {}
        # Getting the type of 'LoggingResult' (line 170)
        LoggingResult_195314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 17), 'LoggingResult', False)
        # Calling LoggingResult(args, kwargs) (line 170)
        LoggingResult_call_result_195317 = invoke(stypy.reporting.localization.Localization(__file__, 170, 17), LoggingResult_195314, *[events_195315], **kwargs_195316)
        
        # Assigning a type to the variable 'result' (line 170)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 8), 'result', LoggingResult_call_result_195317)
        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 172)
        Test_195318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 172)
        LoggingTestCase_195319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 18), Test_195318, 'LoggingTestCase')

        class Foo(LoggingTestCase_195319, ):

            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 173, 12, False)
                # Assigning a type to the variable 'self' (line 174)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 174, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                
                # Call to test(...): (line 174)
                # Processing the call keyword arguments (line 174)
                kwargs_195326 = {}
                
                # Call to super(...): (line 174)
                # Processing the call arguments (line 174)
                # Getting the type of 'Foo' (line 174)
                Foo_195321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 22), 'Foo', False)
                # Getting the type of 'self' (line 174)
                self_195322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 27), 'self', False)
                # Processing the call keyword arguments (line 174)
                kwargs_195323 = {}
                # Getting the type of 'super' (line 174)
                super_195320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 16), 'super', False)
                # Calling super(args, kwargs) (line 174)
                super_call_result_195324 = invoke(stypy.reporting.localization.Localization(__file__, 174, 16), super_195320, *[Foo_195321, self_195322], **kwargs_195323)
                
                # Obtaining the member 'test' of a type (line 174)
                test_195325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 174, 16), super_call_result_195324, 'test')
                # Calling test(args, kwargs) (line 174)
                test_call_result_195327 = invoke(stypy.reporting.localization.Localization(__file__, 174, 16), test_195325, *[], **kwargs_195326)
                
                
                # Call to RuntimeError(...): (line 175)
                # Processing the call arguments (line 175)
                str_195329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 35), 'str', 'raised by Foo.test')
                # Processing the call keyword arguments (line 175)
                kwargs_195330 = {}
                # Getting the type of 'RuntimeError' (line 175)
                RuntimeError_195328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 22), 'RuntimeError', False)
                # Calling RuntimeError(args, kwargs) (line 175)
                RuntimeError_call_result_195331 = invoke(stypy.reporting.localization.Localization(__file__, 175, 22), RuntimeError_195328, *[str_195329], **kwargs_195330)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 175, 16), RuntimeError_call_result_195331, 'raise parameter', BaseException)
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 173)
                stypy_return_type_195332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195332)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195332

        
        # Assigning a type to the variable 'Foo' (line 172)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 8), 'Foo', Foo)
        
        # Assigning a List to a Name (line 177):
        
        # Assigning a List to a Name (line 177):
        
        # Obtaining an instance of the builtin type 'list' (line 177)
        list_195333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 177)
        # Adding element type (line 177)
        str_195334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 20), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 19), list_195333, str_195334)
        # Adding element type (line 177)
        str_195335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 33), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 19), list_195333, str_195335)
        # Adding element type (line 177)
        str_195336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 42), 'str', 'test')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 19), list_195333, str_195336)
        # Adding element type (line 177)
        str_195337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 50), 'str', 'addError')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 19), list_195333, str_195337)
        # Adding element type (line 177)
        str_195338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 177, 62), 'str', 'tearDown')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 19), list_195333, str_195338)
        # Adding element type (line 177)
        str_195339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 178, 20), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 177, 19), list_195333, str_195339)
        
        # Assigning a type to the variable 'expected' (line 177)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 8), 'expected', list_195333)
        
        # Call to run(...): (line 179)
        # Processing the call arguments (line 179)
        # Getting the type of 'result' (line 179)
        result_195345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 24), 'result', False)
        # Processing the call keyword arguments (line 179)
        kwargs_195346 = {}
        
        # Call to Foo(...): (line 179)
        # Processing the call arguments (line 179)
        # Getting the type of 'events' (line 179)
        events_195341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 12), 'events', False)
        # Processing the call keyword arguments (line 179)
        kwargs_195342 = {}
        # Getting the type of 'Foo' (line 179)
        Foo_195340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 179, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 179)
        Foo_call_result_195343 = invoke(stypy.reporting.localization.Localization(__file__, 179, 8), Foo_195340, *[events_195341], **kwargs_195342)
        
        # Obtaining the member 'run' of a type (line 179)
        run_195344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 179, 8), Foo_call_result_195343, 'run')
        # Calling run(args, kwargs) (line 179)
        run_call_result_195347 = invoke(stypy.reporting.localization.Localization(__file__, 179, 8), run_195344, *[result_195345], **kwargs_195346)
        
        
        # Call to assertEqual(...): (line 180)
        # Processing the call arguments (line 180)
        # Getting the type of 'events' (line 180)
        events_195350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 25), 'events', False)
        # Getting the type of 'expected' (line 180)
        expected_195351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 33), 'expected', False)
        # Processing the call keyword arguments (line 180)
        kwargs_195352 = {}
        # Getting the type of 'self' (line 180)
        self_195348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 180)
        assertEqual_195349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 8), self_195348, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 180)
        assertEqual_call_result_195353 = invoke(stypy.reporting.localization.Localization(__file__, 180, 8), assertEqual_195349, *[events_195350, expected_195351], **kwargs_195352)
        
        
        # ################# End of 'test_run_call_order__error_in_test(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__error_in_test' in the type store
        # Getting the type of 'stypy_return_type' (line 168)
        stypy_return_type_195354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 168, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195354)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__error_in_test'
        return stypy_return_type_195354


    @norecursion
    def test_run_call_order__error_in_test_default_result(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__error_in_test_default_result'
        module_type_store = module_type_store.open_function_context('test_run_call_order__error_in_test_default_result', 184, 4, False)
        # Assigning a type to the variable 'self' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__error_in_test_default_result')
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__error_in_test_default_result.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__error_in_test_default_result', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__error_in_test_default_result', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__error_in_test_default_result(...)' code ##################

        
        # Assigning a List to a Name (line 185):
        
        # Assigning a List to a Name (line 185):
        
        # Obtaining an instance of the builtin type 'list' (line 185)
        list_195355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 185, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 185)
        
        # Assigning a type to the variable 'events' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 8), 'events', list_195355)
        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 187)
        Test_195356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 187)
        LoggingTestCase_195357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 18), Test_195356, 'LoggingTestCase')

        class Foo(LoggingTestCase_195357, ):

            @norecursion
            def defaultTestResult(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'defaultTestResult'
                module_type_store = module_type_store.open_function_context('defaultTestResult', 188, 12, False)
                # Assigning a type to the variable 'self' (line 189)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Foo.defaultTestResult')
                Foo.defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.defaultTestResult', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'defaultTestResult', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'defaultTestResult(...)' code ##################

                
                # Call to LoggingResult(...): (line 189)
                # Processing the call arguments (line 189)
                # Getting the type of 'self' (line 189)
                self_195359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 37), 'self', False)
                # Obtaining the member 'events' of a type (line 189)
                events_195360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 37), self_195359, 'events')
                # Processing the call keyword arguments (line 189)
                kwargs_195361 = {}
                # Getting the type of 'LoggingResult' (line 189)
                LoggingResult_195358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 23), 'LoggingResult', False)
                # Calling LoggingResult(args, kwargs) (line 189)
                LoggingResult_call_result_195362 = invoke(stypy.reporting.localization.Localization(__file__, 189, 23), LoggingResult_195358, *[events_195360], **kwargs_195361)
                
                # Assigning a type to the variable 'stypy_return_type' (line 189)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 16), 'stypy_return_type', LoggingResult_call_result_195362)
                
                # ################# End of 'defaultTestResult(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'defaultTestResult' in the type store
                # Getting the type of 'stypy_return_type' (line 188)
                stypy_return_type_195363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195363)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'defaultTestResult'
                return stypy_return_type_195363


            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 191, 12, False)
                # Assigning a type to the variable 'self' (line 192)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                
                # Call to test(...): (line 192)
                # Processing the call keyword arguments (line 192)
                kwargs_195370 = {}
                
                # Call to super(...): (line 192)
                # Processing the call arguments (line 192)
                # Getting the type of 'Foo' (line 192)
                Foo_195365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 22), 'Foo', False)
                # Getting the type of 'self' (line 192)
                self_195366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 27), 'self', False)
                # Processing the call keyword arguments (line 192)
                kwargs_195367 = {}
                # Getting the type of 'super' (line 192)
                super_195364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 192, 16), 'super', False)
                # Calling super(args, kwargs) (line 192)
                super_call_result_195368 = invoke(stypy.reporting.localization.Localization(__file__, 192, 16), super_195364, *[Foo_195365, self_195366], **kwargs_195367)
                
                # Obtaining the member 'test' of a type (line 192)
                test_195369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 192, 16), super_call_result_195368, 'test')
                # Calling test(args, kwargs) (line 192)
                test_call_result_195371 = invoke(stypy.reporting.localization.Localization(__file__, 192, 16), test_195369, *[], **kwargs_195370)
                
                
                # Call to RuntimeError(...): (line 193)
                # Processing the call arguments (line 193)
                str_195373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 35), 'str', 'raised by Foo.test')
                # Processing the call keyword arguments (line 193)
                kwargs_195374 = {}
                # Getting the type of 'RuntimeError' (line 193)
                RuntimeError_195372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 22), 'RuntimeError', False)
                # Calling RuntimeError(args, kwargs) (line 193)
                RuntimeError_call_result_195375 = invoke(stypy.reporting.localization.Localization(__file__, 193, 22), RuntimeError_195372, *[str_195373], **kwargs_195374)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 193, 16), RuntimeError_call_result_195375, 'raise parameter', BaseException)
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 191)
                stypy_return_type_195376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195376)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195376

        
        # Assigning a type to the variable 'Foo' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 8), 'Foo', Foo)
        
        # Assigning a List to a Name (line 195):
        
        # Assigning a List to a Name (line 195):
        
        # Obtaining an instance of the builtin type 'list' (line 195)
        list_195377 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 195)
        # Adding element type (line 195)
        str_195378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 20), 'str', 'startTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195378)
        # Adding element type (line 195)
        str_195379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 36), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195379)
        # Adding element type (line 195)
        str_195380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 49), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195380)
        # Adding element type (line 195)
        str_195381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 58), 'str', 'test')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195381)
        # Adding element type (line 195)
        str_195382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 66), 'str', 'addError')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195382)
        # Adding element type (line 195)
        str_195383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 20), 'str', 'tearDown')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195383)
        # Adding element type (line 195)
        str_195384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 32), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195384)
        # Adding element type (line 195)
        str_195385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 196, 44), 'str', 'stopTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 19), list_195377, str_195385)
        
        # Assigning a type to the variable 'expected' (line 195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'expected', list_195377)
        
        # Call to run(...): (line 197)
        # Processing the call keyword arguments (line 197)
        kwargs_195391 = {}
        
        # Call to Foo(...): (line 197)
        # Processing the call arguments (line 197)
        # Getting the type of 'events' (line 197)
        events_195387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 12), 'events', False)
        # Processing the call keyword arguments (line 197)
        kwargs_195388 = {}
        # Getting the type of 'Foo' (line 197)
        Foo_195386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 197)
        Foo_call_result_195389 = invoke(stypy.reporting.localization.Localization(__file__, 197, 8), Foo_195386, *[events_195387], **kwargs_195388)
        
        # Obtaining the member 'run' of a type (line 197)
        run_195390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 8), Foo_call_result_195389, 'run')
        # Calling run(args, kwargs) (line 197)
        run_call_result_195392 = invoke(stypy.reporting.localization.Localization(__file__, 197, 8), run_195390, *[], **kwargs_195391)
        
        
        # Call to assertEqual(...): (line 198)
        # Processing the call arguments (line 198)
        # Getting the type of 'events' (line 198)
        events_195395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 25), 'events', False)
        # Getting the type of 'expected' (line 198)
        expected_195396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 33), 'expected', False)
        # Processing the call keyword arguments (line 198)
        kwargs_195397 = {}
        # Getting the type of 'self' (line 198)
        self_195393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 198)
        assertEqual_195394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 8), self_195393, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 198)
        assertEqual_call_result_195398 = invoke(stypy.reporting.localization.Localization(__file__, 198, 8), assertEqual_195394, *[events_195395, expected_195396], **kwargs_195397)
        
        
        # ################# End of 'test_run_call_order__error_in_test_default_result(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__error_in_test_default_result' in the type store
        # Getting the type of 'stypy_return_type' (line 184)
        stypy_return_type_195399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195399)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__error_in_test_default_result'
        return stypy_return_type_195399


    @norecursion
    def test_run_call_order__failure_in_test(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__failure_in_test'
        module_type_store = module_type_store.open_function_context('test_run_call_order__failure_in_test', 207, 4, False)
        # Assigning a type to the variable 'self' (line 208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__failure_in_test')
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__failure_in_test.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__failure_in_test', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__failure_in_test', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__failure_in_test(...)' code ##################

        
        # Assigning a List to a Name (line 208):
        
        # Assigning a List to a Name (line 208):
        
        # Obtaining an instance of the builtin type 'list' (line 208)
        list_195400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 208)
        
        # Assigning a type to the variable 'events' (line 208)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 8), 'events', list_195400)
        
        # Assigning a Call to a Name (line 209):
        
        # Assigning a Call to a Name (line 209):
        
        # Call to LoggingResult(...): (line 209)
        # Processing the call arguments (line 209)
        # Getting the type of 'events' (line 209)
        events_195402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 31), 'events', False)
        # Processing the call keyword arguments (line 209)
        kwargs_195403 = {}
        # Getting the type of 'LoggingResult' (line 209)
        LoggingResult_195401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 209, 17), 'LoggingResult', False)
        # Calling LoggingResult(args, kwargs) (line 209)
        LoggingResult_call_result_195404 = invoke(stypy.reporting.localization.Localization(__file__, 209, 17), LoggingResult_195401, *[events_195402], **kwargs_195403)
        
        # Assigning a type to the variable 'result' (line 209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 8), 'result', LoggingResult_call_result_195404)
        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 211)
        Test_195405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 211)
        LoggingTestCase_195406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 211, 18), Test_195405, 'LoggingTestCase')

        class Foo(LoggingTestCase_195406, ):

            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 212, 12, False)
                # Assigning a type to the variable 'self' (line 213)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                
                # Call to test(...): (line 213)
                # Processing the call keyword arguments (line 213)
                kwargs_195413 = {}
                
                # Call to super(...): (line 213)
                # Processing the call arguments (line 213)
                # Getting the type of 'Foo' (line 213)
                Foo_195408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 22), 'Foo', False)
                # Getting the type of 'self' (line 213)
                self_195409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 27), 'self', False)
                # Processing the call keyword arguments (line 213)
                kwargs_195410 = {}
                # Getting the type of 'super' (line 213)
                super_195407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 213, 16), 'super', False)
                # Calling super(args, kwargs) (line 213)
                super_call_result_195411 = invoke(stypy.reporting.localization.Localization(__file__, 213, 16), super_195407, *[Foo_195408, self_195409], **kwargs_195410)
                
                # Obtaining the member 'test' of a type (line 213)
                test_195412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 213, 16), super_call_result_195411, 'test')
                # Calling test(args, kwargs) (line 213)
                test_call_result_195414 = invoke(stypy.reporting.localization.Localization(__file__, 213, 16), test_195412, *[], **kwargs_195413)
                
                
                # Call to fail(...): (line 214)
                # Processing the call arguments (line 214)
                str_195417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 26), 'str', 'raised by Foo.test')
                # Processing the call keyword arguments (line 214)
                kwargs_195418 = {}
                # Getting the type of 'self' (line 214)
                self_195415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 16), 'self', False)
                # Obtaining the member 'fail' of a type (line 214)
                fail_195416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 16), self_195415, 'fail')
                # Calling fail(args, kwargs) (line 214)
                fail_call_result_195419 = invoke(stypy.reporting.localization.Localization(__file__, 214, 16), fail_195416, *[str_195417], **kwargs_195418)
                
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 212)
                stypy_return_type_195420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 212, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195420)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195420

        
        # Assigning a type to the variable 'Foo' (line 211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'Foo', Foo)
        
        # Assigning a List to a Name (line 216):
        
        # Assigning a List to a Name (line 216):
        
        # Obtaining an instance of the builtin type 'list' (line 216)
        list_195421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 216)
        # Adding element type (line 216)
        str_195422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 20), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 19), list_195421, str_195422)
        # Adding element type (line 216)
        str_195423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 33), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 19), list_195421, str_195423)
        # Adding element type (line 216)
        str_195424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 42), 'str', 'test')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 19), list_195421, str_195424)
        # Adding element type (line 216)
        str_195425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 50), 'str', 'addFailure')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 19), list_195421, str_195425)
        # Adding element type (line 216)
        str_195426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 216, 64), 'str', 'tearDown')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 19), list_195421, str_195426)
        # Adding element type (line 216)
        str_195427 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 217, 20), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 216, 19), list_195421, str_195427)
        
        # Assigning a type to the variable 'expected' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'expected', list_195421)
        
        # Call to run(...): (line 218)
        # Processing the call arguments (line 218)
        # Getting the type of 'result' (line 218)
        result_195433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 24), 'result', False)
        # Processing the call keyword arguments (line 218)
        kwargs_195434 = {}
        
        # Call to Foo(...): (line 218)
        # Processing the call arguments (line 218)
        # Getting the type of 'events' (line 218)
        events_195429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 12), 'events', False)
        # Processing the call keyword arguments (line 218)
        kwargs_195430 = {}
        # Getting the type of 'Foo' (line 218)
        Foo_195428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 218)
        Foo_call_result_195431 = invoke(stypy.reporting.localization.Localization(__file__, 218, 8), Foo_195428, *[events_195429], **kwargs_195430)
        
        # Obtaining the member 'run' of a type (line 218)
        run_195432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 218, 8), Foo_call_result_195431, 'run')
        # Calling run(args, kwargs) (line 218)
        run_call_result_195435 = invoke(stypy.reporting.localization.Localization(__file__, 218, 8), run_195432, *[result_195433], **kwargs_195434)
        
        
        # Call to assertEqual(...): (line 219)
        # Processing the call arguments (line 219)
        # Getting the type of 'events' (line 219)
        events_195438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 25), 'events', False)
        # Getting the type of 'expected' (line 219)
        expected_195439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 33), 'expected', False)
        # Processing the call keyword arguments (line 219)
        kwargs_195440 = {}
        # Getting the type of 'self' (line 219)
        self_195436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 219)
        assertEqual_195437 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 8), self_195436, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 219)
        assertEqual_call_result_195441 = invoke(stypy.reporting.localization.Localization(__file__, 219, 8), assertEqual_195437, *[events_195438, expected_195439], **kwargs_195440)
        
        
        # ################# End of 'test_run_call_order__failure_in_test(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__failure_in_test' in the type store
        # Getting the type of 'stypy_return_type' (line 207)
        stypy_return_type_195442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195442)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__failure_in_test'
        return stypy_return_type_195442


    @norecursion
    def test_run_call_order__failure_in_test_default_result(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__failure_in_test_default_result'
        module_type_store = module_type_store.open_function_context('test_run_call_order__failure_in_test_default_result', 222, 4, False)
        # Assigning a type to the variable 'self' (line 223)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__failure_in_test_default_result')
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__failure_in_test_default_result.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__failure_in_test_default_result', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__failure_in_test_default_result', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__failure_in_test_default_result(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 224)
        Test_195443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 224)
        LoggingTestCase_195444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 18), Test_195443, 'LoggingTestCase')

        class Foo(LoggingTestCase_195444, ):

            @norecursion
            def defaultTestResult(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'defaultTestResult'
                module_type_store = module_type_store.open_function_context('defaultTestResult', 225, 12, False)
                # Assigning a type to the variable 'self' (line 226)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Foo.defaultTestResult')
                Foo.defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.defaultTestResult', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'defaultTestResult', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'defaultTestResult(...)' code ##################

                
                # Call to LoggingResult(...): (line 226)
                # Processing the call arguments (line 226)
                # Getting the type of 'self' (line 226)
                self_195446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 37), 'self', False)
                # Obtaining the member 'events' of a type (line 226)
                events_195447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 37), self_195446, 'events')
                # Processing the call keyword arguments (line 226)
                kwargs_195448 = {}
                # Getting the type of 'LoggingResult' (line 226)
                LoggingResult_195445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 23), 'LoggingResult', False)
                # Calling LoggingResult(args, kwargs) (line 226)
                LoggingResult_call_result_195449 = invoke(stypy.reporting.localization.Localization(__file__, 226, 23), LoggingResult_195445, *[events_195447], **kwargs_195448)
                
                # Assigning a type to the variable 'stypy_return_type' (line 226)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 226, 16), 'stypy_return_type', LoggingResult_call_result_195449)
                
                # ################# End of 'defaultTestResult(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'defaultTestResult' in the type store
                # Getting the type of 'stypy_return_type' (line 225)
                stypy_return_type_195450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195450)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'defaultTestResult'
                return stypy_return_type_195450


            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 227, 12, False)
                # Assigning a type to the variable 'self' (line 228)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                
                # Call to test(...): (line 228)
                # Processing the call keyword arguments (line 228)
                kwargs_195457 = {}
                
                # Call to super(...): (line 228)
                # Processing the call arguments (line 228)
                # Getting the type of 'Foo' (line 228)
                Foo_195452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 22), 'Foo', False)
                # Getting the type of 'self' (line 228)
                self_195453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 27), 'self', False)
                # Processing the call keyword arguments (line 228)
                kwargs_195454 = {}
                # Getting the type of 'super' (line 228)
                super_195451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 16), 'super', False)
                # Calling super(args, kwargs) (line 228)
                super_call_result_195455 = invoke(stypy.reporting.localization.Localization(__file__, 228, 16), super_195451, *[Foo_195452, self_195453], **kwargs_195454)
                
                # Obtaining the member 'test' of a type (line 228)
                test_195456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 16), super_call_result_195455, 'test')
                # Calling test(args, kwargs) (line 228)
                test_call_result_195458 = invoke(stypy.reporting.localization.Localization(__file__, 228, 16), test_195456, *[], **kwargs_195457)
                
                
                # Call to fail(...): (line 229)
                # Processing the call arguments (line 229)
                str_195461 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 229, 26), 'str', 'raised by Foo.test')
                # Processing the call keyword arguments (line 229)
                kwargs_195462 = {}
                # Getting the type of 'self' (line 229)
                self_195459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 16), 'self', False)
                # Obtaining the member 'fail' of a type (line 229)
                fail_195460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 16), self_195459, 'fail')
                # Calling fail(args, kwargs) (line 229)
                fail_call_result_195463 = invoke(stypy.reporting.localization.Localization(__file__, 229, 16), fail_195460, *[str_195461], **kwargs_195462)
                
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 227)
                stypy_return_type_195464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195464)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195464

        
        # Assigning a type to the variable 'Foo' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'Foo', Foo)
        
        # Assigning a List to a Name (line 231):
        
        # Assigning a List to a Name (line 231):
        
        # Obtaining an instance of the builtin type 'list' (line 231)
        list_195465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 231)
        # Adding element type (line 231)
        str_195466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 20), 'str', 'startTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195466)
        # Adding element type (line 231)
        str_195467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 36), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195467)
        # Adding element type (line 231)
        str_195468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 49), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195468)
        # Adding element type (line 231)
        str_195469 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 58), 'str', 'test')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195469)
        # Adding element type (line 231)
        str_195470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 231, 66), 'str', 'addFailure')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195470)
        # Adding element type (line 231)
        str_195471 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 20), 'str', 'tearDown')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195471)
        # Adding element type (line 231)
        str_195472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 32), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195472)
        # Adding element type (line 231)
        str_195473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 44), 'str', 'stopTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 231, 19), list_195465, str_195473)
        
        # Assigning a type to the variable 'expected' (line 231)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 231, 8), 'expected', list_195465)
        
        # Assigning a List to a Name (line 233):
        
        # Assigning a List to a Name (line 233):
        
        # Obtaining an instance of the builtin type 'list' (line 233)
        list_195474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 233)
        
        # Assigning a type to the variable 'events' (line 233)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'events', list_195474)
        
        # Call to run(...): (line 234)
        # Processing the call keyword arguments (line 234)
        kwargs_195480 = {}
        
        # Call to Foo(...): (line 234)
        # Processing the call arguments (line 234)
        # Getting the type of 'events' (line 234)
        events_195476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 12), 'events', False)
        # Processing the call keyword arguments (line 234)
        kwargs_195477 = {}
        # Getting the type of 'Foo' (line 234)
        Foo_195475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 234)
        Foo_call_result_195478 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), Foo_195475, *[events_195476], **kwargs_195477)
        
        # Obtaining the member 'run' of a type (line 234)
        run_195479 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 8), Foo_call_result_195478, 'run')
        # Calling run(args, kwargs) (line 234)
        run_call_result_195481 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), run_195479, *[], **kwargs_195480)
        
        
        # Call to assertEqual(...): (line 235)
        # Processing the call arguments (line 235)
        # Getting the type of 'events' (line 235)
        events_195484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 25), 'events', False)
        # Getting the type of 'expected' (line 235)
        expected_195485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 33), 'expected', False)
        # Processing the call keyword arguments (line 235)
        kwargs_195486 = {}
        # Getting the type of 'self' (line 235)
        self_195482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 235)
        assertEqual_195483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 8), self_195482, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 235)
        assertEqual_call_result_195487 = invoke(stypy.reporting.localization.Localization(__file__, 235, 8), assertEqual_195483, *[events_195484, expected_195485], **kwargs_195486)
        
        
        # ################# End of 'test_run_call_order__failure_in_test_default_result(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__failure_in_test_default_result' in the type store
        # Getting the type of 'stypy_return_type' (line 222)
        stypy_return_type_195488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195488)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__failure_in_test_default_result'
        return stypy_return_type_195488


    @norecursion
    def test_run_call_order__error_in_tearDown(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__error_in_tearDown'
        module_type_store = module_type_store.open_function_context('test_run_call_order__error_in_tearDown', 244, 4, False)
        # Assigning a type to the variable 'self' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__error_in_tearDown')
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__error_in_tearDown.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__error_in_tearDown', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__error_in_tearDown', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__error_in_tearDown(...)' code ##################

        
        # Assigning a List to a Name (line 245):
        
        # Assigning a List to a Name (line 245):
        
        # Obtaining an instance of the builtin type 'list' (line 245)
        list_195489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 245, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 245)
        
        # Assigning a type to the variable 'events' (line 245)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 8), 'events', list_195489)
        
        # Assigning a Call to a Name (line 246):
        
        # Assigning a Call to a Name (line 246):
        
        # Call to LoggingResult(...): (line 246)
        # Processing the call arguments (line 246)
        # Getting the type of 'events' (line 246)
        events_195491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 31), 'events', False)
        # Processing the call keyword arguments (line 246)
        kwargs_195492 = {}
        # Getting the type of 'LoggingResult' (line 246)
        LoggingResult_195490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 17), 'LoggingResult', False)
        # Calling LoggingResult(args, kwargs) (line 246)
        LoggingResult_call_result_195493 = invoke(stypy.reporting.localization.Localization(__file__, 246, 17), LoggingResult_195490, *[events_195491], **kwargs_195492)
        
        # Assigning a type to the variable 'result' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 'result', LoggingResult_call_result_195493)
        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 248)
        Test_195494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 248)
        LoggingTestCase_195495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 18), Test_195494, 'LoggingTestCase')

        class Foo(LoggingTestCase_195495, ):

            @norecursion
            def tearDown(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'tearDown'
                module_type_store = module_type_store.open_function_context('tearDown', 249, 12, False)
                # Assigning a type to the variable 'self' (line 250)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 250, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.tearDown.__dict__.__setitem__('stypy_localization', localization)
                Foo.tearDown.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.tearDown.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.tearDown.__dict__.__setitem__('stypy_function_name', 'Foo.tearDown')
                Foo.tearDown.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.tearDown.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.tearDown.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.tearDown.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.tearDown.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.tearDown.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.tearDown.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.tearDown', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'tearDown', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'tearDown(...)' code ##################

                
                # Call to tearDown(...): (line 250)
                # Processing the call keyword arguments (line 250)
                kwargs_195502 = {}
                
                # Call to super(...): (line 250)
                # Processing the call arguments (line 250)
                # Getting the type of 'Foo' (line 250)
                Foo_195497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 22), 'Foo', False)
                # Getting the type of 'self' (line 250)
                self_195498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 27), 'self', False)
                # Processing the call keyword arguments (line 250)
                kwargs_195499 = {}
                # Getting the type of 'super' (line 250)
                super_195496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 16), 'super', False)
                # Calling super(args, kwargs) (line 250)
                super_call_result_195500 = invoke(stypy.reporting.localization.Localization(__file__, 250, 16), super_195496, *[Foo_195497, self_195498], **kwargs_195499)
                
                # Obtaining the member 'tearDown' of a type (line 250)
                tearDown_195501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 16), super_call_result_195500, 'tearDown')
                # Calling tearDown(args, kwargs) (line 250)
                tearDown_call_result_195503 = invoke(stypy.reporting.localization.Localization(__file__, 250, 16), tearDown_195501, *[], **kwargs_195502)
                
                
                # Call to RuntimeError(...): (line 251)
                # Processing the call arguments (line 251)
                str_195505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 251, 35), 'str', 'raised by Foo.tearDown')
                # Processing the call keyword arguments (line 251)
                kwargs_195506 = {}
                # Getting the type of 'RuntimeError' (line 251)
                RuntimeError_195504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 22), 'RuntimeError', False)
                # Calling RuntimeError(args, kwargs) (line 251)
                RuntimeError_call_result_195507 = invoke(stypy.reporting.localization.Localization(__file__, 251, 22), RuntimeError_195504, *[str_195505], **kwargs_195506)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 251, 16), RuntimeError_call_result_195507, 'raise parameter', BaseException)
                
                # ################# End of 'tearDown(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'tearDown' in the type store
                # Getting the type of 'stypy_return_type' (line 249)
                stypy_return_type_195508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195508)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'tearDown'
                return stypy_return_type_195508

        
        # Assigning a type to the variable 'Foo' (line 248)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 8), 'Foo', Foo)
        
        # Call to run(...): (line 253)
        # Processing the call arguments (line 253)
        # Getting the type of 'result' (line 253)
        result_195514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 24), 'result', False)
        # Processing the call keyword arguments (line 253)
        kwargs_195515 = {}
        
        # Call to Foo(...): (line 253)
        # Processing the call arguments (line 253)
        # Getting the type of 'events' (line 253)
        events_195510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 12), 'events', False)
        # Processing the call keyword arguments (line 253)
        kwargs_195511 = {}
        # Getting the type of 'Foo' (line 253)
        Foo_195509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 253)
        Foo_call_result_195512 = invoke(stypy.reporting.localization.Localization(__file__, 253, 8), Foo_195509, *[events_195510], **kwargs_195511)
        
        # Obtaining the member 'run' of a type (line 253)
        run_195513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 8), Foo_call_result_195512, 'run')
        # Calling run(args, kwargs) (line 253)
        run_call_result_195516 = invoke(stypy.reporting.localization.Localization(__file__, 253, 8), run_195513, *[result_195514], **kwargs_195515)
        
        
        # Assigning a List to a Name (line 254):
        
        # Assigning a List to a Name (line 254):
        
        # Obtaining an instance of the builtin type 'list' (line 254)
        list_195517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 254)
        # Adding element type (line 254)
        str_195518 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 20), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 19), list_195517, str_195518)
        # Adding element type (line 254)
        str_195519 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 33), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 19), list_195517, str_195519)
        # Adding element type (line 254)
        str_195520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 42), 'str', 'test')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 19), list_195517, str_195520)
        # Adding element type (line 254)
        str_195521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 50), 'str', 'tearDown')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 19), list_195517, str_195521)
        # Adding element type (line 254)
        str_195522 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 254, 62), 'str', 'addError')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 19), list_195517, str_195522)
        # Adding element type (line 254)
        str_195523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 20), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 254, 19), list_195517, str_195523)
        
        # Assigning a type to the variable 'expected' (line 254)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 254, 8), 'expected', list_195517)
        
        # Call to assertEqual(...): (line 256)
        # Processing the call arguments (line 256)
        # Getting the type of 'events' (line 256)
        events_195526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 25), 'events', False)
        # Getting the type of 'expected' (line 256)
        expected_195527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 33), 'expected', False)
        # Processing the call keyword arguments (line 256)
        kwargs_195528 = {}
        # Getting the type of 'self' (line 256)
        self_195524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 256)
        assertEqual_195525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 8), self_195524, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 256)
        assertEqual_call_result_195529 = invoke(stypy.reporting.localization.Localization(__file__, 256, 8), assertEqual_195525, *[events_195526, expected_195527], **kwargs_195528)
        
        
        # ################# End of 'test_run_call_order__error_in_tearDown(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__error_in_tearDown' in the type store
        # Getting the type of 'stypy_return_type' (line 244)
        stypy_return_type_195530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195530)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__error_in_tearDown'
        return stypy_return_type_195530


    @norecursion
    def test_run_call_order__error_in_tearDown_default_result(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order__error_in_tearDown_default_result'
        module_type_store = module_type_store.open_function_context('test_run_call_order__error_in_tearDown_default_result', 259, 4, False)
        # Assigning a type to the variable 'self' (line 260)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order__error_in_tearDown_default_result')
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order__error_in_tearDown_default_result.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order__error_in_tearDown_default_result', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order__error_in_tearDown_default_result', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order__error_in_tearDown_default_result(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'Test' (line 261)
        Test_195531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 18), 'Test')
        # Obtaining the member 'LoggingTestCase' of a type (line 261)
        LoggingTestCase_195532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 18), Test_195531, 'LoggingTestCase')

        class Foo(LoggingTestCase_195532, ):

            @norecursion
            def defaultTestResult(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'defaultTestResult'
                module_type_store = module_type_store.open_function_context('defaultTestResult', 262, 12, False)
                # Assigning a type to the variable 'self' (line 263)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Foo.defaultTestResult')
                Foo.defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.defaultTestResult', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'defaultTestResult', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'defaultTestResult(...)' code ##################

                
                # Call to LoggingResult(...): (line 263)
                # Processing the call arguments (line 263)
                # Getting the type of 'self' (line 263)
                self_195534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 37), 'self', False)
                # Obtaining the member 'events' of a type (line 263)
                events_195535 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 37), self_195534, 'events')
                # Processing the call keyword arguments (line 263)
                kwargs_195536 = {}
                # Getting the type of 'LoggingResult' (line 263)
                LoggingResult_195533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 23), 'LoggingResult', False)
                # Calling LoggingResult(args, kwargs) (line 263)
                LoggingResult_call_result_195537 = invoke(stypy.reporting.localization.Localization(__file__, 263, 23), LoggingResult_195533, *[events_195535], **kwargs_195536)
                
                # Assigning a type to the variable 'stypy_return_type' (line 263)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 263, 16), 'stypy_return_type', LoggingResult_call_result_195537)
                
                # ################# End of 'defaultTestResult(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'defaultTestResult' in the type store
                # Getting the type of 'stypy_return_type' (line 262)
                stypy_return_type_195538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195538)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'defaultTestResult'
                return stypy_return_type_195538


            @norecursion
            def tearDown(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'tearDown'
                module_type_store = module_type_store.open_function_context('tearDown', 264, 12, False)
                # Assigning a type to the variable 'self' (line 265)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.tearDown.__dict__.__setitem__('stypy_localization', localization)
                Foo.tearDown.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.tearDown.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.tearDown.__dict__.__setitem__('stypy_function_name', 'Foo.tearDown')
                Foo.tearDown.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.tearDown.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.tearDown.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.tearDown.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.tearDown.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.tearDown.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.tearDown.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.tearDown', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'tearDown', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'tearDown(...)' code ##################

                
                # Call to tearDown(...): (line 265)
                # Processing the call keyword arguments (line 265)
                kwargs_195545 = {}
                
                # Call to super(...): (line 265)
                # Processing the call arguments (line 265)
                # Getting the type of 'Foo' (line 265)
                Foo_195540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 22), 'Foo', False)
                # Getting the type of 'self' (line 265)
                self_195541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 27), 'self', False)
                # Processing the call keyword arguments (line 265)
                kwargs_195542 = {}
                # Getting the type of 'super' (line 265)
                super_195539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 16), 'super', False)
                # Calling super(args, kwargs) (line 265)
                super_call_result_195543 = invoke(stypy.reporting.localization.Localization(__file__, 265, 16), super_195539, *[Foo_195540, self_195541], **kwargs_195542)
                
                # Obtaining the member 'tearDown' of a type (line 265)
                tearDown_195544 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 16), super_call_result_195543, 'tearDown')
                # Calling tearDown(args, kwargs) (line 265)
                tearDown_call_result_195546 = invoke(stypy.reporting.localization.Localization(__file__, 265, 16), tearDown_195544, *[], **kwargs_195545)
                
                
                # Call to RuntimeError(...): (line 266)
                # Processing the call arguments (line 266)
                str_195548 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 35), 'str', 'raised by Foo.tearDown')
                # Processing the call keyword arguments (line 266)
                kwargs_195549 = {}
                # Getting the type of 'RuntimeError' (line 266)
                RuntimeError_195547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 22), 'RuntimeError', False)
                # Calling RuntimeError(args, kwargs) (line 266)
                RuntimeError_call_result_195550 = invoke(stypy.reporting.localization.Localization(__file__, 266, 22), RuntimeError_195547, *[str_195548], **kwargs_195549)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 266, 16), RuntimeError_call_result_195550, 'raise parameter', BaseException)
                
                # ################# End of 'tearDown(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'tearDown' in the type store
                # Getting the type of 'stypy_return_type' (line 264)
                stypy_return_type_195551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195551)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'tearDown'
                return stypy_return_type_195551

        
        # Assigning a type to the variable 'Foo' (line 261)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'Foo', Foo)
        
        # Assigning a List to a Name (line 268):
        
        # Assigning a List to a Name (line 268):
        
        # Obtaining an instance of the builtin type 'list' (line 268)
        list_195552 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 268, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 268)
        
        # Assigning a type to the variable 'events' (line 268)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 268, 8), 'events', list_195552)
        
        # Call to run(...): (line 269)
        # Processing the call keyword arguments (line 269)
        kwargs_195558 = {}
        
        # Call to Foo(...): (line 269)
        # Processing the call arguments (line 269)
        # Getting the type of 'events' (line 269)
        events_195554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'events', False)
        # Processing the call keyword arguments (line 269)
        kwargs_195555 = {}
        # Getting the type of 'Foo' (line 269)
        Foo_195553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 269)
        Foo_call_result_195556 = invoke(stypy.reporting.localization.Localization(__file__, 269, 8), Foo_195553, *[events_195554], **kwargs_195555)
        
        # Obtaining the member 'run' of a type (line 269)
        run_195557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 8), Foo_call_result_195556, 'run')
        # Calling run(args, kwargs) (line 269)
        run_call_result_195559 = invoke(stypy.reporting.localization.Localization(__file__, 269, 8), run_195557, *[], **kwargs_195558)
        
        
        # Assigning a List to a Name (line 270):
        
        # Assigning a List to a Name (line 270):
        
        # Obtaining an instance of the builtin type 'list' (line 270)
        list_195560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 270)
        # Adding element type (line 270)
        str_195561 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 20), 'str', 'startTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195561)
        # Adding element type (line 270)
        str_195562 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 36), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195562)
        # Adding element type (line 270)
        str_195563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 49), 'str', 'setUp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195563)
        # Adding element type (line 270)
        str_195564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 58), 'str', 'test')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195564)
        # Adding element type (line 270)
        str_195565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 66), 'str', 'tearDown')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195565)
        # Adding element type (line 270)
        str_195566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 20), 'str', 'addError')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195566)
        # Adding element type (line 270)
        str_195567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 32), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195567)
        # Adding element type (line 270)
        str_195568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 44), 'str', 'stopTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 19), list_195560, str_195568)
        
        # Assigning a type to the variable 'expected' (line 270)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'expected', list_195560)
        
        # Call to assertEqual(...): (line 272)
        # Processing the call arguments (line 272)
        # Getting the type of 'events' (line 272)
        events_195571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 25), 'events', False)
        # Getting the type of 'expected' (line 272)
        expected_195572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 33), 'expected', False)
        # Processing the call keyword arguments (line 272)
        kwargs_195573 = {}
        # Getting the type of 'self' (line 272)
        self_195569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 272)
        assertEqual_195570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 272, 8), self_195569, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 272)
        assertEqual_call_result_195574 = invoke(stypy.reporting.localization.Localization(__file__, 272, 8), assertEqual_195570, *[events_195571, expected_195572], **kwargs_195573)
        
        
        # ################# End of 'test_run_call_order__error_in_tearDown_default_result(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order__error_in_tearDown_default_result' in the type store
        # Getting the type of 'stypy_return_type' (line 259)
        stypy_return_type_195575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195575)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order__error_in_tearDown_default_result'
        return stypy_return_type_195575


    @norecursion
    def test_run_call_order_default_result(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run_call_order_default_result'
        module_type_store = module_type_store.open_function_context('test_run_call_order_default_result', 276, 4, False)
        # Assigning a type to the variable 'self' (line 277)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run_call_order_default_result')
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run_call_order_default_result.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run_call_order_default_result', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run_call_order_default_result', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run_call_order_default_result(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 278)
        unittest_195576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 278)
        TestCase_195577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 18), unittest_195576, 'TestCase')

        class Foo(TestCase_195577, ):

            @norecursion
            def defaultTestResult(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'defaultTestResult'
                module_type_store = module_type_store.open_function_context('defaultTestResult', 279, 12, False)
                # Assigning a type to the variable 'self' (line 280)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Foo.defaultTestResult')
                Foo.defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.defaultTestResult', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'defaultTestResult', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'defaultTestResult(...)' code ##################

                
                # Call to ResultWithNoStartTestRunStopTestRun(...): (line 280)
                # Processing the call keyword arguments (line 280)
                kwargs_195579 = {}
                # Getting the type of 'ResultWithNoStartTestRunStopTestRun' (line 280)
                ResultWithNoStartTestRunStopTestRun_195578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 23), 'ResultWithNoStartTestRunStopTestRun', False)
                # Calling ResultWithNoStartTestRunStopTestRun(args, kwargs) (line 280)
                ResultWithNoStartTestRunStopTestRun_call_result_195580 = invoke(stypy.reporting.localization.Localization(__file__, 280, 23), ResultWithNoStartTestRunStopTestRun_195578, *[], **kwargs_195579)
                
                # Assigning a type to the variable 'stypy_return_type' (line 280)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 16), 'stypy_return_type', ResultWithNoStartTestRunStopTestRun_call_result_195580)
                
                # ################# End of 'defaultTestResult(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'defaultTestResult' in the type store
                # Getting the type of 'stypy_return_type' (line 279)
                stypy_return_type_195581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195581)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'defaultTestResult'
                return stypy_return_type_195581


            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 281, 12, False)
                # Assigning a type to the variable 'self' (line 282)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                pass
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 281)
                stypy_return_type_195582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195582)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195582

        
        # Assigning a type to the variable 'Foo' (line 278)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 8), 'Foo', Foo)
        
        # Call to run(...): (line 284)
        # Processing the call keyword arguments (line 284)
        kwargs_195588 = {}
        
        # Call to Foo(...): (line 284)
        # Processing the call arguments (line 284)
        str_195584 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 12), 'str', 'test')
        # Processing the call keyword arguments (line 284)
        kwargs_195585 = {}
        # Getting the type of 'Foo' (line 284)
        Foo_195583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 284)
        Foo_call_result_195586 = invoke(stypy.reporting.localization.Localization(__file__, 284, 8), Foo_195583, *[str_195584], **kwargs_195585)
        
        # Obtaining the member 'run' of a type (line 284)
        run_195587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 8), Foo_call_result_195586, 'run')
        # Calling run(args, kwargs) (line 284)
        run_call_result_195589 = invoke(stypy.reporting.localization.Localization(__file__, 284, 8), run_195587, *[], **kwargs_195588)
        
        
        # ################# End of 'test_run_call_order_default_result(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run_call_order_default_result' in the type store
        # Getting the type of 'stypy_return_type' (line 276)
        stypy_return_type_195590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195590)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run_call_order_default_result'
        return stypy_return_type_195590


    @norecursion
    def test_failureException__default(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_failureException__default'
        module_type_store = module_type_store.open_function_context('test_failureException__default', 291, 4, False)
        # Assigning a type to the variable 'self' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_failureException__default')
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_failureException__default.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_failureException__default', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_failureException__default', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_failureException__default(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 292)
        unittest_195591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 292, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 292)
        TestCase_195592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 292, 18), unittest_195591, 'TestCase')

        class Foo(TestCase_195592, ):

            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 293, 12, False)
                # Assigning a type to the variable 'self' (line 294)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                pass
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 293)
                stypy_return_type_195593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195593)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195593

        
        # Assigning a type to the variable 'Foo' (line 292)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 292, 8), 'Foo', Foo)
        
        # Call to assertIs(...): (line 296)
        # Processing the call arguments (line 296)
        
        # Call to Foo(...): (line 296)
        # Processing the call arguments (line 296)
        str_195597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 296, 26), 'str', 'test')
        # Processing the call keyword arguments (line 296)
        kwargs_195598 = {}
        # Getting the type of 'Foo' (line 296)
        Foo_195596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 22), 'Foo', False)
        # Calling Foo(args, kwargs) (line 296)
        Foo_call_result_195599 = invoke(stypy.reporting.localization.Localization(__file__, 296, 22), Foo_195596, *[str_195597], **kwargs_195598)
        
        # Obtaining the member 'failureException' of a type (line 296)
        failureException_195600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 22), Foo_call_result_195599, 'failureException')
        # Getting the type of 'AssertionError' (line 296)
        AssertionError_195601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 52), 'AssertionError', False)
        # Processing the call keyword arguments (line 296)
        kwargs_195602 = {}
        # Getting the type of 'self' (line 296)
        self_195594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'self', False)
        # Obtaining the member 'assertIs' of a type (line 296)
        assertIs_195595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 8), self_195594, 'assertIs')
        # Calling assertIs(args, kwargs) (line 296)
        assertIs_call_result_195603 = invoke(stypy.reporting.localization.Localization(__file__, 296, 8), assertIs_195595, *[failureException_195600, AssertionError_195601], **kwargs_195602)
        
        
        # ################# End of 'test_failureException__default(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_failureException__default' in the type store
        # Getting the type of 'stypy_return_type' (line 291)
        stypy_return_type_195604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195604)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_failureException__default'
        return stypy_return_type_195604


    @norecursion
    def test_failureException__subclassing__explicit_raise(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_failureException__subclassing__explicit_raise'
        module_type_store = module_type_store.open_function_context('test_failureException__subclassing__explicit_raise', 304, 4, False)
        # Assigning a type to the variable 'self' (line 305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_failureException__subclassing__explicit_raise')
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_failureException__subclassing__explicit_raise.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_failureException__subclassing__explicit_raise', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_failureException__subclassing__explicit_raise', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_failureException__subclassing__explicit_raise(...)' code ##################

        
        # Assigning a List to a Name (line 305):
        
        # Assigning a List to a Name (line 305):
        
        # Obtaining an instance of the builtin type 'list' (line 305)
        list_195605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 305, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 305)
        
        # Assigning a type to the variable 'events' (line 305)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 305, 8), 'events', list_195605)
        
        # Assigning a Call to a Name (line 306):
        
        # Assigning a Call to a Name (line 306):
        
        # Call to LoggingResult(...): (line 306)
        # Processing the call arguments (line 306)
        # Getting the type of 'events' (line 306)
        events_195607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 31), 'events', False)
        # Processing the call keyword arguments (line 306)
        kwargs_195608 = {}
        # Getting the type of 'LoggingResult' (line 306)
        LoggingResult_195606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 17), 'LoggingResult', False)
        # Calling LoggingResult(args, kwargs) (line 306)
        LoggingResult_call_result_195609 = invoke(stypy.reporting.localization.Localization(__file__, 306, 17), LoggingResult_195606, *[events_195607], **kwargs_195608)
        
        # Assigning a type to the variable 'result' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'result', LoggingResult_call_result_195609)
        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 308)
        unittest_195610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 308)
        TestCase_195611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 18), unittest_195610, 'TestCase')

        class Foo(TestCase_195611, ):

            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 309, 12, False)
                # Assigning a type to the variable 'self' (line 310)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 310, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                
                # Call to RuntimeError(...): (line 310)
                # Processing the call keyword arguments (line 310)
                kwargs_195613 = {}
                # Getting the type of 'RuntimeError' (line 310)
                RuntimeError_195612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 22), 'RuntimeError', False)
                # Calling RuntimeError(args, kwargs) (line 310)
                RuntimeError_call_result_195614 = invoke(stypy.reporting.localization.Localization(__file__, 310, 22), RuntimeError_195612, *[], **kwargs_195613)
                
                ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 310, 16), RuntimeError_call_result_195614, 'raise parameter', BaseException)
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 309)
                stypy_return_type_195615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195615)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195615

            
            # Assigning a Name to a Name (line 312):
            
            # Assigning a Name to a Name (line 312):
            # Getting the type of 'RuntimeError' (line 312)
            RuntimeError_195616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 31), 'RuntimeError')
            # Assigning a type to the variable 'failureException' (line 312)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 12), 'failureException', RuntimeError_195616)
        
        # Assigning a type to the variable 'Foo' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'Foo', Foo)
        
        # Call to assertIs(...): (line 314)
        # Processing the call arguments (line 314)
        
        # Call to Foo(...): (line 314)
        # Processing the call arguments (line 314)
        str_195620 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 26), 'str', 'test')
        # Processing the call keyword arguments (line 314)
        kwargs_195621 = {}
        # Getting the type of 'Foo' (line 314)
        Foo_195619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 22), 'Foo', False)
        # Calling Foo(args, kwargs) (line 314)
        Foo_call_result_195622 = invoke(stypy.reporting.localization.Localization(__file__, 314, 22), Foo_195619, *[str_195620], **kwargs_195621)
        
        # Obtaining the member 'failureException' of a type (line 314)
        failureException_195623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 22), Foo_call_result_195622, 'failureException')
        # Getting the type of 'RuntimeError' (line 314)
        RuntimeError_195624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 52), 'RuntimeError', False)
        # Processing the call keyword arguments (line 314)
        kwargs_195625 = {}
        # Getting the type of 'self' (line 314)
        self_195617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'self', False)
        # Obtaining the member 'assertIs' of a type (line 314)
        assertIs_195618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 8), self_195617, 'assertIs')
        # Calling assertIs(args, kwargs) (line 314)
        assertIs_call_result_195626 = invoke(stypy.reporting.localization.Localization(__file__, 314, 8), assertIs_195618, *[failureException_195623, RuntimeError_195624], **kwargs_195625)
        
        
        # Call to run(...): (line 317)
        # Processing the call arguments (line 317)
        # Getting the type of 'result' (line 317)
        result_195632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 24), 'result', False)
        # Processing the call keyword arguments (line 317)
        kwargs_195633 = {}
        
        # Call to Foo(...): (line 317)
        # Processing the call arguments (line 317)
        str_195628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 12), 'str', 'test')
        # Processing the call keyword arguments (line 317)
        kwargs_195629 = {}
        # Getting the type of 'Foo' (line 317)
        Foo_195627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 317)
        Foo_call_result_195630 = invoke(stypy.reporting.localization.Localization(__file__, 317, 8), Foo_195627, *[str_195628], **kwargs_195629)
        
        # Obtaining the member 'run' of a type (line 317)
        run_195631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 8), Foo_call_result_195630, 'run')
        # Calling run(args, kwargs) (line 317)
        run_call_result_195634 = invoke(stypy.reporting.localization.Localization(__file__, 317, 8), run_195631, *[result_195632], **kwargs_195633)
        
        
        # Assigning a List to a Name (line 318):
        
        # Assigning a List to a Name (line 318):
        
        # Obtaining an instance of the builtin type 'list' (line 318)
        list_195635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 318)
        # Adding element type (line 318)
        str_195636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 20), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 318, 19), list_195635, str_195636)
        # Adding element type (line 318)
        str_195637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 33), 'str', 'addFailure')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 318, 19), list_195635, str_195637)
        # Adding element type (line 318)
        str_195638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 47), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 318, 19), list_195635, str_195638)
        
        # Assigning a type to the variable 'expected' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'expected', list_195635)
        
        # Call to assertEqual(...): (line 319)
        # Processing the call arguments (line 319)
        # Getting the type of 'events' (line 319)
        events_195641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 25), 'events', False)
        # Getting the type of 'expected' (line 319)
        expected_195642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 33), 'expected', False)
        # Processing the call keyword arguments (line 319)
        kwargs_195643 = {}
        # Getting the type of 'self' (line 319)
        self_195639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 319)
        assertEqual_195640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 8), self_195639, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 319)
        assertEqual_call_result_195644 = invoke(stypy.reporting.localization.Localization(__file__, 319, 8), assertEqual_195640, *[events_195641, expected_195642], **kwargs_195643)
        
        
        # ################# End of 'test_failureException__subclassing__explicit_raise(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_failureException__subclassing__explicit_raise' in the type store
        # Getting the type of 'stypy_return_type' (line 304)
        stypy_return_type_195645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195645)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_failureException__subclassing__explicit_raise'
        return stypy_return_type_195645


    @norecursion
    def test_failureException__subclassing__implicit_raise(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_failureException__subclassing__implicit_raise'
        module_type_store = module_type_store.open_function_context('test_failureException__subclassing__implicit_raise', 327, 4, False)
        # Assigning a type to the variable 'self' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_failureException__subclassing__implicit_raise')
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_failureException__subclassing__implicit_raise.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_failureException__subclassing__implicit_raise', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_failureException__subclassing__implicit_raise', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_failureException__subclassing__implicit_raise(...)' code ##################

        
        # Assigning a List to a Name (line 328):
        
        # Assigning a List to a Name (line 328):
        
        # Obtaining an instance of the builtin type 'list' (line 328)
        list_195646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 328)
        
        # Assigning a type to the variable 'events' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 8), 'events', list_195646)
        
        # Assigning a Call to a Name (line 329):
        
        # Assigning a Call to a Name (line 329):
        
        # Call to LoggingResult(...): (line 329)
        # Processing the call arguments (line 329)
        # Getting the type of 'events' (line 329)
        events_195648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 31), 'events', False)
        # Processing the call keyword arguments (line 329)
        kwargs_195649 = {}
        # Getting the type of 'LoggingResult' (line 329)
        LoggingResult_195647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 17), 'LoggingResult', False)
        # Calling LoggingResult(args, kwargs) (line 329)
        LoggingResult_call_result_195650 = invoke(stypy.reporting.localization.Localization(__file__, 329, 17), LoggingResult_195647, *[events_195648], **kwargs_195649)
        
        # Assigning a type to the variable 'result' (line 329)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 8), 'result', LoggingResult_call_result_195650)
        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 331)
        unittest_195651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 331, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 331)
        TestCase_195652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 331, 18), unittest_195651, 'TestCase')

        class Foo(TestCase_195652, ):

            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 332, 12, False)
                # Assigning a type to the variable 'self' (line 333)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                
                # Call to fail(...): (line 333)
                # Processing the call arguments (line 333)
                str_195655 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 333, 26), 'str', 'foo')
                # Processing the call keyword arguments (line 333)
                kwargs_195656 = {}
                # Getting the type of 'self' (line 333)
                self_195653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 16), 'self', False)
                # Obtaining the member 'fail' of a type (line 333)
                fail_195654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 333, 16), self_195653, 'fail')
                # Calling fail(args, kwargs) (line 333)
                fail_call_result_195657 = invoke(stypy.reporting.localization.Localization(__file__, 333, 16), fail_195654, *[str_195655], **kwargs_195656)
                
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 332)
                stypy_return_type_195658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195658)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195658

            
            # Assigning a Name to a Name (line 335):
            
            # Assigning a Name to a Name (line 335):
            # Getting the type of 'RuntimeError' (line 335)
            RuntimeError_195659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 31), 'RuntimeError')
            # Assigning a type to the variable 'failureException' (line 335)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 12), 'failureException', RuntimeError_195659)
        
        # Assigning a type to the variable 'Foo' (line 331)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 331, 8), 'Foo', Foo)
        
        # Call to assertIs(...): (line 337)
        # Processing the call arguments (line 337)
        
        # Call to Foo(...): (line 337)
        # Processing the call arguments (line 337)
        str_195663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 337, 26), 'str', 'test')
        # Processing the call keyword arguments (line 337)
        kwargs_195664 = {}
        # Getting the type of 'Foo' (line 337)
        Foo_195662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 22), 'Foo', False)
        # Calling Foo(args, kwargs) (line 337)
        Foo_call_result_195665 = invoke(stypy.reporting.localization.Localization(__file__, 337, 22), Foo_195662, *[str_195663], **kwargs_195664)
        
        # Obtaining the member 'failureException' of a type (line 337)
        failureException_195666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 22), Foo_call_result_195665, 'failureException')
        # Getting the type of 'RuntimeError' (line 337)
        RuntimeError_195667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 52), 'RuntimeError', False)
        # Processing the call keyword arguments (line 337)
        kwargs_195668 = {}
        # Getting the type of 'self' (line 337)
        self_195660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'self', False)
        # Obtaining the member 'assertIs' of a type (line 337)
        assertIs_195661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 8), self_195660, 'assertIs')
        # Calling assertIs(args, kwargs) (line 337)
        assertIs_call_result_195669 = invoke(stypy.reporting.localization.Localization(__file__, 337, 8), assertIs_195661, *[failureException_195666, RuntimeError_195667], **kwargs_195668)
        
        
        # Call to run(...): (line 340)
        # Processing the call arguments (line 340)
        # Getting the type of 'result' (line 340)
        result_195675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 24), 'result', False)
        # Processing the call keyword arguments (line 340)
        kwargs_195676 = {}
        
        # Call to Foo(...): (line 340)
        # Processing the call arguments (line 340)
        str_195671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 12), 'str', 'test')
        # Processing the call keyword arguments (line 340)
        kwargs_195672 = {}
        # Getting the type of 'Foo' (line 340)
        Foo_195670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 340)
        Foo_call_result_195673 = invoke(stypy.reporting.localization.Localization(__file__, 340, 8), Foo_195670, *[str_195671], **kwargs_195672)
        
        # Obtaining the member 'run' of a type (line 340)
        run_195674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 8), Foo_call_result_195673, 'run')
        # Calling run(args, kwargs) (line 340)
        run_call_result_195677 = invoke(stypy.reporting.localization.Localization(__file__, 340, 8), run_195674, *[result_195675], **kwargs_195676)
        
        
        # Assigning a List to a Name (line 341):
        
        # Assigning a List to a Name (line 341):
        
        # Obtaining an instance of the builtin type 'list' (line 341)
        list_195678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 341)
        # Adding element type (line 341)
        str_195679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 20), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 19), list_195678, str_195679)
        # Adding element type (line 341)
        str_195680 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 33), 'str', 'addFailure')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 19), list_195678, str_195680)
        # Adding element type (line 341)
        str_195681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 341, 47), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 341, 19), list_195678, str_195681)
        
        # Assigning a type to the variable 'expected' (line 341)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'expected', list_195678)
        
        # Call to assertEqual(...): (line 342)
        # Processing the call arguments (line 342)
        # Getting the type of 'events' (line 342)
        events_195684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 25), 'events', False)
        # Getting the type of 'expected' (line 342)
        expected_195685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 33), 'expected', False)
        # Processing the call keyword arguments (line 342)
        kwargs_195686 = {}
        # Getting the type of 'self' (line 342)
        self_195682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 342)
        assertEqual_195683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 8), self_195682, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 342)
        assertEqual_call_result_195687 = invoke(stypy.reporting.localization.Localization(__file__, 342, 8), assertEqual_195683, *[events_195684, expected_195685], **kwargs_195686)
        
        
        # ################# End of 'test_failureException__subclassing__implicit_raise(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_failureException__subclassing__implicit_raise' in the type store
        # Getting the type of 'stypy_return_type' (line 327)
        stypy_return_type_195688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195688)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_failureException__subclassing__implicit_raise'
        return stypy_return_type_195688


    @norecursion
    def test_setUp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_setUp'
        module_type_store = module_type_store.open_function_context('test_setUp', 345, 4, False)
        # Assigning a type to the variable 'self' (line 346)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 346, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_setUp')
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_setUp.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_setUp', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_setUp', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_setUp(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 346)
        unittest_195689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 346)
        TestCase_195690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 346, 18), unittest_195689, 'TestCase')

        class Foo(TestCase_195690, ):

            @norecursion
            def runTest(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'runTest'
                module_type_store = module_type_store.open_function_context('runTest', 347, 12, False)
                # Assigning a type to the variable 'self' (line 348)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.runTest.__dict__.__setitem__('stypy_localization', localization)
                Foo.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.runTest.__dict__.__setitem__('stypy_function_name', 'Foo.runTest')
                Foo.runTest.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.runTest', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'runTest', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'runTest(...)' code ##################

                pass
                
                # ################# End of 'runTest(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'runTest' in the type store
                # Getting the type of 'stypy_return_type' (line 347)
                stypy_return_type_195691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195691)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'runTest'
                return stypy_return_type_195691

        
        # Assigning a type to the variable 'Foo' (line 346)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 346, 8), 'Foo', Foo)
        
        # Call to setUp(...): (line 351)
        # Processing the call keyword arguments (line 351)
        kwargs_195696 = {}
        
        # Call to Foo(...): (line 351)
        # Processing the call keyword arguments (line 351)
        kwargs_195693 = {}
        # Getting the type of 'Foo' (line 351)
        Foo_195692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 351)
        Foo_call_result_195694 = invoke(stypy.reporting.localization.Localization(__file__, 351, 8), Foo_195692, *[], **kwargs_195693)
        
        # Obtaining the member 'setUp' of a type (line 351)
        setUp_195695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 8), Foo_call_result_195694, 'setUp')
        # Calling setUp(args, kwargs) (line 351)
        setUp_call_result_195697 = invoke(stypy.reporting.localization.Localization(__file__, 351, 8), setUp_195695, *[], **kwargs_195696)
        
        
        # ################# End of 'test_setUp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_setUp' in the type store
        # Getting the type of 'stypy_return_type' (line 345)
        stypy_return_type_195698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195698)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_setUp'
        return stypy_return_type_195698


    @norecursion
    def test_tearDown(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_tearDown'
        module_type_store = module_type_store.open_function_context('test_tearDown', 354, 4, False)
        # Assigning a type to the variable 'self' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_tearDown')
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_tearDown.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_tearDown', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_tearDown', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_tearDown(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 355)
        unittest_195699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 355)
        TestCase_195700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 18), unittest_195699, 'TestCase')

        class Foo(TestCase_195700, ):

            @norecursion
            def runTest(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'runTest'
                module_type_store = module_type_store.open_function_context('runTest', 356, 12, False)
                # Assigning a type to the variable 'self' (line 357)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.runTest.__dict__.__setitem__('stypy_localization', localization)
                Foo.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.runTest.__dict__.__setitem__('stypy_function_name', 'Foo.runTest')
                Foo.runTest.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.runTest', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'runTest', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'runTest(...)' code ##################

                pass
                
                # ################# End of 'runTest(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'runTest' in the type store
                # Getting the type of 'stypy_return_type' (line 356)
                stypy_return_type_195701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195701)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'runTest'
                return stypy_return_type_195701

        
        # Assigning a type to the variable 'Foo' (line 355)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 8), 'Foo', Foo)
        
        # Call to tearDown(...): (line 360)
        # Processing the call keyword arguments (line 360)
        kwargs_195706 = {}
        
        # Call to Foo(...): (line 360)
        # Processing the call keyword arguments (line 360)
        kwargs_195703 = {}
        # Getting the type of 'Foo' (line 360)
        Foo_195702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 360)
        Foo_call_result_195704 = invoke(stypy.reporting.localization.Localization(__file__, 360, 8), Foo_195702, *[], **kwargs_195703)
        
        # Obtaining the member 'tearDown' of a type (line 360)
        tearDown_195705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 360, 8), Foo_call_result_195704, 'tearDown')
        # Calling tearDown(args, kwargs) (line 360)
        tearDown_call_result_195707 = invoke(stypy.reporting.localization.Localization(__file__, 360, 8), tearDown_195705, *[], **kwargs_195706)
        
        
        # ################# End of 'test_tearDown(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_tearDown' in the type store
        # Getting the type of 'stypy_return_type' (line 354)
        stypy_return_type_195708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195708)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_tearDown'
        return stypy_return_type_195708


    @norecursion
    def test_id(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_id'
        module_type_store = module_type_store.open_function_context('test_id', 368, 4, False)
        # Assigning a type to the variable 'self' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_id.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_id')
        Test_TestCase.test_id.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_id.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_id.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_id', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_id', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_id(...)' code ##################

        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 369)
        unittest_195709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 369)
        TestCase_195710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 18), unittest_195709, 'TestCase')

        class Foo(TestCase_195710, ):

            @norecursion
            def runTest(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'runTest'
                module_type_store = module_type_store.open_function_context('runTest', 370, 12, False)
                # Assigning a type to the variable 'self' (line 371)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.runTest.__dict__.__setitem__('stypy_localization', localization)
                Foo.runTest.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.runTest.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.runTest.__dict__.__setitem__('stypy_function_name', 'Foo.runTest')
                Foo.runTest.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.runTest.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.runTest.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.runTest.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.runTest.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.runTest.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.runTest', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'runTest', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'runTest(...)' code ##################

                pass
                
                # ################# End of 'runTest(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'runTest' in the type store
                # Getting the type of 'stypy_return_type' (line 370)
                stypy_return_type_195711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195711)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'runTest'
                return stypy_return_type_195711

        
        # Assigning a type to the variable 'Foo' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 8), 'Foo', Foo)
        
        # Call to assertIsInstance(...): (line 373)
        # Processing the call arguments (line 373)
        
        # Call to id(...): (line 373)
        # Processing the call keyword arguments (line 373)
        kwargs_195718 = {}
        
        # Call to Foo(...): (line 373)
        # Processing the call keyword arguments (line 373)
        kwargs_195715 = {}
        # Getting the type of 'Foo' (line 373)
        Foo_195714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 30), 'Foo', False)
        # Calling Foo(args, kwargs) (line 373)
        Foo_call_result_195716 = invoke(stypy.reporting.localization.Localization(__file__, 373, 30), Foo_195714, *[], **kwargs_195715)
        
        # Obtaining the member 'id' of a type (line 373)
        id_195717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 30), Foo_call_result_195716, 'id')
        # Calling id(args, kwargs) (line 373)
        id_call_result_195719 = invoke(stypy.reporting.localization.Localization(__file__, 373, 30), id_195717, *[], **kwargs_195718)
        
        # Getting the type of 'basestring' (line 373)
        basestring_195720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 42), 'basestring', False)
        # Processing the call keyword arguments (line 373)
        kwargs_195721 = {}
        # Getting the type of 'self' (line 373)
        self_195712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'self', False)
        # Obtaining the member 'assertIsInstance' of a type (line 373)
        assertIsInstance_195713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 8), self_195712, 'assertIsInstance')
        # Calling assertIsInstance(args, kwargs) (line 373)
        assertIsInstance_call_result_195722 = invoke(stypy.reporting.localization.Localization(__file__, 373, 8), assertIsInstance_195713, *[id_call_result_195719, basestring_195720], **kwargs_195721)
        
        
        # ################# End of 'test_id(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_id' in the type store
        # Getting the type of 'stypy_return_type' (line 368)
        stypy_return_type_195723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195723)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_id'
        return stypy_return_type_195723


    @norecursion
    def test_run__uses_defaultTestResult(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'test_run__uses_defaultTestResult'
        module_type_store = module_type_store.open_function_context('test_run__uses_defaultTestResult', 379, 4, False)
        # Assigning a type to the variable 'self' (line 380)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 380, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.test_run__uses_defaultTestResult')
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.test_run__uses_defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.test_run__uses_defaultTestResult', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'test_run__uses_defaultTestResult', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'test_run__uses_defaultTestResult(...)' code ##################

        
        # Assigning a List to a Name (line 380):
        
        # Assigning a List to a Name (line 380):
        
        # Obtaining an instance of the builtin type 'list' (line 380)
        list_195724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 380, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 380)
        
        # Assigning a type to the variable 'events' (line 380)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 380, 8), 'events', list_195724)
        # Declaration of the 'Foo' class
        # Getting the type of 'unittest' (line 382)
        unittest_195725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 382, 18), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 382)
        TestCase_195726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 382, 18), unittest_195725, 'TestCase')

        class Foo(TestCase_195726, ):

            @norecursion
            def test(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test'
                module_type_store = module_type_store.open_function_context('test', 383, 12, False)
                # Assigning a type to the variable 'self' (line 384)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 384, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.test.__dict__.__setitem__('stypy_localization', localization)
                Foo.test.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.test.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.test.__dict__.__setitem__('stypy_function_name', 'Foo.test')
                Foo.test.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.test.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.test.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.test.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.test.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.test.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.test', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test(...)' code ##################

                
                # Call to append(...): (line 384)
                # Processing the call arguments (line 384)
                str_195729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 384, 30), 'str', 'test')
                # Processing the call keyword arguments (line 384)
                kwargs_195730 = {}
                # Getting the type of 'events' (line 384)
                events_195727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 16), 'events', False)
                # Obtaining the member 'append' of a type (line 384)
                append_195728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 16), events_195727, 'append')
                # Calling append(args, kwargs) (line 384)
                append_call_result_195731 = invoke(stypy.reporting.localization.Localization(__file__, 384, 16), append_195728, *[str_195729], **kwargs_195730)
                
                
                # ################# End of 'test(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test' in the type store
                # Getting the type of 'stypy_return_type' (line 383)
                stypy_return_type_195732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195732)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test'
                return stypy_return_type_195732


            @norecursion
            def defaultTestResult(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'defaultTestResult'
                module_type_store = module_type_store.open_function_context('defaultTestResult', 386, 12, False)
                # Assigning a type to the variable 'self' (line 387)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Foo.defaultTestResult.__dict__.__setitem__('stypy_localization', localization)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_type_store', module_type_store)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_function_name', 'Foo.defaultTestResult')
                Foo.defaultTestResult.__dict__.__setitem__('stypy_param_names_list', [])
                Foo.defaultTestResult.__dict__.__setitem__('stypy_varargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_defaults', defaults)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_varargs', varargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Foo.defaultTestResult.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Foo.defaultTestResult', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'defaultTestResult', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'defaultTestResult(...)' code ##################

                
                # Call to LoggingResult(...): (line 387)
                # Processing the call arguments (line 387)
                # Getting the type of 'events' (line 387)
                events_195734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 37), 'events', False)
                # Processing the call keyword arguments (line 387)
                kwargs_195735 = {}
                # Getting the type of 'LoggingResult' (line 387)
                LoggingResult_195733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 23), 'LoggingResult', False)
                # Calling LoggingResult(args, kwargs) (line 387)
                LoggingResult_call_result_195736 = invoke(stypy.reporting.localization.Localization(__file__, 387, 23), LoggingResult_195733, *[events_195734], **kwargs_195735)
                
                # Assigning a type to the variable 'stypy_return_type' (line 387)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 16), 'stypy_return_type', LoggingResult_call_result_195736)
                
                # ################# End of 'defaultTestResult(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'defaultTestResult' in the type store
                # Getting the type of 'stypy_return_type' (line 386)
                stypy_return_type_195737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 386, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_195737)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'defaultTestResult'
                return stypy_return_type_195737

        
        # Assigning a type to the variable 'Foo' (line 382)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 382, 8), 'Foo', Foo)
        
        # Call to run(...): (line 390)
        # Processing the call keyword arguments (line 390)
        kwargs_195743 = {}
        
        # Call to Foo(...): (line 390)
        # Processing the call arguments (line 390)
        str_195739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 12), 'str', 'test')
        # Processing the call keyword arguments (line 390)
        kwargs_195740 = {}
        # Getting the type of 'Foo' (line 390)
        Foo_195738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 8), 'Foo', False)
        # Calling Foo(args, kwargs) (line 390)
        Foo_call_result_195741 = invoke(stypy.reporting.localization.Localization(__file__, 390, 8), Foo_195738, *[str_195739], **kwargs_195740)
        
        # Obtaining the member 'run' of a type (line 390)
        run_195742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 8), Foo_call_result_195741, 'run')
        # Calling run(args, kwargs) (line 390)
        run_call_result_195744 = invoke(stypy.reporting.localization.Localization(__file__, 390, 8), run_195742, *[], **kwargs_195743)
        
        
        # Assigning a List to a Name (line 392):
        
        # Assigning a List to a Name (line 392):
        
        # Obtaining an instance of the builtin type 'list' (line 392)
        list_195745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 392)
        # Adding element type (line 392)
        str_195746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 20), 'str', 'startTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 19), list_195745, str_195746)
        # Adding element type (line 392)
        str_195747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 36), 'str', 'startTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 19), list_195745, str_195747)
        # Adding element type (line 392)
        str_195748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 49), 'str', 'test')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 19), list_195745, str_195748)
        # Adding element type (line 392)
        str_195749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 57), 'str', 'addSuccess')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 19), list_195745, str_195749)
        # Adding element type (line 392)
        str_195750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 12), 'str', 'stopTest')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 19), list_195745, str_195750)
        # Adding element type (line 392)
        str_195751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 24), 'str', 'stopTestRun')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 392, 19), list_195745, str_195751)
        
        # Assigning a type to the variable 'expected' (line 392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'expected', list_195745)
        
        # Call to assertEqual(...): (line 394)
        # Processing the call arguments (line 394)
        # Getting the type of 'events' (line 394)
        events_195754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 25), 'events', False)
        # Getting the type of 'expected' (line 394)
        expected_195755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 33), 'expected', False)
        # Processing the call keyword arguments (line 394)
        kwargs_195756 = {}
        # Getting the type of 'self' (line 394)
        self_195752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 394)
        assertEqual_195753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 394, 8), self_195752, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 394)
        assertEqual_call_result_195757 = invoke(stypy.reporting.localization.Localization(__file__, 394, 8), assertEqual_195753, *[events_195754, expected_195755], **kwargs_195756)
        
        
        # ################# End of 'test_run__uses_defaultTestResult(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'test_run__uses_defaultTestResult' in the type store
        # Getting the type of 'stypy_return_type' (line 379)
        stypy_return_type_195758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195758)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'test_run__uses_defaultTestResult'
        return stypy_return_type_195758


    @norecursion
    def testShortDescriptionWithoutDocstring(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testShortDescriptionWithoutDocstring'
        module_type_store = module_type_store.open_function_context('testShortDescriptionWithoutDocstring', 396, 4, False)
        # Assigning a type to the variable 'self' (line 397)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testShortDescriptionWithoutDocstring')
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testShortDescriptionWithoutDocstring.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testShortDescriptionWithoutDocstring', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testShortDescriptionWithoutDocstring', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testShortDescriptionWithoutDocstring(...)' code ##################

        
        # Call to assertIsNone(...): (line 397)
        # Processing the call arguments (line 397)
        
        # Call to shortDescription(...): (line 397)
        # Processing the call keyword arguments (line 397)
        kwargs_195763 = {}
        # Getting the type of 'self' (line 397)
        self_195761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 26), 'self', False)
        # Obtaining the member 'shortDescription' of a type (line 397)
        shortDescription_195762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 397, 26), self_195761, 'shortDescription')
        # Calling shortDescription(args, kwargs) (line 397)
        shortDescription_call_result_195764 = invoke(stypy.reporting.localization.Localization(__file__, 397, 26), shortDescription_195762, *[], **kwargs_195763)
        
        # Processing the call keyword arguments (line 397)
        kwargs_195765 = {}
        # Getting the type of 'self' (line 397)
        self_195759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 8), 'self', False)
        # Obtaining the member 'assertIsNone' of a type (line 397)
        assertIsNone_195760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 397, 8), self_195759, 'assertIsNone')
        # Calling assertIsNone(args, kwargs) (line 397)
        assertIsNone_call_result_195766 = invoke(stypy.reporting.localization.Localization(__file__, 397, 8), assertIsNone_195760, *[shortDescription_call_result_195764], **kwargs_195765)
        
        
        # ################# End of 'testShortDescriptionWithoutDocstring(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testShortDescriptionWithoutDocstring' in the type store
        # Getting the type of 'stypy_return_type' (line 396)
        stypy_return_type_195767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195767)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testShortDescriptionWithoutDocstring'
        return stypy_return_type_195767


    @norecursion
    def testShortDescriptionWithOneLineDocstring(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testShortDescriptionWithOneLineDocstring'
        module_type_store = module_type_store.open_function_context('testShortDescriptionWithOneLineDocstring', 399, 4, False)
        # Assigning a type to the variable 'self' (line 400)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testShortDescriptionWithOneLineDocstring')
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testShortDescriptionWithOneLineDocstring.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testShortDescriptionWithOneLineDocstring', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testShortDescriptionWithOneLineDocstring', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testShortDescriptionWithOneLineDocstring(...)' code ##################

        str_195768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 402, 8), 'str', 'Tests shortDescription() for a method with a docstring.')
        
        # Call to assertEqual(...): (line 403)
        # Processing the call arguments (line 403)
        
        # Call to shortDescription(...): (line 404)
        # Processing the call keyword arguments (line 404)
        kwargs_195773 = {}
        # Getting the type of 'self' (line 404)
        self_195771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 16), 'self', False)
        # Obtaining the member 'shortDescription' of a type (line 404)
        shortDescription_195772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 16), self_195771, 'shortDescription')
        # Calling shortDescription(args, kwargs) (line 404)
        shortDescription_call_result_195774 = invoke(stypy.reporting.localization.Localization(__file__, 404, 16), shortDescription_195772, *[], **kwargs_195773)
        
        str_195775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 16), 'str', 'Tests shortDescription() for a method with a docstring.')
        # Processing the call keyword arguments (line 403)
        kwargs_195776 = {}
        # Getting the type of 'self' (line 403)
        self_195769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 403)
        assertEqual_195770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 8), self_195769, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 403)
        assertEqual_call_result_195777 = invoke(stypy.reporting.localization.Localization(__file__, 403, 8), assertEqual_195770, *[shortDescription_call_result_195774, str_195775], **kwargs_195776)
        
        
        # ################# End of 'testShortDescriptionWithOneLineDocstring(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testShortDescriptionWithOneLineDocstring' in the type store
        # Getting the type of 'stypy_return_type' (line 399)
        stypy_return_type_195778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195778)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testShortDescriptionWithOneLineDocstring'
        return stypy_return_type_195778


    @norecursion
    def testShortDescriptionWithMultiLineDocstring(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testShortDescriptionWithMultiLineDocstring'
        module_type_store = module_type_store.open_function_context('testShortDescriptionWithMultiLineDocstring', 407, 4, False)
        # Assigning a type to the variable 'self' (line 408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testShortDescriptionWithMultiLineDocstring')
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testShortDescriptionWithMultiLineDocstring.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testShortDescriptionWithMultiLineDocstring', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testShortDescriptionWithMultiLineDocstring', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testShortDescriptionWithMultiLineDocstring(...)' code ##################

        str_195779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 415, (-1)), 'str', 'Tests shortDescription() for a method with a longer docstring.\n\n        This method ensures that only the first line of a docstring is\n        returned used in the short description, no matter how long the\n        whole thing is.\n        ')
        
        # Call to assertEqual(...): (line 416)
        # Processing the call arguments (line 416)
        
        # Call to shortDescription(...): (line 417)
        # Processing the call keyword arguments (line 417)
        kwargs_195784 = {}
        # Getting the type of 'self' (line 417)
        self_195782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 16), 'self', False)
        # Obtaining the member 'shortDescription' of a type (line 417)
        shortDescription_195783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 16), self_195782, 'shortDescription')
        # Calling shortDescription(args, kwargs) (line 417)
        shortDescription_call_result_195785 = invoke(stypy.reporting.localization.Localization(__file__, 417, 16), shortDescription_195783, *[], **kwargs_195784)
        
        str_195786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 17), 'str', 'Tests shortDescription() for a method with a longer docstring.')
        # Processing the call keyword arguments (line 416)
        kwargs_195787 = {}
        # Getting the type of 'self' (line 416)
        self_195780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 416)
        assertEqual_195781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 8), self_195780, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 416)
        assertEqual_call_result_195788 = invoke(stypy.reporting.localization.Localization(__file__, 416, 8), assertEqual_195781, *[shortDescription_call_result_195785, str_195786], **kwargs_195787)
        
        
        # ################# End of 'testShortDescriptionWithMultiLineDocstring(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testShortDescriptionWithMultiLineDocstring' in the type store
        # Getting the type of 'stypy_return_type' (line 407)
        stypy_return_type_195789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195789)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testShortDescriptionWithMultiLineDocstring'
        return stypy_return_type_195789


    @norecursion
    def testAddTypeEqualityFunc(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAddTypeEqualityFunc'
        module_type_store = module_type_store.open_function_context('testAddTypeEqualityFunc', 421, 4, False)
        # Assigning a type to the variable 'self' (line 422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 422, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAddTypeEqualityFunc')
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAddTypeEqualityFunc.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAddTypeEqualityFunc', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAddTypeEqualityFunc', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAddTypeEqualityFunc(...)' code ##################

        # Declaration of the 'SadSnake' class

        class SadSnake(object, ):
            str_195790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 12), 'str', 'Dummy class for test_addTypeEqualityFunc.')
        
        # Assigning a type to the variable 'SadSnake' (line 422)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 422, 8), 'SadSnake', SadSnake)
        
        # Assigning a Tuple to a Tuple (line 424):
        
        # Assigning a Call to a Name (line 424):
        
        # Call to SadSnake(...): (line 424)
        # Processing the call keyword arguments (line 424)
        kwargs_195792 = {}
        # Getting the type of 'SadSnake' (line 424)
        SadSnake_195791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 17), 'SadSnake', False)
        # Calling SadSnake(args, kwargs) (line 424)
        SadSnake_call_result_195793 = invoke(stypy.reporting.localization.Localization(__file__, 424, 17), SadSnake_195791, *[], **kwargs_195792)
        
        # Assigning a type to the variable 'tuple_assignment_195077' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'tuple_assignment_195077', SadSnake_call_result_195793)
        
        # Assigning a Call to a Name (line 424):
        
        # Call to SadSnake(...): (line 424)
        # Processing the call keyword arguments (line 424)
        kwargs_195795 = {}
        # Getting the type of 'SadSnake' (line 424)
        SadSnake_195794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 29), 'SadSnake', False)
        # Calling SadSnake(args, kwargs) (line 424)
        SadSnake_call_result_195796 = invoke(stypy.reporting.localization.Localization(__file__, 424, 29), SadSnake_195794, *[], **kwargs_195795)
        
        # Assigning a type to the variable 'tuple_assignment_195078' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'tuple_assignment_195078', SadSnake_call_result_195796)
        
        # Assigning a Name to a Name (line 424):
        # Getting the type of 'tuple_assignment_195077' (line 424)
        tuple_assignment_195077_195797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'tuple_assignment_195077')
        # Assigning a type to the variable 's1' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 's1', tuple_assignment_195077_195797)
        
        # Assigning a Name to a Name (line 424):
        # Getting the type of 'tuple_assignment_195078' (line 424)
        tuple_assignment_195078_195798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'tuple_assignment_195078')
        # Assigning a type to the variable 's2' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 12), 's2', tuple_assignment_195078_195798)
        
        # Call to assertNotEqual(...): (line 425)
        # Processing the call arguments (line 425)
        # Getting the type of 's1' (line 425)
        s1_195801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 28), 's1', False)
        # Getting the type of 's2' (line 425)
        s2_195802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 32), 's2', False)
        # Processing the call keyword arguments (line 425)
        kwargs_195803 = {}
        # Getting the type of 'self' (line 425)
        self_195799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 8), 'self', False)
        # Obtaining the member 'assertNotEqual' of a type (line 425)
        assertNotEqual_195800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 8), self_195799, 'assertNotEqual')
        # Calling assertNotEqual(args, kwargs) (line 425)
        assertNotEqual_call_result_195804 = invoke(stypy.reporting.localization.Localization(__file__, 425, 8), assertNotEqual_195800, *[s1_195801, s2_195802], **kwargs_195803)
        

        @norecursion
        def AllSnakesCreatedEqual(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            # Getting the type of 'None' (line 426)
            None_195805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 44), 'None')
            defaults = [None_195805]
            # Create a new context for function 'AllSnakesCreatedEqual'
            module_type_store = module_type_store.open_function_context('AllSnakesCreatedEqual', 426, 8, False)
            
            # Passed parameters checking function
            AllSnakesCreatedEqual.stypy_localization = localization
            AllSnakesCreatedEqual.stypy_type_of_self = None
            AllSnakesCreatedEqual.stypy_type_store = module_type_store
            AllSnakesCreatedEqual.stypy_function_name = 'AllSnakesCreatedEqual'
            AllSnakesCreatedEqual.stypy_param_names_list = ['a', 'b', 'msg']
            AllSnakesCreatedEqual.stypy_varargs_param_name = None
            AllSnakesCreatedEqual.stypy_kwargs_param_name = None
            AllSnakesCreatedEqual.stypy_call_defaults = defaults
            AllSnakesCreatedEqual.stypy_call_varargs = varargs
            AllSnakesCreatedEqual.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'AllSnakesCreatedEqual', ['a', 'b', 'msg'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'AllSnakesCreatedEqual', localization, ['a', 'b', 'msg'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'AllSnakesCreatedEqual(...)' code ##################

            
            
            # Call to type(...): (line 427)
            # Processing the call arguments (line 427)
            # Getting the type of 'a' (line 427)
            a_195807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 24), 'a', False)
            # Processing the call keyword arguments (line 427)
            kwargs_195808 = {}
            # Getting the type of 'type' (line 427)
            type_195806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 19), 'type', False)
            # Calling type(args, kwargs) (line 427)
            type_call_result_195809 = invoke(stypy.reporting.localization.Localization(__file__, 427, 19), type_195806, *[a_195807], **kwargs_195808)
            
            
            # Call to type(...): (line 427)
            # Processing the call arguments (line 427)
            # Getting the type of 'b' (line 427)
            b_195811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 35), 'b', False)
            # Processing the call keyword arguments (line 427)
            kwargs_195812 = {}
            # Getting the type of 'type' (line 427)
            type_195810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 30), 'type', False)
            # Calling type(args, kwargs) (line 427)
            type_call_result_195813 = invoke(stypy.reporting.localization.Localization(__file__, 427, 30), type_195810, *[b_195811], **kwargs_195812)
            
            # Applying the binary operator 'is' (line 427)
            result_is__195814 = python_operator(stypy.reporting.localization.Localization(__file__, 427, 19), 'is', type_call_result_195809, type_call_result_195813)
            # Getting the type of 'SadSnake' (line 427)
            SadSnake_195815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 41), 'SadSnake')
            # Applying the binary operator 'is' (line 427)
            result_is__195816 = python_operator(stypy.reporting.localization.Localization(__file__, 427, 19), 'is', type_call_result_195813, SadSnake_195815)
            # Applying the binary operator '&' (line 427)
            result_and__195817 = python_operator(stypy.reporting.localization.Localization(__file__, 427, 19), '&', result_is__195814, result_is__195816)
            
            # Assigning a type to the variable 'stypy_return_type' (line 427)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 427, 12), 'stypy_return_type', result_and__195817)
            
            # ################# End of 'AllSnakesCreatedEqual(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'AllSnakesCreatedEqual' in the type store
            # Getting the type of 'stypy_return_type' (line 426)
            stypy_return_type_195818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_195818)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'AllSnakesCreatedEqual'
            return stypy_return_type_195818

        # Assigning a type to the variable 'AllSnakesCreatedEqual' (line 426)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 426, 8), 'AllSnakesCreatedEqual', AllSnakesCreatedEqual)
        
        # Call to addTypeEqualityFunc(...): (line 428)
        # Processing the call arguments (line 428)
        # Getting the type of 'SadSnake' (line 428)
        SadSnake_195821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 33), 'SadSnake', False)
        # Getting the type of 'AllSnakesCreatedEqual' (line 428)
        AllSnakesCreatedEqual_195822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 43), 'AllSnakesCreatedEqual', False)
        # Processing the call keyword arguments (line 428)
        kwargs_195823 = {}
        # Getting the type of 'self' (line 428)
        self_195819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 8), 'self', False)
        # Obtaining the member 'addTypeEqualityFunc' of a type (line 428)
        addTypeEqualityFunc_195820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 8), self_195819, 'addTypeEqualityFunc')
        # Calling addTypeEqualityFunc(args, kwargs) (line 428)
        addTypeEqualityFunc_call_result_195824 = invoke(stypy.reporting.localization.Localization(__file__, 428, 8), addTypeEqualityFunc_195820, *[SadSnake_195821, AllSnakesCreatedEqual_195822], **kwargs_195823)
        
        
        # Call to assertEqual(...): (line 429)
        # Processing the call arguments (line 429)
        # Getting the type of 's1' (line 429)
        s1_195827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 25), 's1', False)
        # Getting the type of 's2' (line 429)
        s2_195828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 29), 's2', False)
        # Processing the call keyword arguments (line 429)
        kwargs_195829 = {}
        # Getting the type of 'self' (line 429)
        self_195825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 429)
        assertEqual_195826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 8), self_195825, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 429)
        assertEqual_call_result_195830 = invoke(stypy.reporting.localization.Localization(__file__, 429, 8), assertEqual_195826, *[s1_195827, s2_195828], **kwargs_195829)
        
        
        # ################# End of 'testAddTypeEqualityFunc(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAddTypeEqualityFunc' in the type store
        # Getting the type of 'stypy_return_type' (line 421)
        stypy_return_type_195831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195831)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAddTypeEqualityFunc'
        return stypy_return_type_195831


    @norecursion
    def testAssertIs(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertIs'
        module_type_store = module_type_store.open_function_context('testAssertIs', 434, 4, False)
        # Assigning a type to the variable 'self' (line 435)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertIs')
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertIs.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertIs', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertIs', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertIs(...)' code ##################

        
        # Assigning a Call to a Name (line 435):
        
        # Assigning a Call to a Name (line 435):
        
        # Call to object(...): (line 435)
        # Processing the call keyword arguments (line 435)
        kwargs_195833 = {}
        # Getting the type of 'object' (line 435)
        object_195832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 16), 'object', False)
        # Calling object(args, kwargs) (line 435)
        object_call_result_195834 = invoke(stypy.reporting.localization.Localization(__file__, 435, 16), object_195832, *[], **kwargs_195833)
        
        # Assigning a type to the variable 'thing' (line 435)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 8), 'thing', object_call_result_195834)
        
        # Call to assertIs(...): (line 436)
        # Processing the call arguments (line 436)
        # Getting the type of 'thing' (line 436)
        thing_195837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 22), 'thing', False)
        # Getting the type of 'thing' (line 436)
        thing_195838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 29), 'thing', False)
        # Processing the call keyword arguments (line 436)
        kwargs_195839 = {}
        # Getting the type of 'self' (line 436)
        self_195835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 436, 8), 'self', False)
        # Obtaining the member 'assertIs' of a type (line 436)
        assertIs_195836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 436, 8), self_195835, 'assertIs')
        # Calling assertIs(args, kwargs) (line 436)
        assertIs_call_result_195840 = invoke(stypy.reporting.localization.Localization(__file__, 436, 8), assertIs_195836, *[thing_195837, thing_195838], **kwargs_195839)
        
        
        # Call to assertRaises(...): (line 437)
        # Processing the call arguments (line 437)
        # Getting the type of 'self' (line 437)
        self_195843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 437)
        failureException_195844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 26), self_195843, 'failureException')
        # Getting the type of 'self' (line 437)
        self_195845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 49), 'self', False)
        # Obtaining the member 'assertIs' of a type (line 437)
        assertIs_195846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 49), self_195845, 'assertIs')
        # Getting the type of 'thing' (line 437)
        thing_195847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 64), 'thing', False)
        
        # Call to object(...): (line 437)
        # Processing the call keyword arguments (line 437)
        kwargs_195849 = {}
        # Getting the type of 'object' (line 437)
        object_195848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 71), 'object', False)
        # Calling object(args, kwargs) (line 437)
        object_call_result_195850 = invoke(stypy.reporting.localization.Localization(__file__, 437, 71), object_195848, *[], **kwargs_195849)
        
        # Processing the call keyword arguments (line 437)
        kwargs_195851 = {}
        # Getting the type of 'self' (line 437)
        self_195841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 437)
        assertRaises_195842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 8), self_195841, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 437)
        assertRaises_call_result_195852 = invoke(stypy.reporting.localization.Localization(__file__, 437, 8), assertRaises_195842, *[failureException_195844, assertIs_195846, thing_195847, object_call_result_195850], **kwargs_195851)
        
        
        # ################# End of 'testAssertIs(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertIs' in the type store
        # Getting the type of 'stypy_return_type' (line 434)
        stypy_return_type_195853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195853)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertIs'
        return stypy_return_type_195853


    @norecursion
    def testAssertIsNot(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertIsNot'
        module_type_store = module_type_store.open_function_context('testAssertIsNot', 439, 4, False)
        # Assigning a type to the variable 'self' (line 440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 440, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertIsNot')
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertIsNot.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertIsNot', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertIsNot', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertIsNot(...)' code ##################

        
        # Assigning a Call to a Name (line 440):
        
        # Assigning a Call to a Name (line 440):
        
        # Call to object(...): (line 440)
        # Processing the call keyword arguments (line 440)
        kwargs_195855 = {}
        # Getting the type of 'object' (line 440)
        object_195854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'object', False)
        # Calling object(args, kwargs) (line 440)
        object_call_result_195856 = invoke(stypy.reporting.localization.Localization(__file__, 440, 16), object_195854, *[], **kwargs_195855)
        
        # Assigning a type to the variable 'thing' (line 440)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 440, 8), 'thing', object_call_result_195856)
        
        # Call to assertIsNot(...): (line 441)
        # Processing the call arguments (line 441)
        # Getting the type of 'thing' (line 441)
        thing_195859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 25), 'thing', False)
        
        # Call to object(...): (line 441)
        # Processing the call keyword arguments (line 441)
        kwargs_195861 = {}
        # Getting the type of 'object' (line 441)
        object_195860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 32), 'object', False)
        # Calling object(args, kwargs) (line 441)
        object_call_result_195862 = invoke(stypy.reporting.localization.Localization(__file__, 441, 32), object_195860, *[], **kwargs_195861)
        
        # Processing the call keyword arguments (line 441)
        kwargs_195863 = {}
        # Getting the type of 'self' (line 441)
        self_195857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 8), 'self', False)
        # Obtaining the member 'assertIsNot' of a type (line 441)
        assertIsNot_195858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 8), self_195857, 'assertIsNot')
        # Calling assertIsNot(args, kwargs) (line 441)
        assertIsNot_call_result_195864 = invoke(stypy.reporting.localization.Localization(__file__, 441, 8), assertIsNot_195858, *[thing_195859, object_call_result_195862], **kwargs_195863)
        
        
        # Call to assertRaises(...): (line 442)
        # Processing the call arguments (line 442)
        # Getting the type of 'self' (line 442)
        self_195867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 442)
        failureException_195868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 26), self_195867, 'failureException')
        # Getting the type of 'self' (line 442)
        self_195869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 49), 'self', False)
        # Obtaining the member 'assertIsNot' of a type (line 442)
        assertIsNot_195870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 49), self_195869, 'assertIsNot')
        # Getting the type of 'thing' (line 442)
        thing_195871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 67), 'thing', False)
        # Getting the type of 'thing' (line 442)
        thing_195872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 74), 'thing', False)
        # Processing the call keyword arguments (line 442)
        kwargs_195873 = {}
        # Getting the type of 'self' (line 442)
        self_195865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 442)
        assertRaises_195866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 8), self_195865, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 442)
        assertRaises_call_result_195874 = invoke(stypy.reporting.localization.Localization(__file__, 442, 8), assertRaises_195866, *[failureException_195868, assertIsNot_195870, thing_195871, thing_195872], **kwargs_195873)
        
        
        # ################# End of 'testAssertIsNot(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertIsNot' in the type store
        # Getting the type of 'stypy_return_type' (line 439)
        stypy_return_type_195875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195875)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertIsNot'
        return stypy_return_type_195875


    @norecursion
    def testAssertIsInstance(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertIsInstance'
        module_type_store = module_type_store.open_function_context('testAssertIsInstance', 444, 4, False)
        # Assigning a type to the variable 'self' (line 445)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertIsInstance')
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertIsInstance.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertIsInstance', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertIsInstance', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertIsInstance(...)' code ##################

        
        # Assigning a List to a Name (line 445):
        
        # Assigning a List to a Name (line 445):
        
        # Obtaining an instance of the builtin type 'list' (line 445)
        list_195876 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 445, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 445)
        
        # Assigning a type to the variable 'thing' (line 445)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 8), 'thing', list_195876)
        
        # Call to assertIsInstance(...): (line 446)
        # Processing the call arguments (line 446)
        # Getting the type of 'thing' (line 446)
        thing_195879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 30), 'thing', False)
        # Getting the type of 'list' (line 446)
        list_195880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 37), 'list', False)
        # Processing the call keyword arguments (line 446)
        kwargs_195881 = {}
        # Getting the type of 'self' (line 446)
        self_195877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 446, 8), 'self', False)
        # Obtaining the member 'assertIsInstance' of a type (line 446)
        assertIsInstance_195878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 446, 8), self_195877, 'assertIsInstance')
        # Calling assertIsInstance(args, kwargs) (line 446)
        assertIsInstance_call_result_195882 = invoke(stypy.reporting.localization.Localization(__file__, 446, 8), assertIsInstance_195878, *[thing_195879, list_195880], **kwargs_195881)
        
        
        # Call to assertRaises(...): (line 447)
        # Processing the call arguments (line 447)
        # Getting the type of 'self' (line 447)
        self_195885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 447)
        failureException_195886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 26), self_195885, 'failureException')
        # Getting the type of 'self' (line 447)
        self_195887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 49), 'self', False)
        # Obtaining the member 'assertIsInstance' of a type (line 447)
        assertIsInstance_195888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 49), self_195887, 'assertIsInstance')
        # Getting the type of 'thing' (line 448)
        thing_195889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 26), 'thing', False)
        # Getting the type of 'dict' (line 448)
        dict_195890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 33), 'dict', False)
        # Processing the call keyword arguments (line 447)
        kwargs_195891 = {}
        # Getting the type of 'self' (line 447)
        self_195883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 447)
        assertRaises_195884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 8), self_195883, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 447)
        assertRaises_call_result_195892 = invoke(stypy.reporting.localization.Localization(__file__, 447, 8), assertRaises_195884, *[failureException_195886, assertIsInstance_195888, thing_195889, dict_195890], **kwargs_195891)
        
        
        # ################# End of 'testAssertIsInstance(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertIsInstance' in the type store
        # Getting the type of 'stypy_return_type' (line 444)
        stypy_return_type_195893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195893)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertIsInstance'
        return stypy_return_type_195893


    @norecursion
    def testAssertNotIsInstance(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertNotIsInstance'
        module_type_store = module_type_store.open_function_context('testAssertNotIsInstance', 450, 4, False)
        # Assigning a type to the variable 'self' (line 451)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 451, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertNotIsInstance')
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertNotIsInstance.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertNotIsInstance', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertNotIsInstance', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertNotIsInstance(...)' code ##################

        
        # Assigning a List to a Name (line 451):
        
        # Assigning a List to a Name (line 451):
        
        # Obtaining an instance of the builtin type 'list' (line 451)
        list_195894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 451)
        
        # Assigning a type to the variable 'thing' (line 451)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 451, 8), 'thing', list_195894)
        
        # Call to assertNotIsInstance(...): (line 452)
        # Processing the call arguments (line 452)
        # Getting the type of 'thing' (line 452)
        thing_195897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 33), 'thing', False)
        # Getting the type of 'dict' (line 452)
        dict_195898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 40), 'dict', False)
        # Processing the call keyword arguments (line 452)
        kwargs_195899 = {}
        # Getting the type of 'self' (line 452)
        self_195895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'self', False)
        # Obtaining the member 'assertNotIsInstance' of a type (line 452)
        assertNotIsInstance_195896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 8), self_195895, 'assertNotIsInstance')
        # Calling assertNotIsInstance(args, kwargs) (line 452)
        assertNotIsInstance_call_result_195900 = invoke(stypy.reporting.localization.Localization(__file__, 452, 8), assertNotIsInstance_195896, *[thing_195897, dict_195898], **kwargs_195899)
        
        
        # Call to assertRaises(...): (line 453)
        # Processing the call arguments (line 453)
        # Getting the type of 'self' (line 453)
        self_195903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 453)
        failureException_195904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 26), self_195903, 'failureException')
        # Getting the type of 'self' (line 453)
        self_195905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 49), 'self', False)
        # Obtaining the member 'assertNotIsInstance' of a type (line 453)
        assertNotIsInstance_195906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 49), self_195905, 'assertNotIsInstance')
        # Getting the type of 'thing' (line 454)
        thing_195907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 26), 'thing', False)
        # Getting the type of 'list' (line 454)
        list_195908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 454, 33), 'list', False)
        # Processing the call keyword arguments (line 453)
        kwargs_195909 = {}
        # Getting the type of 'self' (line 453)
        self_195901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 453)
        assertRaises_195902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 8), self_195901, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 453)
        assertRaises_call_result_195910 = invoke(stypy.reporting.localization.Localization(__file__, 453, 8), assertRaises_195902, *[failureException_195904, assertNotIsInstance_195906, thing_195907, list_195908], **kwargs_195909)
        
        
        # ################# End of 'testAssertNotIsInstance(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertNotIsInstance' in the type store
        # Getting the type of 'stypy_return_type' (line 450)
        stypy_return_type_195911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_195911)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertNotIsInstance'
        return stypy_return_type_195911


    @norecursion
    def testAssertIn(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertIn'
        module_type_store = module_type_store.open_function_context('testAssertIn', 456, 4, False)
        # Assigning a type to the variable 'self' (line 457)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertIn')
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertIn.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertIn', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertIn', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertIn(...)' code ##################

        
        # Assigning a Dict to a Name (line 457):
        
        # Assigning a Dict to a Name (line 457):
        
        # Obtaining an instance of the builtin type 'dict' (line 457)
        dict_195912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 18), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 457)
        # Adding element type (key, value) (line 457)
        str_195913 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 19), 'str', 'monkey')
        str_195914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 29), 'str', 'banana')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 457, 18), dict_195912, (str_195913, str_195914))
        # Adding element type (key, value) (line 457)
        str_195915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 39), 'str', 'cow')
        str_195916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 46), 'str', 'grass')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 457, 18), dict_195912, (str_195915, str_195916))
        # Adding element type (key, value) (line 457)
        str_195917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 55), 'str', 'seal')
        str_195918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 457, 63), 'str', 'fish')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 457, 18), dict_195912, (str_195917, str_195918))
        
        # Assigning a type to the variable 'animals' (line 457)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 8), 'animals', dict_195912)
        
        # Call to assertIn(...): (line 459)
        # Processing the call arguments (line 459)
        str_195921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 22), 'str', 'a')
        str_195922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 27), 'str', 'abc')
        # Processing the call keyword arguments (line 459)
        kwargs_195923 = {}
        # Getting the type of 'self' (line 459)
        self_195919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 8), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 459)
        assertIn_195920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 8), self_195919, 'assertIn')
        # Calling assertIn(args, kwargs) (line 459)
        assertIn_call_result_195924 = invoke(stypy.reporting.localization.Localization(__file__, 459, 8), assertIn_195920, *[str_195921, str_195922], **kwargs_195923)
        
        
        # Call to assertIn(...): (line 460)
        # Processing the call arguments (line 460)
        int_195927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 22), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 460)
        list_195928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 460)
        # Adding element type (line 460)
        int_195929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 26), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 25), list_195928, int_195929)
        # Adding element type (line 460)
        int_195930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 25), list_195928, int_195930)
        # Adding element type (line 460)
        int_195931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 460, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 460, 25), list_195928, int_195931)
        
        # Processing the call keyword arguments (line 460)
        kwargs_195932 = {}
        # Getting the type of 'self' (line 460)
        self_195925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 8), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 460)
        assertIn_195926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 460, 8), self_195925, 'assertIn')
        # Calling assertIn(args, kwargs) (line 460)
        assertIn_call_result_195933 = invoke(stypy.reporting.localization.Localization(__file__, 460, 8), assertIn_195926, *[int_195927, list_195928], **kwargs_195932)
        
        
        # Call to assertIn(...): (line 461)
        # Processing the call arguments (line 461)
        str_195936 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 461, 22), 'str', 'monkey')
        # Getting the type of 'animals' (line 461)
        animals_195937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 32), 'animals', False)
        # Processing the call keyword arguments (line 461)
        kwargs_195938 = {}
        # Getting the type of 'self' (line 461)
        self_195934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 8), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 461)
        assertIn_195935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 8), self_195934, 'assertIn')
        # Calling assertIn(args, kwargs) (line 461)
        assertIn_call_result_195939 = invoke(stypy.reporting.localization.Localization(__file__, 461, 8), assertIn_195935, *[str_195936, animals_195937], **kwargs_195938)
        
        
        # Call to assertNotIn(...): (line 463)
        # Processing the call arguments (line 463)
        str_195942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 25), 'str', 'd')
        str_195943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 463, 30), 'str', 'abc')
        # Processing the call keyword arguments (line 463)
        kwargs_195944 = {}
        # Getting the type of 'self' (line 463)
        self_195940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 8), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 463)
        assertNotIn_195941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 8), self_195940, 'assertNotIn')
        # Calling assertNotIn(args, kwargs) (line 463)
        assertNotIn_call_result_195945 = invoke(stypy.reporting.localization.Localization(__file__, 463, 8), assertNotIn_195941, *[str_195942, str_195943], **kwargs_195944)
        
        
        # Call to assertNotIn(...): (line 464)
        # Processing the call arguments (line 464)
        int_195948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 25), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 464)
        list_195949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 464)
        # Adding element type (line 464)
        int_195950 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 28), list_195949, int_195950)
        # Adding element type (line 464)
        int_195951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 28), list_195949, int_195951)
        # Adding element type (line 464)
        int_195952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 464, 28), list_195949, int_195952)
        
        # Processing the call keyword arguments (line 464)
        kwargs_195953 = {}
        # Getting the type of 'self' (line 464)
        self_195946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 464, 8), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 464)
        assertNotIn_195947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 464, 8), self_195946, 'assertNotIn')
        # Calling assertNotIn(args, kwargs) (line 464)
        assertNotIn_call_result_195954 = invoke(stypy.reporting.localization.Localization(__file__, 464, 8), assertNotIn_195947, *[int_195948, list_195949], **kwargs_195953)
        
        
        # Call to assertNotIn(...): (line 465)
        # Processing the call arguments (line 465)
        str_195957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 465, 25), 'str', 'otter')
        # Getting the type of 'animals' (line 465)
        animals_195958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 34), 'animals', False)
        # Processing the call keyword arguments (line 465)
        kwargs_195959 = {}
        # Getting the type of 'self' (line 465)
        self_195955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 465)
        assertNotIn_195956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 8), self_195955, 'assertNotIn')
        # Calling assertNotIn(args, kwargs) (line 465)
        assertNotIn_call_result_195960 = invoke(stypy.reporting.localization.Localization(__file__, 465, 8), assertNotIn_195956, *[str_195957, animals_195958], **kwargs_195959)
        
        
        # Call to assertRaises(...): (line 467)
        # Processing the call arguments (line 467)
        # Getting the type of 'self' (line 467)
        self_195963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 467)
        failureException_195964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 26), self_195963, 'failureException')
        # Getting the type of 'self' (line 467)
        self_195965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 49), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 467)
        assertIn_195966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 49), self_195965, 'assertIn')
        str_195967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 64), 'str', 'x')
        str_195968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 69), 'str', 'abc')
        # Processing the call keyword arguments (line 467)
        kwargs_195969 = {}
        # Getting the type of 'self' (line 467)
        self_195961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 467)
        assertRaises_195962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 8), self_195961, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 467)
        assertRaises_call_result_195970 = invoke(stypy.reporting.localization.Localization(__file__, 467, 8), assertRaises_195962, *[failureException_195964, assertIn_195966, str_195967, str_195968], **kwargs_195969)
        
        
        # Call to assertRaises(...): (line 468)
        # Processing the call arguments (line 468)
        # Getting the type of 'self' (line 468)
        self_195973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 468)
        failureException_195974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 26), self_195973, 'failureException')
        # Getting the type of 'self' (line 468)
        self_195975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 49), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 468)
        assertIn_195976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 49), self_195975, 'assertIn')
        int_195977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 64), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 468)
        list_195978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 67), 'list')
        # Adding type elements to the builtin type 'list' instance (line 468)
        # Adding element type (line 468)
        int_195979 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 67), list_195978, int_195979)
        # Adding element type (line 468)
        int_195980 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 71), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 67), list_195978, int_195980)
        # Adding element type (line 468)
        int_195981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 74), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 67), list_195978, int_195981)
        
        # Processing the call keyword arguments (line 468)
        kwargs_195982 = {}
        # Getting the type of 'self' (line 468)
        self_195971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 468)
        assertRaises_195972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 8), self_195971, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 468)
        assertRaises_call_result_195983 = invoke(stypy.reporting.localization.Localization(__file__, 468, 8), assertRaises_195972, *[failureException_195974, assertIn_195976, int_195977, list_195978], **kwargs_195982)
        
        
        # Call to assertRaises(...): (line 469)
        # Processing the call arguments (line 469)
        # Getting the type of 'self' (line 469)
        self_195986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 469)
        failureException_195987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 26), self_195986, 'failureException')
        # Getting the type of 'self' (line 469)
        self_195988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 49), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 469)
        assertIn_195989 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 49), self_195988, 'assertIn')
        str_195990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 64), 'str', 'elephant')
        # Getting the type of 'animals' (line 470)
        animals_195991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 26), 'animals', False)
        # Processing the call keyword arguments (line 469)
        kwargs_195992 = {}
        # Getting the type of 'self' (line 469)
        self_195984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 469)
        assertRaises_195985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 469, 8), self_195984, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 469)
        assertRaises_call_result_195993 = invoke(stypy.reporting.localization.Localization(__file__, 469, 8), assertRaises_195985, *[failureException_195987, assertIn_195989, str_195990, animals_195991], **kwargs_195992)
        
        
        # Call to assertRaises(...): (line 472)
        # Processing the call arguments (line 472)
        # Getting the type of 'self' (line 472)
        self_195996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 472)
        failureException_195997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 26), self_195996, 'failureException')
        # Getting the type of 'self' (line 472)
        self_195998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 49), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 472)
        assertNotIn_195999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 49), self_195998, 'assertNotIn')
        str_196000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 67), 'str', 'c')
        str_196001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 72), 'str', 'abc')
        # Processing the call keyword arguments (line 472)
        kwargs_196002 = {}
        # Getting the type of 'self' (line 472)
        self_195994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 472)
        assertRaises_195995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 8), self_195994, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 472)
        assertRaises_call_result_196003 = invoke(stypy.reporting.localization.Localization(__file__, 472, 8), assertRaises_195995, *[failureException_195997, assertNotIn_195999, str_196000, str_196001], **kwargs_196002)
        
        
        # Call to assertRaises(...): (line 473)
        # Processing the call arguments (line 473)
        # Getting the type of 'self' (line 473)
        self_196006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 473)
        failureException_196007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 26), self_196006, 'failureException')
        # Getting the type of 'self' (line 473)
        self_196008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 49), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 473)
        assertNotIn_196009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 49), self_196008, 'assertNotIn')
        int_196010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 67), 'int')
        
        # Obtaining an instance of the builtin type 'list' (line 473)
        list_196011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 70), 'list')
        # Adding type elements to the builtin type 'list' instance (line 473)
        # Adding element type (line 473)
        int_196012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 71), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 70), list_196011, int_196012)
        # Adding element type (line 473)
        int_196013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 74), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 70), list_196011, int_196013)
        # Adding element type (line 473)
        int_196014 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 77), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 473, 70), list_196011, int_196014)
        
        # Processing the call keyword arguments (line 473)
        kwargs_196015 = {}
        # Getting the type of 'self' (line 473)
        self_196004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 473)
        assertRaises_196005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 8), self_196004, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 473)
        assertRaises_call_result_196016 = invoke(stypy.reporting.localization.Localization(__file__, 473, 8), assertRaises_196005, *[failureException_196007, assertNotIn_196009, int_196010, list_196011], **kwargs_196015)
        
        
        # Call to assertRaises(...): (line 474)
        # Processing the call arguments (line 474)
        # Getting the type of 'self' (line 474)
        self_196019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 474)
        failureException_196020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 26), self_196019, 'failureException')
        # Getting the type of 'self' (line 474)
        self_196021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 49), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 474)
        assertNotIn_196022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 49), self_196021, 'assertNotIn')
        str_196023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 67), 'str', 'cow')
        # Getting the type of 'animals' (line 475)
        animals_196024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 26), 'animals', False)
        # Processing the call keyword arguments (line 474)
        kwargs_196025 = {}
        # Getting the type of 'self' (line 474)
        self_196017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 474)
        assertRaises_196018 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 8), self_196017, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 474)
        assertRaises_call_result_196026 = invoke(stypy.reporting.localization.Localization(__file__, 474, 8), assertRaises_196018, *[failureException_196020, assertNotIn_196022, str_196023, animals_196024], **kwargs_196025)
        
        
        # ################# End of 'testAssertIn(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertIn' in the type store
        # Getting the type of 'stypy_return_type' (line 456)
        stypy_return_type_196027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196027)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertIn'
        return stypy_return_type_196027


    @norecursion
    def testAssertDictContainsSubset(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertDictContainsSubset'
        module_type_store = module_type_store.open_function_context('testAssertDictContainsSubset', 477, 4, False)
        # Assigning a type to the variable 'self' (line 478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertDictContainsSubset')
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertDictContainsSubset.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertDictContainsSubset', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertDictContainsSubset', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertDictContainsSubset(...)' code ##################

        
        # Call to assertDictContainsSubset(...): (line 478)
        # Processing the call arguments (line 478)
        
        # Obtaining an instance of the builtin type 'dict' (line 478)
        dict_196030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 478)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 478)
        dict_196031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 42), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 478)
        
        # Processing the call keyword arguments (line 478)
        kwargs_196032 = {}
        # Getting the type of 'self' (line 478)
        self_196028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'self', False)
        # Obtaining the member 'assertDictContainsSubset' of a type (line 478)
        assertDictContainsSubset_196029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 8), self_196028, 'assertDictContainsSubset')
        # Calling assertDictContainsSubset(args, kwargs) (line 478)
        assertDictContainsSubset_call_result_196033 = invoke(stypy.reporting.localization.Localization(__file__, 478, 8), assertDictContainsSubset_196029, *[dict_196030, dict_196031], **kwargs_196032)
        
        
        # Call to assertDictContainsSubset(...): (line 479)
        # Processing the call arguments (line 479)
        
        # Obtaining an instance of the builtin type 'dict' (line 479)
        dict_196036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 479)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 479)
        dict_196037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 42), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 479)
        # Adding element type (key, value) (line 479)
        str_196038 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 43), 'str', 'a')
        int_196039 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 48), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 479, 42), dict_196037, (str_196038, int_196039))
        
        # Processing the call keyword arguments (line 479)
        kwargs_196040 = {}
        # Getting the type of 'self' (line 479)
        self_196034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 8), 'self', False)
        # Obtaining the member 'assertDictContainsSubset' of a type (line 479)
        assertDictContainsSubset_196035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 8), self_196034, 'assertDictContainsSubset')
        # Calling assertDictContainsSubset(args, kwargs) (line 479)
        assertDictContainsSubset_call_result_196041 = invoke(stypy.reporting.localization.Localization(__file__, 479, 8), assertDictContainsSubset_196035, *[dict_196036, dict_196037], **kwargs_196040)
        
        
        # Call to assertDictContainsSubset(...): (line 480)
        # Processing the call arguments (line 480)
        
        # Obtaining an instance of the builtin type 'dict' (line 480)
        dict_196044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 480)
        # Adding element type (key, value) (line 480)
        str_196045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 39), 'str', 'a')
        int_196046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 44), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 38), dict_196044, (str_196045, int_196046))
        
        
        # Obtaining an instance of the builtin type 'dict' (line 480)
        dict_196047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 48), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 480)
        # Adding element type (key, value) (line 480)
        str_196048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 49), 'str', 'a')
        int_196049 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 54), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 480, 48), dict_196047, (str_196048, int_196049))
        
        # Processing the call keyword arguments (line 480)
        kwargs_196050 = {}
        # Getting the type of 'self' (line 480)
        self_196042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'self', False)
        # Obtaining the member 'assertDictContainsSubset' of a type (line 480)
        assertDictContainsSubset_196043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 480, 8), self_196042, 'assertDictContainsSubset')
        # Calling assertDictContainsSubset(args, kwargs) (line 480)
        assertDictContainsSubset_call_result_196051 = invoke(stypy.reporting.localization.Localization(__file__, 480, 8), assertDictContainsSubset_196043, *[dict_196044, dict_196047], **kwargs_196050)
        
        
        # Call to assertDictContainsSubset(...): (line 481)
        # Processing the call arguments (line 481)
        
        # Obtaining an instance of the builtin type 'dict' (line 481)
        dict_196054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 481)
        # Adding element type (key, value) (line 481)
        str_196055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 39), 'str', 'a')
        int_196056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 44), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 38), dict_196054, (str_196055, int_196056))
        
        
        # Obtaining an instance of the builtin type 'dict' (line 481)
        dict_196057 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 48), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 481)
        # Adding element type (key, value) (line 481)
        str_196058 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 49), 'str', 'a')
        int_196059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 54), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 48), dict_196057, (str_196058, int_196059))
        # Adding element type (key, value) (line 481)
        str_196060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 57), 'str', 'b')
        int_196061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 481, 62), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 481, 48), dict_196057, (str_196060, int_196061))
        
        # Processing the call keyword arguments (line 481)
        kwargs_196062 = {}
        # Getting the type of 'self' (line 481)
        self_196052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'self', False)
        # Obtaining the member 'assertDictContainsSubset' of a type (line 481)
        assertDictContainsSubset_196053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 8), self_196052, 'assertDictContainsSubset')
        # Calling assertDictContainsSubset(args, kwargs) (line 481)
        assertDictContainsSubset_call_result_196063 = invoke(stypy.reporting.localization.Localization(__file__, 481, 8), assertDictContainsSubset_196053, *[dict_196054, dict_196057], **kwargs_196062)
        
        
        # Call to assertDictContainsSubset(...): (line 482)
        # Processing the call arguments (line 482)
        
        # Obtaining an instance of the builtin type 'dict' (line 482)
        dict_196066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 38), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 482)
        # Adding element type (key, value) (line 482)
        str_196067 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 39), 'str', 'a')
        int_196068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 44), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 38), dict_196066, (str_196067, int_196068))
        # Adding element type (key, value) (line 482)
        str_196069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 47), 'str', 'b')
        int_196070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 52), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 38), dict_196066, (str_196069, int_196070))
        
        
        # Obtaining an instance of the builtin type 'dict' (line 482)
        dict_196071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 56), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 482)
        # Adding element type (key, value) (line 482)
        str_196072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 57), 'str', 'a')
        int_196073 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 62), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 56), dict_196071, (str_196072, int_196073))
        # Adding element type (key, value) (line 482)
        str_196074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 65), 'str', 'b')
        int_196075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 482, 70), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 482, 56), dict_196071, (str_196074, int_196075))
        
        # Processing the call keyword arguments (line 482)
        kwargs_196076 = {}
        # Getting the type of 'self' (line 482)
        self_196064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 8), 'self', False)
        # Obtaining the member 'assertDictContainsSubset' of a type (line 482)
        assertDictContainsSubset_196065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 482, 8), self_196064, 'assertDictContainsSubset')
        # Calling assertDictContainsSubset(args, kwargs) (line 482)
        assertDictContainsSubset_call_result_196077 = invoke(stypy.reporting.localization.Localization(__file__, 482, 8), assertDictContainsSubset_196065, *[dict_196066, dict_196071], **kwargs_196076)
        
        
        # Call to assertRaises(...): (line 484)
        # Processing the call arguments (line 484)
        # Getting the type of 'self' (line 484)
        self_196080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 484)
        failureException_196081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 31), self_196080, 'failureException')
        # Processing the call keyword arguments (line 484)
        kwargs_196082 = {}
        # Getting the type of 'self' (line 484)
        self_196078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 484)
        assertRaises_196079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 13), self_196078, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 484)
        assertRaises_call_result_196083 = invoke(stypy.reporting.localization.Localization(__file__, 484, 13), assertRaises_196079, *[failureException_196081], **kwargs_196082)
        
        with_196084 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 484, 13), assertRaises_call_result_196083, 'with parameter', '__enter__', '__exit__')

        if with_196084:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 484)
            enter___196085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 13), assertRaises_call_result_196083, '__enter__')
            with_enter_196086 = invoke(stypy.reporting.localization.Localization(__file__, 484, 13), enter___196085)
            
            # Call to assertDictContainsSubset(...): (line 485)
            # Processing the call arguments (line 485)
            
            # Obtaining an instance of the builtin type 'dict' (line 485)
            dict_196089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 485)
            # Adding element type (key, value) (line 485)
            int_196090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 43), 'int')
            str_196091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 46), 'str', 'one')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 485, 42), dict_196089, (int_196090, str_196091))
            
            
            # Obtaining an instance of the builtin type 'dict' (line 485)
            dict_196092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 54), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 485)
            
            # Processing the call keyword arguments (line 485)
            kwargs_196093 = {}
            # Getting the type of 'self' (line 485)
            self_196087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'self', False)
            # Obtaining the member 'assertDictContainsSubset' of a type (line 485)
            assertDictContainsSubset_196088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 12), self_196087, 'assertDictContainsSubset')
            # Calling assertDictContainsSubset(args, kwargs) (line 485)
            assertDictContainsSubset_call_result_196094 = invoke(stypy.reporting.localization.Localization(__file__, 485, 12), assertDictContainsSubset_196088, *[dict_196089, dict_196092], **kwargs_196093)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 484)
            exit___196095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 13), assertRaises_call_result_196083, '__exit__')
            with_exit_196096 = invoke(stypy.reporting.localization.Localization(__file__, 484, 13), exit___196095, None, None, None)

        
        # Call to assertRaises(...): (line 487)
        # Processing the call arguments (line 487)
        # Getting the type of 'self' (line 487)
        self_196099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 487)
        failureException_196100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 31), self_196099, 'failureException')
        # Processing the call keyword arguments (line 487)
        kwargs_196101 = {}
        # Getting the type of 'self' (line 487)
        self_196097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 487)
        assertRaises_196098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 13), self_196097, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 487)
        assertRaises_call_result_196102 = invoke(stypy.reporting.localization.Localization(__file__, 487, 13), assertRaises_196098, *[failureException_196100], **kwargs_196101)
        
        with_196103 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 487, 13), assertRaises_call_result_196102, 'with parameter', '__enter__', '__exit__')

        if with_196103:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 487)
            enter___196104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 13), assertRaises_call_result_196102, '__enter__')
            with_enter_196105 = invoke(stypy.reporting.localization.Localization(__file__, 487, 13), enter___196104)
            
            # Call to assertDictContainsSubset(...): (line 488)
            # Processing the call arguments (line 488)
            
            # Obtaining an instance of the builtin type 'dict' (line 488)
            dict_196108 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 488)
            # Adding element type (key, value) (line 488)
            str_196109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 43), 'str', 'a')
            int_196110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 48), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 42), dict_196108, (str_196109, int_196110))
            
            
            # Obtaining an instance of the builtin type 'dict' (line 488)
            dict_196111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 52), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 488)
            # Adding element type (key, value) (line 488)
            str_196112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 53), 'str', 'a')
            int_196113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 488, 58), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 488, 52), dict_196111, (str_196112, int_196113))
            
            # Processing the call keyword arguments (line 488)
            kwargs_196114 = {}
            # Getting the type of 'self' (line 488)
            self_196106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 12), 'self', False)
            # Obtaining the member 'assertDictContainsSubset' of a type (line 488)
            assertDictContainsSubset_196107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 12), self_196106, 'assertDictContainsSubset')
            # Calling assertDictContainsSubset(args, kwargs) (line 488)
            assertDictContainsSubset_call_result_196115 = invoke(stypy.reporting.localization.Localization(__file__, 488, 12), assertDictContainsSubset_196107, *[dict_196108, dict_196111], **kwargs_196114)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 487)
            exit___196116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 487, 13), assertRaises_call_result_196102, '__exit__')
            with_exit_196117 = invoke(stypy.reporting.localization.Localization(__file__, 487, 13), exit___196116, None, None, None)

        
        # Call to assertRaises(...): (line 490)
        # Processing the call arguments (line 490)
        # Getting the type of 'self' (line 490)
        self_196120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 490)
        failureException_196121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 31), self_196120, 'failureException')
        # Processing the call keyword arguments (line 490)
        kwargs_196122 = {}
        # Getting the type of 'self' (line 490)
        self_196118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 490)
        assertRaises_196119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 13), self_196118, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 490)
        assertRaises_call_result_196123 = invoke(stypy.reporting.localization.Localization(__file__, 490, 13), assertRaises_196119, *[failureException_196121], **kwargs_196122)
        
        with_196124 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 490, 13), assertRaises_call_result_196123, 'with parameter', '__enter__', '__exit__')

        if with_196124:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 490)
            enter___196125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 13), assertRaises_call_result_196123, '__enter__')
            with_enter_196126 = invoke(stypy.reporting.localization.Localization(__file__, 490, 13), enter___196125)
            
            # Call to assertDictContainsSubset(...): (line 491)
            # Processing the call arguments (line 491)
            
            # Obtaining an instance of the builtin type 'dict' (line 491)
            dict_196129 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 491)
            # Adding element type (key, value) (line 491)
            str_196130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 43), 'str', 'c')
            int_196131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 48), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 42), dict_196129, (str_196130, int_196131))
            
            
            # Obtaining an instance of the builtin type 'dict' (line 491)
            dict_196132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 52), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 491)
            # Adding element type (key, value) (line 491)
            str_196133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 53), 'str', 'a')
            int_196134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 58), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 491, 52), dict_196132, (str_196133, int_196134))
            
            # Processing the call keyword arguments (line 491)
            kwargs_196135 = {}
            # Getting the type of 'self' (line 491)
            self_196127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 12), 'self', False)
            # Obtaining the member 'assertDictContainsSubset' of a type (line 491)
            assertDictContainsSubset_196128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 12), self_196127, 'assertDictContainsSubset')
            # Calling assertDictContainsSubset(args, kwargs) (line 491)
            assertDictContainsSubset_call_result_196136 = invoke(stypy.reporting.localization.Localization(__file__, 491, 12), assertDictContainsSubset_196128, *[dict_196129, dict_196132], **kwargs_196135)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 490)
            exit___196137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 13), assertRaises_call_result_196123, '__exit__')
            with_exit_196138 = invoke(stypy.reporting.localization.Localization(__file__, 490, 13), exit___196137, None, None, None)

        
        # Call to assertRaises(...): (line 493)
        # Processing the call arguments (line 493)
        # Getting the type of 'self' (line 493)
        self_196141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 493)
        failureException_196142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 31), self_196141, 'failureException')
        # Processing the call keyword arguments (line 493)
        kwargs_196143 = {}
        # Getting the type of 'self' (line 493)
        self_196139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 493)
        assertRaises_196140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 13), self_196139, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 493)
        assertRaises_call_result_196144 = invoke(stypy.reporting.localization.Localization(__file__, 493, 13), assertRaises_196140, *[failureException_196142], **kwargs_196143)
        
        with_196145 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 493, 13), assertRaises_call_result_196144, 'with parameter', '__enter__', '__exit__')

        if with_196145:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 493)
            enter___196146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 13), assertRaises_call_result_196144, '__enter__')
            with_enter_196147 = invoke(stypy.reporting.localization.Localization(__file__, 493, 13), enter___196146)
            
            # Call to assertDictContainsSubset(...): (line 494)
            # Processing the call arguments (line 494)
            
            # Obtaining an instance of the builtin type 'dict' (line 494)
            dict_196150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 494)
            # Adding element type (key, value) (line 494)
            str_196151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 43), 'str', 'a')
            int_196152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 48), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 42), dict_196150, (str_196151, int_196152))
            # Adding element type (key, value) (line 494)
            str_196153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 51), 'str', 'c')
            int_196154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 56), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 42), dict_196150, (str_196153, int_196154))
            
            
            # Obtaining an instance of the builtin type 'dict' (line 494)
            dict_196155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 60), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 494)
            # Adding element type (key, value) (line 494)
            str_196156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 61), 'str', 'a')
            int_196157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 66), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 60), dict_196155, (str_196156, int_196157))
            
            # Processing the call keyword arguments (line 494)
            kwargs_196158 = {}
            # Getting the type of 'self' (line 494)
            self_196148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 12), 'self', False)
            # Obtaining the member 'assertDictContainsSubset' of a type (line 494)
            assertDictContainsSubset_196149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 12), self_196148, 'assertDictContainsSubset')
            # Calling assertDictContainsSubset(args, kwargs) (line 494)
            assertDictContainsSubset_call_result_196159 = invoke(stypy.reporting.localization.Localization(__file__, 494, 12), assertDictContainsSubset_196149, *[dict_196150, dict_196155], **kwargs_196158)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 493)
            exit___196160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 13), assertRaises_call_result_196144, '__exit__')
            with_exit_196161 = invoke(stypy.reporting.localization.Localization(__file__, 493, 13), exit___196160, None, None, None)

        
        # Call to assertRaises(...): (line 496)
        # Processing the call arguments (line 496)
        # Getting the type of 'self' (line 496)
        self_196164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 496)
        failureException_196165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 31), self_196164, 'failureException')
        # Processing the call keyword arguments (line 496)
        kwargs_196166 = {}
        # Getting the type of 'self' (line 496)
        self_196162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 496)
        assertRaises_196163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 13), self_196162, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 496)
        assertRaises_call_result_196167 = invoke(stypy.reporting.localization.Localization(__file__, 496, 13), assertRaises_196163, *[failureException_196165], **kwargs_196166)
        
        with_196168 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 496, 13), assertRaises_call_result_196167, 'with parameter', '__enter__', '__exit__')

        if with_196168:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 496)
            enter___196169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 13), assertRaises_call_result_196167, '__enter__')
            with_enter_196170 = invoke(stypy.reporting.localization.Localization(__file__, 496, 13), enter___196169)
            
            # Call to assertDictContainsSubset(...): (line 497)
            # Processing the call arguments (line 497)
            
            # Obtaining an instance of the builtin type 'dict' (line 497)
            dict_196173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 42), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 497)
            # Adding element type (key, value) (line 497)
            str_196174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 43), 'str', 'a')
            int_196175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 48), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 497, 42), dict_196173, (str_196174, int_196175))
            # Adding element type (key, value) (line 497)
            str_196176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 51), 'str', 'c')
            int_196177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 56), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 497, 42), dict_196173, (str_196176, int_196177))
            
            
            # Obtaining an instance of the builtin type 'dict' (line 497)
            dict_196178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 60), 'dict')
            # Adding type elements to the builtin type 'dict' instance (line 497)
            # Adding element type (key, value) (line 497)
            str_196179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 61), 'str', 'a')
            int_196180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 66), 'int')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 497, 60), dict_196178, (str_196179, int_196180))
            
            # Processing the call keyword arguments (line 497)
            kwargs_196181 = {}
            # Getting the type of 'self' (line 497)
            self_196171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 12), 'self', False)
            # Obtaining the member 'assertDictContainsSubset' of a type (line 497)
            assertDictContainsSubset_196172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 12), self_196171, 'assertDictContainsSubset')
            # Calling assertDictContainsSubset(args, kwargs) (line 497)
            assertDictContainsSubset_call_result_196182 = invoke(stypy.reporting.localization.Localization(__file__, 497, 12), assertDictContainsSubset_196172, *[dict_196173, dict_196178], **kwargs_196181)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 496)
            exit___196183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 13), assertRaises_call_result_196167, '__exit__')
            with_exit_196184 = invoke(stypy.reporting.localization.Localization(__file__, 496, 13), exit___196183, None, None, None)

        
        # Call to check_warnings(...): (line 499)
        # Processing the call arguments (line 499)
        
        # Obtaining an instance of the builtin type 'tuple' (line 499)
        tuple_196187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 42), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 499)
        # Adding element type (line 499)
        str_196188 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 499, 42), 'str', '')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 499, 42), tuple_196187, str_196188)
        # Adding element type (line 499)
        # Getting the type of 'UnicodeWarning' (line 499)
        UnicodeWarning_196189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 46), 'UnicodeWarning', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 499, 42), tuple_196187, UnicodeWarning_196189)
        
        # Processing the call keyword arguments (line 499)
        kwargs_196190 = {}
        # Getting the type of 'test_support' (line 499)
        test_support_196185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 13), 'test_support', False)
        # Obtaining the member 'check_warnings' of a type (line 499)
        check_warnings_196186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 13), test_support_196185, 'check_warnings')
        # Calling check_warnings(args, kwargs) (line 499)
        check_warnings_call_result_196191 = invoke(stypy.reporting.localization.Localization(__file__, 499, 13), check_warnings_196186, *[tuple_196187], **kwargs_196190)
        
        with_196192 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 499, 13), check_warnings_call_result_196191, 'with parameter', '__enter__', '__exit__')

        if with_196192:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 499)
            enter___196193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 13), check_warnings_call_result_196191, '__enter__')
            with_enter_196194 = invoke(stypy.reporting.localization.Localization(__file__, 499, 13), enter___196193)
            
            # Assigning a Call to a Name (line 500):
            
            # Assigning a Call to a Name (line 500):
            
            # Call to join(...): (line 500)
            # Processing the call arguments (line 500)
            # Calculating generator expression
            module_type_store = module_type_store.open_function_context('list comprehension expression', 500, 26, True)
            # Calculating comprehension expression
            
            # Call to range(...): (line 500)
            # Processing the call arguments (line 500)
            int_196202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 48), 'int')
            # Processing the call keyword arguments (line 500)
            kwargs_196203 = {}
            # Getting the type of 'range' (line 500)
            range_196201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 42), 'range', False)
            # Calling range(args, kwargs) (line 500)
            range_call_result_196204 = invoke(stypy.reporting.localization.Localization(__file__, 500, 42), range_196201, *[int_196202], **kwargs_196203)
            
            comprehension_196205 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 500, 26), range_call_result_196204)
            # Assigning a type to the variable 'i' (line 500)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 26), 'i', comprehension_196205)
            
            # Call to chr(...): (line 500)
            # Processing the call arguments (line 500)
            # Getting the type of 'i' (line 500)
            i_196198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 30), 'i', False)
            # Processing the call keyword arguments (line 500)
            kwargs_196199 = {}
            # Getting the type of 'chr' (line 500)
            chr_196197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 26), 'chr', False)
            # Calling chr(args, kwargs) (line 500)
            chr_call_result_196200 = invoke(stypy.reporting.localization.Localization(__file__, 500, 26), chr_196197, *[i_196198], **kwargs_196199)
            
            list_196206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 26), 'list')
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 500, 26), list_196206, chr_call_result_196200)
            # Processing the call keyword arguments (line 500)
            kwargs_196207 = {}
            str_196195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 500, 18), 'str', '')
            # Obtaining the member 'join' of a type (line 500)
            join_196196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 18), str_196195, 'join')
            # Calling join(args, kwargs) (line 500)
            join_call_result_196208 = invoke(stypy.reporting.localization.Localization(__file__, 500, 18), join_196196, *[list_196206], **kwargs_196207)
            
            # Assigning a type to the variable 'one' (line 500)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 12), 'one', join_call_result_196208)
            
            # Call to assertRaises(...): (line 502)
            # Processing the call arguments (line 502)
            # Getting the type of 'self' (line 502)
            self_196211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 35), 'self', False)
            # Obtaining the member 'failureException' of a type (line 502)
            failureException_196212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 35), self_196211, 'failureException')
            # Processing the call keyword arguments (line 502)
            kwargs_196213 = {}
            # Getting the type of 'self' (line 502)
            self_196209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 17), 'self', False)
            # Obtaining the member 'assertRaises' of a type (line 502)
            assertRaises_196210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 17), self_196209, 'assertRaises')
            # Calling assertRaises(args, kwargs) (line 502)
            assertRaises_call_result_196214 = invoke(stypy.reporting.localization.Localization(__file__, 502, 17), assertRaises_196210, *[failureException_196212], **kwargs_196213)
            
            with_196215 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 502, 17), assertRaises_call_result_196214, 'with parameter', '__enter__', '__exit__')

            if with_196215:
                # Calling the __enter__ method to initiate a with section
                # Obtaining the member '__enter__' of a type (line 502)
                enter___196216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 17), assertRaises_call_result_196214, '__enter__')
                with_enter_196217 = invoke(stypy.reporting.localization.Localization(__file__, 502, 17), enter___196216)
                
                # Call to assertDictContainsSubset(...): (line 503)
                # Processing the call arguments (line 503)
                
                # Obtaining an instance of the builtin type 'dict' (line 503)
                dict_196220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 46), 'dict')
                # Adding type elements to the builtin type 'dict' instance (line 503)
                # Adding element type (key, value) (line 503)
                str_196221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 47), 'str', 'foo')
                # Getting the type of 'one' (line 503)
                one_196222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 54), 'one', False)
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 46), dict_196220, (str_196221, one_196222))
                
                
                # Obtaining an instance of the builtin type 'dict' (line 503)
                dict_196223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 60), 'dict')
                # Adding type elements to the builtin type 'dict' instance (line 503)
                # Adding element type (key, value) (line 503)
                str_196224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 61), 'str', 'foo')
                unicode_196225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 503, 68), 'unicode', u'\ufffd')
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 503, 60), dict_196223, (str_196224, unicode_196225))
                
                # Processing the call keyword arguments (line 503)
                kwargs_196226 = {}
                # Getting the type of 'self' (line 503)
                self_196218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 16), 'self', False)
                # Obtaining the member 'assertDictContainsSubset' of a type (line 503)
                assertDictContainsSubset_196219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 16), self_196218, 'assertDictContainsSubset')
                # Calling assertDictContainsSubset(args, kwargs) (line 503)
                assertDictContainsSubset_call_result_196227 = invoke(stypy.reporting.localization.Localization(__file__, 503, 16), assertDictContainsSubset_196219, *[dict_196220, dict_196223], **kwargs_196226)
                
                # Calling the __exit__ method to finish a with section
                # Obtaining the member '__exit__' of a type (line 502)
                exit___196228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 17), assertRaises_call_result_196214, '__exit__')
                with_exit_196229 = invoke(stypy.reporting.localization.Localization(__file__, 502, 17), exit___196228, None, None, None)

            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 499)
            exit___196230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 13), check_warnings_call_result_196191, '__exit__')
            with_exit_196231 = invoke(stypy.reporting.localization.Localization(__file__, 499, 13), exit___196230, None, None, None)

        
        # ################# End of 'testAssertDictContainsSubset(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertDictContainsSubset' in the type store
        # Getting the type of 'stypy_return_type' (line 477)
        stypy_return_type_196232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196232)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertDictContainsSubset'
        return stypy_return_type_196232


    @norecursion
    def testAssertEqual(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertEqual'
        module_type_store = module_type_store.open_function_context('testAssertEqual', 505, 4, False)
        # Assigning a type to the variable 'self' (line 506)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertEqual')
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertEqual.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertEqual', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertEqual', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertEqual(...)' code ##################

        
        # Assigning a List to a Name (line 506):
        
        # Assigning a List to a Name (line 506):
        
        # Obtaining an instance of the builtin type 'list' (line 506)
        list_196233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 506)
        # Adding element type (line 506)
        
        # Obtaining an instance of the builtin type 'tuple' (line 507)
        tuple_196234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 507)
        # Adding element type (line 507)
        
        # Obtaining an instance of the builtin type 'tuple' (line 507)
        tuple_196235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 507)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 17), tuple_196234, tuple_196235)
        # Adding element type (line 507)
        
        # Obtaining an instance of the builtin type 'tuple' (line 507)
        tuple_196236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 507)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 17), tuple_196234, tuple_196236)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 22), list_196233, tuple_196234)
        # Adding element type (line 506)
        
        # Obtaining an instance of the builtin type 'tuple' (line 508)
        tuple_196237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 508)
        # Adding element type (line 508)
        
        # Obtaining an instance of the builtin type 'dict' (line 508)
        dict_196238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 17), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 508)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 508, 17), tuple_196237, dict_196238)
        # Adding element type (line 508)
        
        # Obtaining an instance of the builtin type 'dict' (line 508)
        dict_196239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 21), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 508)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 508, 17), tuple_196237, dict_196239)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 22), list_196233, tuple_196237)
        # Adding element type (line 506)
        
        # Obtaining an instance of the builtin type 'tuple' (line 509)
        tuple_196240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 509)
        # Adding element type (line 509)
        
        # Obtaining an instance of the builtin type 'list' (line 509)
        list_196241 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 17), 'list')
        # Adding type elements to the builtin type 'list' instance (line 509)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 17), tuple_196240, list_196241)
        # Adding element type (line 509)
        
        # Obtaining an instance of the builtin type 'list' (line 509)
        list_196242 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 509)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 17), tuple_196240, list_196242)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 22), list_196233, tuple_196240)
        # Adding element type (line 506)
        
        # Obtaining an instance of the builtin type 'tuple' (line 510)
        tuple_196243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 510, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 510)
        # Adding element type (line 510)
        
        # Call to set(...): (line 510)
        # Processing the call keyword arguments (line 510)
        kwargs_196245 = {}
        # Getting the type of 'set' (line 510)
        set_196244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 17), 'set', False)
        # Calling set(args, kwargs) (line 510)
        set_call_result_196246 = invoke(stypy.reporting.localization.Localization(__file__, 510, 17), set_196244, *[], **kwargs_196245)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 17), tuple_196243, set_call_result_196246)
        # Adding element type (line 510)
        
        # Call to set(...): (line 510)
        # Processing the call keyword arguments (line 510)
        kwargs_196248 = {}
        # Getting the type of 'set' (line 510)
        set_196247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 24), 'set', False)
        # Calling set(args, kwargs) (line 510)
        set_call_result_196249 = invoke(stypy.reporting.localization.Localization(__file__, 510, 24), set_196247, *[], **kwargs_196248)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 510, 17), tuple_196243, set_call_result_196249)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 22), list_196233, tuple_196243)
        # Adding element type (line 506)
        
        # Obtaining an instance of the builtin type 'tuple' (line 511)
        tuple_196250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 511, 17), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 511)
        # Adding element type (line 511)
        
        # Call to frozenset(...): (line 511)
        # Processing the call keyword arguments (line 511)
        kwargs_196252 = {}
        # Getting the type of 'frozenset' (line 511)
        frozenset_196251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 17), 'frozenset', False)
        # Calling frozenset(args, kwargs) (line 511)
        frozenset_call_result_196253 = invoke(stypy.reporting.localization.Localization(__file__, 511, 17), frozenset_196251, *[], **kwargs_196252)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 17), tuple_196250, frozenset_call_result_196253)
        # Adding element type (line 511)
        
        # Call to frozenset(...): (line 511)
        # Processing the call keyword arguments (line 511)
        kwargs_196255 = {}
        # Getting the type of 'frozenset' (line 511)
        frozenset_196254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 511, 30), 'frozenset', False)
        # Calling frozenset(args, kwargs) (line 511)
        frozenset_call_result_196256 = invoke(stypy.reporting.localization.Localization(__file__, 511, 30), frozenset_196254, *[], **kwargs_196255)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 511, 17), tuple_196250, frozenset_call_result_196256)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 506, 22), list_196233, tuple_196250)
        
        # Assigning a type to the variable 'equal_pairs' (line 506)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 8), 'equal_pairs', list_196233)
        
        # Getting the type of 'equal_pairs' (line 512)
        equal_pairs_196257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 512, 20), 'equal_pairs')
        # Testing the type of a for loop iterable (line 512)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 512, 8), equal_pairs_196257)
        # Getting the type of the for loop variable (line 512)
        for_loop_var_196258 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 512, 8), equal_pairs_196257)
        # Assigning a type to the variable 'a' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'a', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 512, 8), for_loop_var_196258))
        # Assigning a type to the variable 'b' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'b', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 512, 8), for_loop_var_196258))
        # SSA begins for a for statement (line 512)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # SSA begins for try-except statement (line 515)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertEqual(...): (line 516)
        # Processing the call arguments (line 516)
        # Getting the type of 'a' (line 516)
        a_196261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 33), 'a', False)
        # Getting the type of 'b' (line 516)
        b_196262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 36), 'b', False)
        # Processing the call keyword arguments (line 516)
        kwargs_196263 = {}
        # Getting the type of 'self' (line 516)
        self_196259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 16), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 516)
        assertEqual_196260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 16), self_196259, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 516)
        assertEqual_call_result_196264 = invoke(stypy.reporting.localization.Localization(__file__, 516, 16), assertEqual_196260, *[a_196261, b_196262], **kwargs_196263)
        
        # SSA branch for the except part of a try statement (line 515)
        # SSA branch for the except 'Attribute' branch of a try statement (line 515)
        module_type_store.open_ssa_branch('except')
        
        # Call to fail(...): (line 518)
        # Processing the call arguments (line 518)
        str_196267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 26), 'str', 'assertEqual(%r, %r) failed')
        
        # Obtaining an instance of the builtin type 'tuple' (line 518)
        tuple_196268 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 518, 58), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 518)
        # Adding element type (line 518)
        # Getting the type of 'a' (line 518)
        a_196269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 58), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 518, 58), tuple_196268, a_196269)
        # Adding element type (line 518)
        # Getting the type of 'b' (line 518)
        b_196270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 61), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 518, 58), tuple_196268, b_196270)
        
        # Applying the binary operator '%' (line 518)
        result_mod_196271 = python_operator(stypy.reporting.localization.Localization(__file__, 518, 26), '%', str_196267, tuple_196268)
        
        # Processing the call keyword arguments (line 518)
        kwargs_196272 = {}
        # Getting the type of 'self' (line 518)
        self_196265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 16), 'self', False)
        # Obtaining the member 'fail' of a type (line 518)
        fail_196266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 16), self_196265, 'fail')
        # Calling fail(args, kwargs) (line 518)
        fail_call_result_196273 = invoke(stypy.reporting.localization.Localization(__file__, 518, 16), fail_196266, *[result_mod_196271], **kwargs_196272)
        
        # SSA join for try-except statement (line 515)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 519)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertEqual(...): (line 520)
        # Processing the call arguments (line 520)
        # Getting the type of 'a' (line 520)
        a_196276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 33), 'a', False)
        # Getting the type of 'b' (line 520)
        b_196277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 36), 'b', False)
        # Processing the call keyword arguments (line 520)
        str_196278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 520, 43), 'str', 'foo')
        keyword_196279 = str_196278
        kwargs_196280 = {'msg': keyword_196279}
        # Getting the type of 'self' (line 520)
        self_196274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 520, 16), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 520)
        assertEqual_196275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 520, 16), self_196274, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 520)
        assertEqual_call_result_196281 = invoke(stypy.reporting.localization.Localization(__file__, 520, 16), assertEqual_196275, *[a_196276, b_196277], **kwargs_196280)
        
        # SSA branch for the except part of a try statement (line 519)
        # SSA branch for the except 'Attribute' branch of a try statement (line 519)
        module_type_store.open_ssa_branch('except')
        
        # Call to fail(...): (line 522)
        # Processing the call arguments (line 522)
        str_196284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 26), 'str', 'assertEqual(%r, %r) with msg= failed')
        
        # Obtaining an instance of the builtin type 'tuple' (line 522)
        tuple_196285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 68), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 522)
        # Adding element type (line 522)
        # Getting the type of 'a' (line 522)
        a_196286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 68), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 68), tuple_196285, a_196286)
        # Adding element type (line 522)
        # Getting the type of 'b' (line 522)
        b_196287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 71), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 522, 68), tuple_196285, b_196287)
        
        # Applying the binary operator '%' (line 522)
        result_mod_196288 = python_operator(stypy.reporting.localization.Localization(__file__, 522, 26), '%', str_196284, tuple_196285)
        
        # Processing the call keyword arguments (line 522)
        kwargs_196289 = {}
        # Getting the type of 'self' (line 522)
        self_196282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 16), 'self', False)
        # Obtaining the member 'fail' of a type (line 522)
        fail_196283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 16), self_196282, 'fail')
        # Calling fail(args, kwargs) (line 522)
        fail_call_result_196290 = invoke(stypy.reporting.localization.Localization(__file__, 522, 16), fail_196283, *[result_mod_196288], **kwargs_196289)
        
        # SSA join for try-except statement (line 519)
        module_type_store = module_type_store.join_ssa_context()
        
        
        
        # SSA begins for try-except statement (line 523)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertEqual(...): (line 524)
        # Processing the call arguments (line 524)
        # Getting the type of 'a' (line 524)
        a_196293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 33), 'a', False)
        # Getting the type of 'b' (line 524)
        b_196294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 36), 'b', False)
        str_196295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 39), 'str', 'foo')
        # Processing the call keyword arguments (line 524)
        kwargs_196296 = {}
        # Getting the type of 'self' (line 524)
        self_196291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 16), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 524)
        assertEqual_196292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 16), self_196291, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 524)
        assertEqual_call_result_196297 = invoke(stypy.reporting.localization.Localization(__file__, 524, 16), assertEqual_196292, *[a_196293, b_196294, str_196295], **kwargs_196296)
        
        # SSA branch for the except part of a try statement (line 523)
        # SSA branch for the except 'Attribute' branch of a try statement (line 523)
        module_type_store.open_ssa_branch('except')
        
        # Call to fail(...): (line 526)
        # Processing the call arguments (line 526)
        str_196300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 26), 'str', 'assertEqual(%r, %r) with third parameter failed')
        
        # Obtaining an instance of the builtin type 'tuple' (line 527)
        tuple_196301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 527)
        # Adding element type (line 527)
        # Getting the type of 'a' (line 527)
        a_196302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 27), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 27), tuple_196301, a_196302)
        # Adding element type (line 527)
        # Getting the type of 'b' (line 527)
        b_196303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 30), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 527, 27), tuple_196301, b_196303)
        
        # Applying the binary operator '%' (line 526)
        result_mod_196304 = python_operator(stypy.reporting.localization.Localization(__file__, 526, 26), '%', str_196300, tuple_196301)
        
        # Processing the call keyword arguments (line 526)
        kwargs_196305 = {}
        # Getting the type of 'self' (line 526)
        self_196298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 16), 'self', False)
        # Obtaining the member 'fail' of a type (line 526)
        fail_196299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 16), self_196298, 'fail')
        # Calling fail(args, kwargs) (line 526)
        fail_call_result_196306 = invoke(stypy.reporting.localization.Localization(__file__, 526, 16), fail_196299, *[result_mod_196304], **kwargs_196305)
        
        # SSA join for try-except statement (line 523)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Assigning a List to a Name (line 529):
        
        # Assigning a List to a Name (line 529):
        
        # Obtaining an instance of the builtin type 'list' (line 529)
        list_196307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 529, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 529)
        # Adding element type (line 529)
        
        # Obtaining an instance of the builtin type 'tuple' (line 530)
        tuple_196308 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 530)
        # Adding element type (line 530)
        
        # Obtaining an instance of the builtin type 'tuple' (line 530)
        tuple_196309 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 530)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 530, 16), tuple_196308, tuple_196309)
        # Adding element type (line 530)
        
        # Obtaining an instance of the builtin type 'list' (line 530)
        list_196310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 530)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 530, 16), tuple_196308, list_196310)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 24), list_196307, tuple_196308)
        # Adding element type (line 529)
        
        # Obtaining an instance of the builtin type 'tuple' (line 531)
        tuple_196311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 531)
        # Adding element type (line 531)
        
        # Obtaining an instance of the builtin type 'dict' (line 531)
        dict_196312 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 16), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 531)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 16), tuple_196311, dict_196312)
        # Adding element type (line 531)
        
        # Call to set(...): (line 531)
        # Processing the call keyword arguments (line 531)
        kwargs_196314 = {}
        # Getting the type of 'set' (line 531)
        set_196313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 20), 'set', False)
        # Calling set(args, kwargs) (line 531)
        set_call_result_196315 = invoke(stypy.reporting.localization.Localization(__file__, 531, 20), set_196313, *[], **kwargs_196314)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 16), tuple_196311, set_call_result_196315)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 24), list_196307, tuple_196311)
        # Adding element type (line 529)
        
        # Obtaining an instance of the builtin type 'tuple' (line 532)
        tuple_196316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 532)
        # Adding element type (line 532)
        
        # Call to set(...): (line 532)
        # Processing the call arguments (line 532)
        
        # Obtaining an instance of the builtin type 'list' (line 532)
        list_196318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 532)
        # Adding element type (line 532)
        int_196319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 20), list_196318, int_196319)
        # Adding element type (line 532)
        int_196320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 20), list_196318, int_196320)
        
        # Processing the call keyword arguments (line 532)
        kwargs_196321 = {}
        # Getting the type of 'set' (line 532)
        set_196317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 16), 'set', False)
        # Calling set(args, kwargs) (line 532)
        set_call_result_196322 = invoke(stypy.reporting.localization.Localization(__file__, 532, 16), set_196317, *[list_196318], **kwargs_196321)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 16), tuple_196316, set_call_result_196322)
        # Adding element type (line 532)
        
        # Call to frozenset(...): (line 532)
        # Processing the call arguments (line 532)
        
        # Obtaining an instance of the builtin type 'list' (line 532)
        list_196324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 532)
        # Adding element type (line 532)
        int_196325 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 38), list_196324, int_196325)
        # Adding element type (line 532)
        int_196326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 38), list_196324, int_196326)
        
        # Processing the call keyword arguments (line 532)
        kwargs_196327 = {}
        # Getting the type of 'frozenset' (line 532)
        frozenset_196323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 28), 'frozenset', False)
        # Calling frozenset(args, kwargs) (line 532)
        frozenset_call_result_196328 = invoke(stypy.reporting.localization.Localization(__file__, 532, 28), frozenset_196323, *[list_196324], **kwargs_196327)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 532, 16), tuple_196316, frozenset_call_result_196328)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 24), list_196307, tuple_196316)
        # Adding element type (line 529)
        
        # Obtaining an instance of the builtin type 'tuple' (line 533)
        tuple_196329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 533)
        # Adding element type (line 533)
        
        # Call to frozenset(...): (line 533)
        # Processing the call arguments (line 533)
        
        # Obtaining an instance of the builtin type 'list' (line 533)
        list_196331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 533)
        # Adding element type (line 533)
        int_196332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 26), list_196331, int_196332)
        # Adding element type (line 533)
        int_196333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 26), list_196331, int_196333)
        
        # Processing the call keyword arguments (line 533)
        kwargs_196334 = {}
        # Getting the type of 'frozenset' (line 533)
        frozenset_196330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 16), 'frozenset', False)
        # Calling frozenset(args, kwargs) (line 533)
        frozenset_call_result_196335 = invoke(stypy.reporting.localization.Localization(__file__, 533, 16), frozenset_196330, *[list_196331], **kwargs_196334)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 16), tuple_196329, frozenset_call_result_196335)
        # Adding element type (line 533)
        
        # Call to set(...): (line 533)
        # Processing the call arguments (line 533)
        
        # Obtaining an instance of the builtin type 'list' (line 533)
        list_196337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 38), 'list')
        # Adding type elements to the builtin type 'list' instance (line 533)
        # Adding element type (line 533)
        int_196338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 38), list_196337, int_196338)
        # Adding element type (line 533)
        int_196339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 533, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 38), list_196337, int_196339)
        
        # Processing the call keyword arguments (line 533)
        kwargs_196340 = {}
        # Getting the type of 'set' (line 533)
        set_196336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 34), 'set', False)
        # Calling set(args, kwargs) (line 533)
        set_call_result_196341 = invoke(stypy.reporting.localization.Localization(__file__, 533, 34), set_196336, *[list_196337], **kwargs_196340)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 533, 16), tuple_196329, set_call_result_196341)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 24), list_196307, tuple_196329)
        # Adding element type (line 529)
        
        # Obtaining an instance of the builtin type 'tuple' (line 534)
        tuple_196342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 16), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 534)
        # Adding element type (line 534)
        
        # Call to set(...): (line 534)
        # Processing the call arguments (line 534)
        
        # Obtaining an instance of the builtin type 'list' (line 534)
        list_196344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 534)
        # Adding element type (line 534)
        int_196345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 20), list_196344, int_196345)
        # Adding element type (line 534)
        int_196346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 20), list_196344, int_196346)
        
        # Processing the call keyword arguments (line 534)
        kwargs_196347 = {}
        # Getting the type of 'set' (line 534)
        set_196343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 16), 'set', False)
        # Calling set(args, kwargs) (line 534)
        set_call_result_196348 = invoke(stypy.reporting.localization.Localization(__file__, 534, 16), set_196343, *[list_196344], **kwargs_196347)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 16), tuple_196342, set_call_result_196348)
        # Adding element type (line 534)
        
        # Call to set(...): (line 534)
        # Processing the call arguments (line 534)
        
        # Obtaining an instance of the builtin type 'list' (line 534)
        list_196350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 534)
        # Adding element type (line 534)
        int_196351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 32), list_196350, int_196351)
        # Adding element type (line 534)
        int_196352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 32), list_196350, int_196352)
        
        # Processing the call keyword arguments (line 534)
        kwargs_196353 = {}
        # Getting the type of 'set' (line 534)
        set_196349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 28), 'set', False)
        # Calling set(args, kwargs) (line 534)
        set_call_result_196354 = invoke(stypy.reporting.localization.Localization(__file__, 534, 28), set_196349, *[list_196350], **kwargs_196353)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 534, 16), tuple_196342, set_call_result_196354)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 529, 24), list_196307, tuple_196342)
        
        # Assigning a type to the variable 'unequal_pairs' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'unequal_pairs', list_196307)
        
        # Getting the type of 'unequal_pairs' (line 535)
        unequal_pairs_196355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 20), 'unequal_pairs')
        # Testing the type of a for loop iterable (line 535)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 535, 8), unequal_pairs_196355)
        # Getting the type of the for loop variable (line 535)
        for_loop_var_196356 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 535, 8), unequal_pairs_196355)
        # Assigning a type to the variable 'a' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 8), 'a', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 535, 8), for_loop_var_196356))
        # Assigning a type to the variable 'b' (line 535)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 8), 'b', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 535, 8), for_loop_var_196356))
        # SSA begins for a for statement (line 535)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assertRaises(...): (line 536)
        # Processing the call arguments (line 536)
        # Getting the type of 'self' (line 536)
        self_196359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 30), 'self', False)
        # Obtaining the member 'failureException' of a type (line 536)
        failureException_196360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 30), self_196359, 'failureException')
        # Getting the type of 'self' (line 536)
        self_196361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 53), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 536)
        assertEqual_196362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 53), self_196361, 'assertEqual')
        # Getting the type of 'a' (line 536)
        a_196363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 71), 'a', False)
        # Getting the type of 'b' (line 536)
        b_196364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 74), 'b', False)
        # Processing the call keyword arguments (line 536)
        kwargs_196365 = {}
        # Getting the type of 'self' (line 536)
        self_196357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 12), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 536)
        assertRaises_196358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 12), self_196357, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 536)
        assertRaises_call_result_196366 = invoke(stypy.reporting.localization.Localization(__file__, 536, 12), assertRaises_196358, *[failureException_196360, assertEqual_196362, a_196363, b_196364], **kwargs_196365)
        
        
        # Call to assertRaises(...): (line 537)
        # Processing the call arguments (line 537)
        # Getting the type of 'self' (line 537)
        self_196369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 30), 'self', False)
        # Obtaining the member 'failureException' of a type (line 537)
        failureException_196370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 30), self_196369, 'failureException')
        # Getting the type of 'self' (line 537)
        self_196371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 53), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 537)
        assertEqual_196372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 53), self_196371, 'assertEqual')
        # Getting the type of 'a' (line 537)
        a_196373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 71), 'a', False)
        # Getting the type of 'b' (line 537)
        b_196374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 74), 'b', False)
        str_196375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 30), 'str', 'foo')
        # Processing the call keyword arguments (line 537)
        kwargs_196376 = {}
        # Getting the type of 'self' (line 537)
        self_196367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 537)
        assertRaises_196368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 12), self_196367, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 537)
        assertRaises_call_result_196377 = invoke(stypy.reporting.localization.Localization(__file__, 537, 12), assertRaises_196368, *[failureException_196370, assertEqual_196372, a_196373, b_196374, str_196375], **kwargs_196376)
        
        
        # Call to assertRaises(...): (line 539)
        # Processing the call arguments (line 539)
        # Getting the type of 'self' (line 539)
        self_196380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 30), 'self', False)
        # Obtaining the member 'failureException' of a type (line 539)
        failureException_196381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 30), self_196380, 'failureException')
        # Getting the type of 'self' (line 539)
        self_196382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 53), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 539)
        assertEqual_196383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 53), self_196382, 'assertEqual')
        # Getting the type of 'a' (line 539)
        a_196384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 71), 'a', False)
        # Getting the type of 'b' (line 539)
        b_196385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 74), 'b', False)
        # Processing the call keyword arguments (line 539)
        str_196386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 34), 'str', 'foo')
        keyword_196387 = str_196386
        kwargs_196388 = {'msg': keyword_196387}
        # Getting the type of 'self' (line 539)
        self_196378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 539)
        assertRaises_196379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 12), self_196378, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 539)
        assertRaises_call_result_196389 = invoke(stypy.reporting.localization.Localization(__file__, 539, 12), assertRaises_196379, *[failureException_196381, assertEqual_196383, a_196384, b_196385], **kwargs_196388)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testAssertEqual(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertEqual' in the type store
        # Getting the type of 'stypy_return_type' (line 505)
        stypy_return_type_196390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196390)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertEqual'
        return stypy_return_type_196390


    @norecursion
    def testEquality(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testEquality'
        module_type_store = module_type_store.open_function_context('testEquality', 542, 4, False)
        # Assigning a type to the variable 'self' (line 543)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 543, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testEquality')
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testEquality.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testEquality', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testEquality', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testEquality(...)' code ##################

        
        # Call to assertListEqual(...): (line 543)
        # Processing the call arguments (line 543)
        
        # Obtaining an instance of the builtin type 'list' (line 543)
        list_196393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 543, 29), 'list')
        # Adding type elements to the builtin type 'list' instance (line 543)
        
        
        # Obtaining an instance of the builtin type 'list' (line 543)
        list_196394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 543, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 543)
        
        # Processing the call keyword arguments (line 543)
        kwargs_196395 = {}
        # Getting the type of 'self' (line 543)
        self_196391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 8), 'self', False)
        # Obtaining the member 'assertListEqual' of a type (line 543)
        assertListEqual_196392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 8), self_196391, 'assertListEqual')
        # Calling assertListEqual(args, kwargs) (line 543)
        assertListEqual_call_result_196396 = invoke(stypy.reporting.localization.Localization(__file__, 543, 8), assertListEqual_196392, *[list_196393, list_196394], **kwargs_196395)
        
        
        # Call to assertTupleEqual(...): (line 544)
        # Processing the call arguments (line 544)
        
        # Obtaining an instance of the builtin type 'tuple' (line 544)
        tuple_196399 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 30), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 544)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 544)
        tuple_196400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 544)
        
        # Processing the call keyword arguments (line 544)
        kwargs_196401 = {}
        # Getting the type of 'self' (line 544)
        self_196397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'self', False)
        # Obtaining the member 'assertTupleEqual' of a type (line 544)
        assertTupleEqual_196398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), self_196397, 'assertTupleEqual')
        # Calling assertTupleEqual(args, kwargs) (line 544)
        assertTupleEqual_call_result_196402 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), assertTupleEqual_196398, *[tuple_196399, tuple_196400], **kwargs_196401)
        
        
        # Call to assertSequenceEqual(...): (line 545)
        # Processing the call arguments (line 545)
        
        # Obtaining an instance of the builtin type 'list' (line 545)
        list_196405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 545)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 545)
        tuple_196406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 545, 37), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 545)
        
        # Processing the call keyword arguments (line 545)
        kwargs_196407 = {}
        # Getting the type of 'self' (line 545)
        self_196403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 545)
        assertSequenceEqual_196404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 8), self_196403, 'assertSequenceEqual')
        # Calling assertSequenceEqual(args, kwargs) (line 545)
        assertSequenceEqual_call_result_196408 = invoke(stypy.reporting.localization.Localization(__file__, 545, 8), assertSequenceEqual_196404, *[list_196405, tuple_196406], **kwargs_196407)
        
        
        # Assigning a List to a Name (line 547):
        
        # Assigning a List to a Name (line 547):
        
        # Obtaining an instance of the builtin type 'list' (line 547)
        list_196409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 547)
        # Adding element type (line 547)
        int_196410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 13), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 12), list_196409, int_196410)
        # Adding element type (line 547)
        str_196411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 16), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 12), list_196409, str_196411)
        # Adding element type (line 547)
        
        # Obtaining an instance of the builtin type 'list' (line 547)
        list_196412 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 547, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 547)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 547, 12), list_196409, list_196412)
        
        # Assigning a type to the variable 'a' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 8), 'a', list_196409)
        
        # Assigning a List to a Name (line 548):
        
        # Assigning a List to a Name (line 548):
        
        # Obtaining an instance of the builtin type 'list' (line 548)
        list_196413 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 548, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 548)
        
        # Assigning a type to the variable 'b' (line 548)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'b', list_196413)
        
        # Call to assertRaises(...): (line 549)
        # Processing the call arguments (line 549)
        # Getting the type of 'unittest' (line 549)
        unittest_196416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 26), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 549)
        TestCase_196417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 26), unittest_196416, 'TestCase')
        # Obtaining the member 'failureException' of a type (line 549)
        failureException_196418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 26), TestCase_196417, 'failureException')
        # Getting the type of 'self' (line 550)
        self_196419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 26), 'self', False)
        # Obtaining the member 'assertListEqual' of a type (line 550)
        assertListEqual_196420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 26), self_196419, 'assertListEqual')
        # Getting the type of 'a' (line 550)
        a_196421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 48), 'a', False)
        # Getting the type of 'b' (line 550)
        b_196422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 51), 'b', False)
        # Processing the call keyword arguments (line 549)
        kwargs_196423 = {}
        # Getting the type of 'self' (line 549)
        self_196414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 549)
        assertRaises_196415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 8), self_196414, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 549)
        assertRaises_call_result_196424 = invoke(stypy.reporting.localization.Localization(__file__, 549, 8), assertRaises_196415, *[failureException_196418, assertListEqual_196420, a_196421, b_196422], **kwargs_196423)
        
        
        # Call to assertRaises(...): (line 551)
        # Processing the call arguments (line 551)
        # Getting the type of 'unittest' (line 551)
        unittest_196427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 26), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 551)
        TestCase_196428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 26), unittest_196427, 'TestCase')
        # Obtaining the member 'failureException' of a type (line 551)
        failureException_196429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 26), TestCase_196428, 'failureException')
        # Getting the type of 'self' (line 552)
        self_196430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 26), 'self', False)
        # Obtaining the member 'assertListEqual' of a type (line 552)
        assertListEqual_196431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 26), self_196430, 'assertListEqual')
        
        # Call to tuple(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'a' (line 552)
        a_196433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 54), 'a', False)
        # Processing the call keyword arguments (line 552)
        kwargs_196434 = {}
        # Getting the type of 'tuple' (line 552)
        tuple_196432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 48), 'tuple', False)
        # Calling tuple(args, kwargs) (line 552)
        tuple_call_result_196435 = invoke(stypy.reporting.localization.Localization(__file__, 552, 48), tuple_196432, *[a_196433], **kwargs_196434)
        
        
        # Call to tuple(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'b' (line 552)
        b_196437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 64), 'b', False)
        # Processing the call keyword arguments (line 552)
        kwargs_196438 = {}
        # Getting the type of 'tuple' (line 552)
        tuple_196436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 58), 'tuple', False)
        # Calling tuple(args, kwargs) (line 552)
        tuple_call_result_196439 = invoke(stypy.reporting.localization.Localization(__file__, 552, 58), tuple_196436, *[b_196437], **kwargs_196438)
        
        # Processing the call keyword arguments (line 551)
        kwargs_196440 = {}
        # Getting the type of 'self' (line 551)
        self_196425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 551)
        assertRaises_196426 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 8), self_196425, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 551)
        assertRaises_call_result_196441 = invoke(stypy.reporting.localization.Localization(__file__, 551, 8), assertRaises_196426, *[failureException_196429, assertListEqual_196431, tuple_call_result_196435, tuple_call_result_196439], **kwargs_196440)
        
        
        # Call to assertRaises(...): (line 553)
        # Processing the call arguments (line 553)
        # Getting the type of 'unittest' (line 553)
        unittest_196444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 26), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 553)
        TestCase_196445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 26), unittest_196444, 'TestCase')
        # Obtaining the member 'failureException' of a type (line 553)
        failureException_196446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 26), TestCase_196445, 'failureException')
        # Getting the type of 'self' (line 554)
        self_196447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 26), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 554)
        assertSequenceEqual_196448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 26), self_196447, 'assertSequenceEqual')
        # Getting the type of 'a' (line 554)
        a_196449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 52), 'a', False)
        
        # Call to tuple(...): (line 554)
        # Processing the call arguments (line 554)
        # Getting the type of 'b' (line 554)
        b_196451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 61), 'b', False)
        # Processing the call keyword arguments (line 554)
        kwargs_196452 = {}
        # Getting the type of 'tuple' (line 554)
        tuple_196450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 55), 'tuple', False)
        # Calling tuple(args, kwargs) (line 554)
        tuple_call_result_196453 = invoke(stypy.reporting.localization.Localization(__file__, 554, 55), tuple_196450, *[b_196451], **kwargs_196452)
        
        # Processing the call keyword arguments (line 553)
        kwargs_196454 = {}
        # Getting the type of 'self' (line 553)
        self_196442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 553)
        assertRaises_196443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 8), self_196442, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 553)
        assertRaises_call_result_196455 = invoke(stypy.reporting.localization.Localization(__file__, 553, 8), assertRaises_196443, *[failureException_196446, assertSequenceEqual_196448, a_196449, tuple_call_result_196453], **kwargs_196454)
        
        
        # Call to extend(...): (line 556)
        # Processing the call arguments (line 556)
        # Getting the type of 'a' (line 556)
        a_196458 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 17), 'a', False)
        # Processing the call keyword arguments (line 556)
        kwargs_196459 = {}
        # Getting the type of 'b' (line 556)
        b_196456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'b', False)
        # Obtaining the member 'extend' of a type (line 556)
        extend_196457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 8), b_196456, 'extend')
        # Calling extend(args, kwargs) (line 556)
        extend_call_result_196460 = invoke(stypy.reporting.localization.Localization(__file__, 556, 8), extend_196457, *[a_196458], **kwargs_196459)
        
        
        # Call to assertListEqual(...): (line 557)
        # Processing the call arguments (line 557)
        # Getting the type of 'a' (line 557)
        a_196463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 29), 'a', False)
        # Getting the type of 'b' (line 557)
        b_196464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 32), 'b', False)
        # Processing the call keyword arguments (line 557)
        kwargs_196465 = {}
        # Getting the type of 'self' (line 557)
        self_196461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 8), 'self', False)
        # Obtaining the member 'assertListEqual' of a type (line 557)
        assertListEqual_196462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 8), self_196461, 'assertListEqual')
        # Calling assertListEqual(args, kwargs) (line 557)
        assertListEqual_call_result_196466 = invoke(stypy.reporting.localization.Localization(__file__, 557, 8), assertListEqual_196462, *[a_196463, b_196464], **kwargs_196465)
        
        
        # Call to assertTupleEqual(...): (line 558)
        # Processing the call arguments (line 558)
        
        # Call to tuple(...): (line 558)
        # Processing the call arguments (line 558)
        # Getting the type of 'a' (line 558)
        a_196470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 36), 'a', False)
        # Processing the call keyword arguments (line 558)
        kwargs_196471 = {}
        # Getting the type of 'tuple' (line 558)
        tuple_196469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 30), 'tuple', False)
        # Calling tuple(args, kwargs) (line 558)
        tuple_call_result_196472 = invoke(stypy.reporting.localization.Localization(__file__, 558, 30), tuple_196469, *[a_196470], **kwargs_196471)
        
        
        # Call to tuple(...): (line 558)
        # Processing the call arguments (line 558)
        # Getting the type of 'b' (line 558)
        b_196474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 46), 'b', False)
        # Processing the call keyword arguments (line 558)
        kwargs_196475 = {}
        # Getting the type of 'tuple' (line 558)
        tuple_196473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 40), 'tuple', False)
        # Calling tuple(args, kwargs) (line 558)
        tuple_call_result_196476 = invoke(stypy.reporting.localization.Localization(__file__, 558, 40), tuple_196473, *[b_196474], **kwargs_196475)
        
        # Processing the call keyword arguments (line 558)
        kwargs_196477 = {}
        # Getting the type of 'self' (line 558)
        self_196467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 8), 'self', False)
        # Obtaining the member 'assertTupleEqual' of a type (line 558)
        assertTupleEqual_196468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 8), self_196467, 'assertTupleEqual')
        # Calling assertTupleEqual(args, kwargs) (line 558)
        assertTupleEqual_call_result_196478 = invoke(stypy.reporting.localization.Localization(__file__, 558, 8), assertTupleEqual_196468, *[tuple_call_result_196472, tuple_call_result_196476], **kwargs_196477)
        
        
        # Call to assertSequenceEqual(...): (line 559)
        # Processing the call arguments (line 559)
        # Getting the type of 'a' (line 559)
        a_196481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 33), 'a', False)
        
        # Call to tuple(...): (line 559)
        # Processing the call arguments (line 559)
        # Getting the type of 'b' (line 559)
        b_196483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 42), 'b', False)
        # Processing the call keyword arguments (line 559)
        kwargs_196484 = {}
        # Getting the type of 'tuple' (line 559)
        tuple_196482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 36), 'tuple', False)
        # Calling tuple(args, kwargs) (line 559)
        tuple_call_result_196485 = invoke(stypy.reporting.localization.Localization(__file__, 559, 36), tuple_196482, *[b_196483], **kwargs_196484)
        
        # Processing the call keyword arguments (line 559)
        kwargs_196486 = {}
        # Getting the type of 'self' (line 559)
        self_196479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 559)
        assertSequenceEqual_196480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 8), self_196479, 'assertSequenceEqual')
        # Calling assertSequenceEqual(args, kwargs) (line 559)
        assertSequenceEqual_call_result_196487 = invoke(stypy.reporting.localization.Localization(__file__, 559, 8), assertSequenceEqual_196480, *[a_196481, tuple_call_result_196485], **kwargs_196486)
        
        
        # Call to assertSequenceEqual(...): (line 560)
        # Processing the call arguments (line 560)
        
        # Call to tuple(...): (line 560)
        # Processing the call arguments (line 560)
        # Getting the type of 'a' (line 560)
        a_196491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 39), 'a', False)
        # Processing the call keyword arguments (line 560)
        kwargs_196492 = {}
        # Getting the type of 'tuple' (line 560)
        tuple_196490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 33), 'tuple', False)
        # Calling tuple(args, kwargs) (line 560)
        tuple_call_result_196493 = invoke(stypy.reporting.localization.Localization(__file__, 560, 33), tuple_196490, *[a_196491], **kwargs_196492)
        
        # Getting the type of 'b' (line 560)
        b_196494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 43), 'b', False)
        # Processing the call keyword arguments (line 560)
        kwargs_196495 = {}
        # Getting the type of 'self' (line 560)
        self_196488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 560)
        assertSequenceEqual_196489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 8), self_196488, 'assertSequenceEqual')
        # Calling assertSequenceEqual(args, kwargs) (line 560)
        assertSequenceEqual_call_result_196496 = invoke(stypy.reporting.localization.Localization(__file__, 560, 8), assertSequenceEqual_196489, *[tuple_call_result_196493, b_196494], **kwargs_196495)
        
        
        # Call to assertRaises(...): (line 562)
        # Processing the call arguments (line 562)
        # Getting the type of 'self' (line 562)
        self_196499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 562)
        failureException_196500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 26), self_196499, 'failureException')
        # Getting the type of 'self' (line 562)
        self_196501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 49), 'self', False)
        # Obtaining the member 'assertListEqual' of a type (line 562)
        assertListEqual_196502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 49), self_196501, 'assertListEqual')
        # Getting the type of 'a' (line 563)
        a_196503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 26), 'a', False)
        
        # Call to tuple(...): (line 563)
        # Processing the call arguments (line 563)
        # Getting the type of 'b' (line 563)
        b_196505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 35), 'b', False)
        # Processing the call keyword arguments (line 563)
        kwargs_196506 = {}
        # Getting the type of 'tuple' (line 563)
        tuple_196504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 29), 'tuple', False)
        # Calling tuple(args, kwargs) (line 563)
        tuple_call_result_196507 = invoke(stypy.reporting.localization.Localization(__file__, 563, 29), tuple_196504, *[b_196505], **kwargs_196506)
        
        # Processing the call keyword arguments (line 562)
        kwargs_196508 = {}
        # Getting the type of 'self' (line 562)
        self_196497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 562)
        assertRaises_196498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 8), self_196497, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 562)
        assertRaises_call_result_196509 = invoke(stypy.reporting.localization.Localization(__file__, 562, 8), assertRaises_196498, *[failureException_196500, assertListEqual_196502, a_196503, tuple_call_result_196507], **kwargs_196508)
        
        
        # Call to assertRaises(...): (line 564)
        # Processing the call arguments (line 564)
        # Getting the type of 'self' (line 564)
        self_196512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 564)
        failureException_196513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 26), self_196512, 'failureException')
        # Getting the type of 'self' (line 564)
        self_196514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 49), 'self', False)
        # Obtaining the member 'assertTupleEqual' of a type (line 564)
        assertTupleEqual_196515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 49), self_196514, 'assertTupleEqual')
        
        # Call to tuple(...): (line 565)
        # Processing the call arguments (line 565)
        # Getting the type of 'a' (line 565)
        a_196517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 32), 'a', False)
        # Processing the call keyword arguments (line 565)
        kwargs_196518 = {}
        # Getting the type of 'tuple' (line 565)
        tuple_196516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 26), 'tuple', False)
        # Calling tuple(args, kwargs) (line 565)
        tuple_call_result_196519 = invoke(stypy.reporting.localization.Localization(__file__, 565, 26), tuple_196516, *[a_196517], **kwargs_196518)
        
        # Getting the type of 'b' (line 565)
        b_196520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 36), 'b', False)
        # Processing the call keyword arguments (line 564)
        kwargs_196521 = {}
        # Getting the type of 'self' (line 564)
        self_196510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 564)
        assertRaises_196511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 8), self_196510, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 564)
        assertRaises_call_result_196522 = invoke(stypy.reporting.localization.Localization(__file__, 564, 8), assertRaises_196511, *[failureException_196513, assertTupleEqual_196515, tuple_call_result_196519, b_196520], **kwargs_196521)
        
        
        # Call to assertRaises(...): (line 566)
        # Processing the call arguments (line 566)
        # Getting the type of 'self' (line 566)
        self_196525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 566)
        failureException_196526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 26), self_196525, 'failureException')
        # Getting the type of 'self' (line 566)
        self_196527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 49), 'self', False)
        # Obtaining the member 'assertListEqual' of a type (line 566)
        assertListEqual_196528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 49), self_196527, 'assertListEqual')
        # Getting the type of 'None' (line 566)
        None_196529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 71), 'None', False)
        # Getting the type of 'b' (line 566)
        b_196530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 77), 'b', False)
        # Processing the call keyword arguments (line 566)
        kwargs_196531 = {}
        # Getting the type of 'self' (line 566)
        self_196523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 566)
        assertRaises_196524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 8), self_196523, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 566)
        assertRaises_call_result_196532 = invoke(stypy.reporting.localization.Localization(__file__, 566, 8), assertRaises_196524, *[failureException_196526, assertListEqual_196528, None_196529, b_196530], **kwargs_196531)
        
        
        # Call to assertRaises(...): (line 567)
        # Processing the call arguments (line 567)
        # Getting the type of 'self' (line 567)
        self_196535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 567)
        failureException_196536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 26), self_196535, 'failureException')
        # Getting the type of 'self' (line 567)
        self_196537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 49), 'self', False)
        # Obtaining the member 'assertTupleEqual' of a type (line 567)
        assertTupleEqual_196538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 49), self_196537, 'assertTupleEqual')
        # Getting the type of 'None' (line 567)
        None_196539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 72), 'None', False)
        
        # Call to tuple(...): (line 568)
        # Processing the call arguments (line 568)
        # Getting the type of 'b' (line 568)
        b_196541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 32), 'b', False)
        # Processing the call keyword arguments (line 568)
        kwargs_196542 = {}
        # Getting the type of 'tuple' (line 568)
        tuple_196540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 26), 'tuple', False)
        # Calling tuple(args, kwargs) (line 568)
        tuple_call_result_196543 = invoke(stypy.reporting.localization.Localization(__file__, 568, 26), tuple_196540, *[b_196541], **kwargs_196542)
        
        # Processing the call keyword arguments (line 567)
        kwargs_196544 = {}
        # Getting the type of 'self' (line 567)
        self_196533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 567)
        assertRaises_196534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 8), self_196533, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 567)
        assertRaises_call_result_196545 = invoke(stypy.reporting.localization.Localization(__file__, 567, 8), assertRaises_196534, *[failureException_196536, assertTupleEqual_196538, None_196539, tuple_call_result_196543], **kwargs_196544)
        
        
        # Call to assertRaises(...): (line 569)
        # Processing the call arguments (line 569)
        # Getting the type of 'self' (line 569)
        self_196548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 569)
        failureException_196549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 26), self_196548, 'failureException')
        # Getting the type of 'self' (line 569)
        self_196550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 49), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 569)
        assertSequenceEqual_196551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 49), self_196550, 'assertSequenceEqual')
        # Getting the type of 'None' (line 570)
        None_196552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 26), 'None', False)
        
        # Call to tuple(...): (line 570)
        # Processing the call arguments (line 570)
        # Getting the type of 'b' (line 570)
        b_196554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 38), 'b', False)
        # Processing the call keyword arguments (line 570)
        kwargs_196555 = {}
        # Getting the type of 'tuple' (line 570)
        tuple_196553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 32), 'tuple', False)
        # Calling tuple(args, kwargs) (line 570)
        tuple_call_result_196556 = invoke(stypy.reporting.localization.Localization(__file__, 570, 32), tuple_196553, *[b_196554], **kwargs_196555)
        
        # Processing the call keyword arguments (line 569)
        kwargs_196557 = {}
        # Getting the type of 'self' (line 569)
        self_196546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 569)
        assertRaises_196547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 569, 8), self_196546, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 569)
        assertRaises_call_result_196558 = invoke(stypy.reporting.localization.Localization(__file__, 569, 8), assertRaises_196547, *[failureException_196549, assertSequenceEqual_196551, None_196552, tuple_call_result_196556], **kwargs_196557)
        
        
        # Call to assertRaises(...): (line 571)
        # Processing the call arguments (line 571)
        # Getting the type of 'self' (line 571)
        self_196561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 571)
        failureException_196562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 26), self_196561, 'failureException')
        # Getting the type of 'self' (line 571)
        self_196563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 49), 'self', False)
        # Obtaining the member 'assertListEqual' of a type (line 571)
        assertListEqual_196564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 49), self_196563, 'assertListEqual')
        int_196565 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 71), 'int')
        int_196566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 571, 74), 'int')
        # Processing the call keyword arguments (line 571)
        kwargs_196567 = {}
        # Getting the type of 'self' (line 571)
        self_196559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 571)
        assertRaises_196560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 8), self_196559, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 571)
        assertRaises_call_result_196568 = invoke(stypy.reporting.localization.Localization(__file__, 571, 8), assertRaises_196560, *[failureException_196562, assertListEqual_196564, int_196565, int_196566], **kwargs_196567)
        
        
        # Call to assertRaises(...): (line 572)
        # Processing the call arguments (line 572)
        # Getting the type of 'self' (line 572)
        self_196571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 572)
        failureException_196572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 26), self_196571, 'failureException')
        # Getting the type of 'self' (line 572)
        self_196573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 49), 'self', False)
        # Obtaining the member 'assertTupleEqual' of a type (line 572)
        assertTupleEqual_196574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 49), self_196573, 'assertTupleEqual')
        int_196575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 72), 'int')
        int_196576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 75), 'int')
        # Processing the call keyword arguments (line 572)
        kwargs_196577 = {}
        # Getting the type of 'self' (line 572)
        self_196569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 572)
        assertRaises_196570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 8), self_196569, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 572)
        assertRaises_call_result_196578 = invoke(stypy.reporting.localization.Localization(__file__, 572, 8), assertRaises_196570, *[failureException_196572, assertTupleEqual_196574, int_196575, int_196576], **kwargs_196577)
        
        
        # Call to assertRaises(...): (line 573)
        # Processing the call arguments (line 573)
        # Getting the type of 'self' (line 573)
        self_196581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 573)
        failureException_196582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 26), self_196581, 'failureException')
        # Getting the type of 'self' (line 573)
        self_196583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 49), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 573)
        assertSequenceEqual_196584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 49), self_196583, 'assertSequenceEqual')
        int_196585 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 26), 'int')
        int_196586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 29), 'int')
        # Processing the call keyword arguments (line 573)
        kwargs_196587 = {}
        # Getting the type of 'self' (line 573)
        self_196579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 573)
        assertRaises_196580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 573, 8), self_196579, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 573)
        assertRaises_call_result_196588 = invoke(stypy.reporting.localization.Localization(__file__, 573, 8), assertRaises_196580, *[failureException_196582, assertSequenceEqual_196584, int_196585, int_196586], **kwargs_196587)
        
        
        # Call to assertDictEqual(...): (line 576)
        # Processing the call arguments (line 576)
        
        # Obtaining an instance of the builtin type 'dict' (line 576)
        dict_196591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 29), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 576)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 576)
        dict_196592 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 33), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 576)
        
        # Processing the call keyword arguments (line 576)
        kwargs_196593 = {}
        # Getting the type of 'self' (line 576)
        self_196589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 8), 'self', False)
        # Obtaining the member 'assertDictEqual' of a type (line 576)
        assertDictEqual_196590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 576, 8), self_196589, 'assertDictEqual')
        # Calling assertDictEqual(args, kwargs) (line 576)
        assertDictEqual_call_result_196594 = invoke(stypy.reporting.localization.Localization(__file__, 576, 8), assertDictEqual_196590, *[dict_196591, dict_196592], **kwargs_196593)
        
        
        # Assigning a Dict to a Name (line 578):
        
        # Assigning a Dict to a Name (line 578):
        
        # Obtaining an instance of the builtin type 'dict' (line 578)
        dict_196595 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 12), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 578)
        # Adding element type (key, value) (line 578)
        str_196596 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 14), 'str', 'x')
        int_196597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 19), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 578, 12), dict_196595, (str_196596, int_196597))
        
        # Assigning a type to the variable 'c' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'c', dict_196595)
        
        # Assigning a Dict to a Name (line 579):
        
        # Assigning a Dict to a Name (line 579):
        
        # Obtaining an instance of the builtin type 'dict' (line 579)
        dict_196598 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 12), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 579)
        
        # Assigning a type to the variable 'd' (line 579)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 579, 8), 'd', dict_196598)
        
        # Call to assertRaises(...): (line 580)
        # Processing the call arguments (line 580)
        # Getting the type of 'unittest' (line 580)
        unittest_196601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 26), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 580)
        TestCase_196602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 26), unittest_196601, 'TestCase')
        # Obtaining the member 'failureException' of a type (line 580)
        failureException_196603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 26), TestCase_196602, 'failureException')
        # Getting the type of 'self' (line 581)
        self_196604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 26), 'self', False)
        # Obtaining the member 'assertDictEqual' of a type (line 581)
        assertDictEqual_196605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 26), self_196604, 'assertDictEqual')
        # Getting the type of 'c' (line 581)
        c_196606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 48), 'c', False)
        # Getting the type of 'd' (line 581)
        d_196607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 51), 'd', False)
        # Processing the call keyword arguments (line 580)
        kwargs_196608 = {}
        # Getting the type of 'self' (line 580)
        self_196599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 580)
        assertRaises_196600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 8), self_196599, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 580)
        assertRaises_call_result_196609 = invoke(stypy.reporting.localization.Localization(__file__, 580, 8), assertRaises_196600, *[failureException_196603, assertDictEqual_196605, c_196606, d_196607], **kwargs_196608)
        
        
        # Call to update(...): (line 583)
        # Processing the call arguments (line 583)
        # Getting the type of 'c' (line 583)
        c_196612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 17), 'c', False)
        # Processing the call keyword arguments (line 583)
        kwargs_196613 = {}
        # Getting the type of 'd' (line 583)
        d_196610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'd', False)
        # Obtaining the member 'update' of a type (line 583)
        update_196611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 8), d_196610, 'update')
        # Calling update(args, kwargs) (line 583)
        update_call_result_196614 = invoke(stypy.reporting.localization.Localization(__file__, 583, 8), update_196611, *[c_196612], **kwargs_196613)
        
        
        # Call to assertDictEqual(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'c' (line 584)
        c_196617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 29), 'c', False)
        # Getting the type of 'd' (line 584)
        d_196618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 32), 'd', False)
        # Processing the call keyword arguments (line 584)
        kwargs_196619 = {}
        # Getting the type of 'self' (line 584)
        self_196615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'self', False)
        # Obtaining the member 'assertDictEqual' of a type (line 584)
        assertDictEqual_196616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 8), self_196615, 'assertDictEqual')
        # Calling assertDictEqual(args, kwargs) (line 584)
        assertDictEqual_call_result_196620 = invoke(stypy.reporting.localization.Localization(__file__, 584, 8), assertDictEqual_196616, *[c_196617, d_196618], **kwargs_196619)
        
        
        # Assigning a Num to a Subscript (line 586):
        
        # Assigning a Num to a Subscript (line 586):
        int_196621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 17), 'int')
        # Getting the type of 'd' (line 586)
        d_196622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 8), 'd')
        str_196623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 10), 'str', 'x')
        # Storing an element on a container (line 586)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 586, 8), d_196622, (str_196623, int_196621))
        
        # Call to assertRaises(...): (line 587)
        # Processing the call arguments (line 587)
        # Getting the type of 'unittest' (line 587)
        unittest_196626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 26), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 587)
        TestCase_196627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 26), unittest_196626, 'TestCase')
        # Obtaining the member 'failureException' of a type (line 587)
        failureException_196628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 26), TestCase_196627, 'failureException')
        # Getting the type of 'self' (line 588)
        self_196629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 26), 'self', False)
        # Obtaining the member 'assertDictEqual' of a type (line 588)
        assertDictEqual_196630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 26), self_196629, 'assertDictEqual')
        # Getting the type of 'c' (line 588)
        c_196631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 48), 'c', False)
        # Getting the type of 'd' (line 588)
        d_196632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 51), 'd', False)
        str_196633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 588, 54), 'str', 'These are unequal')
        # Processing the call keyword arguments (line 587)
        kwargs_196634 = {}
        # Getting the type of 'self' (line 587)
        self_196624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 587)
        assertRaises_196625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 8), self_196624, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 587)
        assertRaises_call_result_196635 = invoke(stypy.reporting.localization.Localization(__file__, 587, 8), assertRaises_196625, *[failureException_196628, assertDictEqual_196630, c_196631, d_196632, str_196633], **kwargs_196634)
        
        
        # Call to assertRaises(...): (line 590)
        # Processing the call arguments (line 590)
        # Getting the type of 'self' (line 590)
        self_196638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 590)
        failureException_196639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 26), self_196638, 'failureException')
        # Getting the type of 'self' (line 590)
        self_196640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 49), 'self', False)
        # Obtaining the member 'assertDictEqual' of a type (line 590)
        assertDictEqual_196641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 49), self_196640, 'assertDictEqual')
        # Getting the type of 'None' (line 590)
        None_196642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 71), 'None', False)
        # Getting the type of 'd' (line 590)
        d_196643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 77), 'd', False)
        # Processing the call keyword arguments (line 590)
        kwargs_196644 = {}
        # Getting the type of 'self' (line 590)
        self_196636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 590)
        assertRaises_196637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 590, 8), self_196636, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 590)
        assertRaises_call_result_196645 = invoke(stypy.reporting.localization.Localization(__file__, 590, 8), assertRaises_196637, *[failureException_196639, assertDictEqual_196641, None_196642, d_196643], **kwargs_196644)
        
        
        # Call to assertRaises(...): (line 591)
        # Processing the call arguments (line 591)
        # Getting the type of 'self' (line 591)
        self_196648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 591)
        failureException_196649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 26), self_196648, 'failureException')
        # Getting the type of 'self' (line 591)
        self_196650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 49), 'self', False)
        # Obtaining the member 'assertDictEqual' of a type (line 591)
        assertDictEqual_196651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 49), self_196650, 'assertDictEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 591)
        list_196652 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 591, 71), 'list')
        # Adding type elements to the builtin type 'list' instance (line 591)
        
        # Getting the type of 'd' (line 591)
        d_196653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 75), 'd', False)
        # Processing the call keyword arguments (line 591)
        kwargs_196654 = {}
        # Getting the type of 'self' (line 591)
        self_196646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 591)
        assertRaises_196647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 591, 8), self_196646, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 591)
        assertRaises_call_result_196655 = invoke(stypy.reporting.localization.Localization(__file__, 591, 8), assertRaises_196647, *[failureException_196649, assertDictEqual_196651, list_196652, d_196653], **kwargs_196654)
        
        
        # Call to assertRaises(...): (line 592)
        # Processing the call arguments (line 592)
        # Getting the type of 'self' (line 592)
        self_196658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 592)
        failureException_196659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 26), self_196658, 'failureException')
        # Getting the type of 'self' (line 592)
        self_196660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 49), 'self', False)
        # Obtaining the member 'assertDictEqual' of a type (line 592)
        assertDictEqual_196661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 49), self_196660, 'assertDictEqual')
        int_196662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 71), 'int')
        int_196663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 74), 'int')
        # Processing the call keyword arguments (line 592)
        kwargs_196664 = {}
        # Getting the type of 'self' (line 592)
        self_196656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 592)
        assertRaises_196657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 8), self_196656, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 592)
        assertRaises_call_result_196665 = invoke(stypy.reporting.localization.Localization(__file__, 592, 8), assertRaises_196657, *[failureException_196659, assertDictEqual_196661, int_196662, int_196663], **kwargs_196664)
        
        
        # ################# End of 'testEquality(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testEquality' in the type store
        # Getting the type of 'stypy_return_type' (line 542)
        stypy_return_type_196666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196666)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testEquality'
        return stypy_return_type_196666


    @norecursion
    def testAssertSequenceEqualMaxDiff(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertSequenceEqualMaxDiff'
        module_type_store = module_type_store.open_function_context('testAssertSequenceEqualMaxDiff', 594, 4, False)
        # Assigning a type to the variable 'self' (line 595)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertSequenceEqualMaxDiff')
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertSequenceEqualMaxDiff.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertSequenceEqualMaxDiff', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertSequenceEqualMaxDiff', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertSequenceEqualMaxDiff(...)' code ##################

        
        # Call to assertEqual(...): (line 595)
        # Processing the call arguments (line 595)
        # Getting the type of 'self' (line 595)
        self_196669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 25), 'self', False)
        # Obtaining the member 'maxDiff' of a type (line 595)
        maxDiff_196670 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 25), self_196669, 'maxDiff')
        int_196671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 39), 'int')
        int_196672 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 42), 'int')
        # Applying the binary operator '*' (line 595)
        result_mul_196673 = python_operator(stypy.reporting.localization.Localization(__file__, 595, 39), '*', int_196671, int_196672)
        
        # Processing the call keyword arguments (line 595)
        kwargs_196674 = {}
        # Getting the type of 'self' (line 595)
        self_196667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 595)
        assertEqual_196668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 8), self_196667, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 595)
        assertEqual_call_result_196675 = invoke(stypy.reporting.localization.Localization(__file__, 595, 8), assertEqual_196668, *[maxDiff_196670, result_mul_196673], **kwargs_196674)
        
        
        # Assigning a BinOp to a Name (line 596):
        
        # Assigning a BinOp to a Name (line 596):
        str_196676 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 15), 'str', 'a')
        str_196677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 21), 'str', 'x')
        int_196678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 27), 'int')
        int_196679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 596, 31), 'int')
        # Applying the binary operator '**' (line 596)
        result_pow_196680 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 27), '**', int_196678, int_196679)
        
        # Applying the binary operator '*' (line 596)
        result_mul_196681 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 21), '*', str_196677, result_pow_196680)
        
        # Applying the binary operator '+' (line 596)
        result_add_196682 = python_operator(stypy.reporting.localization.Localization(__file__, 596, 15), '+', str_196676, result_mul_196681)
        
        # Assigning a type to the variable 'seq1' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 8), 'seq1', result_add_196682)
        
        # Assigning a BinOp to a Name (line 597):
        
        # Assigning a BinOp to a Name (line 597):
        str_196683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 15), 'str', 'b')
        str_196684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 21), 'str', 'x')
        int_196685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 27), 'int')
        int_196686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 31), 'int')
        # Applying the binary operator '**' (line 597)
        result_pow_196687 = python_operator(stypy.reporting.localization.Localization(__file__, 597, 27), '**', int_196685, int_196686)
        
        # Applying the binary operator '*' (line 597)
        result_mul_196688 = python_operator(stypy.reporting.localization.Localization(__file__, 597, 21), '*', str_196684, result_pow_196687)
        
        # Applying the binary operator '+' (line 597)
        result_add_196689 = python_operator(stypy.reporting.localization.Localization(__file__, 597, 15), '+', str_196683, result_mul_196688)
        
        # Assigning a type to the variable 'seq2' (line 597)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 8), 'seq2', result_add_196689)
        
        # Assigning a Call to a Name (line 598):
        
        # Assigning a Call to a Name (line 598):
        
        # Call to join(...): (line 598)
        # Processing the call arguments (line 598)
        
        # Call to ndiff(...): (line 598)
        # Processing the call arguments (line 598)
        
        # Call to splitlines(...): (line 598)
        # Processing the call keyword arguments (line 598)
        kwargs_196700 = {}
        
        # Call to pformat(...): (line 598)
        # Processing the call arguments (line 598)
        # Getting the type of 'seq1' (line 598)
        seq1_196696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 54), 'seq1', False)
        # Processing the call keyword arguments (line 598)
        kwargs_196697 = {}
        # Getting the type of 'pprint' (line 598)
        pprint_196694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 39), 'pprint', False)
        # Obtaining the member 'pformat' of a type (line 598)
        pformat_196695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 39), pprint_196694, 'pformat')
        # Calling pformat(args, kwargs) (line 598)
        pformat_call_result_196698 = invoke(stypy.reporting.localization.Localization(__file__, 598, 39), pformat_196695, *[seq1_196696], **kwargs_196697)
        
        # Obtaining the member 'splitlines' of a type (line 598)
        splitlines_196699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 39), pformat_call_result_196698, 'splitlines')
        # Calling splitlines(args, kwargs) (line 598)
        splitlines_call_result_196701 = invoke(stypy.reporting.localization.Localization(__file__, 598, 39), splitlines_196699, *[], **kwargs_196700)
        
        
        # Call to splitlines(...): (line 599)
        # Processing the call keyword arguments (line 599)
        kwargs_196708 = {}
        
        # Call to pformat(...): (line 599)
        # Processing the call arguments (line 599)
        # Getting the type of 'seq2' (line 599)
        seq2_196704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 54), 'seq2', False)
        # Processing the call keyword arguments (line 599)
        kwargs_196705 = {}
        # Getting the type of 'pprint' (line 599)
        pprint_196702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 39), 'pprint', False)
        # Obtaining the member 'pformat' of a type (line 599)
        pformat_196703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 39), pprint_196702, 'pformat')
        # Calling pformat(args, kwargs) (line 599)
        pformat_call_result_196706 = invoke(stypy.reporting.localization.Localization(__file__, 599, 39), pformat_196703, *[seq2_196704], **kwargs_196705)
        
        # Obtaining the member 'splitlines' of a type (line 599)
        splitlines_196707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 39), pformat_call_result_196706, 'splitlines')
        # Calling splitlines(args, kwargs) (line 599)
        splitlines_call_result_196709 = invoke(stypy.reporting.localization.Localization(__file__, 599, 39), splitlines_196707, *[], **kwargs_196708)
        
        # Processing the call keyword arguments (line 598)
        kwargs_196710 = {}
        # Getting the type of 'difflib' (line 598)
        difflib_196692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 25), 'difflib', False)
        # Obtaining the member 'ndiff' of a type (line 598)
        ndiff_196693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 25), difflib_196692, 'ndiff')
        # Calling ndiff(args, kwargs) (line 598)
        ndiff_call_result_196711 = invoke(stypy.reporting.localization.Localization(__file__, 598, 25), ndiff_196693, *[splitlines_call_result_196701, splitlines_call_result_196709], **kwargs_196710)
        
        # Processing the call keyword arguments (line 598)
        kwargs_196712 = {}
        str_196690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 15), 'str', '\n')
        # Obtaining the member 'join' of a type (line 598)
        join_196691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 15), str_196690, 'join')
        # Calling join(args, kwargs) (line 598)
        join_call_result_196713 = invoke(stypy.reporting.localization.Localization(__file__, 598, 15), join_196691, *[ndiff_call_result_196711], **kwargs_196712)
        
        # Assigning a type to the variable 'diff' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'diff', join_call_result_196713)
        
        # Assigning a BinOp to a Name (line 601):
        
        # Assigning a BinOp to a Name (line 601):
        # Getting the type of 'unittest' (line 601)
        unittest_196714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 18), 'unittest')
        # Obtaining the member 'case' of a type (line 601)
        case_196715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 18), unittest_196714, 'case')
        # Obtaining the member 'DIFF_OMITTED' of a type (line 601)
        DIFF_OMITTED_196716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 18), case_196715, 'DIFF_OMITTED')
        
        # Obtaining an instance of the builtin type 'tuple' (line 601)
        tuple_196717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 601)
        # Adding element type (line 601)
        
        # Call to len(...): (line 601)
        # Processing the call arguments (line 601)
        # Getting the type of 'diff' (line 601)
        diff_196719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 52), 'diff', False)
        # Processing the call keyword arguments (line 601)
        kwargs_196720 = {}
        # Getting the type of 'len' (line 601)
        len_196718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 48), 'len', False)
        # Calling len(args, kwargs) (line 601)
        len_call_result_196721 = invoke(stypy.reporting.localization.Localization(__file__, 601, 48), len_196718, *[diff_196719], **kwargs_196720)
        
        int_196722 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 60), 'int')
        # Applying the binary operator '+' (line 601)
        result_add_196723 = python_operator(stypy.reporting.localization.Localization(__file__, 601, 48), '+', len_call_result_196721, int_196722)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 601, 48), tuple_196717, result_add_196723)
        
        # Applying the binary operator '%' (line 601)
        result_mod_196724 = python_operator(stypy.reporting.localization.Localization(__file__, 601, 18), '%', DIFF_OMITTED_196716, tuple_196717)
        
        # Assigning a type to the variable 'omitted' (line 601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 8), 'omitted', result_mod_196724)
        
        # Assigning a BinOp to a Attribute (line 603):
        
        # Assigning a BinOp to a Attribute (line 603):
        
        # Call to len(...): (line 603)
        # Processing the call arguments (line 603)
        # Getting the type of 'diff' (line 603)
        diff_196726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 27), 'diff', False)
        # Processing the call keyword arguments (line 603)
        kwargs_196727 = {}
        # Getting the type of 'len' (line 603)
        len_196725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 23), 'len', False)
        # Calling len(args, kwargs) (line 603)
        len_call_result_196728 = invoke(stypy.reporting.localization.Localization(__file__, 603, 23), len_196725, *[diff_196726], **kwargs_196727)
        
        int_196729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 34), 'int')
        # Applying the binary operator '//' (line 603)
        result_floordiv_196730 = python_operator(stypy.reporting.localization.Localization(__file__, 603, 23), '//', len_call_result_196728, int_196729)
        
        # Getting the type of 'self' (line 603)
        self_196731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 603)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 8), self_196731, 'maxDiff', result_floordiv_196730)
        
        
        # SSA begins for try-except statement (line 604)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertSequenceEqual(...): (line 605)
        # Processing the call arguments (line 605)
        # Getting the type of 'seq1' (line 605)
        seq1_196734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 37), 'seq1', False)
        # Getting the type of 'seq2' (line 605)
        seq2_196735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 43), 'seq2', False)
        # Processing the call keyword arguments (line 605)
        kwargs_196736 = {}
        # Getting the type of 'self' (line 605)
        self_196732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 12), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 605)
        assertSequenceEqual_196733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 12), self_196732, 'assertSequenceEqual')
        # Calling assertSequenceEqual(args, kwargs) (line 605)
        assertSequenceEqual_call_result_196737 = invoke(stypy.reporting.localization.Localization(__file__, 605, 12), assertSequenceEqual_196733, *[seq1_196734, seq2_196735], **kwargs_196736)
        
        # SSA branch for the except part of a try statement (line 604)
        # SSA branch for the except 'Attribute' branch of a try statement (line 604)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'self' (line 606)
        self_196738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 15), 'self')
        # Obtaining the member 'failureException' of a type (line 606)
        failureException_196739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 15), self_196738, 'failureException')
        # Assigning a type to the variable 'e' (line 606)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 606, 8), 'e', failureException_196739)
        
        # Assigning a Subscript to a Name (line 607):
        
        # Assigning a Subscript to a Name (line 607):
        
        # Obtaining the type of the subscript
        int_196740 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 25), 'int')
        # Getting the type of 'e' (line 607)
        e_196741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 18), 'e')
        # Obtaining the member 'args' of a type (line 607)
        args_196742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 18), e_196741, 'args')
        # Obtaining the member '__getitem__' of a type (line 607)
        getitem___196743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 18), args_196742, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 607)
        subscript_call_result_196744 = invoke(stypy.reporting.localization.Localization(__file__, 607, 18), getitem___196743, int_196740)
        
        # Assigning a type to the variable 'msg' (line 607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 12), 'msg', subscript_call_result_196744)
        # SSA branch for the else branch of a try statement (line 604)
        module_type_store.open_ssa_branch('except else')
        
        # Call to fail(...): (line 609)
        # Processing the call arguments (line 609)
        str_196747 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 609, 22), 'str', 'assertSequenceEqual did not fail.')
        # Processing the call keyword arguments (line 609)
        kwargs_196748 = {}
        # Getting the type of 'self' (line 609)
        self_196745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 12), 'self', False)
        # Obtaining the member 'fail' of a type (line 609)
        fail_196746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 12), self_196745, 'fail')
        # Calling fail(args, kwargs) (line 609)
        fail_call_result_196749 = invoke(stypy.reporting.localization.Localization(__file__, 609, 12), fail_196746, *[str_196747], **kwargs_196748)
        
        # SSA join for try-except statement (line 604)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to assertLess(...): (line 610)
        # Processing the call arguments (line 610)
        
        # Call to len(...): (line 610)
        # Processing the call arguments (line 610)
        # Getting the type of 'msg' (line 610)
        msg_196753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 28), 'msg', False)
        # Processing the call keyword arguments (line 610)
        kwargs_196754 = {}
        # Getting the type of 'len' (line 610)
        len_196752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 24), 'len', False)
        # Calling len(args, kwargs) (line 610)
        len_call_result_196755 = invoke(stypy.reporting.localization.Localization(__file__, 610, 24), len_196752, *[msg_196753], **kwargs_196754)
        
        
        # Call to len(...): (line 610)
        # Processing the call arguments (line 610)
        # Getting the type of 'diff' (line 610)
        diff_196757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 38), 'diff', False)
        # Processing the call keyword arguments (line 610)
        kwargs_196758 = {}
        # Getting the type of 'len' (line 610)
        len_196756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 34), 'len', False)
        # Calling len(args, kwargs) (line 610)
        len_call_result_196759 = invoke(stypy.reporting.localization.Localization(__file__, 610, 34), len_196756, *[diff_196757], **kwargs_196758)
        
        # Processing the call keyword arguments (line 610)
        kwargs_196760 = {}
        # Getting the type of 'self' (line 610)
        self_196750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 8), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 610)
        assertLess_196751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 610, 8), self_196750, 'assertLess')
        # Calling assertLess(args, kwargs) (line 610)
        assertLess_call_result_196761 = invoke(stypy.reporting.localization.Localization(__file__, 610, 8), assertLess_196751, *[len_call_result_196755, len_call_result_196759], **kwargs_196760)
        
        
        # Call to assertIn(...): (line 611)
        # Processing the call arguments (line 611)
        # Getting the type of 'omitted' (line 611)
        omitted_196764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 22), 'omitted', False)
        # Getting the type of 'msg' (line 611)
        msg_196765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 31), 'msg', False)
        # Processing the call keyword arguments (line 611)
        kwargs_196766 = {}
        # Getting the type of 'self' (line 611)
        self_196762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 8), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 611)
        assertIn_196763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 611, 8), self_196762, 'assertIn')
        # Calling assertIn(args, kwargs) (line 611)
        assertIn_call_result_196767 = invoke(stypy.reporting.localization.Localization(__file__, 611, 8), assertIn_196763, *[omitted_196764, msg_196765], **kwargs_196766)
        
        
        # Assigning a BinOp to a Attribute (line 613):
        
        # Assigning a BinOp to a Attribute (line 613):
        
        # Call to len(...): (line 613)
        # Processing the call arguments (line 613)
        # Getting the type of 'diff' (line 613)
        diff_196769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 27), 'diff', False)
        # Processing the call keyword arguments (line 613)
        kwargs_196770 = {}
        # Getting the type of 'len' (line 613)
        len_196768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 23), 'len', False)
        # Calling len(args, kwargs) (line 613)
        len_call_result_196771 = invoke(stypy.reporting.localization.Localization(__file__, 613, 23), len_196768, *[diff_196769], **kwargs_196770)
        
        int_196772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 35), 'int')
        # Applying the binary operator '*' (line 613)
        result_mul_196773 = python_operator(stypy.reporting.localization.Localization(__file__, 613, 23), '*', len_call_result_196771, int_196772)
        
        # Getting the type of 'self' (line 613)
        self_196774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 613)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 8), self_196774, 'maxDiff', result_mul_196773)
        
        
        # SSA begins for try-except statement (line 614)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertSequenceEqual(...): (line 615)
        # Processing the call arguments (line 615)
        # Getting the type of 'seq1' (line 615)
        seq1_196777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 37), 'seq1', False)
        # Getting the type of 'seq2' (line 615)
        seq2_196778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 43), 'seq2', False)
        # Processing the call keyword arguments (line 615)
        kwargs_196779 = {}
        # Getting the type of 'self' (line 615)
        self_196775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 12), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 615)
        assertSequenceEqual_196776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 12), self_196775, 'assertSequenceEqual')
        # Calling assertSequenceEqual(args, kwargs) (line 615)
        assertSequenceEqual_call_result_196780 = invoke(stypy.reporting.localization.Localization(__file__, 615, 12), assertSequenceEqual_196776, *[seq1_196777, seq2_196778], **kwargs_196779)
        
        # SSA branch for the except part of a try statement (line 614)
        # SSA branch for the except 'Attribute' branch of a try statement (line 614)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'self' (line 616)
        self_196781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 15), 'self')
        # Obtaining the member 'failureException' of a type (line 616)
        failureException_196782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 15), self_196781, 'failureException')
        # Assigning a type to the variable 'e' (line 616)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 8), 'e', failureException_196782)
        
        # Assigning a Subscript to a Name (line 617):
        
        # Assigning a Subscript to a Name (line 617):
        
        # Obtaining the type of the subscript
        int_196783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 25), 'int')
        # Getting the type of 'e' (line 617)
        e_196784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 18), 'e')
        # Obtaining the member 'args' of a type (line 617)
        args_196785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 18), e_196784, 'args')
        # Obtaining the member '__getitem__' of a type (line 617)
        getitem___196786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 18), args_196785, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 617)
        subscript_call_result_196787 = invoke(stypy.reporting.localization.Localization(__file__, 617, 18), getitem___196786, int_196783)
        
        # Assigning a type to the variable 'msg' (line 617)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 617, 12), 'msg', subscript_call_result_196787)
        # SSA branch for the else branch of a try statement (line 614)
        module_type_store.open_ssa_branch('except else')
        
        # Call to fail(...): (line 619)
        # Processing the call arguments (line 619)
        str_196790 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 22), 'str', 'assertSequenceEqual did not fail.')
        # Processing the call keyword arguments (line 619)
        kwargs_196791 = {}
        # Getting the type of 'self' (line 619)
        self_196788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 12), 'self', False)
        # Obtaining the member 'fail' of a type (line 619)
        fail_196789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 12), self_196788, 'fail')
        # Calling fail(args, kwargs) (line 619)
        fail_call_result_196792 = invoke(stypy.reporting.localization.Localization(__file__, 619, 12), fail_196789, *[str_196790], **kwargs_196791)
        
        # SSA join for try-except statement (line 614)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to assertGreater(...): (line 620)
        # Processing the call arguments (line 620)
        
        # Call to len(...): (line 620)
        # Processing the call arguments (line 620)
        # Getting the type of 'msg' (line 620)
        msg_196796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 31), 'msg', False)
        # Processing the call keyword arguments (line 620)
        kwargs_196797 = {}
        # Getting the type of 'len' (line 620)
        len_196795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 27), 'len', False)
        # Calling len(args, kwargs) (line 620)
        len_call_result_196798 = invoke(stypy.reporting.localization.Localization(__file__, 620, 27), len_196795, *[msg_196796], **kwargs_196797)
        
        
        # Call to len(...): (line 620)
        # Processing the call arguments (line 620)
        # Getting the type of 'diff' (line 620)
        diff_196800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 41), 'diff', False)
        # Processing the call keyword arguments (line 620)
        kwargs_196801 = {}
        # Getting the type of 'len' (line 620)
        len_196799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 37), 'len', False)
        # Calling len(args, kwargs) (line 620)
        len_call_result_196802 = invoke(stypy.reporting.localization.Localization(__file__, 620, 37), len_196799, *[diff_196800], **kwargs_196801)
        
        # Processing the call keyword arguments (line 620)
        kwargs_196803 = {}
        # Getting the type of 'self' (line 620)
        self_196793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 620)
        assertGreater_196794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 8), self_196793, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 620)
        assertGreater_call_result_196804 = invoke(stypy.reporting.localization.Localization(__file__, 620, 8), assertGreater_196794, *[len_call_result_196798, len_call_result_196802], **kwargs_196803)
        
        
        # Call to assertNotIn(...): (line 621)
        # Processing the call arguments (line 621)
        # Getting the type of 'omitted' (line 621)
        omitted_196807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 25), 'omitted', False)
        # Getting the type of 'msg' (line 621)
        msg_196808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 34), 'msg', False)
        # Processing the call keyword arguments (line 621)
        kwargs_196809 = {}
        # Getting the type of 'self' (line 621)
        self_196805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 621)
        assertNotIn_196806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 8), self_196805, 'assertNotIn')
        # Calling assertNotIn(args, kwargs) (line 621)
        assertNotIn_call_result_196810 = invoke(stypy.reporting.localization.Localization(__file__, 621, 8), assertNotIn_196806, *[omitted_196807, msg_196808], **kwargs_196809)
        
        
        # Assigning a Name to a Attribute (line 623):
        
        # Assigning a Name to a Attribute (line 623):
        # Getting the type of 'None' (line 623)
        None_196811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 23), 'None')
        # Getting the type of 'self' (line 623)
        self_196812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 623)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 8), self_196812, 'maxDiff', None_196811)
        
        
        # SSA begins for try-except statement (line 624)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertSequenceEqual(...): (line 625)
        # Processing the call arguments (line 625)
        # Getting the type of 'seq1' (line 625)
        seq1_196815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 37), 'seq1', False)
        # Getting the type of 'seq2' (line 625)
        seq2_196816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 43), 'seq2', False)
        # Processing the call keyword arguments (line 625)
        kwargs_196817 = {}
        # Getting the type of 'self' (line 625)
        self_196813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 12), 'self', False)
        # Obtaining the member 'assertSequenceEqual' of a type (line 625)
        assertSequenceEqual_196814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 12), self_196813, 'assertSequenceEqual')
        # Calling assertSequenceEqual(args, kwargs) (line 625)
        assertSequenceEqual_call_result_196818 = invoke(stypy.reporting.localization.Localization(__file__, 625, 12), assertSequenceEqual_196814, *[seq1_196815, seq2_196816], **kwargs_196817)
        
        # SSA branch for the except part of a try statement (line 624)
        # SSA branch for the except 'Attribute' branch of a try statement (line 624)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'self' (line 626)
        self_196819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 15), 'self')
        # Obtaining the member 'failureException' of a type (line 626)
        failureException_196820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 15), self_196819, 'failureException')
        # Assigning a type to the variable 'e' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'e', failureException_196820)
        
        # Assigning a Subscript to a Name (line 627):
        
        # Assigning a Subscript to a Name (line 627):
        
        # Obtaining the type of the subscript
        int_196821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 25), 'int')
        # Getting the type of 'e' (line 627)
        e_196822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 18), 'e')
        # Obtaining the member 'args' of a type (line 627)
        args_196823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 18), e_196822, 'args')
        # Obtaining the member '__getitem__' of a type (line 627)
        getitem___196824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 18), args_196823, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 627)
        subscript_call_result_196825 = invoke(stypy.reporting.localization.Localization(__file__, 627, 18), getitem___196824, int_196821)
        
        # Assigning a type to the variable 'msg' (line 627)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 12), 'msg', subscript_call_result_196825)
        # SSA branch for the else branch of a try statement (line 624)
        module_type_store.open_ssa_branch('except else')
        
        # Call to fail(...): (line 629)
        # Processing the call arguments (line 629)
        str_196828 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 22), 'str', 'assertSequenceEqual did not fail.')
        # Processing the call keyword arguments (line 629)
        kwargs_196829 = {}
        # Getting the type of 'self' (line 629)
        self_196826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 12), 'self', False)
        # Obtaining the member 'fail' of a type (line 629)
        fail_196827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 12), self_196826, 'fail')
        # Calling fail(args, kwargs) (line 629)
        fail_call_result_196830 = invoke(stypy.reporting.localization.Localization(__file__, 629, 12), fail_196827, *[str_196828], **kwargs_196829)
        
        # SSA join for try-except statement (line 624)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # Call to assertGreater(...): (line 630)
        # Processing the call arguments (line 630)
        
        # Call to len(...): (line 630)
        # Processing the call arguments (line 630)
        # Getting the type of 'msg' (line 630)
        msg_196834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 31), 'msg', False)
        # Processing the call keyword arguments (line 630)
        kwargs_196835 = {}
        # Getting the type of 'len' (line 630)
        len_196833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 27), 'len', False)
        # Calling len(args, kwargs) (line 630)
        len_call_result_196836 = invoke(stypy.reporting.localization.Localization(__file__, 630, 27), len_196833, *[msg_196834], **kwargs_196835)
        
        
        # Call to len(...): (line 630)
        # Processing the call arguments (line 630)
        # Getting the type of 'diff' (line 630)
        diff_196838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 41), 'diff', False)
        # Processing the call keyword arguments (line 630)
        kwargs_196839 = {}
        # Getting the type of 'len' (line 630)
        len_196837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 37), 'len', False)
        # Calling len(args, kwargs) (line 630)
        len_call_result_196840 = invoke(stypy.reporting.localization.Localization(__file__, 630, 37), len_196837, *[diff_196838], **kwargs_196839)
        
        # Processing the call keyword arguments (line 630)
        kwargs_196841 = {}
        # Getting the type of 'self' (line 630)
        self_196831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 630)
        assertGreater_196832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 8), self_196831, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 630)
        assertGreater_call_result_196842 = invoke(stypy.reporting.localization.Localization(__file__, 630, 8), assertGreater_196832, *[len_call_result_196836, len_call_result_196840], **kwargs_196841)
        
        
        # Call to assertNotIn(...): (line 631)
        # Processing the call arguments (line 631)
        # Getting the type of 'omitted' (line 631)
        omitted_196845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 25), 'omitted', False)
        # Getting the type of 'msg' (line 631)
        msg_196846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 34), 'msg', False)
        # Processing the call keyword arguments (line 631)
        kwargs_196847 = {}
        # Getting the type of 'self' (line 631)
        self_196843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 631)
        assertNotIn_196844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 8), self_196843, 'assertNotIn')
        # Calling assertNotIn(args, kwargs) (line 631)
        assertNotIn_call_result_196848 = invoke(stypy.reporting.localization.Localization(__file__, 631, 8), assertNotIn_196844, *[omitted_196845, msg_196846], **kwargs_196847)
        
        
        # ################# End of 'testAssertSequenceEqualMaxDiff(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertSequenceEqualMaxDiff' in the type store
        # Getting the type of 'stypy_return_type' (line 594)
        stypy_return_type_196849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196849)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertSequenceEqualMaxDiff'
        return stypy_return_type_196849


    @norecursion
    def testTruncateMessage(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testTruncateMessage'
        module_type_store = module_type_store.open_function_context('testTruncateMessage', 633, 4, False)
        # Assigning a type to the variable 'self' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testTruncateMessage')
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testTruncateMessage.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testTruncateMessage', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testTruncateMessage', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testTruncateMessage(...)' code ##################

        
        # Assigning a Num to a Attribute (line 634):
        
        # Assigning a Num to a Attribute (line 634):
        int_196850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 634, 23), 'int')
        # Getting the type of 'self' (line 634)
        self_196851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 634)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 8), self_196851, 'maxDiff', int_196850)
        
        # Assigning a Call to a Name (line 635):
        
        # Assigning a Call to a Name (line 635):
        
        # Call to _truncateMessage(...): (line 635)
        # Processing the call arguments (line 635)
        str_196854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 40), 'str', 'foo')
        str_196855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 635, 47), 'str', 'bar')
        # Processing the call keyword arguments (line 635)
        kwargs_196856 = {}
        # Getting the type of 'self' (line 635)
        self_196852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 18), 'self', False)
        # Obtaining the member '_truncateMessage' of a type (line 635)
        _truncateMessage_196853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 18), self_196852, '_truncateMessage')
        # Calling _truncateMessage(args, kwargs) (line 635)
        _truncateMessage_call_result_196857 = invoke(stypy.reporting.localization.Localization(__file__, 635, 18), _truncateMessage_196853, *[str_196854, str_196855], **kwargs_196856)
        
        # Assigning a type to the variable 'message' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'message', _truncateMessage_call_result_196857)
        
        # Assigning a BinOp to a Name (line 636):
        
        # Assigning a BinOp to a Name (line 636):
        # Getting the type of 'unittest' (line 636)
        unittest_196858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 18), 'unittest')
        # Obtaining the member 'case' of a type (line 636)
        case_196859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 18), unittest_196858, 'case')
        # Obtaining the member 'DIFF_OMITTED' of a type (line 636)
        DIFF_OMITTED_196860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 636, 18), case_196859, 'DIFF_OMITTED')
        
        # Call to len(...): (line 636)
        # Processing the call arguments (line 636)
        str_196862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 51), 'str', 'bar')
        # Processing the call keyword arguments (line 636)
        kwargs_196863 = {}
        # Getting the type of 'len' (line 636)
        len_196861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 47), 'len', False)
        # Calling len(args, kwargs) (line 636)
        len_call_result_196864 = invoke(stypy.reporting.localization.Localization(__file__, 636, 47), len_196861, *[str_196862], **kwargs_196863)
        
        # Applying the binary operator '%' (line 636)
        result_mod_196865 = python_operator(stypy.reporting.localization.Localization(__file__, 636, 18), '%', DIFF_OMITTED_196860, len_call_result_196864)
        
        # Assigning a type to the variable 'omitted' (line 636)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'omitted', result_mod_196865)
        
        # Call to assertEqual(...): (line 637)
        # Processing the call arguments (line 637)
        # Getting the type of 'message' (line 637)
        message_196868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 25), 'message', False)
        str_196869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 34), 'str', 'foo')
        # Getting the type of 'omitted' (line 637)
        omitted_196870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 42), 'omitted', False)
        # Applying the binary operator '+' (line 637)
        result_add_196871 = python_operator(stypy.reporting.localization.Localization(__file__, 637, 34), '+', str_196869, omitted_196870)
        
        # Processing the call keyword arguments (line 637)
        kwargs_196872 = {}
        # Getting the type of 'self' (line 637)
        self_196866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 637)
        assertEqual_196867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 637, 8), self_196866, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 637)
        assertEqual_call_result_196873 = invoke(stypy.reporting.localization.Localization(__file__, 637, 8), assertEqual_196867, *[message_196868, result_add_196871], **kwargs_196872)
        
        
        # Assigning a Name to a Attribute (line 639):
        
        # Assigning a Name to a Attribute (line 639):
        # Getting the type of 'None' (line 639)
        None_196874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 23), 'None')
        # Getting the type of 'self' (line 639)
        self_196875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 639)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 639, 8), self_196875, 'maxDiff', None_196874)
        
        # Assigning a Call to a Name (line 640):
        
        # Assigning a Call to a Name (line 640):
        
        # Call to _truncateMessage(...): (line 640)
        # Processing the call arguments (line 640)
        str_196878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 40), 'str', 'foo')
        str_196879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 47), 'str', 'bar')
        # Processing the call keyword arguments (line 640)
        kwargs_196880 = {}
        # Getting the type of 'self' (line 640)
        self_196876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 18), 'self', False)
        # Obtaining the member '_truncateMessage' of a type (line 640)
        _truncateMessage_196877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 18), self_196876, '_truncateMessage')
        # Calling _truncateMessage(args, kwargs) (line 640)
        _truncateMessage_call_result_196881 = invoke(stypy.reporting.localization.Localization(__file__, 640, 18), _truncateMessage_196877, *[str_196878, str_196879], **kwargs_196880)
        
        # Assigning a type to the variable 'message' (line 640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 8), 'message', _truncateMessage_call_result_196881)
        
        # Call to assertEqual(...): (line 641)
        # Processing the call arguments (line 641)
        # Getting the type of 'message' (line 641)
        message_196884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 25), 'message', False)
        str_196885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 641, 34), 'str', 'foobar')
        # Processing the call keyword arguments (line 641)
        kwargs_196886 = {}
        # Getting the type of 'self' (line 641)
        self_196882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 641)
        assertEqual_196883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 641, 8), self_196882, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 641)
        assertEqual_call_result_196887 = invoke(stypy.reporting.localization.Localization(__file__, 641, 8), assertEqual_196883, *[message_196884, str_196885], **kwargs_196886)
        
        
        # Assigning a Num to a Attribute (line 643):
        
        # Assigning a Num to a Attribute (line 643):
        int_196888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 643, 23), 'int')
        # Getting the type of 'self' (line 643)
        self_196889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 643)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 8), self_196889, 'maxDiff', int_196888)
        
        # Assigning a Call to a Name (line 644):
        
        # Assigning a Call to a Name (line 644):
        
        # Call to _truncateMessage(...): (line 644)
        # Processing the call arguments (line 644)
        str_196892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 40), 'str', 'foo')
        str_196893 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 644, 47), 'str', 'bar')
        # Processing the call keyword arguments (line 644)
        kwargs_196894 = {}
        # Getting the type of 'self' (line 644)
        self_196890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 18), 'self', False)
        # Obtaining the member '_truncateMessage' of a type (line 644)
        _truncateMessage_196891 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 18), self_196890, '_truncateMessage')
        # Calling _truncateMessage(args, kwargs) (line 644)
        _truncateMessage_call_result_196895 = invoke(stypy.reporting.localization.Localization(__file__, 644, 18), _truncateMessage_196891, *[str_196892, str_196893], **kwargs_196894)
        
        # Assigning a type to the variable 'message' (line 644)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 8), 'message', _truncateMessage_call_result_196895)
        
        # Call to assertEqual(...): (line 645)
        # Processing the call arguments (line 645)
        # Getting the type of 'message' (line 645)
        message_196898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 25), 'message', False)
        str_196899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 645, 34), 'str', 'foobar')
        # Processing the call keyword arguments (line 645)
        kwargs_196900 = {}
        # Getting the type of 'self' (line 645)
        self_196896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 645, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 645)
        assertEqual_196897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 645, 8), self_196896, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 645)
        assertEqual_call_result_196901 = invoke(stypy.reporting.localization.Localization(__file__, 645, 8), assertEqual_196897, *[message_196898, str_196899], **kwargs_196900)
        
        
        # ################# End of 'testTruncateMessage(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testTruncateMessage' in the type store
        # Getting the type of 'stypy_return_type' (line 633)
        stypy_return_type_196902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196902)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testTruncateMessage'
        return stypy_return_type_196902


    @norecursion
    def testAssertDictEqualTruncates(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertDictEqualTruncates'
        module_type_store = module_type_store.open_function_context('testAssertDictEqualTruncates', 647, 4, False)
        # Assigning a type to the variable 'self' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertDictEqualTruncates')
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertDictEqualTruncates.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertDictEqualTruncates', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertDictEqualTruncates', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertDictEqualTruncates(...)' code ##################

        
        # Assigning a Call to a Name (line 648):
        
        # Assigning a Call to a Name (line 648):
        
        # Call to TestCase(...): (line 648)
        # Processing the call arguments (line 648)
        str_196905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 648, 33), 'str', 'assertEqual')
        # Processing the call keyword arguments (line 648)
        kwargs_196906 = {}
        # Getting the type of 'unittest' (line 648)
        unittest_196903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 648, 15), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 648)
        TestCase_196904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 648, 15), unittest_196903, 'TestCase')
        # Calling TestCase(args, kwargs) (line 648)
        TestCase_call_result_196907 = invoke(stypy.reporting.localization.Localization(__file__, 648, 15), TestCase_196904, *[str_196905], **kwargs_196906)
        
        # Assigning a type to the variable 'test' (line 648)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 648, 8), 'test', TestCase_call_result_196907)

        @norecursion
        def truncate(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'truncate'
            module_type_store = module_type_store.open_function_context('truncate', 649, 8, False)
            
            # Passed parameters checking function
            truncate.stypy_localization = localization
            truncate.stypy_type_of_self = None
            truncate.stypy_type_store = module_type_store
            truncate.stypy_function_name = 'truncate'
            truncate.stypy_param_names_list = ['msg', 'diff']
            truncate.stypy_varargs_param_name = None
            truncate.stypy_kwargs_param_name = None
            truncate.stypy_call_defaults = defaults
            truncate.stypy_call_varargs = varargs
            truncate.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'truncate', ['msg', 'diff'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'truncate', localization, ['msg', 'diff'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'truncate(...)' code ##################

            str_196908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 650, 19), 'str', 'foo')
            # Assigning a type to the variable 'stypy_return_type' (line 650)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 12), 'stypy_return_type', str_196908)
            
            # ################# End of 'truncate(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'truncate' in the type store
            # Getting the type of 'stypy_return_type' (line 649)
            stypy_return_type_196909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_196909)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'truncate'
            return stypy_return_type_196909

        # Assigning a type to the variable 'truncate' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'truncate', truncate)
        
        # Assigning a Name to a Attribute (line 651):
        
        # Assigning a Name to a Attribute (line 651):
        # Getting the type of 'truncate' (line 651)
        truncate_196910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 32), 'truncate')
        # Getting the type of 'test' (line 651)
        test_196911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 8), 'test')
        # Setting the type of the member '_truncateMessage' of a type (line 651)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 651, 8), test_196911, '_truncateMessage', truncate_196910)
        
        
        # SSA begins for try-except statement (line 652)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertDictEqual(...): (line 653)
        # Processing the call arguments (line 653)
        
        # Obtaining an instance of the builtin type 'dict' (line 653)
        dict_196914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 33), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 653)
        
        
        # Obtaining an instance of the builtin type 'dict' (line 653)
        dict_196915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 37), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 653)
        # Adding element type (key, value) (line 653)
        int_196916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 38), 'int')
        int_196917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 653, 41), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 653, 37), dict_196915, (int_196916, int_196917))
        
        # Processing the call keyword arguments (line 653)
        kwargs_196918 = {}
        # Getting the type of 'test' (line 653)
        test_196912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 12), 'test', False)
        # Obtaining the member 'assertDictEqual' of a type (line 653)
        assertDictEqual_196913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 653, 12), test_196912, 'assertDictEqual')
        # Calling assertDictEqual(args, kwargs) (line 653)
        assertDictEqual_call_result_196919 = invoke(stypy.reporting.localization.Localization(__file__, 653, 12), assertDictEqual_196913, *[dict_196914, dict_196915], **kwargs_196918)
        
        # SSA branch for the except part of a try statement (line 652)
        # SSA branch for the except 'Attribute' branch of a try statement (line 652)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'self' (line 654)
        self_196920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 654, 15), 'self')
        # Obtaining the member 'failureException' of a type (line 654)
        failureException_196921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 654, 15), self_196920, 'failureException')
        # Assigning a type to the variable 'e' (line 654)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 654, 8), 'e', failureException_196921)
        
        # Call to assertEqual(...): (line 655)
        # Processing the call arguments (line 655)
        
        # Call to str(...): (line 655)
        # Processing the call arguments (line 655)
        # Getting the type of 'e' (line 655)
        e_196925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 33), 'e', False)
        # Processing the call keyword arguments (line 655)
        kwargs_196926 = {}
        # Getting the type of 'str' (line 655)
        str_196924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 29), 'str', False)
        # Calling str(args, kwargs) (line 655)
        str_call_result_196927 = invoke(stypy.reporting.localization.Localization(__file__, 655, 29), str_196924, *[e_196925], **kwargs_196926)
        
        str_196928 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 37), 'str', 'foo')
        # Processing the call keyword arguments (line 655)
        kwargs_196929 = {}
        # Getting the type of 'self' (line 655)
        self_196922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 12), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 655)
        assertEqual_196923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 655, 12), self_196922, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 655)
        assertEqual_call_result_196930 = invoke(stypy.reporting.localization.Localization(__file__, 655, 12), assertEqual_196923, *[str_call_result_196927, str_196928], **kwargs_196929)
        
        # SSA branch for the else branch of a try statement (line 652)
        module_type_store.open_ssa_branch('except else')
        
        # Call to fail(...): (line 657)
        # Processing the call arguments (line 657)
        str_196933 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 657, 22), 'str', 'assertDictEqual did not fail')
        # Processing the call keyword arguments (line 657)
        kwargs_196934 = {}
        # Getting the type of 'self' (line 657)
        self_196931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 12), 'self', False)
        # Obtaining the member 'fail' of a type (line 657)
        fail_196932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 657, 12), self_196931, 'fail')
        # Calling fail(args, kwargs) (line 657)
        fail_call_result_196935 = invoke(stypy.reporting.localization.Localization(__file__, 657, 12), fail_196932, *[str_196933], **kwargs_196934)
        
        # SSA join for try-except statement (line 652)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testAssertDictEqualTruncates(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertDictEqualTruncates' in the type store
        # Getting the type of 'stypy_return_type' (line 647)
        stypy_return_type_196936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196936)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertDictEqualTruncates'
        return stypy_return_type_196936


    @norecursion
    def testAssertMultiLineEqualTruncates(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertMultiLineEqualTruncates'
        module_type_store = module_type_store.open_function_context('testAssertMultiLineEqualTruncates', 659, 4, False)
        # Assigning a type to the variable 'self' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertMultiLineEqualTruncates')
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertMultiLineEqualTruncates.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertMultiLineEqualTruncates', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertMultiLineEqualTruncates', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertMultiLineEqualTruncates(...)' code ##################

        
        # Assigning a Call to a Name (line 660):
        
        # Assigning a Call to a Name (line 660):
        
        # Call to TestCase(...): (line 660)
        # Processing the call arguments (line 660)
        str_196939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 33), 'str', 'assertEqual')
        # Processing the call keyword arguments (line 660)
        kwargs_196940 = {}
        # Getting the type of 'unittest' (line 660)
        unittest_196937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 15), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 660)
        TestCase_196938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 660, 15), unittest_196937, 'TestCase')
        # Calling TestCase(args, kwargs) (line 660)
        TestCase_call_result_196941 = invoke(stypy.reporting.localization.Localization(__file__, 660, 15), TestCase_196938, *[str_196939], **kwargs_196940)
        
        # Assigning a type to the variable 'test' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'test', TestCase_call_result_196941)

        @norecursion
        def truncate(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'truncate'
            module_type_store = module_type_store.open_function_context('truncate', 661, 8, False)
            
            # Passed parameters checking function
            truncate.stypy_localization = localization
            truncate.stypy_type_of_self = None
            truncate.stypy_type_store = module_type_store
            truncate.stypy_function_name = 'truncate'
            truncate.stypy_param_names_list = ['msg', 'diff']
            truncate.stypy_varargs_param_name = None
            truncate.stypy_kwargs_param_name = None
            truncate.stypy_call_defaults = defaults
            truncate.stypy_call_varargs = varargs
            truncate.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'truncate', ['msg', 'diff'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'truncate', localization, ['msg', 'diff'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'truncate(...)' code ##################

            str_196942 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 662, 19), 'str', 'foo')
            # Assigning a type to the variable 'stypy_return_type' (line 662)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 662, 12), 'stypy_return_type', str_196942)
            
            # ################# End of 'truncate(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'truncate' in the type store
            # Getting the type of 'stypy_return_type' (line 661)
            stypy_return_type_196943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 661, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_196943)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'truncate'
            return stypy_return_type_196943

        # Assigning a type to the variable 'truncate' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 8), 'truncate', truncate)
        
        # Assigning a Name to a Attribute (line 663):
        
        # Assigning a Name to a Attribute (line 663):
        # Getting the type of 'truncate' (line 663)
        truncate_196944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 32), 'truncate')
        # Getting the type of 'test' (line 663)
        test_196945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 8), 'test')
        # Setting the type of the member '_truncateMessage' of a type (line 663)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 663, 8), test_196945, '_truncateMessage', truncate_196944)
        
        
        # SSA begins for try-except statement (line 664)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertMultiLineEqual(...): (line 665)
        # Processing the call arguments (line 665)
        str_196948 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 38), 'str', 'foo')
        str_196949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 45), 'str', 'bar')
        # Processing the call keyword arguments (line 665)
        kwargs_196950 = {}
        # Getting the type of 'test' (line 665)
        test_196946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 12), 'test', False)
        # Obtaining the member 'assertMultiLineEqual' of a type (line 665)
        assertMultiLineEqual_196947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 12), test_196946, 'assertMultiLineEqual')
        # Calling assertMultiLineEqual(args, kwargs) (line 665)
        assertMultiLineEqual_call_result_196951 = invoke(stypy.reporting.localization.Localization(__file__, 665, 12), assertMultiLineEqual_196947, *[str_196948, str_196949], **kwargs_196950)
        
        # SSA branch for the except part of a try statement (line 664)
        # SSA branch for the except 'Attribute' branch of a try statement (line 664)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'self' (line 666)
        self_196952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 15), 'self')
        # Obtaining the member 'failureException' of a type (line 666)
        failureException_196953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 15), self_196952, 'failureException')
        # Assigning a type to the variable 'e' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'e', failureException_196953)
        
        # Call to assertEqual(...): (line 667)
        # Processing the call arguments (line 667)
        
        # Call to str(...): (line 667)
        # Processing the call arguments (line 667)
        # Getting the type of 'e' (line 667)
        e_196957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 33), 'e', False)
        # Processing the call keyword arguments (line 667)
        kwargs_196958 = {}
        # Getting the type of 'str' (line 667)
        str_196956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 29), 'str', False)
        # Calling str(args, kwargs) (line 667)
        str_call_result_196959 = invoke(stypy.reporting.localization.Localization(__file__, 667, 29), str_196956, *[e_196957], **kwargs_196958)
        
        str_196960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 37), 'str', 'foo')
        # Processing the call keyword arguments (line 667)
        kwargs_196961 = {}
        # Getting the type of 'self' (line 667)
        self_196954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 12), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 667)
        assertEqual_196955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 12), self_196954, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 667)
        assertEqual_call_result_196962 = invoke(stypy.reporting.localization.Localization(__file__, 667, 12), assertEqual_196955, *[str_call_result_196959, str_196960], **kwargs_196961)
        
        # SSA branch for the else branch of a try statement (line 664)
        module_type_store.open_ssa_branch('except else')
        
        # Call to fail(...): (line 669)
        # Processing the call arguments (line 669)
        str_196965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 669, 22), 'str', 'assertMultiLineEqual did not fail')
        # Processing the call keyword arguments (line 669)
        kwargs_196966 = {}
        # Getting the type of 'self' (line 669)
        self_196963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 669, 12), 'self', False)
        # Obtaining the member 'fail' of a type (line 669)
        fail_196964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 669, 12), self_196963, 'fail')
        # Calling fail(args, kwargs) (line 669)
        fail_call_result_196967 = invoke(stypy.reporting.localization.Localization(__file__, 669, 12), fail_196964, *[str_196965], **kwargs_196966)
        
        # SSA join for try-except statement (line 664)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testAssertMultiLineEqualTruncates(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertMultiLineEqualTruncates' in the type store
        # Getting the type of 'stypy_return_type' (line 659)
        stypy_return_type_196968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 659, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_196968)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertMultiLineEqualTruncates'
        return stypy_return_type_196968


    @norecursion
    def testAssertEqual_diffThreshold(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertEqual_diffThreshold'
        module_type_store = module_type_store.open_function_context('testAssertEqual_diffThreshold', 671, 4, False)
        # Assigning a type to the variable 'self' (line 672)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 672, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertEqual_diffThreshold')
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertEqual_diffThreshold.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertEqual_diffThreshold', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertEqual_diffThreshold', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertEqual_diffThreshold(...)' code ##################

        
        # Call to assertEqual(...): (line 673)
        # Processing the call arguments (line 673)
        # Getting the type of 'self' (line 673)
        self_196971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 25), 'self', False)
        # Obtaining the member '_diffThreshold' of a type (line 673)
        _diffThreshold_196972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 25), self_196971, '_diffThreshold')
        int_196973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 46), 'int')
        int_196974 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 49), 'int')
        # Applying the binary operator '**' (line 673)
        result_pow_196975 = python_operator(stypy.reporting.localization.Localization(__file__, 673, 46), '**', int_196973, int_196974)
        
        # Processing the call keyword arguments (line 673)
        kwargs_196976 = {}
        # Getting the type of 'self' (line 673)
        self_196969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 673)
        assertEqual_196970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 8), self_196969, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 673)
        assertEqual_call_result_196977 = invoke(stypy.reporting.localization.Localization(__file__, 673, 8), assertEqual_196970, *[_diffThreshold_196972, result_pow_196975], **kwargs_196976)
        
        
        # Assigning a Name to a Attribute (line 675):
        
        # Assigning a Name to a Attribute (line 675):
        # Getting the type of 'None' (line 675)
        None_196978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 23), 'None')
        # Getting the type of 'self' (line 675)
        self_196979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 675)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 8), self_196979, 'maxDiff', None_196978)
        
        # Assigning a Attribute to a Name (line 678):
        
        # Assigning a Attribute to a Name (line 678):
        # Getting the type of 'self' (line 678)
        self_196980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 24), 'self')
        # Obtaining the member '_diffThreshold' of a type (line 678)
        _diffThreshold_196981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 24), self_196980, '_diffThreshold')
        # Assigning a type to the variable 'old_threshold' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'old_threshold', _diffThreshold_196981)
        
        # Assigning a BinOp to a Attribute (line 679):
        
        # Assigning a BinOp to a Attribute (line 679):
        int_196982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 679, 30), 'int')
        int_196983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 679, 33), 'int')
        # Applying the binary operator '**' (line 679)
        result_pow_196984 = python_operator(stypy.reporting.localization.Localization(__file__, 679, 30), '**', int_196982, int_196983)
        
        # Getting the type of 'self' (line 679)
        self_196985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 8), 'self')
        # Setting the type of the member '_diffThreshold' of a type (line 679)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 8), self_196985, '_diffThreshold', result_pow_196984)
        
        # Call to addCleanup(...): (line 680)
        # Processing the call arguments (line 680)

        @norecursion
        def _stypy_temp_lambda_55(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_55'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_55', 680, 24, True)
            # Passed parameters checking function
            _stypy_temp_lambda_55.stypy_localization = localization
            _stypy_temp_lambda_55.stypy_type_of_self = None
            _stypy_temp_lambda_55.stypy_type_store = module_type_store
            _stypy_temp_lambda_55.stypy_function_name = '_stypy_temp_lambda_55'
            _stypy_temp_lambda_55.stypy_param_names_list = []
            _stypy_temp_lambda_55.stypy_varargs_param_name = None
            _stypy_temp_lambda_55.stypy_kwargs_param_name = None
            _stypy_temp_lambda_55.stypy_call_defaults = defaults
            _stypy_temp_lambda_55.stypy_call_varargs = varargs
            _stypy_temp_lambda_55.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_55', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_55', [], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to setattr(...): (line 680)
            # Processing the call arguments (line 680)
            # Getting the type of 'self' (line 680)
            self_196989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 40), 'self', False)
            str_196990 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 46), 'str', '_diffThreshold')
            # Getting the type of 'old_threshold' (line 680)
            old_threshold_196991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 64), 'old_threshold', False)
            # Processing the call keyword arguments (line 680)
            kwargs_196992 = {}
            # Getting the type of 'setattr' (line 680)
            setattr_196988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 32), 'setattr', False)
            # Calling setattr(args, kwargs) (line 680)
            setattr_call_result_196993 = invoke(stypy.reporting.localization.Localization(__file__, 680, 32), setattr_196988, *[self_196989, str_196990, old_threshold_196991], **kwargs_196992)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 24), 'stypy_return_type', setattr_call_result_196993)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_55' in the type store
            # Getting the type of 'stypy_return_type' (line 680)
            stypy_return_type_196994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 24), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_196994)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_55'
            return stypy_return_type_196994

        # Assigning a type to the variable '_stypy_temp_lambda_55' (line 680)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 24), '_stypy_temp_lambda_55', _stypy_temp_lambda_55)
        # Getting the type of '_stypy_temp_lambda_55' (line 680)
        _stypy_temp_lambda_55_196995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 24), '_stypy_temp_lambda_55')
        # Processing the call keyword arguments (line 680)
        kwargs_196996 = {}
        # Getting the type of 'self' (line 680)
        self_196986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 8), 'self', False)
        # Obtaining the member 'addCleanup' of a type (line 680)
        addCleanup_196987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 8), self_196986, 'addCleanup')
        # Calling addCleanup(args, kwargs) (line 680)
        addCleanup_call_result_196997 = invoke(stypy.reporting.localization.Localization(__file__, 680, 8), addCleanup_196987, *[_stypy_temp_lambda_55_196995], **kwargs_196996)
        
        
        # Assigning a BinOp to a Name (line 683):
        
        # Assigning a BinOp to a Name (line 683):
        unicode_196998 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 12), 'unicode', u'x')
        int_196999 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 20), 'int')
        int_197000 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 683, 23), 'int')
        # Applying the binary operator '**' (line 683)
        result_pow_197001 = python_operator(stypy.reporting.localization.Localization(__file__, 683, 20), '**', int_196999, int_197000)
        
        # Applying the binary operator '*' (line 683)
        result_mul_197002 = python_operator(stypy.reporting.localization.Localization(__file__, 683, 12), '*', unicode_196998, result_pow_197001)
        
        # Assigning a type to the variable 's' (line 683)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 8), 's', result_mul_197002)
        
        # Call to assertRaises(...): (line 684)
        # Processing the call arguments (line 684)
        # Getting the type of 'self' (line 684)
        self_197005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 684)
        failureException_197006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 31), self_197005, 'failureException')
        # Processing the call keyword arguments (line 684)
        kwargs_197007 = {}
        # Getting the type of 'self' (line 684)
        self_197003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 684)
        assertRaises_197004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 13), self_197003, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 684)
        assertRaises_call_result_197008 = invoke(stypy.reporting.localization.Localization(__file__, 684, 13), assertRaises_197004, *[failureException_197006], **kwargs_197007)
        
        with_197009 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 684, 13), assertRaises_call_result_197008, 'with parameter', '__enter__', '__exit__')

        if with_197009:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 684)
            enter___197010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 13), assertRaises_call_result_197008, '__enter__')
            with_enter_197011 = invoke(stypy.reporting.localization.Localization(__file__, 684, 13), enter___197010)
            # Assigning a type to the variable 'cm' (line 684)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 684, 13), 'cm', with_enter_197011)
            
            # Call to assertEqual(...): (line 685)
            # Processing the call arguments (line 685)
            # Getting the type of 's' (line 685)
            s_197014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 29), 's', False)
            str_197015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 33), 'str', 'a')
            # Applying the binary operator '+' (line 685)
            result_add_197016 = python_operator(stypy.reporting.localization.Localization(__file__, 685, 29), '+', s_197014, str_197015)
            
            # Getting the type of 's' (line 685)
            s_197017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 38), 's', False)
            str_197018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 42), 'str', 'b')
            # Applying the binary operator '+' (line 685)
            result_add_197019 = python_operator(stypy.reporting.localization.Localization(__file__, 685, 38), '+', s_197017, str_197018)
            
            # Processing the call keyword arguments (line 685)
            kwargs_197020 = {}
            # Getting the type of 'self' (line 685)
            self_197012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'self', False)
            # Obtaining the member 'assertEqual' of a type (line 685)
            assertEqual_197013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 12), self_197012, 'assertEqual')
            # Calling assertEqual(args, kwargs) (line 685)
            assertEqual_call_result_197021 = invoke(stypy.reporting.localization.Localization(__file__, 685, 12), assertEqual_197013, *[result_add_197016, result_add_197019], **kwargs_197020)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 684)
            exit___197022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 13), assertRaises_call_result_197008, '__exit__')
            with_exit_197023 = invoke(stypy.reporting.localization.Localization(__file__, 684, 13), exit___197022, None, None, None)

        
        # Call to assertIn(...): (line 686)
        # Processing the call arguments (line 686)
        str_197026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 686, 22), 'str', '^')
        
        # Call to str(...): (line 686)
        # Processing the call arguments (line 686)
        # Getting the type of 'cm' (line 686)
        cm_197028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 31), 'cm', False)
        # Obtaining the member 'exception' of a type (line 686)
        exception_197029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 31), cm_197028, 'exception')
        # Processing the call keyword arguments (line 686)
        kwargs_197030 = {}
        # Getting the type of 'str' (line 686)
        str_197027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 27), 'str', False)
        # Calling str(args, kwargs) (line 686)
        str_call_result_197031 = invoke(stypy.reporting.localization.Localization(__file__, 686, 27), str_197027, *[exception_197029], **kwargs_197030)
        
        # Processing the call keyword arguments (line 686)
        kwargs_197032 = {}
        # Getting the type of 'self' (line 686)
        self_197024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 686, 8), 'self', False)
        # Obtaining the member 'assertIn' of a type (line 686)
        assertIn_197025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 686, 8), self_197024, 'assertIn')
        # Calling assertIn(args, kwargs) (line 686)
        assertIn_call_result_197033 = invoke(stypy.reporting.localization.Localization(__file__, 686, 8), assertIn_197025, *[str_197026, str_call_result_197031], **kwargs_197032)
        
        
        # Call to assertEqual(...): (line 687)
        # Processing the call arguments (line 687)
        # Getting the type of 's' (line 687)
        s_197036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 25), 's', False)
        str_197037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 29), 'str', 'a')
        # Applying the binary operator '+' (line 687)
        result_add_197038 = python_operator(stypy.reporting.localization.Localization(__file__, 687, 25), '+', s_197036, str_197037)
        
        # Getting the type of 's' (line 687)
        s_197039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 34), 's', False)
        str_197040 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 38), 'str', 'a')
        # Applying the binary operator '+' (line 687)
        result_add_197041 = python_operator(stypy.reporting.localization.Localization(__file__, 687, 34), '+', s_197039, str_197040)
        
        # Processing the call keyword arguments (line 687)
        kwargs_197042 = {}
        # Getting the type of 'self' (line 687)
        self_197034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 687)
        assertEqual_197035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 687, 8), self_197034, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 687)
        assertEqual_call_result_197043 = invoke(stypy.reporting.localization.Localization(__file__, 687, 8), assertEqual_197035, *[result_add_197038, result_add_197041], **kwargs_197042)
        
        
        # Assigning a BinOp to a Name (line 690):
        
        # Assigning a BinOp to a Name (line 690):
        unicode_197044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 12), 'unicode', u'x')
        int_197045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 20), 'int')
        int_197046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 23), 'int')
        # Applying the binary operator '**' (line 690)
        result_pow_197047 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 20), '**', int_197045, int_197046)
        
        # Applying the binary operator '*' (line 690)
        result_mul_197048 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 12), '*', unicode_197044, result_pow_197047)
        
        # Assigning a type to the variable 's' (line 690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 8), 's', result_mul_197048)

        @norecursion
        def explodingTruncation(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'explodingTruncation'
            module_type_store = module_type_store.open_function_context('explodingTruncation', 694, 8, False)
            
            # Passed parameters checking function
            explodingTruncation.stypy_localization = localization
            explodingTruncation.stypy_type_of_self = None
            explodingTruncation.stypy_type_store = module_type_store
            explodingTruncation.stypy_function_name = 'explodingTruncation'
            explodingTruncation.stypy_param_names_list = ['message', 'diff']
            explodingTruncation.stypy_varargs_param_name = None
            explodingTruncation.stypy_kwargs_param_name = None
            explodingTruncation.stypy_call_defaults = defaults
            explodingTruncation.stypy_call_varargs = varargs
            explodingTruncation.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'explodingTruncation', ['message', 'diff'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'explodingTruncation', localization, ['message', 'diff'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'explodingTruncation(...)' code ##################

            
            # Call to SystemError(...): (line 695)
            # Processing the call arguments (line 695)
            str_197050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 695, 30), 'str', 'this should not be raised')
            # Processing the call keyword arguments (line 695)
            kwargs_197051 = {}
            # Getting the type of 'SystemError' (line 695)
            SystemError_197049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 18), 'SystemError', False)
            # Calling SystemError(args, kwargs) (line 695)
            SystemError_call_result_197052 = invoke(stypy.reporting.localization.Localization(__file__, 695, 18), SystemError_197049, *[str_197050], **kwargs_197051)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 695, 12), SystemError_call_result_197052, 'raise parameter', BaseException)
            
            # ################# End of 'explodingTruncation(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'explodingTruncation' in the type store
            # Getting the type of 'stypy_return_type' (line 694)
            stypy_return_type_197053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_197053)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'explodingTruncation'
            return stypy_return_type_197053

        # Assigning a type to the variable 'explodingTruncation' (line 694)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 694, 8), 'explodingTruncation', explodingTruncation)
        
        # Assigning a Attribute to a Name (line 696):
        
        # Assigning a Attribute to a Name (line 696):
        # Getting the type of 'self' (line 696)
        self_197054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 23), 'self')
        # Obtaining the member '_truncateMessage' of a type (line 696)
        _truncateMessage_197055 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 23), self_197054, '_truncateMessage')
        # Assigning a type to the variable 'old_truncate' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'old_truncate', _truncateMessage_197055)
        
        # Assigning a Name to a Attribute (line 697):
        
        # Assigning a Name to a Attribute (line 697):
        # Getting the type of 'explodingTruncation' (line 697)
        explodingTruncation_197056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 32), 'explodingTruncation')
        # Getting the type of 'self' (line 697)
        self_197057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'self')
        # Setting the type of the member '_truncateMessage' of a type (line 697)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 8), self_197057, '_truncateMessage', explodingTruncation_197056)
        
        # Call to addCleanup(...): (line 698)
        # Processing the call arguments (line 698)

        @norecursion
        def _stypy_temp_lambda_56(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_56'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_56', 698, 24, True)
            # Passed parameters checking function
            _stypy_temp_lambda_56.stypy_localization = localization
            _stypy_temp_lambda_56.stypy_type_of_self = None
            _stypy_temp_lambda_56.stypy_type_store = module_type_store
            _stypy_temp_lambda_56.stypy_function_name = '_stypy_temp_lambda_56'
            _stypy_temp_lambda_56.stypy_param_names_list = []
            _stypy_temp_lambda_56.stypy_varargs_param_name = None
            _stypy_temp_lambda_56.stypy_kwargs_param_name = None
            _stypy_temp_lambda_56.stypy_call_defaults = defaults
            _stypy_temp_lambda_56.stypy_call_varargs = varargs
            _stypy_temp_lambda_56.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_56', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_56', [], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to setattr(...): (line 698)
            # Processing the call arguments (line 698)
            # Getting the type of 'self' (line 698)
            self_197061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 40), 'self', False)
            str_197062 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 698, 46), 'str', '_truncateMessage')
            # Getting the type of 'old_truncate' (line 698)
            old_truncate_197063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 66), 'old_truncate', False)
            # Processing the call keyword arguments (line 698)
            kwargs_197064 = {}
            # Getting the type of 'setattr' (line 698)
            setattr_197060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 32), 'setattr', False)
            # Calling setattr(args, kwargs) (line 698)
            setattr_call_result_197065 = invoke(stypy.reporting.localization.Localization(__file__, 698, 32), setattr_197060, *[self_197061, str_197062, old_truncate_197063], **kwargs_197064)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 698)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 698, 24), 'stypy_return_type', setattr_call_result_197065)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_56' in the type store
            # Getting the type of 'stypy_return_type' (line 698)
            stypy_return_type_197066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 24), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_197066)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_56'
            return stypy_return_type_197066

        # Assigning a type to the variable '_stypy_temp_lambda_56' (line 698)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 698, 24), '_stypy_temp_lambda_56', _stypy_temp_lambda_56)
        # Getting the type of '_stypy_temp_lambda_56' (line 698)
        _stypy_temp_lambda_56_197067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 24), '_stypy_temp_lambda_56')
        # Processing the call keyword arguments (line 698)
        kwargs_197068 = {}
        # Getting the type of 'self' (line 698)
        self_197058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 698, 8), 'self', False)
        # Obtaining the member 'addCleanup' of a type (line 698)
        addCleanup_197059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 698, 8), self_197058, 'addCleanup')
        # Calling addCleanup(args, kwargs) (line 698)
        addCleanup_call_result_197069 = invoke(stypy.reporting.localization.Localization(__file__, 698, 8), addCleanup_197059, *[_stypy_temp_lambda_56_197067], **kwargs_197068)
        
        
        # Assigning a Tuple to a Tuple (line 700):
        
        # Assigning a BinOp to a Name (line 700):
        # Getting the type of 's' (line 700)
        s_197070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 17), 's')
        str_197071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 21), 'str', 'a')
        # Applying the binary operator '+' (line 700)
        result_add_197072 = python_operator(stypy.reporting.localization.Localization(__file__, 700, 17), '+', s_197070, str_197071)
        
        # Assigning a type to the variable 'tuple_assignment_195079' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 'tuple_assignment_195079', result_add_197072)
        
        # Assigning a BinOp to a Name (line 700):
        # Getting the type of 's' (line 700)
        s_197073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 26), 's')
        str_197074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 700, 30), 'str', 'b')
        # Applying the binary operator '+' (line 700)
        result_add_197075 = python_operator(stypy.reporting.localization.Localization(__file__, 700, 26), '+', s_197073, str_197074)
        
        # Assigning a type to the variable 'tuple_assignment_195080' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 'tuple_assignment_195080', result_add_197075)
        
        # Assigning a Name to a Name (line 700):
        # Getting the type of 'tuple_assignment_195079' (line 700)
        tuple_assignment_195079_197076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 'tuple_assignment_195079')
        # Assigning a type to the variable 's1' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 's1', tuple_assignment_195079_197076)
        
        # Assigning a Name to a Name (line 700):
        # Getting the type of 'tuple_assignment_195080' (line 700)
        tuple_assignment_195080_197077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 8), 'tuple_assignment_195080')
        # Assigning a type to the variable 's2' (line 700)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 12), 's2', tuple_assignment_195080_197077)
        
        # Call to assertRaises(...): (line 701)
        # Processing the call arguments (line 701)
        # Getting the type of 'self' (line 701)
        self_197080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 701)
        failureException_197081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 31), self_197080, 'failureException')
        # Processing the call keyword arguments (line 701)
        kwargs_197082 = {}
        # Getting the type of 'self' (line 701)
        self_197078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 701)
        assertRaises_197079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 13), self_197078, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 701)
        assertRaises_call_result_197083 = invoke(stypy.reporting.localization.Localization(__file__, 701, 13), assertRaises_197079, *[failureException_197081], **kwargs_197082)
        
        with_197084 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 701, 13), assertRaises_call_result_197083, 'with parameter', '__enter__', '__exit__')

        if with_197084:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 701)
            enter___197085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 13), assertRaises_call_result_197083, '__enter__')
            with_enter_197086 = invoke(stypy.reporting.localization.Localization(__file__, 701, 13), enter___197085)
            # Assigning a type to the variable 'cm' (line 701)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 13), 'cm', with_enter_197086)
            
            # Call to assertEqual(...): (line 702)
            # Processing the call arguments (line 702)
            # Getting the type of 's1' (line 702)
            s1_197089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 29), 's1', False)
            # Getting the type of 's2' (line 702)
            s2_197090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 33), 's2', False)
            # Processing the call keyword arguments (line 702)
            kwargs_197091 = {}
            # Getting the type of 'self' (line 702)
            self_197087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'self', False)
            # Obtaining the member 'assertEqual' of a type (line 702)
            assertEqual_197088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 12), self_197087, 'assertEqual')
            # Calling assertEqual(args, kwargs) (line 702)
            assertEqual_call_result_197092 = invoke(stypy.reporting.localization.Localization(__file__, 702, 12), assertEqual_197088, *[s1_197089, s2_197090], **kwargs_197091)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 701)
            exit___197093 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 13), assertRaises_call_result_197083, '__exit__')
            with_exit_197094 = invoke(stypy.reporting.localization.Localization(__file__, 701, 13), exit___197093, None, None, None)

        
        # Call to assertNotIn(...): (line 703)
        # Processing the call arguments (line 703)
        str_197097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 25), 'str', '^')
        
        # Call to str(...): (line 703)
        # Processing the call arguments (line 703)
        # Getting the type of 'cm' (line 703)
        cm_197099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 34), 'cm', False)
        # Obtaining the member 'exception' of a type (line 703)
        exception_197100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 34), cm_197099, 'exception')
        # Processing the call keyword arguments (line 703)
        kwargs_197101 = {}
        # Getting the type of 'str' (line 703)
        str_197098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 30), 'str', False)
        # Calling str(args, kwargs) (line 703)
        str_call_result_197102 = invoke(stypy.reporting.localization.Localization(__file__, 703, 30), str_197098, *[exception_197100], **kwargs_197101)
        
        # Processing the call keyword arguments (line 703)
        kwargs_197103 = {}
        # Getting the type of 'self' (line 703)
        self_197095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 8), 'self', False)
        # Obtaining the member 'assertNotIn' of a type (line 703)
        assertNotIn_197096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 8), self_197095, 'assertNotIn')
        # Calling assertNotIn(args, kwargs) (line 703)
        assertNotIn_call_result_197104 = invoke(stypy.reporting.localization.Localization(__file__, 703, 8), assertNotIn_197096, *[str_197097, str_call_result_197102], **kwargs_197103)
        
        
        # Call to assertEqual(...): (line 704)
        # Processing the call arguments (line 704)
        
        # Call to str(...): (line 704)
        # Processing the call arguments (line 704)
        # Getting the type of 'cm' (line 704)
        cm_197108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 29), 'cm', False)
        # Obtaining the member 'exception' of a type (line 704)
        exception_197109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 29), cm_197108, 'exception')
        # Processing the call keyword arguments (line 704)
        kwargs_197110 = {}
        # Getting the type of 'str' (line 704)
        str_197107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 25), 'str', False)
        # Calling str(args, kwargs) (line 704)
        str_call_result_197111 = invoke(stypy.reporting.localization.Localization(__file__, 704, 25), str_197107, *[exception_197109], **kwargs_197110)
        
        str_197112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 44), 'str', '%r != %r')
        
        # Obtaining an instance of the builtin type 'tuple' (line 704)
        tuple_197113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 58), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 704)
        # Adding element type (line 704)
        # Getting the type of 's1' (line 704)
        s1_197114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 58), 's1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 58), tuple_197113, s1_197114)
        # Adding element type (line 704)
        # Getting the type of 's2' (line 704)
        s2_197115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 62), 's2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 704, 58), tuple_197113, s2_197115)
        
        # Applying the binary operator '%' (line 704)
        result_mod_197116 = python_operator(stypy.reporting.localization.Localization(__file__, 704, 44), '%', str_197112, tuple_197113)
        
        # Processing the call keyword arguments (line 704)
        kwargs_197117 = {}
        # Getting the type of 'self' (line 704)
        self_197105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 704)
        assertEqual_197106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 8), self_197105, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 704)
        assertEqual_call_result_197118 = invoke(stypy.reporting.localization.Localization(__file__, 704, 8), assertEqual_197106, *[str_call_result_197111, result_mod_197116], **kwargs_197117)
        
        
        # Call to assertEqual(...): (line 705)
        # Processing the call arguments (line 705)
        # Getting the type of 's' (line 705)
        s_197121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 25), 's', False)
        str_197122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 29), 'str', 'a')
        # Applying the binary operator '+' (line 705)
        result_add_197123 = python_operator(stypy.reporting.localization.Localization(__file__, 705, 25), '+', s_197121, str_197122)
        
        # Getting the type of 's' (line 705)
        s_197124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 34), 's', False)
        str_197125 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 38), 'str', 'a')
        # Applying the binary operator '+' (line 705)
        result_add_197126 = python_operator(stypy.reporting.localization.Localization(__file__, 705, 34), '+', s_197124, str_197125)
        
        # Processing the call keyword arguments (line 705)
        kwargs_197127 = {}
        # Getting the type of 'self' (line 705)
        self_197119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 705)
        assertEqual_197120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 8), self_197119, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 705)
        assertEqual_call_result_197128 = invoke(stypy.reporting.localization.Localization(__file__, 705, 8), assertEqual_197120, *[result_add_197123, result_add_197126], **kwargs_197127)
        
        
        # ################# End of 'testAssertEqual_diffThreshold(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertEqual_diffThreshold' in the type store
        # Getting the type of 'stypy_return_type' (line 671)
        stypy_return_type_197129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 671, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_197129)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertEqual_diffThreshold'
        return stypy_return_type_197129


    @norecursion
    def testAssertItemsEqual(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertItemsEqual'
        module_type_store = module_type_store.open_function_context('testAssertItemsEqual', 707, 4, False)
        # Assigning a type to the variable 'self' (line 708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertItemsEqual')
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertItemsEqual.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertItemsEqual', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertItemsEqual', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertItemsEqual(...)' code ##################

        
        # Assigning a Call to a Name (line 708):
        
        # Assigning a Call to a Name (line 708):
        
        # Call to object(...): (line 708)
        # Processing the call keyword arguments (line 708)
        kwargs_197131 = {}
        # Getting the type of 'object' (line 708)
        object_197130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 12), 'object', False)
        # Calling object(args, kwargs) (line 708)
        object_call_result_197132 = invoke(stypy.reporting.localization.Localization(__file__, 708, 12), object_197130, *[], **kwargs_197131)
        
        # Assigning a type to the variable 'a' (line 708)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 708, 8), 'a', object_call_result_197132)
        
        # Call to assertItemsEqual(...): (line 709)
        # Processing the call arguments (line 709)
        
        # Obtaining an instance of the builtin type 'list' (line 709)
        list_197135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 709)
        # Adding element type (line 709)
        int_197136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 30), list_197135, int_197136)
        # Adding element type (line 709)
        int_197137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 30), list_197135, int_197137)
        # Adding element type (line 709)
        int_197138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 30), list_197135, int_197138)
        
        
        # Obtaining an instance of the builtin type 'list' (line 709)
        list_197139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 41), 'list')
        # Adding type elements to the builtin type 'list' instance (line 709)
        # Adding element type (line 709)
        int_197140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 42), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 41), list_197139, int_197140)
        # Adding element type (line 709)
        int_197141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 41), list_197139, int_197141)
        # Adding element type (line 709)
        int_197142 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 709, 41), list_197139, int_197142)
        
        # Processing the call keyword arguments (line 709)
        kwargs_197143 = {}
        # Getting the type of 'self' (line 709)
        self_197133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 709)
        assertItemsEqual_197134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 8), self_197133, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 709)
        assertItemsEqual_call_result_197144 = invoke(stypy.reporting.localization.Localization(__file__, 709, 8), assertItemsEqual_197134, *[list_197135, list_197139], **kwargs_197143)
        
        
        # Call to assertItemsEqual(...): (line 710)
        # Processing the call arguments (line 710)
        
        # Obtaining an instance of the builtin type 'list' (line 710)
        list_197147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 710)
        # Adding element type (line 710)
        str_197148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 31), 'str', 'foo')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 30), list_197147, str_197148)
        # Adding element type (line 710)
        str_197149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 38), 'str', 'bar')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 30), list_197147, str_197149)
        # Adding element type (line 710)
        str_197150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 45), 'str', 'baz')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 30), list_197147, str_197150)
        
        
        # Obtaining an instance of the builtin type 'list' (line 710)
        list_197151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 710)
        # Adding element type (line 710)
        str_197152 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 54), 'str', 'bar')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 53), list_197151, str_197152)
        # Adding element type (line 710)
        str_197153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 61), 'str', 'baz')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 53), list_197151, str_197153)
        # Adding element type (line 710)
        str_197154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 710, 68), 'str', 'foo')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 710, 53), list_197151, str_197154)
        
        # Processing the call keyword arguments (line 710)
        kwargs_197155 = {}
        # Getting the type of 'self' (line 710)
        self_197145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 710)
        assertItemsEqual_197146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 8), self_197145, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 710)
        assertItemsEqual_call_result_197156 = invoke(stypy.reporting.localization.Localization(__file__, 710, 8), assertItemsEqual_197146, *[list_197147, list_197151], **kwargs_197155)
        
        
        # Call to assertItemsEqual(...): (line 711)
        # Processing the call arguments (line 711)
        
        # Obtaining an instance of the builtin type 'list' (line 711)
        list_197159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 711)
        # Adding element type (line 711)
        # Getting the type of 'a' (line 711)
        a_197160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 31), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 30), list_197159, a_197160)
        # Adding element type (line 711)
        # Getting the type of 'a' (line 711)
        a_197161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 34), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 30), list_197159, a_197161)
        # Adding element type (line 711)
        int_197162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 30), list_197159, int_197162)
        # Adding element type (line 711)
        int_197163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 30), list_197159, int_197163)
        # Adding element type (line 711)
        int_197164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 30), list_197159, int_197164)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 711)
        tuple_197165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 48), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 711)
        # Adding element type (line 711)
        # Getting the type of 'a' (line 711)
        a_197166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 48), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 48), tuple_197165, a_197166)
        # Adding element type (line 711)
        int_197167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 51), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 48), tuple_197165, int_197167)
        # Adding element type (line 711)
        int_197168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 48), tuple_197165, int_197168)
        # Adding element type (line 711)
        # Getting the type of 'a' (line 711)
        a_197169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 57), 'a', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 48), tuple_197165, a_197169)
        # Adding element type (line 711)
        int_197170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 711, 48), tuple_197165, int_197170)
        
        # Processing the call keyword arguments (line 711)
        kwargs_197171 = {}
        # Getting the type of 'self' (line 711)
        self_197157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 711)
        assertItemsEqual_197158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 8), self_197157, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 711)
        assertItemsEqual_call_result_197172 = invoke(stypy.reporting.localization.Localization(__file__, 711, 8), assertItemsEqual_197158, *[list_197159, tuple_197165], **kwargs_197171)
        
        
        # Call to assertItemsEqual(...): (line 712)
        # Processing the call arguments (line 712)
        
        # Obtaining an instance of the builtin type 'list' (line 712)
        list_197175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 712)
        # Adding element type (line 712)
        int_197176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 30), list_197175, int_197176)
        # Adding element type (line 712)
        str_197177 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 34), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 30), list_197175, str_197177)
        # Adding element type (line 712)
        str_197178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 39), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 30), list_197175, str_197178)
        # Adding element type (line 712)
        str_197179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 44), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 30), list_197175, str_197179)
        
        
        # Obtaining an instance of the builtin type 'list' (line 712)
        list_197180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 712)
        # Adding element type (line 712)
        str_197181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 51), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 50), list_197180, str_197181)
        # Adding element type (line 712)
        str_197182 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 56), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 50), list_197180, str_197182)
        # Adding element type (line 712)
        # Getting the type of 'True' (line 712)
        True_197183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 61), 'True', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 50), list_197180, True_197183)
        # Adding element type (line 712)
        str_197184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 67), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 712, 50), list_197180, str_197184)
        
        # Processing the call keyword arguments (line 712)
        kwargs_197185 = {}
        # Getting the type of 'self' (line 712)
        self_197173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 712)
        assertItemsEqual_197174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 8), self_197173, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 712)
        assertItemsEqual_call_result_197186 = invoke(stypy.reporting.localization.Localization(__file__, 712, 8), assertItemsEqual_197174, *[list_197175, list_197180], **kwargs_197185)
        
        
        # Call to assertRaises(...): (line 713)
        # Processing the call arguments (line 713)
        # Getting the type of 'self' (line 713)
        self_197189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 713)
        failureException_197190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 26), self_197189, 'failureException')
        # Getting the type of 'self' (line 713)
        self_197191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 713)
        assertItemsEqual_197192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 49), self_197191, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 714)
        list_197193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 714)
        # Adding element type (line 714)
        int_197194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 26), list_197193, int_197194)
        # Adding element type (line 714)
        int_197195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 26), list_197193, int_197195)
        
        
        # Obtaining an instance of the builtin type 'list' (line 714)
        list_197196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 714)
        # Adding element type (line 714)
        int_197197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 35), list_197196, int_197197)
        
        int_197198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 41), 'int')
        # Applying the binary operator '*' (line 714)
        result_mul_197199 = python_operator(stypy.reporting.localization.Localization(__file__, 714, 35), '*', list_197196, int_197198)
        
        # Applying the binary operator '+' (line 714)
        result_add_197200 = python_operator(stypy.reporting.localization.Localization(__file__, 714, 26), '+', list_197193, result_mul_197199)
        
        
        # Obtaining an instance of the builtin type 'list' (line 714)
        list_197201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 46), 'list')
        # Adding type elements to the builtin type 'list' instance (line 714)
        # Adding element type (line 714)
        int_197202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 46), list_197201, int_197202)
        
        int_197203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 52), 'int')
        # Applying the binary operator '*' (line 714)
        result_mul_197204 = python_operator(stypy.reporting.localization.Localization(__file__, 714, 46), '*', list_197201, int_197203)
        
        
        # Obtaining an instance of the builtin type 'list' (line 714)
        list_197205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 58), 'list')
        # Adding type elements to the builtin type 'list' instance (line 714)
        # Adding element type (line 714)
        int_197206 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 59), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 58), list_197205, int_197206)
        # Adding element type (line 714)
        int_197207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 62), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 714, 58), list_197205, int_197207)
        
        # Applying the binary operator '+' (line 714)
        result_add_197208 = python_operator(stypy.reporting.localization.Localization(__file__, 714, 46), '+', result_mul_197204, list_197205)
        
        # Processing the call keyword arguments (line 713)
        kwargs_197209 = {}
        # Getting the type of 'self' (line 713)
        self_197187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 713)
        assertRaises_197188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 8), self_197187, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 713)
        assertRaises_call_result_197210 = invoke(stypy.reporting.localization.Localization(__file__, 713, 8), assertRaises_197188, *[failureException_197190, assertItemsEqual_197192, result_add_197200, result_add_197208], **kwargs_197209)
        
        
        # Call to assertRaises(...): (line 715)
        # Processing the call arguments (line 715)
        # Getting the type of 'self' (line 715)
        self_197213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 715)
        failureException_197214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 26), self_197213, 'failureException')
        # Getting the type of 'self' (line 715)
        self_197215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 715)
        assertItemsEqual_197216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 49), self_197215, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 716)
        list_197217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 716)
        # Adding element type (line 716)
        int_197218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 26), list_197217, int_197218)
        # Adding element type (line 716)
        str_197219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 30), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 26), list_197217, str_197219)
        # Adding element type (line 716)
        str_197220 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 35), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 26), list_197217, str_197220)
        # Adding element type (line 716)
        str_197221 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 40), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 26), list_197217, str_197221)
        
        
        # Obtaining an instance of the builtin type 'list' (line 716)
        list_197222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 46), 'list')
        # Adding type elements to the builtin type 'list' instance (line 716)
        # Adding element type (line 716)
        str_197223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 47), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 46), list_197222, str_197223)
        # Adding element type (line 716)
        str_197224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 52), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 46), list_197222, str_197224)
        # Adding element type (line 716)
        # Getting the type of 'True' (line 716)
        True_197225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 57), 'True', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 46), list_197222, True_197225)
        # Adding element type (line 716)
        int_197226 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 716, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 716, 46), list_197222, int_197226)
        
        # Processing the call keyword arguments (line 715)
        kwargs_197227 = {}
        # Getting the type of 'self' (line 715)
        self_197211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 715)
        assertRaises_197212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 8), self_197211, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 715)
        assertRaises_call_result_197228 = invoke(stypy.reporting.localization.Localization(__file__, 715, 8), assertRaises_197212, *[failureException_197214, assertItemsEqual_197216, list_197217, list_197222], **kwargs_197227)
        
        
        # Call to assertRaises(...): (line 717)
        # Processing the call arguments (line 717)
        # Getting the type of 'self' (line 717)
        self_197231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 717)
        failureException_197232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 26), self_197231, 'failureException')
        # Getting the type of 'self' (line 717)
        self_197233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 717)
        assertItemsEqual_197234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 49), self_197233, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 718)
        list_197235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 718)
        # Adding element type (line 718)
        int_197236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 26), list_197235, int_197236)
        
        
        # Obtaining an instance of the builtin type 'list' (line 718)
        list_197237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 718)
        # Adding element type (line 718)
        int_197238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 32), list_197237, int_197238)
        # Adding element type (line 718)
        int_197239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 718, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 718, 32), list_197237, int_197239)
        
        # Processing the call keyword arguments (line 717)
        kwargs_197240 = {}
        # Getting the type of 'self' (line 717)
        self_197229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 717)
        assertRaises_197230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 8), self_197229, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 717)
        assertRaises_call_result_197241 = invoke(stypy.reporting.localization.Localization(__file__, 717, 8), assertRaises_197230, *[failureException_197232, assertItemsEqual_197234, list_197235, list_197237], **kwargs_197240)
        
        
        # Call to assertRaises(...): (line 719)
        # Processing the call arguments (line 719)
        # Getting the type of 'self' (line 719)
        self_197244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 719)
        failureException_197245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 26), self_197244, 'failureException')
        # Getting the type of 'self' (line 719)
        self_197246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 719)
        assertItemsEqual_197247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 49), self_197246, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 720)
        list_197248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 720)
        # Adding element type (line 720)
        int_197249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 26), list_197248, int_197249)
        # Adding element type (line 720)
        int_197250 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 26), list_197248, int_197250)
        
        
        # Obtaining an instance of the builtin type 'list' (line 720)
        list_197251 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 36), 'list')
        # Adding type elements to the builtin type 'list' instance (line 720)
        # Adding element type (line 720)
        int_197252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 720, 36), list_197251, int_197252)
        
        # Processing the call keyword arguments (line 719)
        kwargs_197253 = {}
        # Getting the type of 'self' (line 719)
        self_197242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 719, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 719)
        assertRaises_197243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 719, 8), self_197242, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 719)
        assertRaises_call_result_197254 = invoke(stypy.reporting.localization.Localization(__file__, 719, 8), assertRaises_197243, *[failureException_197245, assertItemsEqual_197247, list_197248, list_197251], **kwargs_197253)
        
        
        # Call to assertRaises(...): (line 721)
        # Processing the call arguments (line 721)
        # Getting the type of 'self' (line 721)
        self_197257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 721)
        failureException_197258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 26), self_197257, 'failureException')
        # Getting the type of 'self' (line 721)
        self_197259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 721)
        assertItemsEqual_197260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 49), self_197259, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 722)
        list_197261 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 722)
        # Adding element type (line 722)
        int_197262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 26), list_197261, int_197262)
        # Adding element type (line 722)
        int_197263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 26), list_197261, int_197263)
        # Adding element type (line 722)
        int_197264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 26), list_197261, int_197264)
        
        
        # Obtaining an instance of the builtin type 'list' (line 722)
        list_197265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 722)
        # Adding element type (line 722)
        int_197266 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 40), list_197265, int_197266)
        # Adding element type (line 722)
        int_197267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 722, 40), list_197265, int_197267)
        
        # Processing the call keyword arguments (line 721)
        kwargs_197268 = {}
        # Getting the type of 'self' (line 721)
        self_197255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 721)
        assertRaises_197256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 8), self_197255, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 721)
        assertRaises_call_result_197269 = invoke(stypy.reporting.localization.Localization(__file__, 721, 8), assertRaises_197256, *[failureException_197258, assertItemsEqual_197260, list_197261, list_197265], **kwargs_197268)
        
        
        # Call to assertItemsEqual(...): (line 725)
        # Processing the call arguments (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_197272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_197273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 31), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        int_197274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 31), list_197273, int_197274)
        # Adding element type (line 725)
        int_197275 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 31), list_197273, int_197275)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 30), list_197272, list_197273)
        # Adding element type (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_197276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        int_197277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 40), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 39), list_197276, int_197277)
        # Adding element type (line 725)
        int_197278 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 39), list_197276, int_197278)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 30), list_197272, list_197276)
        # Adding element type (line 725)
        int_197279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 47), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 30), list_197272, int_197279)
        
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_197280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        # Getting the type of 'False' (line 725)
        False_197281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 52), 'False', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 51), list_197280, False_197281)
        # Adding element type (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_197282 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        int_197283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 60), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 59), list_197282, int_197283)
        # Adding element type (line 725)
        int_197284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 63), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 59), list_197282, int_197284)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 51), list_197280, list_197282)
        # Adding element type (line 725)
        
        # Obtaining an instance of the builtin type 'list' (line 725)
        list_197285 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 67), 'list')
        # Adding type elements to the builtin type 'list' instance (line 725)
        # Adding element type (line 725)
        int_197286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 68), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 67), list_197285, int_197286)
        # Adding element type (line 725)
        int_197287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 71), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 67), list_197285, int_197287)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 725, 51), list_197280, list_197285)
        
        # Processing the call keyword arguments (line 725)
        kwargs_197288 = {}
        # Getting the type of 'self' (line 725)
        self_197270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 725)
        assertItemsEqual_197271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 725, 8), self_197270, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 725)
        assertItemsEqual_call_result_197289 = invoke(stypy.reporting.localization.Localization(__file__, 725, 8), assertItemsEqual_197271, *[list_197272, list_197280], **kwargs_197288)
        
        
        # Call to assertItemsEqual(...): (line 727)
        # Processing the call arguments (line 727)
        
        # Call to iter(...): (line 727)
        # Processing the call arguments (line 727)
        
        # Obtaining an instance of the builtin type 'list' (line 727)
        list_197293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 727)
        # Adding element type (line 727)
        int_197294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 35), list_197293, int_197294)
        # Adding element type (line 727)
        int_197295 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 35), list_197293, int_197295)
        # Adding element type (line 727)
        
        # Obtaining an instance of the builtin type 'list' (line 727)
        list_197296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 727)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 35), list_197293, list_197296)
        # Adding element type (line 727)
        int_197297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 35), list_197293, int_197297)
        # Adding element type (line 727)
        int_197298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 727, 35), list_197293, int_197298)
        
        # Processing the call keyword arguments (line 727)
        kwargs_197299 = {}
        # Getting the type of 'iter' (line 727)
        iter_197292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 30), 'iter', False)
        # Calling iter(args, kwargs) (line 727)
        iter_call_result_197300 = invoke(stypy.reporting.localization.Localization(__file__, 727, 30), iter_197292, *[list_197293], **kwargs_197299)
        
        
        # Call to iter(...): (line 728)
        # Processing the call arguments (line 728)
        
        # Obtaining an instance of the builtin type 'list' (line 728)
        list_197302 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 35), 'list')
        # Adding type elements to the builtin type 'list' instance (line 728)
        # Adding element type (line 728)
        int_197303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 36), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 35), list_197302, int_197303)
        # Adding element type (line 728)
        int_197304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 39), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 35), list_197302, int_197304)
        # Adding element type (line 728)
        
        # Obtaining an instance of the builtin type 'list' (line 728)
        list_197305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 42), 'list')
        # Adding type elements to the builtin type 'list' instance (line 728)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 35), list_197302, list_197305)
        # Adding element type (line 728)
        int_197306 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 46), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 35), list_197302, int_197306)
        # Adding element type (line 728)
        int_197307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 49), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 728, 35), list_197302, int_197307)
        
        # Processing the call keyword arguments (line 728)
        kwargs_197308 = {}
        # Getting the type of 'iter' (line 728)
        iter_197301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 728, 30), 'iter', False)
        # Calling iter(args, kwargs) (line 728)
        iter_call_result_197309 = invoke(stypy.reporting.localization.Localization(__file__, 728, 30), iter_197301, *[list_197302], **kwargs_197308)
        
        # Processing the call keyword arguments (line 727)
        kwargs_197310 = {}
        # Getting the type of 'self' (line 727)
        self_197290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 727)
        assertItemsEqual_197291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 8), self_197290, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 727)
        assertItemsEqual_call_result_197311 = invoke(stypy.reporting.localization.Localization(__file__, 727, 8), assertItemsEqual_197291, *[iter_call_result_197300, iter_call_result_197309], **kwargs_197310)
        
        
        # Call to assertRaises(...): (line 731)
        # Processing the call arguments (line 731)
        # Getting the type of 'self' (line 731)
        self_197314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 731)
        failureException_197315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 26), self_197314, 'failureException')
        # Getting the type of 'self' (line 731)
        self_197316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 731)
        assertItemsEqual_197317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 49), self_197316, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 732)
        list_197318 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 732)
        
        
        # Obtaining an instance of the builtin type 'list' (line 732)
        list_197319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 732)
        # Adding element type (line 732)
        # Getting the type of 'divmod' (line 732)
        divmod_197320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 31), 'divmod', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 30), list_197319, divmod_197320)
        # Adding element type (line 732)
        str_197321 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 39), 'str', 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 30), list_197319, str_197321)
        # Adding element type (line 732)
        int_197322 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 44), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 30), list_197319, int_197322)
        # Adding element type (line 732)
        complex_197323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 47), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 30), list_197319, complex_197323)
        # Adding element type (line 732)
        complex_197324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 51), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 30), list_197319, complex_197324)
        # Adding element type (line 732)
        
        # Call to frozenset(...): (line 732)
        # Processing the call keyword arguments (line 732)
        kwargs_197326 = {}
        # Getting the type of 'frozenset' (line 732)
        frozenset_197325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 55), 'frozenset', False)
        # Calling frozenset(args, kwargs) (line 732)
        frozenset_call_result_197327 = invoke(stypy.reporting.localization.Localization(__file__, 732, 55), frozenset_197325, *[], **kwargs_197326)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 732, 30), list_197319, frozenset_call_result_197327)
        
        # Processing the call keyword arguments (line 731)
        kwargs_197328 = {}
        # Getting the type of 'self' (line 731)
        self_197312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 731)
        assertRaises_197313 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 8), self_197312, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 731)
        assertRaises_call_result_197329 = invoke(stypy.reporting.localization.Localization(__file__, 731, 8), assertRaises_197313, *[failureException_197315, assertItemsEqual_197317, list_197318, list_197319], **kwargs_197328)
        
        
        # Call to assertItemsEqual(...): (line 734)
        # Processing the call arguments (line 734)
        
        # Obtaining an instance of the builtin type 'list' (line 734)
        list_197332 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 734)
        # Adding element type (line 734)
        
        # Obtaining an instance of the builtin type 'dict' (line 734)
        dict_197333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 31), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 734)
        # Adding element type (key, value) (line 734)
        str_197334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 32), 'str', 'a')
        int_197335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 37), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 31), dict_197333, (str_197334, int_197335))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 30), list_197332, dict_197333)
        # Adding element type (line 734)
        
        # Obtaining an instance of the builtin type 'dict' (line 734)
        dict_197336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 41), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 734)
        # Adding element type (key, value) (line 734)
        str_197337 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 42), 'str', 'b')
        int_197338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 47), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 41), dict_197336, (str_197337, int_197338))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 30), list_197332, dict_197336)
        
        
        # Obtaining an instance of the builtin type 'list' (line 734)
        list_197339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 52), 'list')
        # Adding type elements to the builtin type 'list' instance (line 734)
        # Adding element type (line 734)
        
        # Obtaining an instance of the builtin type 'dict' (line 734)
        dict_197340 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 53), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 734)
        # Adding element type (key, value) (line 734)
        str_197341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 54), 'str', 'b')
        int_197342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 59), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 53), dict_197340, (str_197341, int_197342))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 52), list_197339, dict_197340)
        # Adding element type (line 734)
        
        # Obtaining an instance of the builtin type 'dict' (line 734)
        dict_197343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 63), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 734)
        # Adding element type (key, value) (line 734)
        str_197344 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 64), 'str', 'a')
        int_197345 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 734, 69), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 63), dict_197343, (str_197344, int_197345))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 734, 52), list_197339, dict_197343)
        
        # Processing the call keyword arguments (line 734)
        kwargs_197346 = {}
        # Getting the type of 'self' (line 734)
        self_197330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 734, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 734)
        assertItemsEqual_197331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 734, 8), self_197330, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 734)
        assertItemsEqual_call_result_197347 = invoke(stypy.reporting.localization.Localization(__file__, 734, 8), assertItemsEqual_197331, *[list_197332, list_197339], **kwargs_197346)
        
        
        # Call to assertItemsEqual(...): (line 736)
        # Processing the call arguments (line 736)
        
        # Obtaining an instance of the builtin type 'list' (line 736)
        list_197350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 736)
        # Adding element type (line 736)
        int_197351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 31), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 30), list_197350, int_197351)
        # Adding element type (line 736)
        str_197352 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 34), 'str', 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 30), list_197350, str_197352)
        # Adding element type (line 736)
        # Getting the type of 'divmod' (line 736)
        divmod_197353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 39), 'divmod', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 30), list_197350, divmod_197353)
        # Adding element type (line 736)
        
        # Obtaining an instance of the builtin type 'list' (line 736)
        list_197354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 736)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 30), list_197350, list_197354)
        
        
        # Obtaining an instance of the builtin type 'list' (line 736)
        list_197355 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 52), 'list')
        # Adding type elements to the builtin type 'list' instance (line 736)
        # Adding element type (line 736)
        # Getting the type of 'divmod' (line 736)
        divmod_197356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 53), 'divmod', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 52), list_197355, divmod_197356)
        # Adding element type (line 736)
        
        # Obtaining an instance of the builtin type 'list' (line 736)
        list_197357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 736)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 52), list_197355, list_197357)
        # Adding element type (line 736)
        str_197358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 65), 'str', 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 52), list_197355, str_197358)
        # Adding element type (line 736)
        int_197359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 70), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 736, 52), list_197355, int_197359)
        
        # Processing the call keyword arguments (line 736)
        kwargs_197360 = {}
        # Getting the type of 'self' (line 736)
        self_197348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 736)
        assertItemsEqual_197349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 8), self_197348, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 736)
        assertItemsEqual_call_result_197361 = invoke(stypy.reporting.localization.Localization(__file__, 736, 8), assertItemsEqual_197349, *[list_197350, list_197355], **kwargs_197360)
        
        
        # Call to assertRaises(...): (line 737)
        # Processing the call arguments (line 737)
        # Getting the type of 'self' (line 737)
        self_197364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 737)
        failureException_197365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 26), self_197364, 'failureException')
        # Getting the type of 'self' (line 737)
        self_197366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 737)
        assertItemsEqual_197367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 49), self_197366, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 738)
        list_197368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 738)
        
        
        # Obtaining an instance of the builtin type 'list' (line 738)
        list_197369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 738)
        # Adding element type (line 738)
        # Getting the type of 'divmod' (line 738)
        divmod_197370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 31), 'divmod', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 30), list_197369, divmod_197370)
        # Adding element type (line 738)
        
        # Obtaining an instance of the builtin type 'list' (line 738)
        list_197371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 39), 'list')
        # Adding type elements to the builtin type 'list' instance (line 738)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 30), list_197369, list_197371)
        # Adding element type (line 738)
        str_197372 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 43), 'str', 'x')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 30), list_197369, str_197372)
        # Adding element type (line 738)
        int_197373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 48), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 30), list_197369, int_197373)
        # Adding element type (line 738)
        complex_197374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 51), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 30), list_197369, complex_197374)
        # Adding element type (line 738)
        complex_197375 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 55), 'complex')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 30), list_197369, complex_197375)
        # Adding element type (line 738)
        
        # Call to set(...): (line 738)
        # Processing the call keyword arguments (line 738)
        kwargs_197377 = {}
        # Getting the type of 'set' (line 738)
        set_197376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 59), 'set', False)
        # Calling set(args, kwargs) (line 738)
        set_call_result_197378 = invoke(stypy.reporting.localization.Localization(__file__, 738, 59), set_197376, *[], **kwargs_197377)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 738, 30), list_197369, set_call_result_197378)
        
        # Processing the call keyword arguments (line 737)
        kwargs_197379 = {}
        # Getting the type of 'self' (line 737)
        self_197362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 737)
        assertRaises_197363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 8), self_197362, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 737)
        assertRaises_call_result_197380 = invoke(stypy.reporting.localization.Localization(__file__, 737, 8), assertRaises_197363, *[failureException_197365, assertItemsEqual_197367, list_197368, list_197369], **kwargs_197379)
        
        
        # Call to assertRaises(...): (line 739)
        # Processing the call arguments (line 739)
        # Getting the type of 'self' (line 739)
        self_197383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 739)
        failureException_197384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 739, 26), self_197383, 'failureException')
        # Getting the type of 'self' (line 739)
        self_197385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 739)
        assertItemsEqual_197386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 739, 49), self_197385, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 740)
        list_197387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 740)
        # Adding element type (line 740)
        
        # Obtaining an instance of the builtin type 'list' (line 740)
        list_197388 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 740)
        # Adding element type (line 740)
        int_197389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 28), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 27), list_197388, int_197389)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 26), list_197387, list_197388)
        
        
        # Obtaining an instance of the builtin type 'list' (line 740)
        list_197390 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 33), 'list')
        # Adding type elements to the builtin type 'list' instance (line 740)
        # Adding element type (line 740)
        
        # Obtaining an instance of the builtin type 'list' (line 740)
        list_197391 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 34), 'list')
        # Adding type elements to the builtin type 'list' instance (line 740)
        # Adding element type (line 740)
        int_197392 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 740, 35), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 34), list_197391, int_197392)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 740, 33), list_197390, list_197391)
        
        # Processing the call keyword arguments (line 739)
        kwargs_197393 = {}
        # Getting the type of 'self' (line 739)
        self_197381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 739)
        assertRaises_197382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 739, 8), self_197381, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 739)
        assertRaises_call_result_197394 = invoke(stypy.reporting.localization.Localization(__file__, 739, 8), assertRaises_197382, *[failureException_197384, assertItemsEqual_197386, list_197387, list_197390], **kwargs_197393)
        
        
        # Call to assertRaises(...): (line 743)
        # Processing the call arguments (line 743)
        # Getting the type of 'self' (line 743)
        self_197397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 743)
        failureException_197398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 26), self_197397, 'failureException')
        # Getting the type of 'self' (line 743)
        self_197399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 743)
        assertItemsEqual_197400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 49), self_197399, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 744)
        list_197401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 744)
        # Adding element type (line 744)
        int_197402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 26), list_197401, int_197402)
        # Adding element type (line 744)
        int_197403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 26), list_197401, int_197403)
        # Adding element type (line 744)
        int_197404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 33), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 26), list_197401, int_197404)
        
        
        # Obtaining an instance of the builtin type 'list' (line 744)
        list_197405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 37), 'list')
        # Adding type elements to the builtin type 'list' instance (line 744)
        # Adding element type (line 744)
        int_197406 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 38), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 37), list_197405, int_197406)
        # Adding element type (line 744)
        int_197407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 744, 41), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 744, 37), list_197405, int_197407)
        
        # Processing the call keyword arguments (line 743)
        kwargs_197408 = {}
        # Getting the type of 'self' (line 743)
        self_197395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 743)
        assertRaises_197396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 8), self_197395, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 743)
        assertRaises_call_result_197409 = invoke(stypy.reporting.localization.Localization(__file__, 743, 8), assertRaises_197396, *[failureException_197398, assertItemsEqual_197400, list_197401, list_197405], **kwargs_197408)
        
        
        # Call to assertRaises(...): (line 745)
        # Processing the call arguments (line 745)
        # Getting the type of 'self' (line 745)
        self_197412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 745)
        failureException_197413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 26), self_197412, 'failureException')
        # Getting the type of 'self' (line 745)
        self_197414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 745)
        assertItemsEqual_197415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 49), self_197414, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 746)
        list_197416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 746)
        # Adding element type (line 746)
        int_197417 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 26), list_197416, int_197417)
        # Adding element type (line 746)
        int_197418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 30), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 26), list_197416, int_197418)
        # Adding element type (line 746)
        str_197419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 33), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 26), list_197416, str_197419)
        # Adding element type (line 746)
        str_197420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 38), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 26), list_197416, str_197420)
        # Adding element type (line 746)
        str_197421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 43), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 26), list_197416, str_197421)
        
        
        # Obtaining an instance of the builtin type 'list' (line 746)
        list_197422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 49), 'list')
        # Adding type elements to the builtin type 'list' instance (line 746)
        # Adding element type (line 746)
        str_197423 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 50), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 49), list_197422, str_197423)
        # Adding element type (line 746)
        str_197424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 55), 'str', '2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 49), list_197422, str_197424)
        # Adding element type (line 746)
        # Getting the type of 'True' (line 746)
        True_197425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 60), 'True', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 49), list_197422, True_197425)
        # Adding element type (line 746)
        str_197426 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 746, 66), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 746, 49), list_197422, str_197426)
        
        # Processing the call keyword arguments (line 745)
        kwargs_197427 = {}
        # Getting the type of 'self' (line 745)
        self_197410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 745)
        assertRaises_197411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 8), self_197410, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 745)
        assertRaises_call_result_197428 = invoke(stypy.reporting.localization.Localization(__file__, 745, 8), assertRaises_197411, *[failureException_197413, assertItemsEqual_197415, list_197416, list_197422], **kwargs_197427)
        
        
        # Call to assertRaises(...): (line 747)
        # Processing the call arguments (line 747)
        # Getting the type of 'self' (line 747)
        self_197431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 747)
        failureException_197432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 26), self_197431, 'failureException')
        # Getting the type of 'self' (line 747)
        self_197433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 49), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 747)
        assertItemsEqual_197434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 49), self_197433, 'assertItemsEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 748)
        list_197435 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 748)
        # Adding element type (line 748)
        int_197436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 27), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 26), list_197435, int_197436)
        # Adding element type (line 748)
        
        # Obtaining an instance of the builtin type 'dict' (line 748)
        dict_197437 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 30), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 748)
        # Adding element type (key, value) (line 748)
        str_197438 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 31), 'str', 'b')
        int_197439 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 36), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 30), dict_197437, (str_197438, int_197439))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 26), list_197435, dict_197437)
        # Adding element type (line 748)
        # Getting the type of 'None' (line 748)
        None_197440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 40), 'None', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 26), list_197435, None_197440)
        # Adding element type (line 748)
        # Getting the type of 'True' (line 748)
        True_197441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 46), 'True', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 26), list_197435, True_197441)
        
        
        # Obtaining an instance of the builtin type 'list' (line 748)
        list_197442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 748)
        # Adding element type (line 748)
        
        # Obtaining an instance of the builtin type 'dict' (line 748)
        dict_197443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 54), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 748)
        # Adding element type (key, value) (line 748)
        str_197444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 55), 'str', 'b')
        int_197445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 748, 60), 'int')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 54), dict_197443, (str_197444, int_197445))
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 53), list_197442, dict_197443)
        # Adding element type (line 748)
        # Getting the type of 'True' (line 748)
        True_197446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 64), 'True', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 53), list_197442, True_197446)
        # Adding element type (line 748)
        # Getting the type of 'None' (line 748)
        None_197447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 70), 'None', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 748, 53), list_197442, None_197447)
        
        # Processing the call keyword arguments (line 747)
        kwargs_197448 = {}
        # Getting the type of 'self' (line 747)
        self_197429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 747, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 747)
        assertRaises_197430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 747, 8), self_197429, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 747)
        assertRaises_call_result_197449 = invoke(stypy.reporting.localization.Localization(__file__, 747, 8), assertRaises_197430, *[failureException_197432, assertItemsEqual_197434, list_197435, list_197442], **kwargs_197448)
        
        
        # Assigning a List to a Name (line 752):
        
        # Assigning a List to a Name (line 752):
        
        # Obtaining an instance of the builtin type 'list' (line 752)
        list_197450 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 12), 'list')
        # Adding type elements to the builtin type 'list' instance (line 752)
        # Adding element type (line 752)
        
        # Obtaining an instance of the builtin type 'set' (line 752)
        set_197451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 13), 'set')
        # Adding type elements to the builtin type 'set' instance (line 752)
        # Adding element type (line 752)
        int_197452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 14), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 13), set_197451, int_197452)
        # Adding element type (line 752)
        int_197453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 16), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 13), set_197451, int_197453)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 12), list_197450, set_197451)
        # Adding element type (line 752)
        
        # Obtaining an instance of the builtin type 'set' (line 752)
        set_197454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 20), 'set')
        # Adding type elements to the builtin type 'set' instance (line 752)
        # Adding element type (line 752)
        int_197455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 20), set_197454, int_197455)
        # Adding element type (line 752)
        int_197456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 20), set_197454, int_197456)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 752, 12), list_197450, set_197454)
        
        # Assigning a type to the variable 'a' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'a', list_197450)
        
        # Assigning a Subscript to a Name (line 753):
        
        # Assigning a Subscript to a Name (line 753):
        
        # Obtaining the type of the subscript
        int_197457 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 753, 16), 'int')
        slice_197458 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 753, 12), None, None, int_197457)
        # Getting the type of 'a' (line 753)
        a_197459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 12), 'a')
        # Obtaining the member '__getitem__' of a type (line 753)
        getitem___197460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 12), a_197459, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 753)
        subscript_call_result_197461 = invoke(stypy.reporting.localization.Localization(__file__, 753, 12), getitem___197460, slice_197458)
        
        # Assigning a type to the variable 'b' (line 753)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 753, 8), 'b', subscript_call_result_197461)
        
        # Call to assertItemsEqual(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 'a' (line 754)
        a_197464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 30), 'a', False)
        # Getting the type of 'b' (line 754)
        b_197465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 33), 'b', False)
        # Processing the call keyword arguments (line 754)
        kwargs_197466 = {}
        # Getting the type of 'self' (line 754)
        self_197462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'self', False)
        # Obtaining the member 'assertItemsEqual' of a type (line 754)
        assertItemsEqual_197463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 8), self_197462, 'assertItemsEqual')
        # Calling assertItemsEqual(args, kwargs) (line 754)
        assertItemsEqual_call_result_197467 = invoke(stypy.reporting.localization.Localization(__file__, 754, 8), assertItemsEqual_197463, *[a_197464, b_197465], **kwargs_197466)
        
        
        # Assigning a Call to a Name (line 758):
        
        # Assigning a Call to a Name (line 758):
        
        # Call to set(...): (line 758)
        # Processing the call arguments (line 758)
        
        # Call to _count_diff_all_purpose(...): (line 758)
        # Processing the call arguments (line 758)
        str_197472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 58), 'str', 'aaabccd')
        str_197473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 69), 'str', 'abbbcce')
        # Processing the call keyword arguments (line 758)
        kwargs_197474 = {}
        # Getting the type of 'unittest' (line 758)
        unittest_197469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 20), 'unittest', False)
        # Obtaining the member 'util' of a type (line 758)
        util_197470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 20), unittest_197469, 'util')
        # Obtaining the member '_count_diff_all_purpose' of a type (line 758)
        _count_diff_all_purpose_197471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 758, 20), util_197470, '_count_diff_all_purpose')
        # Calling _count_diff_all_purpose(args, kwargs) (line 758)
        _count_diff_all_purpose_call_result_197475 = invoke(stypy.reporting.localization.Localization(__file__, 758, 20), _count_diff_all_purpose_197471, *[str_197472, str_197473], **kwargs_197474)
        
        # Processing the call keyword arguments (line 758)
        kwargs_197476 = {}
        # Getting the type of 'set' (line 758)
        set_197468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 16), 'set', False)
        # Calling set(args, kwargs) (line 758)
        set_call_result_197477 = invoke(stypy.reporting.localization.Localization(__file__, 758, 16), set_197468, *[_count_diff_all_purpose_call_result_197475], **kwargs_197476)
        
        # Assigning a type to the variable 'diffs' (line 758)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 758, 8), 'diffs', set_call_result_197477)
        
        # Assigning a Set to a Name (line 759):
        
        # Assigning a Set to a Name (line 759):
        
        # Obtaining an instance of the builtin type 'set' (line 759)
        set_197478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 19), 'set')
        # Adding type elements to the builtin type 'set' instance (line 759)
        # Adding element type (line 759)
        
        # Obtaining an instance of the builtin type 'tuple' (line 759)
        tuple_197479 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 759)
        # Adding element type (line 759)
        int_197480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 21), tuple_197479, int_197480)
        # Adding element type (line 759)
        int_197481 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 21), tuple_197479, int_197481)
        # Adding element type (line 759)
        str_197482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 25), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 21), tuple_197479, str_197482)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 19), set_197478, tuple_197479)
        # Adding element type (line 759)
        
        # Obtaining an instance of the builtin type 'tuple' (line 759)
        tuple_197483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 759)
        # Adding element type (line 759)
        int_197484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 32), tuple_197483, int_197484)
        # Adding element type (line 759)
        int_197485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 32), tuple_197483, int_197485)
        # Adding element type (line 759)
        str_197486 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 36), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 32), tuple_197483, str_197486)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 19), set_197478, tuple_197483)
        # Adding element type (line 759)
        
        # Obtaining an instance of the builtin type 'tuple' (line 759)
        tuple_197487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 759)
        # Adding element type (line 759)
        int_197488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 43), tuple_197487, int_197488)
        # Adding element type (line 759)
        int_197489 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 43), tuple_197487, int_197489)
        # Adding element type (line 759)
        str_197490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 47), 'str', 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 43), tuple_197487, str_197490)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 19), set_197478, tuple_197487)
        # Adding element type (line 759)
        
        # Obtaining an instance of the builtin type 'tuple' (line 759)
        tuple_197491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 54), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 759)
        # Adding element type (line 759)
        int_197492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 54), tuple_197491, int_197492)
        # Adding element type (line 759)
        int_197493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 54), tuple_197491, int_197493)
        # Adding element type (line 759)
        str_197494 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 759, 58), 'str', 'e')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 54), tuple_197491, str_197494)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 759, 19), set_197478, tuple_197491)
        
        # Assigning a type to the variable 'expected' (line 759)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 759, 8), 'expected', set_197478)
        
        # Call to assertEqual(...): (line 760)
        # Processing the call arguments (line 760)
        # Getting the type of 'diffs' (line 760)
        diffs_197497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 25), 'diffs', False)
        # Getting the type of 'expected' (line 760)
        expected_197498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 32), 'expected', False)
        # Processing the call keyword arguments (line 760)
        kwargs_197499 = {}
        # Getting the type of 'self' (line 760)
        self_197495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 760)
        assertEqual_197496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 8), self_197495, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 760)
        assertEqual_call_result_197500 = invoke(stypy.reporting.localization.Localization(__file__, 760, 8), assertEqual_197496, *[diffs_197497, expected_197498], **kwargs_197499)
        
        
        # Assigning a Call to a Name (line 762):
        
        # Assigning a Call to a Name (line 762):
        
        # Call to _count_diff_all_purpose(...): (line 762)
        # Processing the call arguments (line 762)
        
        # Obtaining an instance of the builtin type 'list' (line 762)
        list_197504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 54), 'list')
        # Adding type elements to the builtin type 'list' instance (line 762)
        # Adding element type (line 762)
        
        # Obtaining an instance of the builtin type 'list' (line 762)
        list_197505 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 55), 'list')
        # Adding type elements to the builtin type 'list' instance (line 762)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 762, 54), list_197504, list_197505)
        
        
        # Obtaining an instance of the builtin type 'list' (line 762)
        list_197506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 762)
        
        # Processing the call keyword arguments (line 762)
        kwargs_197507 = {}
        # Getting the type of 'unittest' (line 762)
        unittest_197501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 762, 16), 'unittest', False)
        # Obtaining the member 'util' of a type (line 762)
        util_197502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 16), unittest_197501, 'util')
        # Obtaining the member '_count_diff_all_purpose' of a type (line 762)
        _count_diff_all_purpose_197503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 762, 16), util_197502, '_count_diff_all_purpose')
        # Calling _count_diff_all_purpose(args, kwargs) (line 762)
        _count_diff_all_purpose_call_result_197508 = invoke(stypy.reporting.localization.Localization(__file__, 762, 16), _count_diff_all_purpose_197503, *[list_197504, list_197506], **kwargs_197507)
        
        # Assigning a type to the variable 'diffs' (line 762)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 8), 'diffs', _count_diff_all_purpose_call_result_197508)
        
        # Call to assertEqual(...): (line 763)
        # Processing the call arguments (line 763)
        # Getting the type of 'diffs' (line 763)
        diffs_197511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 25), 'diffs', False)
        
        # Obtaining an instance of the builtin type 'list' (line 763)
        list_197512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 32), 'list')
        # Adding type elements to the builtin type 'list' instance (line 763)
        # Adding element type (line 763)
        
        # Obtaining an instance of the builtin type 'tuple' (line 763)
        tuple_197513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 34), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 763)
        # Adding element type (line 763)
        int_197514 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 34), tuple_197513, int_197514)
        # Adding element type (line 763)
        int_197515 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 37), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 34), tuple_197513, int_197515)
        # Adding element type (line 763)
        
        # Obtaining an instance of the builtin type 'list' (line 763)
        list_197516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 40), 'list')
        # Adding type elements to the builtin type 'list' instance (line 763)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 34), tuple_197513, list_197516)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 763, 32), list_197512, tuple_197513)
        
        # Processing the call keyword arguments (line 763)
        kwargs_197517 = {}
        # Getting the type of 'self' (line 763)
        self_197509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 763)
        assertEqual_197510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 8), self_197509, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 763)
        assertEqual_call_result_197518 = invoke(stypy.reporting.localization.Localization(__file__, 763, 8), assertEqual_197510, *[diffs_197511, list_197512], **kwargs_197517)
        
        
        # Assigning a Call to a Name (line 765):
        
        # Assigning a Call to a Name (line 765):
        
        # Call to set(...): (line 765)
        # Processing the call arguments (line 765)
        
        # Call to _count_diff_hashable(...): (line 765)
        # Processing the call arguments (line 765)
        str_197523 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 55), 'str', 'aaabccd')
        str_197524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 765, 66), 'str', 'abbbcce')
        # Processing the call keyword arguments (line 765)
        kwargs_197525 = {}
        # Getting the type of 'unittest' (line 765)
        unittest_197520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 20), 'unittest', False)
        # Obtaining the member 'util' of a type (line 765)
        util_197521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 20), unittest_197520, 'util')
        # Obtaining the member '_count_diff_hashable' of a type (line 765)
        _count_diff_hashable_197522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 20), util_197521, '_count_diff_hashable')
        # Calling _count_diff_hashable(args, kwargs) (line 765)
        _count_diff_hashable_call_result_197526 = invoke(stypy.reporting.localization.Localization(__file__, 765, 20), _count_diff_hashable_197522, *[str_197523, str_197524], **kwargs_197525)
        
        # Processing the call keyword arguments (line 765)
        kwargs_197527 = {}
        # Getting the type of 'set' (line 765)
        set_197519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 16), 'set', False)
        # Calling set(args, kwargs) (line 765)
        set_call_result_197528 = invoke(stypy.reporting.localization.Localization(__file__, 765, 16), set_197519, *[_count_diff_hashable_call_result_197526], **kwargs_197527)
        
        # Assigning a type to the variable 'diffs' (line 765)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'diffs', set_call_result_197528)
        
        # Assigning a Set to a Name (line 766):
        
        # Assigning a Set to a Name (line 766):
        
        # Obtaining an instance of the builtin type 'set' (line 766)
        set_197529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 19), 'set')
        # Adding type elements to the builtin type 'set' instance (line 766)
        # Adding element type (line 766)
        
        # Obtaining an instance of the builtin type 'tuple' (line 766)
        tuple_197530 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 766)
        # Adding element type (line 766)
        int_197531 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 21), tuple_197530, int_197531)
        # Adding element type (line 766)
        int_197532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 23), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 21), tuple_197530, int_197532)
        # Adding element type (line 766)
        str_197533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 25), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 21), tuple_197530, str_197533)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 19), set_197529, tuple_197530)
        # Adding element type (line 766)
        
        # Obtaining an instance of the builtin type 'tuple' (line 766)
        tuple_197534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 766)
        # Adding element type (line 766)
        int_197535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 32), tuple_197534, int_197535)
        # Adding element type (line 766)
        int_197536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 34), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 32), tuple_197534, int_197536)
        # Adding element type (line 766)
        str_197537 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 36), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 32), tuple_197534, str_197537)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 19), set_197529, tuple_197534)
        # Adding element type (line 766)
        
        # Obtaining an instance of the builtin type 'tuple' (line 766)
        tuple_197538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 766)
        # Adding element type (line 766)
        int_197539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 43), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 43), tuple_197538, int_197539)
        # Adding element type (line 766)
        int_197540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 45), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 43), tuple_197538, int_197540)
        # Adding element type (line 766)
        str_197541 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 47), 'str', 'd')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 43), tuple_197538, str_197541)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 19), set_197529, tuple_197538)
        # Adding element type (line 766)
        
        # Obtaining an instance of the builtin type 'tuple' (line 766)
        tuple_197542 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 54), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 766)
        # Adding element type (line 766)
        int_197543 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 54), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 54), tuple_197542, int_197543)
        # Adding element type (line 766)
        int_197544 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 56), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 54), tuple_197542, int_197544)
        # Adding element type (line 766)
        str_197545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 58), 'str', 'e')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 54), tuple_197542, str_197545)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 766, 19), set_197529, tuple_197542)
        
        # Assigning a type to the variable 'expected' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 8), 'expected', set_197529)
        
        # Call to assertEqual(...): (line 767)
        # Processing the call arguments (line 767)
        # Getting the type of 'diffs' (line 767)
        diffs_197548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 25), 'diffs', False)
        # Getting the type of 'expected' (line 767)
        expected_197549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 32), 'expected', False)
        # Processing the call keyword arguments (line 767)
        kwargs_197550 = {}
        # Getting the type of 'self' (line 767)
        self_197546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 767)
        assertEqual_197547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 8), self_197546, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 767)
        assertEqual_call_result_197551 = invoke(stypy.reporting.localization.Localization(__file__, 767, 8), assertEqual_197547, *[diffs_197548, expected_197549], **kwargs_197550)
        
        
        # ################# End of 'testAssertItemsEqual(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertItemsEqual' in the type store
        # Getting the type of 'stypy_return_type' (line 707)
        stypy_return_type_197552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_197552)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertItemsEqual'
        return stypy_return_type_197552


    @norecursion
    def testAssertSetEqual(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertSetEqual'
        module_type_store = module_type_store.open_function_context('testAssertSetEqual', 769, 4, False)
        # Assigning a type to the variable 'self' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertSetEqual')
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertSetEqual.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertSetEqual', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertSetEqual', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertSetEqual(...)' code ##################

        
        # Assigning a Call to a Name (line 770):
        
        # Assigning a Call to a Name (line 770):
        
        # Call to set(...): (line 770)
        # Processing the call keyword arguments (line 770)
        kwargs_197554 = {}
        # Getting the type of 'set' (line 770)
        set_197553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 15), 'set', False)
        # Calling set(args, kwargs) (line 770)
        set_call_result_197555 = invoke(stypy.reporting.localization.Localization(__file__, 770, 15), set_197553, *[], **kwargs_197554)
        
        # Assigning a type to the variable 'set1' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'set1', set_call_result_197555)
        
        # Assigning a Call to a Name (line 771):
        
        # Assigning a Call to a Name (line 771):
        
        # Call to set(...): (line 771)
        # Processing the call keyword arguments (line 771)
        kwargs_197557 = {}
        # Getting the type of 'set' (line 771)
        set_197556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 15), 'set', False)
        # Calling set(args, kwargs) (line 771)
        set_call_result_197558 = invoke(stypy.reporting.localization.Localization(__file__, 771, 15), set_197556, *[], **kwargs_197557)
        
        # Assigning a type to the variable 'set2' (line 771)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 8), 'set2', set_call_result_197558)
        
        # Call to assertSetEqual(...): (line 772)
        # Processing the call arguments (line 772)
        # Getting the type of 'set1' (line 772)
        set1_197561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 28), 'set1', False)
        # Getting the type of 'set2' (line 772)
        set2_197562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 34), 'set2', False)
        # Processing the call keyword arguments (line 772)
        kwargs_197563 = {}
        # Getting the type of 'self' (line 772)
        self_197559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 772)
        assertSetEqual_197560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 8), self_197559, 'assertSetEqual')
        # Calling assertSetEqual(args, kwargs) (line 772)
        assertSetEqual_call_result_197564 = invoke(stypy.reporting.localization.Localization(__file__, 772, 8), assertSetEqual_197560, *[set1_197561, set2_197562], **kwargs_197563)
        
        
        # Call to assertRaises(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'self' (line 774)
        self_197567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 774)
        failureException_197568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 26), self_197567, 'failureException')
        # Getting the type of 'self' (line 774)
        self_197569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 774)
        assertSetEqual_197570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 49), self_197569, 'assertSetEqual')
        # Getting the type of 'None' (line 774)
        None_197571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 70), 'None', False)
        # Getting the type of 'set2' (line 774)
        set2_197572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 76), 'set2', False)
        # Processing the call keyword arguments (line 774)
        kwargs_197573 = {}
        # Getting the type of 'self' (line 774)
        self_197565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 774)
        assertRaises_197566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 8), self_197565, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 774)
        assertRaises_call_result_197574 = invoke(stypy.reporting.localization.Localization(__file__, 774, 8), assertRaises_197566, *[failureException_197568, assertSetEqual_197570, None_197571, set2_197572], **kwargs_197573)
        
        
        # Call to assertRaises(...): (line 775)
        # Processing the call arguments (line 775)
        # Getting the type of 'self' (line 775)
        self_197577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 775)
        failureException_197578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 26), self_197577, 'failureException')
        # Getting the type of 'self' (line 775)
        self_197579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 775)
        assertSetEqual_197580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 49), self_197579, 'assertSetEqual')
        
        # Obtaining an instance of the builtin type 'list' (line 775)
        list_197581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 775, 70), 'list')
        # Adding type elements to the builtin type 'list' instance (line 775)
        
        # Getting the type of 'set2' (line 775)
        set2_197582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 74), 'set2', False)
        # Processing the call keyword arguments (line 775)
        kwargs_197583 = {}
        # Getting the type of 'self' (line 775)
        self_197575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 775)
        assertRaises_197576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 8), self_197575, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 775)
        assertRaises_call_result_197584 = invoke(stypy.reporting.localization.Localization(__file__, 775, 8), assertRaises_197576, *[failureException_197578, assertSetEqual_197580, list_197581, set2_197582], **kwargs_197583)
        
        
        # Call to assertRaises(...): (line 776)
        # Processing the call arguments (line 776)
        # Getting the type of 'self' (line 776)
        self_197587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 776)
        failureException_197588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 26), self_197587, 'failureException')
        # Getting the type of 'self' (line 776)
        self_197589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 776)
        assertSetEqual_197590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 49), self_197589, 'assertSetEqual')
        # Getting the type of 'set1' (line 776)
        set1_197591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 70), 'set1', False)
        # Getting the type of 'None' (line 776)
        None_197592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 76), 'None', False)
        # Processing the call keyword arguments (line 776)
        kwargs_197593 = {}
        # Getting the type of 'self' (line 776)
        self_197585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 776)
        assertRaises_197586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 8), self_197585, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 776)
        assertRaises_call_result_197594 = invoke(stypy.reporting.localization.Localization(__file__, 776, 8), assertRaises_197586, *[failureException_197588, assertSetEqual_197590, set1_197591, None_197592], **kwargs_197593)
        
        
        # Call to assertRaises(...): (line 777)
        # Processing the call arguments (line 777)
        # Getting the type of 'self' (line 777)
        self_197597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 777)
        failureException_197598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 26), self_197597, 'failureException')
        # Getting the type of 'self' (line 777)
        self_197599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 777)
        assertSetEqual_197600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 49), self_197599, 'assertSetEqual')
        # Getting the type of 'set1' (line 777)
        set1_197601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 70), 'set1', False)
        
        # Obtaining an instance of the builtin type 'list' (line 777)
        list_197602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 76), 'list')
        # Adding type elements to the builtin type 'list' instance (line 777)
        
        # Processing the call keyword arguments (line 777)
        kwargs_197603 = {}
        # Getting the type of 'self' (line 777)
        self_197595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 777)
        assertRaises_197596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 8), self_197595, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 777)
        assertRaises_call_result_197604 = invoke(stypy.reporting.localization.Localization(__file__, 777, 8), assertRaises_197596, *[failureException_197598, assertSetEqual_197600, set1_197601, list_197602], **kwargs_197603)
        
        
        # Assigning a Call to a Name (line 779):
        
        # Assigning a Call to a Name (line 779):
        
        # Call to set(...): (line 779)
        # Processing the call arguments (line 779)
        
        # Obtaining an instance of the builtin type 'list' (line 779)
        list_197606 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 779)
        # Adding element type (line 779)
        str_197607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 20), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 19), list_197606, str_197607)
        
        # Processing the call keyword arguments (line 779)
        kwargs_197608 = {}
        # Getting the type of 'set' (line 779)
        set_197605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 15), 'set', False)
        # Calling set(args, kwargs) (line 779)
        set_call_result_197609 = invoke(stypy.reporting.localization.Localization(__file__, 779, 15), set_197605, *[list_197606], **kwargs_197608)
        
        # Assigning a type to the variable 'set1' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'set1', set_call_result_197609)
        
        # Assigning a Call to a Name (line 780):
        
        # Assigning a Call to a Name (line 780):
        
        # Call to set(...): (line 780)
        # Processing the call keyword arguments (line 780)
        kwargs_197611 = {}
        # Getting the type of 'set' (line 780)
        set_197610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 15), 'set', False)
        # Calling set(args, kwargs) (line 780)
        set_call_result_197612 = invoke(stypy.reporting.localization.Localization(__file__, 780, 15), set_197610, *[], **kwargs_197611)
        
        # Assigning a type to the variable 'set2' (line 780)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 8), 'set2', set_call_result_197612)
        
        # Call to assertRaises(...): (line 781)
        # Processing the call arguments (line 781)
        # Getting the type of 'self' (line 781)
        self_197615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 781)
        failureException_197616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 26), self_197615, 'failureException')
        # Getting the type of 'self' (line 781)
        self_197617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 781)
        assertSetEqual_197618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 49), self_197617, 'assertSetEqual')
        # Getting the type of 'set1' (line 781)
        set1_197619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 70), 'set1', False)
        # Getting the type of 'set2' (line 781)
        set2_197620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 76), 'set2', False)
        # Processing the call keyword arguments (line 781)
        kwargs_197621 = {}
        # Getting the type of 'self' (line 781)
        self_197613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 781)
        assertRaises_197614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 8), self_197613, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 781)
        assertRaises_call_result_197622 = invoke(stypy.reporting.localization.Localization(__file__, 781, 8), assertRaises_197614, *[failureException_197616, assertSetEqual_197618, set1_197619, set2_197620], **kwargs_197621)
        
        
        # Assigning a Call to a Name (line 783):
        
        # Assigning a Call to a Name (line 783):
        
        # Call to set(...): (line 783)
        # Processing the call arguments (line 783)
        
        # Obtaining an instance of the builtin type 'list' (line 783)
        list_197624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 783)
        # Adding element type (line 783)
        str_197625 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 20), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 783, 19), list_197624, str_197625)
        
        # Processing the call keyword arguments (line 783)
        kwargs_197626 = {}
        # Getting the type of 'set' (line 783)
        set_197623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 15), 'set', False)
        # Calling set(args, kwargs) (line 783)
        set_call_result_197627 = invoke(stypy.reporting.localization.Localization(__file__, 783, 15), set_197623, *[list_197624], **kwargs_197626)
        
        # Assigning a type to the variable 'set1' (line 783)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 783, 8), 'set1', set_call_result_197627)
        
        # Assigning a Call to a Name (line 784):
        
        # Assigning a Call to a Name (line 784):
        
        # Call to set(...): (line 784)
        # Processing the call arguments (line 784)
        
        # Obtaining an instance of the builtin type 'list' (line 784)
        list_197629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 784)
        # Adding element type (line 784)
        str_197630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 784, 20), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 784, 19), list_197629, str_197630)
        
        # Processing the call keyword arguments (line 784)
        kwargs_197631 = {}
        # Getting the type of 'set' (line 784)
        set_197628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 784, 15), 'set', False)
        # Calling set(args, kwargs) (line 784)
        set_call_result_197632 = invoke(stypy.reporting.localization.Localization(__file__, 784, 15), set_197628, *[list_197629], **kwargs_197631)
        
        # Assigning a type to the variable 'set2' (line 784)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 784, 8), 'set2', set_call_result_197632)
        
        # Call to assertSetEqual(...): (line 785)
        # Processing the call arguments (line 785)
        # Getting the type of 'set1' (line 785)
        set1_197635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 28), 'set1', False)
        # Getting the type of 'set2' (line 785)
        set2_197636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 34), 'set2', False)
        # Processing the call keyword arguments (line 785)
        kwargs_197637 = {}
        # Getting the type of 'self' (line 785)
        self_197633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 785)
        assertSetEqual_197634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 8), self_197633, 'assertSetEqual')
        # Calling assertSetEqual(args, kwargs) (line 785)
        assertSetEqual_call_result_197638 = invoke(stypy.reporting.localization.Localization(__file__, 785, 8), assertSetEqual_197634, *[set1_197635, set2_197636], **kwargs_197637)
        
        
        # Assigning a Call to a Name (line 787):
        
        # Assigning a Call to a Name (line 787):
        
        # Call to set(...): (line 787)
        # Processing the call arguments (line 787)
        
        # Obtaining an instance of the builtin type 'list' (line 787)
        list_197640 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 787)
        # Adding element type (line 787)
        str_197641 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 787, 20), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 787, 19), list_197640, str_197641)
        
        # Processing the call keyword arguments (line 787)
        kwargs_197642 = {}
        # Getting the type of 'set' (line 787)
        set_197639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 15), 'set', False)
        # Calling set(args, kwargs) (line 787)
        set_call_result_197643 = invoke(stypy.reporting.localization.Localization(__file__, 787, 15), set_197639, *[list_197640], **kwargs_197642)
        
        # Assigning a type to the variable 'set1' (line 787)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 8), 'set1', set_call_result_197643)
        
        # Assigning a Call to a Name (line 788):
        
        # Assigning a Call to a Name (line 788):
        
        # Call to set(...): (line 788)
        # Processing the call arguments (line 788)
        
        # Obtaining an instance of the builtin type 'list' (line 788)
        list_197645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 788)
        # Adding element type (line 788)
        str_197646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 20), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 19), list_197645, str_197646)
        # Adding element type (line 788)
        str_197647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 25), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 19), list_197645, str_197647)
        
        # Processing the call keyword arguments (line 788)
        kwargs_197648 = {}
        # Getting the type of 'set' (line 788)
        set_197644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 15), 'set', False)
        # Calling set(args, kwargs) (line 788)
        set_call_result_197649 = invoke(stypy.reporting.localization.Localization(__file__, 788, 15), set_197644, *[list_197645], **kwargs_197648)
        
        # Assigning a type to the variable 'set2' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'set2', set_call_result_197649)
        
        # Call to assertRaises(...): (line 789)
        # Processing the call arguments (line 789)
        # Getting the type of 'self' (line 789)
        self_197652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 789)
        failureException_197653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 26), self_197652, 'failureException')
        # Getting the type of 'self' (line 789)
        self_197654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 789)
        assertSetEqual_197655 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 49), self_197654, 'assertSetEqual')
        # Getting the type of 'set1' (line 789)
        set1_197656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 70), 'set1', False)
        # Getting the type of 'set2' (line 789)
        set2_197657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 76), 'set2', False)
        # Processing the call keyword arguments (line 789)
        kwargs_197658 = {}
        # Getting the type of 'self' (line 789)
        self_197650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 789)
        assertRaises_197651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 8), self_197650, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 789)
        assertRaises_call_result_197659 = invoke(stypy.reporting.localization.Localization(__file__, 789, 8), assertRaises_197651, *[failureException_197653, assertSetEqual_197655, set1_197656, set2_197657], **kwargs_197658)
        
        
        # Assigning a Call to a Name (line 791):
        
        # Assigning a Call to a Name (line 791):
        
        # Call to set(...): (line 791)
        # Processing the call arguments (line 791)
        
        # Obtaining an instance of the builtin type 'list' (line 791)
        list_197661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 791)
        # Adding element type (line 791)
        str_197662 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 20), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 791, 19), list_197661, str_197662)
        
        # Processing the call keyword arguments (line 791)
        kwargs_197663 = {}
        # Getting the type of 'set' (line 791)
        set_197660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 791, 15), 'set', False)
        # Calling set(args, kwargs) (line 791)
        set_call_result_197664 = invoke(stypy.reporting.localization.Localization(__file__, 791, 15), set_197660, *[list_197661], **kwargs_197663)
        
        # Assigning a type to the variable 'set1' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 8), 'set1', set_call_result_197664)
        
        # Assigning a Call to a Name (line 792):
        
        # Assigning a Call to a Name (line 792):
        
        # Call to frozenset(...): (line 792)
        # Processing the call arguments (line 792)
        
        # Obtaining an instance of the builtin type 'list' (line 792)
        list_197666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 792)
        # Adding element type (line 792)
        str_197667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 26), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 25), list_197666, str_197667)
        # Adding element type (line 792)
        str_197668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 31), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 792, 25), list_197666, str_197668)
        
        # Processing the call keyword arguments (line 792)
        kwargs_197669 = {}
        # Getting the type of 'frozenset' (line 792)
        frozenset_197665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 15), 'frozenset', False)
        # Calling frozenset(args, kwargs) (line 792)
        frozenset_call_result_197670 = invoke(stypy.reporting.localization.Localization(__file__, 792, 15), frozenset_197665, *[list_197666], **kwargs_197669)
        
        # Assigning a type to the variable 'set2' (line 792)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 8), 'set2', frozenset_call_result_197670)
        
        # Call to assertRaises(...): (line 793)
        # Processing the call arguments (line 793)
        # Getting the type of 'self' (line 793)
        self_197673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 793)
        failureException_197674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 26), self_197673, 'failureException')
        # Getting the type of 'self' (line 793)
        self_197675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 793)
        assertSetEqual_197676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 49), self_197675, 'assertSetEqual')
        # Getting the type of 'set1' (line 793)
        set1_197677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 70), 'set1', False)
        # Getting the type of 'set2' (line 793)
        set2_197678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 76), 'set2', False)
        # Processing the call keyword arguments (line 793)
        kwargs_197679 = {}
        # Getting the type of 'self' (line 793)
        self_197671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 793)
        assertRaises_197672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 8), self_197671, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 793)
        assertRaises_call_result_197680 = invoke(stypy.reporting.localization.Localization(__file__, 793, 8), assertRaises_197672, *[failureException_197674, assertSetEqual_197676, set1_197677, set2_197678], **kwargs_197679)
        
        
        # Assigning a Call to a Name (line 795):
        
        # Assigning a Call to a Name (line 795):
        
        # Call to set(...): (line 795)
        # Processing the call arguments (line 795)
        
        # Obtaining an instance of the builtin type 'list' (line 795)
        list_197682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 795)
        # Adding element type (line 795)
        str_197683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 20), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 795, 19), list_197682, str_197683)
        # Adding element type (line 795)
        str_197684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 25), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 795, 19), list_197682, str_197684)
        
        # Processing the call keyword arguments (line 795)
        kwargs_197685 = {}
        # Getting the type of 'set' (line 795)
        set_197681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 15), 'set', False)
        # Calling set(args, kwargs) (line 795)
        set_call_result_197686 = invoke(stypy.reporting.localization.Localization(__file__, 795, 15), set_197681, *[list_197682], **kwargs_197685)
        
        # Assigning a type to the variable 'set1' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 8), 'set1', set_call_result_197686)
        
        # Assigning a Call to a Name (line 796):
        
        # Assigning a Call to a Name (line 796):
        
        # Call to frozenset(...): (line 796)
        # Processing the call arguments (line 796)
        
        # Obtaining an instance of the builtin type 'list' (line 796)
        list_197688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 796)
        # Adding element type (line 796)
        str_197689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 26), 'str', 'a')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 796, 25), list_197688, str_197689)
        # Adding element type (line 796)
        str_197690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 31), 'str', 'b')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 796, 25), list_197688, str_197690)
        
        # Processing the call keyword arguments (line 796)
        kwargs_197691 = {}
        # Getting the type of 'frozenset' (line 796)
        frozenset_197687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 15), 'frozenset', False)
        # Calling frozenset(args, kwargs) (line 796)
        frozenset_call_result_197692 = invoke(stypy.reporting.localization.Localization(__file__, 796, 15), frozenset_197687, *[list_197688], **kwargs_197691)
        
        # Assigning a type to the variable 'set2' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 8), 'set2', frozenset_call_result_197692)
        
        # Call to assertSetEqual(...): (line 797)
        # Processing the call arguments (line 797)
        # Getting the type of 'set1' (line 797)
        set1_197695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 28), 'set1', False)
        # Getting the type of 'set2' (line 797)
        set2_197696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 34), 'set2', False)
        # Processing the call keyword arguments (line 797)
        kwargs_197697 = {}
        # Getting the type of 'self' (line 797)
        self_197693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 8), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 797)
        assertSetEqual_197694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 8), self_197693, 'assertSetEqual')
        # Calling assertSetEqual(args, kwargs) (line 797)
        assertSetEqual_call_result_197698 = invoke(stypy.reporting.localization.Localization(__file__, 797, 8), assertSetEqual_197694, *[set1_197695, set2_197696], **kwargs_197697)
        
        
        # Assigning a Call to a Name (line 799):
        
        # Assigning a Call to a Name (line 799):
        
        # Call to set(...): (line 799)
        # Processing the call keyword arguments (line 799)
        kwargs_197700 = {}
        # Getting the type of 'set' (line 799)
        set_197699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 799, 15), 'set', False)
        # Calling set(args, kwargs) (line 799)
        set_call_result_197701 = invoke(stypy.reporting.localization.Localization(__file__, 799, 15), set_197699, *[], **kwargs_197700)
        
        # Assigning a type to the variable 'set1' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'set1', set_call_result_197701)
        
        # Assigning a Str to a Name (line 800):
        
        # Assigning a Str to a Name (line 800):
        str_197702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 800, 15), 'str', 'foo')
        # Assigning a type to the variable 'set2' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'set2', str_197702)
        
        # Call to assertRaises(...): (line 801)
        # Processing the call arguments (line 801)
        # Getting the type of 'self' (line 801)
        self_197705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 801)
        failureException_197706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 26), self_197705, 'failureException')
        # Getting the type of 'self' (line 801)
        self_197707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 801)
        assertSetEqual_197708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 49), self_197707, 'assertSetEqual')
        # Getting the type of 'set1' (line 801)
        set1_197709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 70), 'set1', False)
        # Getting the type of 'set2' (line 801)
        set2_197710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 76), 'set2', False)
        # Processing the call keyword arguments (line 801)
        kwargs_197711 = {}
        # Getting the type of 'self' (line 801)
        self_197703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 801)
        assertRaises_197704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 8), self_197703, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 801)
        assertRaises_call_result_197712 = invoke(stypy.reporting.localization.Localization(__file__, 801, 8), assertRaises_197704, *[failureException_197706, assertSetEqual_197708, set1_197709, set2_197710], **kwargs_197711)
        
        
        # Call to assertRaises(...): (line 802)
        # Processing the call arguments (line 802)
        # Getting the type of 'self' (line 802)
        self_197715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 802)
        failureException_197716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 26), self_197715, 'failureException')
        # Getting the type of 'self' (line 802)
        self_197717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 802)
        assertSetEqual_197718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 49), self_197717, 'assertSetEqual')
        # Getting the type of 'set2' (line 802)
        set2_197719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 70), 'set2', False)
        # Getting the type of 'set1' (line 802)
        set1_197720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 76), 'set1', False)
        # Processing the call keyword arguments (line 802)
        kwargs_197721 = {}
        # Getting the type of 'self' (line 802)
        self_197713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 802)
        assertRaises_197714 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 8), self_197713, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 802)
        assertRaises_call_result_197722 = invoke(stypy.reporting.localization.Localization(__file__, 802, 8), assertRaises_197714, *[failureException_197716, assertSetEqual_197718, set2_197719, set1_197720], **kwargs_197721)
        
        
        # Assigning a Call to a Name (line 805):
        
        # Assigning a Call to a Name (line 805):
        
        # Call to set(...): (line 805)
        # Processing the call arguments (line 805)
        
        # Obtaining an instance of the builtin type 'list' (line 805)
        list_197724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 805)
        # Adding element type (line 805)
        
        # Obtaining an instance of the builtin type 'tuple' (line 805)
        tuple_197725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 805)
        # Adding element type (line 805)
        int_197726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 21), tuple_197725, int_197726)
        # Adding element type (line 805)
        int_197727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 21), tuple_197725, int_197727)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 19), list_197724, tuple_197725)
        # Adding element type (line 805)
        
        # Obtaining an instance of the builtin type 'tuple' (line 805)
        tuple_197728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 805)
        # Adding element type (line 805)
        int_197729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 29), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 29), tuple_197728, int_197729)
        # Adding element type (line 805)
        int_197730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 32), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 29), tuple_197728, int_197730)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 805, 19), list_197724, tuple_197728)
        
        # Processing the call keyword arguments (line 805)
        kwargs_197731 = {}
        # Getting the type of 'set' (line 805)
        set_197723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 15), 'set', False)
        # Calling set(args, kwargs) (line 805)
        set_call_result_197732 = invoke(stypy.reporting.localization.Localization(__file__, 805, 15), set_197723, *[list_197724], **kwargs_197731)
        
        # Assigning a type to the variable 'set1' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 8), 'set1', set_call_result_197732)
        
        # Assigning a Call to a Name (line 806):
        
        # Assigning a Call to a Name (line 806):
        
        # Call to set(...): (line 806)
        # Processing the call arguments (line 806)
        
        # Obtaining an instance of the builtin type 'list' (line 806)
        list_197734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 806)
        # Adding element type (line 806)
        
        # Obtaining an instance of the builtin type 'tuple' (line 806)
        tuple_197735 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 21), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 806)
        # Adding element type (line 806)
        int_197736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 21), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 21), tuple_197735, int_197736)
        # Adding element type (line 806)
        int_197737 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 24), 'int')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 21), tuple_197735, int_197737)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 19), list_197734, tuple_197735)
        
        # Processing the call keyword arguments (line 806)
        kwargs_197738 = {}
        # Getting the type of 'set' (line 806)
        set_197733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 15), 'set', False)
        # Calling set(args, kwargs) (line 806)
        set_call_result_197739 = invoke(stypy.reporting.localization.Localization(__file__, 806, 15), set_197733, *[list_197734], **kwargs_197738)
        
        # Assigning a type to the variable 'set2' (line 806)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 8), 'set2', set_call_result_197739)
        
        # Call to assertRaises(...): (line 807)
        # Processing the call arguments (line 807)
        # Getting the type of 'self' (line 807)
        self_197742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 807)
        failureException_197743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 807, 26), self_197742, 'failureException')
        # Getting the type of 'self' (line 807)
        self_197744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 49), 'self', False)
        # Obtaining the member 'assertSetEqual' of a type (line 807)
        assertSetEqual_197745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 807, 49), self_197744, 'assertSetEqual')
        # Getting the type of 'set1' (line 807)
        set1_197746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 70), 'set1', False)
        # Getting the type of 'set2' (line 807)
        set2_197747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 76), 'set2', False)
        # Processing the call keyword arguments (line 807)
        kwargs_197748 = {}
        # Getting the type of 'self' (line 807)
        self_197740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 807, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 807)
        assertRaises_197741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 807, 8), self_197740, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 807)
        assertRaises_call_result_197749 = invoke(stypy.reporting.localization.Localization(__file__, 807, 8), assertRaises_197741, *[failureException_197743, assertSetEqual_197745, set1_197746, set2_197747], **kwargs_197748)
        
        
        # ################# End of 'testAssertSetEqual(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertSetEqual' in the type store
        # Getting the type of 'stypy_return_type' (line 769)
        stypy_return_type_197750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_197750)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertSetEqual'
        return stypy_return_type_197750


    @norecursion
    def testInequality(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testInequality'
        module_type_store = module_type_store.open_function_context('testInequality', 809, 4, False)
        # Assigning a type to the variable 'self' (line 810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testInequality')
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testInequality.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testInequality', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testInequality', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testInequality(...)' code ##################

        
        # Call to assertGreater(...): (line 811)
        # Processing the call arguments (line 811)
        int_197753 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 27), 'int')
        int_197754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 811, 30), 'int')
        # Processing the call keyword arguments (line 811)
        kwargs_197755 = {}
        # Getting the type of 'self' (line 811)
        self_197751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 811)
        assertGreater_197752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 8), self_197751, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 811)
        assertGreater_call_result_197756 = invoke(stypy.reporting.localization.Localization(__file__, 811, 8), assertGreater_197752, *[int_197753, int_197754], **kwargs_197755)
        
        
        # Call to assertGreaterEqual(...): (line 812)
        # Processing the call arguments (line 812)
        int_197759 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 32), 'int')
        int_197760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 812, 35), 'int')
        # Processing the call keyword arguments (line 812)
        kwargs_197761 = {}
        # Getting the type of 'self' (line 812)
        self_197757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 812)
        assertGreaterEqual_197758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 8), self_197757, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 812)
        assertGreaterEqual_call_result_197762 = invoke(stypy.reporting.localization.Localization(__file__, 812, 8), assertGreaterEqual_197758, *[int_197759, int_197760], **kwargs_197761)
        
        
        # Call to assertGreaterEqual(...): (line 813)
        # Processing the call arguments (line 813)
        int_197765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 32), 'int')
        int_197766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 35), 'int')
        # Processing the call keyword arguments (line 813)
        kwargs_197767 = {}
        # Getting the type of 'self' (line 813)
        self_197763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 813)
        assertGreaterEqual_197764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 8), self_197763, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 813)
        assertGreaterEqual_call_result_197768 = invoke(stypy.reporting.localization.Localization(__file__, 813, 8), assertGreaterEqual_197764, *[int_197765, int_197766], **kwargs_197767)
        
        
        # Call to assertLess(...): (line 814)
        # Processing the call arguments (line 814)
        int_197771 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 24), 'int')
        int_197772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 27), 'int')
        # Processing the call keyword arguments (line 814)
        kwargs_197773 = {}
        # Getting the type of 'self' (line 814)
        self_197769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 8), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 814)
        assertLess_197770 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 814, 8), self_197769, 'assertLess')
        # Calling assertLess(args, kwargs) (line 814)
        assertLess_call_result_197774 = invoke(stypy.reporting.localization.Localization(__file__, 814, 8), assertLess_197770, *[int_197771, int_197772], **kwargs_197773)
        
        
        # Call to assertLessEqual(...): (line 815)
        # Processing the call arguments (line 815)
        int_197777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 29), 'int')
        int_197778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 815, 32), 'int')
        # Processing the call keyword arguments (line 815)
        kwargs_197779 = {}
        # Getting the type of 'self' (line 815)
        self_197775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 815)
        assertLessEqual_197776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 815, 8), self_197775, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 815)
        assertLessEqual_call_result_197780 = invoke(stypy.reporting.localization.Localization(__file__, 815, 8), assertLessEqual_197776, *[int_197777, int_197778], **kwargs_197779)
        
        
        # Call to assertLessEqual(...): (line 816)
        # Processing the call arguments (line 816)
        int_197783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 29), 'int')
        int_197784 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 32), 'int')
        # Processing the call keyword arguments (line 816)
        kwargs_197785 = {}
        # Getting the type of 'self' (line 816)
        self_197781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 816)
        assertLessEqual_197782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 8), self_197781, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 816)
        assertLessEqual_call_result_197786 = invoke(stypy.reporting.localization.Localization(__file__, 816, 8), assertLessEqual_197782, *[int_197783, int_197784], **kwargs_197785)
        
        
        # Call to assertRaises(...): (line 817)
        # Processing the call arguments (line 817)
        # Getting the type of 'self' (line 817)
        self_197789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 817)
        failureException_197790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 26), self_197789, 'failureException')
        # Getting the type of 'self' (line 817)
        self_197791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 817)
        assertGreater_197792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 49), self_197791, 'assertGreater')
        int_197793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 69), 'int')
        int_197794 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 72), 'int')
        # Processing the call keyword arguments (line 817)
        kwargs_197795 = {}
        # Getting the type of 'self' (line 817)
        self_197787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 817)
        assertRaises_197788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 8), self_197787, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 817)
        assertRaises_call_result_197796 = invoke(stypy.reporting.localization.Localization(__file__, 817, 8), assertRaises_197788, *[failureException_197790, assertGreater_197792, int_197793, int_197794], **kwargs_197795)
        
        
        # Call to assertRaises(...): (line 818)
        # Processing the call arguments (line 818)
        # Getting the type of 'self' (line 818)
        self_197799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 818)
        failureException_197800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 26), self_197799, 'failureException')
        # Getting the type of 'self' (line 818)
        self_197801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 818)
        assertGreater_197802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 49), self_197801, 'assertGreater')
        int_197803 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 69), 'int')
        int_197804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 72), 'int')
        # Processing the call keyword arguments (line 818)
        kwargs_197805 = {}
        # Getting the type of 'self' (line 818)
        self_197797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 818)
        assertRaises_197798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 8), self_197797, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 818)
        assertRaises_call_result_197806 = invoke(stypy.reporting.localization.Localization(__file__, 818, 8), assertRaises_197798, *[failureException_197800, assertGreater_197802, int_197803, int_197804], **kwargs_197805)
        
        
        # Call to assertRaises(...): (line 819)
        # Processing the call arguments (line 819)
        # Getting the type of 'self' (line 819)
        self_197809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 819)
        failureException_197810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 26), self_197809, 'failureException')
        # Getting the type of 'self' (line 819)
        self_197811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 49), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 819)
        assertGreaterEqual_197812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 49), self_197811, 'assertGreaterEqual')
        int_197813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 74), 'int')
        int_197814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 819, 77), 'int')
        # Processing the call keyword arguments (line 819)
        kwargs_197815 = {}
        # Getting the type of 'self' (line 819)
        self_197807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 819, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 819)
        assertRaises_197808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 819, 8), self_197807, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 819)
        assertRaises_call_result_197816 = invoke(stypy.reporting.localization.Localization(__file__, 819, 8), assertRaises_197808, *[failureException_197810, assertGreaterEqual_197812, int_197813, int_197814], **kwargs_197815)
        
        
        # Call to assertRaises(...): (line 820)
        # Processing the call arguments (line 820)
        # Getting the type of 'self' (line 820)
        self_197819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 820)
        failureException_197820 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 26), self_197819, 'failureException')
        # Getting the type of 'self' (line 820)
        self_197821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 820)
        assertLess_197822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 49), self_197821, 'assertLess')
        int_197823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 66), 'int')
        int_197824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 69), 'int')
        # Processing the call keyword arguments (line 820)
        kwargs_197825 = {}
        # Getting the type of 'self' (line 820)
        self_197817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 820)
        assertRaises_197818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 8), self_197817, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 820)
        assertRaises_call_result_197826 = invoke(stypy.reporting.localization.Localization(__file__, 820, 8), assertRaises_197818, *[failureException_197820, assertLess_197822, int_197823, int_197824], **kwargs_197825)
        
        
        # Call to assertRaises(...): (line 821)
        # Processing the call arguments (line 821)
        # Getting the type of 'self' (line 821)
        self_197829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 821)
        failureException_197830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 26), self_197829, 'failureException')
        # Getting the type of 'self' (line 821)
        self_197831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 821)
        assertLess_197832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 49), self_197831, 'assertLess')
        int_197833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 66), 'int')
        int_197834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 69), 'int')
        # Processing the call keyword arguments (line 821)
        kwargs_197835 = {}
        # Getting the type of 'self' (line 821)
        self_197827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 821)
        assertRaises_197828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 8), self_197827, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 821)
        assertRaises_call_result_197836 = invoke(stypy.reporting.localization.Localization(__file__, 821, 8), assertRaises_197828, *[failureException_197830, assertLess_197832, int_197833, int_197834], **kwargs_197835)
        
        
        # Call to assertRaises(...): (line 822)
        # Processing the call arguments (line 822)
        # Getting the type of 'self' (line 822)
        self_197839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 822)
        failureException_197840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 26), self_197839, 'failureException')
        # Getting the type of 'self' (line 822)
        self_197841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 49), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 822)
        assertLessEqual_197842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 49), self_197841, 'assertLessEqual')
        int_197843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 71), 'int')
        int_197844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 822, 74), 'int')
        # Processing the call keyword arguments (line 822)
        kwargs_197845 = {}
        # Getting the type of 'self' (line 822)
        self_197837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 822, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 822)
        assertRaises_197838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 822, 8), self_197837, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 822)
        assertRaises_call_result_197846 = invoke(stypy.reporting.localization.Localization(__file__, 822, 8), assertRaises_197838, *[failureException_197840, assertLessEqual_197842, int_197843, int_197844], **kwargs_197845)
        
        
        # Call to assertGreater(...): (line 825)
        # Processing the call arguments (line 825)
        float_197849 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 27), 'float')
        float_197850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 825, 32), 'float')
        # Processing the call keyword arguments (line 825)
        kwargs_197851 = {}
        # Getting the type of 'self' (line 825)
        self_197847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 825, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 825)
        assertGreater_197848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 825, 8), self_197847, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 825)
        assertGreater_call_result_197852 = invoke(stypy.reporting.localization.Localization(__file__, 825, 8), assertGreater_197848, *[float_197849, float_197850], **kwargs_197851)
        
        
        # Call to assertGreaterEqual(...): (line 826)
        # Processing the call arguments (line 826)
        float_197855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 32), 'float')
        float_197856 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 37), 'float')
        # Processing the call keyword arguments (line 826)
        kwargs_197857 = {}
        # Getting the type of 'self' (line 826)
        self_197853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 826)
        assertGreaterEqual_197854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 8), self_197853, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 826)
        assertGreaterEqual_call_result_197858 = invoke(stypy.reporting.localization.Localization(__file__, 826, 8), assertGreaterEqual_197854, *[float_197855, float_197856], **kwargs_197857)
        
        
        # Call to assertGreaterEqual(...): (line 827)
        # Processing the call arguments (line 827)
        float_197861 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 32), 'float')
        float_197862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 37), 'float')
        # Processing the call keyword arguments (line 827)
        kwargs_197863 = {}
        # Getting the type of 'self' (line 827)
        self_197859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 827)
        assertGreaterEqual_197860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 827, 8), self_197859, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 827)
        assertGreaterEqual_call_result_197864 = invoke(stypy.reporting.localization.Localization(__file__, 827, 8), assertGreaterEqual_197860, *[float_197861, float_197862], **kwargs_197863)
        
        
        # Call to assertLess(...): (line 828)
        # Processing the call arguments (line 828)
        float_197867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 24), 'float')
        float_197868 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 828, 29), 'float')
        # Processing the call keyword arguments (line 828)
        kwargs_197869 = {}
        # Getting the type of 'self' (line 828)
        self_197865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 828, 8), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 828)
        assertLess_197866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 828, 8), self_197865, 'assertLess')
        # Calling assertLess(args, kwargs) (line 828)
        assertLess_call_result_197870 = invoke(stypy.reporting.localization.Localization(__file__, 828, 8), assertLess_197866, *[float_197867, float_197868], **kwargs_197869)
        
        
        # Call to assertLessEqual(...): (line 829)
        # Processing the call arguments (line 829)
        float_197873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 29), 'float')
        float_197874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 34), 'float')
        # Processing the call keyword arguments (line 829)
        kwargs_197875 = {}
        # Getting the type of 'self' (line 829)
        self_197871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 829)
        assertLessEqual_197872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 8), self_197871, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 829)
        assertLessEqual_call_result_197876 = invoke(stypy.reporting.localization.Localization(__file__, 829, 8), assertLessEqual_197872, *[float_197873, float_197874], **kwargs_197875)
        
        
        # Call to assertLessEqual(...): (line 830)
        # Processing the call arguments (line 830)
        float_197879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 29), 'float')
        float_197880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 34), 'float')
        # Processing the call keyword arguments (line 830)
        kwargs_197881 = {}
        # Getting the type of 'self' (line 830)
        self_197877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 830)
        assertLessEqual_197878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 8), self_197877, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 830)
        assertLessEqual_call_result_197882 = invoke(stypy.reporting.localization.Localization(__file__, 830, 8), assertLessEqual_197878, *[float_197879, float_197880], **kwargs_197881)
        
        
        # Call to assertRaises(...): (line 831)
        # Processing the call arguments (line 831)
        # Getting the type of 'self' (line 831)
        self_197885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 831)
        failureException_197886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 26), self_197885, 'failureException')
        # Getting the type of 'self' (line 831)
        self_197887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 831)
        assertGreater_197888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 49), self_197887, 'assertGreater')
        float_197889 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 69), 'float')
        float_197890 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 831, 74), 'float')
        # Processing the call keyword arguments (line 831)
        kwargs_197891 = {}
        # Getting the type of 'self' (line 831)
        self_197883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 831)
        assertRaises_197884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 8), self_197883, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 831)
        assertRaises_call_result_197892 = invoke(stypy.reporting.localization.Localization(__file__, 831, 8), assertRaises_197884, *[failureException_197886, assertGreater_197888, float_197889, float_197890], **kwargs_197891)
        
        
        # Call to assertRaises(...): (line 832)
        # Processing the call arguments (line 832)
        # Getting the type of 'self' (line 832)
        self_197895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 832)
        failureException_197896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 26), self_197895, 'failureException')
        # Getting the type of 'self' (line 832)
        self_197897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 832)
        assertGreater_197898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 49), self_197897, 'assertGreater')
        float_197899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 69), 'float')
        float_197900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 74), 'float')
        # Processing the call keyword arguments (line 832)
        kwargs_197901 = {}
        # Getting the type of 'self' (line 832)
        self_197893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 832)
        assertRaises_197894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 8), self_197893, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 832)
        assertRaises_call_result_197902 = invoke(stypy.reporting.localization.Localization(__file__, 832, 8), assertRaises_197894, *[failureException_197896, assertGreater_197898, float_197899, float_197900], **kwargs_197901)
        
        
        # Call to assertRaises(...): (line 833)
        # Processing the call arguments (line 833)
        # Getting the type of 'self' (line 833)
        self_197905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 833)
        failureException_197906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 26), self_197905, 'failureException')
        # Getting the type of 'self' (line 833)
        self_197907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 49), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 833)
        assertGreaterEqual_197908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 49), self_197907, 'assertGreaterEqual')
        float_197909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 74), 'float')
        float_197910 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 79), 'float')
        # Processing the call keyword arguments (line 833)
        kwargs_197911 = {}
        # Getting the type of 'self' (line 833)
        self_197903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 833)
        assertRaises_197904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 8), self_197903, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 833)
        assertRaises_call_result_197912 = invoke(stypy.reporting.localization.Localization(__file__, 833, 8), assertRaises_197904, *[failureException_197906, assertGreaterEqual_197908, float_197909, float_197910], **kwargs_197911)
        
        
        # Call to assertRaises(...): (line 834)
        # Processing the call arguments (line 834)
        # Getting the type of 'self' (line 834)
        self_197915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 834)
        failureException_197916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 26), self_197915, 'failureException')
        # Getting the type of 'self' (line 834)
        self_197917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 834)
        assertLess_197918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 49), self_197917, 'assertLess')
        float_197919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 66), 'float')
        float_197920 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 71), 'float')
        # Processing the call keyword arguments (line 834)
        kwargs_197921 = {}
        # Getting the type of 'self' (line 834)
        self_197913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 834)
        assertRaises_197914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 8), self_197913, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 834)
        assertRaises_call_result_197922 = invoke(stypy.reporting.localization.Localization(__file__, 834, 8), assertRaises_197914, *[failureException_197916, assertLess_197918, float_197919, float_197920], **kwargs_197921)
        
        
        # Call to assertRaises(...): (line 835)
        # Processing the call arguments (line 835)
        # Getting the type of 'self' (line 835)
        self_197925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 835)
        failureException_197926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 26), self_197925, 'failureException')
        # Getting the type of 'self' (line 835)
        self_197927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 835)
        assertLess_197928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 49), self_197927, 'assertLess')
        float_197929 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 66), 'float')
        float_197930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 835, 71), 'float')
        # Processing the call keyword arguments (line 835)
        kwargs_197931 = {}
        # Getting the type of 'self' (line 835)
        self_197923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 835)
        assertRaises_197924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 8), self_197923, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 835)
        assertRaises_call_result_197932 = invoke(stypy.reporting.localization.Localization(__file__, 835, 8), assertRaises_197924, *[failureException_197926, assertLess_197928, float_197929, float_197930], **kwargs_197931)
        
        
        # Call to assertRaises(...): (line 836)
        # Processing the call arguments (line 836)
        # Getting the type of 'self' (line 836)
        self_197935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 836)
        failureException_197936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 26), self_197935, 'failureException')
        # Getting the type of 'self' (line 836)
        self_197937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 49), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 836)
        assertLessEqual_197938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 49), self_197937, 'assertLessEqual')
        float_197939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 71), 'float')
        float_197940 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 76), 'float')
        # Processing the call keyword arguments (line 836)
        kwargs_197941 = {}
        # Getting the type of 'self' (line 836)
        self_197933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 836)
        assertRaises_197934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 8), self_197933, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 836)
        assertRaises_call_result_197942 = invoke(stypy.reporting.localization.Localization(__file__, 836, 8), assertRaises_197934, *[failureException_197936, assertLessEqual_197938, float_197939, float_197940], **kwargs_197941)
        
        
        # Call to assertGreater(...): (line 839)
        # Processing the call arguments (line 839)
        str_197945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 27), 'str', 'bug')
        str_197946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 839, 34), 'str', 'ant')
        # Processing the call keyword arguments (line 839)
        kwargs_197947 = {}
        # Getting the type of 'self' (line 839)
        self_197943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 839)
        assertGreater_197944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 8), self_197943, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 839)
        assertGreater_call_result_197948 = invoke(stypy.reporting.localization.Localization(__file__, 839, 8), assertGreater_197944, *[str_197945, str_197946], **kwargs_197947)
        
        
        # Call to assertGreaterEqual(...): (line 840)
        # Processing the call arguments (line 840)
        str_197951 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 32), 'str', 'bug')
        str_197952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 840, 39), 'str', 'ant')
        # Processing the call keyword arguments (line 840)
        kwargs_197953 = {}
        # Getting the type of 'self' (line 840)
        self_197949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 840)
        assertGreaterEqual_197950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 840, 8), self_197949, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 840)
        assertGreaterEqual_call_result_197954 = invoke(stypy.reporting.localization.Localization(__file__, 840, 8), assertGreaterEqual_197950, *[str_197951, str_197952], **kwargs_197953)
        
        
        # Call to assertGreaterEqual(...): (line 841)
        # Processing the call arguments (line 841)
        str_197957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 32), 'str', 'ant')
        str_197958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 39), 'str', 'ant')
        # Processing the call keyword arguments (line 841)
        kwargs_197959 = {}
        # Getting the type of 'self' (line 841)
        self_197955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 841)
        assertGreaterEqual_197956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 8), self_197955, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 841)
        assertGreaterEqual_call_result_197960 = invoke(stypy.reporting.localization.Localization(__file__, 841, 8), assertGreaterEqual_197956, *[str_197957, str_197958], **kwargs_197959)
        
        
        # Call to assertLess(...): (line 842)
        # Processing the call arguments (line 842)
        str_197963 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 24), 'str', 'ant')
        str_197964 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 31), 'str', 'bug')
        # Processing the call keyword arguments (line 842)
        kwargs_197965 = {}
        # Getting the type of 'self' (line 842)
        self_197961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 8), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 842)
        assertLess_197962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 8), self_197961, 'assertLess')
        # Calling assertLess(args, kwargs) (line 842)
        assertLess_call_result_197966 = invoke(stypy.reporting.localization.Localization(__file__, 842, 8), assertLess_197962, *[str_197963, str_197964], **kwargs_197965)
        
        
        # Call to assertLessEqual(...): (line 843)
        # Processing the call arguments (line 843)
        str_197969 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 29), 'str', 'ant')
        str_197970 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 36), 'str', 'bug')
        # Processing the call keyword arguments (line 843)
        kwargs_197971 = {}
        # Getting the type of 'self' (line 843)
        self_197967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 843)
        assertLessEqual_197968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 8), self_197967, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 843)
        assertLessEqual_call_result_197972 = invoke(stypy.reporting.localization.Localization(__file__, 843, 8), assertLessEqual_197968, *[str_197969, str_197970], **kwargs_197971)
        
        
        # Call to assertLessEqual(...): (line 844)
        # Processing the call arguments (line 844)
        str_197975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 29), 'str', 'ant')
        str_197976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 36), 'str', 'ant')
        # Processing the call keyword arguments (line 844)
        kwargs_197977 = {}
        # Getting the type of 'self' (line 844)
        self_197973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 844)
        assertLessEqual_197974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 844, 8), self_197973, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 844)
        assertLessEqual_call_result_197978 = invoke(stypy.reporting.localization.Localization(__file__, 844, 8), assertLessEqual_197974, *[str_197975, str_197976], **kwargs_197977)
        
        
        # Call to assertRaises(...): (line 845)
        # Processing the call arguments (line 845)
        # Getting the type of 'self' (line 845)
        self_197981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 845)
        failureException_197982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 26), self_197981, 'failureException')
        # Getting the type of 'self' (line 845)
        self_197983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 845)
        assertGreater_197984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 49), self_197983, 'assertGreater')
        str_197985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 69), 'str', 'ant')
        str_197986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 845, 76), 'str', 'bug')
        # Processing the call keyword arguments (line 845)
        kwargs_197987 = {}
        # Getting the type of 'self' (line 845)
        self_197979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 845)
        assertRaises_197980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 8), self_197979, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 845)
        assertRaises_call_result_197988 = invoke(stypy.reporting.localization.Localization(__file__, 845, 8), assertRaises_197980, *[failureException_197982, assertGreater_197984, str_197985, str_197986], **kwargs_197987)
        
        
        # Call to assertRaises(...): (line 846)
        # Processing the call arguments (line 846)
        # Getting the type of 'self' (line 846)
        self_197991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 846)
        failureException_197992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 26), self_197991, 'failureException')
        # Getting the type of 'self' (line 846)
        self_197993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 846)
        assertGreater_197994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 49), self_197993, 'assertGreater')
        str_197995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 69), 'str', 'ant')
        str_197996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 76), 'str', 'ant')
        # Processing the call keyword arguments (line 846)
        kwargs_197997 = {}
        # Getting the type of 'self' (line 846)
        self_197989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 846)
        assertRaises_197990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 8), self_197989, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 846)
        assertRaises_call_result_197998 = invoke(stypy.reporting.localization.Localization(__file__, 846, 8), assertRaises_197990, *[failureException_197992, assertGreater_197994, str_197995, str_197996], **kwargs_197997)
        
        
        # Call to assertRaises(...): (line 847)
        # Processing the call arguments (line 847)
        # Getting the type of 'self' (line 847)
        self_198001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 847)
        failureException_198002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 847, 26), self_198001, 'failureException')
        # Getting the type of 'self' (line 847)
        self_198003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 49), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 847)
        assertGreaterEqual_198004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 847, 49), self_198003, 'assertGreaterEqual')
        str_198005 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 847, 74), 'str', 'ant')
        str_198006 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 847, 81), 'str', 'bug')
        # Processing the call keyword arguments (line 847)
        kwargs_198007 = {}
        # Getting the type of 'self' (line 847)
        self_197999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 847)
        assertRaises_198000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 847, 8), self_197999, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 847)
        assertRaises_call_result_198008 = invoke(stypy.reporting.localization.Localization(__file__, 847, 8), assertRaises_198000, *[failureException_198002, assertGreaterEqual_198004, str_198005, str_198006], **kwargs_198007)
        
        
        # Call to assertRaises(...): (line 848)
        # Processing the call arguments (line 848)
        # Getting the type of 'self' (line 848)
        self_198011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 848)
        failureException_198012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 26), self_198011, 'failureException')
        # Getting the type of 'self' (line 848)
        self_198013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 848)
        assertLess_198014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 49), self_198013, 'assertLess')
        str_198015 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 66), 'str', 'bug')
        str_198016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 848, 73), 'str', 'ant')
        # Processing the call keyword arguments (line 848)
        kwargs_198017 = {}
        # Getting the type of 'self' (line 848)
        self_198009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 848)
        assertRaises_198010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 8), self_198009, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 848)
        assertRaises_call_result_198018 = invoke(stypy.reporting.localization.Localization(__file__, 848, 8), assertRaises_198010, *[failureException_198012, assertLess_198014, str_198015, str_198016], **kwargs_198017)
        
        
        # Call to assertRaises(...): (line 849)
        # Processing the call arguments (line 849)
        # Getting the type of 'self' (line 849)
        self_198021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 849)
        failureException_198022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 26), self_198021, 'failureException')
        # Getting the type of 'self' (line 849)
        self_198023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 849)
        assertLess_198024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 49), self_198023, 'assertLess')
        str_198025 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 66), 'str', 'ant')
        str_198026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 849, 73), 'str', 'ant')
        # Processing the call keyword arguments (line 849)
        kwargs_198027 = {}
        # Getting the type of 'self' (line 849)
        self_198019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 849)
        assertRaises_198020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 8), self_198019, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 849)
        assertRaises_call_result_198028 = invoke(stypy.reporting.localization.Localization(__file__, 849, 8), assertRaises_198020, *[failureException_198022, assertLess_198024, str_198025, str_198026], **kwargs_198027)
        
        
        # Call to assertRaises(...): (line 850)
        # Processing the call arguments (line 850)
        # Getting the type of 'self' (line 850)
        self_198031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 850)
        failureException_198032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 26), self_198031, 'failureException')
        # Getting the type of 'self' (line 850)
        self_198033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 49), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 850)
        assertLessEqual_198034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 49), self_198033, 'assertLessEqual')
        str_198035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 71), 'str', 'bug')
        str_198036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 850, 78), 'str', 'ant')
        # Processing the call keyword arguments (line 850)
        kwargs_198037 = {}
        # Getting the type of 'self' (line 850)
        self_198029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 850)
        assertRaises_198030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 850, 8), self_198029, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 850)
        assertRaises_call_result_198038 = invoke(stypy.reporting.localization.Localization(__file__, 850, 8), assertRaises_198030, *[failureException_198032, assertLessEqual_198034, str_198035, str_198036], **kwargs_198037)
        
        
        # Call to assertGreater(...): (line 853)
        # Processing the call arguments (line 853)
        unicode_198041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 27), 'unicode', u'bug')
        unicode_198042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 853, 35), 'unicode', u'ant')
        # Processing the call keyword arguments (line 853)
        kwargs_198043 = {}
        # Getting the type of 'self' (line 853)
        self_198039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 853, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 853)
        assertGreater_198040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 853, 8), self_198039, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 853)
        assertGreater_call_result_198044 = invoke(stypy.reporting.localization.Localization(__file__, 853, 8), assertGreater_198040, *[unicode_198041, unicode_198042], **kwargs_198043)
        
        
        # Call to assertGreaterEqual(...): (line 854)
        # Processing the call arguments (line 854)
        unicode_198047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 32), 'unicode', u'bug')
        unicode_198048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 40), 'unicode', u'ant')
        # Processing the call keyword arguments (line 854)
        kwargs_198049 = {}
        # Getting the type of 'self' (line 854)
        self_198045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 854)
        assertGreaterEqual_198046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 8), self_198045, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 854)
        assertGreaterEqual_call_result_198050 = invoke(stypy.reporting.localization.Localization(__file__, 854, 8), assertGreaterEqual_198046, *[unicode_198047, unicode_198048], **kwargs_198049)
        
        
        # Call to assertGreaterEqual(...): (line 855)
        # Processing the call arguments (line 855)
        unicode_198053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 32), 'unicode', u'ant')
        unicode_198054 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 40), 'unicode', u'ant')
        # Processing the call keyword arguments (line 855)
        kwargs_198055 = {}
        # Getting the type of 'self' (line 855)
        self_198051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 855)
        assertGreaterEqual_198052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 8), self_198051, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 855)
        assertGreaterEqual_call_result_198056 = invoke(stypy.reporting.localization.Localization(__file__, 855, 8), assertGreaterEqual_198052, *[unicode_198053, unicode_198054], **kwargs_198055)
        
        
        # Call to assertLess(...): (line 856)
        # Processing the call arguments (line 856)
        unicode_198059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 24), 'unicode', u'ant')
        unicode_198060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 32), 'unicode', u'bug')
        # Processing the call keyword arguments (line 856)
        kwargs_198061 = {}
        # Getting the type of 'self' (line 856)
        self_198057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 8), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 856)
        assertLess_198058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 8), self_198057, 'assertLess')
        # Calling assertLess(args, kwargs) (line 856)
        assertLess_call_result_198062 = invoke(stypy.reporting.localization.Localization(__file__, 856, 8), assertLess_198058, *[unicode_198059, unicode_198060], **kwargs_198061)
        
        
        # Call to assertLessEqual(...): (line 857)
        # Processing the call arguments (line 857)
        unicode_198065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 29), 'unicode', u'ant')
        unicode_198066 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 37), 'unicode', u'bug')
        # Processing the call keyword arguments (line 857)
        kwargs_198067 = {}
        # Getting the type of 'self' (line 857)
        self_198063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 857)
        assertLessEqual_198064 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 8), self_198063, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 857)
        assertLessEqual_call_result_198068 = invoke(stypy.reporting.localization.Localization(__file__, 857, 8), assertLessEqual_198064, *[unicode_198065, unicode_198066], **kwargs_198067)
        
        
        # Call to assertLessEqual(...): (line 858)
        # Processing the call arguments (line 858)
        unicode_198071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 29), 'unicode', u'ant')
        unicode_198072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 858, 37), 'unicode', u'ant')
        # Processing the call keyword arguments (line 858)
        kwargs_198073 = {}
        # Getting the type of 'self' (line 858)
        self_198069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 858)
        assertLessEqual_198070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 8), self_198069, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 858)
        assertLessEqual_call_result_198074 = invoke(stypy.reporting.localization.Localization(__file__, 858, 8), assertLessEqual_198070, *[unicode_198071, unicode_198072], **kwargs_198073)
        
        
        # Call to assertRaises(...): (line 859)
        # Processing the call arguments (line 859)
        # Getting the type of 'self' (line 859)
        self_198077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 859)
        failureException_198078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 26), self_198077, 'failureException')
        # Getting the type of 'self' (line 859)
        self_198079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 859)
        assertGreater_198080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 49), self_198079, 'assertGreater')
        unicode_198081 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 69), 'unicode', u'ant')
        unicode_198082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 77), 'unicode', u'bug')
        # Processing the call keyword arguments (line 859)
        kwargs_198083 = {}
        # Getting the type of 'self' (line 859)
        self_198075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 859)
        assertRaises_198076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 8), self_198075, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 859)
        assertRaises_call_result_198084 = invoke(stypy.reporting.localization.Localization(__file__, 859, 8), assertRaises_198076, *[failureException_198078, assertGreater_198080, unicode_198081, unicode_198082], **kwargs_198083)
        
        
        # Call to assertRaises(...): (line 860)
        # Processing the call arguments (line 860)
        # Getting the type of 'self' (line 860)
        self_198087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 860)
        failureException_198088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 26), self_198087, 'failureException')
        # Getting the type of 'self' (line 860)
        self_198089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 860)
        assertGreater_198090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 49), self_198089, 'assertGreater')
        unicode_198091 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 69), 'unicode', u'ant')
        unicode_198092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 860, 77), 'unicode', u'ant')
        # Processing the call keyword arguments (line 860)
        kwargs_198093 = {}
        # Getting the type of 'self' (line 860)
        self_198085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 860)
        assertRaises_198086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 8), self_198085, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 860)
        assertRaises_call_result_198094 = invoke(stypy.reporting.localization.Localization(__file__, 860, 8), assertRaises_198086, *[failureException_198088, assertGreater_198090, unicode_198091, unicode_198092], **kwargs_198093)
        
        
        # Call to assertRaises(...): (line 861)
        # Processing the call arguments (line 861)
        # Getting the type of 'self' (line 861)
        self_198097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 861)
        failureException_198098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 26), self_198097, 'failureException')
        # Getting the type of 'self' (line 861)
        self_198099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 49), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 861)
        assertGreaterEqual_198100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 49), self_198099, 'assertGreaterEqual')
        unicode_198101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 861, 74), 'unicode', u'ant')
        unicode_198102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 26), 'unicode', u'bug')
        # Processing the call keyword arguments (line 861)
        kwargs_198103 = {}
        # Getting the type of 'self' (line 861)
        self_198095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 861)
        assertRaises_198096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 861, 8), self_198095, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 861)
        assertRaises_call_result_198104 = invoke(stypy.reporting.localization.Localization(__file__, 861, 8), assertRaises_198096, *[failureException_198098, assertGreaterEqual_198100, unicode_198101, unicode_198102], **kwargs_198103)
        
        
        # Call to assertRaises(...): (line 863)
        # Processing the call arguments (line 863)
        # Getting the type of 'self' (line 863)
        self_198107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 863)
        failureException_198108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 26), self_198107, 'failureException')
        # Getting the type of 'self' (line 863)
        self_198109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 863)
        assertLess_198110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 49), self_198109, 'assertLess')
        unicode_198111 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 66), 'unicode', u'bug')
        unicode_198112 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 863, 74), 'unicode', u'ant')
        # Processing the call keyword arguments (line 863)
        kwargs_198113 = {}
        # Getting the type of 'self' (line 863)
        self_198105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 863)
        assertRaises_198106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 863, 8), self_198105, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 863)
        assertRaises_call_result_198114 = invoke(stypy.reporting.localization.Localization(__file__, 863, 8), assertRaises_198106, *[failureException_198108, assertLess_198110, unicode_198111, unicode_198112], **kwargs_198113)
        
        
        # Call to assertRaises(...): (line 864)
        # Processing the call arguments (line 864)
        # Getting the type of 'self' (line 864)
        self_198117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 864)
        failureException_198118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 26), self_198117, 'failureException')
        # Getting the type of 'self' (line 864)
        self_198119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 864)
        assertLess_198120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 49), self_198119, 'assertLess')
        unicode_198121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 66), 'unicode', u'ant')
        unicode_198122 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 864, 74), 'unicode', u'ant')
        # Processing the call keyword arguments (line 864)
        kwargs_198123 = {}
        # Getting the type of 'self' (line 864)
        self_198115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 864)
        assertRaises_198116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 8), self_198115, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 864)
        assertRaises_call_result_198124 = invoke(stypy.reporting.localization.Localization(__file__, 864, 8), assertRaises_198116, *[failureException_198118, assertLess_198120, unicode_198121, unicode_198122], **kwargs_198123)
        
        
        # Call to assertRaises(...): (line 865)
        # Processing the call arguments (line 865)
        # Getting the type of 'self' (line 865)
        self_198127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 865)
        failureException_198128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 26), self_198127, 'failureException')
        # Getting the type of 'self' (line 865)
        self_198129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 49), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 865)
        assertLessEqual_198130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 49), self_198129, 'assertLessEqual')
        unicode_198131 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 71), 'unicode', u'bug')
        unicode_198132 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 865, 79), 'unicode', u'ant')
        # Processing the call keyword arguments (line 865)
        kwargs_198133 = {}
        # Getting the type of 'self' (line 865)
        self_198125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 865)
        assertRaises_198126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 8), self_198125, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 865)
        assertRaises_call_result_198134 = invoke(stypy.reporting.localization.Localization(__file__, 865, 8), assertRaises_198126, *[failureException_198128, assertLessEqual_198130, unicode_198131, unicode_198132], **kwargs_198133)
        
        
        # Call to assertGreater(...): (line 868)
        # Processing the call arguments (line 868)
        str_198137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 27), 'str', 'bug')
        unicode_198138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 868, 34), 'unicode', u'ant')
        # Processing the call keyword arguments (line 868)
        kwargs_198139 = {}
        # Getting the type of 'self' (line 868)
        self_198135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 868)
        assertGreater_198136 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 8), self_198135, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 868)
        assertGreater_call_result_198140 = invoke(stypy.reporting.localization.Localization(__file__, 868, 8), assertGreater_198136, *[str_198137, unicode_198138], **kwargs_198139)
        
        
        # Call to assertGreater(...): (line 869)
        # Processing the call arguments (line 869)
        unicode_198143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 27), 'unicode', u'bug')
        str_198144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 35), 'str', 'ant')
        # Processing the call keyword arguments (line 869)
        kwargs_198145 = {}
        # Getting the type of 'self' (line 869)
        self_198141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 8), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 869)
        assertGreater_198142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 8), self_198141, 'assertGreater')
        # Calling assertGreater(args, kwargs) (line 869)
        assertGreater_call_result_198146 = invoke(stypy.reporting.localization.Localization(__file__, 869, 8), assertGreater_198142, *[unicode_198143, str_198144], **kwargs_198145)
        
        
        # Call to assertGreaterEqual(...): (line 870)
        # Processing the call arguments (line 870)
        str_198149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 32), 'str', 'bug')
        unicode_198150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 39), 'unicode', u'ant')
        # Processing the call keyword arguments (line 870)
        kwargs_198151 = {}
        # Getting the type of 'self' (line 870)
        self_198147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 870)
        assertGreaterEqual_198148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 8), self_198147, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 870)
        assertGreaterEqual_call_result_198152 = invoke(stypy.reporting.localization.Localization(__file__, 870, 8), assertGreaterEqual_198148, *[str_198149, unicode_198150], **kwargs_198151)
        
        
        # Call to assertGreaterEqual(...): (line 871)
        # Processing the call arguments (line 871)
        unicode_198155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 32), 'unicode', u'bug')
        str_198156 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 871, 40), 'str', 'ant')
        # Processing the call keyword arguments (line 871)
        kwargs_198157 = {}
        # Getting the type of 'self' (line 871)
        self_198153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 871)
        assertGreaterEqual_198154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 8), self_198153, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 871)
        assertGreaterEqual_call_result_198158 = invoke(stypy.reporting.localization.Localization(__file__, 871, 8), assertGreaterEqual_198154, *[unicode_198155, str_198156], **kwargs_198157)
        
        
        # Call to assertGreaterEqual(...): (line 872)
        # Processing the call arguments (line 872)
        str_198161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 32), 'str', 'ant')
        unicode_198162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 872, 39), 'unicode', u'ant')
        # Processing the call keyword arguments (line 872)
        kwargs_198163 = {}
        # Getting the type of 'self' (line 872)
        self_198159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 872)
        assertGreaterEqual_198160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 8), self_198159, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 872)
        assertGreaterEqual_call_result_198164 = invoke(stypy.reporting.localization.Localization(__file__, 872, 8), assertGreaterEqual_198160, *[str_198161, unicode_198162], **kwargs_198163)
        
        
        # Call to assertGreaterEqual(...): (line 873)
        # Processing the call arguments (line 873)
        unicode_198167 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 32), 'unicode', u'ant')
        str_198168 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 40), 'str', 'ant')
        # Processing the call keyword arguments (line 873)
        kwargs_198169 = {}
        # Getting the type of 'self' (line 873)
        self_198165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 873)
        assertGreaterEqual_198166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 8), self_198165, 'assertGreaterEqual')
        # Calling assertGreaterEqual(args, kwargs) (line 873)
        assertGreaterEqual_call_result_198170 = invoke(stypy.reporting.localization.Localization(__file__, 873, 8), assertGreaterEqual_198166, *[unicode_198167, str_198168], **kwargs_198169)
        
        
        # Call to assertLess(...): (line 874)
        # Processing the call arguments (line 874)
        str_198173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 24), 'str', 'ant')
        unicode_198174 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 874, 31), 'unicode', u'bug')
        # Processing the call keyword arguments (line 874)
        kwargs_198175 = {}
        # Getting the type of 'self' (line 874)
        self_198171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 874)
        assertLess_198172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 8), self_198171, 'assertLess')
        # Calling assertLess(args, kwargs) (line 874)
        assertLess_call_result_198176 = invoke(stypy.reporting.localization.Localization(__file__, 874, 8), assertLess_198172, *[str_198173, unicode_198174], **kwargs_198175)
        
        
        # Call to assertLess(...): (line 875)
        # Processing the call arguments (line 875)
        unicode_198179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 24), 'unicode', u'ant')
        str_198180 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 875, 32), 'str', 'bug')
        # Processing the call keyword arguments (line 875)
        kwargs_198181 = {}
        # Getting the type of 'self' (line 875)
        self_198177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 8), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 875)
        assertLess_198178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 8), self_198177, 'assertLess')
        # Calling assertLess(args, kwargs) (line 875)
        assertLess_call_result_198182 = invoke(stypy.reporting.localization.Localization(__file__, 875, 8), assertLess_198178, *[unicode_198179, str_198180], **kwargs_198181)
        
        
        # Call to assertLessEqual(...): (line 876)
        # Processing the call arguments (line 876)
        str_198185 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 29), 'str', 'ant')
        unicode_198186 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 36), 'unicode', u'bug')
        # Processing the call keyword arguments (line 876)
        kwargs_198187 = {}
        # Getting the type of 'self' (line 876)
        self_198183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 876)
        assertLessEqual_198184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 876, 8), self_198183, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 876)
        assertLessEqual_call_result_198188 = invoke(stypy.reporting.localization.Localization(__file__, 876, 8), assertLessEqual_198184, *[str_198185, unicode_198186], **kwargs_198187)
        
        
        # Call to assertLessEqual(...): (line 877)
        # Processing the call arguments (line 877)
        unicode_198191 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 29), 'unicode', u'ant')
        str_198192 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 37), 'str', 'bug')
        # Processing the call keyword arguments (line 877)
        kwargs_198193 = {}
        # Getting the type of 'self' (line 877)
        self_198189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 877)
        assertLessEqual_198190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 8), self_198189, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 877)
        assertLessEqual_call_result_198194 = invoke(stypy.reporting.localization.Localization(__file__, 877, 8), assertLessEqual_198190, *[unicode_198191, str_198192], **kwargs_198193)
        
        
        # Call to assertLessEqual(...): (line 878)
        # Processing the call arguments (line 878)
        str_198197 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 29), 'str', 'ant')
        unicode_198198 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 878, 36), 'unicode', u'ant')
        # Processing the call keyword arguments (line 878)
        kwargs_198199 = {}
        # Getting the type of 'self' (line 878)
        self_198195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 878)
        assertLessEqual_198196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 878, 8), self_198195, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 878)
        assertLessEqual_call_result_198200 = invoke(stypy.reporting.localization.Localization(__file__, 878, 8), assertLessEqual_198196, *[str_198197, unicode_198198], **kwargs_198199)
        
        
        # Call to assertLessEqual(...): (line 879)
        # Processing the call arguments (line 879)
        unicode_198203 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 29), 'unicode', u'ant')
        str_198204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 879, 37), 'str', 'ant')
        # Processing the call keyword arguments (line 879)
        kwargs_198205 = {}
        # Getting the type of 'self' (line 879)
        self_198201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 8), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 879)
        assertLessEqual_198202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 8), self_198201, 'assertLessEqual')
        # Calling assertLessEqual(args, kwargs) (line 879)
        assertLessEqual_call_result_198206 = invoke(stypy.reporting.localization.Localization(__file__, 879, 8), assertLessEqual_198202, *[unicode_198203, str_198204], **kwargs_198205)
        
        
        # Call to assertRaises(...): (line 880)
        # Processing the call arguments (line 880)
        # Getting the type of 'self' (line 880)
        self_198209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 880)
        failureException_198210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 26), self_198209, 'failureException')
        # Getting the type of 'self' (line 880)
        self_198211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 880)
        assertGreater_198212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 49), self_198211, 'assertGreater')
        str_198213 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 880, 69), 'str', 'ant')
        unicode_198214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 880, 76), 'unicode', u'bug')
        # Processing the call keyword arguments (line 880)
        kwargs_198215 = {}
        # Getting the type of 'self' (line 880)
        self_198207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 880)
        assertRaises_198208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 8), self_198207, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 880)
        assertRaises_call_result_198216 = invoke(stypy.reporting.localization.Localization(__file__, 880, 8), assertRaises_198208, *[failureException_198210, assertGreater_198212, str_198213, unicode_198214], **kwargs_198215)
        
        
        # Call to assertRaises(...): (line 881)
        # Processing the call arguments (line 881)
        # Getting the type of 'self' (line 881)
        self_198219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 881)
        failureException_198220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 26), self_198219, 'failureException')
        # Getting the type of 'self' (line 881)
        self_198221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 881)
        assertGreater_198222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 49), self_198221, 'assertGreater')
        unicode_198223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 69), 'unicode', u'ant')
        str_198224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 881, 77), 'str', 'bug')
        # Processing the call keyword arguments (line 881)
        kwargs_198225 = {}
        # Getting the type of 'self' (line 881)
        self_198217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 881)
        assertRaises_198218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 8), self_198217, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 881)
        assertRaises_call_result_198226 = invoke(stypy.reporting.localization.Localization(__file__, 881, 8), assertRaises_198218, *[failureException_198220, assertGreater_198222, unicode_198223, str_198224], **kwargs_198225)
        
        
        # Call to assertRaises(...): (line 882)
        # Processing the call arguments (line 882)
        # Getting the type of 'self' (line 882)
        self_198229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 882)
        failureException_198230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 26), self_198229, 'failureException')
        # Getting the type of 'self' (line 882)
        self_198231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 882)
        assertGreater_198232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 49), self_198231, 'assertGreater')
        str_198233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 69), 'str', 'ant')
        unicode_198234 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 76), 'unicode', u'ant')
        # Processing the call keyword arguments (line 882)
        kwargs_198235 = {}
        # Getting the type of 'self' (line 882)
        self_198227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 882)
        assertRaises_198228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 8), self_198227, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 882)
        assertRaises_call_result_198236 = invoke(stypy.reporting.localization.Localization(__file__, 882, 8), assertRaises_198228, *[failureException_198230, assertGreater_198232, str_198233, unicode_198234], **kwargs_198235)
        
        
        # Call to assertRaises(...): (line 883)
        # Processing the call arguments (line 883)
        # Getting the type of 'self' (line 883)
        self_198239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 883)
        failureException_198240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 26), self_198239, 'failureException')
        # Getting the type of 'self' (line 883)
        self_198241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 49), 'self', False)
        # Obtaining the member 'assertGreater' of a type (line 883)
        assertGreater_198242 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 49), self_198241, 'assertGreater')
        unicode_198243 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 69), 'unicode', u'ant')
        str_198244 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 883, 77), 'str', 'ant')
        # Processing the call keyword arguments (line 883)
        kwargs_198245 = {}
        # Getting the type of 'self' (line 883)
        self_198237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 883)
        assertRaises_198238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 8), self_198237, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 883)
        assertRaises_call_result_198246 = invoke(stypy.reporting.localization.Localization(__file__, 883, 8), assertRaises_198238, *[failureException_198240, assertGreater_198242, unicode_198243, str_198244], **kwargs_198245)
        
        
        # Call to assertRaises(...): (line 884)
        # Processing the call arguments (line 884)
        # Getting the type of 'self' (line 884)
        self_198249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 884)
        failureException_198250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 26), self_198249, 'failureException')
        # Getting the type of 'self' (line 884)
        self_198251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 49), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 884)
        assertGreaterEqual_198252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 49), self_198251, 'assertGreaterEqual')
        str_198253 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 74), 'str', 'ant')
        unicode_198254 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 885, 26), 'unicode', u'bug')
        # Processing the call keyword arguments (line 884)
        kwargs_198255 = {}
        # Getting the type of 'self' (line 884)
        self_198247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 884)
        assertRaises_198248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 8), self_198247, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 884)
        assertRaises_call_result_198256 = invoke(stypy.reporting.localization.Localization(__file__, 884, 8), assertRaises_198248, *[failureException_198250, assertGreaterEqual_198252, str_198253, unicode_198254], **kwargs_198255)
        
        
        # Call to assertRaises(...): (line 886)
        # Processing the call arguments (line 886)
        # Getting the type of 'self' (line 886)
        self_198259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 886)
        failureException_198260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 26), self_198259, 'failureException')
        # Getting the type of 'self' (line 886)
        self_198261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 49), 'self', False)
        # Obtaining the member 'assertGreaterEqual' of a type (line 886)
        assertGreaterEqual_198262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 49), self_198261, 'assertGreaterEqual')
        unicode_198263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 74), 'unicode', u'ant')
        str_198264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 26), 'str', 'bug')
        # Processing the call keyword arguments (line 886)
        kwargs_198265 = {}
        # Getting the type of 'self' (line 886)
        self_198257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 886)
        assertRaises_198258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 8), self_198257, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 886)
        assertRaises_call_result_198266 = invoke(stypy.reporting.localization.Localization(__file__, 886, 8), assertRaises_198258, *[failureException_198260, assertGreaterEqual_198262, unicode_198263, str_198264], **kwargs_198265)
        
        
        # Call to assertRaises(...): (line 888)
        # Processing the call arguments (line 888)
        # Getting the type of 'self' (line 888)
        self_198269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 888)
        failureException_198270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 26), self_198269, 'failureException')
        # Getting the type of 'self' (line 888)
        self_198271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 888)
        assertLess_198272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 49), self_198271, 'assertLess')
        str_198273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 66), 'str', 'bug')
        unicode_198274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 888, 73), 'unicode', u'ant')
        # Processing the call keyword arguments (line 888)
        kwargs_198275 = {}
        # Getting the type of 'self' (line 888)
        self_198267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 888)
        assertRaises_198268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 8), self_198267, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 888)
        assertRaises_call_result_198276 = invoke(stypy.reporting.localization.Localization(__file__, 888, 8), assertRaises_198268, *[failureException_198270, assertLess_198272, str_198273, unicode_198274], **kwargs_198275)
        
        
        # Call to assertRaises(...): (line 889)
        # Processing the call arguments (line 889)
        # Getting the type of 'self' (line 889)
        self_198279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 889)
        failureException_198280 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 26), self_198279, 'failureException')
        # Getting the type of 'self' (line 889)
        self_198281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 889)
        assertLess_198282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 49), self_198281, 'assertLess')
        unicode_198283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 66), 'unicode', u'bug')
        str_198284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 74), 'str', 'ant')
        # Processing the call keyword arguments (line 889)
        kwargs_198285 = {}
        # Getting the type of 'self' (line 889)
        self_198277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 889)
        assertRaises_198278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 8), self_198277, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 889)
        assertRaises_call_result_198286 = invoke(stypy.reporting.localization.Localization(__file__, 889, 8), assertRaises_198278, *[failureException_198280, assertLess_198282, unicode_198283, str_198284], **kwargs_198285)
        
        
        # Call to assertRaises(...): (line 890)
        # Processing the call arguments (line 890)
        # Getting the type of 'self' (line 890)
        self_198289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 890)
        failureException_198290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 26), self_198289, 'failureException')
        # Getting the type of 'self' (line 890)
        self_198291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 890)
        assertLess_198292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 49), self_198291, 'assertLess')
        str_198293 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 66), 'str', 'ant')
        unicode_198294 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 73), 'unicode', u'ant')
        # Processing the call keyword arguments (line 890)
        kwargs_198295 = {}
        # Getting the type of 'self' (line 890)
        self_198287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 890)
        assertRaises_198288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 8), self_198287, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 890)
        assertRaises_call_result_198296 = invoke(stypy.reporting.localization.Localization(__file__, 890, 8), assertRaises_198288, *[failureException_198290, assertLess_198292, str_198293, unicode_198294], **kwargs_198295)
        
        
        # Call to assertRaises(...): (line 891)
        # Processing the call arguments (line 891)
        # Getting the type of 'self' (line 891)
        self_198299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 891)
        failureException_198300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 26), self_198299, 'failureException')
        # Getting the type of 'self' (line 891)
        self_198301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 49), 'self', False)
        # Obtaining the member 'assertLess' of a type (line 891)
        assertLess_198302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 49), self_198301, 'assertLess')
        unicode_198303 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 66), 'unicode', u'ant')
        str_198304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 891, 74), 'str', 'ant')
        # Processing the call keyword arguments (line 891)
        kwargs_198305 = {}
        # Getting the type of 'self' (line 891)
        self_198297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 891)
        assertRaises_198298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 8), self_198297, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 891)
        assertRaises_call_result_198306 = invoke(stypy.reporting.localization.Localization(__file__, 891, 8), assertRaises_198298, *[failureException_198300, assertLess_198302, unicode_198303, str_198304], **kwargs_198305)
        
        
        # Call to assertRaises(...): (line 892)
        # Processing the call arguments (line 892)
        # Getting the type of 'self' (line 892)
        self_198309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 892)
        failureException_198310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 26), self_198309, 'failureException')
        # Getting the type of 'self' (line 892)
        self_198311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 49), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 892)
        assertLessEqual_198312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 49), self_198311, 'assertLessEqual')
        str_198313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 71), 'str', 'bug')
        unicode_198314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 892, 78), 'unicode', u'ant')
        # Processing the call keyword arguments (line 892)
        kwargs_198315 = {}
        # Getting the type of 'self' (line 892)
        self_198307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 892)
        assertRaises_198308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 8), self_198307, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 892)
        assertRaises_call_result_198316 = invoke(stypy.reporting.localization.Localization(__file__, 892, 8), assertRaises_198308, *[failureException_198310, assertLessEqual_198312, str_198313, unicode_198314], **kwargs_198315)
        
        
        # Call to assertRaises(...): (line 893)
        # Processing the call arguments (line 893)
        # Getting the type of 'self' (line 893)
        self_198319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 893)
        failureException_198320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 26), self_198319, 'failureException')
        # Getting the type of 'self' (line 893)
        self_198321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 49), 'self', False)
        # Obtaining the member 'assertLessEqual' of a type (line 893)
        assertLessEqual_198322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 49), self_198321, 'assertLessEqual')
        unicode_198323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 71), 'unicode', u'bug')
        str_198324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 893, 79), 'str', 'ant')
        # Processing the call keyword arguments (line 893)
        kwargs_198325 = {}
        # Getting the type of 'self' (line 893)
        self_198317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 893)
        assertRaises_198318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 8), self_198317, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 893)
        assertRaises_call_result_198326 = invoke(stypy.reporting.localization.Localization(__file__, 893, 8), assertRaises_198318, *[failureException_198320, assertLessEqual_198322, unicode_198323, str_198324], **kwargs_198325)
        
        
        # ################# End of 'testInequality(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testInequality' in the type store
        # Getting the type of 'stypy_return_type' (line 809)
        stypy_return_type_198327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198327)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testInequality'
        return stypy_return_type_198327


    @norecursion
    def testAssertMultiLineEqual(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertMultiLineEqual'
        module_type_store = module_type_store.open_function_context('testAssertMultiLineEqual', 895, 4, False)
        # Assigning a type to the variable 'self' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertMultiLineEqual')
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertMultiLineEqual.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertMultiLineEqual', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertMultiLineEqual', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertMultiLineEqual(...)' code ##################

        
        # Assigning a Str to a Name (line 896):
        
        # Assigning a Str to a Name (line 896):
        str_198328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, (-1)), 'str', 'http://www.python.org/doc/2.3/lib/module-unittest.html\ntest case\n    A test case is the smallest unit of testing. [...]\n')
        # Assigning a type to the variable 'sample_text' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'sample_text', str_198328)
        
        # Assigning a Str to a Name (line 901):
        
        # Assigning a Str to a Name (line 901):
        str_198329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, (-1)), 'str', 'http://www.python.org/doc/2.4.1/lib/module-unittest.html\ntest case\n    A test case is the smallest unit of testing. [...] You may provide your\n    own implementation that does not subclass from TestCase, of course.\n')
        # Assigning a type to the variable 'revised_sample_text' (line 901)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 901, 8), 'revised_sample_text', str_198329)
        
        # Assigning a Str to a Name (line 907):
        
        # Assigning a Str to a Name (line 907):
        str_198330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, (-1)), 'str', '- http://www.python.org/doc/2.3/lib/module-unittest.html\n?                             ^\n+ http://www.python.org/doc/2.4.1/lib/module-unittest.html\n?                             ^^^\n  test case\n-     A test case is the smallest unit of testing. [...]\n+     A test case is the smallest unit of testing. [...] You may provide your\n?                                                       +++++++++++++++++++++\n+     own implementation that does not subclass from TestCase, of course.\n')
        # Assigning a type to the variable 'sample_text_error' (line 907)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 907, 8), 'sample_text_error', str_198330)
        
        # Assigning a Name to a Attribute (line 918):
        
        # Assigning a Name to a Attribute (line 918):
        # Getting the type of 'None' (line 918)
        None_198331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 23), 'None')
        # Getting the type of 'self' (line 918)
        self_198332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'self')
        # Setting the type of the member 'maxDiff' of a type (line 918)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 8), self_198332, 'maxDiff', None_198331)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 919)
        tuple_198333 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 29), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 919)
        # Adding element type (line 919)

        @norecursion
        def _stypy_temp_lambda_57(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_57'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_57', 919, 29, True)
            # Passed parameters checking function
            _stypy_temp_lambda_57.stypy_localization = localization
            _stypy_temp_lambda_57.stypy_type_of_self = None
            _stypy_temp_lambda_57.stypy_type_store = module_type_store
            _stypy_temp_lambda_57.stypy_function_name = '_stypy_temp_lambda_57'
            _stypy_temp_lambda_57.stypy_param_names_list = ['x']
            _stypy_temp_lambda_57.stypy_varargs_param_name = None
            _stypy_temp_lambda_57.stypy_kwargs_param_name = None
            _stypy_temp_lambda_57.stypy_call_defaults = defaults
            _stypy_temp_lambda_57.stypy_call_varargs = varargs
            _stypy_temp_lambda_57.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_57', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_57', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'x' (line 919)
            x_198334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 39), 'x')
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 919)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 29), 'stypy_return_type', x_198334)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_57' in the type store
            # Getting the type of 'stypy_return_type' (line 919)
            stypy_return_type_198335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 29), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198335)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_57'
            return stypy_return_type_198335

        # Assigning a type to the variable '_stypy_temp_lambda_57' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 29), '_stypy_temp_lambda_57', _stypy_temp_lambda_57)
        # Getting the type of '_stypy_temp_lambda_57' (line 919)
        _stypy_temp_lambda_57_198336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 29), '_stypy_temp_lambda_57')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 919, 29), tuple_198333, _stypy_temp_lambda_57_198336)
        # Adding element type (line 919)

        @norecursion
        def _stypy_temp_lambda_58(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_58'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_58', 919, 42, True)
            # Passed parameters checking function
            _stypy_temp_lambda_58.stypy_localization = localization
            _stypy_temp_lambda_58.stypy_type_of_self = None
            _stypy_temp_lambda_58.stypy_type_store = module_type_store
            _stypy_temp_lambda_58.stypy_function_name = '_stypy_temp_lambda_58'
            _stypy_temp_lambda_58.stypy_param_names_list = ['x']
            _stypy_temp_lambda_58.stypy_varargs_param_name = None
            _stypy_temp_lambda_58.stypy_kwargs_param_name = None
            _stypy_temp_lambda_58.stypy_call_defaults = defaults
            _stypy_temp_lambda_58.stypy_call_varargs = varargs
            _stypy_temp_lambda_58.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_58', ['x'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_58', ['x'], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            
            # Call to decode(...): (line 919)
            # Processing the call arguments (line 919)
            str_198339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 61), 'str', 'utf8')
            # Processing the call keyword arguments (line 919)
            kwargs_198340 = {}
            # Getting the type of 'x' (line 919)
            x_198337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 52), 'x', False)
            # Obtaining the member 'decode' of a type (line 919)
            decode_198338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 52), x_198337, 'decode')
            # Calling decode(args, kwargs) (line 919)
            decode_call_result_198341 = invoke(stypy.reporting.localization.Localization(__file__, 919, 52), decode_198338, *[str_198339], **kwargs_198340)
            
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 919)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 42), 'stypy_return_type', decode_call_result_198341)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_58' in the type store
            # Getting the type of 'stypy_return_type' (line 919)
            stypy_return_type_198342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 42), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198342)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_58'
            return stypy_return_type_198342

        # Assigning a type to the variable '_stypy_temp_lambda_58' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 42), '_stypy_temp_lambda_58', _stypy_temp_lambda_58)
        # Getting the type of '_stypy_temp_lambda_58' (line 919)
        _stypy_temp_lambda_58_198343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 42), '_stypy_temp_lambda_58')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 919, 29), tuple_198333, _stypy_temp_lambda_58_198343)
        
        # Testing the type of a for loop iterable (line 919)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 919, 8), tuple_198333)
        # Getting the type of the for loop variable (line 919)
        for_loop_var_198344 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 919, 8), tuple_198333)
        # Assigning a type to the variable 'type_changer' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 8), 'type_changer', for_loop_var_198344)
        # SSA begins for a for statement (line 919)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # SSA begins for try-except statement (line 920)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertMultiLineEqual(...): (line 921)
        # Processing the call arguments (line 921)
        
        # Call to type_changer(...): (line 921)
        # Processing the call arguments (line 921)
        # Getting the type of 'sample_text' (line 921)
        sample_text_198348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 55), 'sample_text', False)
        # Processing the call keyword arguments (line 921)
        kwargs_198349 = {}
        # Getting the type of 'type_changer' (line 921)
        type_changer_198347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 42), 'type_changer', False)
        # Calling type_changer(args, kwargs) (line 921)
        type_changer_call_result_198350 = invoke(stypy.reporting.localization.Localization(__file__, 921, 42), type_changer_198347, *[sample_text_198348], **kwargs_198349)
        
        
        # Call to type_changer(...): (line 922)
        # Processing the call arguments (line 922)
        # Getting the type of 'revised_sample_text' (line 922)
        revised_sample_text_198352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 55), 'revised_sample_text', False)
        # Processing the call keyword arguments (line 922)
        kwargs_198353 = {}
        # Getting the type of 'type_changer' (line 922)
        type_changer_198351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 42), 'type_changer', False)
        # Calling type_changer(args, kwargs) (line 922)
        type_changer_call_result_198354 = invoke(stypy.reporting.localization.Localization(__file__, 922, 42), type_changer_198351, *[revised_sample_text_198352], **kwargs_198353)
        
        # Processing the call keyword arguments (line 921)
        kwargs_198355 = {}
        # Getting the type of 'self' (line 921)
        self_198345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 16), 'self', False)
        # Obtaining the member 'assertMultiLineEqual' of a type (line 921)
        assertMultiLineEqual_198346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 921, 16), self_198345, 'assertMultiLineEqual')
        # Calling assertMultiLineEqual(args, kwargs) (line 921)
        assertMultiLineEqual_call_result_198356 = invoke(stypy.reporting.localization.Localization(__file__, 921, 16), assertMultiLineEqual_198346, *[type_changer_call_result_198350, type_changer_call_result_198354], **kwargs_198355)
        
        # SSA branch for the except part of a try statement (line 920)
        # SSA branch for the except 'Attribute' branch of a try statement (line 920)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'self' (line 923)
        self_198357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 19), 'self')
        # Obtaining the member 'failureException' of a type (line 923)
        failureException_198358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 923, 19), self_198357, 'failureException')
        # Assigning a type to the variable 'e' (line 923)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 923, 12), 'e', failureException_198358)
        
        # Assigning a Subscript to a Name (line 925):
        
        # Assigning a Subscript to a Name (line 925):
        
        # Obtaining the type of the subscript
        int_198359 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 61), 'int')
        
        # Call to split(...): (line 925)
        # Processing the call arguments (line 925)
        str_198369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 52), 'str', '\n')
        int_198370 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 58), 'int')
        # Processing the call keyword arguments (line 925)
        kwargs_198371 = {}
        
        # Call to encode(...): (line 925)
        # Processing the call arguments (line 925)
        str_198365 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 925, 38), 'str', 'utf8')
        # Processing the call keyword arguments (line 925)
        kwargs_198366 = {}
        
        # Call to str(...): (line 925)
        # Processing the call arguments (line 925)
        # Getting the type of 'e' (line 925)
        e_198361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 28), 'e', False)
        # Processing the call keyword arguments (line 925)
        kwargs_198362 = {}
        # Getting the type of 'str' (line 925)
        str_198360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 925, 24), 'str', False)
        # Calling str(args, kwargs) (line 925)
        str_call_result_198363 = invoke(stypy.reporting.localization.Localization(__file__, 925, 24), str_198360, *[e_198361], **kwargs_198362)
        
        # Obtaining the member 'encode' of a type (line 925)
        encode_198364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 925, 24), str_call_result_198363, 'encode')
        # Calling encode(args, kwargs) (line 925)
        encode_call_result_198367 = invoke(stypy.reporting.localization.Localization(__file__, 925, 24), encode_198364, *[str_198365], **kwargs_198366)
        
        # Obtaining the member 'split' of a type (line 925)
        split_198368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 925, 24), encode_call_result_198367, 'split')
        # Calling split(args, kwargs) (line 925)
        split_call_result_198372 = invoke(stypy.reporting.localization.Localization(__file__, 925, 24), split_198368, *[str_198369, int_198370], **kwargs_198371)
        
        # Obtaining the member '__getitem__' of a type (line 925)
        getitem___198373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 925, 24), split_call_result_198372, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 925)
        subscript_call_result_198374 = invoke(stypy.reporting.localization.Localization(__file__, 925, 24), getitem___198373, int_198359)
        
        # Assigning a type to the variable 'error' (line 925)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 925, 16), 'error', subscript_call_result_198374)
        
        # Call to assertTrue(...): (line 929)
        # Processing the call arguments (line 929)
        
        # Getting the type of 'sample_text_error' (line 929)
        sample_text_error_198377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 32), 'sample_text_error', False)
        # Getting the type of 'error' (line 929)
        error_198378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 53), 'error', False)
        # Applying the binary operator '==' (line 929)
        result_eq_198379 = python_operator(stypy.reporting.localization.Localization(__file__, 929, 32), '==', sample_text_error_198377, error_198378)
        
        # Processing the call keyword arguments (line 929)
        kwargs_198380 = {}
        # Getting the type of 'self' (line 929)
        self_198375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 16), 'self', False)
        # Obtaining the member 'assertTrue' of a type (line 929)
        assertTrue_198376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 16), self_198375, 'assertTrue')
        # Calling assertTrue(args, kwargs) (line 929)
        assertTrue_call_result_198381 = invoke(stypy.reporting.localization.Localization(__file__, 929, 16), assertTrue_198376, *[result_eq_198379], **kwargs_198380)
        
        # SSA join for try-except statement (line 920)
        module_type_store = module_type_store.join_ssa_context()
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testAssertMultiLineEqual(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertMultiLineEqual' in the type store
        # Getting the type of 'stypy_return_type' (line 895)
        stypy_return_type_198382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198382)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertMultiLineEqual'
        return stypy_return_type_198382


    @norecursion
    def testAsertEqualSingleLine(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAsertEqualSingleLine'
        module_type_store = module_type_store.open_function_context('testAsertEqualSingleLine', 931, 4, False)
        # Assigning a type to the variable 'self' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAsertEqualSingleLine')
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAsertEqualSingleLine.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAsertEqualSingleLine', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAsertEqualSingleLine', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAsertEqualSingleLine(...)' code ##################

        
        # Assigning a Str to a Name (line 932):
        
        # Assigning a Str to a Name (line 932):
        unicode_198383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 932, 22), 'unicode', u'laden swallows fly slowly')
        # Assigning a type to the variable 'sample_text' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'sample_text', unicode_198383)
        
        # Assigning a Str to a Name (line 933):
        
        # Assigning a Str to a Name (line 933):
        unicode_198384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 30), 'unicode', u'unladen swallows fly quickly')
        # Assigning a type to the variable 'revised_sample_text' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'revised_sample_text', unicode_198384)
        
        # Assigning a Str to a Name (line 934):
        
        # Assigning a Str to a Name (line 934):
        str_198385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 939, (-1)), 'str', '- laden swallows fly slowly\n?                    ^^^^\n+ unladen swallows fly quickly\n? ++                   ^^^^^\n')
        # Assigning a type to the variable 'sample_text_error' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'sample_text_error', str_198385)
        
        
        # SSA begins for try-except statement (line 940)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'try-except')
        
        # Call to assertEqual(...): (line 941)
        # Processing the call arguments (line 941)
        # Getting the type of 'sample_text' (line 941)
        sample_text_198388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 29), 'sample_text', False)
        # Getting the type of 'revised_sample_text' (line 941)
        revised_sample_text_198389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 42), 'revised_sample_text', False)
        # Processing the call keyword arguments (line 941)
        kwargs_198390 = {}
        # Getting the type of 'self' (line 941)
        self_198386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 941, 12), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 941)
        assertEqual_198387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 941, 12), self_198386, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 941)
        assertEqual_call_result_198391 = invoke(stypy.reporting.localization.Localization(__file__, 941, 12), assertEqual_198387, *[sample_text_198388, revised_sample_text_198389], **kwargs_198390)
        
        # SSA branch for the except part of a try statement (line 940)
        # SSA branch for the except 'Attribute' branch of a try statement (line 940)
        # Storing handler type
        module_type_store.open_ssa_branch('except')
        # Getting the type of 'self' (line 942)
        self_198392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 15), 'self')
        # Obtaining the member 'failureException' of a type (line 942)
        failureException_198393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 15), self_198392, 'failureException')
        # Assigning a type to the variable 'e' (line 942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'e', failureException_198393)
        
        # Assigning a Subscript to a Name (line 943):
        
        # Assigning a Subscript to a Name (line 943):
        
        # Obtaining the type of the subscript
        int_198394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 42), 'int')
        
        # Call to split(...): (line 943)
        # Processing the call arguments (line 943)
        str_198400 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 33), 'str', '\n')
        int_198401 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 39), 'int')
        # Processing the call keyword arguments (line 943)
        kwargs_198402 = {}
        
        # Call to str(...): (line 943)
        # Processing the call arguments (line 943)
        # Getting the type of 'e' (line 943)
        e_198396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 24), 'e', False)
        # Processing the call keyword arguments (line 943)
        kwargs_198397 = {}
        # Getting the type of 'str' (line 943)
        str_198395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 20), 'str', False)
        # Calling str(args, kwargs) (line 943)
        str_call_result_198398 = invoke(stypy.reporting.localization.Localization(__file__, 943, 20), str_198395, *[e_198396], **kwargs_198397)
        
        # Obtaining the member 'split' of a type (line 943)
        split_198399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 943, 20), str_call_result_198398, 'split')
        # Calling split(args, kwargs) (line 943)
        split_call_result_198403 = invoke(stypy.reporting.localization.Localization(__file__, 943, 20), split_198399, *[str_198400, int_198401], **kwargs_198402)
        
        # Obtaining the member '__getitem__' of a type (line 943)
        getitem___198404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 943, 20), split_call_result_198403, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 943)
        subscript_call_result_198405 = invoke(stypy.reporting.localization.Localization(__file__, 943, 20), getitem___198404, int_198394)
        
        # Assigning a type to the variable 'error' (line 943)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 943, 12), 'error', subscript_call_result_198405)
        
        # Call to assertTrue(...): (line 944)
        # Processing the call arguments (line 944)
        
        # Getting the type of 'sample_text_error' (line 944)
        sample_text_error_198408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 28), 'sample_text_error', False)
        # Getting the type of 'error' (line 944)
        error_198409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 49), 'error', False)
        # Applying the binary operator '==' (line 944)
        result_eq_198410 = python_operator(stypy.reporting.localization.Localization(__file__, 944, 28), '==', sample_text_error_198408, error_198409)
        
        # Processing the call keyword arguments (line 944)
        kwargs_198411 = {}
        # Getting the type of 'self' (line 944)
        self_198406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 12), 'self', False)
        # Obtaining the member 'assertTrue' of a type (line 944)
        assertTrue_198407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 12), self_198406, 'assertTrue')
        # Calling assertTrue(args, kwargs) (line 944)
        assertTrue_call_result_198412 = invoke(stypy.reporting.localization.Localization(__file__, 944, 12), assertTrue_198407, *[result_eq_198410], **kwargs_198411)
        
        # SSA join for try-except statement (line 940)
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testAsertEqualSingleLine(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAsertEqualSingleLine' in the type store
        # Getting the type of 'stypy_return_type' (line 931)
        stypy_return_type_198413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 931, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198413)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAsertEqualSingleLine'
        return stypy_return_type_198413


    @norecursion
    def testAssertIsNone(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertIsNone'
        module_type_store = module_type_store.open_function_context('testAssertIsNone', 946, 4, False)
        # Assigning a type to the variable 'self' (line 947)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertIsNone')
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertIsNone.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertIsNone', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertIsNone', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertIsNone(...)' code ##################

        
        # Call to assertIsNone(...): (line 947)
        # Processing the call arguments (line 947)
        # Getting the type of 'None' (line 947)
        None_198416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 26), 'None', False)
        # Processing the call keyword arguments (line 947)
        kwargs_198417 = {}
        # Getting the type of 'self' (line 947)
        self_198414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 8), 'self', False)
        # Obtaining the member 'assertIsNone' of a type (line 947)
        assertIsNone_198415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 8), self_198414, 'assertIsNone')
        # Calling assertIsNone(args, kwargs) (line 947)
        assertIsNone_call_result_198418 = invoke(stypy.reporting.localization.Localization(__file__, 947, 8), assertIsNone_198415, *[None_198416], **kwargs_198417)
        
        
        # Call to assertRaises(...): (line 948)
        # Processing the call arguments (line 948)
        # Getting the type of 'self' (line 948)
        self_198421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 948)
        failureException_198422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 26), self_198421, 'failureException')
        # Getting the type of 'self' (line 948)
        self_198423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 49), 'self', False)
        # Obtaining the member 'assertIsNone' of a type (line 948)
        assertIsNone_198424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 49), self_198423, 'assertIsNone')
        # Getting the type of 'False' (line 948)
        False_198425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 68), 'False', False)
        # Processing the call keyword arguments (line 948)
        kwargs_198426 = {}
        # Getting the type of 'self' (line 948)
        self_198419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 948)
        assertRaises_198420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 8), self_198419, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 948)
        assertRaises_call_result_198427 = invoke(stypy.reporting.localization.Localization(__file__, 948, 8), assertRaises_198420, *[failureException_198422, assertIsNone_198424, False_198425], **kwargs_198426)
        
        
        # Call to assertIsNotNone(...): (line 949)
        # Processing the call arguments (line 949)
        str_198430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 949, 29), 'str', 'DjZoPloGears on Rails')
        # Processing the call keyword arguments (line 949)
        kwargs_198431 = {}
        # Getting the type of 'self' (line 949)
        self_198428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'self', False)
        # Obtaining the member 'assertIsNotNone' of a type (line 949)
        assertIsNotNone_198429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 8), self_198428, 'assertIsNotNone')
        # Calling assertIsNotNone(args, kwargs) (line 949)
        assertIsNotNone_call_result_198432 = invoke(stypy.reporting.localization.Localization(__file__, 949, 8), assertIsNotNone_198429, *[str_198430], **kwargs_198431)
        
        
        # Call to assertRaises(...): (line 950)
        # Processing the call arguments (line 950)
        # Getting the type of 'self' (line 950)
        self_198435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 950)
        failureException_198436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 26), self_198435, 'failureException')
        # Getting the type of 'self' (line 950)
        self_198437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 49), 'self', False)
        # Obtaining the member 'assertIsNotNone' of a type (line 950)
        assertIsNotNone_198438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 49), self_198437, 'assertIsNotNone')
        # Getting the type of 'None' (line 950)
        None_198439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 71), 'None', False)
        # Processing the call keyword arguments (line 950)
        kwargs_198440 = {}
        # Getting the type of 'self' (line 950)
        self_198433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 950)
        assertRaises_198434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 8), self_198433, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 950)
        assertRaises_call_result_198441 = invoke(stypy.reporting.localization.Localization(__file__, 950, 8), assertRaises_198434, *[failureException_198436, assertIsNotNone_198438, None_198439], **kwargs_198440)
        
        
        # ################# End of 'testAssertIsNone(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertIsNone' in the type store
        # Getting the type of 'stypy_return_type' (line 946)
        stypy_return_type_198442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198442)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertIsNone'
        return stypy_return_type_198442


    @norecursion
    def testAssertRegexpMatches(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertRegexpMatches'
        module_type_store = module_type_store.open_function_context('testAssertRegexpMatches', 952, 4, False)
        # Assigning a type to the variable 'self' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertRegexpMatches')
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertRegexpMatches.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertRegexpMatches', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertRegexpMatches', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertRegexpMatches(...)' code ##################

        
        # Call to assertRegexpMatches(...): (line 953)
        # Processing the call arguments (line 953)
        str_198445 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 953, 33), 'str', 'asdfabasdf')
        str_198446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 953, 47), 'str', 'ab+')
        # Processing the call keyword arguments (line 953)
        kwargs_198447 = {}
        # Getting the type of 'self' (line 953)
        self_198443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'self', False)
        # Obtaining the member 'assertRegexpMatches' of a type (line 953)
        assertRegexpMatches_198444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 8), self_198443, 'assertRegexpMatches')
        # Calling assertRegexpMatches(args, kwargs) (line 953)
        assertRegexpMatches_call_result_198448 = invoke(stypy.reporting.localization.Localization(__file__, 953, 8), assertRegexpMatches_198444, *[str_198445, str_198446], **kwargs_198447)
        
        
        # Call to assertRaises(...): (line 954)
        # Processing the call arguments (line 954)
        # Getting the type of 'self' (line 954)
        self_198451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 26), 'self', False)
        # Obtaining the member 'failureException' of a type (line 954)
        failureException_198452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 26), self_198451, 'failureException')
        # Getting the type of 'self' (line 954)
        self_198453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 49), 'self', False)
        # Obtaining the member 'assertRegexpMatches' of a type (line 954)
        assertRegexpMatches_198454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 49), self_198453, 'assertRegexpMatches')
        str_198455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 26), 'str', 'saaas')
        str_198456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 955, 35), 'str', 'aaaa')
        # Processing the call keyword arguments (line 954)
        kwargs_198457 = {}
        # Getting the type of 'self' (line 954)
        self_198449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 954)
        assertRaises_198450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 8), self_198449, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 954)
        assertRaises_call_result_198458 = invoke(stypy.reporting.localization.Localization(__file__, 954, 8), assertRaises_198450, *[failureException_198452, assertRegexpMatches_198454, str_198455, str_198456], **kwargs_198457)
        
        
        # ################# End of 'testAssertRegexpMatches(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertRegexpMatches' in the type store
        # Getting the type of 'stypy_return_type' (line 952)
        stypy_return_type_198459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 952, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198459)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertRegexpMatches'
        return stypy_return_type_198459


    @norecursion
    def testAssertRaisesCallable(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertRaisesCallable'
        module_type_store = module_type_store.open_function_context('testAssertRaisesCallable', 957, 4, False)
        # Assigning a type to the variable 'self' (line 958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertRaisesCallable')
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertRaisesCallable.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertRaisesCallable', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertRaisesCallable', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertRaisesCallable(...)' code ##################

        # Declaration of the 'ExceptionMock' class
        # Getting the type of 'Exception' (line 958)
        Exception_198460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 28), 'Exception')

        class ExceptionMock(Exception_198460, ):
            pass
        
        # Assigning a type to the variable 'ExceptionMock' (line 958)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 958, 8), 'ExceptionMock', ExceptionMock)

        @norecursion
        def Stub(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'Stub'
            module_type_store = module_type_store.open_function_context('Stub', 960, 8, False)
            
            # Passed parameters checking function
            Stub.stypy_localization = localization
            Stub.stypy_type_of_self = None
            Stub.stypy_type_store = module_type_store
            Stub.stypy_function_name = 'Stub'
            Stub.stypy_param_names_list = []
            Stub.stypy_varargs_param_name = None
            Stub.stypy_kwargs_param_name = None
            Stub.stypy_call_defaults = defaults
            Stub.stypy_call_varargs = varargs
            Stub.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'Stub', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'Stub', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'Stub(...)' code ##################

            
            # Call to ExceptionMock(...): (line 961)
            # Processing the call arguments (line 961)
            str_198462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 961, 32), 'str', 'We expect')
            # Processing the call keyword arguments (line 961)
            kwargs_198463 = {}
            # Getting the type of 'ExceptionMock' (line 961)
            ExceptionMock_198461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 18), 'ExceptionMock', False)
            # Calling ExceptionMock(args, kwargs) (line 961)
            ExceptionMock_call_result_198464 = invoke(stypy.reporting.localization.Localization(__file__, 961, 18), ExceptionMock_198461, *[str_198462], **kwargs_198463)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 961, 12), ExceptionMock_call_result_198464, 'raise parameter', BaseException)
            
            # ################# End of 'Stub(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'Stub' in the type store
            # Getting the type of 'stypy_return_type' (line 960)
            stypy_return_type_198465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198465)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'Stub'
            return stypy_return_type_198465

        # Assigning a type to the variable 'Stub' (line 960)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'Stub', Stub)
        
        # Call to assertRaises(...): (line 962)
        # Processing the call arguments (line 962)
        # Getting the type of 'ExceptionMock' (line 962)
        ExceptionMock_198468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 26), 'ExceptionMock', False)
        # Getting the type of 'Stub' (line 962)
        Stub_198469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 41), 'Stub', False)
        # Processing the call keyword arguments (line 962)
        kwargs_198470 = {}
        # Getting the type of 'self' (line 962)
        self_198466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 962)
        assertRaises_198467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 8), self_198466, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 962)
        assertRaises_call_result_198471 = invoke(stypy.reporting.localization.Localization(__file__, 962, 8), assertRaises_198467, *[ExceptionMock_198468, Stub_198469], **kwargs_198470)
        
        
        # Call to assertRaises(...): (line 964)
        # Processing the call arguments (line 964)
        
        # Obtaining an instance of the builtin type 'tuple' (line 964)
        tuple_198474 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 964, 27), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 964)
        # Adding element type (line 964)
        # Getting the type of 'ValueError' (line 964)
        ValueError_198475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 27), 'ValueError', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 964, 27), tuple_198474, ValueError_198475)
        # Adding element type (line 964)
        # Getting the type of 'ExceptionMock' (line 964)
        ExceptionMock_198476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 39), 'ExceptionMock', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 964, 27), tuple_198474, ExceptionMock_198476)
        
        # Getting the type of 'Stub' (line 964)
        Stub_198477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 55), 'Stub', False)
        # Processing the call keyword arguments (line 964)
        kwargs_198478 = {}
        # Getting the type of 'self' (line 964)
        self_198472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 964, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 964)
        assertRaises_198473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 964, 8), self_198472, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 964)
        assertRaises_call_result_198479 = invoke(stypy.reporting.localization.Localization(__file__, 964, 8), assertRaises_198473, *[tuple_198474, Stub_198477], **kwargs_198478)
        
        
        # Call to assertRaises(...): (line 966)
        # Processing the call arguments (line 966)
        # Getting the type of 'ValueError' (line 966)
        ValueError_198482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 26), 'ValueError', False)
        # Getting the type of 'int' (line 966)
        int_198483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 38), 'int', False)
        str_198484 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 43), 'str', '19')
        # Processing the call keyword arguments (line 966)
        int_198485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 54), 'int')
        keyword_198486 = int_198485
        kwargs_198487 = {'base': keyword_198486}
        # Getting the type of 'self' (line 966)
        self_198480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 966)
        assertRaises_198481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 966, 8), self_198480, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 966)
        assertRaises_call_result_198488 = invoke(stypy.reporting.localization.Localization(__file__, 966, 8), assertRaises_198481, *[ValueError_198482, int_198483, str_198484], **kwargs_198487)
        
        
        # Call to assertRaises(...): (line 968)
        # Processing the call arguments (line 968)
        # Getting the type of 'self' (line 968)
        self_198491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 968)
        failureException_198492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 968, 31), self_198491, 'failureException')
        # Processing the call keyword arguments (line 968)
        kwargs_198493 = {}
        # Getting the type of 'self' (line 968)
        self_198489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 968)
        assertRaises_198490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 968, 13), self_198489, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 968)
        assertRaises_call_result_198494 = invoke(stypy.reporting.localization.Localization(__file__, 968, 13), assertRaises_198490, *[failureException_198492], **kwargs_198493)
        
        with_198495 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 968, 13), assertRaises_call_result_198494, 'with parameter', '__enter__', '__exit__')

        if with_198495:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 968)
            enter___198496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 968, 13), assertRaises_call_result_198494, '__enter__')
            with_enter_198497 = invoke(stypy.reporting.localization.Localization(__file__, 968, 13), enter___198496)
            
            # Call to assertRaises(...): (line 969)
            # Processing the call arguments (line 969)
            # Getting the type of 'ExceptionMock' (line 969)
            ExceptionMock_198500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 30), 'ExceptionMock', False)

            @norecursion
            def _stypy_temp_lambda_59(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_59'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_59', 969, 45, True)
                # Passed parameters checking function
                _stypy_temp_lambda_59.stypy_localization = localization
                _stypy_temp_lambda_59.stypy_type_of_self = None
                _stypy_temp_lambda_59.stypy_type_store = module_type_store
                _stypy_temp_lambda_59.stypy_function_name = '_stypy_temp_lambda_59'
                _stypy_temp_lambda_59.stypy_param_names_list = []
                _stypy_temp_lambda_59.stypy_varargs_param_name = None
                _stypy_temp_lambda_59.stypy_kwargs_param_name = None
                _stypy_temp_lambda_59.stypy_call_defaults = defaults
                _stypy_temp_lambda_59.stypy_call_varargs = varargs
                _stypy_temp_lambda_59.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_59', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_59', [], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                int_198501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 969, 53), 'int')
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 969)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 45), 'stypy_return_type', int_198501)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_59' in the type store
                # Getting the type of 'stypy_return_type' (line 969)
                stypy_return_type_198502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 45), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_198502)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_59'
                return stypy_return_type_198502

            # Assigning a type to the variable '_stypy_temp_lambda_59' (line 969)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 969, 45), '_stypy_temp_lambda_59', _stypy_temp_lambda_59)
            # Getting the type of '_stypy_temp_lambda_59' (line 969)
            _stypy_temp_lambda_59_198503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 45), '_stypy_temp_lambda_59')
            # Processing the call keyword arguments (line 969)
            kwargs_198504 = {}
            # Getting the type of 'self' (line 969)
            self_198498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 12), 'self', False)
            # Obtaining the member 'assertRaises' of a type (line 969)
            assertRaises_198499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 969, 12), self_198498, 'assertRaises')
            # Calling assertRaises(args, kwargs) (line 969)
            assertRaises_call_result_198505 = invoke(stypy.reporting.localization.Localization(__file__, 969, 12), assertRaises_198499, *[ExceptionMock_198500, _stypy_temp_lambda_59_198503], **kwargs_198504)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 968)
            exit___198506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 968, 13), assertRaises_call_result_198494, '__exit__')
            with_exit_198507 = invoke(stypy.reporting.localization.Localization(__file__, 968, 13), exit___198506, None, None, None)

        
        # Call to assertRaises(...): (line 971)
        # Processing the call arguments (line 971)
        # Getting the type of 'ExceptionMock' (line 971)
        ExceptionMock_198510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 31), 'ExceptionMock', False)
        # Processing the call keyword arguments (line 971)
        kwargs_198511 = {}
        # Getting the type of 'self' (line 971)
        self_198508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 971)
        assertRaises_198509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 971, 13), self_198508, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 971)
        assertRaises_call_result_198512 = invoke(stypy.reporting.localization.Localization(__file__, 971, 13), assertRaises_198509, *[ExceptionMock_198510], **kwargs_198511)
        
        with_198513 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 971, 13), assertRaises_call_result_198512, 'with parameter', '__enter__', '__exit__')

        if with_198513:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 971)
            enter___198514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 971, 13), assertRaises_call_result_198512, '__enter__')
            with_enter_198515 = invoke(stypy.reporting.localization.Localization(__file__, 971, 13), enter___198514)
            
            # Call to assertRaises(...): (line 972)
            # Processing the call arguments (line 972)
            # Getting the type of 'ValueError' (line 972)
            ValueError_198518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 30), 'ValueError', False)
            # Getting the type of 'Stub' (line 972)
            Stub_198519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 42), 'Stub', False)
            # Processing the call keyword arguments (line 972)
            kwargs_198520 = {}
            # Getting the type of 'self' (line 972)
            self_198516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 12), 'self', False)
            # Obtaining the member 'assertRaises' of a type (line 972)
            assertRaises_198517 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 972, 12), self_198516, 'assertRaises')
            # Calling assertRaises(args, kwargs) (line 972)
            assertRaises_call_result_198521 = invoke(stypy.reporting.localization.Localization(__file__, 972, 12), assertRaises_198517, *[ValueError_198518, Stub_198519], **kwargs_198520)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 971)
            exit___198522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 971, 13), assertRaises_call_result_198512, '__exit__')
            with_exit_198523 = invoke(stypy.reporting.localization.Localization(__file__, 971, 13), exit___198522, None, None, None)

        
        # ################# End of 'testAssertRaisesCallable(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertRaisesCallable' in the type store
        # Getting the type of 'stypy_return_type' (line 957)
        stypy_return_type_198524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198524)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertRaisesCallable'
        return stypy_return_type_198524


    @norecursion
    def testAssertRaisesContext(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertRaisesContext'
        module_type_store = module_type_store.open_function_context('testAssertRaisesContext', 974, 4, False)
        # Assigning a type to the variable 'self' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertRaisesContext')
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertRaisesContext.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertRaisesContext', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertRaisesContext', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertRaisesContext(...)' code ##################

        # Declaration of the 'ExceptionMock' class
        # Getting the type of 'Exception' (line 975)
        Exception_198525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 28), 'Exception')

        class ExceptionMock(Exception_198525, ):
            pass
        
        # Assigning a type to the variable 'ExceptionMock' (line 975)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 975, 8), 'ExceptionMock', ExceptionMock)

        @norecursion
        def Stub(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'Stub'
            module_type_store = module_type_store.open_function_context('Stub', 977, 8, False)
            
            # Passed parameters checking function
            Stub.stypy_localization = localization
            Stub.stypy_type_of_self = None
            Stub.stypy_type_store = module_type_store
            Stub.stypy_function_name = 'Stub'
            Stub.stypy_param_names_list = []
            Stub.stypy_varargs_param_name = None
            Stub.stypy_kwargs_param_name = None
            Stub.stypy_call_defaults = defaults
            Stub.stypy_call_varargs = varargs
            Stub.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'Stub', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'Stub', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'Stub(...)' code ##################

            
            # Call to ExceptionMock(...): (line 978)
            # Processing the call arguments (line 978)
            str_198527 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 978, 32), 'str', 'We expect')
            # Processing the call keyword arguments (line 978)
            kwargs_198528 = {}
            # Getting the type of 'ExceptionMock' (line 978)
            ExceptionMock_198526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 18), 'ExceptionMock', False)
            # Calling ExceptionMock(args, kwargs) (line 978)
            ExceptionMock_call_result_198529 = invoke(stypy.reporting.localization.Localization(__file__, 978, 18), ExceptionMock_198526, *[str_198527], **kwargs_198528)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 978, 12), ExceptionMock_call_result_198529, 'raise parameter', BaseException)
            
            # ################# End of 'Stub(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'Stub' in the type store
            # Getting the type of 'stypy_return_type' (line 977)
            stypy_return_type_198530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198530)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'Stub'
            return stypy_return_type_198530

        # Assigning a type to the variable 'Stub' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'Stub', Stub)
        
        # Call to assertRaises(...): (line 979)
        # Processing the call arguments (line 979)
        # Getting the type of 'ExceptionMock' (line 979)
        ExceptionMock_198533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 31), 'ExceptionMock', False)
        # Processing the call keyword arguments (line 979)
        kwargs_198534 = {}
        # Getting the type of 'self' (line 979)
        self_198531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 979)
        assertRaises_198532 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 13), self_198531, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 979)
        assertRaises_call_result_198535 = invoke(stypy.reporting.localization.Localization(__file__, 979, 13), assertRaises_198532, *[ExceptionMock_198533], **kwargs_198534)
        
        with_198536 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 979, 13), assertRaises_call_result_198535, 'with parameter', '__enter__', '__exit__')

        if with_198536:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 979)
            enter___198537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 13), assertRaises_call_result_198535, '__enter__')
            with_enter_198538 = invoke(stypy.reporting.localization.Localization(__file__, 979, 13), enter___198537)
            
            # Call to Stub(...): (line 980)
            # Processing the call keyword arguments (line 980)
            kwargs_198540 = {}
            # Getting the type of 'Stub' (line 980)
            Stub_198539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 12), 'Stub', False)
            # Calling Stub(args, kwargs) (line 980)
            Stub_call_result_198541 = invoke(stypy.reporting.localization.Localization(__file__, 980, 12), Stub_198539, *[], **kwargs_198540)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 979)
            exit___198542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 13), assertRaises_call_result_198535, '__exit__')
            with_exit_198543 = invoke(stypy.reporting.localization.Localization(__file__, 979, 13), exit___198542, None, None, None)

        
        # Call to assertRaises(...): (line 982)
        # Processing the call arguments (line 982)
        
        # Obtaining an instance of the builtin type 'tuple' (line 982)
        tuple_198546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 32), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 982)
        # Adding element type (line 982)
        # Getting the type of 'ValueError' (line 982)
        ValueError_198547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 32), 'ValueError', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 32), tuple_198546, ValueError_198547)
        # Adding element type (line 982)
        # Getting the type of 'ExceptionMock' (line 982)
        ExceptionMock_198548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 44), 'ExceptionMock', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 32), tuple_198546, ExceptionMock_198548)
        
        # Processing the call keyword arguments (line 982)
        kwargs_198549 = {}
        # Getting the type of 'self' (line 982)
        self_198544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 982)
        assertRaises_198545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 13), self_198544, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 982)
        assertRaises_call_result_198550 = invoke(stypy.reporting.localization.Localization(__file__, 982, 13), assertRaises_198545, *[tuple_198546], **kwargs_198549)
        
        with_198551 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 982, 13), assertRaises_call_result_198550, 'with parameter', '__enter__', '__exit__')

        if with_198551:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 982)
            enter___198552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 13), assertRaises_call_result_198550, '__enter__')
            with_enter_198553 = invoke(stypy.reporting.localization.Localization(__file__, 982, 13), enter___198552)
            # Assigning a type to the variable 'cm' (line 982)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 982, 13), 'cm', with_enter_198553)
            
            # Call to Stub(...): (line 983)
            # Processing the call keyword arguments (line 983)
            kwargs_198555 = {}
            # Getting the type of 'Stub' (line 983)
            Stub_198554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 12), 'Stub', False)
            # Calling Stub(args, kwargs) (line 983)
            Stub_call_result_198556 = invoke(stypy.reporting.localization.Localization(__file__, 983, 12), Stub_198554, *[], **kwargs_198555)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 982)
            exit___198557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 982, 13), assertRaises_call_result_198550, '__exit__')
            with_exit_198558 = invoke(stypy.reporting.localization.Localization(__file__, 982, 13), exit___198557, None, None, None)

        
        # Call to assertIsInstance(...): (line 985)
        # Processing the call arguments (line 985)
        # Getting the type of 'cm' (line 985)
        cm_198561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 30), 'cm', False)
        # Obtaining the member 'exception' of a type (line 985)
        exception_198562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 30), cm_198561, 'exception')
        # Getting the type of 'ExceptionMock' (line 985)
        ExceptionMock_198563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 44), 'ExceptionMock', False)
        # Processing the call keyword arguments (line 985)
        kwargs_198564 = {}
        # Getting the type of 'self' (line 985)
        self_198559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 8), 'self', False)
        # Obtaining the member 'assertIsInstance' of a type (line 985)
        assertIsInstance_198560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 8), self_198559, 'assertIsInstance')
        # Calling assertIsInstance(args, kwargs) (line 985)
        assertIsInstance_call_result_198565 = invoke(stypy.reporting.localization.Localization(__file__, 985, 8), assertIsInstance_198560, *[exception_198562, ExceptionMock_198563], **kwargs_198564)
        
        
        # Call to assertEqual(...): (line 986)
        # Processing the call arguments (line 986)
        
        # Obtaining the type of the subscript
        int_198568 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 43), 'int')
        # Getting the type of 'cm' (line 986)
        cm_198569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 25), 'cm', False)
        # Obtaining the member 'exception' of a type (line 986)
        exception_198570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 25), cm_198569, 'exception')
        # Obtaining the member 'args' of a type (line 986)
        args_198571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 25), exception_198570, 'args')
        # Obtaining the member '__getitem__' of a type (line 986)
        getitem___198572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 25), args_198571, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 986)
        subscript_call_result_198573 = invoke(stypy.reporting.localization.Localization(__file__, 986, 25), getitem___198572, int_198568)
        
        str_198574 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 47), 'str', 'We expect')
        # Processing the call keyword arguments (line 986)
        kwargs_198575 = {}
        # Getting the type of 'self' (line 986)
        self_198566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 986)
        assertEqual_198567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 8), self_198566, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 986)
        assertEqual_call_result_198576 = invoke(stypy.reporting.localization.Localization(__file__, 986, 8), assertEqual_198567, *[subscript_call_result_198573, str_198574], **kwargs_198575)
        
        
        # Call to assertRaises(...): (line 988)
        # Processing the call arguments (line 988)
        # Getting the type of 'ValueError' (line 988)
        ValueError_198579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 31), 'ValueError', False)
        # Processing the call keyword arguments (line 988)
        kwargs_198580 = {}
        # Getting the type of 'self' (line 988)
        self_198577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 988)
        assertRaises_198578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 13), self_198577, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 988)
        assertRaises_call_result_198581 = invoke(stypy.reporting.localization.Localization(__file__, 988, 13), assertRaises_198578, *[ValueError_198579], **kwargs_198580)
        
        with_198582 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 988, 13), assertRaises_call_result_198581, 'with parameter', '__enter__', '__exit__')

        if with_198582:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 988)
            enter___198583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 13), assertRaises_call_result_198581, '__enter__')
            with_enter_198584 = invoke(stypy.reporting.localization.Localization(__file__, 988, 13), enter___198583)
            
            # Call to int(...): (line 989)
            # Processing the call arguments (line 989)
            str_198586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 16), 'str', '19')
            # Processing the call keyword arguments (line 989)
            int_198587 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 27), 'int')
            keyword_198588 = int_198587
            kwargs_198589 = {'base': keyword_198588}
            # Getting the type of 'int' (line 989)
            int_198585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 12), 'int', False)
            # Calling int(args, kwargs) (line 989)
            int_call_result_198590 = invoke(stypy.reporting.localization.Localization(__file__, 989, 12), int_198585, *[str_198586], **kwargs_198589)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 988)
            exit___198591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 13), assertRaises_call_result_198581, '__exit__')
            with_exit_198592 = invoke(stypy.reporting.localization.Localization(__file__, 988, 13), exit___198591, None, None, None)

        
        # Call to assertRaises(...): (line 991)
        # Processing the call arguments (line 991)
        # Getting the type of 'self' (line 991)
        self_198595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 31), 'self', False)
        # Obtaining the member 'failureException' of a type (line 991)
        failureException_198596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 31), self_198595, 'failureException')
        # Processing the call keyword arguments (line 991)
        kwargs_198597 = {}
        # Getting the type of 'self' (line 991)
        self_198593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 991)
        assertRaises_198594 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 13), self_198593, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 991)
        assertRaises_call_result_198598 = invoke(stypy.reporting.localization.Localization(__file__, 991, 13), assertRaises_198594, *[failureException_198596], **kwargs_198597)
        
        with_198599 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 991, 13), assertRaises_call_result_198598, 'with parameter', '__enter__', '__exit__')

        if with_198599:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 991)
            enter___198600 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 13), assertRaises_call_result_198598, '__enter__')
            with_enter_198601 = invoke(stypy.reporting.localization.Localization(__file__, 991, 13), enter___198600)
            
            # Call to assertRaises(...): (line 992)
            # Processing the call arguments (line 992)
            # Getting the type of 'ExceptionMock' (line 992)
            ExceptionMock_198604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 35), 'ExceptionMock', False)
            # Processing the call keyword arguments (line 992)
            kwargs_198605 = {}
            # Getting the type of 'self' (line 992)
            self_198602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 17), 'self', False)
            # Obtaining the member 'assertRaises' of a type (line 992)
            assertRaises_198603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 17), self_198602, 'assertRaises')
            # Calling assertRaises(args, kwargs) (line 992)
            assertRaises_call_result_198606 = invoke(stypy.reporting.localization.Localization(__file__, 992, 17), assertRaises_198603, *[ExceptionMock_198604], **kwargs_198605)
            
            with_198607 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 992, 17), assertRaises_call_result_198606, 'with parameter', '__enter__', '__exit__')

            if with_198607:
                # Calling the __enter__ method to initiate a with section
                # Obtaining the member '__enter__' of a type (line 992)
                enter___198608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 17), assertRaises_call_result_198606, '__enter__')
                with_enter_198609 = invoke(stypy.reporting.localization.Localization(__file__, 992, 17), enter___198608)
                pass
                # Calling the __exit__ method to finish a with section
                # Obtaining the member '__exit__' of a type (line 992)
                exit___198610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 17), assertRaises_call_result_198606, '__exit__')
                with_exit_198611 = invoke(stypy.reporting.localization.Localization(__file__, 992, 17), exit___198610, None, None, None)

            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 991)
            exit___198612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 13), assertRaises_call_result_198598, '__exit__')
            with_exit_198613 = invoke(stypy.reporting.localization.Localization(__file__, 991, 13), exit___198612, None, None, None)

        
        # Call to assertRaises(...): (line 995)
        # Processing the call arguments (line 995)
        # Getting the type of 'ExceptionMock' (line 995)
        ExceptionMock_198616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 31), 'ExceptionMock', False)
        # Processing the call keyword arguments (line 995)
        kwargs_198617 = {}
        # Getting the type of 'self' (line 995)
        self_198614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 13), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 995)
        assertRaises_198615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 13), self_198614, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 995)
        assertRaises_call_result_198618 = invoke(stypy.reporting.localization.Localization(__file__, 995, 13), assertRaises_198615, *[ExceptionMock_198616], **kwargs_198617)
        
        with_198619 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 995, 13), assertRaises_call_result_198618, 'with parameter', '__enter__', '__exit__')

        if with_198619:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 995)
            enter___198620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 13), assertRaises_call_result_198618, '__enter__')
            with_enter_198621 = invoke(stypy.reporting.localization.Localization(__file__, 995, 13), enter___198620)
            
            # Call to assertRaises(...): (line 996)
            # Processing the call arguments (line 996)
            # Getting the type of 'ValueError' (line 996)
            ValueError_198624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 30), 'ValueError', False)
            # Getting the type of 'Stub' (line 996)
            Stub_198625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 42), 'Stub', False)
            # Processing the call keyword arguments (line 996)
            kwargs_198626 = {}
            # Getting the type of 'self' (line 996)
            self_198622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 12), 'self', False)
            # Obtaining the member 'assertRaises' of a type (line 996)
            assertRaises_198623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 12), self_198622, 'assertRaises')
            # Calling assertRaises(args, kwargs) (line 996)
            assertRaises_call_result_198627 = invoke(stypy.reporting.localization.Localization(__file__, 996, 12), assertRaises_198623, *[ValueError_198624, Stub_198625], **kwargs_198626)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 995)
            exit___198628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 13), assertRaises_call_result_198618, '__exit__')
            with_exit_198629 = invoke(stypy.reporting.localization.Localization(__file__, 995, 13), exit___198628, None, None, None)

        
        # ################# End of 'testAssertRaisesContext(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertRaisesContext' in the type store
        # Getting the type of 'stypy_return_type' (line 974)
        stypy_return_type_198630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198630)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertRaisesContext'
        return stypy_return_type_198630


    @norecursion
    def testAssertRaisesRegexp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertRaisesRegexp'
        module_type_store = module_type_store.open_function_context('testAssertRaisesRegexp', 998, 4, False)
        # Assigning a type to the variable 'self' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertRaisesRegexp')
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertRaisesRegexp.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertRaisesRegexp', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertRaisesRegexp', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertRaisesRegexp(...)' code ##################

        # Declaration of the 'ExceptionMock' class
        # Getting the type of 'Exception' (line 999)
        Exception_198631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 28), 'Exception')

        class ExceptionMock(Exception_198631, ):
            pass
        
        # Assigning a type to the variable 'ExceptionMock' (line 999)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 999, 8), 'ExceptionMock', ExceptionMock)

        @norecursion
        def Stub(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'Stub'
            module_type_store = module_type_store.open_function_context('Stub', 1002, 8, False)
            
            # Passed parameters checking function
            Stub.stypy_localization = localization
            Stub.stypy_type_of_self = None
            Stub.stypy_type_store = module_type_store
            Stub.stypy_function_name = 'Stub'
            Stub.stypy_param_names_list = []
            Stub.stypy_varargs_param_name = None
            Stub.stypy_kwargs_param_name = None
            Stub.stypy_call_defaults = defaults
            Stub.stypy_call_varargs = varargs
            Stub.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'Stub', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'Stub', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'Stub(...)' code ##################

            
            # Call to ExceptionMock(...): (line 1003)
            # Processing the call arguments (line 1003)
            str_198633 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 32), 'str', 'We expect')
            # Processing the call keyword arguments (line 1003)
            kwargs_198634 = {}
            # Getting the type of 'ExceptionMock' (line 1003)
            ExceptionMock_198632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 18), 'ExceptionMock', False)
            # Calling ExceptionMock(args, kwargs) (line 1003)
            ExceptionMock_call_result_198635 = invoke(stypy.reporting.localization.Localization(__file__, 1003, 18), ExceptionMock_198632, *[str_198633], **kwargs_198634)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1003, 12), ExceptionMock_call_result_198635, 'raise parameter', BaseException)
            
            # ################# End of 'Stub(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'Stub' in the type store
            # Getting the type of 'stypy_return_type' (line 1002)
            stypy_return_type_198636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198636)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'Stub'
            return stypy_return_type_198636

        # Assigning a type to the variable 'Stub' (line 1002)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1002, 8), 'Stub', Stub)
        
        # Call to assertRaisesRegexp(...): (line 1005)
        # Processing the call arguments (line 1005)
        # Getting the type of 'ExceptionMock' (line 1005)
        ExceptionMock_198639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 32), 'ExceptionMock', False)
        
        # Call to compile(...): (line 1005)
        # Processing the call arguments (line 1005)
        str_198642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 58), 'str', 'expect$')
        # Processing the call keyword arguments (line 1005)
        kwargs_198643 = {}
        # Getting the type of 're' (line 1005)
        re_198640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 47), 're', False)
        # Obtaining the member 'compile' of a type (line 1005)
        compile_198641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 47), re_198640, 'compile')
        # Calling compile(args, kwargs) (line 1005)
        compile_call_result_198644 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 47), compile_198641, *[str_198642], **kwargs_198643)
        
        # Getting the type of 'Stub' (line 1005)
        Stub_198645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 70), 'Stub', False)
        # Processing the call keyword arguments (line 1005)
        kwargs_198646 = {}
        # Getting the type of 'self' (line 1005)
        self_198637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1005)
        assertRaisesRegexp_198638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 8), self_198637, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1005)
        assertRaisesRegexp_call_result_198647 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 8), assertRaisesRegexp_198638, *[ExceptionMock_198639, compile_call_result_198644, Stub_198645], **kwargs_198646)
        
        
        # Call to assertRaisesRegexp(...): (line 1006)
        # Processing the call arguments (line 1006)
        # Getting the type of 'ExceptionMock' (line 1006)
        ExceptionMock_198650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 32), 'ExceptionMock', False)
        str_198651 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1006, 47), 'str', 'expect$')
        # Getting the type of 'Stub' (line 1006)
        Stub_198652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 58), 'Stub', False)
        # Processing the call keyword arguments (line 1006)
        kwargs_198653 = {}
        # Getting the type of 'self' (line 1006)
        self_198648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1006, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1006)
        assertRaisesRegexp_198649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1006, 8), self_198648, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1006)
        assertRaisesRegexp_call_result_198654 = invoke(stypy.reporting.localization.Localization(__file__, 1006, 8), assertRaisesRegexp_198649, *[ExceptionMock_198650, str_198651, Stub_198652], **kwargs_198653)
        
        
        # Call to assertRaisesRegexp(...): (line 1007)
        # Processing the call arguments (line 1007)
        # Getting the type of 'ExceptionMock' (line 1007)
        ExceptionMock_198657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 32), 'ExceptionMock', False)
        unicode_198658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1007, 47), 'unicode', u'expect$')
        # Getting the type of 'Stub' (line 1007)
        Stub_198659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 59), 'Stub', False)
        # Processing the call keyword arguments (line 1007)
        kwargs_198660 = {}
        # Getting the type of 'self' (line 1007)
        self_198655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1007)
        assertRaisesRegexp_198656 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 8), self_198655, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1007)
        assertRaisesRegexp_call_result_198661 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 8), assertRaisesRegexp_198656, *[ExceptionMock_198657, unicode_198658, Stub_198659], **kwargs_198660)
        
        
        # ################# End of 'testAssertRaisesRegexp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertRaisesRegexp' in the type store
        # Getting the type of 'stypy_return_type' (line 998)
        stypy_return_type_198662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198662)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertRaisesRegexp'
        return stypy_return_type_198662


    @norecursion
    def testAssertNotRaisesRegexp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertNotRaisesRegexp'
        module_type_store = module_type_store.open_function_context('testAssertNotRaisesRegexp', 1009, 4, False)
        # Assigning a type to the variable 'self' (line 1010)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertNotRaisesRegexp')
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertNotRaisesRegexp.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertNotRaisesRegexp', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertNotRaisesRegexp', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertNotRaisesRegexp(...)' code ##################

        
        # Call to assertRaisesRegexp(...): (line 1010)
        # Processing the call arguments (line 1010)
        # Getting the type of 'self' (line 1011)
        self_198665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 16), 'self', False)
        # Obtaining the member 'failureException' of a type (line 1011)
        failureException_198666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1011, 16), self_198665, 'failureException')
        str_198667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1011, 39), 'str', '^Exception not raised$')
        # Getting the type of 'self' (line 1012)
        self_198668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 16), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1012)
        assertRaisesRegexp_198669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 16), self_198668, 'assertRaisesRegexp')
        # Getting the type of 'Exception' (line 1012)
        Exception_198670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 41), 'Exception', False)
        
        # Call to compile(...): (line 1012)
        # Processing the call arguments (line 1012)
        str_198673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1012, 63), 'str', 'x')
        # Processing the call keyword arguments (line 1012)
        kwargs_198674 = {}
        # Getting the type of 're' (line 1012)
        re_198671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 52), 're', False)
        # Obtaining the member 'compile' of a type (line 1012)
        compile_198672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 52), re_198671, 'compile')
        # Calling compile(args, kwargs) (line 1012)
        compile_call_result_198675 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 52), compile_198672, *[str_198673], **kwargs_198674)
        

        @norecursion
        def _stypy_temp_lambda_60(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_60'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_60', 1013, 16, True)
            # Passed parameters checking function
            _stypy_temp_lambda_60.stypy_localization = localization
            _stypy_temp_lambda_60.stypy_type_of_self = None
            _stypy_temp_lambda_60.stypy_type_store = module_type_store
            _stypy_temp_lambda_60.stypy_function_name = '_stypy_temp_lambda_60'
            _stypy_temp_lambda_60.stypy_param_names_list = []
            _stypy_temp_lambda_60.stypy_varargs_param_name = None
            _stypy_temp_lambda_60.stypy_kwargs_param_name = None
            _stypy_temp_lambda_60.stypy_call_defaults = defaults
            _stypy_temp_lambda_60.stypy_call_varargs = varargs
            _stypy_temp_lambda_60.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_60', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_60', [], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'None' (line 1013)
            None_198676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 24), 'None', False)
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1013)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 16), 'stypy_return_type', None_198676)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_60' in the type store
            # Getting the type of 'stypy_return_type' (line 1013)
            stypy_return_type_198677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 16), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198677)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_60'
            return stypy_return_type_198677

        # Assigning a type to the variable '_stypy_temp_lambda_60' (line 1013)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 16), '_stypy_temp_lambda_60', _stypy_temp_lambda_60)
        # Getting the type of '_stypy_temp_lambda_60' (line 1013)
        _stypy_temp_lambda_60_198678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 16), '_stypy_temp_lambda_60')
        # Processing the call keyword arguments (line 1010)
        kwargs_198679 = {}
        # Getting the type of 'self' (line 1010)
        self_198663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1010)
        assertRaisesRegexp_198664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1010, 8), self_198663, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1010)
        assertRaisesRegexp_call_result_198680 = invoke(stypy.reporting.localization.Localization(__file__, 1010, 8), assertRaisesRegexp_198664, *[failureException_198666, str_198667, assertRaisesRegexp_198669, Exception_198670, compile_call_result_198675, _stypy_temp_lambda_60_198678], **kwargs_198679)
        
        
        # Call to assertRaisesRegexp(...): (line 1014)
        # Processing the call arguments (line 1014)
        # Getting the type of 'self' (line 1015)
        self_198683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 16), 'self', False)
        # Obtaining the member 'failureException' of a type (line 1015)
        failureException_198684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 16), self_198683, 'failureException')
        str_198685 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1015, 39), 'str', '^Exception not raised$')
        # Getting the type of 'self' (line 1016)
        self_198686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 16), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1016)
        assertRaisesRegexp_198687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1016, 16), self_198686, 'assertRaisesRegexp')
        # Getting the type of 'Exception' (line 1016)
        Exception_198688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1016, 41), 'Exception', False)
        str_198689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1016, 52), 'str', 'x')

        @norecursion
        def _stypy_temp_lambda_61(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_61'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_61', 1017, 16, True)
            # Passed parameters checking function
            _stypy_temp_lambda_61.stypy_localization = localization
            _stypy_temp_lambda_61.stypy_type_of_self = None
            _stypy_temp_lambda_61.stypy_type_store = module_type_store
            _stypy_temp_lambda_61.stypy_function_name = '_stypy_temp_lambda_61'
            _stypy_temp_lambda_61.stypy_param_names_list = []
            _stypy_temp_lambda_61.stypy_varargs_param_name = None
            _stypy_temp_lambda_61.stypy_kwargs_param_name = None
            _stypy_temp_lambda_61.stypy_call_defaults = defaults
            _stypy_temp_lambda_61.stypy_call_varargs = varargs
            _stypy_temp_lambda_61.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_61', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_61', [], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'None' (line 1017)
            None_198690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 24), 'None', False)
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1017)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), 'stypy_return_type', None_198690)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_61' in the type store
            # Getting the type of 'stypy_return_type' (line 1017)
            stypy_return_type_198691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198691)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_61'
            return stypy_return_type_198691

        # Assigning a type to the variable '_stypy_temp_lambda_61' (line 1017)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), '_stypy_temp_lambda_61', _stypy_temp_lambda_61)
        # Getting the type of '_stypy_temp_lambda_61' (line 1017)
        _stypy_temp_lambda_61_198692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 16), '_stypy_temp_lambda_61')
        # Processing the call keyword arguments (line 1014)
        kwargs_198693 = {}
        # Getting the type of 'self' (line 1014)
        self_198681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1014)
        assertRaisesRegexp_198682 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 8), self_198681, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1014)
        assertRaisesRegexp_call_result_198694 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 8), assertRaisesRegexp_198682, *[failureException_198684, str_198685, assertRaisesRegexp_198687, Exception_198688, str_198689, _stypy_temp_lambda_61_198692], **kwargs_198693)
        
        
        # Call to assertRaisesRegexp(...): (line 1018)
        # Processing the call arguments (line 1018)
        # Getting the type of 'self' (line 1019)
        self_198697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1019, 16), 'self', False)
        # Obtaining the member 'failureException' of a type (line 1019)
        failureException_198698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1019, 16), self_198697, 'failureException')
        str_198699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1019, 39), 'str', '^Exception not raised$')
        # Getting the type of 'self' (line 1020)
        self_198700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 16), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1020)
        assertRaisesRegexp_198701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1020, 16), self_198700, 'assertRaisesRegexp')
        # Getting the type of 'Exception' (line 1020)
        Exception_198702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 41), 'Exception', False)
        unicode_198703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 52), 'unicode', u'x')

        @norecursion
        def _stypy_temp_lambda_62(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_62'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_62', 1021, 16, True)
            # Passed parameters checking function
            _stypy_temp_lambda_62.stypy_localization = localization
            _stypy_temp_lambda_62.stypy_type_of_self = None
            _stypy_temp_lambda_62.stypy_type_store = module_type_store
            _stypy_temp_lambda_62.stypy_function_name = '_stypy_temp_lambda_62'
            _stypy_temp_lambda_62.stypy_param_names_list = []
            _stypy_temp_lambda_62.stypy_varargs_param_name = None
            _stypy_temp_lambda_62.stypy_kwargs_param_name = None
            _stypy_temp_lambda_62.stypy_call_defaults = defaults
            _stypy_temp_lambda_62.stypy_call_varargs = varargs
            _stypy_temp_lambda_62.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_62', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_62', [], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'None' (line 1021)
            None_198704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 24), 'None', False)
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1021)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1021, 16), 'stypy_return_type', None_198704)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_62' in the type store
            # Getting the type of 'stypy_return_type' (line 1021)
            stypy_return_type_198705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 16), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198705)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_62'
            return stypy_return_type_198705

        # Assigning a type to the variable '_stypy_temp_lambda_62' (line 1021)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1021, 16), '_stypy_temp_lambda_62', _stypy_temp_lambda_62)
        # Getting the type of '_stypy_temp_lambda_62' (line 1021)
        _stypy_temp_lambda_62_198706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1021, 16), '_stypy_temp_lambda_62')
        # Processing the call keyword arguments (line 1018)
        kwargs_198707 = {}
        # Getting the type of 'self' (line 1018)
        self_198695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1018)
        assertRaisesRegexp_198696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1018, 8), self_198695, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1018)
        assertRaisesRegexp_call_result_198708 = invoke(stypy.reporting.localization.Localization(__file__, 1018, 8), assertRaisesRegexp_198696, *[failureException_198698, str_198699, assertRaisesRegexp_198701, Exception_198702, unicode_198703, _stypy_temp_lambda_62_198706], **kwargs_198707)
        
        
        # ################# End of 'testAssertNotRaisesRegexp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertNotRaisesRegexp' in the type store
        # Getting the type of 'stypy_return_type' (line 1009)
        stypy_return_type_198709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1009, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198709)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertNotRaisesRegexp'
        return stypy_return_type_198709


    @norecursion
    def testAssertRaisesRegexpInvalidRegexp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertRaisesRegexpInvalidRegexp'
        module_type_store = module_type_store.open_function_context('testAssertRaisesRegexpInvalidRegexp', 1023, 4, False)
        # Assigning a type to the variable 'self' (line 1024)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1024, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertRaisesRegexpInvalidRegexp')
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertRaisesRegexpInvalidRegexp.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertRaisesRegexpInvalidRegexp', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertRaisesRegexpInvalidRegexp', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertRaisesRegexpInvalidRegexp(...)' code ##################

        # Declaration of the 'MyExc' class
        # Getting the type of 'Exception' (line 1025)
        Exception_198710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1025, 20), 'Exception')

        class MyExc(Exception_198710, ):
            pass
        
        # Assigning a type to the variable 'MyExc' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 8), 'MyExc', MyExc)
        
        # Call to assertRaises(...): (line 1027)
        # Processing the call arguments (line 1027)
        # Getting the type of 'TypeError' (line 1027)
        TypeError_198713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 26), 'TypeError', False)
        # Getting the type of 'self' (line 1027)
        self_198714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 37), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1027)
        assertRaisesRegexp_198715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 37), self_198714, 'assertRaisesRegexp')
        # Getting the type of 'MyExc' (line 1027)
        MyExc_198716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 62), 'MyExc', False)

        @norecursion
        def _stypy_temp_lambda_63(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function '_stypy_temp_lambda_63'
            module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_63', 1027, 69, True)
            # Passed parameters checking function
            _stypy_temp_lambda_63.stypy_localization = localization
            _stypy_temp_lambda_63.stypy_type_of_self = None
            _stypy_temp_lambda_63.stypy_type_store = module_type_store
            _stypy_temp_lambda_63.stypy_function_name = '_stypy_temp_lambda_63'
            _stypy_temp_lambda_63.stypy_param_names_list = []
            _stypy_temp_lambda_63.stypy_varargs_param_name = None
            _stypy_temp_lambda_63.stypy_kwargs_param_name = None
            _stypy_temp_lambda_63.stypy_call_defaults = defaults
            _stypy_temp_lambda_63.stypy_call_varargs = varargs
            _stypy_temp_lambda_63.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_63', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Stacktrace push for error reporting
            localization.set_stack_trace('_stypy_temp_lambda_63', [], arguments)
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of the lambda function code ##################

            # Getting the type of 'True' (line 1027)
            True_198717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 77), 'True', False)
            # Assigning the return type of the lambda function
            # Assigning a type to the variable 'stypy_return_type' (line 1027)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1027, 69), 'stypy_return_type', True_198717)
            
            # ################# End of the lambda function code ##################

            # Stacktrace pop (error reporting)
            localization.unset_stack_trace()
            
            # Storing the return type of function '_stypy_temp_lambda_63' in the type store
            # Getting the type of 'stypy_return_type' (line 1027)
            stypy_return_type_198718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 69), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198718)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_stypy_temp_lambda_63'
            return stypy_return_type_198718

        # Assigning a type to the variable '_stypy_temp_lambda_63' (line 1027)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1027, 69), '_stypy_temp_lambda_63', _stypy_temp_lambda_63)
        # Getting the type of '_stypy_temp_lambda_63' (line 1027)
        _stypy_temp_lambda_63_198719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 69), '_stypy_temp_lambda_63')
        # Processing the call keyword arguments (line 1027)
        kwargs_198720 = {}
        # Getting the type of 'self' (line 1027)
        self_198711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 8), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 1027)
        assertRaises_198712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 8), self_198711, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 1027)
        assertRaises_call_result_198721 = invoke(stypy.reporting.localization.Localization(__file__, 1027, 8), assertRaises_198712, *[TypeError_198713, assertRaisesRegexp_198715, MyExc_198716, _stypy_temp_lambda_63_198719], **kwargs_198720)
        
        
        # ################# End of 'testAssertRaisesRegexpInvalidRegexp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertRaisesRegexpInvalidRegexp' in the type store
        # Getting the type of 'stypy_return_type' (line 1023)
        stypy_return_type_198722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1023, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198722)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertRaisesRegexpInvalidRegexp'
        return stypy_return_type_198722


    @norecursion
    def testAssertRaisesRegexpMismatch(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertRaisesRegexpMismatch'
        module_type_store = module_type_store.open_function_context('testAssertRaisesRegexpMismatch', 1029, 4, False)
        # Assigning a type to the variable 'self' (line 1030)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertRaisesRegexpMismatch')
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertRaisesRegexpMismatch.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertRaisesRegexpMismatch', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertRaisesRegexpMismatch', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertRaisesRegexpMismatch(...)' code ##################


        @norecursion
        def Stub(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'Stub'
            module_type_store = module_type_store.open_function_context('Stub', 1030, 8, False)
            
            # Passed parameters checking function
            Stub.stypy_localization = localization
            Stub.stypy_type_of_self = None
            Stub.stypy_type_store = module_type_store
            Stub.stypy_function_name = 'Stub'
            Stub.stypy_param_names_list = []
            Stub.stypy_varargs_param_name = None
            Stub.stypy_kwargs_param_name = None
            Stub.stypy_call_defaults = defaults
            Stub.stypy_call_varargs = varargs
            Stub.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'Stub', [], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'Stub', localization, [], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'Stub(...)' code ##################

            
            # Call to Exception(...): (line 1031)
            # Processing the call arguments (line 1031)
            str_198724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 28), 'str', 'Unexpected')
            # Processing the call keyword arguments (line 1031)
            kwargs_198725 = {}
            # Getting the type of 'Exception' (line 1031)
            Exception_198723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 18), 'Exception', False)
            # Calling Exception(args, kwargs) (line 1031)
            Exception_call_result_198726 = invoke(stypy.reporting.localization.Localization(__file__, 1031, 18), Exception_198723, *[str_198724], **kwargs_198725)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1031, 12), Exception_call_result_198726, 'raise parameter', BaseException)
            
            # ################# End of 'Stub(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'Stub' in the type store
            # Getting the type of 'stypy_return_type' (line 1030)
            stypy_return_type_198727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1030, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198727)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'Stub'
            return stypy_return_type_198727

        # Assigning a type to the variable 'Stub' (line 1030)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1030, 8), 'Stub', Stub)
        
        # Call to assertRaisesRegexp(...): (line 1033)
        # Processing the call arguments (line 1033)
        # Getting the type of 'self' (line 1034)
        self_198730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1034, 16), 'self', False)
        # Obtaining the member 'failureException' of a type (line 1034)
        failureException_198731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1034, 16), self_198730, 'failureException')
        str_198732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1035, 16), 'str', '"\\^Expected\\$" does not match "Unexpected"')
        # Getting the type of 'self' (line 1036)
        self_198733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 16), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1036)
        assertRaisesRegexp_198734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1036, 16), self_198733, 'assertRaisesRegexp')
        # Getting the type of 'Exception' (line 1036)
        Exception_198735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1036, 41), 'Exception', False)
        str_198736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1036, 52), 'str', '^Expected$')
        # Getting the type of 'Stub' (line 1037)
        Stub_198737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1037, 16), 'Stub', False)
        # Processing the call keyword arguments (line 1033)
        kwargs_198738 = {}
        # Getting the type of 'self' (line 1033)
        self_198728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1033, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1033)
        assertRaisesRegexp_198729 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1033, 8), self_198728, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1033)
        assertRaisesRegexp_call_result_198739 = invoke(stypy.reporting.localization.Localization(__file__, 1033, 8), assertRaisesRegexp_198729, *[failureException_198731, str_198732, assertRaisesRegexp_198734, Exception_198735, str_198736, Stub_198737], **kwargs_198738)
        
        
        # Call to assertRaisesRegexp(...): (line 1038)
        # Processing the call arguments (line 1038)
        # Getting the type of 'self' (line 1039)
        self_198742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1039, 16), 'self', False)
        # Obtaining the member 'failureException' of a type (line 1039)
        failureException_198743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1039, 16), self_198742, 'failureException')
        str_198744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1040, 16), 'str', '"\\^Expected\\$" does not match "Unexpected"')
        # Getting the type of 'self' (line 1041)
        self_198745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 16), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1041)
        assertRaisesRegexp_198746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1041, 16), self_198745, 'assertRaisesRegexp')
        # Getting the type of 'Exception' (line 1041)
        Exception_198747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1041, 41), 'Exception', False)
        unicode_198748 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1041, 52), 'unicode', u'^Expected$')
        # Getting the type of 'Stub' (line 1042)
        Stub_198749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1042, 16), 'Stub', False)
        # Processing the call keyword arguments (line 1038)
        kwargs_198750 = {}
        # Getting the type of 'self' (line 1038)
        self_198740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1038, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1038)
        assertRaisesRegexp_198741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1038, 8), self_198740, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1038)
        assertRaisesRegexp_call_result_198751 = invoke(stypy.reporting.localization.Localization(__file__, 1038, 8), assertRaisesRegexp_198741, *[failureException_198743, str_198744, assertRaisesRegexp_198746, Exception_198747, unicode_198748, Stub_198749], **kwargs_198750)
        
        
        # Call to assertRaisesRegexp(...): (line 1043)
        # Processing the call arguments (line 1043)
        # Getting the type of 'self' (line 1044)
        self_198754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1044, 16), 'self', False)
        # Obtaining the member 'failureException' of a type (line 1044)
        failureException_198755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1044, 16), self_198754, 'failureException')
        str_198756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1045, 16), 'str', '"\\^Expected\\$" does not match "Unexpected"')
        # Getting the type of 'self' (line 1046)
        self_198757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 16), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1046)
        assertRaisesRegexp_198758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1046, 16), self_198757, 'assertRaisesRegexp')
        # Getting the type of 'Exception' (line 1046)
        Exception_198759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1046, 41), 'Exception', False)
        
        # Call to compile(...): (line 1047)
        # Processing the call arguments (line 1047)
        str_198762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1047, 27), 'str', '^Expected$')
        # Processing the call keyword arguments (line 1047)
        kwargs_198763 = {}
        # Getting the type of 're' (line 1047)
        re_198760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 16), 're', False)
        # Obtaining the member 'compile' of a type (line 1047)
        compile_198761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1047, 16), re_198760, 'compile')
        # Calling compile(args, kwargs) (line 1047)
        compile_call_result_198764 = invoke(stypy.reporting.localization.Localization(__file__, 1047, 16), compile_198761, *[str_198762], **kwargs_198763)
        
        # Getting the type of 'Stub' (line 1047)
        Stub_198765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1047, 42), 'Stub', False)
        # Processing the call keyword arguments (line 1043)
        kwargs_198766 = {}
        # Getting the type of 'self' (line 1043)
        self_198752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1043, 8), 'self', False)
        # Obtaining the member 'assertRaisesRegexp' of a type (line 1043)
        assertRaisesRegexp_198753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1043, 8), self_198752, 'assertRaisesRegexp')
        # Calling assertRaisesRegexp(args, kwargs) (line 1043)
        assertRaisesRegexp_call_result_198767 = invoke(stypy.reporting.localization.Localization(__file__, 1043, 8), assertRaisesRegexp_198753, *[failureException_198755, str_198756, assertRaisesRegexp_198758, Exception_198759, compile_call_result_198764, Stub_198765], **kwargs_198766)
        
        
        # ################# End of 'testAssertRaisesRegexpMismatch(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertRaisesRegexpMismatch' in the type store
        # Getting the type of 'stypy_return_type' (line 1029)
        stypy_return_type_198768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198768)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertRaisesRegexpMismatch'
        return stypy_return_type_198768


    @norecursion
    def testAssertRaisesExcValue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testAssertRaisesExcValue'
        module_type_store = module_type_store.open_function_context('testAssertRaisesExcValue', 1049, 4, False)
        # Assigning a type to the variable 'self' (line 1050)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1050, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testAssertRaisesExcValue')
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testAssertRaisesExcValue.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testAssertRaisesExcValue', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testAssertRaisesExcValue', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testAssertRaisesExcValue(...)' code ##################

        # Declaration of the 'ExceptionMock' class
        # Getting the type of 'Exception' (line 1050)
        Exception_198769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1050, 28), 'Exception')

        class ExceptionMock(Exception_198769, ):
            pass
        
        # Assigning a type to the variable 'ExceptionMock' (line 1050)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1050, 8), 'ExceptionMock', ExceptionMock)

        @norecursion
        def Stub(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'Stub'
            module_type_store = module_type_store.open_function_context('Stub', 1053, 8, False)
            
            # Passed parameters checking function
            Stub.stypy_localization = localization
            Stub.stypy_type_of_self = None
            Stub.stypy_type_store = module_type_store
            Stub.stypy_function_name = 'Stub'
            Stub.stypy_param_names_list = ['foo']
            Stub.stypy_varargs_param_name = None
            Stub.stypy_kwargs_param_name = None
            Stub.stypy_call_defaults = defaults
            Stub.stypy_call_varargs = varargs
            Stub.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'Stub', ['foo'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'Stub', localization, ['foo'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'Stub(...)' code ##################

            
            # Call to ExceptionMock(...): (line 1054)
            # Processing the call arguments (line 1054)
            # Getting the type of 'foo' (line 1054)
            foo_198771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 32), 'foo', False)
            # Processing the call keyword arguments (line 1054)
            kwargs_198772 = {}
            # Getting the type of 'ExceptionMock' (line 1054)
            ExceptionMock_198770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1054, 18), 'ExceptionMock', False)
            # Calling ExceptionMock(args, kwargs) (line 1054)
            ExceptionMock_call_result_198773 = invoke(stypy.reporting.localization.Localization(__file__, 1054, 18), ExceptionMock_198770, *[foo_198771], **kwargs_198772)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1054, 12), ExceptionMock_call_result_198773, 'raise parameter', BaseException)
            
            # ################# End of 'Stub(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'Stub' in the type store
            # Getting the type of 'stypy_return_type' (line 1053)
            stypy_return_type_198774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1053, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198774)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'Stub'
            return stypy_return_type_198774

        # Assigning a type to the variable 'Stub' (line 1053)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1053, 8), 'Stub', Stub)
        
        # Assigning a Str to a Name (line 1055):
        
        # Assigning a Str to a Name (line 1055):
        str_198775 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1055, 12), 'str', 'particular value')
        # Assigning a type to the variable 'v' (line 1055)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1055, 8), 'v', str_198775)
        
        # Assigning a Call to a Name (line 1057):
        
        # Assigning a Call to a Name (line 1057):
        
        # Call to assertRaises(...): (line 1057)
        # Processing the call arguments (line 1057)
        # Getting the type of 'ExceptionMock' (line 1057)
        ExceptionMock_198778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 32), 'ExceptionMock', False)
        # Processing the call keyword arguments (line 1057)
        kwargs_198779 = {}
        # Getting the type of 'self' (line 1057)
        self_198776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1057, 14), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 1057)
        assertRaises_198777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1057, 14), self_198776, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 1057)
        assertRaises_call_result_198780 = invoke(stypy.reporting.localization.Localization(__file__, 1057, 14), assertRaises_198777, *[ExceptionMock_198778], **kwargs_198779)
        
        # Assigning a type to the variable 'ctx' (line 1057)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1057, 8), 'ctx', assertRaises_call_result_198780)
        # Getting the type of 'ctx' (line 1058)
        ctx_198781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1058, 13), 'ctx')
        with_198782 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1058, 13), ctx_198781, 'with parameter', '__enter__', '__exit__')

        if with_198782:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1058)
            enter___198783 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 13), ctx_198781, '__enter__')
            with_enter_198784 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 13), enter___198783)
            
            # Call to Stub(...): (line 1059)
            # Processing the call arguments (line 1059)
            # Getting the type of 'v' (line 1059)
            v_198786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 17), 'v', False)
            # Processing the call keyword arguments (line 1059)
            kwargs_198787 = {}
            # Getting the type of 'Stub' (line 1059)
            Stub_198785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1059, 12), 'Stub', False)
            # Calling Stub(args, kwargs) (line 1059)
            Stub_call_result_198788 = invoke(stypy.reporting.localization.Localization(__file__, 1059, 12), Stub_198785, *[v_198786], **kwargs_198787)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1058)
            exit___198789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1058, 13), ctx_198781, '__exit__')
            with_exit_198790 = invoke(stypy.reporting.localization.Localization(__file__, 1058, 13), exit___198789, None, None, None)

        
        # Assigning a Attribute to a Name (line 1060):
        
        # Assigning a Attribute to a Name (line 1060):
        # Getting the type of 'ctx' (line 1060)
        ctx_198791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1060, 12), 'ctx')
        # Obtaining the member 'exception' of a type (line 1060)
        exception_198792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1060, 12), ctx_198791, 'exception')
        # Assigning a type to the variable 'e' (line 1060)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1060, 8), 'e', exception_198792)
        
        # Call to assertIsInstance(...): (line 1061)
        # Processing the call arguments (line 1061)
        # Getting the type of 'e' (line 1061)
        e_198795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 30), 'e', False)
        # Getting the type of 'ExceptionMock' (line 1061)
        ExceptionMock_198796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 33), 'ExceptionMock', False)
        # Processing the call keyword arguments (line 1061)
        kwargs_198797 = {}
        # Getting the type of 'self' (line 1061)
        self_198793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1061, 8), 'self', False)
        # Obtaining the member 'assertIsInstance' of a type (line 1061)
        assertIsInstance_198794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1061, 8), self_198793, 'assertIsInstance')
        # Calling assertIsInstance(args, kwargs) (line 1061)
        assertIsInstance_call_result_198798 = invoke(stypy.reporting.localization.Localization(__file__, 1061, 8), assertIsInstance_198794, *[e_198795, ExceptionMock_198796], **kwargs_198797)
        
        
        # Call to assertEqual(...): (line 1062)
        # Processing the call arguments (line 1062)
        
        # Obtaining the type of the subscript
        int_198801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1062, 32), 'int')
        # Getting the type of 'e' (line 1062)
        e_198802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 25), 'e', False)
        # Obtaining the member 'args' of a type (line 1062)
        args_198803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 25), e_198802, 'args')
        # Obtaining the member '__getitem__' of a type (line 1062)
        getitem___198804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 25), args_198803, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 1062)
        subscript_call_result_198805 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 25), getitem___198804, int_198801)
        
        # Getting the type of 'v' (line 1062)
        v_198806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 36), 'v', False)
        # Processing the call keyword arguments (line 1062)
        kwargs_198807 = {}
        # Getting the type of 'self' (line 1062)
        self_198799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1062, 8), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 1062)
        assertEqual_198800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1062, 8), self_198799, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 1062)
        assertEqual_call_result_198808 = invoke(stypy.reporting.localization.Localization(__file__, 1062, 8), assertEqual_198800, *[subscript_call_result_198805, v_198806], **kwargs_198807)
        
        
        # ################# End of 'testAssertRaisesExcValue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testAssertRaisesExcValue' in the type store
        # Getting the type of 'stypy_return_type' (line 1049)
        stypy_return_type_198809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1049, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198809)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testAssertRaisesExcValue'
        return stypy_return_type_198809


    @norecursion
    def testSynonymAssertMethodNames(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testSynonymAssertMethodNames'
        module_type_store = module_type_store.open_function_context('testSynonymAssertMethodNames', 1064, 4, False)
        # Assigning a type to the variable 'self' (line 1065)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1065, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testSynonymAssertMethodNames')
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testSynonymAssertMethodNames.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testSynonymAssertMethodNames', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testSynonymAssertMethodNames', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testSynonymAssertMethodNames(...)' code ##################

        str_198810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1071, (-1)), 'str', 'Test undocumented method name synonyms.\n\n        Please do not use these methods names in your own code.\n\n        This test confirms their continued existence and functionality\n        in order to avoid breaking existing code.\n        ')
        
        # Call to assertNotEquals(...): (line 1072)
        # Processing the call arguments (line 1072)
        int_198813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 29), 'int')
        int_198814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1072, 32), 'int')
        # Processing the call keyword arguments (line 1072)
        kwargs_198815 = {}
        # Getting the type of 'self' (line 1072)
        self_198811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1072, 8), 'self', False)
        # Obtaining the member 'assertNotEquals' of a type (line 1072)
        assertNotEquals_198812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1072, 8), self_198811, 'assertNotEquals')
        # Calling assertNotEquals(args, kwargs) (line 1072)
        assertNotEquals_call_result_198816 = invoke(stypy.reporting.localization.Localization(__file__, 1072, 8), assertNotEquals_198812, *[int_198813, int_198814], **kwargs_198815)
        
        
        # Call to assertEquals(...): (line 1073)
        # Processing the call arguments (line 1073)
        int_198819 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 26), 'int')
        int_198820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1073, 29), 'int')
        # Processing the call keyword arguments (line 1073)
        kwargs_198821 = {}
        # Getting the type of 'self' (line 1073)
        self_198817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1073, 8), 'self', False)
        # Obtaining the member 'assertEquals' of a type (line 1073)
        assertEquals_198818 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1073, 8), self_198817, 'assertEquals')
        # Calling assertEquals(args, kwargs) (line 1073)
        assertEquals_call_result_198822 = invoke(stypy.reporting.localization.Localization(__file__, 1073, 8), assertEquals_198818, *[int_198819, int_198820], **kwargs_198821)
        
        
        # Call to assertAlmostEquals(...): (line 1074)
        # Processing the call arguments (line 1074)
        float_198825 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 32), 'float')
        float_198826 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1074, 37), 'float')
        # Processing the call keyword arguments (line 1074)
        kwargs_198827 = {}
        # Getting the type of 'self' (line 1074)
        self_198823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1074, 8), 'self', False)
        # Obtaining the member 'assertAlmostEquals' of a type (line 1074)
        assertAlmostEquals_198824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1074, 8), self_198823, 'assertAlmostEquals')
        # Calling assertAlmostEquals(args, kwargs) (line 1074)
        assertAlmostEquals_call_result_198828 = invoke(stypy.reporting.localization.Localization(__file__, 1074, 8), assertAlmostEquals_198824, *[float_198825, float_198826], **kwargs_198827)
        
        
        # Call to assertNotAlmostEquals(...): (line 1075)
        # Processing the call arguments (line 1075)
        float_198831 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 35), 'float')
        float_198832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1075, 40), 'float')
        # Processing the call keyword arguments (line 1075)
        kwargs_198833 = {}
        # Getting the type of 'self' (line 1075)
        self_198829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1075, 8), 'self', False)
        # Obtaining the member 'assertNotAlmostEquals' of a type (line 1075)
        assertNotAlmostEquals_198830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1075, 8), self_198829, 'assertNotAlmostEquals')
        # Calling assertNotAlmostEquals(args, kwargs) (line 1075)
        assertNotAlmostEquals_call_result_198834 = invoke(stypy.reporting.localization.Localization(__file__, 1075, 8), assertNotAlmostEquals_198830, *[float_198831, float_198832], **kwargs_198833)
        
        
        # Call to assert_(...): (line 1076)
        # Processing the call arguments (line 1076)
        # Getting the type of 'True' (line 1076)
        True_198837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 21), 'True', False)
        # Processing the call keyword arguments (line 1076)
        kwargs_198838 = {}
        # Getting the type of 'self' (line 1076)
        self_198835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1076, 8), 'self', False)
        # Obtaining the member 'assert_' of a type (line 1076)
        assert__198836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1076, 8), self_198835, 'assert_')
        # Calling assert_(args, kwargs) (line 1076)
        assert__call_result_198839 = invoke(stypy.reporting.localization.Localization(__file__, 1076, 8), assert__198836, *[True_198837], **kwargs_198838)
        
        
        # ################# End of 'testSynonymAssertMethodNames(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testSynonymAssertMethodNames' in the type store
        # Getting the type of 'stypy_return_type' (line 1064)
        stypy_return_type_198840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1064, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198840)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testSynonymAssertMethodNames'
        return stypy_return_type_198840


    @norecursion
    def testPendingDeprecationMethodNames(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testPendingDeprecationMethodNames'
        module_type_store = module_type_store.open_function_context('testPendingDeprecationMethodNames', 1078, 4, False)
        # Assigning a type to the variable 'self' (line 1079)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1079, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testPendingDeprecationMethodNames')
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testPendingDeprecationMethodNames.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testPendingDeprecationMethodNames', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testPendingDeprecationMethodNames', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testPendingDeprecationMethodNames(...)' code ##################

        str_198841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1082, (-1)), 'str', 'Test fail* methods pending deprecation, they will warn in 3.2.\n\n        Do not use these methods.  They will go away in 3.3.\n        ')
        
        # Call to check_warnings(...): (line 1083)
        # Processing the call keyword arguments (line 1083)
        kwargs_198844 = {}
        # Getting the type of 'test_support' (line 1083)
        test_support_198842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1083, 13), 'test_support', False)
        # Obtaining the member 'check_warnings' of a type (line 1083)
        check_warnings_198843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1083, 13), test_support_198842, 'check_warnings')
        # Calling check_warnings(args, kwargs) (line 1083)
        check_warnings_call_result_198845 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 13), check_warnings_198843, *[], **kwargs_198844)
        
        with_198846 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1083, 13), check_warnings_call_result_198845, 'with parameter', '__enter__', '__exit__')

        if with_198846:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1083)
            enter___198847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1083, 13), check_warnings_call_result_198845, '__enter__')
            with_enter_198848 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 13), enter___198847)
            
            # Call to failIfEqual(...): (line 1084)
            # Processing the call arguments (line 1084)
            int_198851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 29), 'int')
            int_198852 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1084, 32), 'int')
            # Processing the call keyword arguments (line 1084)
            kwargs_198853 = {}
            # Getting the type of 'self' (line 1084)
            self_198849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1084, 12), 'self', False)
            # Obtaining the member 'failIfEqual' of a type (line 1084)
            failIfEqual_198850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1084, 12), self_198849, 'failIfEqual')
            # Calling failIfEqual(args, kwargs) (line 1084)
            failIfEqual_call_result_198854 = invoke(stypy.reporting.localization.Localization(__file__, 1084, 12), failIfEqual_198850, *[int_198851, int_198852], **kwargs_198853)
            
            
            # Call to failUnlessEqual(...): (line 1085)
            # Processing the call arguments (line 1085)
            int_198857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 33), 'int')
            int_198858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1085, 36), 'int')
            # Processing the call keyword arguments (line 1085)
            kwargs_198859 = {}
            # Getting the type of 'self' (line 1085)
            self_198855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1085, 12), 'self', False)
            # Obtaining the member 'failUnlessEqual' of a type (line 1085)
            failUnlessEqual_198856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1085, 12), self_198855, 'failUnlessEqual')
            # Calling failUnlessEqual(args, kwargs) (line 1085)
            failUnlessEqual_call_result_198860 = invoke(stypy.reporting.localization.Localization(__file__, 1085, 12), failUnlessEqual_198856, *[int_198857, int_198858], **kwargs_198859)
            
            
            # Call to failUnlessAlmostEqual(...): (line 1086)
            # Processing the call arguments (line 1086)
            float_198863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 39), 'float')
            float_198864 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1086, 44), 'float')
            # Processing the call keyword arguments (line 1086)
            kwargs_198865 = {}
            # Getting the type of 'self' (line 1086)
            self_198861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1086, 12), 'self', False)
            # Obtaining the member 'failUnlessAlmostEqual' of a type (line 1086)
            failUnlessAlmostEqual_198862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1086, 12), self_198861, 'failUnlessAlmostEqual')
            # Calling failUnlessAlmostEqual(args, kwargs) (line 1086)
            failUnlessAlmostEqual_call_result_198866 = invoke(stypy.reporting.localization.Localization(__file__, 1086, 12), failUnlessAlmostEqual_198862, *[float_198863, float_198864], **kwargs_198865)
            
            
            # Call to failIfAlmostEqual(...): (line 1087)
            # Processing the call arguments (line 1087)
            float_198869 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 35), 'float')
            float_198870 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1087, 40), 'float')
            # Processing the call keyword arguments (line 1087)
            kwargs_198871 = {}
            # Getting the type of 'self' (line 1087)
            self_198867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1087, 12), 'self', False)
            # Obtaining the member 'failIfAlmostEqual' of a type (line 1087)
            failIfAlmostEqual_198868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1087, 12), self_198867, 'failIfAlmostEqual')
            # Calling failIfAlmostEqual(args, kwargs) (line 1087)
            failIfAlmostEqual_call_result_198872 = invoke(stypy.reporting.localization.Localization(__file__, 1087, 12), failIfAlmostEqual_198868, *[float_198869, float_198870], **kwargs_198871)
            
            
            # Call to failUnless(...): (line 1088)
            # Processing the call arguments (line 1088)
            # Getting the type of 'True' (line 1088)
            True_198875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 28), 'True', False)
            # Processing the call keyword arguments (line 1088)
            kwargs_198876 = {}
            # Getting the type of 'self' (line 1088)
            self_198873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1088, 12), 'self', False)
            # Obtaining the member 'failUnless' of a type (line 1088)
            failUnless_198874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1088, 12), self_198873, 'failUnless')
            # Calling failUnless(args, kwargs) (line 1088)
            failUnless_call_result_198877 = invoke(stypy.reporting.localization.Localization(__file__, 1088, 12), failUnless_198874, *[True_198875], **kwargs_198876)
            
            
            # Call to failUnlessRaises(...): (line 1089)
            # Processing the call arguments (line 1089)
            # Getting the type of 'TypeError' (line 1089)
            TypeError_198880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 34), 'TypeError', False)

            @norecursion
            def _stypy_temp_lambda_64(localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function '_stypy_temp_lambda_64'
                module_type_store = module_type_store.open_function_context('_stypy_temp_lambda_64', 1089, 45, True)
                # Passed parameters checking function
                _stypy_temp_lambda_64.stypy_localization = localization
                _stypy_temp_lambda_64.stypy_type_of_self = None
                _stypy_temp_lambda_64.stypy_type_store = module_type_store
                _stypy_temp_lambda_64.stypy_function_name = '_stypy_temp_lambda_64'
                _stypy_temp_lambda_64.stypy_param_names_list = ['_']
                _stypy_temp_lambda_64.stypy_varargs_param_name = None
                _stypy_temp_lambda_64.stypy_kwargs_param_name = None
                _stypy_temp_lambda_64.stypy_call_defaults = defaults
                _stypy_temp_lambda_64.stypy_call_varargs = varargs
                _stypy_temp_lambda_64.stypy_call_kwargs = kwargs
                arguments = process_argument_values(localization, None, module_type_store, '_stypy_temp_lambda_64', ['_'], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Stacktrace push for error reporting
                localization.set_stack_trace('_stypy_temp_lambda_64', ['_'], arguments)
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of the lambda function code ##################

                float_198881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 55), 'float')
                unicode_198882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1089, 62), 'unicode', u'spam')
                # Applying the binary operator '+' (line 1089)
                result_add_198883 = python_operator(stypy.reporting.localization.Localization(__file__, 1089, 55), '+', float_198881, unicode_198882)
                
                # Assigning the return type of the lambda function
                # Assigning a type to the variable 'stypy_return_type' (line 1089)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1089, 45), 'stypy_return_type', result_add_198883)
                
                # ################# End of the lambda function code ##################

                # Stacktrace pop (error reporting)
                localization.unset_stack_trace()
                
                # Storing the return type of function '_stypy_temp_lambda_64' in the type store
                # Getting the type of 'stypy_return_type' (line 1089)
                stypy_return_type_198884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 45), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_198884)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function '_stypy_temp_lambda_64'
                return stypy_return_type_198884

            # Assigning a type to the variable '_stypy_temp_lambda_64' (line 1089)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1089, 45), '_stypy_temp_lambda_64', _stypy_temp_lambda_64)
            # Getting the type of '_stypy_temp_lambda_64' (line 1089)
            _stypy_temp_lambda_64_198885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 45), '_stypy_temp_lambda_64')
            # Processing the call keyword arguments (line 1089)
            kwargs_198886 = {}
            # Getting the type of 'self' (line 1089)
            self_198878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1089, 12), 'self', False)
            # Obtaining the member 'failUnlessRaises' of a type (line 1089)
            failUnlessRaises_198879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1089, 12), self_198878, 'failUnlessRaises')
            # Calling failUnlessRaises(args, kwargs) (line 1089)
            failUnlessRaises_call_result_198887 = invoke(stypy.reporting.localization.Localization(__file__, 1089, 12), failUnlessRaises_198879, *[TypeError_198880, _stypy_temp_lambda_64_198885], **kwargs_198886)
            
            
            # Call to failIf(...): (line 1090)
            # Processing the call arguments (line 1090)
            # Getting the type of 'False' (line 1090)
            False_198890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 24), 'False', False)
            # Processing the call keyword arguments (line 1090)
            kwargs_198891 = {}
            # Getting the type of 'self' (line 1090)
            self_198888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1090, 12), 'self', False)
            # Obtaining the member 'failIf' of a type (line 1090)
            failIf_198889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1090, 12), self_198888, 'failIf')
            # Calling failIf(args, kwargs) (line 1090)
            failIf_call_result_198892 = invoke(stypy.reporting.localization.Localization(__file__, 1090, 12), failIf_198889, *[False_198890], **kwargs_198891)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1083)
            exit___198893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1083, 13), check_warnings_call_result_198845, '__exit__')
            with_exit_198894 = invoke(stypy.reporting.localization.Localization(__file__, 1083, 13), exit___198893, None, None, None)

        
        # ################# End of 'testPendingDeprecationMethodNames(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testPendingDeprecationMethodNames' in the type store
        # Getting the type of 'stypy_return_type' (line 1078)
        stypy_return_type_198895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1078, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198895)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testPendingDeprecationMethodNames'
        return stypy_return_type_198895


    @norecursion
    def testDeepcopy(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testDeepcopy'
        module_type_store = module_type_store.open_function_context('testDeepcopy', 1092, 4, False)
        # Assigning a type to the variable 'self' (line 1093)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1093, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testDeepcopy')
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testDeepcopy.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testDeepcopy', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testDeepcopy', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testDeepcopy(...)' code ##################

        # Declaration of the 'TestableTest' class
        # Getting the type of 'unittest' (line 1094)
        unittest_198896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1094, 27), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1094)
        TestCase_198897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1094, 27), unittest_198896, 'TestCase')

        class TestableTest(TestCase_198897, ):

            @norecursion
            def testNothing(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'testNothing'
                module_type_store = module_type_store.open_function_context('testNothing', 1095, 12, False)
                # Assigning a type to the variable 'self' (line 1096)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1096, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                TestableTest.testNothing.__dict__.__setitem__('stypy_localization', localization)
                TestableTest.testNothing.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                TestableTest.testNothing.__dict__.__setitem__('stypy_type_store', module_type_store)
                TestableTest.testNothing.__dict__.__setitem__('stypy_function_name', 'TestableTest.testNothing')
                TestableTest.testNothing.__dict__.__setitem__('stypy_param_names_list', [])
                TestableTest.testNothing.__dict__.__setitem__('stypy_varargs_param_name', None)
                TestableTest.testNothing.__dict__.__setitem__('stypy_kwargs_param_name', None)
                TestableTest.testNothing.__dict__.__setitem__('stypy_call_defaults', defaults)
                TestableTest.testNothing.__dict__.__setitem__('stypy_call_varargs', varargs)
                TestableTest.testNothing.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                TestableTest.testNothing.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'TestableTest.testNothing', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'testNothing', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'testNothing(...)' code ##################

                pass
                
                # ################# End of 'testNothing(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'testNothing' in the type store
                # Getting the type of 'stypy_return_type' (line 1095)
                stypy_return_type_198898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1095, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_198898)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'testNothing'
                return stypy_return_type_198898

        
        # Assigning a type to the variable 'TestableTest' (line 1094)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1094, 8), 'TestableTest', TestableTest)
        
        # Assigning a Call to a Name (line 1098):
        
        # Assigning a Call to a Name (line 1098):
        
        # Call to TestableTest(...): (line 1098)
        # Processing the call arguments (line 1098)
        str_198900 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1098, 28), 'str', 'testNothing')
        # Processing the call keyword arguments (line 1098)
        kwargs_198901 = {}
        # Getting the type of 'TestableTest' (line 1098)
        TestableTest_198899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1098, 15), 'TestableTest', False)
        # Calling TestableTest(args, kwargs) (line 1098)
        TestableTest_call_result_198902 = invoke(stypy.reporting.localization.Localization(__file__, 1098, 15), TestableTest_198899, *[str_198900], **kwargs_198901)
        
        # Assigning a type to the variable 'test' (line 1098)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1098, 8), 'test', TestableTest_call_result_198902)
        
        # Call to deepcopy(...): (line 1101)
        # Processing the call arguments (line 1101)
        # Getting the type of 'test' (line 1101)
        test_198904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 17), 'test', False)
        # Processing the call keyword arguments (line 1101)
        kwargs_198905 = {}
        # Getting the type of 'deepcopy' (line 1101)
        deepcopy_198903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1101, 8), 'deepcopy', False)
        # Calling deepcopy(args, kwargs) (line 1101)
        deepcopy_call_result_198906 = invoke(stypy.reporting.localization.Localization(__file__, 1101, 8), deepcopy_198903, *[test_198904], **kwargs_198905)
        
        
        # ################# End of 'testDeepcopy(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testDeepcopy' in the type store
        # Getting the type of 'stypy_return_type' (line 1092)
        stypy_return_type_198907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1092, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198907)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testDeepcopy'
        return stypy_return_type_198907


    @norecursion
    def testKeyboardInterrupt(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testKeyboardInterrupt'
        module_type_store = module_type_store.open_function_context('testKeyboardInterrupt', 1103, 4, False)
        # Assigning a type to the variable 'self' (line 1104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1104, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testKeyboardInterrupt')
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testKeyboardInterrupt.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testKeyboardInterrupt', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testKeyboardInterrupt', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testKeyboardInterrupt(...)' code ##################


        @norecursion
        def _raise(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            # Getting the type of 'None' (line 1104)
            None_198908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1104, 24), 'None')
            defaults = [None_198908]
            # Create a new context for function '_raise'
            module_type_store = module_type_store.open_function_context('_raise', 1104, 8, False)
            
            # Passed parameters checking function
            _raise.stypy_localization = localization
            _raise.stypy_type_of_self = None
            _raise.stypy_type_store = module_type_store
            _raise.stypy_function_name = '_raise'
            _raise.stypy_param_names_list = ['self']
            _raise.stypy_varargs_param_name = None
            _raise.stypy_kwargs_param_name = None
            _raise.stypy_call_defaults = defaults
            _raise.stypy_call_varargs = varargs
            _raise.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_raise', ['self'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, '_raise', localization, ['self'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '_raise(...)' code ##################

            # Getting the type of 'KeyboardInterrupt' (line 1105)
            KeyboardInterrupt_198909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1105, 18), 'KeyboardInterrupt')
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1105, 12), KeyboardInterrupt_198909, 'raise parameter', BaseException)
            
            # ################# End of '_raise(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function '_raise' in the type store
            # Getting the type of 'stypy_return_type' (line 1104)
            stypy_return_type_198910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1104, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198910)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_raise'
            return stypy_return_type_198910

        # Assigning a type to the variable '_raise' (line 1104)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1104, 8), '_raise', _raise)

        @norecursion
        def nothing(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'nothing'
            module_type_store = module_type_store.open_function_context('nothing', 1106, 8, False)
            
            # Passed parameters checking function
            nothing.stypy_localization = localization
            nothing.stypy_type_of_self = None
            nothing.stypy_type_store = module_type_store
            nothing.stypy_function_name = 'nothing'
            nothing.stypy_param_names_list = ['self']
            nothing.stypy_varargs_param_name = None
            nothing.stypy_kwargs_param_name = None
            nothing.stypy_call_defaults = defaults
            nothing.stypy_call_varargs = varargs
            nothing.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'nothing', ['self'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'nothing', localization, ['self'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'nothing(...)' code ##################

            pass
            
            # ################# End of 'nothing(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'nothing' in the type store
            # Getting the type of 'stypy_return_type' (line 1106)
            stypy_return_type_198911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1106, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198911)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'nothing'
            return stypy_return_type_198911

        # Assigning a type to the variable 'nothing' (line 1106)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1106, 8), 'nothing', nothing)
        # Declaration of the 'Test1' class
        # Getting the type of 'unittest' (line 1109)
        unittest_198912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1109, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1109)
        TestCase_198913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1109, 20), unittest_198912, 'TestCase')

        class Test1(TestCase_198913, ):
            
            # Assigning a Name to a Name (line 1110):
            
            # Assigning a Name to a Name (line 1110):
            # Getting the type of '_raise' (line 1110)
            _raise_198914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1110, 29), '_raise')
            # Assigning a type to the variable 'test_something' (line 1110)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1110, 12), 'test_something', _raise_198914)
        
        # Assigning a type to the variable 'Test1' (line 1109)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1109, 8), 'Test1', Test1)
        # Declaration of the 'Test2' class
        # Getting the type of 'unittest' (line 1112)
        unittest_198915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1112, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1112)
        TestCase_198916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1112, 20), unittest_198915, 'TestCase')

        class Test2(TestCase_198916, ):
            
            # Assigning a Name to a Name (line 1113):
            
            # Assigning a Name to a Name (line 1113):
            # Getting the type of '_raise' (line 1113)
            _raise_198917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1113, 20), '_raise')
            # Assigning a type to the variable 'setUp' (line 1113)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1113, 12), 'setUp', _raise_198917)
            
            # Assigning a Name to a Name (line 1114):
            
            # Assigning a Name to a Name (line 1114):
            # Getting the type of 'nothing' (line 1114)
            nothing_198918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1114, 29), 'nothing')
            # Assigning a type to the variable 'test_something' (line 1114)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1114, 12), 'test_something', nothing_198918)
        
        # Assigning a type to the variable 'Test2' (line 1112)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1112, 8), 'Test2', Test2)
        # Declaration of the 'Test3' class
        # Getting the type of 'unittest' (line 1116)
        unittest_198919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1116, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1116)
        TestCase_198920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1116, 20), unittest_198919, 'TestCase')

        class Test3(TestCase_198920, ):
            
            # Assigning a Name to a Name (line 1117):
            
            # Assigning a Name to a Name (line 1117):
            # Getting the type of 'nothing' (line 1117)
            nothing_198921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1117, 29), 'nothing')
            # Assigning a type to the variable 'test_something' (line 1117)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1117, 12), 'test_something', nothing_198921)
            
            # Assigning a Name to a Name (line 1118):
            
            # Assigning a Name to a Name (line 1118):
            # Getting the type of '_raise' (line 1118)
            _raise_198922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1118, 23), '_raise')
            # Assigning a type to the variable 'tearDown' (line 1118)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1118, 12), 'tearDown', _raise_198922)
        
        # Assigning a type to the variable 'Test3' (line 1116)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1116, 8), 'Test3', Test3)
        # Declaration of the 'Test4' class
        # Getting the type of 'unittest' (line 1120)
        unittest_198923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1120, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1120)
        TestCase_198924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1120, 20), unittest_198923, 'TestCase')

        class Test4(TestCase_198924, ):

            @norecursion
            def test_something(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test_something'
                module_type_store = module_type_store.open_function_context('test_something', 1121, 12, False)
                # Assigning a type to the variable 'self' (line 1122)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1122, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test4.test_something.__dict__.__setitem__('stypy_localization', localization)
                Test4.test_something.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test4.test_something.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test4.test_something.__dict__.__setitem__('stypy_function_name', 'Test4.test_something')
                Test4.test_something.__dict__.__setitem__('stypy_param_names_list', [])
                Test4.test_something.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test4.test_something.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test4.test_something.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test4.test_something.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test4.test_something.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test4.test_something.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test4.test_something', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test_something', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test_something(...)' code ##################

                
                # Call to addCleanup(...): (line 1122)
                # Processing the call arguments (line 1122)
                # Getting the type of '_raise' (line 1122)
                _raise_198927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 32), '_raise', False)
                # Processing the call keyword arguments (line 1122)
                kwargs_198928 = {}
                # Getting the type of 'self' (line 1122)
                self_198925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1122, 16), 'self', False)
                # Obtaining the member 'addCleanup' of a type (line 1122)
                addCleanup_198926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1122, 16), self_198925, 'addCleanup')
                # Calling addCleanup(args, kwargs) (line 1122)
                addCleanup_call_result_198929 = invoke(stypy.reporting.localization.Localization(__file__, 1122, 16), addCleanup_198926, *[_raise_198927], **kwargs_198928)
                
                
                # ################# End of 'test_something(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test_something' in the type store
                # Getting the type of 'stypy_return_type' (line 1121)
                stypy_return_type_198930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1121, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_198930)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test_something'
                return stypy_return_type_198930

        
        # Assigning a type to the variable 'Test4' (line 1120)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1120, 8), 'Test4', Test4)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1124)
        tuple_198931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1124, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1124)
        # Adding element type (line 1124)
        # Getting the type of 'Test1' (line 1124)
        Test1_198932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 22), 'Test1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 22), tuple_198931, Test1_198932)
        # Adding element type (line 1124)
        # Getting the type of 'Test2' (line 1124)
        Test2_198933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 29), 'Test2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 22), tuple_198931, Test2_198933)
        # Adding element type (line 1124)
        # Getting the type of 'Test3' (line 1124)
        Test3_198934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 36), 'Test3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 22), tuple_198931, Test3_198934)
        # Adding element type (line 1124)
        # Getting the type of 'Test4' (line 1124)
        Test4_198935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1124, 43), 'Test4')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1124, 22), tuple_198931, Test4_198935)
        
        # Testing the type of a for loop iterable (line 1124)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1124, 8), tuple_198931)
        # Getting the type of the for loop variable (line 1124)
        for_loop_var_198936 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1124, 8), tuple_198931)
        # Assigning a type to the variable 'klass' (line 1124)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1124, 8), 'klass', for_loop_var_198936)
        # SSA begins for a for statement (line 1124)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Call to assertRaises(...): (line 1125)
        # Processing the call arguments (line 1125)
        # Getting the type of 'KeyboardInterrupt' (line 1125)
        KeyboardInterrupt_198939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 35), 'KeyboardInterrupt', False)
        # Processing the call keyword arguments (line 1125)
        kwargs_198940 = {}
        # Getting the type of 'self' (line 1125)
        self_198937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1125, 17), 'self', False)
        # Obtaining the member 'assertRaises' of a type (line 1125)
        assertRaises_198938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1125, 17), self_198937, 'assertRaises')
        # Calling assertRaises(args, kwargs) (line 1125)
        assertRaises_call_result_198941 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 17), assertRaises_198938, *[KeyboardInterrupt_198939], **kwargs_198940)
        
        with_198942 = ensure_var_has_members(stypy.reporting.localization.Localization(__file__, 1125, 17), assertRaises_call_result_198941, 'with parameter', '__enter__', '__exit__')

        if with_198942:
            # Calling the __enter__ method to initiate a with section
            # Obtaining the member '__enter__' of a type (line 1125)
            enter___198943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1125, 17), assertRaises_call_result_198941, '__enter__')
            with_enter_198944 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 17), enter___198943)
            
            # Call to run(...): (line 1126)
            # Processing the call keyword arguments (line 1126)
            kwargs_198950 = {}
            
            # Call to klass(...): (line 1126)
            # Processing the call arguments (line 1126)
            str_198946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1126, 22), 'str', 'test_something')
            # Processing the call keyword arguments (line 1126)
            kwargs_198947 = {}
            # Getting the type of 'klass' (line 1126)
            klass_198945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1126, 16), 'klass', False)
            # Calling klass(args, kwargs) (line 1126)
            klass_call_result_198948 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 16), klass_198945, *[str_198946], **kwargs_198947)
            
            # Obtaining the member 'run' of a type (line 1126)
            run_198949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1126, 16), klass_call_result_198948, 'run')
            # Calling run(args, kwargs) (line 1126)
            run_call_result_198951 = invoke(stypy.reporting.localization.Localization(__file__, 1126, 16), run_198949, *[], **kwargs_198950)
            
            # Calling the __exit__ method to finish a with section
            # Obtaining the member '__exit__' of a type (line 1125)
            exit___198952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1125, 17), assertRaises_call_result_198941, '__exit__')
            with_exit_198953 = invoke(stypy.reporting.localization.Localization(__file__, 1125, 17), exit___198952, None, None, None)

        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testKeyboardInterrupt(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testKeyboardInterrupt' in the type store
        # Getting the type of 'stypy_return_type' (line 1103)
        stypy_return_type_198954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1103, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_198954)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testKeyboardInterrupt'
        return stypy_return_type_198954


    @norecursion
    def testSystemExit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testSystemExit'
        module_type_store = module_type_store.open_function_context('testSystemExit', 1128, 4, False)
        # Assigning a type to the variable 'self' (line 1129)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1129, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testSystemExit')
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testSystemExit.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testSystemExit', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testSystemExit', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testSystemExit(...)' code ##################


        @norecursion
        def _raise(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            # Getting the type of 'None' (line 1129)
            None_198955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 24), 'None')
            defaults = [None_198955]
            # Create a new context for function '_raise'
            module_type_store = module_type_store.open_function_context('_raise', 1129, 8, False)
            
            # Passed parameters checking function
            _raise.stypy_localization = localization
            _raise.stypy_type_of_self = None
            _raise.stypy_type_store = module_type_store
            _raise.stypy_function_name = '_raise'
            _raise.stypy_param_names_list = ['self']
            _raise.stypy_varargs_param_name = None
            _raise.stypy_kwargs_param_name = None
            _raise.stypy_call_defaults = defaults
            _raise.stypy_call_varargs = varargs
            _raise.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, '_raise', ['self'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, '_raise', localization, ['self'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of '_raise(...)' code ##################

            # Getting the type of 'SystemExit' (line 1130)
            SystemExit_198956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1130, 18), 'SystemExit')
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 1130, 12), SystemExit_198956, 'raise parameter', BaseException)
            
            # ################# End of '_raise(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function '_raise' in the type store
            # Getting the type of 'stypy_return_type' (line 1129)
            stypy_return_type_198957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1129, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198957)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function '_raise'
            return stypy_return_type_198957

        # Assigning a type to the variable '_raise' (line 1129)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1129, 8), '_raise', _raise)

        @norecursion
        def nothing(localization, *varargs, **kwargs):
            global module_type_store
            # Assign values to the parameters with defaults
            defaults = []
            # Create a new context for function 'nothing'
            module_type_store = module_type_store.open_function_context('nothing', 1131, 8, False)
            
            # Passed parameters checking function
            nothing.stypy_localization = localization
            nothing.stypy_type_of_self = None
            nothing.stypy_type_store = module_type_store
            nothing.stypy_function_name = 'nothing'
            nothing.stypy_param_names_list = ['self']
            nothing.stypy_varargs_param_name = None
            nothing.stypy_kwargs_param_name = None
            nothing.stypy_call_defaults = defaults
            nothing.stypy_call_varargs = varargs
            nothing.stypy_call_kwargs = kwargs
            arguments = process_argument_values(localization, None, module_type_store, 'nothing', ['self'], None, None, defaults, varargs, kwargs)

            if is_error_type(arguments):
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                return arguments

            # Initialize method data
            init_call_information(module_type_store, 'nothing', localization, ['self'], arguments)
            
            # Default return type storage variable (SSA)
            # Assigning a type to the variable 'stypy_return_type'
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
            
            
            # ################# Begin of 'nothing(...)' code ##################

            pass
            
            # ################# End of 'nothing(...)' code ##################

            # Teardown call information
            teardown_call_information(localization, arguments)
            
            # Storing the return type of function 'nothing' in the type store
            # Getting the type of 'stypy_return_type' (line 1131)
            stypy_return_type_198958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1131, 8), 'stypy_return_type')
            module_type_store.store_return_type_of_current_context(stypy_return_type_198958)
            
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            
            # Return type of the function 'nothing'
            return stypy_return_type_198958

        # Assigning a type to the variable 'nothing' (line 1131)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1131, 8), 'nothing', nothing)
        # Declaration of the 'Test1' class
        # Getting the type of 'unittest' (line 1134)
        unittest_198959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1134, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1134)
        TestCase_198960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1134, 20), unittest_198959, 'TestCase')

        class Test1(TestCase_198960, ):
            
            # Assigning a Name to a Name (line 1135):
            
            # Assigning a Name to a Name (line 1135):
            # Getting the type of '_raise' (line 1135)
            _raise_198961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1135, 29), '_raise')
            # Assigning a type to the variable 'test_something' (line 1135)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1135, 12), 'test_something', _raise_198961)
        
        # Assigning a type to the variable 'Test1' (line 1134)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1134, 8), 'Test1', Test1)
        # Declaration of the 'Test2' class
        # Getting the type of 'unittest' (line 1137)
        unittest_198962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1137, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1137)
        TestCase_198963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1137, 20), unittest_198962, 'TestCase')

        class Test2(TestCase_198963, ):
            
            # Assigning a Name to a Name (line 1138):
            
            # Assigning a Name to a Name (line 1138):
            # Getting the type of '_raise' (line 1138)
            _raise_198964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1138, 20), '_raise')
            # Assigning a type to the variable 'setUp' (line 1138)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1138, 12), 'setUp', _raise_198964)
            
            # Assigning a Name to a Name (line 1139):
            
            # Assigning a Name to a Name (line 1139):
            # Getting the type of 'nothing' (line 1139)
            nothing_198965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1139, 29), 'nothing')
            # Assigning a type to the variable 'test_something' (line 1139)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1139, 12), 'test_something', nothing_198965)
        
        # Assigning a type to the variable 'Test2' (line 1137)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1137, 8), 'Test2', Test2)
        # Declaration of the 'Test3' class
        # Getting the type of 'unittest' (line 1141)
        unittest_198966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1141, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1141)
        TestCase_198967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1141, 20), unittest_198966, 'TestCase')

        class Test3(TestCase_198967, ):
            
            # Assigning a Name to a Name (line 1142):
            
            # Assigning a Name to a Name (line 1142):
            # Getting the type of 'nothing' (line 1142)
            nothing_198968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1142, 29), 'nothing')
            # Assigning a type to the variable 'test_something' (line 1142)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1142, 12), 'test_something', nothing_198968)
            
            # Assigning a Name to a Name (line 1143):
            
            # Assigning a Name to a Name (line 1143):
            # Getting the type of '_raise' (line 1143)
            _raise_198969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1143, 23), '_raise')
            # Assigning a type to the variable 'tearDown' (line 1143)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1143, 12), 'tearDown', _raise_198969)
        
        # Assigning a type to the variable 'Test3' (line 1141)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1141, 8), 'Test3', Test3)
        # Declaration of the 'Test4' class
        # Getting the type of 'unittest' (line 1145)
        unittest_198970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1145, 20), 'unittest')
        # Obtaining the member 'TestCase' of a type (line 1145)
        TestCase_198971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1145, 20), unittest_198970, 'TestCase')

        class Test4(TestCase_198971, ):

            @norecursion
            def test_something(type_of_self, localization, *varargs, **kwargs):
                global module_type_store
                # Assign values to the parameters with defaults
                defaults = []
                # Create a new context for function 'test_something'
                module_type_store = module_type_store.open_function_context('test_something', 1146, 12, False)
                # Assigning a type to the variable 'self' (line 1147)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1147, 12), 'self', type_of_self)
                
                # Passed parameters checking function
                Test4.test_something.__dict__.__setitem__('stypy_localization', localization)
                Test4.test_something.__dict__.__setitem__('stypy_type_of_self', type_of_self)
                Test4.test_something.__dict__.__setitem__('stypy_type_store', module_type_store)
                Test4.test_something.__dict__.__setitem__('stypy_function_name', 'Test4.test_something')
                Test4.test_something.__dict__.__setitem__('stypy_param_names_list', [])
                Test4.test_something.__dict__.__setitem__('stypy_varargs_param_name', None)
                Test4.test_something.__dict__.__setitem__('stypy_kwargs_param_name', None)
                Test4.test_something.__dict__.__setitem__('stypy_call_defaults', defaults)
                Test4.test_something.__dict__.__setitem__('stypy_call_varargs', varargs)
                Test4.test_something.__dict__.__setitem__('stypy_call_kwargs', kwargs)
                Test4.test_something.__dict__.__setitem__('stypy_declared_arg_number', 1)
                arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test4.test_something', [], None, None, defaults, varargs, kwargs)

                if is_error_type(arguments):
                    # Destroy the current context
                    module_type_store = module_type_store.close_function_context()
                    return arguments

                # Initialize method data
                init_call_information(module_type_store, 'test_something', localization, [], arguments)
                
                # Default return type storage variable (SSA)
                # Assigning a type to the variable 'stypy_return_type'
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
                
                
                # ################# Begin of 'test_something(...)' code ##################

                
                # Call to addCleanup(...): (line 1147)
                # Processing the call arguments (line 1147)
                # Getting the type of '_raise' (line 1147)
                _raise_198974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 32), '_raise', False)
                # Processing the call keyword arguments (line 1147)
                kwargs_198975 = {}
                # Getting the type of 'self' (line 1147)
                self_198972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1147, 16), 'self', False)
                # Obtaining the member 'addCleanup' of a type (line 1147)
                addCleanup_198973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1147, 16), self_198972, 'addCleanup')
                # Calling addCleanup(args, kwargs) (line 1147)
                addCleanup_call_result_198976 = invoke(stypy.reporting.localization.Localization(__file__, 1147, 16), addCleanup_198973, *[_raise_198974], **kwargs_198975)
                
                
                # ################# End of 'test_something(...)' code ##################

                # Teardown call information
                teardown_call_information(localization, arguments)
                
                # Storing the return type of function 'test_something' in the type store
                # Getting the type of 'stypy_return_type' (line 1146)
                stypy_return_type_198977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1146, 12), 'stypy_return_type')
                module_type_store.store_return_type_of_current_context(stypy_return_type_198977)
                
                # Destroy the current context
                module_type_store = module_type_store.close_function_context()
                
                # Return type of the function 'test_something'
                return stypy_return_type_198977

        
        # Assigning a type to the variable 'Test4' (line 1145)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1145, 8), 'Test4', Test4)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1149)
        tuple_198978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1149, 22), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1149)
        # Adding element type (line 1149)
        # Getting the type of 'Test1' (line 1149)
        Test1_198979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 22), 'Test1')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 22), tuple_198978, Test1_198979)
        # Adding element type (line 1149)
        # Getting the type of 'Test2' (line 1149)
        Test2_198980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 29), 'Test2')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 22), tuple_198978, Test2_198980)
        # Adding element type (line 1149)
        # Getting the type of 'Test3' (line 1149)
        Test3_198981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 36), 'Test3')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 22), tuple_198978, Test3_198981)
        # Adding element type (line 1149)
        # Getting the type of 'Test4' (line 1149)
        Test4_198982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1149, 43), 'Test4')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1149, 22), tuple_198978, Test4_198982)
        
        # Testing the type of a for loop iterable (line 1149)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1149, 8), tuple_198978)
        # Getting the type of the for loop variable (line 1149)
        for_loop_var_198983 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1149, 8), tuple_198978)
        # Assigning a type to the variable 'klass' (line 1149)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1149, 8), 'klass', for_loop_var_198983)
        # SSA begins for a for statement (line 1149)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1150):
        
        # Assigning a Call to a Name (line 1150):
        
        # Call to TestResult(...): (line 1150)
        # Processing the call keyword arguments (line 1150)
        kwargs_198986 = {}
        # Getting the type of 'unittest' (line 1150)
        unittest_198984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1150, 21), 'unittest', False)
        # Obtaining the member 'TestResult' of a type (line 1150)
        TestResult_198985 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1150, 21), unittest_198984, 'TestResult')
        # Calling TestResult(args, kwargs) (line 1150)
        TestResult_call_result_198987 = invoke(stypy.reporting.localization.Localization(__file__, 1150, 21), TestResult_198985, *[], **kwargs_198986)
        
        # Assigning a type to the variable 'result' (line 1150)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1150, 12), 'result', TestResult_call_result_198987)
        
        # Call to run(...): (line 1151)
        # Processing the call arguments (line 1151)
        # Getting the type of 'result' (line 1151)
        result_198993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 40), 'result', False)
        # Processing the call keyword arguments (line 1151)
        kwargs_198994 = {}
        
        # Call to klass(...): (line 1151)
        # Processing the call arguments (line 1151)
        str_198989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1151, 18), 'str', 'test_something')
        # Processing the call keyword arguments (line 1151)
        kwargs_198990 = {}
        # Getting the type of 'klass' (line 1151)
        klass_198988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1151, 12), 'klass', False)
        # Calling klass(args, kwargs) (line 1151)
        klass_call_result_198991 = invoke(stypy.reporting.localization.Localization(__file__, 1151, 12), klass_198988, *[str_198989], **kwargs_198990)
        
        # Obtaining the member 'run' of a type (line 1151)
        run_198992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1151, 12), klass_call_result_198991, 'run')
        # Calling run(args, kwargs) (line 1151)
        run_call_result_198995 = invoke(stypy.reporting.localization.Localization(__file__, 1151, 12), run_198992, *[result_198993], **kwargs_198994)
        
        
        # Call to assertEqual(...): (line 1152)
        # Processing the call arguments (line 1152)
        
        # Call to len(...): (line 1152)
        # Processing the call arguments (line 1152)
        # Getting the type of 'result' (line 1152)
        result_198999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 33), 'result', False)
        # Obtaining the member 'errors' of a type (line 1152)
        errors_199000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 33), result_198999, 'errors')
        # Processing the call keyword arguments (line 1152)
        kwargs_199001 = {}
        # Getting the type of 'len' (line 1152)
        len_198998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 29), 'len', False)
        # Calling len(args, kwargs) (line 1152)
        len_call_result_199002 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 29), len_198998, *[errors_199000], **kwargs_199001)
        
        int_199003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1152, 49), 'int')
        # Processing the call keyword arguments (line 1152)
        kwargs_199004 = {}
        # Getting the type of 'self' (line 1152)
        self_198996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1152, 12), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 1152)
        assertEqual_198997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1152, 12), self_198996, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 1152)
        assertEqual_call_result_199005 = invoke(stypy.reporting.localization.Localization(__file__, 1152, 12), assertEqual_198997, *[len_call_result_199002, int_199003], **kwargs_199004)
        
        
        # Call to assertEqual(...): (line 1153)
        # Processing the call arguments (line 1153)
        # Getting the type of 'result' (line 1153)
        result_199008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 29), 'result', False)
        # Obtaining the member 'testsRun' of a type (line 1153)
        testsRun_199009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 29), result_199008, 'testsRun')
        int_199010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1153, 46), 'int')
        # Processing the call keyword arguments (line 1153)
        kwargs_199011 = {}
        # Getting the type of 'self' (line 1153)
        self_199006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1153, 12), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 1153)
        assertEqual_199007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1153, 12), self_199006, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 1153)
        assertEqual_call_result_199012 = invoke(stypy.reporting.localization.Localization(__file__, 1153, 12), assertEqual_199007, *[testsRun_199009, int_199010], **kwargs_199011)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testSystemExit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testSystemExit' in the type store
        # Getting the type of 'stypy_return_type' (line 1128)
        stypy_return_type_199013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1128, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_199013)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testSystemExit'
        return stypy_return_type_199013


    @norecursion
    def testPickle(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'testPickle'
        module_type_store = module_type_store.open_function_context('testPickle', 1155, 4, False)
        # Assigning a type to the variable 'self' (line 1156)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1156, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_localization', localization)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_type_store', module_type_store)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_function_name', 'Test_TestCase.testPickle')
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_param_names_list', [])
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_varargs_param_name', None)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_kwargs_param_name', None)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_call_defaults', defaults)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_call_varargs', varargs)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        Test_TestCase.testPickle.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.testPickle', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'testPickle', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'testPickle(...)' code ##################

        
        # Assigning a Call to a Name (line 1160):
        
        # Assigning a Call to a Name (line 1160):
        
        # Call to TestCase(...): (line 1160)
        # Processing the call arguments (line 1160)
        str_199016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1160, 33), 'str', 'run')
        # Processing the call keyword arguments (line 1160)
        kwargs_199017 = {}
        # Getting the type of 'unittest' (line 1160)
        unittest_199014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1160, 15), 'unittest', False)
        # Obtaining the member 'TestCase' of a type (line 1160)
        TestCase_199015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1160, 15), unittest_199014, 'TestCase')
        # Calling TestCase(args, kwargs) (line 1160)
        TestCase_call_result_199018 = invoke(stypy.reporting.localization.Localization(__file__, 1160, 15), TestCase_199015, *[str_199016], **kwargs_199017)
        
        # Assigning a type to the variable 'test' (line 1160)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1160, 8), 'test', TestCase_call_result_199018)
        
        
        # Call to range(...): (line 1161)
        # Processing the call arguments (line 1161)
        # Getting the type of 'pickle' (line 1161)
        pickle_199020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 30), 'pickle', False)
        # Obtaining the member 'HIGHEST_PROTOCOL' of a type (line 1161)
        HIGHEST_PROTOCOL_199021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1161, 30), pickle_199020, 'HIGHEST_PROTOCOL')
        int_199022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1161, 56), 'int')
        # Applying the binary operator '+' (line 1161)
        result_add_199023 = python_operator(stypy.reporting.localization.Localization(__file__, 1161, 30), '+', HIGHEST_PROTOCOL_199021, int_199022)
        
        # Processing the call keyword arguments (line 1161)
        kwargs_199024 = {}
        # Getting the type of 'range' (line 1161)
        range_199019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1161, 24), 'range', False)
        # Calling range(args, kwargs) (line 1161)
        range_call_result_199025 = invoke(stypy.reporting.localization.Localization(__file__, 1161, 24), range_199019, *[result_add_199023], **kwargs_199024)
        
        # Testing the type of a for loop iterable (line 1161)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1161, 8), range_call_result_199025)
        # Getting the type of the for loop variable (line 1161)
        for_loop_var_199026 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1161, 8), range_call_result_199025)
        # Assigning a type to the variable 'protocol' (line 1161)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1161, 8), 'protocol', for_loop_var_199026)
        # SSA begins for a for statement (line 1161)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Call to a Name (line 1164):
        
        # Assigning a Call to a Name (line 1164):
        
        # Call to dumps(...): (line 1164)
        # Processing the call arguments (line 1164)
        # Getting the type of 'test' (line 1164)
        test_199029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 40), 'test', False)
        # Processing the call keyword arguments (line 1164)
        # Getting the type of 'protocol' (line 1164)
        protocol_199030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 55), 'protocol', False)
        keyword_199031 = protocol_199030
        kwargs_199032 = {'protocol': keyword_199031}
        # Getting the type of 'pickle' (line 1164)
        pickle_199027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1164, 27), 'pickle', False)
        # Obtaining the member 'dumps' of a type (line 1164)
        dumps_199028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1164, 27), pickle_199027, 'dumps')
        # Calling dumps(args, kwargs) (line 1164)
        dumps_call_result_199033 = invoke(stypy.reporting.localization.Localization(__file__, 1164, 27), dumps_199028, *[test_199029], **kwargs_199032)
        
        # Assigning a type to the variable 'pickled_test' (line 1164)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1164, 12), 'pickled_test', dumps_call_result_199033)
        
        # Assigning a Call to a Name (line 1166):
        
        # Assigning a Call to a Name (line 1166):
        
        # Call to loads(...): (line 1166)
        # Processing the call arguments (line 1166)
        # Getting the type of 'pickled_test' (line 1166)
        pickled_test_199036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 42), 'pickled_test', False)
        # Processing the call keyword arguments (line 1166)
        kwargs_199037 = {}
        # Getting the type of 'pickle' (line 1166)
        pickle_199034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1166, 29), 'pickle', False)
        # Obtaining the member 'loads' of a type (line 1166)
        loads_199035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1166, 29), pickle_199034, 'loads')
        # Calling loads(args, kwargs) (line 1166)
        loads_call_result_199038 = invoke(stypy.reporting.localization.Localization(__file__, 1166, 29), loads_199035, *[pickled_test_199036], **kwargs_199037)
        
        # Assigning a type to the variable 'unpickled_test' (line 1166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1166, 12), 'unpickled_test', loads_call_result_199038)
        
        # Call to assertEqual(...): (line 1167)
        # Processing the call arguments (line 1167)
        # Getting the type of 'test' (line 1167)
        test_199041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 29), 'test', False)
        # Getting the type of 'unpickled_test' (line 1167)
        unpickled_test_199042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 35), 'unpickled_test', False)
        # Processing the call keyword arguments (line 1167)
        kwargs_199043 = {}
        # Getting the type of 'self' (line 1167)
        self_199039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1167, 12), 'self', False)
        # Obtaining the member 'assertEqual' of a type (line 1167)
        assertEqual_199040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1167, 12), self_199039, 'assertEqual')
        # Calling assertEqual(args, kwargs) (line 1167)
        assertEqual_call_result_199044 = invoke(stypy.reporting.localization.Localization(__file__, 1167, 12), assertEqual_199040, *[test_199041, unpickled_test_199042], **kwargs_199043)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()
        
        
        # ################# End of 'testPickle(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'testPickle' in the type store
        # Getting the type of 'stypy_return_type' (line 1155)
        stypy_return_type_199045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1155, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_199045)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'testPickle'
        return stypy_return_type_199045


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 44, 0, False)
        # Assigning a type to the variable 'self' (line 45)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'Test_TestCase.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'Test_TestCase' (line 44)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 44, 0), 'Test_TestCase', Test_TestCase)

# Assigning a List to a Name (line 50):

# Obtaining an instance of the builtin type 'list' (line 50)
list_199046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 50)
# Adding element type (line 50)

# Obtaining an instance of the builtin type 'tuple' (line 50)
tuple_199047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 50)
# Adding element type (line 50)

# Call to Foo(...): (line 50)
# Processing the call arguments (line 50)
str_199050 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 26), 'str', 'test1')
# Processing the call keyword arguments (line 50)
kwargs_199051 = {}
# Getting the type of 'Test' (line 50)
Test_199048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 17), 'Test', False)
# Obtaining the member 'Foo' of a type (line 50)
Foo_199049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 17), Test_199048, 'Foo')
# Calling Foo(args, kwargs) (line 50)
Foo_call_result_199052 = invoke(stypy.reporting.localization.Localization(__file__, 50, 17), Foo_199049, *[str_199050], **kwargs_199051)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 50, 17), tuple_199047, Foo_call_result_199052)
# Adding element type (line 50)

# Call to Foo(...): (line 50)
# Processing the call arguments (line 50)
str_199055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 45), 'str', 'test1')
# Processing the call keyword arguments (line 50)
kwargs_199056 = {}
# Getting the type of 'Test' (line 50)
Test_199053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 36), 'Test', False)
# Obtaining the member 'Foo' of a type (line 50)
Foo_199054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 36), Test_199053, 'Foo')
# Calling Foo(args, kwargs) (line 50)
Foo_call_result_199057 = invoke(stypy.reporting.localization.Localization(__file__, 50, 36), Foo_199054, *[str_199055], **kwargs_199056)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 50, 17), tuple_199047, Foo_call_result_199057)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 50, 15), list_199046, tuple_199047)

# Getting the type of 'Test_TestCase'
Test_TestCase_199058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Test_TestCase')
# Setting the type of the member 'eq_pairs' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Test_TestCase_199058, 'eq_pairs', list_199046)

# Assigning a List to a Name (line 53):

# Obtaining an instance of the builtin type 'list' (line 53)
list_199059 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 15), 'list')
# Adding type elements to the builtin type 'list' instance (line 53)
# Adding element type (line 53)

# Obtaining an instance of the builtin type 'tuple' (line 53)
tuple_199060 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 53)
# Adding element type (line 53)

# Call to Foo(...): (line 53)
# Processing the call arguments (line 53)
str_199063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 26), 'str', 'test1')
# Processing the call keyword arguments (line 53)
kwargs_199064 = {}
# Getting the type of 'Test' (line 53)
Test_199061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 17), 'Test', False)
# Obtaining the member 'Foo' of a type (line 53)
Foo_199062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 17), Test_199061, 'Foo')
# Calling Foo(args, kwargs) (line 53)
Foo_call_result_199065 = invoke(stypy.reporting.localization.Localization(__file__, 53, 17), Foo_199062, *[str_199063], **kwargs_199064)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 53, 17), tuple_199060, Foo_call_result_199065)
# Adding element type (line 53)

# Call to Foo(...): (line 53)
# Processing the call arguments (line 53)
str_199068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 53, 45), 'str', 'runTest')
# Processing the call keyword arguments (line 53)
kwargs_199069 = {}
# Getting the type of 'Test' (line 53)
Test_199066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 53, 36), 'Test', False)
# Obtaining the member 'Foo' of a type (line 53)
Foo_199067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 53, 36), Test_199066, 'Foo')
# Calling Foo(args, kwargs) (line 53)
Foo_call_result_199070 = invoke(stypy.reporting.localization.Localization(__file__, 53, 36), Foo_199067, *[str_199068], **kwargs_199069)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 53, 17), tuple_199060, Foo_call_result_199070)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 53, 15), list_199059, tuple_199060)
# Adding element type (line 53)

# Obtaining an instance of the builtin type 'tuple' (line 54)
tuple_199071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 54)
# Adding element type (line 54)

# Call to Foo(...): (line 54)
# Processing the call arguments (line 54)
str_199074 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 26), 'str', 'test1')
# Processing the call keyword arguments (line 54)
kwargs_199075 = {}
# Getting the type of 'Test' (line 54)
Test_199072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 17), 'Test', False)
# Obtaining the member 'Foo' of a type (line 54)
Foo_199073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 17), Test_199072, 'Foo')
# Calling Foo(args, kwargs) (line 54)
Foo_call_result_199076 = invoke(stypy.reporting.localization.Localization(__file__, 54, 17), Foo_199073, *[str_199074], **kwargs_199075)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 17), tuple_199071, Foo_call_result_199076)
# Adding element type (line 54)

# Call to Bar(...): (line 54)
# Processing the call arguments (line 54)
str_199079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 54, 45), 'str', 'test1')
# Processing the call keyword arguments (line 54)
kwargs_199080 = {}
# Getting the type of 'Test' (line 54)
Test_199077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 54, 36), 'Test', False)
# Obtaining the member 'Bar' of a type (line 54)
Bar_199078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 54, 36), Test_199077, 'Bar')
# Calling Bar(args, kwargs) (line 54)
Bar_call_result_199081 = invoke(stypy.reporting.localization.Localization(__file__, 54, 36), Bar_199078, *[str_199079], **kwargs_199080)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 54, 17), tuple_199071, Bar_call_result_199081)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 53, 15), list_199059, tuple_199071)
# Adding element type (line 53)

# Obtaining an instance of the builtin type 'tuple' (line 55)
tuple_199082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 17), 'tuple')
# Adding type elements to the builtin type 'tuple' instance (line 55)
# Adding element type (line 55)

# Call to Foo(...): (line 55)
# Processing the call arguments (line 55)
str_199085 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 26), 'str', 'test1')
# Processing the call keyword arguments (line 55)
kwargs_199086 = {}
# Getting the type of 'Test' (line 55)
Test_199083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 17), 'Test', False)
# Obtaining the member 'Foo' of a type (line 55)
Foo_199084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 17), Test_199083, 'Foo')
# Calling Foo(args, kwargs) (line 55)
Foo_call_result_199087 = invoke(stypy.reporting.localization.Localization(__file__, 55, 17), Foo_199084, *[str_199085], **kwargs_199086)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 17), tuple_199082, Foo_call_result_199087)
# Adding element type (line 55)

# Call to Bar(...): (line 55)
# Processing the call arguments (line 55)
str_199090 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 55, 45), 'str', 'test2')
# Processing the call keyword arguments (line 55)
kwargs_199091 = {}
# Getting the type of 'Test' (line 55)
Test_199088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 55, 36), 'Test', False)
# Obtaining the member 'Bar' of a type (line 55)
Bar_199089 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 55, 36), Test_199088, 'Bar')
# Calling Bar(args, kwargs) (line 55)
Bar_call_result_199092 = invoke(stypy.reporting.localization.Localization(__file__, 55, 36), Bar_199089, *[str_199090], **kwargs_199091)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 55, 17), tuple_199082, Bar_call_result_199092)

add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 53, 15), list_199059, tuple_199082)

# Getting the type of 'Test_TestCase'
Test_TestCase_199093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'Test_TestCase')
# Setting the type of the member 'ne_pairs' of a type
module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 0, 0), Test_TestCase_199093, 'ne_pairs', list_199059)

if (__name__ == '__main__'):
    
    # Call to main(...): (line 1171)
    # Processing the call keyword arguments (line 1171)
    kwargs_199096 = {}
    # Getting the type of 'unittest' (line 1171)
    unittest_199094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1171, 4), 'unittest', False)
    # Obtaining the member 'main' of a type (line 1171)
    main_199095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1171, 4), unittest_199094, 'main')
    # Calling main(args, kwargs) (line 1171)
    main_call_result_199097 = invoke(stypy.reporting.localization.Localization(__file__, 1171, 4), main_199095, *[], **kwargs_199096)
    


# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
