
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: from stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import *
2: from stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy
3: 
4: import statement_visitor_copy
5: import ast
6: 
7: class ValueVisitor(ast.NodeVisitor):
8:     '''
9:     Visitor for value nodes, that are AST nodes that return tuples of statement lists and temp variable nodes when
10:     the result of a certain operation represented by the node is stored. If when processing a statement
11:     node one of its children nodes is a value node, a StatementVisitor is automatically run to process this child node.
12:     This visitor allows us to generate three address code for the type inference programs
13:     '''
14: 
15:     def __init__(self, filename):
16:         self.file_name = filename
17: 
18:     def visit(self, node, context):
19:         '''Visit a node.'''
20:         method = 'visit_' + node.__class__.__name__
21:         visitor = getattr(self, method, self.generic_visit)
22:         if visitor == self.generic_visit:
23:             return visitor(node, context + [method])
24:         return visitor(node, context)
25: 
26:     def __visit_instruction_body(self, body, context):
27:         new_stmts = []
28:         temp = []
29: 
30:         if not isinstance(body, list):
31:             body = [body]
32: 
33:         # Visit all body instructions
34:         for stmt in body:
35:             stmts, temp = self.visit(stmt, context)
36:             if isinstance(stmts, list):
37:                 new_stmts.extend(stmts)
38:             else:
39:                 new_stmts.append(stmts)
40:                 # new_stmts = stypy_functions_copy.flatten_lists(new_stmts)
41: 
42:         return new_stmts, temp
43: 
44:     def generic_visit(self, node, context):
45:         if hasattr(statement_visitor_copy.StatementVisitor, context[-1]):
46:             return self.visit_statement(node, context[:-1])
47:         else:
48:             raise Exception("VALUE VISITOR: " + context[-1] + " is not yet implemented")
49:             # '''Called if no explicit visitor function exists for a node.'''
50:             # for field, value in ast.iter_fields(node):
51:             # if isinstance(value, list):
52:             # for item in value:
53:             # if isinstance(item, ast.AST):
54:             # self.visit(item, context)
55:             # elif isinstance(value, ast.AST):
56:             # self.visit(value, context)
57: 
58:     def visit_statement(self, node, context):
59:         s_visitor = statement_visitor_copy.StatementVisitor(self.file_name)
60: 
61:         return s_visitor.visit(node, context), []
62: 
63:     # ######################################### ASSIGNMENTS #############################################
64: 
65:     def visit_AugAssign(self, node, context):
66:         # print inspect.stack()[0][3]
67: 
68:         operator_name = type(node.op).__name__.lower()
69: 
70:         # Obtain target (left part)
71:         if type(node.target) is ast.Name:
72:             get_target_stmts, target_var = stypy_functions_copy.create_get_type_of(node.target.id, node.lineno,
73:                                                                               node.col_offset)
74:         else:
75:             get_target_obj_left_stmts, target_left_var = self.visit(node.target.value, context)
76:             # get_target_obj_left_stmts, target_left_var = stypy_functions_copy.create_get_type_of(node.target.value.id,
77:             #                                                                                 node.lineno,
78:             #                                                                                 node.col_offset)
79: 
80:             if type(node.target) is ast.Attribute:
81:                 get_type_of_member, target_var = stypy_functions_copy.create_get_type_of_member(target_left_var,
82:                                                                                            node.target.attr,
83:                                                                                            node.lineno,
84:                                                                                            node.col_offset)
85:             else:
86:                 instructions, var = self.visit(node.target, context)
87:                 # get_type_of_member, target_var = stypy_functions_copy.create_get_type_of_member(target_left_var,
88:                 #                                                                        var, node.lineno,
89:                 #
90:                 #                                                             node.col_offset)
91:                 target_var = var
92:                 get_type_of_member = instructions  # stypy_functions_copy.flatten_lists(instructions, get_type_of_member)
93: 
94:             get_target_stmts = stypy_functions_copy.flatten_lists(get_target_obj_left_stmts, get_type_of_member)
95: 
96:         # Obtain right part
97:         right_stmts, temp_op2 = self.visit(node.value, context)
98: 
99:         # Call operator
100:         assign_stmts, temp_assign = stypy_functions_copy.create_binary_operator(operator_name, target_var, temp_op2,
101:                                                                            node.lineno, node.col_offset)
102: 
103:         # Set result type
104:         if type(node.target) is ast.Name:
105:             augment_assign = stypy_functions_copy.create_set_type_of(node.target.id, temp_assign, node.lineno,
106:                                                                 node.col_offset)
107:         else:
108:             get_target_obj_stmts, target_var = self.visit(node.target.value, context)
109:             # get_target_obj_stmts, target_var = stypy_functions_copy.create_get_type_of(node.target.value.id, node.lineno,
110:             #                                                                       node.col_offset)
111: 
112:             if type(node.target) is ast.Attribute:
113:                 set_type = stypy_functions_copy.create_set_type_of_member(target_var, node.target.attr, temp_assign,
114:                                                                      node.lineno,
115:                                                                      node.col_offset)
116:             else:
117:                 # temp_value: type to add
118:                 # target_var: container
119:                 # node.slice: subscript to calculate
120:                 slice_stmts, slice_var = self.visit(node.target.slice, context)
121:                 set_type_of_stmts = stypy_functions_copy.create_add_stored_type(target_var, slice_var, temp_assign,
122:                                                                            node.lineno,
123:                                                                            node.col_offset)
124:                 set_type = stypy_functions_copy.flatten_lists(slice_stmts, set_type_of_stmts)
125: 
126:             augment_assign = stypy_functions_copy.flatten_lists(get_target_obj_stmts, set_type)
127: 
128:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
129:                                              get_target_stmts,
130:                                              right_stmts,
131:                                              assign_stmts,
132:                                              augment_assign,
133:                                              stypy_functions_copy.create_blank_line()), temp_assign
134: 
135:     # ######################################### EXPRESSIONS, NAMES, LITERALS ##########################################
136: 
137:     def visit_Expr(self, node, context):
138:         # print inspect.stack()[0][3]
139: 
140:         if stypy_functions_copy.is_src_comment(node) or stypy_functions_copy.is_blank_line(node):
141:             return node, []
142: 
143:         expr = ast.Expr()
144:         stypy_functions_copy.assign_line_and_column(expr, node)
145:         # Evaluate the expression value, add the result.
146:         expr.value, temp_op = self.visit(node.value, context)
147: 
148:         return expr.value, temp_op
149: 
150:     def visit_Attribute(self, node, context):
151:         # print inspect.stack()[0][3]
152: 
153:         value_stmts, owner_var = self.visit(node.value, context)
154:         if type(node.ctx) == ast.Load:
155:             get_member_stmts, member_var = stypy_functions_copy.create_get_type_of_member(owner_var, node.attr, node.lineno,
156:                                                                                      node.col_offset)
157: 
158:             # To call a method we need all the source information (self object)
159:             tuple_node = ast.Tuple()
160:             tuple_node.elts = [member_var, owner_var]
161: 
162:             return stypy_functions_copy.flatten_lists(
163:                 value_stmts,
164:                 get_member_stmts), member_var  # tuple_node
165:             # else:
166:             # return stypy_functions_copy.flatten_lists(
167:             # value_stmts,
168:             # get_member_stmts), member_var
169:         else:
170:             return stypy_functions_copy.flatten_lists(
171:                 value_stmts,
172:                 core_language_copy.create_attribute(owner_var, node.attr, False, node.lineno, node.col_offset)), []
173: 
174:     def visit_Name(self, node, context):
175:         # print inspect.stack()[0][3]
176: 
177:         if type(node.ctx) == ast.Load:
178:             return stypy_functions_copy.create_get_type_of(node.id, node.lineno, node.col_offset)
179:         else:
180:             return core_language_copy.create_Name(node.id, False, node.lineno, node.col_offset), []
181: 
182:     def visit_Num(self, node, context):
183:         # print inspect.stack()[0][3]
184: 
185:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
186:         get_type_call = core_language_copy.create_Name('get_builtin_type', line=node.lineno, column=node.col_offset)
187:         get_type_call_param = core_language_copy.create_str(type(node.n).__name__)
188:         get_type_call_param2 = core_language_copy.create_num(node.n, node.lineno, node.col_offset)
189:         call = functions_copy.create_call(get_type_call, [localization, get_type_call_param, get_type_call_param2])
190:         return stypy_functions_copy.create_temp_Assign(call, line=node.lineno, column=node.col_offset)
191: 
192:         # return [], core_language_copy.create_Name(type(node.n).__name__, line=node.lineno, column=node.col_offset)
193: 
194:     def visit_Str(self, node, context):
195:         # print inspect.stack()[0][3]
196:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
197:         get_type_call = core_language_copy.create_Name('get_builtin_type', line=node.lineno, column=node.col_offset)
198:         get_type_call_param = core_language_copy.create_str(type(node.s).__name__)
199:         get_type_call_param2 = core_language_copy.create_str(node.s, node.lineno, node.col_offset)
200:         call = functions_copy.create_call(get_type_call, [localization, get_type_call_param, get_type_call_param2])
201:         return stypy_functions_copy.create_temp_Assign(call, line=node.lineno, column=node.col_offset)
202:         # return [], core_language_copy.create_Name(type(node.s).__name__, line=node.lineno, column=node.col_offset)
203: 
204:     def visit_Index(self, node, context):
205:         # print inspect.stack()[0][3]
206:         return self.visit(node.value, context)
207: 
208:     def visit_Subscript(self, node, context):
209:         # print inspect.stack()[0][3]
210: 
211:         stmts = []
212: 
213:         # Type of accessor between []
214:         node.slice.lineno = node.lineno
215:         node.slice.col_offset = node.col_offset
216:         slice_stmts, slice_var = self.visit(node.slice, context)
217:         stmts.append(slice_stmts)
218: 
219:         # Obtain the subscripted data structure
220:         value_stmts, value_var = self.visit(node.value, context)
221:         stmts.append(value_stmts)
222: 
223:         # Slice type assigment
224:         slice_assign, slice_var = stypy_functions_copy.create_temp_Assign(slice_var, node.lineno, node.col_offset)
225:         stmts.append(slice_assign)
226: 
227:         member_stmts, member_var = stypy_functions_copy.create_get_type_of_member(value_var, '__getitem__',
228:                                                                              node.lineno, node.col_offset)
229:         stmts.append(member_stmts)
230: 
231:         # Call to the subscript
232:         comment = stypy_functions_copy.create_src_comment("Calling the subscript to obtain elements type", node.lineno)
233:         stmts.append(comment)
234:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
235:         call_attribute = core_language_copy.create_attribute(member_var, 'invoke')
236: 
237:         call_to_subscript = functions_copy.create_call(call_attribute, [localization, slice_var])
238: 
239:         elem_stmts, elem_var = stypy_functions_copy.create_temp_Assign(call_to_subscript, node.lineno, node.col_offset)
240:         stmts.append(elem_stmts)
241: 
242:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
243:                                              stmts,
244:                                              stypy_functions_copy.create_blank_line()), elem_var
245: 
246:     def visit_Repr(self, node, context):
247:         return self.visit(node.value, context)
248: 
249:     # ################################## ARITHMETHIC AND LOGICAL OPERATIONS #########################################
250: 
251:     def visit_BoolOp(self, node, context):
252:         # print inspect.stack()[0][3]
253:         bool_op_stmts = [stypy_functions_copy.create_src_comment("Evaluating a boolean operation")]
254: 
255:         # Evaluate left operand
256:         left_stmts, temp_op1 = self.visit(node.values[0], context)
257:         if type(temp_op1) is ast.Tuple:
258:             temp_op1 = temp_op1.elts[0]
259: 
260:         bool_op_stmts.append(left_stmts)
261: 
262:         for i in range(1, len(node.values)):
263:             # Evaluate right operand
264:             right_stmts, temp_op2 = self.visit(node.values[i], context)
265:             if type(temp_op2) is ast.Tuple:
266:                 temp_op2 = temp_op2.elts[0]
267: 
268:             bool_op_stmts.append(right_stmts)
269: 
270:             # Operator symbol
271:             operator_name = type(node.op).__name__.lower()
272: 
273:             # Call operator
274:             operator_stmts, result_var = stypy_functions_copy.create_binary_operator(operator_name, temp_op1, temp_op2,
275:                                                                                 node.lineno, node.col_offset)
276:             bool_op_stmts.append(operator_stmts)
277:             temp_op1 = result_var  # For the next iteration
278: 
279:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
280:                                              bool_op_stmts,
281:                                              stypy_functions_copy.create_blank_line()
282:                                              ), result_var
283: 
284:     def visit_BinOp(self, node, context):
285:         # print inspect.stack()[0][3]
286: 
287:         # Evaluate left operand
288:         left_stmts, temp_op1 = self.visit(node.left, context)
289: 
290:         if type(temp_op1) is ast.Tuple:
291:             temp_op1 = temp_op1.elts[0]
292: 
293:         # Evaluate right operand
294:         right_stmts, temp_op2 = self.visit(node.right, context)
295: 
296:         if type(temp_op2) is ast.Tuple:
297:             temp_op2 = temp_op2.elts[0]
298: 
299:         # Operator symbol
300:         operator_name = type(node.op).__name__.lower()
301: 
302:         # Call operator
303:         operator_stmts, result_var = stypy_functions_copy.create_binary_operator(operator_name, temp_op1, temp_op2,
304:                                                                             node.lineno, node.col_offset)
305: 
306:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
307:                                              left_stmts,
308:                                              right_stmts,
309:                                              operator_stmts,
310:                                              stypy_functions_copy.create_blank_line()
311:                                              ), result_var
312: 
313:     def visit_UnaryOp(self, node, context):
314:         # print inspect.stack()[0][3]
315: 
316:         # Evaluate the operand
317:         right_stmts, temp_op = self.visit(node.operand, context)
318:         operator_name = type(node.op).__name__.lower()
319: 
320:         operator_stmts, result_var = stypy_functions_copy.create_unary_operator(operator_name, temp_op,
321:                                                                            node.lineno, node.col_offset)
322: 
323:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
324:                                              right_stmts,
325:                                              operator_stmts,
326:                                              stypy_functions_copy.create_blank_line()
327:                                              ), result_var
328: 
329:     def visit_Compare(self, node, context):
330:         # Multiple comparison syntax is supported in Python:
331:         # http://www.java2s.com/Tutorial/Python/0080__Operator
332:         # /multiplecomparisonscanbemadeonthesamelineevaluatedinlefttorightorder.htm
333: 
334:         # print inspect.stack()[0][3]
335: 
336:         all_assign_stmts = []
337:         final_op_result = None
338: 
339:         # Evaluate left part
340:         left_stmts, left_op = self.visit(node.left, context)
341:         if type(left_op) is ast.Tuple:
342:             left_op = left_op.elts[0]
343:         all_assign_stmts.append(left_stmts)
344: 
345:         for i in range(len(node.comparators)):
346:             # Evaluate each one of the right parts
347:             right_stmts, rigth_op = self.visit(node.comparators[i], context)
348:             if type(rigth_op) is ast.Tuple:
349:                 rigth_op = rigth_op.elts[0]
350: 
351:             all_assign_stmts.append(right_stmts)
352: 
353:             # Build logical operator and add its statements
354:             operator_name = type(node.ops[i]).__name__.lower()
355:             operator_stmts, temp_op_result = stypy_functions_copy.create_binary_operator(operator_name, left_op, rigth_op,
356:                                                                                     node.lineno, node.col_offset)
357:             all_assign_stmts.append(operator_stmts)
358: 
359:             # If there is more than one comparison, the new left part is the right part recently evaluated
360:             # The result of the previous operation is also stored to perform the 'and'
361:             left_stmts, left_op = right_stmts, rigth_op
362: 
363:             if i >= 1:
364:                 # If more than one comparison exist, they are related with the previous one by using an 'and' logical
365:                 # operator, according to Python documentation.
366:                 operator_stmts, final_op_result = stypy_functions_copy.create_binary_operator(
367:                     'and_',
368:                     final_op_result,
369:                     temp_op_result,
370:                     node.lineno,
371:                     node.col_offset)
372: 
373:                 all_assign_stmts.append(operator_stmts)
374:             else:
375:                 final_op_result = temp_op_result
376: 
377:             previous_operation_result = temp_op_result
378: 
379:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
380:                                              all_assign_stmts,
381:                                              stypy_functions_copy.create_blank_line()), final_op_result
382: 
383:     # ######################################### functions_copy #############################################
384: 
385:     def visit_Call(self, node, context):
386:         # print inspect.stack()[0][3]
387: 
388:         context.append(node)
389:         # Localization of the function call
390:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
391:         call_stmts = []
392:         arguments = []
393:         keyword_arguments = {}
394: 
395:         name_to_call = stypy_functions_copy.get_descritive_element_name(node.func)
396: 
397:         # Obtain the function to be called
398:         call_stmts.append(stypy_functions_copy.create_src_comment("Calling '{0}'".format(name_to_call), node.lineno))
399:         context.append(node)
400: 
401:         get_type_of_stmts, function_to_call = self.visit(node.func, context)
402:         context.remove(node)
403: 
404:         if len(node.args) > 0:
405:             call_stmts.append(stypy_functions_copy.create_src_comment("Processing call arguments", node.lineno))
406:         # First call parameters are built from standard parameters plus var args (args + starargs)
407:         # Evaluate arguments of the call
408:         for arg in node.args:
409:             stmts, temp = self.visit(arg, context)
410:             call_stmts.append(stmts)
411:             arguments.append(temp)
412: 
413:         # Evaluate arguments of the call
414:         if not node.starargs is None:
415:             #for arg in node.starargs:
416:             #stmts, temp = self.visit(arg, context)
417:             stmts, temp = self.visit(node.starargs, context)
418:             call_stmts.append(stmts)
419:             arguments.append(temp)
420: 
421:         call_stmts.append(stypy_functions_copy.create_src_comment("Processing call keyword arguments", node.lineno))
422:         # Second call parameters are built from the keywords and keyword args (keywords + kwargs)
423:         # Evaluate the keyword arguments of the call
424:         for arg in node.keywords:
425:             stmts, temp = self.visit(arg, context)
426:             call_stmts.append(stmts)
427:             keyword_arguments[arg.arg] = temp
428: 
429:         # Evaluate arguments of the call
430:         if not node.kwargs is None:
431:             #for arg in node.kwargs:
432:             #stmts, temp = self.visit(arg, context)
433:             stmts, temp = self.visit(node.kwargs, context)
434:             call_stmts.append(stmts)
435:             keyword_arguments[temp.id] = temp
436:             #keyword_arguments[node.kwargs.id] = temp
437: 
438:         dict_arguments = data_structures_copy.create_keyword_dict(keyword_arguments)
439:         dict_assign_stmts, dict_assign = stypy_functions_copy.create_temp_Assign(dict_arguments, node.lineno,
440:                                                                             node.col_offset)
441:         call_stmts.append(dict_assign_stmts)
442: 
443:         call_stmts.append(stypy_functions_copy.create_set_unreferenced_var_check(False))
444:         call_stmts.append(get_type_of_stmts)
445:         call_stmts.append(stypy_functions_copy.create_set_unreferenced_var_check(True))
446: 
447:         call_stmts.append(stypy_functions_copy.create_src_comment("Performing the call", node.lineno))
448:         call = create_call_to_type_inference_code(function_to_call, localization, keywords=[], kwargs=dict_assign,
449:                                                   starargs=arguments,
450:                                                   line=node.lineno, column=node.col_offset)
451: 
452:         assign_stmts, temp_assign = stypy_functions_copy.create_temp_Assign(call, node.lineno, node.col_offset)
453:         call_stmts.append(assign_stmts)
454: 
455:         context.remove(node)
456:         return stypy_functions_copy.flatten_lists(
457:             stypy_functions_copy.create_blank_line(),
458:             call_stmts,
459:             stypy_functions_copy.create_blank_line(),
460:         ), temp_assign
461: 
462:     def visit_keyword(self, node, context):
463:         # print inspect.stack()[0][3]
464: 
465:         get_value_stmts, temp_value = self.visit(node.value, context)
466:         assign_keyword_value, keyword_value = stypy_functions_copy.create_temp_Assign(temp_value, context[-1].lineno,
467:                                                                                  context[-1].col_offset)
468:         return stypy_functions_copy.flatten_lists(get_value_stmts, assign_keyword_value), keyword_value
469: 
470:     # ########################################## HIGHER ORDER functions_copy ##########################################
471: 
472:     def visit_Lambda(self, node, context):
473:         # Function declaration localization
474:         decl_localization = core_language_copy.create_Name('localization', False, line=node.lineno, column=node.col_offset)
475: 
476:         # The 'norecursion' decorator, mandatory in every stypy code generation to enable the type inference program
477:         # to not to hang on recursive calls.
478:         decorator_list = core_language_copy.create_Name('norecursion', line=node.lineno - 1, column=node.col_offset)
479: 
480:         defaults_types = []
481:         for elem in node.args.defaults:
482:             stmts, type_ = self.visit(elem, context)
483:             defaults_types.append(type_)
484: 
485:         node.name = stypy_functions_copy.new_temp_lambda_str()
486: 
487:         # Create and add the function definition header
488:         function_def = functions_copy.create_function_def(node.name,
489:                                                      decl_localization,
490:                                                      decorator_list,
491:                                                      [],
492:                                                      line=node.lineno,
493:                                                      column=node.col_offset)
494: 
495:         # Defaults are stored in a variable at the beginning of the function
496:         function_def.body.append(stypy_functions_copy.create_src_comment("Assign values to the parameters with defaults"))
497:         function_def.body.append(core_language_copy.create_Assign(core_language_copy.create_Name("defaults"),
498:                                                              data_structures_copy.create_list(defaults_types)))
499: 
500:         # Generate code from setting a new context in the type store
501:         function_def.body.append(stypy_functions_copy.create_src_comment
502:                                  ("Create a new context for function '{0}'".format(node.name)))
503:         context_set = functions_copy.create_context_set(node.name, node.lineno,
504:                                                    node.col_offset)
505:         function_def.body.append(context_set)
506: 
507:         # Generate code for arity checking of the function arguments and assigning them to suitable local variables
508:         function_def.body.append(stypy_functions_copy.create_src_comment("Passed parameters checking function"))
509:         f_preamble = functions_copy.create_arg_number_test(node)
510:         function_def.body.append(f_preamble)
511: 
512:         # Generate code for create a new stack push for error reporting.
513:         function_def.body.append(stypy_functions_copy.create_src_comment("Stacktrace push for error reporting"))
514:         declared_arguments = functions_copy.obtain_arg_list(node.args, functions_copy.is_method(context))
515:         stack_push = functions_copy.create_stacktrace_push(node.name, declared_arguments)
516:         function_def.body.append(stack_push)
517: 
518:         # Initialize the variable where the return of the function will be stored.
519:         # This is needed due to a single return statement must exist within a function in order to not to conflict with
520:         # the SSA algorithm
521:         function_def.body.append(stypy_functions_copy.create_src_comment("Default return type storage variable (SSA)"))
522:         function_def.body.append(stypy_functions_copy.create_default_return_variable())
523: 
524:         function_def.body.append(stypy_functions_copy.create_blank_line())
525:         function_def.body.append(
526:             stypy_functions_copy.create_src_comment("Begin of the function '{0}' code".format(node.name)))
527: 
528:         # Lambdas only have a single instruction body
529:         stmts, temp = self.visit(node.body, context)
530:         function_def.body.append(stmts)
531:         function_def.body = stypy_functions_copy.flatten_lists(function_def.body)
532: 
533:         # Return value to the default return value name
534:         return_comment = stypy_functions_copy.create_src_comment("Assigning the return type of the lambda function")
535:         function_def.body.append(return_comment)
536:         default_function_ret_var_name = core_language_copy.create_Name(stypy_functions_copy.default_function_ret_var_name)
537:         ret_assign = core_language_copy.create_Assign(default_function_ret_var_name, temp)
538:         function_def.body.append(ret_assign)
539: 
540:         function_def.body.append(
541:             stypy_functions_copy.create_end_block_src_comment("End of the function '{0}' code".format(node.name)))
542: 
543:         # Pop the error reporting stack trace
544:         function_def.body.append(stypy_functions_copy.create_src_comment("Stacktrace pop (error reporting)"))
545:         stack_pop = functions_copy.create_stacktrace_pop()
546:         function_def.body.append(stack_pop)
547: 
548:         # Generate code for pop the function context.
549:         function_def.body.append(stypy_functions_copy.create_src_comment
550:                                  ("Destroy the context of function '{0}'".format(node.name)))
551:         context_unset = functions_copy.create_context_unset()
552:         function_def.body.append(context_unset)
553: 
554:         # Finally, return the return value (contained in a predefined var name)
555:         # in the single return statement of each function.
556:         function_def.body.append(stypy_functions_copy.create_src_comment("Return type of the function"))
557:         function_def.body.append(stypy_functions_copy.create_return_from_function(node.lineno, node.col_offset))
558: 
559:         # Register the function type outside the function context
560:         # register_expr = stypy_functions_copy.create_set_type_of(node.name, core_language_copy.create_Name(node.name),
561:         # node.lineno, node.col_offset)
562:         register_expr = functions_copy.create_type_for_lambda_function(node.name, node.name,
563:                                                                   node.lineno, node.col_offset)
564:         get_lambda_stmt, lambda_var = stypy_functions_copy.create_get_type_of(node.name, node.lineno, node.col_offset)
565:         # TODO: Delete name at the end?
566:         return stypy_functions_copy.flatten_lists(function_def, register_expr, get_lambda_stmt), lambda_var
567: 
568:     # ########################################### DATA STRUCTURES #####################################################
569: 
570:     def visit_List(self, node, context):
571:         # print inspect.stack()[0][3]
572: 
573:         list_stmts = []
574: 
575:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
576: 
577:         # Get a list instance
578:         call_comment = stypy_functions_copy.create_src_comment("Obtaining an instance of the builtin type 'list'",
579:                                                           node.lineno)
580:         list_stmts.append(call_comment)
581:         get_list_func = core_language_copy.create_Name("get_builtin_type")
582:         param1 = core_language_copy.create_str('list')
583:         get_list_call = functions_copy.create_call(get_list_func, [localization, param1])
584:         get_list_stmts, list_var = stypy_functions_copy.create_temp_Assign(get_list_call, node.lineno, node.col_offset)
585:         list_stmts.append(get_list_stmts)
586: 
587:         comment = stypy_functions_copy.create_src_comment("Adding type elements to the builtin type 'list' instance",
588:                                                      node.lineno)
589:         list_stmts.append(comment)
590: 
591:         # Prepare the add type function
592:         add_type_func = core_language_copy.create_attribute(list_var.id, "add_type")
593:         # Iterate over all elements of the list and add them
594:         for element in node.elts:
595:             comment = stypy_functions_copy.create_src_comment("Adding element type", node.lineno)
596:             list_stmts.append(comment)
597:             element_stmts, list_element = self.visit(element, context)
598:             list_stmts.append(stypy_functions_copy.flatten_lists(element_stmts))
599: 
600:             add_type_to_list_call = functions_copy.create_call_expression(add_type_func, [localization, list_element])
601:             list_stmts.append(add_type_to_list_call)
602: 
603:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
604:                                              list_stmts,
605:                                              stypy_functions_copy.create_blank_line()), list_var
606: 
607:     def visit_Tuple(self, node, context):
608:         # print inspect.stack()[0][3]
609: 
610:         tuple_stmts = []
611: 
612:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
613: 
614:         # Get a list instance
615:         call_comment = stypy_functions_copy.create_src_comment("Obtaining an instance of the builtin type 'tuple'",
616:                                                           node.lineno)
617:         tuple_stmts.append(call_comment)
618:         get_tuple_func = core_language_copy.create_Name("get_builtin_type")
619:         param1 = core_language_copy.create_str('tuple')
620:         get_tuple_call = functions_copy.create_call(get_tuple_func, [localization, param1])
621:         get_tuple_stmts, list_var = stypy_functions_copy.create_temp_Assign(get_tuple_call, node.lineno, node.col_offset)
622:         tuple_stmts.append(get_tuple_stmts)
623: 
624:         comment = stypy_functions_copy.create_src_comment("Adding type elements to the builtin type 'tuple' instance",
625:                                                      node.lineno)
626:         tuple_stmts.append(comment)
627: 
628:         # Prepare the add type function
629:         add_type_func = core_language_copy.create_attribute(list_var.id, "add_type")
630:         # Iterate over all elements of the list and add them
631:         for element in node.elts:
632:             comment = stypy_functions_copy.create_src_comment("Adding element type", node.lineno)
633:             tuple_stmts.append(comment)
634:             element_stmts, tuple_element = self.visit(element, context)
635:             tuple_stmts.append(stypy_functions_copy.flatten_lists(element_stmts))
636: 
637:             add_type_to_list_call = functions_copy.create_call_expression(add_type_func, [localization, tuple_element])
638:             tuple_stmts.append(add_type_to_list_call)
639: 
640:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
641:                                              tuple_stmts,
642:                                              stypy_functions_copy.create_blank_line()), list_var
643: 
644:         # # print inspect.stack()[0][3]
645:         #
646:         # tuple_stmts = []
647:         # tuple_elmts = []
648:         #
649:         # if type(node.ctx) == ast.Store:
650:         # for element in node.elts:
651:         # elem_to_store, temp = self.visit(element, context)
652:         # tuple_elmts.append(elem_to_store)
653:         #
654:         # node.elts = tuple_elmts
655:         #
656:         # return stypy_functions_copy.flatten_lists(tuple_stmts, node), []
657:         # else:
658:         #     for element in node.elts:
659:         #         elem_stmts, temp = self.visit(element, context)
660:         #         tuple_stmts.append(elem_stmts)
661:         #         tuple_elmts.append(temp)
662:         #
663:         #     node.elts = tuple_elmts
664:         #     tuple_assign, tuple_var = stypy_functions_copy.create_temp_Assign(node, node.lineno, node.col_offset)
665:         #
666:         #     return stypy_functions_copy.flatten_lists(tuple_stmts, tuple_assign), tuple_var
667: 
668:     def visit_Slice(self, node, context):
669:         # print inspect.stack()[0][3]
670:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
671: 
672:         if node.lower is not None:
673:             lower_inst, lower_var = self.visit(node.lower, context)
674:         else:
675:             lower_inst, lower_var = [], core_language_copy.create_Name("None")
676: 
677:         if node.upper is not None:
678:             upper_inst, upper_var = self.visit(node.upper, context)
679:         else:
680:             upper_inst, upper_var = [], core_language_copy.create_Name("None")
681: 
682:         if node.step is not None:
683:             step_inst, step_var = self.visit(node.upper, context)
684:         else:
685:             step_inst, step_var = [], core_language_copy.create_Name("None")
686: 
687:         get_slice_func = core_language_copy.create_Name("ensure_slice_bounds")
688:         get_list_call = functions_copy.create_call(get_slice_func, [localization, lower_var, upper_var, step_var])
689:         assign_stmts, assign_var = stypy_functions_copy.create_temp_Assign(get_list_call, 0, 0)
690:         return stypy_functions_copy.flatten_lists(lower_inst,
691:                                              upper_inst,
692:                                              step_inst,
693:                                              assign_stmts), assign_var
694: 
695:     def visit_ListComp(self, node, context):
696:         src_comment = stypy_functions_copy.create_src_comment("Calculating list comprehension")
697:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
698: 
699:         # context_set = functions_copy.create_context_set("list comprehension expression")
700: 
701:         elt_stmts, elt_var = self.visit(node.elt, context)
702: 
703:         generator_stmts = []
704:         generator_vars = []
705:         for gen in node.generators:
706:             stypy_functions_copy.assign_line_and_column(gen, node)
707:             temp_stmts, temp_var = self.visit(gen, context)
708:             generator_stmts.append(temp_stmts)
709:             generator_vars.append(generator_vars)
710: 
711:         get_type_call = core_language_copy.create_Name('get_builtin_type', line=node.lineno, column=node.col_offset)
712:         get_type_call_param = core_language_copy.create_str('list')
713:         call = functions_copy.create_call(get_type_call, [localization, get_type_call_param])
714:         ret_list_stmts, ret_list_var = stypy_functions_copy.create_temp_Assign(call, line=node.lineno,
715:                                                                           column=node.col_offset)
716: 
717:         invoke_set_element = core_language_copy.create_attribute(ret_list_var, 'set_elements_type')
718: 
719:         # context_unset = functions_copy.create_context_unset()
720:         false_ = core_language_copy.create_Name('False')
721:         call_to_set_element = functions_copy.create_call_expression(invoke_set_element, [localization, elt_var, false_])
722: 
723:         return stypy_functions_copy.flatten_lists(src_comment, generator_stmts, elt_stmts, ret_list_stmts,
724:                                              call_to_set_element), ret_list_var
725: 
726:     def visit_comprehension(self, node, context):
727:         src_comment = stypy_functions_copy.create_src_comment("Calculating comprehension expression")
728:         if_stmts = []
729:         if_vars = []
730:         for if_ in node.ifs:
731:             temp_stmts, temp_var = self.visit(if_, context)
732:             if_stmts.append(temp_stmts)
733:             if_vars.append(temp_var)
734: 
735:         iter_stmts, iter_var = self.visit(node.iter, context)
736:         get_elements_call = core_language_copy.create_attribute(iter_var, 'get_elements_type', line=node.lineno,
737:                                                            column=node.col_offset)
738:         iter_elems_call = functions_copy.create_call(get_elements_call, [], line=node.lineno,
739:                                                 column=node.col_offset)
740:         iter_elems_stmts, iter_elems_var = stypy_functions_copy.create_temp_Assign(iter_elems_call, line=node.lineno,
741:                                                                               column=node.col_offset)
742: 
743:         target_var, temp = self.visit(node.target, context)
744:         if isinstance(target_var, ast.Name):
745:             set_type_of_target_stmts = stypy_functions_copy.create_set_type_of(target_var.id, iter_elems_var, lineno=node.lineno,
746:                                                                       col_offset=node.col_offset)
747:         else:
748:             set_type_of_target_stmts = stypy_functions_copy.create_set_type_of(temp.id, iter_elems_var, lineno=node.lineno,
749:                                                                       col_offset=node.col_offset)
750:             set_type_of_target_stmts = target_var + set_type_of_target_stmts
751: 
752:         # localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
753: 
754:         return stypy_functions_copy.flatten_lists(src_comment, iter_stmts, iter_elems_stmts,
755:                                              set_type_of_target_stmts, if_stmts), target_var
756: 
757:     def visit_Set(self, node, context):
758:         set_stmts = []
759: 
760:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
761: 
762:         # Get a set instance
763:         call_comment = stypy_functions_copy.create_src_comment("Obtaining an instance of the builtin type 'set'",
764:                                                           node.lineno)
765:         set_stmts.append(call_comment)
766:         get_sett_func = core_language_copy.create_Name("get_builtin_type")
767:         param1 = core_language_copy.create_str('set')
768:         get_set_call = functions_copy.create_call(get_sett_func, [localization, param1])
769:         get_set_stmts, set_var = stypy_functions_copy.create_temp_Assign(get_set_call, node.lineno, node.col_offset)
770:         set_stmts.append(get_set_stmts)
771: 
772:         comment = stypy_functions_copy.create_src_comment("Adding type elements to the builtin type 'set' instance",
773:                                                      node.lineno)
774:         set_stmts.append(comment)
775: 
776:         # Prepare the add type function
777:         add_type_func = core_language_copy.create_attribute(set_var.id, "add_type")
778:         # Iterate over all elements of the list and add them
779:         for element in node.elts:
780:             comment = stypy_functions_copy.create_src_comment("Adding element type", node.lineno)
781:             set_stmts.append(comment)
782:             element_stmts, set_element = self.visit(element, context)
783:             set_stmts.append(stypy_functions_copy.flatten_lists(element_stmts))
784: 
785:             add_type_to_set_call = functions_copy.create_call_expression(add_type_func, [localization, set_element])
786:             set_stmts.append(add_type_to_set_call)
787: 
788:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
789:                                              set_stmts,
790:                                              stypy_functions_copy.create_blank_line()), set_var
791: 
792:     def visit_SetComp(self, node, context):
793:         src_comment = stypy_functions_copy.create_src_comment("Calculating set comprehension")
794:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
795: 
796:         context_set = functions_copy.create_context_set("set comprehension expression", node.lineno, node.col_offset)
797: 
798:         elt_stmts, elt_var = self.visit(node.elt, context)
799: 
800:         generator_stmts = []
801:         generator_vars = []
802:         for gen in node.generators:
803:             stypy_functions_copy.assign_line_and_column(gen, node)
804:             temp_stmts, temp_var = self.visit(gen, context)
805:             generator_stmts.append(temp_stmts)
806:             generator_vars.append(generator_vars)
807: 
808:         get_type_call = core_language_copy.create_Name('get_builtin_type', line=node.lineno, column=node.col_offset)
809:         get_type_call_param = core_language_copy.create_str('set')
810:         call = functions_copy.create_call(get_type_call, [localization, get_type_call_param])
811:         ret_set_stmts, ret_set_var = stypy_functions_copy.create_temp_Assign(call, line=node.lineno,
812:                                                                         column=node.col_offset)
813: 
814:         invoke_set_element = core_language_copy.create_attribute(ret_set_var, 'set_elements_type')
815: 
816:         context_unset = functions_copy.create_context_unset()
817:         false_ = core_language_copy.create_Name('False')
818:         call_to_set_element = functions_copy.create_call_expression(invoke_set_element, [localization, elt_var, false_])
819: 
820:         return stypy_functions_copy.flatten_lists(src_comment, context_set, generator_stmts, elt_stmts, ret_set_stmts,
821:                                              context_unset, call_to_set_element), ret_set_var
822: 
823:     def visit_Dict(self, node, context):
824:         set_stmts = []
825: 
826:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
827: 
828:         # Get a dict instance
829:         call_comment = stypy_functions_copy.create_src_comment("Obtaining an instance of the builtin type 'dict'",
830:                                                           node.lineno)
831:         set_stmts.append(call_comment)
832:         get_sett_func = core_language_copy.create_Name("get_builtin_type")
833:         param1 = core_language_copy.create_str('dict')
834:         get_set_call = functions_copy.create_call(get_sett_func, [localization, param1])
835:         get_set_stmts, set_var = stypy_functions_copy.create_temp_Assign(get_set_call, node.lineno, node.col_offset)
836:         set_stmts.append(get_set_stmts)
837: 
838:         comment = stypy_functions_copy.create_src_comment("Adding type elements to the builtin type 'dict' instance",
839:                                                      node.lineno)
840:         set_stmts.append(comment)
841: 
842:         # Prepare the add type function
843:         add_type_func = core_language_copy.create_attribute(set_var.id, "add_key_and_value_type")
844:         # Iterate over all elements of the dict and add them
845:         for key, value in zip(node.keys, node.values):
846:             comment = stypy_functions_copy.create_src_comment("Adding element type (key, value)", node.lineno)
847:             set_stmts.append(comment)
848:             key_stmts, key_var = self.visit(key, context)
849:             value_stmts, value_var = self.visit(value, context)
850: 
851:             tuple_node = ast.Tuple()
852:             tuple_node.elts = [key_var, value_var]
853: 
854:             # set_stmts.append(stypy_functions_copy.flatten_lists(key_stmts))
855:             # set_stmts.append(stypy_functions_copy.flatten_lists(value_stmts))
856:             set_stmts.append(key_stmts)
857:             set_stmts.append(value_stmts)
858: 
859:             add_type_to_set_call = functions_copy.create_call_expression(add_type_func, [localization, tuple_node])
860:             set_stmts.append(add_type_to_set_call)
861: 
862:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
863:                                              set_stmts,
864:                                              stypy_functions_copy.create_blank_line()), set_var
865: 
866:     def visit_DictComp(self, node, context):
867:         src_comment = stypy_functions_copy.create_src_comment("Calculating dict comprehension")
868:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
869: 
870:         context_set = functions_copy.create_context_set("dict comprehension expression", node.lineno,
871:                                                    node.col_offset)
872: 
873:         key_stmts, key_var = self.visit(node.key, context)
874:         value_stmts, value_var = self.visit(node.value, context)
875: 
876:         generator_stmts = []
877:         generator_vars = []
878:         for gen in node.generators:
879:             stypy_functions_copy.assign_line_and_column(gen, node)
880:             temp_stmts, temp_var = self.visit(gen, context)
881:             generator_stmts.append(temp_stmts)
882:             generator_vars.append(generator_vars)
883: 
884:         get_type_call = core_language_copy.create_Name('get_builtin_type', line=node.lineno, column=node.col_offset)
885:         get_type_call_param = core_language_copy.create_str('dict')
886:         call = functions_copy.create_call(get_type_call, [localization, get_type_call_param])
887:         ret_set_stmts, ret_set_var = stypy_functions_copy.create_temp_Assign(call, line=node.lineno,
888:                                                                         column=node.col_offset)
889: 
890:         invoke_set_element = core_language_copy.create_attribute(ret_set_var, 'add_key_and_value_type')
891: 
892:         context_unset = functions_copy.create_context_unset()
893:         tuple_node = ast.Tuple()
894:         tuple_node.elts = [key_var, value_var]
895:         false_ = core_language_copy.create_Name('False')
896:         call_to_set_element = functions_copy.create_call_expression(invoke_set_element, [localization, tuple_node, false_])
897: 
898:         return stypy_functions_copy.flatten_lists(src_comment, context_set, generator_stmts, key_stmts, value_stmts,
899:                                              ret_set_stmts,
900:                                              context_unset, call_to_set_element), ret_set_var
901: 
902:     def visit_GeneratorExp(self, node, context):
903:         src_comment = stypy_functions_copy.create_src_comment("Calculating generator expression")
904:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
905: 
906:         context_set = functions_copy.create_context_set("list comprehension expression", node.lineno, node.col_offset)
907: 
908:         elt_stmts, elt_var = self.visit(node.elt, context)
909: 
910:         generator_stmts = []
911:         generator_vars = []
912:         for gen in node.generators:
913:             stypy_functions_copy.assign_line_and_column(gen, node)
914:             temp_stmts, temp_var = self.visit(gen, context)
915:             generator_stmts.append(temp_stmts)
916:             generator_vars.append(generator_vars)
917: 
918:         get_type_call = core_language_copy.create_Name('get_builtin_type', line=node.lineno, column=node.col_offset)
919:         get_type_call_param = core_language_copy.create_str('list')
920:         call = functions_copy.create_call(get_type_call, [localization, get_type_call_param])
921:         ret_list_stmts, ret_list_var = stypy_functions_copy.create_temp_Assign(call, line=node.lineno,
922:                                                                           column=node.col_offset)
923: 
924:         invoke_set_element = core_language_copy.create_attribute(ret_list_var, 'set_elements_type')
925: 
926:         context_unset = functions_copy.create_context_unset()
927:         call_to_set_element = functions_copy.create_call_expression(invoke_set_element, [localization, elt_var])
928: 
929:         return stypy_functions_copy.flatten_lists(src_comment, context_set, generator_stmts, elt_stmts, ret_list_stmts,
930:                                              context_unset, call_to_set_element), ret_list_var
931: 
932:     def visit_IfExp(self, node, context):
933:         if_stmt_body = []
934:         if_stmt_orelse = []
935: 
936:         begin_if_comment = stypy_functions_copy.create_blank_line()
937: 
938:         # Process conditional expression of the if
939:         condition_stmt, if_stmt_test = self.visit(node.test, context)
940: 
941:         # Test the type of the if condition
942:         condition_comment = stypy_functions_copy.create_src_comment("Testing the type of an if expression", node.lineno)
943:         attribute = core_language_copy.create_Name("is_suitable_condition")
944:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
945:         test_condition_call = functions_copy.create_call_expression(attribute, [localization, if_stmt_test])
946: 
947:         # Begin the if body
948:         if_stmt_body.append(stypy_functions_copy.create_src_comment("SSA begins for if expression", node.lineno))
949:         clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
950:         if_stmt_body.append(clone_stmt1)
951: 
952:         # Process if body sentences
953:         body_stmts, body_value = self.__visit_instruction_body(node.body, context)
954:         if_stmt_body.extend(body_stmts)
955: 
956:         # Process else branch
957:         if_stmt_body.append(
958:             stypy_functions_copy.create_src_comment("SSA branch for the else part of an if expression", node.lineno))
959:         clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
960:         if_stmt_body.append(clone_stmt2)
961: 
962:         set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
963:         if_stmt_body.append(set_type_store1)
964: 
965:         # Process else body sentences
966:         orelse_stmts, orelse_value = self.__visit_instruction_body(node.orelse, context)
967:         if_stmt_orelse.extend(orelse_stmts)
968: 
969:         # Join if
970:         if_stmt_orelse.append(stypy_functions_copy.create_src_comment("SSA join for if expression", node.lineno))
971:         clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
972:         if_stmt_orelse.append(clone_stmt3)
973:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("ssa_join_with_else_branch",
974:                                                                              [type_store_var1, type_store_var2,
975:                                                                               type_store_var3])
976:         if_stmt_orelse.append(join_stmt)
977: 
978:         # Calculate the final type store
979:         set_type_store2 = stypy_functions_copy.create_set_type_store(final_type_store)
980:         if_stmt_orelse.append(set_type_store2)
981: 
982:         # Unify all if body statements
983:         all_if_stmts = if_stmt_body + if_stmt_orelse
984: 
985:         # Unify all if sentences
986:         if_stmt = stypy_functions_copy.flatten_lists(condition_comment, test_condition_call, all_if_stmts)
987: 
988:         union_type = core_language_copy.create_attribute("union_type", "UnionType")
989:         union_add = core_language_copy.create_attribute(union_type, "add")
990: 
991:         union_call = functions_copy.create_call(union_add, [body_value, orelse_value])
992: 
993:         ret_assign_stmts, ret_var = stypy_functions_copy.create_temp_Assign(union_call, line=node.lineno,
994:                                                                        column=node.col_offset)
995: 
996:         end_if_comment = stypy_functions_copy.create_blank_line()
997: 
998:         return stypy_functions_copy.flatten_lists(begin_if_comment,
999:                                              condition_stmt,
1000:                                              if_stmt,
1001:                                              ret_assign_stmts,
1002:                                              end_if_comment), ret_var
1003: 
1004:     def visit_Ellipsis(self, node, context):
1005:         return [], []
1006: 
1007:     def visit_ExtSlice(self, node, context):
1008:         # localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
1009:         stmts = []
1010:         dim_vars = []
1011:         for dim in node.dims:
1012:             stypy_functions_copy.assign_line_and_column(dim, node)
1013:             dim_stmts, dim_var = self.visit(dim, context)
1014:             stmts.append(dim_stmts)
1015:             dim_vars.append(dim_var)
1016: 
1017:         tuple_node = ast.Tuple()
1018:         tuple_node.elts = dim_vars
1019: 
1020:         return stypy_functions_copy.flatten_lists(stmts), tuple_node
1021: 
1022:     def visit_alias(self, node, context):
1023:         # localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
1024:         return_name = core_language_copy.create_str(node.name)
1025:         alias_method_call = []
1026: 
1027:         if not node.asname is None:
1028:             alias_name = core_language_copy.create_str(node.asname)
1029:             alias_method_call = stypy_functions_copy.create_add_alias(alias_name, return_name, node.lineno, node.col_offset)
1030: 
1031:         return stypy_functions_copy.flatten_lists(alias_method_call), return_name
1032: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 1, 0))

# 'from stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import ' statement (line 1)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_9646 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 1, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy')

if (type(import_9646) is not StypyTypeError):

    if (import_9646 != 'pyd_module'):
        __import__(import_9646)
        sys_modules_9647 = sys.modules[import_9646]
        import_from_module(stypy.reporting.localization.Localization(__file__, 1, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', sys_modules_9647.module_type_store, module_type_store, ['*'])
        nest_module(stypy.reporting.localization.Localization(__file__, 1, 0), __file__, sys_modules_9647, sys_modules_9647.module_type_store, module_type_store)
    else:
        from stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import *

        import_from_module(stypy.reporting.localization.Localization(__file__, 1, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', None, module_type_store, ['*'], None)

else:
    # Assigning a type to the variable 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy' (line 1)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', import_9646)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 2, 0))

# 'from stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy' statement (line 2)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_9648 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 2, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy')

if (type(import_9648) is not StypyTypeError):

    if (import_9648 != 'pyd_module'):
        __import__(import_9648)
        sys_modules_9649 = sys.modules[import_9648]
        import_from_module(stypy.reporting.localization.Localization(__file__, 2, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', sys_modules_9649.module_type_store, module_type_store, ['core_language_copy', 'functions_copy', 'stypy_functions_copy', 'data_structures_copy'])
        nest_module(stypy.reporting.localization.Localization(__file__, 2, 0), __file__, sys_modules_9649, sys_modules_9649.module_type_store, module_type_store)
    else:
        from stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy

        import_from_module(stypy.reporting.localization.Localization(__file__, 2, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', None, module_type_store, ['core_language_copy', 'functions_copy', 'stypy_functions_copy', 'data_structures_copy'], [core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy])

else:
    # Assigning a type to the variable 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy' (line 2)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 2, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', import_9648)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 4, 0))

# 'import statement_visitor_copy' statement (line 4)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_9650 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'statement_visitor_copy')

if (type(import_9650) is not StypyTypeError):

    if (import_9650 != 'pyd_module'):
        __import__(import_9650)
        sys_modules_9651 = sys.modules[import_9650]
        import_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'statement_visitor_copy', sys_modules_9651.module_type_store, module_type_store)
    else:
        import statement_visitor_copy

        import_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'statement_visitor_copy', statement_visitor_copy, module_type_store)

else:
    # Assigning a type to the variable 'statement_visitor_copy' (line 4)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 4, 0), 'statement_visitor_copy', import_9650)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 5, 0))

# 'import ast' statement (line 5)
import ast

import_module(stypy.reporting.localization.Localization(__file__, 5, 0), 'ast', ast, module_type_store)

# Declaration of the 'ValueVisitor' class
# Getting the type of 'ast' (line 7)
ast_9652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 7, 19), 'ast')
# Obtaining the member 'NodeVisitor' of a type (line 7)
NodeVisitor_9653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 7, 19), ast_9652, 'NodeVisitor')

class ValueVisitor(NodeVisitor_9653, ):
    str_9654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, (-1)), 'str', '\n    Visitor for value nodes, that are AST nodes that return tuples of statement lists and temp variable nodes when\n    the result of a certain operation represented by the node is stored. If when processing a statement\n    node one of its children nodes is a value node, a StatementVisitor is automatically run to process this child node.\n    This visitor allows us to generate three address code for the type inference programs\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 15, 4, False)
        # Assigning a type to the variable 'self' (line 16)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.__init__', ['filename'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 16):
        
        # Assigning a Name to a Attribute (line 16):
        # Getting the type of 'filename' (line 16)
        filename_9655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 25), 'filename')
        # Getting the type of 'self' (line 16)
        self_9656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 8), 'self')
        # Setting the type of the member 'file_name' of a type (line 16)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 16, 8), self_9656, 'file_name', filename_9655)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def visit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit'
        module_type_store = module_type_store.open_function_context('visit', 18, 4, False)
        # Assigning a type to the variable 'self' (line 19)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit')
        ValueVisitor.visit.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit(...)' code ##################

        str_9657 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 19, 8), 'str', 'Visit a node.')
        
        # Assigning a BinOp to a Name (line 20):
        
        # Assigning a BinOp to a Name (line 20):
        str_9658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 17), 'str', 'visit_')
        # Getting the type of 'node' (line 20)
        node_9659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 28), 'node')
        # Obtaining the member '__class__' of a type (line 20)
        class___9660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 28), node_9659, '__class__')
        # Obtaining the member '__name__' of a type (line 20)
        name___9661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 28), class___9660, '__name__')
        # Applying the binary operator '+' (line 20)
        result_add_9662 = python_operator(stypy.reporting.localization.Localization(__file__, 20, 17), '+', str_9658, name___9661)
        
        # Assigning a type to the variable 'method' (line 20)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 8), 'method', result_add_9662)
        
        # Assigning a Call to a Name (line 21):
        
        # Assigning a Call to a Name (line 21):
        
        # Call to getattr(...): (line 21)
        # Processing the call arguments (line 21)
        # Getting the type of 'self' (line 21)
        self_9664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 26), 'self', False)
        # Getting the type of 'method' (line 21)
        method_9665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 32), 'method', False)
        # Getting the type of 'self' (line 21)
        self_9666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 40), 'self', False)
        # Obtaining the member 'generic_visit' of a type (line 21)
        generic_visit_9667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 21, 40), self_9666, 'generic_visit')
        # Processing the call keyword arguments (line 21)
        kwargs_9668 = {}
        # Getting the type of 'getattr' (line 21)
        getattr_9663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 18), 'getattr', False)
        # Calling getattr(args, kwargs) (line 21)
        getattr_call_result_9669 = invoke(stypy.reporting.localization.Localization(__file__, 21, 18), getattr_9663, *[self_9664, method_9665, generic_visit_9667], **kwargs_9668)
        
        # Assigning a type to the variable 'visitor' (line 21)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 8), 'visitor', getattr_call_result_9669)
        
        # Getting the type of 'visitor' (line 22)
        visitor_9670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 11), 'visitor')
        # Getting the type of 'self' (line 22)
        self_9671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 22), 'self')
        # Obtaining the member 'generic_visit' of a type (line 22)
        generic_visit_9672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 22, 22), self_9671, 'generic_visit')
        # Applying the binary operator '==' (line 22)
        result_eq_9673 = python_operator(stypy.reporting.localization.Localization(__file__, 22, 11), '==', visitor_9670, generic_visit_9672)
        
        # Testing if the type of an if condition is none (line 22)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 22, 8), result_eq_9673):
            pass
        else:
            
            # Testing the type of an if condition (line 22)
            if_condition_9674 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 22, 8), result_eq_9673)
            # Assigning a type to the variable 'if_condition_9674' (line 22)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 8), 'if_condition_9674', if_condition_9674)
            # SSA begins for if statement (line 22)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to visitor(...): (line 23)
            # Processing the call arguments (line 23)
            # Getting the type of 'node' (line 23)
            node_9676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 27), 'node', False)
            # Getting the type of 'context' (line 23)
            context_9677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 33), 'context', False)
            
            # Obtaining an instance of the builtin type 'list' (line 23)
            list_9678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 43), 'list')
            # Adding type elements to the builtin type 'list' instance (line 23)
            # Adding element type (line 23)
            # Getting the type of 'method' (line 23)
            method_9679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 44), 'method', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 43), list_9678, method_9679)
            
            # Applying the binary operator '+' (line 23)
            result_add_9680 = python_operator(stypy.reporting.localization.Localization(__file__, 23, 33), '+', context_9677, list_9678)
            
            # Processing the call keyword arguments (line 23)
            kwargs_9681 = {}
            # Getting the type of 'visitor' (line 23)
            visitor_9675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 19), 'visitor', False)
            # Calling visitor(args, kwargs) (line 23)
            visitor_call_result_9682 = invoke(stypy.reporting.localization.Localization(__file__, 23, 19), visitor_9675, *[node_9676, result_add_9680], **kwargs_9681)
            
            # Assigning a type to the variable 'stypy_return_type' (line 23)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 12), 'stypy_return_type', visitor_call_result_9682)
            # SSA join for if statement (line 22)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to visitor(...): (line 24)
        # Processing the call arguments (line 24)
        # Getting the type of 'node' (line 24)
        node_9684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 23), 'node', False)
        # Getting the type of 'context' (line 24)
        context_9685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 29), 'context', False)
        # Processing the call keyword arguments (line 24)
        kwargs_9686 = {}
        # Getting the type of 'visitor' (line 24)
        visitor_9683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 15), 'visitor', False)
        # Calling visitor(args, kwargs) (line 24)
        visitor_call_result_9687 = invoke(stypy.reporting.localization.Localization(__file__, 24, 15), visitor_9683, *[node_9684, context_9685], **kwargs_9686)
        
        # Assigning a type to the variable 'stypy_return_type' (line 24)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 8), 'stypy_return_type', visitor_call_result_9687)
        
        # ################# End of 'visit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit' in the type store
        # Getting the type of 'stypy_return_type' (line 18)
        stypy_return_type_9688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 18, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9688)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit'
        return stypy_return_type_9688


    @norecursion
    def __visit_instruction_body(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__visit_instruction_body'
        module_type_store = module_type_store.open_function_context('__visit_instruction_body', 26, 4, False)
        # Assigning a type to the variable 'self' (line 27)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.__visit_instruction_body')
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_param_names_list', ['body', 'context'])
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.__visit_instruction_body', ['body', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__visit_instruction_body', localization, ['body', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__visit_instruction_body(...)' code ##################

        
        # Assigning a List to a Name (line 27):
        
        # Assigning a List to a Name (line 27):
        
        # Obtaining an instance of the builtin type 'list' (line 27)
        list_9689 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 27)
        
        # Assigning a type to the variable 'new_stmts' (line 27)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 8), 'new_stmts', list_9689)
        
        # Assigning a List to a Name (line 28):
        
        # Assigning a List to a Name (line 28):
        
        # Obtaining an instance of the builtin type 'list' (line 28)
        list_9690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 28)
        
        # Assigning a type to the variable 'temp' (line 28)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 8), 'temp', list_9690)
        
        # Type idiom detected: calculating its left and rigth part (line 30)
        # Getting the type of 'list' (line 30)
        list_9691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 32), 'list')
        # Getting the type of 'body' (line 30)
        body_9692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 26), 'body')
        
        (may_be_9693, more_types_in_union_9694) = may_not_be_subtype(list_9691, body_9692)

        if may_be_9693:

            if more_types_in_union_9694:
                # Runtime conditional SSA (line 30)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            # Assigning a type to the variable 'body' (line 30)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 30, 8), 'body', remove_subtype_from_union(body_9692, list))
            
            # Assigning a List to a Name (line 31):
            
            # Assigning a List to a Name (line 31):
            
            # Obtaining an instance of the builtin type 'list' (line 31)
            list_9695 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 31, 19), 'list')
            # Adding type elements to the builtin type 'list' instance (line 31)
            # Adding element type (line 31)
            # Getting the type of 'body' (line 31)
            body_9696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 20), 'body')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 31, 19), list_9695, body_9696)
            
            # Assigning a type to the variable 'body' (line 31)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 12), 'body', list_9695)

            if more_types_in_union_9694:
                # SSA join for if statement (line 30)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'body' (line 34)
        body_9697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 34, 20), 'body')
        # Assigning a type to the variable 'body_9697' (line 34)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 34, 8), 'body_9697', body_9697)
        # Testing if the for loop is going to be iterated (line 34)
        # Testing the type of a for loop iterable (line 34)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 34, 8), body_9697)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 34, 8), body_9697):
            # Getting the type of the for loop variable (line 34)
            for_loop_var_9698 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 34, 8), body_9697)
            # Assigning a type to the variable 'stmt' (line 34)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 34, 8), 'stmt', for_loop_var_9698)
            # SSA begins for a for statement (line 34)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 35):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 35)
            # Processing the call arguments (line 35)
            # Getting the type of 'stmt' (line 35)
            stmt_9701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 37), 'stmt', False)
            # Getting the type of 'context' (line 35)
            context_9702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 43), 'context', False)
            # Processing the call keyword arguments (line 35)
            kwargs_9703 = {}
            # Getting the type of 'self' (line 35)
            self_9699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 26), 'self', False)
            # Obtaining the member 'visit' of a type (line 35)
            visit_9700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 35, 26), self_9699, 'visit')
            # Calling visit(args, kwargs) (line 35)
            visit_call_result_9704 = invoke(stypy.reporting.localization.Localization(__file__, 35, 26), visit_9700, *[stmt_9701, context_9702], **kwargs_9703)
            
            # Assigning a type to the variable 'call_assignment_9398' (line 35)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'call_assignment_9398', visit_call_result_9704)
            
            # Assigning a Call to a Name (line 35):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9398' (line 35)
            call_assignment_9398_9705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'call_assignment_9398', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9706 = stypy_get_value_from_tuple(call_assignment_9398_9705, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9399' (line 35)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'call_assignment_9399', stypy_get_value_from_tuple_call_result_9706)
            
            # Assigning a Name to a Name (line 35):
            # Getting the type of 'call_assignment_9399' (line 35)
            call_assignment_9399_9707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'call_assignment_9399')
            # Assigning a type to the variable 'stmts' (line 35)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'stmts', call_assignment_9399_9707)
            
            # Assigning a Call to a Name (line 35):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9398' (line 35)
            call_assignment_9398_9708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'call_assignment_9398', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9709 = stypy_get_value_from_tuple(call_assignment_9398_9708, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9400' (line 35)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'call_assignment_9400', stypy_get_value_from_tuple_call_result_9709)
            
            # Assigning a Name to a Name (line 35):
            # Getting the type of 'call_assignment_9400' (line 35)
            call_assignment_9400_9710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 35, 12), 'call_assignment_9400')
            # Assigning a type to the variable 'temp' (line 35)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 35, 19), 'temp', call_assignment_9400_9710)
            
            # Type idiom detected: calculating its left and rigth part (line 36)
            # Getting the type of 'list' (line 36)
            list_9711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 33), 'list')
            # Getting the type of 'stmts' (line 36)
            stmts_9712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 26), 'stmts')
            
            (may_be_9713, more_types_in_union_9714) = may_be_subtype(list_9711, stmts_9712)

            if may_be_9713:

                if more_types_in_union_9714:
                    # Runtime conditional SSA (line 36)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                # Assigning a type to the variable 'stmts' (line 36)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 12), 'stmts', remove_not_subtype_from_union(stmts_9712, list))
                
                # Call to extend(...): (line 37)
                # Processing the call arguments (line 37)
                # Getting the type of 'stmts' (line 37)
                stmts_9717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 33), 'stmts', False)
                # Processing the call keyword arguments (line 37)
                kwargs_9718 = {}
                # Getting the type of 'new_stmts' (line 37)
                new_stmts_9715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 16), 'new_stmts', False)
                # Obtaining the member 'extend' of a type (line 37)
                extend_9716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 37, 16), new_stmts_9715, 'extend')
                # Calling extend(args, kwargs) (line 37)
                extend_call_result_9719 = invoke(stypy.reporting.localization.Localization(__file__, 37, 16), extend_9716, *[stmts_9717], **kwargs_9718)
                

                if more_types_in_union_9714:
                    # Runtime conditional SSA for else branch (line 36)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_9713) or more_types_in_union_9714):
                # Assigning a type to the variable 'stmts' (line 36)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 12), 'stmts', remove_subtype_from_union(stmts_9712, list))
                
                # Call to append(...): (line 39)
                # Processing the call arguments (line 39)
                # Getting the type of 'stmts' (line 39)
                stmts_9722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 33), 'stmts', False)
                # Processing the call keyword arguments (line 39)
                kwargs_9723 = {}
                # Getting the type of 'new_stmts' (line 39)
                new_stmts_9720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 16), 'new_stmts', False)
                # Obtaining the member 'append' of a type (line 39)
                append_9721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 39, 16), new_stmts_9720, 'append')
                # Calling append(args, kwargs) (line 39)
                append_call_result_9724 = invoke(stypy.reporting.localization.Localization(__file__, 39, 16), append_9721, *[stmts_9722], **kwargs_9723)
                

                if (may_be_9713 and more_types_in_union_9714):
                    # SSA join for if statement (line 36)
                    module_type_store = module_type_store.join_ssa_context()


            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Obtaining an instance of the builtin type 'tuple' (line 42)
        tuple_9725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 42)
        # Adding element type (line 42)
        # Getting the type of 'new_stmts' (line 42)
        new_stmts_9726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 15), 'new_stmts')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 42, 15), tuple_9725, new_stmts_9726)
        # Adding element type (line 42)
        # Getting the type of 'temp' (line 42)
        temp_9727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 26), 'temp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 42, 15), tuple_9725, temp_9727)
        
        # Assigning a type to the variable 'stypy_return_type' (line 42)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 8), 'stypy_return_type', tuple_9725)
        
        # ################# End of '__visit_instruction_body(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__visit_instruction_body' in the type store
        # Getting the type of 'stypy_return_type' (line 26)
        stypy_return_type_9728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9728)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__visit_instruction_body'
        return stypy_return_type_9728


    @norecursion
    def generic_visit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'generic_visit'
        module_type_store = module_type_store.open_function_context('generic_visit', 44, 4, False)
        # Assigning a type to the variable 'self' (line 45)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.generic_visit')
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.generic_visit.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.generic_visit', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'generic_visit', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'generic_visit(...)' code ##################

        
        # Call to hasattr(...): (line 45)
        # Processing the call arguments (line 45)
        # Getting the type of 'statement_visitor_copy' (line 45)
        statement_visitor_copy_9730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 19), 'statement_visitor_copy', False)
        # Obtaining the member 'StatementVisitor' of a type (line 45)
        StatementVisitor_9731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 19), statement_visitor_copy_9730, 'StatementVisitor')
        
        # Obtaining the type of the subscript
        int_9732 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 68), 'int')
        # Getting the type of 'context' (line 45)
        context_9733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 60), 'context', False)
        # Obtaining the member '__getitem__' of a type (line 45)
        getitem___9734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 60), context_9733, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 45)
        subscript_call_result_9735 = invoke(stypy.reporting.localization.Localization(__file__, 45, 60), getitem___9734, int_9732)
        
        # Processing the call keyword arguments (line 45)
        kwargs_9736 = {}
        # Getting the type of 'hasattr' (line 45)
        hasattr_9729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 11), 'hasattr', False)
        # Calling hasattr(args, kwargs) (line 45)
        hasattr_call_result_9737 = invoke(stypy.reporting.localization.Localization(__file__, 45, 11), hasattr_9729, *[StatementVisitor_9731, subscript_call_result_9735], **kwargs_9736)
        
        # Testing if the type of an if condition is none (line 45)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 45, 8), hasattr_call_result_9737):
            
            # Call to Exception(...): (line 48)
            # Processing the call arguments (line 48)
            str_9750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 28), 'str', 'VALUE VISITOR: ')
            
            # Obtaining the type of the subscript
            int_9751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 56), 'int')
            # Getting the type of 'context' (line 48)
            context_9752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 48), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 48)
            getitem___9753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 48), context_9752, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 48)
            subscript_call_result_9754 = invoke(stypy.reporting.localization.Localization(__file__, 48, 48), getitem___9753, int_9751)
            
            # Applying the binary operator '+' (line 48)
            result_add_9755 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 28), '+', str_9750, subscript_call_result_9754)
            
            str_9756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 62), 'str', ' is not yet implemented')
            # Applying the binary operator '+' (line 48)
            result_add_9757 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 60), '+', result_add_9755, str_9756)
            
            # Processing the call keyword arguments (line 48)
            kwargs_9758 = {}
            # Getting the type of 'Exception' (line 48)
            Exception_9749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 18), 'Exception', False)
            # Calling Exception(args, kwargs) (line 48)
            Exception_call_result_9759 = invoke(stypy.reporting.localization.Localization(__file__, 48, 18), Exception_9749, *[result_add_9757], **kwargs_9758)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 48, 12), Exception_call_result_9759, 'raise parameter', BaseException)
        else:
            
            # Testing the type of an if condition (line 45)
            if_condition_9738 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 45, 8), hasattr_call_result_9737)
            # Assigning a type to the variable 'if_condition_9738' (line 45)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 8), 'if_condition_9738', if_condition_9738)
            # SSA begins for if statement (line 45)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to visit_statement(...): (line 46)
            # Processing the call arguments (line 46)
            # Getting the type of 'node' (line 46)
            node_9741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 40), 'node', False)
            
            # Obtaining the type of the subscript
            int_9742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 55), 'int')
            slice_9743 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 46, 46), None, int_9742, None)
            # Getting the type of 'context' (line 46)
            context_9744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 46), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 46)
            getitem___9745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 46, 46), context_9744, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 46)
            subscript_call_result_9746 = invoke(stypy.reporting.localization.Localization(__file__, 46, 46), getitem___9745, slice_9743)
            
            # Processing the call keyword arguments (line 46)
            kwargs_9747 = {}
            # Getting the type of 'self' (line 46)
            self_9739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 46, 19), 'self', False)
            # Obtaining the member 'visit_statement' of a type (line 46)
            visit_statement_9740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 46, 19), self_9739, 'visit_statement')
            # Calling visit_statement(args, kwargs) (line 46)
            visit_statement_call_result_9748 = invoke(stypy.reporting.localization.Localization(__file__, 46, 19), visit_statement_9740, *[node_9741, subscript_call_result_9746], **kwargs_9747)
            
            # Assigning a type to the variable 'stypy_return_type' (line 46)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 12), 'stypy_return_type', visit_statement_call_result_9748)
            # SSA branch for the else part of an if statement (line 45)
            module_type_store.open_ssa_branch('else')
            
            # Call to Exception(...): (line 48)
            # Processing the call arguments (line 48)
            str_9750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 28), 'str', 'VALUE VISITOR: ')
            
            # Obtaining the type of the subscript
            int_9751 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 56), 'int')
            # Getting the type of 'context' (line 48)
            context_9752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 48), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 48)
            getitem___9753 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 48), context_9752, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 48)
            subscript_call_result_9754 = invoke(stypy.reporting.localization.Localization(__file__, 48, 48), getitem___9753, int_9751)
            
            # Applying the binary operator '+' (line 48)
            result_add_9755 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 28), '+', str_9750, subscript_call_result_9754)
            
            str_9756 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 48, 62), 'str', ' is not yet implemented')
            # Applying the binary operator '+' (line 48)
            result_add_9757 = python_operator(stypy.reporting.localization.Localization(__file__, 48, 60), '+', result_add_9755, str_9756)
            
            # Processing the call keyword arguments (line 48)
            kwargs_9758 = {}
            # Getting the type of 'Exception' (line 48)
            Exception_9749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 18), 'Exception', False)
            # Calling Exception(args, kwargs) (line 48)
            Exception_call_result_9759 = invoke(stypy.reporting.localization.Localization(__file__, 48, 18), Exception_9749, *[result_add_9757], **kwargs_9758)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 48, 12), Exception_call_result_9759, 'raise parameter', BaseException)
            # SSA join for if statement (line 45)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # ################# End of 'generic_visit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'generic_visit' in the type store
        # Getting the type of 'stypy_return_type' (line 44)
        stypy_return_type_9760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 44, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9760)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'generic_visit'
        return stypy_return_type_9760


    @norecursion
    def visit_statement(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_statement'
        module_type_store = module_type_store.open_function_context('visit_statement', 58, 4, False)
        # Assigning a type to the variable 'self' (line 59)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_statement')
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_statement.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_statement', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_statement', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_statement(...)' code ##################

        
        # Assigning a Call to a Name (line 59):
        
        # Assigning a Call to a Name (line 59):
        
        # Call to StatementVisitor(...): (line 59)
        # Processing the call arguments (line 59)
        # Getting the type of 'self' (line 59)
        self_9763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 60), 'self', False)
        # Obtaining the member 'file_name' of a type (line 59)
        file_name_9764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 60), self_9763, 'file_name')
        # Processing the call keyword arguments (line 59)
        kwargs_9765 = {}
        # Getting the type of 'statement_visitor_copy' (line 59)
        statement_visitor_copy_9761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 20), 'statement_visitor_copy', False)
        # Obtaining the member 'StatementVisitor' of a type (line 59)
        StatementVisitor_9762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 20), statement_visitor_copy_9761, 'StatementVisitor')
        # Calling StatementVisitor(args, kwargs) (line 59)
        StatementVisitor_call_result_9766 = invoke(stypy.reporting.localization.Localization(__file__, 59, 20), StatementVisitor_9762, *[file_name_9764], **kwargs_9765)
        
        # Assigning a type to the variable 's_visitor' (line 59)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 59, 8), 's_visitor', StatementVisitor_call_result_9766)
        
        # Obtaining an instance of the builtin type 'tuple' (line 61)
        tuple_9767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 61)
        # Adding element type (line 61)
        
        # Call to visit(...): (line 61)
        # Processing the call arguments (line 61)
        # Getting the type of 'node' (line 61)
        node_9770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 31), 'node', False)
        # Getting the type of 'context' (line 61)
        context_9771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 37), 'context', False)
        # Processing the call keyword arguments (line 61)
        kwargs_9772 = {}
        # Getting the type of 's_visitor' (line 61)
        s_visitor_9768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 15), 's_visitor', False)
        # Obtaining the member 'visit' of a type (line 61)
        visit_9769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 15), s_visitor_9768, 'visit')
        # Calling visit(args, kwargs) (line 61)
        visit_call_result_9773 = invoke(stypy.reporting.localization.Localization(__file__, 61, 15), visit_9769, *[node_9770, context_9771], **kwargs_9772)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 61, 15), tuple_9767, visit_call_result_9773)
        # Adding element type (line 61)
        
        # Obtaining an instance of the builtin type 'list' (line 61)
        list_9774 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 61, 47), 'list')
        # Adding type elements to the builtin type 'list' instance (line 61)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 61, 15), tuple_9767, list_9774)
        
        # Assigning a type to the variable 'stypy_return_type' (line 61)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 61, 8), 'stypy_return_type', tuple_9767)
        
        # ################# End of 'visit_statement(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_statement' in the type store
        # Getting the type of 'stypy_return_type' (line 58)
        stypy_return_type_9775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 58, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9775)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_statement'
        return stypy_return_type_9775


    @norecursion
    def visit_AugAssign(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_AugAssign'
        module_type_store = module_type_store.open_function_context('visit_AugAssign', 65, 4, False)
        # Assigning a type to the variable 'self' (line 66)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 66, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_AugAssign')
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_AugAssign.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_AugAssign', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_AugAssign', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_AugAssign(...)' code ##################

        
        # Assigning a Call to a Name (line 68):
        
        # Assigning a Call to a Name (line 68):
        
        # Call to lower(...): (line 68)
        # Processing the call keyword arguments (line 68)
        kwargs_9783 = {}
        
        # Call to type(...): (line 68)
        # Processing the call arguments (line 68)
        # Getting the type of 'node' (line 68)
        node_9777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 29), 'node', False)
        # Obtaining the member 'op' of a type (line 68)
        op_9778 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 29), node_9777, 'op')
        # Processing the call keyword arguments (line 68)
        kwargs_9779 = {}
        # Getting the type of 'type' (line 68)
        type_9776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 68, 24), 'type', False)
        # Calling type(args, kwargs) (line 68)
        type_call_result_9780 = invoke(stypy.reporting.localization.Localization(__file__, 68, 24), type_9776, *[op_9778], **kwargs_9779)
        
        # Obtaining the member '__name__' of a type (line 68)
        name___9781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 24), type_call_result_9780, '__name__')
        # Obtaining the member 'lower' of a type (line 68)
        lower_9782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 68, 24), name___9781, 'lower')
        # Calling lower(args, kwargs) (line 68)
        lower_call_result_9784 = invoke(stypy.reporting.localization.Localization(__file__, 68, 24), lower_9782, *[], **kwargs_9783)
        
        # Assigning a type to the variable 'operator_name' (line 68)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 8), 'operator_name', lower_call_result_9784)
        
        
        # Call to type(...): (line 71)
        # Processing the call arguments (line 71)
        # Getting the type of 'node' (line 71)
        node_9786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 16), 'node', False)
        # Obtaining the member 'target' of a type (line 71)
        target_9787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 71, 16), node_9786, 'target')
        # Processing the call keyword arguments (line 71)
        kwargs_9788 = {}
        # Getting the type of 'type' (line 71)
        type_9785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 11), 'type', False)
        # Calling type(args, kwargs) (line 71)
        type_call_result_9789 = invoke(stypy.reporting.localization.Localization(__file__, 71, 11), type_9785, *[target_9787], **kwargs_9788)
        
        # Getting the type of 'ast' (line 71)
        ast_9790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 71, 32), 'ast')
        # Obtaining the member 'Name' of a type (line 71)
        Name_9791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 71, 32), ast_9790, 'Name')
        # Applying the binary operator 'is' (line 71)
        result_is__9792 = python_operator(stypy.reporting.localization.Localization(__file__, 71, 11), 'is', type_call_result_9789, Name_9791)
        
        # Testing if the type of an if condition is none (line 71)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 71, 8), result_is__9792):
            
            # Assigning a Call to a Tuple (line 75):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 75)
            # Processing the call arguments (line 75)
            # Getting the type of 'node' (line 75)
            node_9813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 68), 'node', False)
            # Obtaining the member 'target' of a type (line 75)
            target_9814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 68), node_9813, 'target')
            # Obtaining the member 'value' of a type (line 75)
            value_9815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 68), target_9814, 'value')
            # Getting the type of 'context' (line 75)
            context_9816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 87), 'context', False)
            # Processing the call keyword arguments (line 75)
            kwargs_9817 = {}
            # Getting the type of 'self' (line 75)
            self_9811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 57), 'self', False)
            # Obtaining the member 'visit' of a type (line 75)
            visit_9812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 57), self_9811, 'visit')
            # Calling visit(args, kwargs) (line 75)
            visit_call_result_9818 = invoke(stypy.reporting.localization.Localization(__file__, 75, 57), visit_9812, *[value_9815, context_9816], **kwargs_9817)
            
            # Assigning a type to the variable 'call_assignment_9404' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9404', visit_call_result_9818)
            
            # Assigning a Call to a Name (line 75):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9404' (line 75)
            call_assignment_9404_9819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9404', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9820 = stypy_get_value_from_tuple(call_assignment_9404_9819, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9405' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9405', stypy_get_value_from_tuple_call_result_9820)
            
            # Assigning a Name to a Name (line 75):
            # Getting the type of 'call_assignment_9405' (line 75)
            call_assignment_9405_9821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9405')
            # Assigning a type to the variable 'get_target_obj_left_stmts' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'get_target_obj_left_stmts', call_assignment_9405_9821)
            
            # Assigning a Call to a Name (line 75):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9404' (line 75)
            call_assignment_9404_9822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9404', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9823 = stypy_get_value_from_tuple(call_assignment_9404_9822, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9406' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9406', stypy_get_value_from_tuple_call_result_9823)
            
            # Assigning a Name to a Name (line 75):
            # Getting the type of 'call_assignment_9406' (line 75)
            call_assignment_9406_9824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9406')
            # Assigning a type to the variable 'target_left_var' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 39), 'target_left_var', call_assignment_9406_9824)
            
            
            # Call to type(...): (line 80)
            # Processing the call arguments (line 80)
            # Getting the type of 'node' (line 80)
            node_9826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 20), 'node', False)
            # Obtaining the member 'target' of a type (line 80)
            target_9827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 20), node_9826, 'target')
            # Processing the call keyword arguments (line 80)
            kwargs_9828 = {}
            # Getting the type of 'type' (line 80)
            type_9825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 15), 'type', False)
            # Calling type(args, kwargs) (line 80)
            type_call_result_9829 = invoke(stypy.reporting.localization.Localization(__file__, 80, 15), type_9825, *[target_9827], **kwargs_9828)
            
            # Getting the type of 'ast' (line 80)
            ast_9830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 36), 'ast')
            # Obtaining the member 'Attribute' of a type (line 80)
            Attribute_9831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 36), ast_9830, 'Attribute')
            # Applying the binary operator 'is' (line 80)
            result_is__9832 = python_operator(stypy.reporting.localization.Localization(__file__, 80, 15), 'is', type_call_result_9829, Attribute_9831)
            
            # Testing if the type of an if condition is none (line 80)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 80, 12), result_is__9832):
                
                # Assigning a Call to a Tuple (line 86):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 86)
                # Processing the call arguments (line 86)
                # Getting the type of 'node' (line 86)
                node_9854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 47), 'node', False)
                # Obtaining the member 'target' of a type (line 86)
                target_9855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 47), node_9854, 'target')
                # Getting the type of 'context' (line 86)
                context_9856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 60), 'context', False)
                # Processing the call keyword arguments (line 86)
                kwargs_9857 = {}
                # Getting the type of 'self' (line 86)
                self_9852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 36), 'self', False)
                # Obtaining the member 'visit' of a type (line 86)
                visit_9853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 36), self_9852, 'visit')
                # Calling visit(args, kwargs) (line 86)
                visit_call_result_9858 = invoke(stypy.reporting.localization.Localization(__file__, 86, 36), visit_9853, *[target_9855, context_9856], **kwargs_9857)
                
                # Assigning a type to the variable 'call_assignment_9410' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', visit_call_result_9858)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9860 = stypy_get_value_from_tuple(call_assignment_9410_9859, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9411' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411', stypy_get_value_from_tuple_call_result_9860)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9411' (line 86)
                call_assignment_9411_9861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411')
                # Assigning a type to the variable 'instructions' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'instructions', call_assignment_9411_9861)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9863 = stypy_get_value_from_tuple(call_assignment_9410_9862, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9412' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412', stypy_get_value_from_tuple_call_result_9863)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9412' (line 86)
                call_assignment_9412_9864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412')
                # Assigning a type to the variable 'var' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 30), 'var', call_assignment_9412_9864)
                
                # Assigning a Name to a Name (line 91):
                
                # Assigning a Name to a Name (line 91):
                # Getting the type of 'var' (line 91)
                var_9865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 29), 'var')
                # Assigning a type to the variable 'target_var' (line 91)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 16), 'target_var', var_9865)
                
                # Assigning a Name to a Name (line 92):
                
                # Assigning a Name to a Name (line 92):
                # Getting the type of 'instructions' (line 92)
                instructions_9866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 37), 'instructions')
                # Assigning a type to the variable 'get_type_of_member' (line 92)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 16), 'get_type_of_member', instructions_9866)
            else:
                
                # Testing the type of an if condition (line 80)
                if_condition_9833 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 80, 12), result_is__9832)
                # Assigning a type to the variable 'if_condition_9833' (line 80)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 12), 'if_condition_9833', if_condition_9833)
                # SSA begins for if statement (line 80)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 81):
                
                # Assigning a Call to a Name:
                
                # Call to create_get_type_of_member(...): (line 81)
                # Processing the call arguments (line 81)
                # Getting the type of 'target_left_var' (line 81)
                target_left_var_9836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 96), 'target_left_var', False)
                # Getting the type of 'node' (line 82)
                node_9837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 91), 'node', False)
                # Obtaining the member 'target' of a type (line 82)
                target_9838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 91), node_9837, 'target')
                # Obtaining the member 'attr' of a type (line 82)
                attr_9839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 91), target_9838, 'attr')
                # Getting the type of 'node' (line 83)
                node_9840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 91), 'node', False)
                # Obtaining the member 'lineno' of a type (line 83)
                lineno_9841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 83, 91), node_9840, 'lineno')
                # Getting the type of 'node' (line 84)
                node_9842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 91), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 84)
                col_offset_9843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 91), node_9842, 'col_offset')
                # Processing the call keyword arguments (line 81)
                kwargs_9844 = {}
                # Getting the type of 'stypy_functions_copy' (line 81)
                stypy_functions_copy_9834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 49), 'stypy_functions_copy', False)
                # Obtaining the member 'create_get_type_of_member' of a type (line 81)
                create_get_type_of_member_9835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 81, 49), stypy_functions_copy_9834, 'create_get_type_of_member')
                # Calling create_get_type_of_member(args, kwargs) (line 81)
                create_get_type_of_member_call_result_9845 = invoke(stypy.reporting.localization.Localization(__file__, 81, 49), create_get_type_of_member_9835, *[target_left_var_9836, attr_9839, lineno_9841, col_offset_9843], **kwargs_9844)
                
                # Assigning a type to the variable 'call_assignment_9407' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9407', create_get_type_of_member_call_result_9845)
                
                # Assigning a Call to a Name (line 81):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9407' (line 81)
                call_assignment_9407_9846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9407', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9847 = stypy_get_value_from_tuple(call_assignment_9407_9846, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9408' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9408', stypy_get_value_from_tuple_call_result_9847)
                
                # Assigning a Name to a Name (line 81):
                # Getting the type of 'call_assignment_9408' (line 81)
                call_assignment_9408_9848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9408')
                # Assigning a type to the variable 'get_type_of_member' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'get_type_of_member', call_assignment_9408_9848)
                
                # Assigning a Call to a Name (line 81):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9407' (line 81)
                call_assignment_9407_9849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9407', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9850 = stypy_get_value_from_tuple(call_assignment_9407_9849, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9409' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9409', stypy_get_value_from_tuple_call_result_9850)
                
                # Assigning a Name to a Name (line 81):
                # Getting the type of 'call_assignment_9409' (line 81)
                call_assignment_9409_9851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9409')
                # Assigning a type to the variable 'target_var' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 36), 'target_var', call_assignment_9409_9851)
                # SSA branch for the else part of an if statement (line 80)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Tuple (line 86):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 86)
                # Processing the call arguments (line 86)
                # Getting the type of 'node' (line 86)
                node_9854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 47), 'node', False)
                # Obtaining the member 'target' of a type (line 86)
                target_9855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 47), node_9854, 'target')
                # Getting the type of 'context' (line 86)
                context_9856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 60), 'context', False)
                # Processing the call keyword arguments (line 86)
                kwargs_9857 = {}
                # Getting the type of 'self' (line 86)
                self_9852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 36), 'self', False)
                # Obtaining the member 'visit' of a type (line 86)
                visit_9853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 36), self_9852, 'visit')
                # Calling visit(args, kwargs) (line 86)
                visit_call_result_9858 = invoke(stypy.reporting.localization.Localization(__file__, 86, 36), visit_9853, *[target_9855, context_9856], **kwargs_9857)
                
                # Assigning a type to the variable 'call_assignment_9410' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', visit_call_result_9858)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9860 = stypy_get_value_from_tuple(call_assignment_9410_9859, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9411' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411', stypy_get_value_from_tuple_call_result_9860)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9411' (line 86)
                call_assignment_9411_9861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411')
                # Assigning a type to the variable 'instructions' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'instructions', call_assignment_9411_9861)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9863 = stypy_get_value_from_tuple(call_assignment_9410_9862, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9412' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412', stypy_get_value_from_tuple_call_result_9863)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9412' (line 86)
                call_assignment_9412_9864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412')
                # Assigning a type to the variable 'var' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 30), 'var', call_assignment_9412_9864)
                
                # Assigning a Name to a Name (line 91):
                
                # Assigning a Name to a Name (line 91):
                # Getting the type of 'var' (line 91)
                var_9865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 29), 'var')
                # Assigning a type to the variable 'target_var' (line 91)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 16), 'target_var', var_9865)
                
                # Assigning a Name to a Name (line 92):
                
                # Assigning a Name to a Name (line 92):
                # Getting the type of 'instructions' (line 92)
                instructions_9866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 37), 'instructions')
                # Assigning a type to the variable 'get_type_of_member' (line 92)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 16), 'get_type_of_member', instructions_9866)
                # SSA join for if statement (line 80)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Call to a Name (line 94):
            
            # Assigning a Call to a Name (line 94):
            
            # Call to flatten_lists(...): (line 94)
            # Processing the call arguments (line 94)
            # Getting the type of 'get_target_obj_left_stmts' (line 94)
            get_target_obj_left_stmts_9869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 66), 'get_target_obj_left_stmts', False)
            # Getting the type of 'get_type_of_member' (line 94)
            get_type_of_member_9870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 93), 'get_type_of_member', False)
            # Processing the call keyword arguments (line 94)
            kwargs_9871 = {}
            # Getting the type of 'stypy_functions_copy' (line 94)
            stypy_functions_copy_9867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 31), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 94)
            flatten_lists_9868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 31), stypy_functions_copy_9867, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 94)
            flatten_lists_call_result_9872 = invoke(stypy.reporting.localization.Localization(__file__, 94, 31), flatten_lists_9868, *[get_target_obj_left_stmts_9869, get_type_of_member_9870], **kwargs_9871)
            
            # Assigning a type to the variable 'get_target_stmts' (line 94)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 12), 'get_target_stmts', flatten_lists_call_result_9872)
        else:
            
            # Testing the type of an if condition (line 71)
            if_condition_9793 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 71, 8), result_is__9792)
            # Assigning a type to the variable 'if_condition_9793' (line 71)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 71, 8), 'if_condition_9793', if_condition_9793)
            # SSA begins for if statement (line 71)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 72):
            
            # Assigning a Call to a Name:
            
            # Call to create_get_type_of(...): (line 72)
            # Processing the call arguments (line 72)
            # Getting the type of 'node' (line 72)
            node_9796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 83), 'node', False)
            # Obtaining the member 'target' of a type (line 72)
            target_9797 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 72, 83), node_9796, 'target')
            # Obtaining the member 'id' of a type (line 72)
            id_9798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 72, 83), target_9797, 'id')
            # Getting the type of 'node' (line 72)
            node_9799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 99), 'node', False)
            # Obtaining the member 'lineno' of a type (line 72)
            lineno_9800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 72, 99), node_9799, 'lineno')
            # Getting the type of 'node' (line 73)
            node_9801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 78), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 73)
            col_offset_9802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 78), node_9801, 'col_offset')
            # Processing the call keyword arguments (line 72)
            kwargs_9803 = {}
            # Getting the type of 'stypy_functions_copy' (line 72)
            stypy_functions_copy_9794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_get_type_of' of a type (line 72)
            create_get_type_of_9795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 72, 43), stypy_functions_copy_9794, 'create_get_type_of')
            # Calling create_get_type_of(args, kwargs) (line 72)
            create_get_type_of_call_result_9804 = invoke(stypy.reporting.localization.Localization(__file__, 72, 43), create_get_type_of_9795, *[id_9798, lineno_9800, col_offset_9802], **kwargs_9803)
            
            # Assigning a type to the variable 'call_assignment_9401' (line 72)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'call_assignment_9401', create_get_type_of_call_result_9804)
            
            # Assigning a Call to a Name (line 72):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9401' (line 72)
            call_assignment_9401_9805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'call_assignment_9401', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9806 = stypy_get_value_from_tuple(call_assignment_9401_9805, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9402' (line 72)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'call_assignment_9402', stypy_get_value_from_tuple_call_result_9806)
            
            # Assigning a Name to a Name (line 72):
            # Getting the type of 'call_assignment_9402' (line 72)
            call_assignment_9402_9807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'call_assignment_9402')
            # Assigning a type to the variable 'get_target_stmts' (line 72)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'get_target_stmts', call_assignment_9402_9807)
            
            # Assigning a Call to a Name (line 72):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9401' (line 72)
            call_assignment_9401_9808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'call_assignment_9401', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9809 = stypy_get_value_from_tuple(call_assignment_9401_9808, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9403' (line 72)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'call_assignment_9403', stypy_get_value_from_tuple_call_result_9809)
            
            # Assigning a Name to a Name (line 72):
            # Getting the type of 'call_assignment_9403' (line 72)
            call_assignment_9403_9810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 72, 12), 'call_assignment_9403')
            # Assigning a type to the variable 'target_var' (line 72)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 72, 30), 'target_var', call_assignment_9403_9810)
            # SSA branch for the else part of an if statement (line 71)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 75):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 75)
            # Processing the call arguments (line 75)
            # Getting the type of 'node' (line 75)
            node_9813 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 68), 'node', False)
            # Obtaining the member 'target' of a type (line 75)
            target_9814 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 68), node_9813, 'target')
            # Obtaining the member 'value' of a type (line 75)
            value_9815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 68), target_9814, 'value')
            # Getting the type of 'context' (line 75)
            context_9816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 87), 'context', False)
            # Processing the call keyword arguments (line 75)
            kwargs_9817 = {}
            # Getting the type of 'self' (line 75)
            self_9811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 57), 'self', False)
            # Obtaining the member 'visit' of a type (line 75)
            visit_9812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 75, 57), self_9811, 'visit')
            # Calling visit(args, kwargs) (line 75)
            visit_call_result_9818 = invoke(stypy.reporting.localization.Localization(__file__, 75, 57), visit_9812, *[value_9815, context_9816], **kwargs_9817)
            
            # Assigning a type to the variable 'call_assignment_9404' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9404', visit_call_result_9818)
            
            # Assigning a Call to a Name (line 75):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9404' (line 75)
            call_assignment_9404_9819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9404', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9820 = stypy_get_value_from_tuple(call_assignment_9404_9819, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9405' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9405', stypy_get_value_from_tuple_call_result_9820)
            
            # Assigning a Name to a Name (line 75):
            # Getting the type of 'call_assignment_9405' (line 75)
            call_assignment_9405_9821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9405')
            # Assigning a type to the variable 'get_target_obj_left_stmts' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'get_target_obj_left_stmts', call_assignment_9405_9821)
            
            # Assigning a Call to a Name (line 75):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9404' (line 75)
            call_assignment_9404_9822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9404', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9823 = stypy_get_value_from_tuple(call_assignment_9404_9822, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9406' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9406', stypy_get_value_from_tuple_call_result_9823)
            
            # Assigning a Name to a Name (line 75):
            # Getting the type of 'call_assignment_9406' (line 75)
            call_assignment_9406_9824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 75, 12), 'call_assignment_9406')
            # Assigning a type to the variable 'target_left_var' (line 75)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 75, 39), 'target_left_var', call_assignment_9406_9824)
            
            
            # Call to type(...): (line 80)
            # Processing the call arguments (line 80)
            # Getting the type of 'node' (line 80)
            node_9826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 20), 'node', False)
            # Obtaining the member 'target' of a type (line 80)
            target_9827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 20), node_9826, 'target')
            # Processing the call keyword arguments (line 80)
            kwargs_9828 = {}
            # Getting the type of 'type' (line 80)
            type_9825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 15), 'type', False)
            # Calling type(args, kwargs) (line 80)
            type_call_result_9829 = invoke(stypy.reporting.localization.Localization(__file__, 80, 15), type_9825, *[target_9827], **kwargs_9828)
            
            # Getting the type of 'ast' (line 80)
            ast_9830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 36), 'ast')
            # Obtaining the member 'Attribute' of a type (line 80)
            Attribute_9831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 36), ast_9830, 'Attribute')
            # Applying the binary operator 'is' (line 80)
            result_is__9832 = python_operator(stypy.reporting.localization.Localization(__file__, 80, 15), 'is', type_call_result_9829, Attribute_9831)
            
            # Testing if the type of an if condition is none (line 80)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 80, 12), result_is__9832):
                
                # Assigning a Call to a Tuple (line 86):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 86)
                # Processing the call arguments (line 86)
                # Getting the type of 'node' (line 86)
                node_9854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 47), 'node', False)
                # Obtaining the member 'target' of a type (line 86)
                target_9855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 47), node_9854, 'target')
                # Getting the type of 'context' (line 86)
                context_9856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 60), 'context', False)
                # Processing the call keyword arguments (line 86)
                kwargs_9857 = {}
                # Getting the type of 'self' (line 86)
                self_9852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 36), 'self', False)
                # Obtaining the member 'visit' of a type (line 86)
                visit_9853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 36), self_9852, 'visit')
                # Calling visit(args, kwargs) (line 86)
                visit_call_result_9858 = invoke(stypy.reporting.localization.Localization(__file__, 86, 36), visit_9853, *[target_9855, context_9856], **kwargs_9857)
                
                # Assigning a type to the variable 'call_assignment_9410' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', visit_call_result_9858)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9860 = stypy_get_value_from_tuple(call_assignment_9410_9859, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9411' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411', stypy_get_value_from_tuple_call_result_9860)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9411' (line 86)
                call_assignment_9411_9861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411')
                # Assigning a type to the variable 'instructions' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'instructions', call_assignment_9411_9861)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9863 = stypy_get_value_from_tuple(call_assignment_9410_9862, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9412' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412', stypy_get_value_from_tuple_call_result_9863)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9412' (line 86)
                call_assignment_9412_9864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412')
                # Assigning a type to the variable 'var' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 30), 'var', call_assignment_9412_9864)
                
                # Assigning a Name to a Name (line 91):
                
                # Assigning a Name to a Name (line 91):
                # Getting the type of 'var' (line 91)
                var_9865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 29), 'var')
                # Assigning a type to the variable 'target_var' (line 91)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 16), 'target_var', var_9865)
                
                # Assigning a Name to a Name (line 92):
                
                # Assigning a Name to a Name (line 92):
                # Getting the type of 'instructions' (line 92)
                instructions_9866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 37), 'instructions')
                # Assigning a type to the variable 'get_type_of_member' (line 92)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 16), 'get_type_of_member', instructions_9866)
            else:
                
                # Testing the type of an if condition (line 80)
                if_condition_9833 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 80, 12), result_is__9832)
                # Assigning a type to the variable 'if_condition_9833' (line 80)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 12), 'if_condition_9833', if_condition_9833)
                # SSA begins for if statement (line 80)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 81):
                
                # Assigning a Call to a Name:
                
                # Call to create_get_type_of_member(...): (line 81)
                # Processing the call arguments (line 81)
                # Getting the type of 'target_left_var' (line 81)
                target_left_var_9836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 96), 'target_left_var', False)
                # Getting the type of 'node' (line 82)
                node_9837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 91), 'node', False)
                # Obtaining the member 'target' of a type (line 82)
                target_9838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 91), node_9837, 'target')
                # Obtaining the member 'attr' of a type (line 82)
                attr_9839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 91), target_9838, 'attr')
                # Getting the type of 'node' (line 83)
                node_9840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 91), 'node', False)
                # Obtaining the member 'lineno' of a type (line 83)
                lineno_9841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 83, 91), node_9840, 'lineno')
                # Getting the type of 'node' (line 84)
                node_9842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 91), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 84)
                col_offset_9843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 84, 91), node_9842, 'col_offset')
                # Processing the call keyword arguments (line 81)
                kwargs_9844 = {}
                # Getting the type of 'stypy_functions_copy' (line 81)
                stypy_functions_copy_9834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 49), 'stypy_functions_copy', False)
                # Obtaining the member 'create_get_type_of_member' of a type (line 81)
                create_get_type_of_member_9835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 81, 49), stypy_functions_copy_9834, 'create_get_type_of_member')
                # Calling create_get_type_of_member(args, kwargs) (line 81)
                create_get_type_of_member_call_result_9845 = invoke(stypy.reporting.localization.Localization(__file__, 81, 49), create_get_type_of_member_9835, *[target_left_var_9836, attr_9839, lineno_9841, col_offset_9843], **kwargs_9844)
                
                # Assigning a type to the variable 'call_assignment_9407' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9407', create_get_type_of_member_call_result_9845)
                
                # Assigning a Call to a Name (line 81):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9407' (line 81)
                call_assignment_9407_9846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9407', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9847 = stypy_get_value_from_tuple(call_assignment_9407_9846, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9408' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9408', stypy_get_value_from_tuple_call_result_9847)
                
                # Assigning a Name to a Name (line 81):
                # Getting the type of 'call_assignment_9408' (line 81)
                call_assignment_9408_9848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9408')
                # Assigning a type to the variable 'get_type_of_member' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'get_type_of_member', call_assignment_9408_9848)
                
                # Assigning a Call to a Name (line 81):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9407' (line 81)
                call_assignment_9407_9849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9407', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9850 = stypy_get_value_from_tuple(call_assignment_9407_9849, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9409' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9409', stypy_get_value_from_tuple_call_result_9850)
                
                # Assigning a Name to a Name (line 81):
                # Getting the type of 'call_assignment_9409' (line 81)
                call_assignment_9409_9851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 16), 'call_assignment_9409')
                # Assigning a type to the variable 'target_var' (line 81)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 36), 'target_var', call_assignment_9409_9851)
                # SSA branch for the else part of an if statement (line 80)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Tuple (line 86):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 86)
                # Processing the call arguments (line 86)
                # Getting the type of 'node' (line 86)
                node_9854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 47), 'node', False)
                # Obtaining the member 'target' of a type (line 86)
                target_9855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 47), node_9854, 'target')
                # Getting the type of 'context' (line 86)
                context_9856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 60), 'context', False)
                # Processing the call keyword arguments (line 86)
                kwargs_9857 = {}
                # Getting the type of 'self' (line 86)
                self_9852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 36), 'self', False)
                # Obtaining the member 'visit' of a type (line 86)
                visit_9853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 36), self_9852, 'visit')
                # Calling visit(args, kwargs) (line 86)
                visit_call_result_9858 = invoke(stypy.reporting.localization.Localization(__file__, 86, 36), visit_9853, *[target_9855, context_9856], **kwargs_9857)
                
                # Assigning a type to the variable 'call_assignment_9410' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', visit_call_result_9858)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9860 = stypy_get_value_from_tuple(call_assignment_9410_9859, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9411' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411', stypy_get_value_from_tuple_call_result_9860)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9411' (line 86)
                call_assignment_9411_9861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9411')
                # Assigning a type to the variable 'instructions' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'instructions', call_assignment_9411_9861)
                
                # Assigning a Call to a Name (line 86):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9410' (line 86)
                call_assignment_9410_9862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9410', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9863 = stypy_get_value_from_tuple(call_assignment_9410_9862, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9412' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412', stypy_get_value_from_tuple_call_result_9863)
                
                # Assigning a Name to a Name (line 86):
                # Getting the type of 'call_assignment_9412' (line 86)
                call_assignment_9412_9864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 16), 'call_assignment_9412')
                # Assigning a type to the variable 'var' (line 86)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 30), 'var', call_assignment_9412_9864)
                
                # Assigning a Name to a Name (line 91):
                
                # Assigning a Name to a Name (line 91):
                # Getting the type of 'var' (line 91)
                var_9865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 29), 'var')
                # Assigning a type to the variable 'target_var' (line 91)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 16), 'target_var', var_9865)
                
                # Assigning a Name to a Name (line 92):
                
                # Assigning a Name to a Name (line 92):
                # Getting the type of 'instructions' (line 92)
                instructions_9866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 37), 'instructions')
                # Assigning a type to the variable 'get_type_of_member' (line 92)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 16), 'get_type_of_member', instructions_9866)
                # SSA join for if statement (line 80)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Call to a Name (line 94):
            
            # Assigning a Call to a Name (line 94):
            
            # Call to flatten_lists(...): (line 94)
            # Processing the call arguments (line 94)
            # Getting the type of 'get_target_obj_left_stmts' (line 94)
            get_target_obj_left_stmts_9869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 66), 'get_target_obj_left_stmts', False)
            # Getting the type of 'get_type_of_member' (line 94)
            get_type_of_member_9870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 93), 'get_type_of_member', False)
            # Processing the call keyword arguments (line 94)
            kwargs_9871 = {}
            # Getting the type of 'stypy_functions_copy' (line 94)
            stypy_functions_copy_9867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 31), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 94)
            flatten_lists_9868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 31), stypy_functions_copy_9867, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 94)
            flatten_lists_call_result_9872 = invoke(stypy.reporting.localization.Localization(__file__, 94, 31), flatten_lists_9868, *[get_target_obj_left_stmts_9869, get_type_of_member_9870], **kwargs_9871)
            
            # Assigning a type to the variable 'get_target_stmts' (line 94)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 94, 12), 'get_target_stmts', flatten_lists_call_result_9872)
            # SSA join for if statement (line 71)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Call to a Tuple (line 97):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 97)
        # Processing the call arguments (line 97)
        # Getting the type of 'node' (line 97)
        node_9875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 43), 'node', False)
        # Obtaining the member 'value' of a type (line 97)
        value_9876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 43), node_9875, 'value')
        # Getting the type of 'context' (line 97)
        context_9877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 55), 'context', False)
        # Processing the call keyword arguments (line 97)
        kwargs_9878 = {}
        # Getting the type of 'self' (line 97)
        self_9873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 32), 'self', False)
        # Obtaining the member 'visit' of a type (line 97)
        visit_9874 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 32), self_9873, 'visit')
        # Calling visit(args, kwargs) (line 97)
        visit_call_result_9879 = invoke(stypy.reporting.localization.Localization(__file__, 97, 32), visit_9874, *[value_9876, context_9877], **kwargs_9878)
        
        # Assigning a type to the variable 'call_assignment_9413' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'call_assignment_9413', visit_call_result_9879)
        
        # Assigning a Call to a Name (line 97):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9413' (line 97)
        call_assignment_9413_9880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'call_assignment_9413', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9881 = stypy_get_value_from_tuple(call_assignment_9413_9880, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9414' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'call_assignment_9414', stypy_get_value_from_tuple_call_result_9881)
        
        # Assigning a Name to a Name (line 97):
        # Getting the type of 'call_assignment_9414' (line 97)
        call_assignment_9414_9882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'call_assignment_9414')
        # Assigning a type to the variable 'right_stmts' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'right_stmts', call_assignment_9414_9882)
        
        # Assigning a Call to a Name (line 97):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9413' (line 97)
        call_assignment_9413_9883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'call_assignment_9413', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9884 = stypy_get_value_from_tuple(call_assignment_9413_9883, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9415' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'call_assignment_9415', stypy_get_value_from_tuple_call_result_9884)
        
        # Assigning a Name to a Name (line 97):
        # Getting the type of 'call_assignment_9415' (line 97)
        call_assignment_9415_9885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'call_assignment_9415')
        # Assigning a type to the variable 'temp_op2' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 21), 'temp_op2', call_assignment_9415_9885)
        
        # Assigning a Call to a Tuple (line 100):
        
        # Assigning a Call to a Name:
        
        # Call to create_binary_operator(...): (line 100)
        # Processing the call arguments (line 100)
        # Getting the type of 'operator_name' (line 100)
        operator_name_9888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 80), 'operator_name', False)
        # Getting the type of 'target_var' (line 100)
        target_var_9889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 95), 'target_var', False)
        # Getting the type of 'temp_op2' (line 100)
        temp_op2_9890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 107), 'temp_op2', False)
        # Getting the type of 'node' (line 101)
        node_9891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 75), 'node', False)
        # Obtaining the member 'lineno' of a type (line 101)
        lineno_9892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 101, 75), node_9891, 'lineno')
        # Getting the type of 'node' (line 101)
        node_9893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 88), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 101)
        col_offset_9894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 101, 88), node_9893, 'col_offset')
        # Processing the call keyword arguments (line 100)
        kwargs_9895 = {}
        # Getting the type of 'stypy_functions_copy' (line 100)
        stypy_functions_copy_9886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 36), 'stypy_functions_copy', False)
        # Obtaining the member 'create_binary_operator' of a type (line 100)
        create_binary_operator_9887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 100, 36), stypy_functions_copy_9886, 'create_binary_operator')
        # Calling create_binary_operator(args, kwargs) (line 100)
        create_binary_operator_call_result_9896 = invoke(stypy.reporting.localization.Localization(__file__, 100, 36), create_binary_operator_9887, *[operator_name_9888, target_var_9889, temp_op2_9890, lineno_9892, col_offset_9894], **kwargs_9895)
        
        # Assigning a type to the variable 'call_assignment_9416' (line 100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'call_assignment_9416', create_binary_operator_call_result_9896)
        
        # Assigning a Call to a Name (line 100):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9416' (line 100)
        call_assignment_9416_9897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'call_assignment_9416', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9898 = stypy_get_value_from_tuple(call_assignment_9416_9897, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9417' (line 100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'call_assignment_9417', stypy_get_value_from_tuple_call_result_9898)
        
        # Assigning a Name to a Name (line 100):
        # Getting the type of 'call_assignment_9417' (line 100)
        call_assignment_9417_9899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'call_assignment_9417')
        # Assigning a type to the variable 'assign_stmts' (line 100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'assign_stmts', call_assignment_9417_9899)
        
        # Assigning a Call to a Name (line 100):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9416' (line 100)
        call_assignment_9416_9900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'call_assignment_9416', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9901 = stypy_get_value_from_tuple(call_assignment_9416_9900, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9418' (line 100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'call_assignment_9418', stypy_get_value_from_tuple_call_result_9901)
        
        # Assigning a Name to a Name (line 100):
        # Getting the type of 'call_assignment_9418' (line 100)
        call_assignment_9418_9902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 8), 'call_assignment_9418')
        # Assigning a type to the variable 'temp_assign' (line 100)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 100, 22), 'temp_assign', call_assignment_9418_9902)
        
        
        # Call to type(...): (line 104)
        # Processing the call arguments (line 104)
        # Getting the type of 'node' (line 104)
        node_9904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 16), 'node', False)
        # Obtaining the member 'target' of a type (line 104)
        target_9905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 16), node_9904, 'target')
        # Processing the call keyword arguments (line 104)
        kwargs_9906 = {}
        # Getting the type of 'type' (line 104)
        type_9903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 11), 'type', False)
        # Calling type(args, kwargs) (line 104)
        type_call_result_9907 = invoke(stypy.reporting.localization.Localization(__file__, 104, 11), type_9903, *[target_9905], **kwargs_9906)
        
        # Getting the type of 'ast' (line 104)
        ast_9908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 32), 'ast')
        # Obtaining the member 'Name' of a type (line 104)
        Name_9909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 32), ast_9908, 'Name')
        # Applying the binary operator 'is' (line 104)
        result_is__9910 = python_operator(stypy.reporting.localization.Localization(__file__, 104, 11), 'is', type_call_result_9907, Name_9909)
        
        # Testing if the type of an if condition is none (line 104)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 104, 8), result_is__9910):
            
            # Assigning a Call to a Tuple (line 108):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 108)
            # Processing the call arguments (line 108)
            # Getting the type of 'node' (line 108)
            node_9926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 58), 'node', False)
            # Obtaining the member 'target' of a type (line 108)
            target_9927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 58), node_9926, 'target')
            # Obtaining the member 'value' of a type (line 108)
            value_9928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 58), target_9927, 'value')
            # Getting the type of 'context' (line 108)
            context_9929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 77), 'context', False)
            # Processing the call keyword arguments (line 108)
            kwargs_9930 = {}
            # Getting the type of 'self' (line 108)
            self_9924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 47), 'self', False)
            # Obtaining the member 'visit' of a type (line 108)
            visit_9925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 47), self_9924, 'visit')
            # Calling visit(args, kwargs) (line 108)
            visit_call_result_9931 = invoke(stypy.reporting.localization.Localization(__file__, 108, 47), visit_9925, *[value_9928, context_9929], **kwargs_9930)
            
            # Assigning a type to the variable 'call_assignment_9419' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9419', visit_call_result_9931)
            
            # Assigning a Call to a Name (line 108):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9419' (line 108)
            call_assignment_9419_9932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9419', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9933 = stypy_get_value_from_tuple(call_assignment_9419_9932, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9420' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9420', stypy_get_value_from_tuple_call_result_9933)
            
            # Assigning a Name to a Name (line 108):
            # Getting the type of 'call_assignment_9420' (line 108)
            call_assignment_9420_9934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9420')
            # Assigning a type to the variable 'get_target_obj_stmts' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'get_target_obj_stmts', call_assignment_9420_9934)
            
            # Assigning a Call to a Name (line 108):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9419' (line 108)
            call_assignment_9419_9935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9419', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9936 = stypy_get_value_from_tuple(call_assignment_9419_9935, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9421' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9421', stypy_get_value_from_tuple_call_result_9936)
            
            # Assigning a Name to a Name (line 108):
            # Getting the type of 'call_assignment_9421' (line 108)
            call_assignment_9421_9937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9421')
            # Assigning a type to the variable 'target_var' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 34), 'target_var', call_assignment_9421_9937)
            
            
            # Call to type(...): (line 112)
            # Processing the call arguments (line 112)
            # Getting the type of 'node' (line 112)
            node_9939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 20), 'node', False)
            # Obtaining the member 'target' of a type (line 112)
            target_9940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 112, 20), node_9939, 'target')
            # Processing the call keyword arguments (line 112)
            kwargs_9941 = {}
            # Getting the type of 'type' (line 112)
            type_9938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 15), 'type', False)
            # Calling type(args, kwargs) (line 112)
            type_call_result_9942 = invoke(stypy.reporting.localization.Localization(__file__, 112, 15), type_9938, *[target_9940], **kwargs_9941)
            
            # Getting the type of 'ast' (line 112)
            ast_9943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 36), 'ast')
            # Obtaining the member 'Attribute' of a type (line 112)
            Attribute_9944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 112, 36), ast_9943, 'Attribute')
            # Applying the binary operator 'is' (line 112)
            result_is__9945 = python_operator(stypy.reporting.localization.Localization(__file__, 112, 15), 'is', type_call_result_9942, Attribute_9944)
            
            # Testing if the type of an if condition is none (line 112)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 112, 12), result_is__9945):
                
                # Assigning a Call to a Tuple (line 120):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 120)
                # Processing the call arguments (line 120)
                # Getting the type of 'node' (line 120)
                node_9962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 52), 'node', False)
                # Obtaining the member 'target' of a type (line 120)
                target_9963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), node_9962, 'target')
                # Obtaining the member 'slice' of a type (line 120)
                slice_9964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), target_9963, 'slice')
                # Getting the type of 'context' (line 120)
                context_9965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 71), 'context', False)
                # Processing the call keyword arguments (line 120)
                kwargs_9966 = {}
                # Getting the type of 'self' (line 120)
                self_9960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 120)
                visit_9961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 41), self_9960, 'visit')
                # Calling visit(args, kwargs) (line 120)
                visit_call_result_9967 = invoke(stypy.reporting.localization.Localization(__file__, 120, 41), visit_9961, *[slice_9964, context_9965], **kwargs_9966)
                
                # Assigning a type to the variable 'call_assignment_9422' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', visit_call_result_9967)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9969 = stypy_get_value_from_tuple(call_assignment_9422_9968, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9423' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423', stypy_get_value_from_tuple_call_result_9969)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9423' (line 120)
                call_assignment_9423_9970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423')
                # Assigning a type to the variable 'slice_stmts' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'slice_stmts', call_assignment_9423_9970)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9972 = stypy_get_value_from_tuple(call_assignment_9422_9971, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9424' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424', stypy_get_value_from_tuple_call_result_9972)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9424' (line 120)
                call_assignment_9424_9973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424')
                # Assigning a type to the variable 'slice_var' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 29), 'slice_var', call_assignment_9424_9973)
                
                # Assigning a Call to a Name (line 121):
                
                # Assigning a Call to a Name (line 121):
                
                # Call to create_add_stored_type(...): (line 121)
                # Processing the call arguments (line 121)
                # Getting the type of 'target_var' (line 121)
                target_var_9976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 121)
                slice_var_9977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 92), 'slice_var', False)
                # Getting the type of 'temp_assign' (line 121)
                temp_assign_9978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 103), 'temp_assign', False)
                # Getting the type of 'node' (line 122)
                node_9979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 75), 'node', False)
                # Obtaining the member 'lineno' of a type (line 122)
                lineno_9980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 75), node_9979, 'lineno')
                # Getting the type of 'node' (line 123)
                node_9981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 75), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 123)
                col_offset_9982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 75), node_9981, 'col_offset')
                # Processing the call keyword arguments (line 121)
                kwargs_9983 = {}
                # Getting the type of 'stypy_functions_copy' (line 121)
                stypy_functions_copy_9974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 121)
                create_add_stored_type_9975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 36), stypy_functions_copy_9974, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 121)
                create_add_stored_type_call_result_9984 = invoke(stypy.reporting.localization.Localization(__file__, 121, 36), create_add_stored_type_9975, *[target_var_9976, slice_var_9977, temp_assign_9978, lineno_9980, col_offset_9982], **kwargs_9983)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 121)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 16), 'set_type_of_stmts', create_add_stored_type_call_result_9984)
                
                # Assigning a Call to a Name (line 124):
                
                # Assigning a Call to a Name (line 124):
                
                # Call to flatten_lists(...): (line 124)
                # Processing the call arguments (line 124)
                # Getting the type of 'slice_stmts' (line 124)
                slice_stmts_9987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 62), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 124)
                set_type_of_stmts_9988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 75), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 124)
                kwargs_9989 = {}
                # Getting the type of 'stypy_functions_copy' (line 124)
                stypy_functions_copy_9985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 124)
                flatten_lists_9986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 124, 27), stypy_functions_copy_9985, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 124)
                flatten_lists_call_result_9990 = invoke(stypy.reporting.localization.Localization(__file__, 124, 27), flatten_lists_9986, *[slice_stmts_9987, set_type_of_stmts_9988], **kwargs_9989)
                
                # Assigning a type to the variable 'set_type' (line 124)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 16), 'set_type', flatten_lists_call_result_9990)
            else:
                
                # Testing the type of an if condition (line 112)
                if_condition_9946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 112, 12), result_is__9945)
                # Assigning a type to the variable 'if_condition_9946' (line 112)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 112, 12), 'if_condition_9946', if_condition_9946)
                # SSA begins for if statement (line 112)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Name (line 113):
                
                # Assigning a Call to a Name (line 113):
                
                # Call to create_set_type_of_member(...): (line 113)
                # Processing the call arguments (line 113)
                # Getting the type of 'target_var' (line 113)
                target_var_9949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 74), 'target_var', False)
                # Getting the type of 'node' (line 113)
                node_9950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 86), 'node', False)
                # Obtaining the member 'target' of a type (line 113)
                target_9951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 86), node_9950, 'target')
                # Obtaining the member 'attr' of a type (line 113)
                attr_9952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 86), target_9951, 'attr')
                # Getting the type of 'temp_assign' (line 113)
                temp_assign_9953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 104), 'temp_assign', False)
                # Getting the type of 'node' (line 114)
                node_9954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 69), 'node', False)
                # Obtaining the member 'lineno' of a type (line 114)
                lineno_9955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 69), node_9954, 'lineno')
                # Getting the type of 'node' (line 115)
                node_9956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 69), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 115)
                col_offset_9957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 69), node_9956, 'col_offset')
                # Processing the call keyword arguments (line 113)
                kwargs_9958 = {}
                # Getting the type of 'stypy_functions_copy' (line 113)
                stypy_functions_copy_9947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 113)
                create_set_type_of_member_9948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 27), stypy_functions_copy_9947, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 113)
                create_set_type_of_member_call_result_9959 = invoke(stypy.reporting.localization.Localization(__file__, 113, 27), create_set_type_of_member_9948, *[target_var_9949, attr_9952, temp_assign_9953, lineno_9955, col_offset_9957], **kwargs_9958)
                
                # Assigning a type to the variable 'set_type' (line 113)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 113, 16), 'set_type', create_set_type_of_member_call_result_9959)
                # SSA branch for the else part of an if statement (line 112)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Tuple (line 120):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 120)
                # Processing the call arguments (line 120)
                # Getting the type of 'node' (line 120)
                node_9962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 52), 'node', False)
                # Obtaining the member 'target' of a type (line 120)
                target_9963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), node_9962, 'target')
                # Obtaining the member 'slice' of a type (line 120)
                slice_9964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), target_9963, 'slice')
                # Getting the type of 'context' (line 120)
                context_9965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 71), 'context', False)
                # Processing the call keyword arguments (line 120)
                kwargs_9966 = {}
                # Getting the type of 'self' (line 120)
                self_9960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 120)
                visit_9961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 41), self_9960, 'visit')
                # Calling visit(args, kwargs) (line 120)
                visit_call_result_9967 = invoke(stypy.reporting.localization.Localization(__file__, 120, 41), visit_9961, *[slice_9964, context_9965], **kwargs_9966)
                
                # Assigning a type to the variable 'call_assignment_9422' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', visit_call_result_9967)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9969 = stypy_get_value_from_tuple(call_assignment_9422_9968, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9423' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423', stypy_get_value_from_tuple_call_result_9969)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9423' (line 120)
                call_assignment_9423_9970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423')
                # Assigning a type to the variable 'slice_stmts' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'slice_stmts', call_assignment_9423_9970)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9972 = stypy_get_value_from_tuple(call_assignment_9422_9971, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9424' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424', stypy_get_value_from_tuple_call_result_9972)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9424' (line 120)
                call_assignment_9424_9973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424')
                # Assigning a type to the variable 'slice_var' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 29), 'slice_var', call_assignment_9424_9973)
                
                # Assigning a Call to a Name (line 121):
                
                # Assigning a Call to a Name (line 121):
                
                # Call to create_add_stored_type(...): (line 121)
                # Processing the call arguments (line 121)
                # Getting the type of 'target_var' (line 121)
                target_var_9976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 121)
                slice_var_9977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 92), 'slice_var', False)
                # Getting the type of 'temp_assign' (line 121)
                temp_assign_9978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 103), 'temp_assign', False)
                # Getting the type of 'node' (line 122)
                node_9979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 75), 'node', False)
                # Obtaining the member 'lineno' of a type (line 122)
                lineno_9980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 75), node_9979, 'lineno')
                # Getting the type of 'node' (line 123)
                node_9981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 75), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 123)
                col_offset_9982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 75), node_9981, 'col_offset')
                # Processing the call keyword arguments (line 121)
                kwargs_9983 = {}
                # Getting the type of 'stypy_functions_copy' (line 121)
                stypy_functions_copy_9974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 121)
                create_add_stored_type_9975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 36), stypy_functions_copy_9974, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 121)
                create_add_stored_type_call_result_9984 = invoke(stypy.reporting.localization.Localization(__file__, 121, 36), create_add_stored_type_9975, *[target_var_9976, slice_var_9977, temp_assign_9978, lineno_9980, col_offset_9982], **kwargs_9983)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 121)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 16), 'set_type_of_stmts', create_add_stored_type_call_result_9984)
                
                # Assigning a Call to a Name (line 124):
                
                # Assigning a Call to a Name (line 124):
                
                # Call to flatten_lists(...): (line 124)
                # Processing the call arguments (line 124)
                # Getting the type of 'slice_stmts' (line 124)
                slice_stmts_9987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 62), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 124)
                set_type_of_stmts_9988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 75), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 124)
                kwargs_9989 = {}
                # Getting the type of 'stypy_functions_copy' (line 124)
                stypy_functions_copy_9985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 124)
                flatten_lists_9986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 124, 27), stypy_functions_copy_9985, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 124)
                flatten_lists_call_result_9990 = invoke(stypy.reporting.localization.Localization(__file__, 124, 27), flatten_lists_9986, *[slice_stmts_9987, set_type_of_stmts_9988], **kwargs_9989)
                
                # Assigning a type to the variable 'set_type' (line 124)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 16), 'set_type', flatten_lists_call_result_9990)
                # SSA join for if statement (line 112)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Call to a Name (line 126):
            
            # Assigning a Call to a Name (line 126):
            
            # Call to flatten_lists(...): (line 126)
            # Processing the call arguments (line 126)
            # Getting the type of 'get_target_obj_stmts' (line 126)
            get_target_obj_stmts_9993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 64), 'get_target_obj_stmts', False)
            # Getting the type of 'set_type' (line 126)
            set_type_9994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 86), 'set_type', False)
            # Processing the call keyword arguments (line 126)
            kwargs_9995 = {}
            # Getting the type of 'stypy_functions_copy' (line 126)
            stypy_functions_copy_9991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 29), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 126)
            flatten_lists_9992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 126, 29), stypy_functions_copy_9991, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 126)
            flatten_lists_call_result_9996 = invoke(stypy.reporting.localization.Localization(__file__, 126, 29), flatten_lists_9992, *[get_target_obj_stmts_9993, set_type_9994], **kwargs_9995)
            
            # Assigning a type to the variable 'augment_assign' (line 126)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 126, 12), 'augment_assign', flatten_lists_call_result_9996)
        else:
            
            # Testing the type of an if condition (line 104)
            if_condition_9911 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 104, 8), result_is__9910)
            # Assigning a type to the variable 'if_condition_9911' (line 104)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 104, 8), 'if_condition_9911', if_condition_9911)
            # SSA begins for if statement (line 104)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 105):
            
            # Assigning a Call to a Name (line 105):
            
            # Call to create_set_type_of(...): (line 105)
            # Processing the call arguments (line 105)
            # Getting the type of 'node' (line 105)
            node_9914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 69), 'node', False)
            # Obtaining the member 'target' of a type (line 105)
            target_9915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 69), node_9914, 'target')
            # Obtaining the member 'id' of a type (line 105)
            id_9916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 69), target_9915, 'id')
            # Getting the type of 'temp_assign' (line 105)
            temp_assign_9917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 85), 'temp_assign', False)
            # Getting the type of 'node' (line 105)
            node_9918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 98), 'node', False)
            # Obtaining the member 'lineno' of a type (line 105)
            lineno_9919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 98), node_9918, 'lineno')
            # Getting the type of 'node' (line 106)
            node_9920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 64), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 106)
            col_offset_9921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 64), node_9920, 'col_offset')
            # Processing the call keyword arguments (line 105)
            kwargs_9922 = {}
            # Getting the type of 'stypy_functions_copy' (line 105)
            stypy_functions_copy_9912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 29), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 105)
            create_set_type_of_9913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 29), stypy_functions_copy_9912, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 105)
            create_set_type_of_call_result_9923 = invoke(stypy.reporting.localization.Localization(__file__, 105, 29), create_set_type_of_9913, *[id_9916, temp_assign_9917, lineno_9919, col_offset_9921], **kwargs_9922)
            
            # Assigning a type to the variable 'augment_assign' (line 105)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 105, 12), 'augment_assign', create_set_type_of_call_result_9923)
            # SSA branch for the else part of an if statement (line 104)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 108):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 108)
            # Processing the call arguments (line 108)
            # Getting the type of 'node' (line 108)
            node_9926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 58), 'node', False)
            # Obtaining the member 'target' of a type (line 108)
            target_9927 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 58), node_9926, 'target')
            # Obtaining the member 'value' of a type (line 108)
            value_9928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 58), target_9927, 'value')
            # Getting the type of 'context' (line 108)
            context_9929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 77), 'context', False)
            # Processing the call keyword arguments (line 108)
            kwargs_9930 = {}
            # Getting the type of 'self' (line 108)
            self_9924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 47), 'self', False)
            # Obtaining the member 'visit' of a type (line 108)
            visit_9925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 47), self_9924, 'visit')
            # Calling visit(args, kwargs) (line 108)
            visit_call_result_9931 = invoke(stypy.reporting.localization.Localization(__file__, 108, 47), visit_9925, *[value_9928, context_9929], **kwargs_9930)
            
            # Assigning a type to the variable 'call_assignment_9419' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9419', visit_call_result_9931)
            
            # Assigning a Call to a Name (line 108):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9419' (line 108)
            call_assignment_9419_9932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9419', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9933 = stypy_get_value_from_tuple(call_assignment_9419_9932, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9420' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9420', stypy_get_value_from_tuple_call_result_9933)
            
            # Assigning a Name to a Name (line 108):
            # Getting the type of 'call_assignment_9420' (line 108)
            call_assignment_9420_9934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9420')
            # Assigning a type to the variable 'get_target_obj_stmts' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'get_target_obj_stmts', call_assignment_9420_9934)
            
            # Assigning a Call to a Name (line 108):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9419' (line 108)
            call_assignment_9419_9935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9419', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_9936 = stypy_get_value_from_tuple(call_assignment_9419_9935, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9421' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9421', stypy_get_value_from_tuple_call_result_9936)
            
            # Assigning a Name to a Name (line 108):
            # Getting the type of 'call_assignment_9421' (line 108)
            call_assignment_9421_9937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 12), 'call_assignment_9421')
            # Assigning a type to the variable 'target_var' (line 108)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 108, 34), 'target_var', call_assignment_9421_9937)
            
            
            # Call to type(...): (line 112)
            # Processing the call arguments (line 112)
            # Getting the type of 'node' (line 112)
            node_9939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 20), 'node', False)
            # Obtaining the member 'target' of a type (line 112)
            target_9940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 112, 20), node_9939, 'target')
            # Processing the call keyword arguments (line 112)
            kwargs_9941 = {}
            # Getting the type of 'type' (line 112)
            type_9938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 15), 'type', False)
            # Calling type(args, kwargs) (line 112)
            type_call_result_9942 = invoke(stypy.reporting.localization.Localization(__file__, 112, 15), type_9938, *[target_9940], **kwargs_9941)
            
            # Getting the type of 'ast' (line 112)
            ast_9943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 112, 36), 'ast')
            # Obtaining the member 'Attribute' of a type (line 112)
            Attribute_9944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 112, 36), ast_9943, 'Attribute')
            # Applying the binary operator 'is' (line 112)
            result_is__9945 = python_operator(stypy.reporting.localization.Localization(__file__, 112, 15), 'is', type_call_result_9942, Attribute_9944)
            
            # Testing if the type of an if condition is none (line 112)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 112, 12), result_is__9945):
                
                # Assigning a Call to a Tuple (line 120):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 120)
                # Processing the call arguments (line 120)
                # Getting the type of 'node' (line 120)
                node_9962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 52), 'node', False)
                # Obtaining the member 'target' of a type (line 120)
                target_9963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), node_9962, 'target')
                # Obtaining the member 'slice' of a type (line 120)
                slice_9964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), target_9963, 'slice')
                # Getting the type of 'context' (line 120)
                context_9965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 71), 'context', False)
                # Processing the call keyword arguments (line 120)
                kwargs_9966 = {}
                # Getting the type of 'self' (line 120)
                self_9960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 120)
                visit_9961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 41), self_9960, 'visit')
                # Calling visit(args, kwargs) (line 120)
                visit_call_result_9967 = invoke(stypy.reporting.localization.Localization(__file__, 120, 41), visit_9961, *[slice_9964, context_9965], **kwargs_9966)
                
                # Assigning a type to the variable 'call_assignment_9422' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', visit_call_result_9967)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9969 = stypy_get_value_from_tuple(call_assignment_9422_9968, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9423' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423', stypy_get_value_from_tuple_call_result_9969)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9423' (line 120)
                call_assignment_9423_9970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423')
                # Assigning a type to the variable 'slice_stmts' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'slice_stmts', call_assignment_9423_9970)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9972 = stypy_get_value_from_tuple(call_assignment_9422_9971, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9424' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424', stypy_get_value_from_tuple_call_result_9972)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9424' (line 120)
                call_assignment_9424_9973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424')
                # Assigning a type to the variable 'slice_var' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 29), 'slice_var', call_assignment_9424_9973)
                
                # Assigning a Call to a Name (line 121):
                
                # Assigning a Call to a Name (line 121):
                
                # Call to create_add_stored_type(...): (line 121)
                # Processing the call arguments (line 121)
                # Getting the type of 'target_var' (line 121)
                target_var_9976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 121)
                slice_var_9977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 92), 'slice_var', False)
                # Getting the type of 'temp_assign' (line 121)
                temp_assign_9978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 103), 'temp_assign', False)
                # Getting the type of 'node' (line 122)
                node_9979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 75), 'node', False)
                # Obtaining the member 'lineno' of a type (line 122)
                lineno_9980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 75), node_9979, 'lineno')
                # Getting the type of 'node' (line 123)
                node_9981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 75), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 123)
                col_offset_9982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 75), node_9981, 'col_offset')
                # Processing the call keyword arguments (line 121)
                kwargs_9983 = {}
                # Getting the type of 'stypy_functions_copy' (line 121)
                stypy_functions_copy_9974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 121)
                create_add_stored_type_9975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 36), stypy_functions_copy_9974, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 121)
                create_add_stored_type_call_result_9984 = invoke(stypy.reporting.localization.Localization(__file__, 121, 36), create_add_stored_type_9975, *[target_var_9976, slice_var_9977, temp_assign_9978, lineno_9980, col_offset_9982], **kwargs_9983)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 121)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 16), 'set_type_of_stmts', create_add_stored_type_call_result_9984)
                
                # Assigning a Call to a Name (line 124):
                
                # Assigning a Call to a Name (line 124):
                
                # Call to flatten_lists(...): (line 124)
                # Processing the call arguments (line 124)
                # Getting the type of 'slice_stmts' (line 124)
                slice_stmts_9987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 62), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 124)
                set_type_of_stmts_9988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 75), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 124)
                kwargs_9989 = {}
                # Getting the type of 'stypy_functions_copy' (line 124)
                stypy_functions_copy_9985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 124)
                flatten_lists_9986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 124, 27), stypy_functions_copy_9985, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 124)
                flatten_lists_call_result_9990 = invoke(stypy.reporting.localization.Localization(__file__, 124, 27), flatten_lists_9986, *[slice_stmts_9987, set_type_of_stmts_9988], **kwargs_9989)
                
                # Assigning a type to the variable 'set_type' (line 124)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 16), 'set_type', flatten_lists_call_result_9990)
            else:
                
                # Testing the type of an if condition (line 112)
                if_condition_9946 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 112, 12), result_is__9945)
                # Assigning a type to the variable 'if_condition_9946' (line 112)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 112, 12), 'if_condition_9946', if_condition_9946)
                # SSA begins for if statement (line 112)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Name (line 113):
                
                # Assigning a Call to a Name (line 113):
                
                # Call to create_set_type_of_member(...): (line 113)
                # Processing the call arguments (line 113)
                # Getting the type of 'target_var' (line 113)
                target_var_9949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 74), 'target_var', False)
                # Getting the type of 'node' (line 113)
                node_9950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 86), 'node', False)
                # Obtaining the member 'target' of a type (line 113)
                target_9951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 86), node_9950, 'target')
                # Obtaining the member 'attr' of a type (line 113)
                attr_9952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 86), target_9951, 'attr')
                # Getting the type of 'temp_assign' (line 113)
                temp_assign_9953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 104), 'temp_assign', False)
                # Getting the type of 'node' (line 114)
                node_9954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 69), 'node', False)
                # Obtaining the member 'lineno' of a type (line 114)
                lineno_9955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 69), node_9954, 'lineno')
                # Getting the type of 'node' (line 115)
                node_9956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 69), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 115)
                col_offset_9957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 69), node_9956, 'col_offset')
                # Processing the call keyword arguments (line 113)
                kwargs_9958 = {}
                # Getting the type of 'stypy_functions_copy' (line 113)
                stypy_functions_copy_9947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 113)
                create_set_type_of_member_9948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 27), stypy_functions_copy_9947, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 113)
                create_set_type_of_member_call_result_9959 = invoke(stypy.reporting.localization.Localization(__file__, 113, 27), create_set_type_of_member_9948, *[target_var_9949, attr_9952, temp_assign_9953, lineno_9955, col_offset_9957], **kwargs_9958)
                
                # Assigning a type to the variable 'set_type' (line 113)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 113, 16), 'set_type', create_set_type_of_member_call_result_9959)
                # SSA branch for the else part of an if statement (line 112)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Tuple (line 120):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 120)
                # Processing the call arguments (line 120)
                # Getting the type of 'node' (line 120)
                node_9962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 52), 'node', False)
                # Obtaining the member 'target' of a type (line 120)
                target_9963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), node_9962, 'target')
                # Obtaining the member 'slice' of a type (line 120)
                slice_9964 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 52), target_9963, 'slice')
                # Getting the type of 'context' (line 120)
                context_9965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 71), 'context', False)
                # Processing the call keyword arguments (line 120)
                kwargs_9966 = {}
                # Getting the type of 'self' (line 120)
                self_9960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 120)
                visit_9961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 41), self_9960, 'visit')
                # Calling visit(args, kwargs) (line 120)
                visit_call_result_9967 = invoke(stypy.reporting.localization.Localization(__file__, 120, 41), visit_9961, *[slice_9964, context_9965], **kwargs_9966)
                
                # Assigning a type to the variable 'call_assignment_9422' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', visit_call_result_9967)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9969 = stypy_get_value_from_tuple(call_assignment_9422_9968, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9423' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423', stypy_get_value_from_tuple_call_result_9969)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9423' (line 120)
                call_assignment_9423_9970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9423')
                # Assigning a type to the variable 'slice_stmts' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'slice_stmts', call_assignment_9423_9970)
                
                # Assigning a Call to a Name (line 120):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9422' (line 120)
                call_assignment_9422_9971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9422', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_9972 = stypy_get_value_from_tuple(call_assignment_9422_9971, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9424' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424', stypy_get_value_from_tuple_call_result_9972)
                
                # Assigning a Name to a Name (line 120):
                # Getting the type of 'call_assignment_9424' (line 120)
                call_assignment_9424_9973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 16), 'call_assignment_9424')
                # Assigning a type to the variable 'slice_var' (line 120)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 120, 29), 'slice_var', call_assignment_9424_9973)
                
                # Assigning a Call to a Name (line 121):
                
                # Assigning a Call to a Name (line 121):
                
                # Call to create_add_stored_type(...): (line 121)
                # Processing the call arguments (line 121)
                # Getting the type of 'target_var' (line 121)
                target_var_9976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 121)
                slice_var_9977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 92), 'slice_var', False)
                # Getting the type of 'temp_assign' (line 121)
                temp_assign_9978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 103), 'temp_assign', False)
                # Getting the type of 'node' (line 122)
                node_9979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 75), 'node', False)
                # Obtaining the member 'lineno' of a type (line 122)
                lineno_9980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 75), node_9979, 'lineno')
                # Getting the type of 'node' (line 123)
                node_9981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 123, 75), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 123)
                col_offset_9982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 123, 75), node_9981, 'col_offset')
                # Processing the call keyword arguments (line 121)
                kwargs_9983 = {}
                # Getting the type of 'stypy_functions_copy' (line 121)
                stypy_functions_copy_9974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 121)
                create_add_stored_type_9975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 36), stypy_functions_copy_9974, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 121)
                create_add_stored_type_call_result_9984 = invoke(stypy.reporting.localization.Localization(__file__, 121, 36), create_add_stored_type_9975, *[target_var_9976, slice_var_9977, temp_assign_9978, lineno_9980, col_offset_9982], **kwargs_9983)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 121)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 121, 16), 'set_type_of_stmts', create_add_stored_type_call_result_9984)
                
                # Assigning a Call to a Name (line 124):
                
                # Assigning a Call to a Name (line 124):
                
                # Call to flatten_lists(...): (line 124)
                # Processing the call arguments (line 124)
                # Getting the type of 'slice_stmts' (line 124)
                slice_stmts_9987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 62), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 124)
                set_type_of_stmts_9988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 75), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 124)
                kwargs_9989 = {}
                # Getting the type of 'stypy_functions_copy' (line 124)
                stypy_functions_copy_9985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 124, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 124)
                flatten_lists_9986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 124, 27), stypy_functions_copy_9985, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 124)
                flatten_lists_call_result_9990 = invoke(stypy.reporting.localization.Localization(__file__, 124, 27), flatten_lists_9986, *[slice_stmts_9987, set_type_of_stmts_9988], **kwargs_9989)
                
                # Assigning a type to the variable 'set_type' (line 124)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 124, 16), 'set_type', flatten_lists_call_result_9990)
                # SSA join for if statement (line 112)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Call to a Name (line 126):
            
            # Assigning a Call to a Name (line 126):
            
            # Call to flatten_lists(...): (line 126)
            # Processing the call arguments (line 126)
            # Getting the type of 'get_target_obj_stmts' (line 126)
            get_target_obj_stmts_9993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 64), 'get_target_obj_stmts', False)
            # Getting the type of 'set_type' (line 126)
            set_type_9994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 86), 'set_type', False)
            # Processing the call keyword arguments (line 126)
            kwargs_9995 = {}
            # Getting the type of 'stypy_functions_copy' (line 126)
            stypy_functions_copy_9991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 126, 29), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 126)
            flatten_lists_9992 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 126, 29), stypy_functions_copy_9991, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 126)
            flatten_lists_call_result_9996 = invoke(stypy.reporting.localization.Localization(__file__, 126, 29), flatten_lists_9992, *[get_target_obj_stmts_9993, set_type_9994], **kwargs_9995)
            
            # Assigning a type to the variable 'augment_assign' (line 126)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 126, 12), 'augment_assign', flatten_lists_call_result_9996)
            # SSA join for if statement (line 104)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Obtaining an instance of the builtin type 'tuple' (line 128)
        tuple_9997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 128, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 128)
        # Adding element type (line 128)
        
        # Call to flatten_lists(...): (line 128)
        # Processing the call arguments (line 128)
        
        # Call to create_blank_line(...): (line 128)
        # Processing the call keyword arguments (line 128)
        kwargs_10002 = {}
        # Getting the type of 'stypy_functions_copy' (line 128)
        stypy_functions_copy_10000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 128)
        create_blank_line_10001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 128, 50), stypy_functions_copy_10000, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 128)
        create_blank_line_call_result_10003 = invoke(stypy.reporting.localization.Localization(__file__, 128, 50), create_blank_line_10001, *[], **kwargs_10002)
        
        # Getting the type of 'get_target_stmts' (line 129)
        get_target_stmts_10004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 129, 45), 'get_target_stmts', False)
        # Getting the type of 'right_stmts' (line 130)
        right_stmts_10005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 45), 'right_stmts', False)
        # Getting the type of 'assign_stmts' (line 131)
        assign_stmts_10006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 131, 45), 'assign_stmts', False)
        # Getting the type of 'augment_assign' (line 132)
        augment_assign_10007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 132, 45), 'augment_assign', False)
        
        # Call to create_blank_line(...): (line 133)
        # Processing the call keyword arguments (line 133)
        kwargs_10010 = {}
        # Getting the type of 'stypy_functions_copy' (line 133)
        stypy_functions_copy_10008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 133)
        create_blank_line_10009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 45), stypy_functions_copy_10008, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 133)
        create_blank_line_call_result_10011 = invoke(stypy.reporting.localization.Localization(__file__, 133, 45), create_blank_line_10009, *[], **kwargs_10010)
        
        # Processing the call keyword arguments (line 128)
        kwargs_10012 = {}
        # Getting the type of 'stypy_functions_copy' (line 128)
        stypy_functions_copy_9998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 128)
        flatten_lists_9999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 128, 15), stypy_functions_copy_9998, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 128)
        flatten_lists_call_result_10013 = invoke(stypy.reporting.localization.Localization(__file__, 128, 15), flatten_lists_9999, *[create_blank_line_call_result_10003, get_target_stmts_10004, right_stmts_10005, assign_stmts_10006, augment_assign_10007, create_blank_line_call_result_10011], **kwargs_10012)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 15), tuple_9997, flatten_lists_call_result_10013)
        # Adding element type (line 128)
        # Getting the type of 'temp_assign' (line 133)
        temp_assign_10014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 88), 'temp_assign')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 128, 15), tuple_9997, temp_assign_10014)
        
        # Assigning a type to the variable 'stypy_return_type' (line 128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 8), 'stypy_return_type', tuple_9997)
        
        # ################# End of 'visit_AugAssign(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_AugAssign' in the type store
        # Getting the type of 'stypy_return_type' (line 65)
        stypy_return_type_10015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 65, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10015)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_AugAssign'
        return stypy_return_type_10015


    @norecursion
    def visit_Expr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Expr'
        module_type_store = module_type_store.open_function_context('visit_Expr', 137, 4, False)
        # Assigning a type to the variable 'self' (line 138)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 138, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Expr')
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Expr.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Expr', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Expr', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Expr(...)' code ##################

        
        # Evaluating a boolean operation
        
        # Call to is_src_comment(...): (line 140)
        # Processing the call arguments (line 140)
        # Getting the type of 'node' (line 140)
        node_10018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 47), 'node', False)
        # Processing the call keyword arguments (line 140)
        kwargs_10019 = {}
        # Getting the type of 'stypy_functions_copy' (line 140)
        stypy_functions_copy_10016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 11), 'stypy_functions_copy', False)
        # Obtaining the member 'is_src_comment' of a type (line 140)
        is_src_comment_10017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 140, 11), stypy_functions_copy_10016, 'is_src_comment')
        # Calling is_src_comment(args, kwargs) (line 140)
        is_src_comment_call_result_10020 = invoke(stypy.reporting.localization.Localization(__file__, 140, 11), is_src_comment_10017, *[node_10018], **kwargs_10019)
        
        
        # Call to is_blank_line(...): (line 140)
        # Processing the call arguments (line 140)
        # Getting the type of 'node' (line 140)
        node_10023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 91), 'node', False)
        # Processing the call keyword arguments (line 140)
        kwargs_10024 = {}
        # Getting the type of 'stypy_functions_copy' (line 140)
        stypy_functions_copy_10021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 140, 56), 'stypy_functions_copy', False)
        # Obtaining the member 'is_blank_line' of a type (line 140)
        is_blank_line_10022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 140, 56), stypy_functions_copy_10021, 'is_blank_line')
        # Calling is_blank_line(args, kwargs) (line 140)
        is_blank_line_call_result_10025 = invoke(stypy.reporting.localization.Localization(__file__, 140, 56), is_blank_line_10022, *[node_10023], **kwargs_10024)
        
        # Applying the binary operator 'or' (line 140)
        result_or_keyword_10026 = python_operator(stypy.reporting.localization.Localization(__file__, 140, 11), 'or', is_src_comment_call_result_10020, is_blank_line_call_result_10025)
        
        # Testing if the type of an if condition is none (line 140)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 140, 8), result_or_keyword_10026):
            pass
        else:
            
            # Testing the type of an if condition (line 140)
            if_condition_10027 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 140, 8), result_or_keyword_10026)
            # Assigning a type to the variable 'if_condition_10027' (line 140)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 140, 8), 'if_condition_10027', if_condition_10027)
            # SSA begins for if statement (line 140)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Obtaining an instance of the builtin type 'tuple' (line 141)
            tuple_10028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 141)
            # Adding element type (line 141)
            # Getting the type of 'node' (line 141)
            node_10029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 19), 'node')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 19), tuple_10028, node_10029)
            # Adding element type (line 141)
            
            # Obtaining an instance of the builtin type 'list' (line 141)
            list_10030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 25), 'list')
            # Adding type elements to the builtin type 'list' instance (line 141)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 141, 19), tuple_10028, list_10030)
            
            # Assigning a type to the variable 'stypy_return_type' (line 141)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 141, 12), 'stypy_return_type', tuple_10028)
            # SSA join for if statement (line 140)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Call to a Name (line 143):
        
        # Assigning a Call to a Name (line 143):
        
        # Call to Expr(...): (line 143)
        # Processing the call keyword arguments (line 143)
        kwargs_10033 = {}
        # Getting the type of 'ast' (line 143)
        ast_10031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 143, 15), 'ast', False)
        # Obtaining the member 'Expr' of a type (line 143)
        Expr_10032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 143, 15), ast_10031, 'Expr')
        # Calling Expr(args, kwargs) (line 143)
        Expr_call_result_10034 = invoke(stypy.reporting.localization.Localization(__file__, 143, 15), Expr_10032, *[], **kwargs_10033)
        
        # Assigning a type to the variable 'expr' (line 143)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 143, 8), 'expr', Expr_call_result_10034)
        
        # Call to assign_line_and_column(...): (line 144)
        # Processing the call arguments (line 144)
        # Getting the type of 'expr' (line 144)
        expr_10037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 52), 'expr', False)
        # Getting the type of 'node' (line 144)
        node_10038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 58), 'node', False)
        # Processing the call keyword arguments (line 144)
        kwargs_10039 = {}
        # Getting the type of 'stypy_functions_copy' (line 144)
        stypy_functions_copy_10035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 8), 'stypy_functions_copy', False)
        # Obtaining the member 'assign_line_and_column' of a type (line 144)
        assign_line_and_column_10036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 8), stypy_functions_copy_10035, 'assign_line_and_column')
        # Calling assign_line_and_column(args, kwargs) (line 144)
        assign_line_and_column_call_result_10040 = invoke(stypy.reporting.localization.Localization(__file__, 144, 8), assign_line_and_column_10036, *[expr_10037, node_10038], **kwargs_10039)
        
        
        # Assigning a Call to a Tuple (line 146):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 146)
        # Processing the call arguments (line 146)
        # Getting the type of 'node' (line 146)
        node_10043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 41), 'node', False)
        # Obtaining the member 'value' of a type (line 146)
        value_10044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 41), node_10043, 'value')
        # Getting the type of 'context' (line 146)
        context_10045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 53), 'context', False)
        # Processing the call keyword arguments (line 146)
        kwargs_10046 = {}
        # Getting the type of 'self' (line 146)
        self_10041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 30), 'self', False)
        # Obtaining the member 'visit' of a type (line 146)
        visit_10042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 30), self_10041, 'visit')
        # Calling visit(args, kwargs) (line 146)
        visit_call_result_10047 = invoke(stypy.reporting.localization.Localization(__file__, 146, 30), visit_10042, *[value_10044, context_10045], **kwargs_10046)
        
        # Assigning a type to the variable 'call_assignment_9425' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'call_assignment_9425', visit_call_result_10047)
        
        # Assigning a Call to a Name (line 146):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9425' (line 146)
        call_assignment_9425_10048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'call_assignment_9425', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10049 = stypy_get_value_from_tuple(call_assignment_9425_10048, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9426' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'call_assignment_9426', stypy_get_value_from_tuple_call_result_10049)
        
        # Assigning a Name to a Attribute (line 146):
        # Getting the type of 'call_assignment_9426' (line 146)
        call_assignment_9426_10050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'call_assignment_9426')
        # Getting the type of 'expr' (line 146)
        expr_10051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'expr')
        # Setting the type of the member 'value' of a type (line 146)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 8), expr_10051, 'value', call_assignment_9426_10050)
        
        # Assigning a Call to a Name (line 146):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9425' (line 146)
        call_assignment_9425_10052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'call_assignment_9425', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10053 = stypy_get_value_from_tuple(call_assignment_9425_10052, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9427' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'call_assignment_9427', stypy_get_value_from_tuple_call_result_10053)
        
        # Assigning a Name to a Name (line 146):
        # Getting the type of 'call_assignment_9427' (line 146)
        call_assignment_9427_10054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 8), 'call_assignment_9427')
        # Assigning a type to the variable 'temp_op' (line 146)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 146, 20), 'temp_op', call_assignment_9427_10054)
        
        # Obtaining an instance of the builtin type 'tuple' (line 148)
        tuple_10055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 148, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 148)
        # Adding element type (line 148)
        # Getting the type of 'expr' (line 148)
        expr_10056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 15), 'expr')
        # Obtaining the member 'value' of a type (line 148)
        value_10057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 15), expr_10056, 'value')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 15), tuple_10055, value_10057)
        # Adding element type (line 148)
        # Getting the type of 'temp_op' (line 148)
        temp_op_10058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 27), 'temp_op')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 148, 15), tuple_10055, temp_op_10058)
        
        # Assigning a type to the variable 'stypy_return_type' (line 148)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'stypy_return_type', tuple_10055)
        
        # ################# End of 'visit_Expr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Expr' in the type store
        # Getting the type of 'stypy_return_type' (line 137)
        stypy_return_type_10059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10059)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Expr'
        return stypy_return_type_10059


    @norecursion
    def visit_Attribute(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Attribute'
        module_type_store = module_type_store.open_function_context('visit_Attribute', 150, 4, False)
        # Assigning a type to the variable 'self' (line 151)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Attribute')
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Attribute.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Attribute', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Attribute', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Attribute(...)' code ##################

        
        # Assigning a Call to a Tuple (line 153):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 153)
        # Processing the call arguments (line 153)
        # Getting the type of 'node' (line 153)
        node_10062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 44), 'node', False)
        # Obtaining the member 'value' of a type (line 153)
        value_10063 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 44), node_10062, 'value')
        # Getting the type of 'context' (line 153)
        context_10064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 56), 'context', False)
        # Processing the call keyword arguments (line 153)
        kwargs_10065 = {}
        # Getting the type of 'self' (line 153)
        self_10060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 33), 'self', False)
        # Obtaining the member 'visit' of a type (line 153)
        visit_10061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 33), self_10060, 'visit')
        # Calling visit(args, kwargs) (line 153)
        visit_call_result_10066 = invoke(stypy.reporting.localization.Localization(__file__, 153, 33), visit_10061, *[value_10063, context_10064], **kwargs_10065)
        
        # Assigning a type to the variable 'call_assignment_9428' (line 153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'call_assignment_9428', visit_call_result_10066)
        
        # Assigning a Call to a Name (line 153):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9428' (line 153)
        call_assignment_9428_10067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'call_assignment_9428', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10068 = stypy_get_value_from_tuple(call_assignment_9428_10067, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9429' (line 153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'call_assignment_9429', stypy_get_value_from_tuple_call_result_10068)
        
        # Assigning a Name to a Name (line 153):
        # Getting the type of 'call_assignment_9429' (line 153)
        call_assignment_9429_10069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'call_assignment_9429')
        # Assigning a type to the variable 'value_stmts' (line 153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'value_stmts', call_assignment_9429_10069)
        
        # Assigning a Call to a Name (line 153):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9428' (line 153)
        call_assignment_9428_10070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'call_assignment_9428', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10071 = stypy_get_value_from_tuple(call_assignment_9428_10070, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9430' (line 153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'call_assignment_9430', stypy_get_value_from_tuple_call_result_10071)
        
        # Assigning a Name to a Name (line 153):
        # Getting the type of 'call_assignment_9430' (line 153)
        call_assignment_9430_10072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'call_assignment_9430')
        # Assigning a type to the variable 'owner_var' (line 153)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 153, 21), 'owner_var', call_assignment_9430_10072)
        
        
        # Call to type(...): (line 154)
        # Processing the call arguments (line 154)
        # Getting the type of 'node' (line 154)
        node_10074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 16), 'node', False)
        # Obtaining the member 'ctx' of a type (line 154)
        ctx_10075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 16), node_10074, 'ctx')
        # Processing the call keyword arguments (line 154)
        kwargs_10076 = {}
        # Getting the type of 'type' (line 154)
        type_10073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 11), 'type', False)
        # Calling type(args, kwargs) (line 154)
        type_call_result_10077 = invoke(stypy.reporting.localization.Localization(__file__, 154, 11), type_10073, *[ctx_10075], **kwargs_10076)
        
        # Getting the type of 'ast' (line 154)
        ast_10078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 29), 'ast')
        # Obtaining the member 'Load' of a type (line 154)
        Load_10079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 29), ast_10078, 'Load')
        # Applying the binary operator '==' (line 154)
        result_eq_10080 = python_operator(stypy.reporting.localization.Localization(__file__, 154, 11), '==', type_call_result_10077, Load_10079)
        
        # Testing if the type of an if condition is none (line 154)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 154, 8), result_eq_10080):
            
            # Obtaining an instance of the builtin type 'tuple' (line 170)
            tuple_10115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 170)
            # Adding element type (line 170)
            
            # Call to flatten_lists(...): (line 170)
            # Processing the call arguments (line 170)
            # Getting the type of 'value_stmts' (line 171)
            value_stmts_10118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 16), 'value_stmts', False)
            
            # Call to create_attribute(...): (line 172)
            # Processing the call arguments (line 172)
            # Getting the type of 'owner_var' (line 172)
            owner_var_10121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 52), 'owner_var', False)
            # Getting the type of 'node' (line 172)
            node_10122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 63), 'node', False)
            # Obtaining the member 'attr' of a type (line 172)
            attr_10123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 63), node_10122, 'attr')
            # Getting the type of 'False' (line 172)
            False_10124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 74), 'False', False)
            # Getting the type of 'node' (line 172)
            node_10125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 81), 'node', False)
            # Obtaining the member 'lineno' of a type (line 172)
            lineno_10126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 81), node_10125, 'lineno')
            # Getting the type of 'node' (line 172)
            node_10127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 94), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 172)
            col_offset_10128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 94), node_10127, 'col_offset')
            # Processing the call keyword arguments (line 172)
            kwargs_10129 = {}
            # Getting the type of 'core_language_copy' (line 172)
            core_language_copy_10119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 16), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 172)
            create_attribute_10120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 16), core_language_copy_10119, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 172)
            create_attribute_call_result_10130 = invoke(stypy.reporting.localization.Localization(__file__, 172, 16), create_attribute_10120, *[owner_var_10121, attr_10123, False_10124, lineno_10126, col_offset_10128], **kwargs_10129)
            
            # Processing the call keyword arguments (line 170)
            kwargs_10131 = {}
            # Getting the type of 'stypy_functions_copy' (line 170)
            stypy_functions_copy_10116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 19), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 170)
            flatten_lists_10117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 170, 19), stypy_functions_copy_10116, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 170)
            flatten_lists_call_result_10132 = invoke(stypy.reporting.localization.Localization(__file__, 170, 19), flatten_lists_10117, *[value_stmts_10118, create_attribute_call_result_10130], **kwargs_10131)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 170, 19), tuple_10115, flatten_lists_call_result_10132)
            # Adding element type (line 170)
            
            # Obtaining an instance of the builtin type 'list' (line 172)
            list_10133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 113), 'list')
            # Adding type elements to the builtin type 'list' instance (line 172)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 170, 19), tuple_10115, list_10133)
            
            # Assigning a type to the variable 'stypy_return_type' (line 170)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 12), 'stypy_return_type', tuple_10115)
        else:
            
            # Testing the type of an if condition (line 154)
            if_condition_10081 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 154, 8), result_eq_10080)
            # Assigning a type to the variable 'if_condition_10081' (line 154)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 154, 8), 'if_condition_10081', if_condition_10081)
            # SSA begins for if statement (line 154)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 155):
            
            # Assigning a Call to a Name:
            
            # Call to create_get_type_of_member(...): (line 155)
            # Processing the call arguments (line 155)
            # Getting the type of 'owner_var' (line 155)
            owner_var_10084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 90), 'owner_var', False)
            # Getting the type of 'node' (line 155)
            node_10085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 101), 'node', False)
            # Obtaining the member 'attr' of a type (line 155)
            attr_10086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 101), node_10085, 'attr')
            # Getting the type of 'node' (line 155)
            node_10087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 112), 'node', False)
            # Obtaining the member 'lineno' of a type (line 155)
            lineno_10088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 112), node_10087, 'lineno')
            # Getting the type of 'node' (line 156)
            node_10089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 156, 85), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 156)
            col_offset_10090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 156, 85), node_10089, 'col_offset')
            # Processing the call keyword arguments (line 155)
            kwargs_10091 = {}
            # Getting the type of 'stypy_functions_copy' (line 155)
            stypy_functions_copy_10082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_get_type_of_member' of a type (line 155)
            create_get_type_of_member_10083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 155, 43), stypy_functions_copy_10082, 'create_get_type_of_member')
            # Calling create_get_type_of_member(args, kwargs) (line 155)
            create_get_type_of_member_call_result_10092 = invoke(stypy.reporting.localization.Localization(__file__, 155, 43), create_get_type_of_member_10083, *[owner_var_10084, attr_10086, lineno_10088, col_offset_10090], **kwargs_10091)
            
            # Assigning a type to the variable 'call_assignment_9431' (line 155)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'call_assignment_9431', create_get_type_of_member_call_result_10092)
            
            # Assigning a Call to a Name (line 155):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9431' (line 155)
            call_assignment_9431_10093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'call_assignment_9431', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10094 = stypy_get_value_from_tuple(call_assignment_9431_10093, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9432' (line 155)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'call_assignment_9432', stypy_get_value_from_tuple_call_result_10094)
            
            # Assigning a Name to a Name (line 155):
            # Getting the type of 'call_assignment_9432' (line 155)
            call_assignment_9432_10095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'call_assignment_9432')
            # Assigning a type to the variable 'get_member_stmts' (line 155)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'get_member_stmts', call_assignment_9432_10095)
            
            # Assigning a Call to a Name (line 155):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9431' (line 155)
            call_assignment_9431_10096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'call_assignment_9431', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10097 = stypy_get_value_from_tuple(call_assignment_9431_10096, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9433' (line 155)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'call_assignment_9433', stypy_get_value_from_tuple_call_result_10097)
            
            # Assigning a Name to a Name (line 155):
            # Getting the type of 'call_assignment_9433' (line 155)
            call_assignment_9433_10098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 155, 12), 'call_assignment_9433')
            # Assigning a type to the variable 'member_var' (line 155)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 155, 30), 'member_var', call_assignment_9433_10098)
            
            # Assigning a Call to a Name (line 159):
            
            # Assigning a Call to a Name (line 159):
            
            # Call to Tuple(...): (line 159)
            # Processing the call keyword arguments (line 159)
            kwargs_10101 = {}
            # Getting the type of 'ast' (line 159)
            ast_10099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 25), 'ast', False)
            # Obtaining the member 'Tuple' of a type (line 159)
            Tuple_10100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 25), ast_10099, 'Tuple')
            # Calling Tuple(args, kwargs) (line 159)
            Tuple_call_result_10102 = invoke(stypy.reporting.localization.Localization(__file__, 159, 25), Tuple_10100, *[], **kwargs_10101)
            
            # Assigning a type to the variable 'tuple_node' (line 159)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 159, 12), 'tuple_node', Tuple_call_result_10102)
            
            # Assigning a List to a Attribute (line 160):
            
            # Assigning a List to a Attribute (line 160):
            
            # Obtaining an instance of the builtin type 'list' (line 160)
            list_10103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 160, 30), 'list')
            # Adding type elements to the builtin type 'list' instance (line 160)
            # Adding element type (line 160)
            # Getting the type of 'member_var' (line 160)
            member_var_10104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 31), 'member_var')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 30), list_10103, member_var_10104)
            # Adding element type (line 160)
            # Getting the type of 'owner_var' (line 160)
            owner_var_10105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 43), 'owner_var')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 160, 30), list_10103, owner_var_10105)
            
            # Getting the type of 'tuple_node' (line 160)
            tuple_node_10106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 160, 12), 'tuple_node')
            # Setting the type of the member 'elts' of a type (line 160)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 160, 12), tuple_node_10106, 'elts', list_10103)
            
            # Obtaining an instance of the builtin type 'tuple' (line 162)
            tuple_10107 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 162, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 162)
            # Adding element type (line 162)
            
            # Call to flatten_lists(...): (line 162)
            # Processing the call arguments (line 162)
            # Getting the type of 'value_stmts' (line 163)
            value_stmts_10110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 16), 'value_stmts', False)
            # Getting the type of 'get_member_stmts' (line 164)
            get_member_stmts_10111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 16), 'get_member_stmts', False)
            # Processing the call keyword arguments (line 162)
            kwargs_10112 = {}
            # Getting the type of 'stypy_functions_copy' (line 162)
            stypy_functions_copy_10108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 19), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 162)
            flatten_lists_10109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 19), stypy_functions_copy_10108, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 162)
            flatten_lists_call_result_10113 = invoke(stypy.reporting.localization.Localization(__file__, 162, 19), flatten_lists_10109, *[value_stmts_10110, get_member_stmts_10111], **kwargs_10112)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 19), tuple_10107, flatten_lists_call_result_10113)
            # Adding element type (line 162)
            # Getting the type of 'member_var' (line 164)
            member_var_10114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 164, 35), 'member_var')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 162, 19), tuple_10107, member_var_10114)
            
            # Assigning a type to the variable 'stypy_return_type' (line 162)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 162, 12), 'stypy_return_type', tuple_10107)
            # SSA branch for the else part of an if statement (line 154)
            module_type_store.open_ssa_branch('else')
            
            # Obtaining an instance of the builtin type 'tuple' (line 170)
            tuple_10115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 170, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 170)
            # Adding element type (line 170)
            
            # Call to flatten_lists(...): (line 170)
            # Processing the call arguments (line 170)
            # Getting the type of 'value_stmts' (line 171)
            value_stmts_10118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 16), 'value_stmts', False)
            
            # Call to create_attribute(...): (line 172)
            # Processing the call arguments (line 172)
            # Getting the type of 'owner_var' (line 172)
            owner_var_10121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 52), 'owner_var', False)
            # Getting the type of 'node' (line 172)
            node_10122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 63), 'node', False)
            # Obtaining the member 'attr' of a type (line 172)
            attr_10123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 63), node_10122, 'attr')
            # Getting the type of 'False' (line 172)
            False_10124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 74), 'False', False)
            # Getting the type of 'node' (line 172)
            node_10125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 81), 'node', False)
            # Obtaining the member 'lineno' of a type (line 172)
            lineno_10126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 81), node_10125, 'lineno')
            # Getting the type of 'node' (line 172)
            node_10127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 94), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 172)
            col_offset_10128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 94), node_10127, 'col_offset')
            # Processing the call keyword arguments (line 172)
            kwargs_10129 = {}
            # Getting the type of 'core_language_copy' (line 172)
            core_language_copy_10119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 16), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 172)
            create_attribute_10120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 16), core_language_copy_10119, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 172)
            create_attribute_call_result_10130 = invoke(stypy.reporting.localization.Localization(__file__, 172, 16), create_attribute_10120, *[owner_var_10121, attr_10123, False_10124, lineno_10126, col_offset_10128], **kwargs_10129)
            
            # Processing the call keyword arguments (line 170)
            kwargs_10131 = {}
            # Getting the type of 'stypy_functions_copy' (line 170)
            stypy_functions_copy_10116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 170, 19), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 170)
            flatten_lists_10117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 170, 19), stypy_functions_copy_10116, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 170)
            flatten_lists_call_result_10132 = invoke(stypy.reporting.localization.Localization(__file__, 170, 19), flatten_lists_10117, *[value_stmts_10118, create_attribute_call_result_10130], **kwargs_10131)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 170, 19), tuple_10115, flatten_lists_call_result_10132)
            # Adding element type (line 170)
            
            # Obtaining an instance of the builtin type 'list' (line 172)
            list_10133 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 113), 'list')
            # Adding type elements to the builtin type 'list' instance (line 172)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 170, 19), tuple_10115, list_10133)
            
            # Assigning a type to the variable 'stypy_return_type' (line 170)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 170, 12), 'stypy_return_type', tuple_10115)
            # SSA join for if statement (line 154)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # ################# End of 'visit_Attribute(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Attribute' in the type store
        # Getting the type of 'stypy_return_type' (line 150)
        stypy_return_type_10134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10134)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Attribute'
        return stypy_return_type_10134


    @norecursion
    def visit_Name(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Name'
        module_type_store = module_type_store.open_function_context('visit_Name', 174, 4, False)
        # Assigning a type to the variable 'self' (line 175)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Name')
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Name.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Name', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Name', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Name(...)' code ##################

        
        
        # Call to type(...): (line 177)
        # Processing the call arguments (line 177)
        # Getting the type of 'node' (line 177)
        node_10136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 16), 'node', False)
        # Obtaining the member 'ctx' of a type (line 177)
        ctx_10137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 16), node_10136, 'ctx')
        # Processing the call keyword arguments (line 177)
        kwargs_10138 = {}
        # Getting the type of 'type' (line 177)
        type_10135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 11), 'type', False)
        # Calling type(args, kwargs) (line 177)
        type_call_result_10139 = invoke(stypy.reporting.localization.Localization(__file__, 177, 11), type_10135, *[ctx_10137], **kwargs_10138)
        
        # Getting the type of 'ast' (line 177)
        ast_10140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 29), 'ast')
        # Obtaining the member 'Load' of a type (line 177)
        Load_10141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 29), ast_10140, 'Load')
        # Applying the binary operator '==' (line 177)
        result_eq_10142 = python_operator(stypy.reporting.localization.Localization(__file__, 177, 11), '==', type_call_result_10139, Load_10141)
        
        # Testing if the type of an if condition is none (line 177)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 177, 8), result_eq_10142):
            
            # Obtaining an instance of the builtin type 'tuple' (line 180)
            tuple_10154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 180)
            # Adding element type (line 180)
            
            # Call to create_Name(...): (line 180)
            # Processing the call arguments (line 180)
            # Getting the type of 'node' (line 180)
            node_10157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 50), 'node', False)
            # Obtaining the member 'id' of a type (line 180)
            id_10158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 50), node_10157, 'id')
            # Getting the type of 'False' (line 180)
            False_10159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 59), 'False', False)
            # Getting the type of 'node' (line 180)
            node_10160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 66), 'node', False)
            # Obtaining the member 'lineno' of a type (line 180)
            lineno_10161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 66), node_10160, 'lineno')
            # Getting the type of 'node' (line 180)
            node_10162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 79), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 180)
            col_offset_10163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 79), node_10162, 'col_offset')
            # Processing the call keyword arguments (line 180)
            kwargs_10164 = {}
            # Getting the type of 'core_language_copy' (line 180)
            core_language_copy_10155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 19), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 180)
            create_Name_10156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 19), core_language_copy_10155, 'create_Name')
            # Calling create_Name(args, kwargs) (line 180)
            create_Name_call_result_10165 = invoke(stypy.reporting.localization.Localization(__file__, 180, 19), create_Name_10156, *[id_10158, False_10159, lineno_10161, col_offset_10163], **kwargs_10164)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 19), tuple_10154, create_Name_call_result_10165)
            # Adding element type (line 180)
            
            # Obtaining an instance of the builtin type 'list' (line 180)
            list_10166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 97), 'list')
            # Adding type elements to the builtin type 'list' instance (line 180)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 19), tuple_10154, list_10166)
            
            # Assigning a type to the variable 'stypy_return_type' (line 180)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 12), 'stypy_return_type', tuple_10154)
        else:
            
            # Testing the type of an if condition (line 177)
            if_condition_10143 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 177, 8), result_eq_10142)
            # Assigning a type to the variable 'if_condition_10143' (line 177)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 8), 'if_condition_10143', if_condition_10143)
            # SSA begins for if statement (line 177)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to create_get_type_of(...): (line 178)
            # Processing the call arguments (line 178)
            # Getting the type of 'node' (line 178)
            node_10146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 59), 'node', False)
            # Obtaining the member 'id' of a type (line 178)
            id_10147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 59), node_10146, 'id')
            # Getting the type of 'node' (line 178)
            node_10148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 178)
            lineno_10149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 68), node_10148, 'lineno')
            # Getting the type of 'node' (line 178)
            node_10150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 178)
            col_offset_10151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 81), node_10150, 'col_offset')
            # Processing the call keyword arguments (line 178)
            kwargs_10152 = {}
            # Getting the type of 'stypy_functions_copy' (line 178)
            stypy_functions_copy_10144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 19), 'stypy_functions_copy', False)
            # Obtaining the member 'create_get_type_of' of a type (line 178)
            create_get_type_of_10145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 19), stypy_functions_copy_10144, 'create_get_type_of')
            # Calling create_get_type_of(args, kwargs) (line 178)
            create_get_type_of_call_result_10153 = invoke(stypy.reporting.localization.Localization(__file__, 178, 19), create_get_type_of_10145, *[id_10147, lineno_10149, col_offset_10151], **kwargs_10152)
            
            # Assigning a type to the variable 'stypy_return_type' (line 178)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 178, 12), 'stypy_return_type', create_get_type_of_call_result_10153)
            # SSA branch for the else part of an if statement (line 177)
            module_type_store.open_ssa_branch('else')
            
            # Obtaining an instance of the builtin type 'tuple' (line 180)
            tuple_10154 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 19), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 180)
            # Adding element type (line 180)
            
            # Call to create_Name(...): (line 180)
            # Processing the call arguments (line 180)
            # Getting the type of 'node' (line 180)
            node_10157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 50), 'node', False)
            # Obtaining the member 'id' of a type (line 180)
            id_10158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 50), node_10157, 'id')
            # Getting the type of 'False' (line 180)
            False_10159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 59), 'False', False)
            # Getting the type of 'node' (line 180)
            node_10160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 66), 'node', False)
            # Obtaining the member 'lineno' of a type (line 180)
            lineno_10161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 66), node_10160, 'lineno')
            # Getting the type of 'node' (line 180)
            node_10162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 79), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 180)
            col_offset_10163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 79), node_10162, 'col_offset')
            # Processing the call keyword arguments (line 180)
            kwargs_10164 = {}
            # Getting the type of 'core_language_copy' (line 180)
            core_language_copy_10155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 180, 19), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 180)
            create_Name_10156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 180, 19), core_language_copy_10155, 'create_Name')
            # Calling create_Name(args, kwargs) (line 180)
            create_Name_call_result_10165 = invoke(stypy.reporting.localization.Localization(__file__, 180, 19), create_Name_10156, *[id_10158, False_10159, lineno_10161, col_offset_10163], **kwargs_10164)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 19), tuple_10154, create_Name_call_result_10165)
            # Adding element type (line 180)
            
            # Obtaining an instance of the builtin type 'list' (line 180)
            list_10166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 97), 'list')
            # Adding type elements to the builtin type 'list' instance (line 180)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 180, 19), tuple_10154, list_10166)
            
            # Assigning a type to the variable 'stypy_return_type' (line 180)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 12), 'stypy_return_type', tuple_10154)
            # SSA join for if statement (line 177)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # ################# End of 'visit_Name(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Name' in the type store
        # Getting the type of 'stypy_return_type' (line 174)
        stypy_return_type_10167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 174, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10167)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Name'
        return stypy_return_type_10167


    @norecursion
    def visit_Num(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Num'
        module_type_store = module_type_store.open_function_context('visit_Num', 182, 4, False)
        # Assigning a type to the variable 'self' (line 183)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 183, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Num')
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Num.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Num', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Num', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Num(...)' code ##################

        
        # Assigning a Call to a Name (line 185):
        
        # Assigning a Call to a Name (line 185):
        
        # Call to create_localization(...): (line 185)
        # Processing the call arguments (line 185)
        # Getting the type of 'node' (line 185)
        node_10170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 185)
        lineno_10171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 64), node_10170, 'lineno')
        # Getting the type of 'node' (line 185)
        node_10172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 185)
        col_offset_10173 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 77), node_10172, 'col_offset')
        # Processing the call keyword arguments (line 185)
        kwargs_10174 = {}
        # Getting the type of 'stypy_functions_copy' (line 185)
        stypy_functions_copy_10168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 185, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 185)
        create_localization_10169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 185, 23), stypy_functions_copy_10168, 'create_localization')
        # Calling create_localization(args, kwargs) (line 185)
        create_localization_call_result_10175 = invoke(stypy.reporting.localization.Localization(__file__, 185, 23), create_localization_10169, *[lineno_10171, col_offset_10173], **kwargs_10174)
        
        # Assigning a type to the variable 'localization' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 8), 'localization', create_localization_call_result_10175)
        
        # Assigning a Call to a Name (line 186):
        
        # Assigning a Call to a Name (line 186):
        
        # Call to create_Name(...): (line 186)
        # Processing the call arguments (line 186)
        str_10178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 186, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 186)
        # Getting the type of 'node' (line 186)
        node_10179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 80), 'node', False)
        # Obtaining the member 'lineno' of a type (line 186)
        lineno_10180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 80), node_10179, 'lineno')
        keyword_10181 = lineno_10180
        # Getting the type of 'node' (line 186)
        node_10182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 186)
        col_offset_10183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 100), node_10182, 'col_offset')
        keyword_10184 = col_offset_10183
        kwargs_10185 = {'column': keyword_10184, 'line': keyword_10181}
        # Getting the type of 'core_language_copy' (line 186)
        core_language_copy_10176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 186, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 186)
        create_Name_10177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 186, 24), core_language_copy_10176, 'create_Name')
        # Calling create_Name(args, kwargs) (line 186)
        create_Name_call_result_10186 = invoke(stypy.reporting.localization.Localization(__file__, 186, 24), create_Name_10177, *[str_10178], **kwargs_10185)
        
        # Assigning a type to the variable 'get_type_call' (line 186)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 186, 8), 'get_type_call', create_Name_call_result_10186)
        
        # Assigning a Call to a Name (line 187):
        
        # Assigning a Call to a Name (line 187):
        
        # Call to create_str(...): (line 187)
        # Processing the call arguments (line 187)
        
        # Call to type(...): (line 187)
        # Processing the call arguments (line 187)
        # Getting the type of 'node' (line 187)
        node_10190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 65), 'node', False)
        # Obtaining the member 'n' of a type (line 187)
        n_10191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 65), node_10190, 'n')
        # Processing the call keyword arguments (line 187)
        kwargs_10192 = {}
        # Getting the type of 'type' (line 187)
        type_10189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 60), 'type', False)
        # Calling type(args, kwargs) (line 187)
        type_call_result_10193 = invoke(stypy.reporting.localization.Localization(__file__, 187, 60), type_10189, *[n_10191], **kwargs_10192)
        
        # Obtaining the member '__name__' of a type (line 187)
        name___10194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 60), type_call_result_10193, '__name__')
        # Processing the call keyword arguments (line 187)
        kwargs_10195 = {}
        # Getting the type of 'core_language_copy' (line 187)
        core_language_copy_10187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 30), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 187)
        create_str_10188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 30), core_language_copy_10187, 'create_str')
        # Calling create_str(args, kwargs) (line 187)
        create_str_call_result_10196 = invoke(stypy.reporting.localization.Localization(__file__, 187, 30), create_str_10188, *[name___10194], **kwargs_10195)
        
        # Assigning a type to the variable 'get_type_call_param' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 8), 'get_type_call_param', create_str_call_result_10196)
        
        # Assigning a Call to a Name (line 188):
        
        # Assigning a Call to a Name (line 188):
        
        # Call to create_num(...): (line 188)
        # Processing the call arguments (line 188)
        # Getting the type of 'node' (line 188)
        node_10199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 61), 'node', False)
        # Obtaining the member 'n' of a type (line 188)
        n_10200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 61), node_10199, 'n')
        # Getting the type of 'node' (line 188)
        node_10201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 69), 'node', False)
        # Obtaining the member 'lineno' of a type (line 188)
        lineno_10202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 69), node_10201, 'lineno')
        # Getting the type of 'node' (line 188)
        node_10203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 82), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 188)
        col_offset_10204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 82), node_10203, 'col_offset')
        # Processing the call keyword arguments (line 188)
        kwargs_10205 = {}
        # Getting the type of 'core_language_copy' (line 188)
        core_language_copy_10197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 31), 'core_language_copy', False)
        # Obtaining the member 'create_num' of a type (line 188)
        create_num_10198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 31), core_language_copy_10197, 'create_num')
        # Calling create_num(args, kwargs) (line 188)
        create_num_call_result_10206 = invoke(stypy.reporting.localization.Localization(__file__, 188, 31), create_num_10198, *[n_10200, lineno_10202, col_offset_10204], **kwargs_10205)
        
        # Assigning a type to the variable 'get_type_call_param2' (line 188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'get_type_call_param2', create_num_call_result_10206)
        
        # Assigning a Call to a Name (line 189):
        
        # Assigning a Call to a Name (line 189):
        
        # Call to create_call(...): (line 189)
        # Processing the call arguments (line 189)
        # Getting the type of 'get_type_call' (line 189)
        get_type_call_10209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 42), 'get_type_call', False)
        
        # Obtaining an instance of the builtin type 'list' (line 189)
        list_10210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 189)
        # Adding element type (line 189)
        # Getting the type of 'localization' (line 189)
        localization_10211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 58), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 57), list_10210, localization_10211)
        # Adding element type (line 189)
        # Getting the type of 'get_type_call_param' (line 189)
        get_type_call_param_10212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 72), 'get_type_call_param', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 57), list_10210, get_type_call_param_10212)
        # Adding element type (line 189)
        # Getting the type of 'get_type_call_param2' (line 189)
        get_type_call_param2_10213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 93), 'get_type_call_param2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 57), list_10210, get_type_call_param2_10213)
        
        # Processing the call keyword arguments (line 189)
        kwargs_10214 = {}
        # Getting the type of 'functions_copy' (line 189)
        functions_copy_10207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 15), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 189)
        create_call_10208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 15), functions_copy_10207, 'create_call')
        # Calling create_call(args, kwargs) (line 189)
        create_call_call_result_10215 = invoke(stypy.reporting.localization.Localization(__file__, 189, 15), create_call_10208, *[get_type_call_10209, list_10210], **kwargs_10214)
        
        # Assigning a type to the variable 'call' (line 189)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'call', create_call_call_result_10215)
        
        # Call to create_temp_Assign(...): (line 190)
        # Processing the call arguments (line 190)
        # Getting the type of 'call' (line 190)
        call_10218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 55), 'call', False)
        # Processing the call keyword arguments (line 190)
        # Getting the type of 'node' (line 190)
        node_10219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 66), 'node', False)
        # Obtaining the member 'lineno' of a type (line 190)
        lineno_10220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 66), node_10219, 'lineno')
        keyword_10221 = lineno_10220
        # Getting the type of 'node' (line 190)
        node_10222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 86), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 190)
        col_offset_10223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 86), node_10222, 'col_offset')
        keyword_10224 = col_offset_10223
        kwargs_10225 = {'column': keyword_10224, 'line': keyword_10221}
        # Getting the type of 'stypy_functions_copy' (line 190)
        stypy_functions_copy_10216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 190)
        create_temp_Assign_10217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 15), stypy_functions_copy_10216, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 190)
        create_temp_Assign_call_result_10226 = invoke(stypy.reporting.localization.Localization(__file__, 190, 15), create_temp_Assign_10217, *[call_10218], **kwargs_10225)
        
        # Assigning a type to the variable 'stypy_return_type' (line 190)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'stypy_return_type', create_temp_Assign_call_result_10226)
        
        # ################# End of 'visit_Num(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Num' in the type store
        # Getting the type of 'stypy_return_type' (line 182)
        stypy_return_type_10227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10227)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Num'
        return stypy_return_type_10227


    @norecursion
    def visit_Str(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Str'
        module_type_store = module_type_store.open_function_context('visit_Str', 194, 4, False)
        # Assigning a type to the variable 'self' (line 195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Str')
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Str.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Str', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Str', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Str(...)' code ##################

        
        # Assigning a Call to a Name (line 196):
        
        # Assigning a Call to a Name (line 196):
        
        # Call to create_localization(...): (line 196)
        # Processing the call arguments (line 196)
        # Getting the type of 'node' (line 196)
        node_10230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 196)
        lineno_10231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 64), node_10230, 'lineno')
        # Getting the type of 'node' (line 196)
        node_10232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 196)
        col_offset_10233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 77), node_10232, 'col_offset')
        # Processing the call keyword arguments (line 196)
        kwargs_10234 = {}
        # Getting the type of 'stypy_functions_copy' (line 196)
        stypy_functions_copy_10228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 196)
        create_localization_10229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 196, 23), stypy_functions_copy_10228, 'create_localization')
        # Calling create_localization(args, kwargs) (line 196)
        create_localization_call_result_10235 = invoke(stypy.reporting.localization.Localization(__file__, 196, 23), create_localization_10229, *[lineno_10231, col_offset_10233], **kwargs_10234)
        
        # Assigning a type to the variable 'localization' (line 196)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 8), 'localization', create_localization_call_result_10235)
        
        # Assigning a Call to a Name (line 197):
        
        # Assigning a Call to a Name (line 197):
        
        # Call to create_Name(...): (line 197)
        # Processing the call arguments (line 197)
        str_10238 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 197)
        # Getting the type of 'node' (line 197)
        node_10239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 80), 'node', False)
        # Obtaining the member 'lineno' of a type (line 197)
        lineno_10240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 80), node_10239, 'lineno')
        keyword_10241 = lineno_10240
        # Getting the type of 'node' (line 197)
        node_10242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 197)
        col_offset_10243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 100), node_10242, 'col_offset')
        keyword_10244 = col_offset_10243
        kwargs_10245 = {'column': keyword_10244, 'line': keyword_10241}
        # Getting the type of 'core_language_copy' (line 197)
        core_language_copy_10236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 197)
        create_Name_10237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 24), core_language_copy_10236, 'create_Name')
        # Calling create_Name(args, kwargs) (line 197)
        create_Name_call_result_10246 = invoke(stypy.reporting.localization.Localization(__file__, 197, 24), create_Name_10237, *[str_10238], **kwargs_10245)
        
        # Assigning a type to the variable 'get_type_call' (line 197)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'get_type_call', create_Name_call_result_10246)
        
        # Assigning a Call to a Name (line 198):
        
        # Assigning a Call to a Name (line 198):
        
        # Call to create_str(...): (line 198)
        # Processing the call arguments (line 198)
        
        # Call to type(...): (line 198)
        # Processing the call arguments (line 198)
        # Getting the type of 'node' (line 198)
        node_10250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 65), 'node', False)
        # Obtaining the member 's' of a type (line 198)
        s_10251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 65), node_10250, 's')
        # Processing the call keyword arguments (line 198)
        kwargs_10252 = {}
        # Getting the type of 'type' (line 198)
        type_10249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 60), 'type', False)
        # Calling type(args, kwargs) (line 198)
        type_call_result_10253 = invoke(stypy.reporting.localization.Localization(__file__, 198, 60), type_10249, *[s_10251], **kwargs_10252)
        
        # Obtaining the member '__name__' of a type (line 198)
        name___10254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 60), type_call_result_10253, '__name__')
        # Processing the call keyword arguments (line 198)
        kwargs_10255 = {}
        # Getting the type of 'core_language_copy' (line 198)
        core_language_copy_10247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 30), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 198)
        create_str_10248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 30), core_language_copy_10247, 'create_str')
        # Calling create_str(args, kwargs) (line 198)
        create_str_call_result_10256 = invoke(stypy.reporting.localization.Localization(__file__, 198, 30), create_str_10248, *[name___10254], **kwargs_10255)
        
        # Assigning a type to the variable 'get_type_call_param' (line 198)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 8), 'get_type_call_param', create_str_call_result_10256)
        
        # Assigning a Call to a Name (line 199):
        
        # Assigning a Call to a Name (line 199):
        
        # Call to create_str(...): (line 199)
        # Processing the call arguments (line 199)
        # Getting the type of 'node' (line 199)
        node_10259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 61), 'node', False)
        # Obtaining the member 's' of a type (line 199)
        s_10260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 61), node_10259, 's')
        # Getting the type of 'node' (line 199)
        node_10261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 69), 'node', False)
        # Obtaining the member 'lineno' of a type (line 199)
        lineno_10262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 69), node_10261, 'lineno')
        # Getting the type of 'node' (line 199)
        node_10263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 82), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 199)
        col_offset_10264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 82), node_10263, 'col_offset')
        # Processing the call keyword arguments (line 199)
        kwargs_10265 = {}
        # Getting the type of 'core_language_copy' (line 199)
        core_language_copy_10257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 31), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 199)
        create_str_10258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 31), core_language_copy_10257, 'create_str')
        # Calling create_str(args, kwargs) (line 199)
        create_str_call_result_10266 = invoke(stypy.reporting.localization.Localization(__file__, 199, 31), create_str_10258, *[s_10260, lineno_10262, col_offset_10264], **kwargs_10265)
        
        # Assigning a type to the variable 'get_type_call_param2' (line 199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'get_type_call_param2', create_str_call_result_10266)
        
        # Assigning a Call to a Name (line 200):
        
        # Assigning a Call to a Name (line 200):
        
        # Call to create_call(...): (line 200)
        # Processing the call arguments (line 200)
        # Getting the type of 'get_type_call' (line 200)
        get_type_call_10269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 42), 'get_type_call', False)
        
        # Obtaining an instance of the builtin type 'list' (line 200)
        list_10270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 200, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 200)
        # Adding element type (line 200)
        # Getting the type of 'localization' (line 200)
        localization_10271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 58), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 200, 57), list_10270, localization_10271)
        # Adding element type (line 200)
        # Getting the type of 'get_type_call_param' (line 200)
        get_type_call_param_10272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 72), 'get_type_call_param', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 200, 57), list_10270, get_type_call_param_10272)
        # Adding element type (line 200)
        # Getting the type of 'get_type_call_param2' (line 200)
        get_type_call_param2_10273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 93), 'get_type_call_param2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 200, 57), list_10270, get_type_call_param2_10273)
        
        # Processing the call keyword arguments (line 200)
        kwargs_10274 = {}
        # Getting the type of 'functions_copy' (line 200)
        functions_copy_10267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 15), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 200)
        create_call_10268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 15), functions_copy_10267, 'create_call')
        # Calling create_call(args, kwargs) (line 200)
        create_call_call_result_10275 = invoke(stypy.reporting.localization.Localization(__file__, 200, 15), create_call_10268, *[get_type_call_10269, list_10270], **kwargs_10274)
        
        # Assigning a type to the variable 'call' (line 200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'call', create_call_call_result_10275)
        
        # Call to create_temp_Assign(...): (line 201)
        # Processing the call arguments (line 201)
        # Getting the type of 'call' (line 201)
        call_10278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 55), 'call', False)
        # Processing the call keyword arguments (line 201)
        # Getting the type of 'node' (line 201)
        node_10279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 66), 'node', False)
        # Obtaining the member 'lineno' of a type (line 201)
        lineno_10280 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 66), node_10279, 'lineno')
        keyword_10281 = lineno_10280
        # Getting the type of 'node' (line 201)
        node_10282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 86), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 201)
        col_offset_10283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 86), node_10282, 'col_offset')
        keyword_10284 = col_offset_10283
        kwargs_10285 = {'column': keyword_10284, 'line': keyword_10281}
        # Getting the type of 'stypy_functions_copy' (line 201)
        stypy_functions_copy_10276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 201, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 201)
        create_temp_Assign_10277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 201, 15), stypy_functions_copy_10276, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 201)
        create_temp_Assign_call_result_10286 = invoke(stypy.reporting.localization.Localization(__file__, 201, 15), create_temp_Assign_10277, *[call_10278], **kwargs_10285)
        
        # Assigning a type to the variable 'stypy_return_type' (line 201)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 201, 8), 'stypy_return_type', create_temp_Assign_call_result_10286)
        
        # ################# End of 'visit_Str(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Str' in the type store
        # Getting the type of 'stypy_return_type' (line 194)
        stypy_return_type_10287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 194, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10287)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Str'
        return stypy_return_type_10287


    @norecursion
    def visit_Index(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Index'
        module_type_store = module_type_store.open_function_context('visit_Index', 204, 4, False)
        # Assigning a type to the variable 'self' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Index')
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Index.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Index', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Index', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Index(...)' code ##################

        
        # Call to visit(...): (line 206)
        # Processing the call arguments (line 206)
        # Getting the type of 'node' (line 206)
        node_10290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 26), 'node', False)
        # Obtaining the member 'value' of a type (line 206)
        value_10291 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 26), node_10290, 'value')
        # Getting the type of 'context' (line 206)
        context_10292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 38), 'context', False)
        # Processing the call keyword arguments (line 206)
        kwargs_10293 = {}
        # Getting the type of 'self' (line 206)
        self_10288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 15), 'self', False)
        # Obtaining the member 'visit' of a type (line 206)
        visit_10289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 15), self_10288, 'visit')
        # Calling visit(args, kwargs) (line 206)
        visit_call_result_10294 = invoke(stypy.reporting.localization.Localization(__file__, 206, 15), visit_10289, *[value_10291, context_10292], **kwargs_10293)
        
        # Assigning a type to the variable 'stypy_return_type' (line 206)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 'stypy_return_type', visit_call_result_10294)
        
        # ################# End of 'visit_Index(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Index' in the type store
        # Getting the type of 'stypy_return_type' (line 204)
        stypy_return_type_10295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10295)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Index'
        return stypy_return_type_10295


    @norecursion
    def visit_Subscript(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Subscript'
        module_type_store = module_type_store.open_function_context('visit_Subscript', 208, 4, False)
        # Assigning a type to the variable 'self' (line 209)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 209, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Subscript')
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Subscript.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Subscript', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Subscript', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Subscript(...)' code ##################

        
        # Assigning a List to a Name (line 211):
        
        # Assigning a List to a Name (line 211):
        
        # Obtaining an instance of the builtin type 'list' (line 211)
        list_10296 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 211)
        
        # Assigning a type to the variable 'stmts' (line 211)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 8), 'stmts', list_10296)
        
        # Assigning a Attribute to a Attribute (line 214):
        
        # Assigning a Attribute to a Attribute (line 214):
        # Getting the type of 'node' (line 214)
        node_10297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 28), 'node')
        # Obtaining the member 'lineno' of a type (line 214)
        lineno_10298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 28), node_10297, 'lineno')
        # Getting the type of 'node' (line 214)
        node_10299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'node')
        # Obtaining the member 'slice' of a type (line 214)
        slice_10300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 8), node_10299, 'slice')
        # Setting the type of the member 'lineno' of a type (line 214)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 214, 8), slice_10300, 'lineno', lineno_10298)
        
        # Assigning a Attribute to a Attribute (line 215):
        
        # Assigning a Attribute to a Attribute (line 215):
        # Getting the type of 'node' (line 215)
        node_10301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 32), 'node')
        # Obtaining the member 'col_offset' of a type (line 215)
        col_offset_10302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 32), node_10301, 'col_offset')
        # Getting the type of 'node' (line 215)
        node_10303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'node')
        # Obtaining the member 'slice' of a type (line 215)
        slice_10304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 8), node_10303, 'slice')
        # Setting the type of the member 'col_offset' of a type (line 215)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 8), slice_10304, 'col_offset', col_offset_10302)
        
        # Assigning a Call to a Tuple (line 216):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 216)
        # Processing the call arguments (line 216)
        # Getting the type of 'node' (line 216)
        node_10307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 44), 'node', False)
        # Obtaining the member 'slice' of a type (line 216)
        slice_10308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 44), node_10307, 'slice')
        # Getting the type of 'context' (line 216)
        context_10309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 56), 'context', False)
        # Processing the call keyword arguments (line 216)
        kwargs_10310 = {}
        # Getting the type of 'self' (line 216)
        self_10305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 33), 'self', False)
        # Obtaining the member 'visit' of a type (line 216)
        visit_10306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 33), self_10305, 'visit')
        # Calling visit(args, kwargs) (line 216)
        visit_call_result_10311 = invoke(stypy.reporting.localization.Localization(__file__, 216, 33), visit_10306, *[slice_10308, context_10309], **kwargs_10310)
        
        # Assigning a type to the variable 'call_assignment_9434' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'call_assignment_9434', visit_call_result_10311)
        
        # Assigning a Call to a Name (line 216):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9434' (line 216)
        call_assignment_9434_10312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'call_assignment_9434', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10313 = stypy_get_value_from_tuple(call_assignment_9434_10312, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9435' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'call_assignment_9435', stypy_get_value_from_tuple_call_result_10313)
        
        # Assigning a Name to a Name (line 216):
        # Getting the type of 'call_assignment_9435' (line 216)
        call_assignment_9435_10314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'call_assignment_9435')
        # Assigning a type to the variable 'slice_stmts' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'slice_stmts', call_assignment_9435_10314)
        
        # Assigning a Call to a Name (line 216):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9434' (line 216)
        call_assignment_9434_10315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'call_assignment_9434', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10316 = stypy_get_value_from_tuple(call_assignment_9434_10315, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9436' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'call_assignment_9436', stypy_get_value_from_tuple_call_result_10316)
        
        # Assigning a Name to a Name (line 216):
        # Getting the type of 'call_assignment_9436' (line 216)
        call_assignment_9436_10317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 8), 'call_assignment_9436')
        # Assigning a type to the variable 'slice_var' (line 216)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 21), 'slice_var', call_assignment_9436_10317)
        
        # Call to append(...): (line 217)
        # Processing the call arguments (line 217)
        # Getting the type of 'slice_stmts' (line 217)
        slice_stmts_10320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 21), 'slice_stmts', False)
        # Processing the call keyword arguments (line 217)
        kwargs_10321 = {}
        # Getting the type of 'stmts' (line 217)
        stmts_10318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 8), 'stmts', False)
        # Obtaining the member 'append' of a type (line 217)
        append_10319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 217, 8), stmts_10318, 'append')
        # Calling append(args, kwargs) (line 217)
        append_call_result_10322 = invoke(stypy.reporting.localization.Localization(__file__, 217, 8), append_10319, *[slice_stmts_10320], **kwargs_10321)
        
        
        # Assigning a Call to a Tuple (line 220):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 220)
        # Processing the call arguments (line 220)
        # Getting the type of 'node' (line 220)
        node_10325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 44), 'node', False)
        # Obtaining the member 'value' of a type (line 220)
        value_10326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 44), node_10325, 'value')
        # Getting the type of 'context' (line 220)
        context_10327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 56), 'context', False)
        # Processing the call keyword arguments (line 220)
        kwargs_10328 = {}
        # Getting the type of 'self' (line 220)
        self_10323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 33), 'self', False)
        # Obtaining the member 'visit' of a type (line 220)
        visit_10324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 33), self_10323, 'visit')
        # Calling visit(args, kwargs) (line 220)
        visit_call_result_10329 = invoke(stypy.reporting.localization.Localization(__file__, 220, 33), visit_10324, *[value_10326, context_10327], **kwargs_10328)
        
        # Assigning a type to the variable 'call_assignment_9437' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'call_assignment_9437', visit_call_result_10329)
        
        # Assigning a Call to a Name (line 220):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9437' (line 220)
        call_assignment_9437_10330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'call_assignment_9437', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10331 = stypy_get_value_from_tuple(call_assignment_9437_10330, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9438' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'call_assignment_9438', stypy_get_value_from_tuple_call_result_10331)
        
        # Assigning a Name to a Name (line 220):
        # Getting the type of 'call_assignment_9438' (line 220)
        call_assignment_9438_10332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'call_assignment_9438')
        # Assigning a type to the variable 'value_stmts' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'value_stmts', call_assignment_9438_10332)
        
        # Assigning a Call to a Name (line 220):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9437' (line 220)
        call_assignment_9437_10333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'call_assignment_9437', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10334 = stypy_get_value_from_tuple(call_assignment_9437_10333, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9439' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'call_assignment_9439', stypy_get_value_from_tuple_call_result_10334)
        
        # Assigning a Name to a Name (line 220):
        # Getting the type of 'call_assignment_9439' (line 220)
        call_assignment_9439_10335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 8), 'call_assignment_9439')
        # Assigning a type to the variable 'value_var' (line 220)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 220, 21), 'value_var', call_assignment_9439_10335)
        
        # Call to append(...): (line 221)
        # Processing the call arguments (line 221)
        # Getting the type of 'value_stmts' (line 221)
        value_stmts_10338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 21), 'value_stmts', False)
        # Processing the call keyword arguments (line 221)
        kwargs_10339 = {}
        # Getting the type of 'stmts' (line 221)
        stmts_10336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 8), 'stmts', False)
        # Obtaining the member 'append' of a type (line 221)
        append_10337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 8), stmts_10336, 'append')
        # Calling append(args, kwargs) (line 221)
        append_call_result_10340 = invoke(stypy.reporting.localization.Localization(__file__, 221, 8), append_10337, *[value_stmts_10338], **kwargs_10339)
        
        
        # Assigning a Call to a Tuple (line 224):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 224)
        # Processing the call arguments (line 224)
        # Getting the type of 'slice_var' (line 224)
        slice_var_10343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 74), 'slice_var', False)
        # Getting the type of 'node' (line 224)
        node_10344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 85), 'node', False)
        # Obtaining the member 'lineno' of a type (line 224)
        lineno_10345 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 85), node_10344, 'lineno')
        # Getting the type of 'node' (line 224)
        node_10346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 98), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 224)
        col_offset_10347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 98), node_10346, 'col_offset')
        # Processing the call keyword arguments (line 224)
        kwargs_10348 = {}
        # Getting the type of 'stypy_functions_copy' (line 224)
        stypy_functions_copy_10341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 34), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 224)
        create_temp_Assign_10342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 224, 34), stypy_functions_copy_10341, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 224)
        create_temp_Assign_call_result_10349 = invoke(stypy.reporting.localization.Localization(__file__, 224, 34), create_temp_Assign_10342, *[slice_var_10343, lineno_10345, col_offset_10347], **kwargs_10348)
        
        # Assigning a type to the variable 'call_assignment_9440' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'call_assignment_9440', create_temp_Assign_call_result_10349)
        
        # Assigning a Call to a Name (line 224):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9440' (line 224)
        call_assignment_9440_10350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'call_assignment_9440', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10351 = stypy_get_value_from_tuple(call_assignment_9440_10350, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9441' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'call_assignment_9441', stypy_get_value_from_tuple_call_result_10351)
        
        # Assigning a Name to a Name (line 224):
        # Getting the type of 'call_assignment_9441' (line 224)
        call_assignment_9441_10352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'call_assignment_9441')
        # Assigning a type to the variable 'slice_assign' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'slice_assign', call_assignment_9441_10352)
        
        # Assigning a Call to a Name (line 224):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9440' (line 224)
        call_assignment_9440_10353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'call_assignment_9440', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10354 = stypy_get_value_from_tuple(call_assignment_9440_10353, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9442' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'call_assignment_9442', stypy_get_value_from_tuple_call_result_10354)
        
        # Assigning a Name to a Name (line 224):
        # Getting the type of 'call_assignment_9442' (line 224)
        call_assignment_9442_10355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 8), 'call_assignment_9442')
        # Assigning a type to the variable 'slice_var' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 22), 'slice_var', call_assignment_9442_10355)
        
        # Call to append(...): (line 225)
        # Processing the call arguments (line 225)
        # Getting the type of 'slice_assign' (line 225)
        slice_assign_10358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 21), 'slice_assign', False)
        # Processing the call keyword arguments (line 225)
        kwargs_10359 = {}
        # Getting the type of 'stmts' (line 225)
        stmts_10356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 8), 'stmts', False)
        # Obtaining the member 'append' of a type (line 225)
        append_10357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 8), stmts_10356, 'append')
        # Calling append(args, kwargs) (line 225)
        append_call_result_10360 = invoke(stypy.reporting.localization.Localization(__file__, 225, 8), append_10357, *[slice_assign_10358], **kwargs_10359)
        
        
        # Assigning a Call to a Tuple (line 227):
        
        # Assigning a Call to a Name:
        
        # Call to create_get_type_of_member(...): (line 227)
        # Processing the call arguments (line 227)
        # Getting the type of 'value_var' (line 227)
        value_var_10363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 82), 'value_var', False)
        str_10364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 93), 'str', '__getitem__')
        # Getting the type of 'node' (line 228)
        node_10365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 77), 'node', False)
        # Obtaining the member 'lineno' of a type (line 228)
        lineno_10366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 77), node_10365, 'lineno')
        # Getting the type of 'node' (line 228)
        node_10367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 90), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 228)
        col_offset_10368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 90), node_10367, 'col_offset')
        # Processing the call keyword arguments (line 227)
        kwargs_10369 = {}
        # Getting the type of 'stypy_functions_copy' (line 227)
        stypy_functions_copy_10361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 35), 'stypy_functions_copy', False)
        # Obtaining the member 'create_get_type_of_member' of a type (line 227)
        create_get_type_of_member_10362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 227, 35), stypy_functions_copy_10361, 'create_get_type_of_member')
        # Calling create_get_type_of_member(args, kwargs) (line 227)
        create_get_type_of_member_call_result_10370 = invoke(stypy.reporting.localization.Localization(__file__, 227, 35), create_get_type_of_member_10362, *[value_var_10363, str_10364, lineno_10366, col_offset_10368], **kwargs_10369)
        
        # Assigning a type to the variable 'call_assignment_9443' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_9443', create_get_type_of_member_call_result_10370)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9443' (line 227)
        call_assignment_9443_10371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_9443', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10372 = stypy_get_value_from_tuple(call_assignment_9443_10371, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9444' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_9444', stypy_get_value_from_tuple_call_result_10372)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_9444' (line 227)
        call_assignment_9444_10373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_9444')
        # Assigning a type to the variable 'member_stmts' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'member_stmts', call_assignment_9444_10373)
        
        # Assigning a Call to a Name (line 227):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9443' (line 227)
        call_assignment_9443_10374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_9443', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10375 = stypy_get_value_from_tuple(call_assignment_9443_10374, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9445' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_9445', stypy_get_value_from_tuple_call_result_10375)
        
        # Assigning a Name to a Name (line 227):
        # Getting the type of 'call_assignment_9445' (line 227)
        call_assignment_9445_10376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'call_assignment_9445')
        # Assigning a type to the variable 'member_var' (line 227)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 22), 'member_var', call_assignment_9445_10376)
        
        # Call to append(...): (line 229)
        # Processing the call arguments (line 229)
        # Getting the type of 'member_stmts' (line 229)
        member_stmts_10379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 21), 'member_stmts', False)
        # Processing the call keyword arguments (line 229)
        kwargs_10380 = {}
        # Getting the type of 'stmts' (line 229)
        stmts_10377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 229, 8), 'stmts', False)
        # Obtaining the member 'append' of a type (line 229)
        append_10378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 229, 8), stmts_10377, 'append')
        # Calling append(args, kwargs) (line 229)
        append_call_result_10381 = invoke(stypy.reporting.localization.Localization(__file__, 229, 8), append_10378, *[member_stmts_10379], **kwargs_10380)
        
        
        # Assigning a Call to a Name (line 232):
        
        # Assigning a Call to a Name (line 232):
        
        # Call to create_src_comment(...): (line 232)
        # Processing the call arguments (line 232)
        str_10384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 232, 58), 'str', 'Calling the subscript to obtain elements type')
        # Getting the type of 'node' (line 232)
        node_10385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 107), 'node', False)
        # Obtaining the member 'lineno' of a type (line 232)
        lineno_10386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 107), node_10385, 'lineno')
        # Processing the call keyword arguments (line 232)
        kwargs_10387 = {}
        # Getting the type of 'stypy_functions_copy' (line 232)
        stypy_functions_copy_10382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 232)
        create_src_comment_10383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 18), stypy_functions_copy_10382, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 232)
        create_src_comment_call_result_10388 = invoke(stypy.reporting.localization.Localization(__file__, 232, 18), create_src_comment_10383, *[str_10384, lineno_10386], **kwargs_10387)
        
        # Assigning a type to the variable 'comment' (line 232)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'comment', create_src_comment_call_result_10388)
        
        # Call to append(...): (line 233)
        # Processing the call arguments (line 233)
        # Getting the type of 'comment' (line 233)
        comment_10391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 21), 'comment', False)
        # Processing the call keyword arguments (line 233)
        kwargs_10392 = {}
        # Getting the type of 'stmts' (line 233)
        stmts_10389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 8), 'stmts', False)
        # Obtaining the member 'append' of a type (line 233)
        append_10390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 8), stmts_10389, 'append')
        # Calling append(args, kwargs) (line 233)
        append_call_result_10393 = invoke(stypy.reporting.localization.Localization(__file__, 233, 8), append_10390, *[comment_10391], **kwargs_10392)
        
        
        # Assigning a Call to a Name (line 234):
        
        # Assigning a Call to a Name (line 234):
        
        # Call to create_localization(...): (line 234)
        # Processing the call arguments (line 234)
        # Getting the type of 'node' (line 234)
        node_10396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 234)
        lineno_10397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 64), node_10396, 'lineno')
        # Getting the type of 'node' (line 234)
        node_10398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 234)
        col_offset_10399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 77), node_10398, 'col_offset')
        # Processing the call keyword arguments (line 234)
        kwargs_10400 = {}
        # Getting the type of 'stypy_functions_copy' (line 234)
        stypy_functions_copy_10394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 234)
        create_localization_10395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 23), stypy_functions_copy_10394, 'create_localization')
        # Calling create_localization(args, kwargs) (line 234)
        create_localization_call_result_10401 = invoke(stypy.reporting.localization.Localization(__file__, 234, 23), create_localization_10395, *[lineno_10397, col_offset_10399], **kwargs_10400)
        
        # Assigning a type to the variable 'localization' (line 234)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'localization', create_localization_call_result_10401)
        
        # Assigning a Call to a Name (line 235):
        
        # Assigning a Call to a Name (line 235):
        
        # Call to create_attribute(...): (line 235)
        # Processing the call arguments (line 235)
        # Getting the type of 'member_var' (line 235)
        member_var_10404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 61), 'member_var', False)
        str_10405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 235, 73), 'str', 'invoke')
        # Processing the call keyword arguments (line 235)
        kwargs_10406 = {}
        # Getting the type of 'core_language_copy' (line 235)
        core_language_copy_10402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 235, 25), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 235)
        create_attribute_10403 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 235, 25), core_language_copy_10402, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 235)
        create_attribute_call_result_10407 = invoke(stypy.reporting.localization.Localization(__file__, 235, 25), create_attribute_10403, *[member_var_10404, str_10405], **kwargs_10406)
        
        # Assigning a type to the variable 'call_attribute' (line 235)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 235, 8), 'call_attribute', create_attribute_call_result_10407)
        
        # Assigning a Call to a Name (line 237):
        
        # Assigning a Call to a Name (line 237):
        
        # Call to create_call(...): (line 237)
        # Processing the call arguments (line 237)
        # Getting the type of 'call_attribute' (line 237)
        call_attribute_10410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 55), 'call_attribute', False)
        
        # Obtaining an instance of the builtin type 'list' (line 237)
        list_10411 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 237, 71), 'list')
        # Adding type elements to the builtin type 'list' instance (line 237)
        # Adding element type (line 237)
        # Getting the type of 'localization' (line 237)
        localization_10412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 72), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 71), list_10411, localization_10412)
        # Adding element type (line 237)
        # Getting the type of 'slice_var' (line 237)
        slice_var_10413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 86), 'slice_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 237, 71), list_10411, slice_var_10413)
        
        # Processing the call keyword arguments (line 237)
        kwargs_10414 = {}
        # Getting the type of 'functions_copy' (line 237)
        functions_copy_10408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 28), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 237)
        create_call_10409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 28), functions_copy_10408, 'create_call')
        # Calling create_call(args, kwargs) (line 237)
        create_call_call_result_10415 = invoke(stypy.reporting.localization.Localization(__file__, 237, 28), create_call_10409, *[call_attribute_10410, list_10411], **kwargs_10414)
        
        # Assigning a type to the variable 'call_to_subscript' (line 237)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 237, 8), 'call_to_subscript', create_call_call_result_10415)
        
        # Assigning a Call to a Tuple (line 239):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 239)
        # Processing the call arguments (line 239)
        # Getting the type of 'call_to_subscript' (line 239)
        call_to_subscript_10418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 71), 'call_to_subscript', False)
        # Getting the type of 'node' (line 239)
        node_10419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 90), 'node', False)
        # Obtaining the member 'lineno' of a type (line 239)
        lineno_10420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 90), node_10419, 'lineno')
        # Getting the type of 'node' (line 239)
        node_10421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 103), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 239)
        col_offset_10422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 103), node_10421, 'col_offset')
        # Processing the call keyword arguments (line 239)
        kwargs_10423 = {}
        # Getting the type of 'stypy_functions_copy' (line 239)
        stypy_functions_copy_10416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 239)
        create_temp_Assign_10417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 239, 31), stypy_functions_copy_10416, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 239)
        create_temp_Assign_call_result_10424 = invoke(stypy.reporting.localization.Localization(__file__, 239, 31), create_temp_Assign_10417, *[call_to_subscript_10418, lineno_10420, col_offset_10422], **kwargs_10423)
        
        # Assigning a type to the variable 'call_assignment_9446' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'call_assignment_9446', create_temp_Assign_call_result_10424)
        
        # Assigning a Call to a Name (line 239):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9446' (line 239)
        call_assignment_9446_10425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'call_assignment_9446', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10426 = stypy_get_value_from_tuple(call_assignment_9446_10425, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9447' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'call_assignment_9447', stypy_get_value_from_tuple_call_result_10426)
        
        # Assigning a Name to a Name (line 239):
        # Getting the type of 'call_assignment_9447' (line 239)
        call_assignment_9447_10427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'call_assignment_9447')
        # Assigning a type to the variable 'elem_stmts' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'elem_stmts', call_assignment_9447_10427)
        
        # Assigning a Call to a Name (line 239):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9446' (line 239)
        call_assignment_9446_10428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'call_assignment_9446', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10429 = stypy_get_value_from_tuple(call_assignment_9446_10428, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9448' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'call_assignment_9448', stypy_get_value_from_tuple_call_result_10429)
        
        # Assigning a Name to a Name (line 239):
        # Getting the type of 'call_assignment_9448' (line 239)
        call_assignment_9448_10430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 8), 'call_assignment_9448')
        # Assigning a type to the variable 'elem_var' (line 239)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 20), 'elem_var', call_assignment_9448_10430)
        
        # Call to append(...): (line 240)
        # Processing the call arguments (line 240)
        # Getting the type of 'elem_stmts' (line 240)
        elem_stmts_10433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 21), 'elem_stmts', False)
        # Processing the call keyword arguments (line 240)
        kwargs_10434 = {}
        # Getting the type of 'stmts' (line 240)
        stmts_10431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'stmts', False)
        # Obtaining the member 'append' of a type (line 240)
        append_10432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 240, 8), stmts_10431, 'append')
        # Calling append(args, kwargs) (line 240)
        append_call_result_10435 = invoke(stypy.reporting.localization.Localization(__file__, 240, 8), append_10432, *[elem_stmts_10433], **kwargs_10434)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 242)
        tuple_10436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 242)
        # Adding element type (line 242)
        
        # Call to flatten_lists(...): (line 242)
        # Processing the call arguments (line 242)
        
        # Call to create_blank_line(...): (line 242)
        # Processing the call keyword arguments (line 242)
        kwargs_10441 = {}
        # Getting the type of 'stypy_functions_copy' (line 242)
        stypy_functions_copy_10439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 242)
        create_blank_line_10440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 50), stypy_functions_copy_10439, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 242)
        create_blank_line_call_result_10442 = invoke(stypy.reporting.localization.Localization(__file__, 242, 50), create_blank_line_10440, *[], **kwargs_10441)
        
        # Getting the type of 'stmts' (line 243)
        stmts_10443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 45), 'stmts', False)
        
        # Call to create_blank_line(...): (line 244)
        # Processing the call keyword arguments (line 244)
        kwargs_10446 = {}
        # Getting the type of 'stypy_functions_copy' (line 244)
        stypy_functions_copy_10444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 244)
        create_blank_line_10445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 45), stypy_functions_copy_10444, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 244)
        create_blank_line_call_result_10447 = invoke(stypy.reporting.localization.Localization(__file__, 244, 45), create_blank_line_10445, *[], **kwargs_10446)
        
        # Processing the call keyword arguments (line 242)
        kwargs_10448 = {}
        # Getting the type of 'stypy_functions_copy' (line 242)
        stypy_functions_copy_10437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 242)
        flatten_lists_10438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 15), stypy_functions_copy_10437, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 242)
        flatten_lists_call_result_10449 = invoke(stypy.reporting.localization.Localization(__file__, 242, 15), flatten_lists_10438, *[create_blank_line_call_result_10442, stmts_10443, create_blank_line_call_result_10447], **kwargs_10448)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 15), tuple_10436, flatten_lists_call_result_10449)
        # Adding element type (line 242)
        # Getting the type of 'elem_var' (line 244)
        elem_var_10450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 88), 'elem_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 242, 15), tuple_10436, elem_var_10450)
        
        # Assigning a type to the variable 'stypy_return_type' (line 242)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 8), 'stypy_return_type', tuple_10436)
        
        # ################# End of 'visit_Subscript(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Subscript' in the type store
        # Getting the type of 'stypy_return_type' (line 208)
        stypy_return_type_10451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10451)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Subscript'
        return stypy_return_type_10451


    @norecursion
    def visit_Repr(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Repr'
        module_type_store = module_type_store.open_function_context('visit_Repr', 246, 4, False)
        # Assigning a type to the variable 'self' (line 247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Repr')
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Repr.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Repr', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Repr', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Repr(...)' code ##################

        
        # Call to visit(...): (line 247)
        # Processing the call arguments (line 247)
        # Getting the type of 'node' (line 247)
        node_10454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 26), 'node', False)
        # Obtaining the member 'value' of a type (line 247)
        value_10455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 26), node_10454, 'value')
        # Getting the type of 'context' (line 247)
        context_10456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 38), 'context', False)
        # Processing the call keyword arguments (line 247)
        kwargs_10457 = {}
        # Getting the type of 'self' (line 247)
        self_10452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 15), 'self', False)
        # Obtaining the member 'visit' of a type (line 247)
        visit_10453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 15), self_10452, 'visit')
        # Calling visit(args, kwargs) (line 247)
        visit_call_result_10458 = invoke(stypy.reporting.localization.Localization(__file__, 247, 15), visit_10453, *[value_10455, context_10456], **kwargs_10457)
        
        # Assigning a type to the variable 'stypy_return_type' (line 247)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 8), 'stypy_return_type', visit_call_result_10458)
        
        # ################# End of 'visit_Repr(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Repr' in the type store
        # Getting the type of 'stypy_return_type' (line 246)
        stypy_return_type_10459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10459)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Repr'
        return stypy_return_type_10459


    @norecursion
    def visit_BoolOp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_BoolOp'
        module_type_store = module_type_store.open_function_context('visit_BoolOp', 251, 4, False)
        # Assigning a type to the variable 'self' (line 252)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 252, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_BoolOp')
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_BoolOp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_BoolOp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_BoolOp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_BoolOp(...)' code ##################

        
        # Assigning a List to a Name (line 253):
        
        # Assigning a List to a Name (line 253):
        
        # Obtaining an instance of the builtin type 'list' (line 253)
        list_10460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 253)
        # Adding element type (line 253)
        
        # Call to create_src_comment(...): (line 253)
        # Processing the call arguments (line 253)
        str_10463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 253, 65), 'str', 'Evaluating a boolean operation')
        # Processing the call keyword arguments (line 253)
        kwargs_10464 = {}
        # Getting the type of 'stypy_functions_copy' (line 253)
        stypy_functions_copy_10461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 253, 25), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 253)
        create_src_comment_10462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 253, 25), stypy_functions_copy_10461, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 253)
        create_src_comment_call_result_10465 = invoke(stypy.reporting.localization.Localization(__file__, 253, 25), create_src_comment_10462, *[str_10463], **kwargs_10464)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 253, 24), list_10460, create_src_comment_call_result_10465)
        
        # Assigning a type to the variable 'bool_op_stmts' (line 253)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 253, 8), 'bool_op_stmts', list_10460)
        
        # Assigning a Call to a Tuple (line 256):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 256)
        # Processing the call arguments (line 256)
        
        # Obtaining the type of the subscript
        int_10468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 256, 54), 'int')
        # Getting the type of 'node' (line 256)
        node_10469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 42), 'node', False)
        # Obtaining the member 'values' of a type (line 256)
        values_10470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 42), node_10469, 'values')
        # Obtaining the member '__getitem__' of a type (line 256)
        getitem___10471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 42), values_10470, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 256)
        subscript_call_result_10472 = invoke(stypy.reporting.localization.Localization(__file__, 256, 42), getitem___10471, int_10468)
        
        # Getting the type of 'context' (line 256)
        context_10473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 58), 'context', False)
        # Processing the call keyword arguments (line 256)
        kwargs_10474 = {}
        # Getting the type of 'self' (line 256)
        self_10466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 256)
        visit_10467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 256, 31), self_10466, 'visit')
        # Calling visit(args, kwargs) (line 256)
        visit_call_result_10475 = invoke(stypy.reporting.localization.Localization(__file__, 256, 31), visit_10467, *[subscript_call_result_10472, context_10473], **kwargs_10474)
        
        # Assigning a type to the variable 'call_assignment_9449' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'call_assignment_9449', visit_call_result_10475)
        
        # Assigning a Call to a Name (line 256):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9449' (line 256)
        call_assignment_9449_10476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'call_assignment_9449', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10477 = stypy_get_value_from_tuple(call_assignment_9449_10476, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9450' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'call_assignment_9450', stypy_get_value_from_tuple_call_result_10477)
        
        # Assigning a Name to a Name (line 256):
        # Getting the type of 'call_assignment_9450' (line 256)
        call_assignment_9450_10478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'call_assignment_9450')
        # Assigning a type to the variable 'left_stmts' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'left_stmts', call_assignment_9450_10478)
        
        # Assigning a Call to a Name (line 256):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9449' (line 256)
        call_assignment_9449_10479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'call_assignment_9449', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10480 = stypy_get_value_from_tuple(call_assignment_9449_10479, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9451' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'call_assignment_9451', stypy_get_value_from_tuple_call_result_10480)
        
        # Assigning a Name to a Name (line 256):
        # Getting the type of 'call_assignment_9451' (line 256)
        call_assignment_9451_10481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 8), 'call_assignment_9451')
        # Assigning a type to the variable 'temp_op1' (line 256)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 256, 20), 'temp_op1', call_assignment_9451_10481)
        
        
        # Call to type(...): (line 257)
        # Processing the call arguments (line 257)
        # Getting the type of 'temp_op1' (line 257)
        temp_op1_10483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 16), 'temp_op1', False)
        # Processing the call keyword arguments (line 257)
        kwargs_10484 = {}
        # Getting the type of 'type' (line 257)
        type_10482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 11), 'type', False)
        # Calling type(args, kwargs) (line 257)
        type_call_result_10485 = invoke(stypy.reporting.localization.Localization(__file__, 257, 11), type_10482, *[temp_op1_10483], **kwargs_10484)
        
        # Getting the type of 'ast' (line 257)
        ast_10486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 257, 29), 'ast')
        # Obtaining the member 'Tuple' of a type (line 257)
        Tuple_10487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 257, 29), ast_10486, 'Tuple')
        # Applying the binary operator 'is' (line 257)
        result_is__10488 = python_operator(stypy.reporting.localization.Localization(__file__, 257, 11), 'is', type_call_result_10485, Tuple_10487)
        
        # Testing if the type of an if condition is none (line 257)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 257, 8), result_is__10488):
            pass
        else:
            
            # Testing the type of an if condition (line 257)
            if_condition_10489 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 257, 8), result_is__10488)
            # Assigning a type to the variable 'if_condition_10489' (line 257)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 8), 'if_condition_10489', if_condition_10489)
            # SSA begins for if statement (line 257)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 258):
            
            # Assigning a Subscript to a Name (line 258):
            
            # Obtaining the type of the subscript
            int_10490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 258, 37), 'int')
            # Getting the type of 'temp_op1' (line 258)
            temp_op1_10491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 258, 23), 'temp_op1')
            # Obtaining the member 'elts' of a type (line 258)
            elts_10492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 23), temp_op1_10491, 'elts')
            # Obtaining the member '__getitem__' of a type (line 258)
            getitem___10493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 258, 23), elts_10492, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 258)
            subscript_call_result_10494 = invoke(stypy.reporting.localization.Localization(__file__, 258, 23), getitem___10493, int_10490)
            
            # Assigning a type to the variable 'temp_op1' (line 258)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 258, 12), 'temp_op1', subscript_call_result_10494)
            # SSA join for if statement (line 257)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 260)
        # Processing the call arguments (line 260)
        # Getting the type of 'left_stmts' (line 260)
        left_stmts_10497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 29), 'left_stmts', False)
        # Processing the call keyword arguments (line 260)
        kwargs_10498 = {}
        # Getting the type of 'bool_op_stmts' (line 260)
        bool_op_stmts_10495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 8), 'bool_op_stmts', False)
        # Obtaining the member 'append' of a type (line 260)
        append_10496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 8), bool_op_stmts_10495, 'append')
        # Calling append(args, kwargs) (line 260)
        append_call_result_10499 = invoke(stypy.reporting.localization.Localization(__file__, 260, 8), append_10496, *[left_stmts_10497], **kwargs_10498)
        
        
        
        # Call to range(...): (line 262)
        # Processing the call arguments (line 262)
        int_10501 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 23), 'int')
        
        # Call to len(...): (line 262)
        # Processing the call arguments (line 262)
        # Getting the type of 'node' (line 262)
        node_10503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 30), 'node', False)
        # Obtaining the member 'values' of a type (line 262)
        values_10504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 30), node_10503, 'values')
        # Processing the call keyword arguments (line 262)
        kwargs_10505 = {}
        # Getting the type of 'len' (line 262)
        len_10502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 26), 'len', False)
        # Calling len(args, kwargs) (line 262)
        len_call_result_10506 = invoke(stypy.reporting.localization.Localization(__file__, 262, 26), len_10502, *[values_10504], **kwargs_10505)
        
        # Processing the call keyword arguments (line 262)
        kwargs_10507 = {}
        # Getting the type of 'range' (line 262)
        range_10500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 17), 'range', False)
        # Calling range(args, kwargs) (line 262)
        range_call_result_10508 = invoke(stypy.reporting.localization.Localization(__file__, 262, 17), range_10500, *[int_10501, len_call_result_10506], **kwargs_10507)
        
        # Assigning a type to the variable 'range_call_result_10508' (line 262)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 8), 'range_call_result_10508', range_call_result_10508)
        # Testing if the for loop is going to be iterated (line 262)
        # Testing the type of a for loop iterable (line 262)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 262, 8), range_call_result_10508)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 262, 8), range_call_result_10508):
            # Getting the type of the for loop variable (line 262)
            for_loop_var_10509 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 262, 8), range_call_result_10508)
            # Assigning a type to the variable 'i' (line 262)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 8), 'i', for_loop_var_10509)
            # SSA begins for a for statement (line 262)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 264):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 264)
            # Processing the call arguments (line 264)
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 264)
            i_10512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 59), 'i', False)
            # Getting the type of 'node' (line 264)
            node_10513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 47), 'node', False)
            # Obtaining the member 'values' of a type (line 264)
            values_10514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 47), node_10513, 'values')
            # Obtaining the member '__getitem__' of a type (line 264)
            getitem___10515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 47), values_10514, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 264)
            subscript_call_result_10516 = invoke(stypy.reporting.localization.Localization(__file__, 264, 47), getitem___10515, i_10512)
            
            # Getting the type of 'context' (line 264)
            context_10517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 63), 'context', False)
            # Processing the call keyword arguments (line 264)
            kwargs_10518 = {}
            # Getting the type of 'self' (line 264)
            self_10510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 264)
            visit_10511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 36), self_10510, 'visit')
            # Calling visit(args, kwargs) (line 264)
            visit_call_result_10519 = invoke(stypy.reporting.localization.Localization(__file__, 264, 36), visit_10511, *[subscript_call_result_10516, context_10517], **kwargs_10518)
            
            # Assigning a type to the variable 'call_assignment_9452' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'call_assignment_9452', visit_call_result_10519)
            
            # Assigning a Call to a Name (line 264):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9452' (line 264)
            call_assignment_9452_10520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'call_assignment_9452', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10521 = stypy_get_value_from_tuple(call_assignment_9452_10520, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9453' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'call_assignment_9453', stypy_get_value_from_tuple_call_result_10521)
            
            # Assigning a Name to a Name (line 264):
            # Getting the type of 'call_assignment_9453' (line 264)
            call_assignment_9453_10522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'call_assignment_9453')
            # Assigning a type to the variable 'right_stmts' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'right_stmts', call_assignment_9453_10522)
            
            # Assigning a Call to a Name (line 264):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9452' (line 264)
            call_assignment_9452_10523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'call_assignment_9452', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10524 = stypy_get_value_from_tuple(call_assignment_9452_10523, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9454' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'call_assignment_9454', stypy_get_value_from_tuple_call_result_10524)
            
            # Assigning a Name to a Name (line 264):
            # Getting the type of 'call_assignment_9454' (line 264)
            call_assignment_9454_10525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'call_assignment_9454')
            # Assigning a type to the variable 'temp_op2' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 25), 'temp_op2', call_assignment_9454_10525)
            
            
            # Call to type(...): (line 265)
            # Processing the call arguments (line 265)
            # Getting the type of 'temp_op2' (line 265)
            temp_op2_10527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 20), 'temp_op2', False)
            # Processing the call keyword arguments (line 265)
            kwargs_10528 = {}
            # Getting the type of 'type' (line 265)
            type_10526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 15), 'type', False)
            # Calling type(args, kwargs) (line 265)
            type_call_result_10529 = invoke(stypy.reporting.localization.Localization(__file__, 265, 15), type_10526, *[temp_op2_10527], **kwargs_10528)
            
            # Getting the type of 'ast' (line 265)
            ast_10530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 33), 'ast')
            # Obtaining the member 'Tuple' of a type (line 265)
            Tuple_10531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 33), ast_10530, 'Tuple')
            # Applying the binary operator 'is' (line 265)
            result_is__10532 = python_operator(stypy.reporting.localization.Localization(__file__, 265, 15), 'is', type_call_result_10529, Tuple_10531)
            
            # Testing if the type of an if condition is none (line 265)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 265, 12), result_is__10532):
                pass
            else:
                
                # Testing the type of an if condition (line 265)
                if_condition_10533 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 265, 12), result_is__10532)
                # Assigning a type to the variable 'if_condition_10533' (line 265)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'if_condition_10533', if_condition_10533)
                # SSA begins for if statement (line 265)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Name (line 266):
                
                # Assigning a Subscript to a Name (line 266):
                
                # Obtaining the type of the subscript
                int_10534 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 41), 'int')
                # Getting the type of 'temp_op2' (line 266)
                temp_op2_10535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 27), 'temp_op2')
                # Obtaining the member 'elts' of a type (line 266)
                elts_10536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 27), temp_op2_10535, 'elts')
                # Obtaining the member '__getitem__' of a type (line 266)
                getitem___10537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 27), elts_10536, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 266)
                subscript_call_result_10538 = invoke(stypy.reporting.localization.Localization(__file__, 266, 27), getitem___10537, int_10534)
                
                # Assigning a type to the variable 'temp_op2' (line 266)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 266, 16), 'temp_op2', subscript_call_result_10538)
                # SSA join for if statement (line 265)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to append(...): (line 268)
            # Processing the call arguments (line 268)
            # Getting the type of 'right_stmts' (line 268)
            right_stmts_10541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 33), 'right_stmts', False)
            # Processing the call keyword arguments (line 268)
            kwargs_10542 = {}
            # Getting the type of 'bool_op_stmts' (line 268)
            bool_op_stmts_10539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 268, 12), 'bool_op_stmts', False)
            # Obtaining the member 'append' of a type (line 268)
            append_10540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 268, 12), bool_op_stmts_10539, 'append')
            # Calling append(args, kwargs) (line 268)
            append_call_result_10543 = invoke(stypy.reporting.localization.Localization(__file__, 268, 12), append_10540, *[right_stmts_10541], **kwargs_10542)
            
            
            # Assigning a Call to a Name (line 271):
            
            # Assigning a Call to a Name (line 271):
            
            # Call to lower(...): (line 271)
            # Processing the call keyword arguments (line 271)
            kwargs_10551 = {}
            
            # Call to type(...): (line 271)
            # Processing the call arguments (line 271)
            # Getting the type of 'node' (line 271)
            node_10545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 33), 'node', False)
            # Obtaining the member 'op' of a type (line 271)
            op_10546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 33), node_10545, 'op')
            # Processing the call keyword arguments (line 271)
            kwargs_10547 = {}
            # Getting the type of 'type' (line 271)
            type_10544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 28), 'type', False)
            # Calling type(args, kwargs) (line 271)
            type_call_result_10548 = invoke(stypy.reporting.localization.Localization(__file__, 271, 28), type_10544, *[op_10546], **kwargs_10547)
            
            # Obtaining the member '__name__' of a type (line 271)
            name___10549 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 28), type_call_result_10548, '__name__')
            # Obtaining the member 'lower' of a type (line 271)
            lower_10550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 28), name___10549, 'lower')
            # Calling lower(args, kwargs) (line 271)
            lower_call_result_10552 = invoke(stypy.reporting.localization.Localization(__file__, 271, 28), lower_10550, *[], **kwargs_10551)
            
            # Assigning a type to the variable 'operator_name' (line 271)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 12), 'operator_name', lower_call_result_10552)
            
            # Assigning a Call to a Tuple (line 274):
            
            # Assigning a Call to a Name:
            
            # Call to create_binary_operator(...): (line 274)
            # Processing the call arguments (line 274)
            # Getting the type of 'operator_name' (line 274)
            operator_name_10555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 85), 'operator_name', False)
            # Getting the type of 'temp_op1' (line 274)
            temp_op1_10556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 100), 'temp_op1', False)
            # Getting the type of 'temp_op2' (line 274)
            temp_op2_10557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 110), 'temp_op2', False)
            # Getting the type of 'node' (line 275)
            node_10558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 80), 'node', False)
            # Obtaining the member 'lineno' of a type (line 275)
            lineno_10559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 80), node_10558, 'lineno')
            # Getting the type of 'node' (line 275)
            node_10560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 275, 93), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 275)
            col_offset_10561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 275, 93), node_10560, 'col_offset')
            # Processing the call keyword arguments (line 274)
            kwargs_10562 = {}
            # Getting the type of 'stypy_functions_copy' (line 274)
            stypy_functions_copy_10553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 41), 'stypy_functions_copy', False)
            # Obtaining the member 'create_binary_operator' of a type (line 274)
            create_binary_operator_10554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 274, 41), stypy_functions_copy_10553, 'create_binary_operator')
            # Calling create_binary_operator(args, kwargs) (line 274)
            create_binary_operator_call_result_10563 = invoke(stypy.reporting.localization.Localization(__file__, 274, 41), create_binary_operator_10554, *[operator_name_10555, temp_op1_10556, temp_op2_10557, lineno_10559, col_offset_10561], **kwargs_10562)
            
            # Assigning a type to the variable 'call_assignment_9455' (line 274)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'call_assignment_9455', create_binary_operator_call_result_10563)
            
            # Assigning a Call to a Name (line 274):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9455' (line 274)
            call_assignment_9455_10564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'call_assignment_9455', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10565 = stypy_get_value_from_tuple(call_assignment_9455_10564, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9456' (line 274)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'call_assignment_9456', stypy_get_value_from_tuple_call_result_10565)
            
            # Assigning a Name to a Name (line 274):
            # Getting the type of 'call_assignment_9456' (line 274)
            call_assignment_9456_10566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'call_assignment_9456')
            # Assigning a type to the variable 'operator_stmts' (line 274)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'operator_stmts', call_assignment_9456_10566)
            
            # Assigning a Call to a Name (line 274):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9455' (line 274)
            call_assignment_9455_10567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'call_assignment_9455', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10568 = stypy_get_value_from_tuple(call_assignment_9455_10567, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9457' (line 274)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'call_assignment_9457', stypy_get_value_from_tuple_call_result_10568)
            
            # Assigning a Name to a Name (line 274):
            # Getting the type of 'call_assignment_9457' (line 274)
            call_assignment_9457_10569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 274, 12), 'call_assignment_9457')
            # Assigning a type to the variable 'result_var' (line 274)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 274, 28), 'result_var', call_assignment_9457_10569)
            
            # Call to append(...): (line 276)
            # Processing the call arguments (line 276)
            # Getting the type of 'operator_stmts' (line 276)
            operator_stmts_10572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 33), 'operator_stmts', False)
            # Processing the call keyword arguments (line 276)
            kwargs_10573 = {}
            # Getting the type of 'bool_op_stmts' (line 276)
            bool_op_stmts_10570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 276, 12), 'bool_op_stmts', False)
            # Obtaining the member 'append' of a type (line 276)
            append_10571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 276, 12), bool_op_stmts_10570, 'append')
            # Calling append(args, kwargs) (line 276)
            append_call_result_10574 = invoke(stypy.reporting.localization.Localization(__file__, 276, 12), append_10571, *[operator_stmts_10572], **kwargs_10573)
            
            
            # Assigning a Name to a Name (line 277):
            
            # Assigning a Name to a Name (line 277):
            # Getting the type of 'result_var' (line 277)
            result_var_10575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 23), 'result_var')
            # Assigning a type to the variable 'temp_op1' (line 277)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 12), 'temp_op1', result_var_10575)
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Obtaining an instance of the builtin type 'tuple' (line 279)
        tuple_10576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 279)
        # Adding element type (line 279)
        
        # Call to flatten_lists(...): (line 279)
        # Processing the call arguments (line 279)
        
        # Call to create_blank_line(...): (line 279)
        # Processing the call keyword arguments (line 279)
        kwargs_10581 = {}
        # Getting the type of 'stypy_functions_copy' (line 279)
        stypy_functions_copy_10579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 279)
        create_blank_line_10580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 50), stypy_functions_copy_10579, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 279)
        create_blank_line_call_result_10582 = invoke(stypy.reporting.localization.Localization(__file__, 279, 50), create_blank_line_10580, *[], **kwargs_10581)
        
        # Getting the type of 'bool_op_stmts' (line 280)
        bool_op_stmts_10583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 45), 'bool_op_stmts', False)
        
        # Call to create_blank_line(...): (line 281)
        # Processing the call keyword arguments (line 281)
        kwargs_10586 = {}
        # Getting the type of 'stypy_functions_copy' (line 281)
        stypy_functions_copy_10584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 281)
        create_blank_line_10585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 45), stypy_functions_copy_10584, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 281)
        create_blank_line_call_result_10587 = invoke(stypy.reporting.localization.Localization(__file__, 281, 45), create_blank_line_10585, *[], **kwargs_10586)
        
        # Processing the call keyword arguments (line 279)
        kwargs_10588 = {}
        # Getting the type of 'stypy_functions_copy' (line 279)
        stypy_functions_copy_10577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 279)
        flatten_lists_10578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 15), stypy_functions_copy_10577, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 279)
        flatten_lists_call_result_10589 = invoke(stypy.reporting.localization.Localization(__file__, 279, 15), flatten_lists_10578, *[create_blank_line_call_result_10582, bool_op_stmts_10583, create_blank_line_call_result_10587], **kwargs_10588)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 15), tuple_10576, flatten_lists_call_result_10589)
        # Adding element type (line 279)
        # Getting the type of 'result_var' (line 282)
        result_var_10590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 48), 'result_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 279, 15), tuple_10576, result_var_10590)
        
        # Assigning a type to the variable 'stypy_return_type' (line 279)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'stypy_return_type', tuple_10576)
        
        # ################# End of 'visit_BoolOp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_BoolOp' in the type store
        # Getting the type of 'stypy_return_type' (line 251)
        stypy_return_type_10591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10591)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_BoolOp'
        return stypy_return_type_10591


    @norecursion
    def visit_BinOp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_BinOp'
        module_type_store = module_type_store.open_function_context('visit_BinOp', 284, 4, False)
        # Assigning a type to the variable 'self' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_BinOp')
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_BinOp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_BinOp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_BinOp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_BinOp(...)' code ##################

        
        # Assigning a Call to a Tuple (line 288):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 288)
        # Processing the call arguments (line 288)
        # Getting the type of 'node' (line 288)
        node_10594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 42), 'node', False)
        # Obtaining the member 'left' of a type (line 288)
        left_10595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 42), node_10594, 'left')
        # Getting the type of 'context' (line 288)
        context_10596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 53), 'context', False)
        # Processing the call keyword arguments (line 288)
        kwargs_10597 = {}
        # Getting the type of 'self' (line 288)
        self_10592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 288)
        visit_10593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 288, 31), self_10592, 'visit')
        # Calling visit(args, kwargs) (line 288)
        visit_call_result_10598 = invoke(stypy.reporting.localization.Localization(__file__, 288, 31), visit_10593, *[left_10595, context_10596], **kwargs_10597)
        
        # Assigning a type to the variable 'call_assignment_9458' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'call_assignment_9458', visit_call_result_10598)
        
        # Assigning a Call to a Name (line 288):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9458' (line 288)
        call_assignment_9458_10599 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'call_assignment_9458', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10600 = stypy_get_value_from_tuple(call_assignment_9458_10599, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9459' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'call_assignment_9459', stypy_get_value_from_tuple_call_result_10600)
        
        # Assigning a Name to a Name (line 288):
        # Getting the type of 'call_assignment_9459' (line 288)
        call_assignment_9459_10601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'call_assignment_9459')
        # Assigning a type to the variable 'left_stmts' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'left_stmts', call_assignment_9459_10601)
        
        # Assigning a Call to a Name (line 288):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9458' (line 288)
        call_assignment_9458_10602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'call_assignment_9458', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10603 = stypy_get_value_from_tuple(call_assignment_9458_10602, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9460' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'call_assignment_9460', stypy_get_value_from_tuple_call_result_10603)
        
        # Assigning a Name to a Name (line 288):
        # Getting the type of 'call_assignment_9460' (line 288)
        call_assignment_9460_10604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 8), 'call_assignment_9460')
        # Assigning a type to the variable 'temp_op1' (line 288)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 288, 20), 'temp_op1', call_assignment_9460_10604)
        
        
        # Call to type(...): (line 290)
        # Processing the call arguments (line 290)
        # Getting the type of 'temp_op1' (line 290)
        temp_op1_10606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 16), 'temp_op1', False)
        # Processing the call keyword arguments (line 290)
        kwargs_10607 = {}
        # Getting the type of 'type' (line 290)
        type_10605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 11), 'type', False)
        # Calling type(args, kwargs) (line 290)
        type_call_result_10608 = invoke(stypy.reporting.localization.Localization(__file__, 290, 11), type_10605, *[temp_op1_10606], **kwargs_10607)
        
        # Getting the type of 'ast' (line 290)
        ast_10609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 29), 'ast')
        # Obtaining the member 'Tuple' of a type (line 290)
        Tuple_10610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 290, 29), ast_10609, 'Tuple')
        # Applying the binary operator 'is' (line 290)
        result_is__10611 = python_operator(stypy.reporting.localization.Localization(__file__, 290, 11), 'is', type_call_result_10608, Tuple_10610)
        
        # Testing if the type of an if condition is none (line 290)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 290, 8), result_is__10611):
            pass
        else:
            
            # Testing the type of an if condition (line 290)
            if_condition_10612 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 290, 8), result_is__10611)
            # Assigning a type to the variable 'if_condition_10612' (line 290)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 8), 'if_condition_10612', if_condition_10612)
            # SSA begins for if statement (line 290)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 291):
            
            # Assigning a Subscript to a Name (line 291):
            
            # Obtaining the type of the subscript
            int_10613 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 37), 'int')
            # Getting the type of 'temp_op1' (line 291)
            temp_op1_10614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 23), 'temp_op1')
            # Obtaining the member 'elts' of a type (line 291)
            elts_10615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 23), temp_op1_10614, 'elts')
            # Obtaining the member '__getitem__' of a type (line 291)
            getitem___10616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 23), elts_10615, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 291)
            subscript_call_result_10617 = invoke(stypy.reporting.localization.Localization(__file__, 291, 23), getitem___10616, int_10613)
            
            # Assigning a type to the variable 'temp_op1' (line 291)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 12), 'temp_op1', subscript_call_result_10617)
            # SSA join for if statement (line 290)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Call to a Tuple (line 294):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 294)
        # Processing the call arguments (line 294)
        # Getting the type of 'node' (line 294)
        node_10620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 43), 'node', False)
        # Obtaining the member 'right' of a type (line 294)
        right_10621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 43), node_10620, 'right')
        # Getting the type of 'context' (line 294)
        context_10622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 55), 'context', False)
        # Processing the call keyword arguments (line 294)
        kwargs_10623 = {}
        # Getting the type of 'self' (line 294)
        self_10618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 32), 'self', False)
        # Obtaining the member 'visit' of a type (line 294)
        visit_10619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 294, 32), self_10618, 'visit')
        # Calling visit(args, kwargs) (line 294)
        visit_call_result_10624 = invoke(stypy.reporting.localization.Localization(__file__, 294, 32), visit_10619, *[right_10621, context_10622], **kwargs_10623)
        
        # Assigning a type to the variable 'call_assignment_9461' (line 294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'call_assignment_9461', visit_call_result_10624)
        
        # Assigning a Call to a Name (line 294):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9461' (line 294)
        call_assignment_9461_10625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'call_assignment_9461', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10626 = stypy_get_value_from_tuple(call_assignment_9461_10625, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9462' (line 294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'call_assignment_9462', stypy_get_value_from_tuple_call_result_10626)
        
        # Assigning a Name to a Name (line 294):
        # Getting the type of 'call_assignment_9462' (line 294)
        call_assignment_9462_10627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'call_assignment_9462')
        # Assigning a type to the variable 'right_stmts' (line 294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'right_stmts', call_assignment_9462_10627)
        
        # Assigning a Call to a Name (line 294):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9461' (line 294)
        call_assignment_9461_10628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'call_assignment_9461', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10629 = stypy_get_value_from_tuple(call_assignment_9461_10628, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9463' (line 294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'call_assignment_9463', stypy_get_value_from_tuple_call_result_10629)
        
        # Assigning a Name to a Name (line 294):
        # Getting the type of 'call_assignment_9463' (line 294)
        call_assignment_9463_10630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 294, 8), 'call_assignment_9463')
        # Assigning a type to the variable 'temp_op2' (line 294)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 294, 21), 'temp_op2', call_assignment_9463_10630)
        
        
        # Call to type(...): (line 296)
        # Processing the call arguments (line 296)
        # Getting the type of 'temp_op2' (line 296)
        temp_op2_10632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 16), 'temp_op2', False)
        # Processing the call keyword arguments (line 296)
        kwargs_10633 = {}
        # Getting the type of 'type' (line 296)
        type_10631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 11), 'type', False)
        # Calling type(args, kwargs) (line 296)
        type_call_result_10634 = invoke(stypy.reporting.localization.Localization(__file__, 296, 11), type_10631, *[temp_op2_10632], **kwargs_10633)
        
        # Getting the type of 'ast' (line 296)
        ast_10635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 29), 'ast')
        # Obtaining the member 'Tuple' of a type (line 296)
        Tuple_10636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 29), ast_10635, 'Tuple')
        # Applying the binary operator 'is' (line 296)
        result_is__10637 = python_operator(stypy.reporting.localization.Localization(__file__, 296, 11), 'is', type_call_result_10634, Tuple_10636)
        
        # Testing if the type of an if condition is none (line 296)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 296, 8), result_is__10637):
            pass
        else:
            
            # Testing the type of an if condition (line 296)
            if_condition_10638 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 296, 8), result_is__10637)
            # Assigning a type to the variable 'if_condition_10638' (line 296)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'if_condition_10638', if_condition_10638)
            # SSA begins for if statement (line 296)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 297):
            
            # Assigning a Subscript to a Name (line 297):
            
            # Obtaining the type of the subscript
            int_10639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 297, 37), 'int')
            # Getting the type of 'temp_op2' (line 297)
            temp_op2_10640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 23), 'temp_op2')
            # Obtaining the member 'elts' of a type (line 297)
            elts_10641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 23), temp_op2_10640, 'elts')
            # Obtaining the member '__getitem__' of a type (line 297)
            getitem___10642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 23), elts_10641, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 297)
            subscript_call_result_10643 = invoke(stypy.reporting.localization.Localization(__file__, 297, 23), getitem___10642, int_10639)
            
            # Assigning a type to the variable 'temp_op2' (line 297)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 297, 12), 'temp_op2', subscript_call_result_10643)
            # SSA join for if statement (line 296)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Call to a Name (line 300):
        
        # Assigning a Call to a Name (line 300):
        
        # Call to lower(...): (line 300)
        # Processing the call keyword arguments (line 300)
        kwargs_10651 = {}
        
        # Call to type(...): (line 300)
        # Processing the call arguments (line 300)
        # Getting the type of 'node' (line 300)
        node_10645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 29), 'node', False)
        # Obtaining the member 'op' of a type (line 300)
        op_10646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 29), node_10645, 'op')
        # Processing the call keyword arguments (line 300)
        kwargs_10647 = {}
        # Getting the type of 'type' (line 300)
        type_10644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 24), 'type', False)
        # Calling type(args, kwargs) (line 300)
        type_call_result_10648 = invoke(stypy.reporting.localization.Localization(__file__, 300, 24), type_10644, *[op_10646], **kwargs_10647)
        
        # Obtaining the member '__name__' of a type (line 300)
        name___10649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 24), type_call_result_10648, '__name__')
        # Obtaining the member 'lower' of a type (line 300)
        lower_10650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 300, 24), name___10649, 'lower')
        # Calling lower(args, kwargs) (line 300)
        lower_call_result_10652 = invoke(stypy.reporting.localization.Localization(__file__, 300, 24), lower_10650, *[], **kwargs_10651)
        
        # Assigning a type to the variable 'operator_name' (line 300)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 300, 8), 'operator_name', lower_call_result_10652)
        
        # Assigning a Call to a Tuple (line 303):
        
        # Assigning a Call to a Name:
        
        # Call to create_binary_operator(...): (line 303)
        # Processing the call arguments (line 303)
        # Getting the type of 'operator_name' (line 303)
        operator_name_10655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 81), 'operator_name', False)
        # Getting the type of 'temp_op1' (line 303)
        temp_op1_10656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 96), 'temp_op1', False)
        # Getting the type of 'temp_op2' (line 303)
        temp_op2_10657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 106), 'temp_op2', False)
        # Getting the type of 'node' (line 304)
        node_10658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 76), 'node', False)
        # Obtaining the member 'lineno' of a type (line 304)
        lineno_10659 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 76), node_10658, 'lineno')
        # Getting the type of 'node' (line 304)
        node_10660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 304, 89), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 304)
        col_offset_10661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 304, 89), node_10660, 'col_offset')
        # Processing the call keyword arguments (line 303)
        kwargs_10662 = {}
        # Getting the type of 'stypy_functions_copy' (line 303)
        stypy_functions_copy_10653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 37), 'stypy_functions_copy', False)
        # Obtaining the member 'create_binary_operator' of a type (line 303)
        create_binary_operator_10654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 37), stypy_functions_copy_10653, 'create_binary_operator')
        # Calling create_binary_operator(args, kwargs) (line 303)
        create_binary_operator_call_result_10663 = invoke(stypy.reporting.localization.Localization(__file__, 303, 37), create_binary_operator_10654, *[operator_name_10655, temp_op1_10656, temp_op2_10657, lineno_10659, col_offset_10661], **kwargs_10662)
        
        # Assigning a type to the variable 'call_assignment_9464' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'call_assignment_9464', create_binary_operator_call_result_10663)
        
        # Assigning a Call to a Name (line 303):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9464' (line 303)
        call_assignment_9464_10664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'call_assignment_9464', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10665 = stypy_get_value_from_tuple(call_assignment_9464_10664, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9465' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'call_assignment_9465', stypy_get_value_from_tuple_call_result_10665)
        
        # Assigning a Name to a Name (line 303):
        # Getting the type of 'call_assignment_9465' (line 303)
        call_assignment_9465_10666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'call_assignment_9465')
        # Assigning a type to the variable 'operator_stmts' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'operator_stmts', call_assignment_9465_10666)
        
        # Assigning a Call to a Name (line 303):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9464' (line 303)
        call_assignment_9464_10667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'call_assignment_9464', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10668 = stypy_get_value_from_tuple(call_assignment_9464_10667, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9466' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'call_assignment_9466', stypy_get_value_from_tuple_call_result_10668)
        
        # Assigning a Name to a Name (line 303):
        # Getting the type of 'call_assignment_9466' (line 303)
        call_assignment_9466_10669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'call_assignment_9466')
        # Assigning a type to the variable 'result_var' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 24), 'result_var', call_assignment_9466_10669)
        
        # Obtaining an instance of the builtin type 'tuple' (line 306)
        tuple_10670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 306, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 306)
        # Adding element type (line 306)
        
        # Call to flatten_lists(...): (line 306)
        # Processing the call arguments (line 306)
        
        # Call to create_blank_line(...): (line 306)
        # Processing the call keyword arguments (line 306)
        kwargs_10675 = {}
        # Getting the type of 'stypy_functions_copy' (line 306)
        stypy_functions_copy_10673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 306)
        create_blank_line_10674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 50), stypy_functions_copy_10673, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 306)
        create_blank_line_call_result_10676 = invoke(stypy.reporting.localization.Localization(__file__, 306, 50), create_blank_line_10674, *[], **kwargs_10675)
        
        # Getting the type of 'left_stmts' (line 307)
        left_stmts_10677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 45), 'left_stmts', False)
        # Getting the type of 'right_stmts' (line 308)
        right_stmts_10678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 45), 'right_stmts', False)
        # Getting the type of 'operator_stmts' (line 309)
        operator_stmts_10679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 45), 'operator_stmts', False)
        
        # Call to create_blank_line(...): (line 310)
        # Processing the call keyword arguments (line 310)
        kwargs_10682 = {}
        # Getting the type of 'stypy_functions_copy' (line 310)
        stypy_functions_copy_10680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 310)
        create_blank_line_10681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 310, 45), stypy_functions_copy_10680, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 310)
        create_blank_line_call_result_10683 = invoke(stypy.reporting.localization.Localization(__file__, 310, 45), create_blank_line_10681, *[], **kwargs_10682)
        
        # Processing the call keyword arguments (line 306)
        kwargs_10684 = {}
        # Getting the type of 'stypy_functions_copy' (line 306)
        stypy_functions_copy_10671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 306)
        flatten_lists_10672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 15), stypy_functions_copy_10671, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 306)
        flatten_lists_call_result_10685 = invoke(stypy.reporting.localization.Localization(__file__, 306, 15), flatten_lists_10672, *[create_blank_line_call_result_10676, left_stmts_10677, right_stmts_10678, operator_stmts_10679, create_blank_line_call_result_10683], **kwargs_10684)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 15), tuple_10670, flatten_lists_call_result_10685)
        # Adding element type (line 306)
        # Getting the type of 'result_var' (line 311)
        result_var_10686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 48), 'result_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 306, 15), tuple_10670, result_var_10686)
        
        # Assigning a type to the variable 'stypy_return_type' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'stypy_return_type', tuple_10670)
        
        # ################# End of 'visit_BinOp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_BinOp' in the type store
        # Getting the type of 'stypy_return_type' (line 284)
        stypy_return_type_10687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10687)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_BinOp'
        return stypy_return_type_10687


    @norecursion
    def visit_UnaryOp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_UnaryOp'
        module_type_store = module_type_store.open_function_context('visit_UnaryOp', 313, 4, False)
        # Assigning a type to the variable 'self' (line 314)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 314, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_UnaryOp')
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_UnaryOp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_UnaryOp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_UnaryOp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_UnaryOp(...)' code ##################

        
        # Assigning a Call to a Tuple (line 317):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 317)
        # Processing the call arguments (line 317)
        # Getting the type of 'node' (line 317)
        node_10690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 42), 'node', False)
        # Obtaining the member 'operand' of a type (line 317)
        operand_10691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 42), node_10690, 'operand')
        # Getting the type of 'context' (line 317)
        context_10692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 56), 'context', False)
        # Processing the call keyword arguments (line 317)
        kwargs_10693 = {}
        # Getting the type of 'self' (line 317)
        self_10688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 317)
        visit_10689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 31), self_10688, 'visit')
        # Calling visit(args, kwargs) (line 317)
        visit_call_result_10694 = invoke(stypy.reporting.localization.Localization(__file__, 317, 31), visit_10689, *[operand_10691, context_10692], **kwargs_10693)
        
        # Assigning a type to the variable 'call_assignment_9467' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'call_assignment_9467', visit_call_result_10694)
        
        # Assigning a Call to a Name (line 317):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9467' (line 317)
        call_assignment_9467_10695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'call_assignment_9467', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10696 = stypy_get_value_from_tuple(call_assignment_9467_10695, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9468' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'call_assignment_9468', stypy_get_value_from_tuple_call_result_10696)
        
        # Assigning a Name to a Name (line 317):
        # Getting the type of 'call_assignment_9468' (line 317)
        call_assignment_9468_10697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'call_assignment_9468')
        # Assigning a type to the variable 'right_stmts' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'right_stmts', call_assignment_9468_10697)
        
        # Assigning a Call to a Name (line 317):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9467' (line 317)
        call_assignment_9467_10698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'call_assignment_9467', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10699 = stypy_get_value_from_tuple(call_assignment_9467_10698, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9469' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'call_assignment_9469', stypy_get_value_from_tuple_call_result_10699)
        
        # Assigning a Name to a Name (line 317):
        # Getting the type of 'call_assignment_9469' (line 317)
        call_assignment_9469_10700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 8), 'call_assignment_9469')
        # Assigning a type to the variable 'temp_op' (line 317)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 21), 'temp_op', call_assignment_9469_10700)
        
        # Assigning a Call to a Name (line 318):
        
        # Assigning a Call to a Name (line 318):
        
        # Call to lower(...): (line 318)
        # Processing the call keyword arguments (line 318)
        kwargs_10708 = {}
        
        # Call to type(...): (line 318)
        # Processing the call arguments (line 318)
        # Getting the type of 'node' (line 318)
        node_10702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 29), 'node', False)
        # Obtaining the member 'op' of a type (line 318)
        op_10703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 29), node_10702, 'op')
        # Processing the call keyword arguments (line 318)
        kwargs_10704 = {}
        # Getting the type of 'type' (line 318)
        type_10701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 24), 'type', False)
        # Calling type(args, kwargs) (line 318)
        type_call_result_10705 = invoke(stypy.reporting.localization.Localization(__file__, 318, 24), type_10701, *[op_10703], **kwargs_10704)
        
        # Obtaining the member '__name__' of a type (line 318)
        name___10706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 24), type_call_result_10705, '__name__')
        # Obtaining the member 'lower' of a type (line 318)
        lower_10707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 24), name___10706, 'lower')
        # Calling lower(args, kwargs) (line 318)
        lower_call_result_10709 = invoke(stypy.reporting.localization.Localization(__file__, 318, 24), lower_10707, *[], **kwargs_10708)
        
        # Assigning a type to the variable 'operator_name' (line 318)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 318, 8), 'operator_name', lower_call_result_10709)
        
        # Assigning a Call to a Tuple (line 320):
        
        # Assigning a Call to a Name:
        
        # Call to create_unary_operator(...): (line 320)
        # Processing the call arguments (line 320)
        # Getting the type of 'operator_name' (line 320)
        operator_name_10712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 80), 'operator_name', False)
        # Getting the type of 'temp_op' (line 320)
        temp_op_10713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 95), 'temp_op', False)
        # Getting the type of 'node' (line 321)
        node_10714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 75), 'node', False)
        # Obtaining the member 'lineno' of a type (line 321)
        lineno_10715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 75), node_10714, 'lineno')
        # Getting the type of 'node' (line 321)
        node_10716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 88), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 321)
        col_offset_10717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 88), node_10716, 'col_offset')
        # Processing the call keyword arguments (line 320)
        kwargs_10718 = {}
        # Getting the type of 'stypy_functions_copy' (line 320)
        stypy_functions_copy_10710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 37), 'stypy_functions_copy', False)
        # Obtaining the member 'create_unary_operator' of a type (line 320)
        create_unary_operator_10711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 37), stypy_functions_copy_10710, 'create_unary_operator')
        # Calling create_unary_operator(args, kwargs) (line 320)
        create_unary_operator_call_result_10719 = invoke(stypy.reporting.localization.Localization(__file__, 320, 37), create_unary_operator_10711, *[operator_name_10712, temp_op_10713, lineno_10715, col_offset_10717], **kwargs_10718)
        
        # Assigning a type to the variable 'call_assignment_9470' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'call_assignment_9470', create_unary_operator_call_result_10719)
        
        # Assigning a Call to a Name (line 320):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9470' (line 320)
        call_assignment_9470_10720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'call_assignment_9470', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10721 = stypy_get_value_from_tuple(call_assignment_9470_10720, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9471' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'call_assignment_9471', stypy_get_value_from_tuple_call_result_10721)
        
        # Assigning a Name to a Name (line 320):
        # Getting the type of 'call_assignment_9471' (line 320)
        call_assignment_9471_10722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'call_assignment_9471')
        # Assigning a type to the variable 'operator_stmts' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'operator_stmts', call_assignment_9471_10722)
        
        # Assigning a Call to a Name (line 320):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9470' (line 320)
        call_assignment_9470_10723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'call_assignment_9470', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10724 = stypy_get_value_from_tuple(call_assignment_9470_10723, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9472' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'call_assignment_9472', stypy_get_value_from_tuple_call_result_10724)
        
        # Assigning a Name to a Name (line 320):
        # Getting the type of 'call_assignment_9472' (line 320)
        call_assignment_9472_10725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'call_assignment_9472')
        # Assigning a type to the variable 'result_var' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 24), 'result_var', call_assignment_9472_10725)
        
        # Obtaining an instance of the builtin type 'tuple' (line 323)
        tuple_10726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 323)
        # Adding element type (line 323)
        
        # Call to flatten_lists(...): (line 323)
        # Processing the call arguments (line 323)
        
        # Call to create_blank_line(...): (line 323)
        # Processing the call keyword arguments (line 323)
        kwargs_10731 = {}
        # Getting the type of 'stypy_functions_copy' (line 323)
        stypy_functions_copy_10729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 323)
        create_blank_line_10730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 50), stypy_functions_copy_10729, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 323)
        create_blank_line_call_result_10732 = invoke(stypy.reporting.localization.Localization(__file__, 323, 50), create_blank_line_10730, *[], **kwargs_10731)
        
        # Getting the type of 'right_stmts' (line 324)
        right_stmts_10733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 45), 'right_stmts', False)
        # Getting the type of 'operator_stmts' (line 325)
        operator_stmts_10734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 325, 45), 'operator_stmts', False)
        
        # Call to create_blank_line(...): (line 326)
        # Processing the call keyword arguments (line 326)
        kwargs_10737 = {}
        # Getting the type of 'stypy_functions_copy' (line 326)
        stypy_functions_copy_10735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 326)
        create_blank_line_10736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 326, 45), stypy_functions_copy_10735, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 326)
        create_blank_line_call_result_10738 = invoke(stypy.reporting.localization.Localization(__file__, 326, 45), create_blank_line_10736, *[], **kwargs_10737)
        
        # Processing the call keyword arguments (line 323)
        kwargs_10739 = {}
        # Getting the type of 'stypy_functions_copy' (line 323)
        stypy_functions_copy_10727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 323)
        flatten_lists_10728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 323, 15), stypy_functions_copy_10727, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 323)
        flatten_lists_call_result_10740 = invoke(stypy.reporting.localization.Localization(__file__, 323, 15), flatten_lists_10728, *[create_blank_line_call_result_10732, right_stmts_10733, operator_stmts_10734, create_blank_line_call_result_10738], **kwargs_10739)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 15), tuple_10726, flatten_lists_call_result_10740)
        # Adding element type (line 323)
        # Getting the type of 'result_var' (line 327)
        result_var_10741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 48), 'result_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 15), tuple_10726, result_var_10741)
        
        # Assigning a type to the variable 'stypy_return_type' (line 323)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 323, 8), 'stypy_return_type', tuple_10726)
        
        # ################# End of 'visit_UnaryOp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_UnaryOp' in the type store
        # Getting the type of 'stypy_return_type' (line 313)
        stypy_return_type_10742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10742)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_UnaryOp'
        return stypy_return_type_10742


    @norecursion
    def visit_Compare(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Compare'
        module_type_store = module_type_store.open_function_context('visit_Compare', 329, 4, False)
        # Assigning a type to the variable 'self' (line 330)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Compare')
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Compare.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Compare', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Compare', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Compare(...)' code ##################

        
        # Assigning a List to a Name (line 336):
        
        # Assigning a List to a Name (line 336):
        
        # Obtaining an instance of the builtin type 'list' (line 336)
        list_10743 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 336)
        
        # Assigning a type to the variable 'all_assign_stmts' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 8), 'all_assign_stmts', list_10743)
        
        # Assigning a Name to a Name (line 337):
        
        # Assigning a Name to a Name (line 337):
        # Getting the type of 'None' (line 337)
        None_10744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 26), 'None')
        # Assigning a type to the variable 'final_op_result' (line 337)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 337, 8), 'final_op_result', None_10744)
        
        # Assigning a Call to a Tuple (line 340):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 340)
        # Processing the call arguments (line 340)
        # Getting the type of 'node' (line 340)
        node_10747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 41), 'node', False)
        # Obtaining the member 'left' of a type (line 340)
        left_10748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 41), node_10747, 'left')
        # Getting the type of 'context' (line 340)
        context_10749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 52), 'context', False)
        # Processing the call keyword arguments (line 340)
        kwargs_10750 = {}
        # Getting the type of 'self' (line 340)
        self_10745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 30), 'self', False)
        # Obtaining the member 'visit' of a type (line 340)
        visit_10746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 30), self_10745, 'visit')
        # Calling visit(args, kwargs) (line 340)
        visit_call_result_10751 = invoke(stypy.reporting.localization.Localization(__file__, 340, 30), visit_10746, *[left_10748, context_10749], **kwargs_10750)
        
        # Assigning a type to the variable 'call_assignment_9473' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'call_assignment_9473', visit_call_result_10751)
        
        # Assigning a Call to a Name (line 340):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9473' (line 340)
        call_assignment_9473_10752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'call_assignment_9473', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10753 = stypy_get_value_from_tuple(call_assignment_9473_10752, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9474' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'call_assignment_9474', stypy_get_value_from_tuple_call_result_10753)
        
        # Assigning a Name to a Name (line 340):
        # Getting the type of 'call_assignment_9474' (line 340)
        call_assignment_9474_10754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'call_assignment_9474')
        # Assigning a type to the variable 'left_stmts' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'left_stmts', call_assignment_9474_10754)
        
        # Assigning a Call to a Name (line 340):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9473' (line 340)
        call_assignment_9473_10755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'call_assignment_9473', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10756 = stypy_get_value_from_tuple(call_assignment_9473_10755, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9475' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'call_assignment_9475', stypy_get_value_from_tuple_call_result_10756)
        
        # Assigning a Name to a Name (line 340):
        # Getting the type of 'call_assignment_9475' (line 340)
        call_assignment_9475_10757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 8), 'call_assignment_9475')
        # Assigning a type to the variable 'left_op' (line 340)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 20), 'left_op', call_assignment_9475_10757)
        
        
        # Call to type(...): (line 341)
        # Processing the call arguments (line 341)
        # Getting the type of 'left_op' (line 341)
        left_op_10759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 16), 'left_op', False)
        # Processing the call keyword arguments (line 341)
        kwargs_10760 = {}
        # Getting the type of 'type' (line 341)
        type_10758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 11), 'type', False)
        # Calling type(args, kwargs) (line 341)
        type_call_result_10761 = invoke(stypy.reporting.localization.Localization(__file__, 341, 11), type_10758, *[left_op_10759], **kwargs_10760)
        
        # Getting the type of 'ast' (line 341)
        ast_10762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 28), 'ast')
        # Obtaining the member 'Tuple' of a type (line 341)
        Tuple_10763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 28), ast_10762, 'Tuple')
        # Applying the binary operator 'is' (line 341)
        result_is__10764 = python_operator(stypy.reporting.localization.Localization(__file__, 341, 11), 'is', type_call_result_10761, Tuple_10763)
        
        # Testing if the type of an if condition is none (line 341)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 341, 8), result_is__10764):
            pass
        else:
            
            # Testing the type of an if condition (line 341)
            if_condition_10765 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 341, 8), result_is__10764)
            # Assigning a type to the variable 'if_condition_10765' (line 341)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 341, 8), 'if_condition_10765', if_condition_10765)
            # SSA begins for if statement (line 341)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 342):
            
            # Assigning a Subscript to a Name (line 342):
            
            # Obtaining the type of the subscript
            int_10766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 342, 35), 'int')
            # Getting the type of 'left_op' (line 342)
            left_op_10767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 22), 'left_op')
            # Obtaining the member 'elts' of a type (line 342)
            elts_10768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 22), left_op_10767, 'elts')
            # Obtaining the member '__getitem__' of a type (line 342)
            getitem___10769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 22), elts_10768, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 342)
            subscript_call_result_10770 = invoke(stypy.reporting.localization.Localization(__file__, 342, 22), getitem___10769, int_10766)
            
            # Assigning a type to the variable 'left_op' (line 342)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 12), 'left_op', subscript_call_result_10770)
            # SSA join for if statement (line 341)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 343)
        # Processing the call arguments (line 343)
        # Getting the type of 'left_stmts' (line 343)
        left_stmts_10773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 32), 'left_stmts', False)
        # Processing the call keyword arguments (line 343)
        kwargs_10774 = {}
        # Getting the type of 'all_assign_stmts' (line 343)
        all_assign_stmts_10771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 8), 'all_assign_stmts', False)
        # Obtaining the member 'append' of a type (line 343)
        append_10772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 8), all_assign_stmts_10771, 'append')
        # Calling append(args, kwargs) (line 343)
        append_call_result_10775 = invoke(stypy.reporting.localization.Localization(__file__, 343, 8), append_10772, *[left_stmts_10773], **kwargs_10774)
        
        
        
        # Call to range(...): (line 345)
        # Processing the call arguments (line 345)
        
        # Call to len(...): (line 345)
        # Processing the call arguments (line 345)
        # Getting the type of 'node' (line 345)
        node_10778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 27), 'node', False)
        # Obtaining the member 'comparators' of a type (line 345)
        comparators_10779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 345, 27), node_10778, 'comparators')
        # Processing the call keyword arguments (line 345)
        kwargs_10780 = {}
        # Getting the type of 'len' (line 345)
        len_10777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 23), 'len', False)
        # Calling len(args, kwargs) (line 345)
        len_call_result_10781 = invoke(stypy.reporting.localization.Localization(__file__, 345, 23), len_10777, *[comparators_10779], **kwargs_10780)
        
        # Processing the call keyword arguments (line 345)
        kwargs_10782 = {}
        # Getting the type of 'range' (line 345)
        range_10776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 17), 'range', False)
        # Calling range(args, kwargs) (line 345)
        range_call_result_10783 = invoke(stypy.reporting.localization.Localization(__file__, 345, 17), range_10776, *[len_call_result_10781], **kwargs_10782)
        
        # Assigning a type to the variable 'range_call_result_10783' (line 345)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'range_call_result_10783', range_call_result_10783)
        # Testing if the for loop is going to be iterated (line 345)
        # Testing the type of a for loop iterable (line 345)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 345, 8), range_call_result_10783)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 345, 8), range_call_result_10783):
            # Getting the type of the for loop variable (line 345)
            for_loop_var_10784 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 345, 8), range_call_result_10783)
            # Assigning a type to the variable 'i' (line 345)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'i', for_loop_var_10784)
            # SSA begins for a for statement (line 345)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 347):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 347)
            # Processing the call arguments (line 347)
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 347)
            i_10787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 64), 'i', False)
            # Getting the type of 'node' (line 347)
            node_10788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 47), 'node', False)
            # Obtaining the member 'comparators' of a type (line 347)
            comparators_10789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 47), node_10788, 'comparators')
            # Obtaining the member '__getitem__' of a type (line 347)
            getitem___10790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 47), comparators_10789, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 347)
            subscript_call_result_10791 = invoke(stypy.reporting.localization.Localization(__file__, 347, 47), getitem___10790, i_10787)
            
            # Getting the type of 'context' (line 347)
            context_10792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 68), 'context', False)
            # Processing the call keyword arguments (line 347)
            kwargs_10793 = {}
            # Getting the type of 'self' (line 347)
            self_10785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 347)
            visit_10786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 36), self_10785, 'visit')
            # Calling visit(args, kwargs) (line 347)
            visit_call_result_10794 = invoke(stypy.reporting.localization.Localization(__file__, 347, 36), visit_10786, *[subscript_call_result_10791, context_10792], **kwargs_10793)
            
            # Assigning a type to the variable 'call_assignment_9476' (line 347)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'call_assignment_9476', visit_call_result_10794)
            
            # Assigning a Call to a Name (line 347):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9476' (line 347)
            call_assignment_9476_10795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'call_assignment_9476', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10796 = stypy_get_value_from_tuple(call_assignment_9476_10795, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9477' (line 347)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'call_assignment_9477', stypy_get_value_from_tuple_call_result_10796)
            
            # Assigning a Name to a Name (line 347):
            # Getting the type of 'call_assignment_9477' (line 347)
            call_assignment_9477_10797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'call_assignment_9477')
            # Assigning a type to the variable 'right_stmts' (line 347)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'right_stmts', call_assignment_9477_10797)
            
            # Assigning a Call to a Name (line 347):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9476' (line 347)
            call_assignment_9476_10798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'call_assignment_9476', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10799 = stypy_get_value_from_tuple(call_assignment_9476_10798, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9478' (line 347)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'call_assignment_9478', stypy_get_value_from_tuple_call_result_10799)
            
            # Assigning a Name to a Name (line 347):
            # Getting the type of 'call_assignment_9478' (line 347)
            call_assignment_9478_10800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'call_assignment_9478')
            # Assigning a type to the variable 'rigth_op' (line 347)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 25), 'rigth_op', call_assignment_9478_10800)
            
            
            # Call to type(...): (line 348)
            # Processing the call arguments (line 348)
            # Getting the type of 'rigth_op' (line 348)
            rigth_op_10802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 20), 'rigth_op', False)
            # Processing the call keyword arguments (line 348)
            kwargs_10803 = {}
            # Getting the type of 'type' (line 348)
            type_10801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 15), 'type', False)
            # Calling type(args, kwargs) (line 348)
            type_call_result_10804 = invoke(stypy.reporting.localization.Localization(__file__, 348, 15), type_10801, *[rigth_op_10802], **kwargs_10803)
            
            # Getting the type of 'ast' (line 348)
            ast_10805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 33), 'ast')
            # Obtaining the member 'Tuple' of a type (line 348)
            Tuple_10806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 33), ast_10805, 'Tuple')
            # Applying the binary operator 'is' (line 348)
            result_is__10807 = python_operator(stypy.reporting.localization.Localization(__file__, 348, 15), 'is', type_call_result_10804, Tuple_10806)
            
            # Testing if the type of an if condition is none (line 348)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 348, 12), result_is__10807):
                pass
            else:
                
                # Testing the type of an if condition (line 348)
                if_condition_10808 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 348, 12), result_is__10807)
                # Assigning a type to the variable 'if_condition_10808' (line 348)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'if_condition_10808', if_condition_10808)
                # SSA begins for if statement (line 348)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Name (line 349):
                
                # Assigning a Subscript to a Name (line 349):
                
                # Obtaining the type of the subscript
                int_10809 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 349, 41), 'int')
                # Getting the type of 'rigth_op' (line 349)
                rigth_op_10810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 27), 'rigth_op')
                # Obtaining the member 'elts' of a type (line 349)
                elts_10811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 27), rigth_op_10810, 'elts')
                # Obtaining the member '__getitem__' of a type (line 349)
                getitem___10812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 27), elts_10811, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 349)
                subscript_call_result_10813 = invoke(stypy.reporting.localization.Localization(__file__, 349, 27), getitem___10812, int_10809)
                
                # Assigning a type to the variable 'rigth_op' (line 349)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 16), 'rigth_op', subscript_call_result_10813)
                # SSA join for if statement (line 348)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to append(...): (line 351)
            # Processing the call arguments (line 351)
            # Getting the type of 'right_stmts' (line 351)
            right_stmts_10816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 36), 'right_stmts', False)
            # Processing the call keyword arguments (line 351)
            kwargs_10817 = {}
            # Getting the type of 'all_assign_stmts' (line 351)
            all_assign_stmts_10814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 12), 'all_assign_stmts', False)
            # Obtaining the member 'append' of a type (line 351)
            append_10815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 12), all_assign_stmts_10814, 'append')
            # Calling append(args, kwargs) (line 351)
            append_call_result_10818 = invoke(stypy.reporting.localization.Localization(__file__, 351, 12), append_10815, *[right_stmts_10816], **kwargs_10817)
            
            
            # Assigning a Call to a Name (line 354):
            
            # Assigning a Call to a Name (line 354):
            
            # Call to lower(...): (line 354)
            # Processing the call keyword arguments (line 354)
            kwargs_10829 = {}
            
            # Call to type(...): (line 354)
            # Processing the call arguments (line 354)
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 354)
            i_10820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 42), 'i', False)
            # Getting the type of 'node' (line 354)
            node_10821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 33), 'node', False)
            # Obtaining the member 'ops' of a type (line 354)
            ops_10822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 33), node_10821, 'ops')
            # Obtaining the member '__getitem__' of a type (line 354)
            getitem___10823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 33), ops_10822, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 354)
            subscript_call_result_10824 = invoke(stypy.reporting.localization.Localization(__file__, 354, 33), getitem___10823, i_10820)
            
            # Processing the call keyword arguments (line 354)
            kwargs_10825 = {}
            # Getting the type of 'type' (line 354)
            type_10819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 28), 'type', False)
            # Calling type(args, kwargs) (line 354)
            type_call_result_10826 = invoke(stypy.reporting.localization.Localization(__file__, 354, 28), type_10819, *[subscript_call_result_10824], **kwargs_10825)
            
            # Obtaining the member '__name__' of a type (line 354)
            name___10827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), type_call_result_10826, '__name__')
            # Obtaining the member 'lower' of a type (line 354)
            lower_10828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 354, 28), name___10827, 'lower')
            # Calling lower(args, kwargs) (line 354)
            lower_call_result_10830 = invoke(stypy.reporting.localization.Localization(__file__, 354, 28), lower_10828, *[], **kwargs_10829)
            
            # Assigning a type to the variable 'operator_name' (line 354)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 354, 12), 'operator_name', lower_call_result_10830)
            
            # Assigning a Call to a Tuple (line 355):
            
            # Assigning a Call to a Name:
            
            # Call to create_binary_operator(...): (line 355)
            # Processing the call arguments (line 355)
            # Getting the type of 'operator_name' (line 355)
            operator_name_10833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 89), 'operator_name', False)
            # Getting the type of 'left_op' (line 355)
            left_op_10834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 104), 'left_op', False)
            # Getting the type of 'rigth_op' (line 355)
            rigth_op_10835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 113), 'rigth_op', False)
            # Getting the type of 'node' (line 356)
            node_10836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 84), 'node', False)
            # Obtaining the member 'lineno' of a type (line 356)
            lineno_10837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 84), node_10836, 'lineno')
            # Getting the type of 'node' (line 356)
            node_10838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 97), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 356)
            col_offset_10839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 97), node_10838, 'col_offset')
            # Processing the call keyword arguments (line 355)
            kwargs_10840 = {}
            # Getting the type of 'stypy_functions_copy' (line 355)
            stypy_functions_copy_10831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 45), 'stypy_functions_copy', False)
            # Obtaining the member 'create_binary_operator' of a type (line 355)
            create_binary_operator_10832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 355, 45), stypy_functions_copy_10831, 'create_binary_operator')
            # Calling create_binary_operator(args, kwargs) (line 355)
            create_binary_operator_call_result_10841 = invoke(stypy.reporting.localization.Localization(__file__, 355, 45), create_binary_operator_10832, *[operator_name_10833, left_op_10834, rigth_op_10835, lineno_10837, col_offset_10839], **kwargs_10840)
            
            # Assigning a type to the variable 'call_assignment_9479' (line 355)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'call_assignment_9479', create_binary_operator_call_result_10841)
            
            # Assigning a Call to a Name (line 355):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9479' (line 355)
            call_assignment_9479_10842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'call_assignment_9479', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10843 = stypy_get_value_from_tuple(call_assignment_9479_10842, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9480' (line 355)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'call_assignment_9480', stypy_get_value_from_tuple_call_result_10843)
            
            # Assigning a Name to a Name (line 355):
            # Getting the type of 'call_assignment_9480' (line 355)
            call_assignment_9480_10844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'call_assignment_9480')
            # Assigning a type to the variable 'operator_stmts' (line 355)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'operator_stmts', call_assignment_9480_10844)
            
            # Assigning a Call to a Name (line 355):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9479' (line 355)
            call_assignment_9479_10845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'call_assignment_9479', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10846 = stypy_get_value_from_tuple(call_assignment_9479_10845, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9481' (line 355)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'call_assignment_9481', stypy_get_value_from_tuple_call_result_10846)
            
            # Assigning a Name to a Name (line 355):
            # Getting the type of 'call_assignment_9481' (line 355)
            call_assignment_9481_10847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 355, 12), 'call_assignment_9481')
            # Assigning a type to the variable 'temp_op_result' (line 355)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 355, 28), 'temp_op_result', call_assignment_9481_10847)
            
            # Call to append(...): (line 357)
            # Processing the call arguments (line 357)
            # Getting the type of 'operator_stmts' (line 357)
            operator_stmts_10850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 36), 'operator_stmts', False)
            # Processing the call keyword arguments (line 357)
            kwargs_10851 = {}
            # Getting the type of 'all_assign_stmts' (line 357)
            all_assign_stmts_10848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'all_assign_stmts', False)
            # Obtaining the member 'append' of a type (line 357)
            append_10849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 12), all_assign_stmts_10848, 'append')
            # Calling append(args, kwargs) (line 357)
            append_call_result_10852 = invoke(stypy.reporting.localization.Localization(__file__, 357, 12), append_10849, *[operator_stmts_10850], **kwargs_10851)
            
            
            # Assigning a Tuple to a Tuple (line 361):
            
            # Assigning a Name to a Name (line 361):
            # Getting the type of 'right_stmts' (line 361)
            right_stmts_10853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 34), 'right_stmts')
            # Assigning a type to the variable 'tuple_assignment_9482' (line 361)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 12), 'tuple_assignment_9482', right_stmts_10853)
            
            # Assigning a Name to a Name (line 361):
            # Getting the type of 'rigth_op' (line 361)
            rigth_op_10854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 47), 'rigth_op')
            # Assigning a type to the variable 'tuple_assignment_9483' (line 361)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 12), 'tuple_assignment_9483', rigth_op_10854)
            
            # Assigning a Name to a Name (line 361):
            # Getting the type of 'tuple_assignment_9482' (line 361)
            tuple_assignment_9482_10855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 12), 'tuple_assignment_9482')
            # Assigning a type to the variable 'left_stmts' (line 361)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 12), 'left_stmts', tuple_assignment_9482_10855)
            
            # Assigning a Name to a Name (line 361):
            # Getting the type of 'tuple_assignment_9483' (line 361)
            tuple_assignment_9483_10856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 12), 'tuple_assignment_9483')
            # Assigning a type to the variable 'left_op' (line 361)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 24), 'left_op', tuple_assignment_9483_10856)
            
            # Getting the type of 'i' (line 363)
            i_10857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 15), 'i')
            int_10858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 363, 20), 'int')
            # Applying the binary operator '>=' (line 363)
            result_ge_10859 = python_operator(stypy.reporting.localization.Localization(__file__, 363, 15), '>=', i_10857, int_10858)
            
            # Testing if the type of an if condition is none (line 363)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 363, 12), result_ge_10859):
                
                # Assigning a Name to a Name (line 375):
                
                # Assigning a Name to a Name (line 375):
                # Getting the type of 'temp_op_result' (line 375)
                temp_op_result_10883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 'temp_op_result')
                # Assigning a type to the variable 'final_op_result' (line 375)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 16), 'final_op_result', temp_op_result_10883)
            else:
                
                # Testing the type of an if condition (line 363)
                if_condition_10860 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 363, 12), result_ge_10859)
                # Assigning a type to the variable 'if_condition_10860' (line 363)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'if_condition_10860', if_condition_10860)
                # SSA begins for if statement (line 363)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 366):
                
                # Assigning a Call to a Name:
                
                # Call to create_binary_operator(...): (line 366)
                # Processing the call arguments (line 366)
                str_10863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 367, 20), 'str', 'and_')
                # Getting the type of 'final_op_result' (line 368)
                final_op_result_10864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 20), 'final_op_result', False)
                # Getting the type of 'temp_op_result' (line 369)
                temp_op_result_10865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 20), 'temp_op_result', False)
                # Getting the type of 'node' (line 370)
                node_10866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 20), 'node', False)
                # Obtaining the member 'lineno' of a type (line 370)
                lineno_10867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 20), node_10866, 'lineno')
                # Getting the type of 'node' (line 371)
                node_10868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 20), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 371)
                col_offset_10869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 371, 20), node_10868, 'col_offset')
                # Processing the call keyword arguments (line 366)
                kwargs_10870 = {}
                # Getting the type of 'stypy_functions_copy' (line 366)
                stypy_functions_copy_10861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 50), 'stypy_functions_copy', False)
                # Obtaining the member 'create_binary_operator' of a type (line 366)
                create_binary_operator_10862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 50), stypy_functions_copy_10861, 'create_binary_operator')
                # Calling create_binary_operator(args, kwargs) (line 366)
                create_binary_operator_call_result_10871 = invoke(stypy.reporting.localization.Localization(__file__, 366, 50), create_binary_operator_10862, *[str_10863, final_op_result_10864, temp_op_result_10865, lineno_10867, col_offset_10869], **kwargs_10870)
                
                # Assigning a type to the variable 'call_assignment_9484' (line 366)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'call_assignment_9484', create_binary_operator_call_result_10871)
                
                # Assigning a Call to a Name (line 366):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9484' (line 366)
                call_assignment_9484_10872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'call_assignment_9484', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_10873 = stypy_get_value_from_tuple(call_assignment_9484_10872, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_9485' (line 366)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'call_assignment_9485', stypy_get_value_from_tuple_call_result_10873)
                
                # Assigning a Name to a Name (line 366):
                # Getting the type of 'call_assignment_9485' (line 366)
                call_assignment_9485_10874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'call_assignment_9485')
                # Assigning a type to the variable 'operator_stmts' (line 366)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'operator_stmts', call_assignment_9485_10874)
                
                # Assigning a Call to a Name (line 366):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_9484' (line 366)
                call_assignment_9484_10875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'call_assignment_9484', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_10876 = stypy_get_value_from_tuple(call_assignment_9484_10875, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_9486' (line 366)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'call_assignment_9486', stypy_get_value_from_tuple_call_result_10876)
                
                # Assigning a Name to a Name (line 366):
                # Getting the type of 'call_assignment_9486' (line 366)
                call_assignment_9486_10877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 16), 'call_assignment_9486')
                # Assigning a type to the variable 'final_op_result' (line 366)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 366, 32), 'final_op_result', call_assignment_9486_10877)
                
                # Call to append(...): (line 373)
                # Processing the call arguments (line 373)
                # Getting the type of 'operator_stmts' (line 373)
                operator_stmts_10880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 40), 'operator_stmts', False)
                # Processing the call keyword arguments (line 373)
                kwargs_10881 = {}
                # Getting the type of 'all_assign_stmts' (line 373)
                all_assign_stmts_10878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 16), 'all_assign_stmts', False)
                # Obtaining the member 'append' of a type (line 373)
                append_10879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 16), all_assign_stmts_10878, 'append')
                # Calling append(args, kwargs) (line 373)
                append_call_result_10882 = invoke(stypy.reporting.localization.Localization(__file__, 373, 16), append_10879, *[operator_stmts_10880], **kwargs_10881)
                
                # SSA branch for the else part of an if statement (line 363)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Name to a Name (line 375):
                
                # Assigning a Name to a Name (line 375):
                # Getting the type of 'temp_op_result' (line 375)
                temp_op_result_10883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 'temp_op_result')
                # Assigning a type to the variable 'final_op_result' (line 375)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 16), 'final_op_result', temp_op_result_10883)
                # SSA join for if statement (line 363)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Name (line 377):
            
            # Assigning a Name to a Name (line 377):
            # Getting the type of 'temp_op_result' (line 377)
            temp_op_result_10884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 40), 'temp_op_result')
            # Assigning a type to the variable 'previous_operation_result' (line 377)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'previous_operation_result', temp_op_result_10884)
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Obtaining an instance of the builtin type 'tuple' (line 379)
        tuple_10885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 379, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 379)
        # Adding element type (line 379)
        
        # Call to flatten_lists(...): (line 379)
        # Processing the call arguments (line 379)
        
        # Call to create_blank_line(...): (line 379)
        # Processing the call keyword arguments (line 379)
        kwargs_10890 = {}
        # Getting the type of 'stypy_functions_copy' (line 379)
        stypy_functions_copy_10888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 379)
        create_blank_line_10889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 50), stypy_functions_copy_10888, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 379)
        create_blank_line_call_result_10891 = invoke(stypy.reporting.localization.Localization(__file__, 379, 50), create_blank_line_10889, *[], **kwargs_10890)
        
        # Getting the type of 'all_assign_stmts' (line 380)
        all_assign_stmts_10892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 45), 'all_assign_stmts', False)
        
        # Call to create_blank_line(...): (line 381)
        # Processing the call keyword arguments (line 381)
        kwargs_10895 = {}
        # Getting the type of 'stypy_functions_copy' (line 381)
        stypy_functions_copy_10893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 381)
        create_blank_line_10894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 381, 45), stypy_functions_copy_10893, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 381)
        create_blank_line_call_result_10896 = invoke(stypy.reporting.localization.Localization(__file__, 381, 45), create_blank_line_10894, *[], **kwargs_10895)
        
        # Processing the call keyword arguments (line 379)
        kwargs_10897 = {}
        # Getting the type of 'stypy_functions_copy' (line 379)
        stypy_functions_copy_10886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 379)
        flatten_lists_10887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 15), stypy_functions_copy_10886, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 379)
        flatten_lists_call_result_10898 = invoke(stypy.reporting.localization.Localization(__file__, 379, 15), flatten_lists_10887, *[create_blank_line_call_result_10891, all_assign_stmts_10892, create_blank_line_call_result_10896], **kwargs_10897)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 15), tuple_10885, flatten_lists_call_result_10898)
        # Adding element type (line 379)
        # Getting the type of 'final_op_result' (line 381)
        final_op_result_10899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 88), 'final_op_result')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 379, 15), tuple_10885, final_op_result_10899)
        
        # Assigning a type to the variable 'stypy_return_type' (line 379)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 8), 'stypy_return_type', tuple_10885)
        
        # ################# End of 'visit_Compare(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Compare' in the type store
        # Getting the type of 'stypy_return_type' (line 329)
        stypy_return_type_10900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_10900)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Compare'
        return stypy_return_type_10900


    @norecursion
    def visit_Call(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Call'
        module_type_store = module_type_store.open_function_context('visit_Call', 385, 4, False)
        # Assigning a type to the variable 'self' (line 386)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 386, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Call')
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Call.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Call', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Call', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Call(...)' code ##################

        
        # Call to append(...): (line 388)
        # Processing the call arguments (line 388)
        # Getting the type of 'node' (line 388)
        node_10903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 23), 'node', False)
        # Processing the call keyword arguments (line 388)
        kwargs_10904 = {}
        # Getting the type of 'context' (line 388)
        context_10901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 388)
        append_10902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 388, 8), context_10901, 'append')
        # Calling append(args, kwargs) (line 388)
        append_call_result_10905 = invoke(stypy.reporting.localization.Localization(__file__, 388, 8), append_10902, *[node_10903], **kwargs_10904)
        
        
        # Assigning a Call to a Name (line 390):
        
        # Assigning a Call to a Name (line 390):
        
        # Call to create_localization(...): (line 390)
        # Processing the call arguments (line 390)
        # Getting the type of 'node' (line 390)
        node_10908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 390)
        lineno_10909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 64), node_10908, 'lineno')
        # Getting the type of 'node' (line 390)
        node_10910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 390)
        col_offset_10911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 77), node_10910, 'col_offset')
        # Processing the call keyword arguments (line 390)
        kwargs_10912 = {}
        # Getting the type of 'stypy_functions_copy' (line 390)
        stypy_functions_copy_10906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 390)
        create_localization_10907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 23), stypy_functions_copy_10906, 'create_localization')
        # Calling create_localization(args, kwargs) (line 390)
        create_localization_call_result_10913 = invoke(stypy.reporting.localization.Localization(__file__, 390, 23), create_localization_10907, *[lineno_10909, col_offset_10911], **kwargs_10912)
        
        # Assigning a type to the variable 'localization' (line 390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 8), 'localization', create_localization_call_result_10913)
        
        # Assigning a List to a Name (line 391):
        
        # Assigning a List to a Name (line 391):
        
        # Obtaining an instance of the builtin type 'list' (line 391)
        list_10914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 391, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 391)
        
        # Assigning a type to the variable 'call_stmts' (line 391)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 391, 8), 'call_stmts', list_10914)
        
        # Assigning a List to a Name (line 392):
        
        # Assigning a List to a Name (line 392):
        
        # Obtaining an instance of the builtin type 'list' (line 392)
        list_10915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 392, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 392)
        
        # Assigning a type to the variable 'arguments' (line 392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'arguments', list_10915)
        
        # Assigning a Dict to a Name (line 393):
        
        # Assigning a Dict to a Name (line 393):
        
        # Obtaining an instance of the builtin type 'dict' (line 393)
        dict_10916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 28), 'dict')
        # Adding type elements to the builtin type 'dict' instance (line 393)
        
        # Assigning a type to the variable 'keyword_arguments' (line 393)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 8), 'keyword_arguments', dict_10916)
        
        # Assigning a Call to a Name (line 395):
        
        # Assigning a Call to a Name (line 395):
        
        # Call to get_descritive_element_name(...): (line 395)
        # Processing the call arguments (line 395)
        # Getting the type of 'node' (line 395)
        node_10919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 72), 'node', False)
        # Obtaining the member 'func' of a type (line 395)
        func_10920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 72), node_10919, 'func')
        # Processing the call keyword arguments (line 395)
        kwargs_10921 = {}
        # Getting the type of 'stypy_functions_copy' (line 395)
        stypy_functions_copy_10917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'get_descritive_element_name' of a type (line 395)
        get_descritive_element_name_10918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 23), stypy_functions_copy_10917, 'get_descritive_element_name')
        # Calling get_descritive_element_name(args, kwargs) (line 395)
        get_descritive_element_name_call_result_10922 = invoke(stypy.reporting.localization.Localization(__file__, 395, 23), get_descritive_element_name_10918, *[func_10920], **kwargs_10921)
        
        # Assigning a type to the variable 'name_to_call' (line 395)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 8), 'name_to_call', get_descritive_element_name_call_result_10922)
        
        # Call to append(...): (line 398)
        # Processing the call arguments (line 398)
        
        # Call to create_src_comment(...): (line 398)
        # Processing the call arguments (line 398)
        
        # Call to format(...): (line 398)
        # Processing the call arguments (line 398)
        # Getting the type of 'name_to_call' (line 398)
        name_to_call_10929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 89), 'name_to_call', False)
        # Processing the call keyword arguments (line 398)
        kwargs_10930 = {}
        str_10927 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 398, 66), 'str', "Calling '{0}'")
        # Obtaining the member 'format' of a type (line 398)
        format_10928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 66), str_10927, 'format')
        # Calling format(args, kwargs) (line 398)
        format_call_result_10931 = invoke(stypy.reporting.localization.Localization(__file__, 398, 66), format_10928, *[name_to_call_10929], **kwargs_10930)
        
        # Getting the type of 'node' (line 398)
        node_10932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 104), 'node', False)
        # Obtaining the member 'lineno' of a type (line 398)
        lineno_10933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 104), node_10932, 'lineno')
        # Processing the call keyword arguments (line 398)
        kwargs_10934 = {}
        # Getting the type of 'stypy_functions_copy' (line 398)
        stypy_functions_copy_10925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 398)
        create_src_comment_10926 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 26), stypy_functions_copy_10925, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 398)
        create_src_comment_call_result_10935 = invoke(stypy.reporting.localization.Localization(__file__, 398, 26), create_src_comment_10926, *[format_call_result_10931, lineno_10933], **kwargs_10934)
        
        # Processing the call keyword arguments (line 398)
        kwargs_10936 = {}
        # Getting the type of 'call_stmts' (line 398)
        call_stmts_10923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 398, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 398)
        append_10924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 398, 8), call_stmts_10923, 'append')
        # Calling append(args, kwargs) (line 398)
        append_call_result_10937 = invoke(stypy.reporting.localization.Localization(__file__, 398, 8), append_10924, *[create_src_comment_call_result_10935], **kwargs_10936)
        
        
        # Call to append(...): (line 399)
        # Processing the call arguments (line 399)
        # Getting the type of 'node' (line 399)
        node_10940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 23), 'node', False)
        # Processing the call keyword arguments (line 399)
        kwargs_10941 = {}
        # Getting the type of 'context' (line 399)
        context_10938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 399, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 399)
        append_10939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 399, 8), context_10938, 'append')
        # Calling append(args, kwargs) (line 399)
        append_call_result_10942 = invoke(stypy.reporting.localization.Localization(__file__, 399, 8), append_10939, *[node_10940], **kwargs_10941)
        
        
        # Assigning a Call to a Tuple (line 401):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 401)
        # Processing the call arguments (line 401)
        # Getting the type of 'node' (line 401)
        node_10945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 57), 'node', False)
        # Obtaining the member 'func' of a type (line 401)
        func_10946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 57), node_10945, 'func')
        # Getting the type of 'context' (line 401)
        context_10947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 68), 'context', False)
        # Processing the call keyword arguments (line 401)
        kwargs_10948 = {}
        # Getting the type of 'self' (line 401)
        self_10943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 46), 'self', False)
        # Obtaining the member 'visit' of a type (line 401)
        visit_10944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 401, 46), self_10943, 'visit')
        # Calling visit(args, kwargs) (line 401)
        visit_call_result_10949 = invoke(stypy.reporting.localization.Localization(__file__, 401, 46), visit_10944, *[func_10946, context_10947], **kwargs_10948)
        
        # Assigning a type to the variable 'call_assignment_9487' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'call_assignment_9487', visit_call_result_10949)
        
        # Assigning a Call to a Name (line 401):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9487' (line 401)
        call_assignment_9487_10950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'call_assignment_9487', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10951 = stypy_get_value_from_tuple(call_assignment_9487_10950, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9488' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'call_assignment_9488', stypy_get_value_from_tuple_call_result_10951)
        
        # Assigning a Name to a Name (line 401):
        # Getting the type of 'call_assignment_9488' (line 401)
        call_assignment_9488_10952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'call_assignment_9488')
        # Assigning a type to the variable 'get_type_of_stmts' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'get_type_of_stmts', call_assignment_9488_10952)
        
        # Assigning a Call to a Name (line 401):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9487' (line 401)
        call_assignment_9487_10953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'call_assignment_9487', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_10954 = stypy_get_value_from_tuple(call_assignment_9487_10953, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9489' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'call_assignment_9489', stypy_get_value_from_tuple_call_result_10954)
        
        # Assigning a Name to a Name (line 401):
        # Getting the type of 'call_assignment_9489' (line 401)
        call_assignment_9489_10955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 401, 8), 'call_assignment_9489')
        # Assigning a type to the variable 'function_to_call' (line 401)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 27), 'function_to_call', call_assignment_9489_10955)
        
        # Call to remove(...): (line 402)
        # Processing the call arguments (line 402)
        # Getting the type of 'node' (line 402)
        node_10958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 23), 'node', False)
        # Processing the call keyword arguments (line 402)
        kwargs_10959 = {}
        # Getting the type of 'context' (line 402)
        context_10956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 402, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 402)
        remove_10957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 402, 8), context_10956, 'remove')
        # Calling remove(args, kwargs) (line 402)
        remove_call_result_10960 = invoke(stypy.reporting.localization.Localization(__file__, 402, 8), remove_10957, *[node_10958], **kwargs_10959)
        
        
        
        # Call to len(...): (line 404)
        # Processing the call arguments (line 404)
        # Getting the type of 'node' (line 404)
        node_10962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 15), 'node', False)
        # Obtaining the member 'args' of a type (line 404)
        args_10963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 15), node_10962, 'args')
        # Processing the call keyword arguments (line 404)
        kwargs_10964 = {}
        # Getting the type of 'len' (line 404)
        len_10961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 11), 'len', False)
        # Calling len(args, kwargs) (line 404)
        len_call_result_10965 = invoke(stypy.reporting.localization.Localization(__file__, 404, 11), len_10961, *[args_10963], **kwargs_10964)
        
        int_10966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 28), 'int')
        # Applying the binary operator '>' (line 404)
        result_gt_10967 = python_operator(stypy.reporting.localization.Localization(__file__, 404, 11), '>', len_call_result_10965, int_10966)
        
        # Testing if the type of an if condition is none (line 404)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 404, 8), result_gt_10967):
            pass
        else:
            
            # Testing the type of an if condition (line 404)
            if_condition_10968 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 404, 8), result_gt_10967)
            # Assigning a type to the variable 'if_condition_10968' (line 404)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 404, 8), 'if_condition_10968', if_condition_10968)
            # SSA begins for if statement (line 404)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 405)
            # Processing the call arguments (line 405)
            
            # Call to create_src_comment(...): (line 405)
            # Processing the call arguments (line 405)
            str_10973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 405, 70), 'str', 'Processing call arguments')
            # Getting the type of 'node' (line 405)
            node_10974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 99), 'node', False)
            # Obtaining the member 'lineno' of a type (line 405)
            lineno_10975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 99), node_10974, 'lineno')
            # Processing the call keyword arguments (line 405)
            kwargs_10976 = {}
            # Getting the type of 'stypy_functions_copy' (line 405)
            stypy_functions_copy_10971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 30), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 405)
            create_src_comment_10972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 30), stypy_functions_copy_10971, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 405)
            create_src_comment_call_result_10977 = invoke(stypy.reporting.localization.Localization(__file__, 405, 30), create_src_comment_10972, *[str_10973, lineno_10975], **kwargs_10976)
            
            # Processing the call keyword arguments (line 405)
            kwargs_10978 = {}
            # Getting the type of 'call_stmts' (line 405)
            call_stmts_10969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 405)
            append_10970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 12), call_stmts_10969, 'append')
            # Calling append(args, kwargs) (line 405)
            append_call_result_10979 = invoke(stypy.reporting.localization.Localization(__file__, 405, 12), append_10970, *[create_src_comment_call_result_10977], **kwargs_10978)
            
            # SSA join for if statement (line 404)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Getting the type of 'node' (line 408)
        node_10980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 19), 'node')
        # Obtaining the member 'args' of a type (line 408)
        args_10981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 19), node_10980, 'args')
        # Assigning a type to the variable 'args_10981' (line 408)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 8), 'args_10981', args_10981)
        # Testing if the for loop is going to be iterated (line 408)
        # Testing the type of a for loop iterable (line 408)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 408, 8), args_10981)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 408, 8), args_10981):
            # Getting the type of the for loop variable (line 408)
            for_loop_var_10982 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 408, 8), args_10981)
            # Assigning a type to the variable 'arg' (line 408)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 408, 8), 'arg', for_loop_var_10982)
            # SSA begins for a for statement (line 408)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 409):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 409)
            # Processing the call arguments (line 409)
            # Getting the type of 'arg' (line 409)
            arg_10985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 37), 'arg', False)
            # Getting the type of 'context' (line 409)
            context_10986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 42), 'context', False)
            # Processing the call keyword arguments (line 409)
            kwargs_10987 = {}
            # Getting the type of 'self' (line 409)
            self_10983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 26), 'self', False)
            # Obtaining the member 'visit' of a type (line 409)
            visit_10984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 409, 26), self_10983, 'visit')
            # Calling visit(args, kwargs) (line 409)
            visit_call_result_10988 = invoke(stypy.reporting.localization.Localization(__file__, 409, 26), visit_10984, *[arg_10985, context_10986], **kwargs_10987)
            
            # Assigning a type to the variable 'call_assignment_9490' (line 409)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'call_assignment_9490', visit_call_result_10988)
            
            # Assigning a Call to a Name (line 409):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9490' (line 409)
            call_assignment_9490_10989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'call_assignment_9490', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10990 = stypy_get_value_from_tuple(call_assignment_9490_10989, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9491' (line 409)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'call_assignment_9491', stypy_get_value_from_tuple_call_result_10990)
            
            # Assigning a Name to a Name (line 409):
            # Getting the type of 'call_assignment_9491' (line 409)
            call_assignment_9491_10991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'call_assignment_9491')
            # Assigning a type to the variable 'stmts' (line 409)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'stmts', call_assignment_9491_10991)
            
            # Assigning a Call to a Name (line 409):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9490' (line 409)
            call_assignment_9490_10992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'call_assignment_9490', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_10993 = stypy_get_value_from_tuple(call_assignment_9490_10992, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9492' (line 409)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'call_assignment_9492', stypy_get_value_from_tuple_call_result_10993)
            
            # Assigning a Name to a Name (line 409):
            # Getting the type of 'call_assignment_9492' (line 409)
            call_assignment_9492_10994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 409, 12), 'call_assignment_9492')
            # Assigning a type to the variable 'temp' (line 409)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 409, 19), 'temp', call_assignment_9492_10994)
            
            # Call to append(...): (line 410)
            # Processing the call arguments (line 410)
            # Getting the type of 'stmts' (line 410)
            stmts_10997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 30), 'stmts', False)
            # Processing the call keyword arguments (line 410)
            kwargs_10998 = {}
            # Getting the type of 'call_stmts' (line 410)
            call_stmts_10995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 410)
            append_10996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 12), call_stmts_10995, 'append')
            # Calling append(args, kwargs) (line 410)
            append_call_result_10999 = invoke(stypy.reporting.localization.Localization(__file__, 410, 12), append_10996, *[stmts_10997], **kwargs_10998)
            
            
            # Call to append(...): (line 411)
            # Processing the call arguments (line 411)
            # Getting the type of 'temp' (line 411)
            temp_11002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 29), 'temp', False)
            # Processing the call keyword arguments (line 411)
            kwargs_11003 = {}
            # Getting the type of 'arguments' (line 411)
            arguments_11000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 12), 'arguments', False)
            # Obtaining the member 'append' of a type (line 411)
            append_11001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 12), arguments_11000, 'append')
            # Calling append(args, kwargs) (line 411)
            append_call_result_11004 = invoke(stypy.reporting.localization.Localization(__file__, 411, 12), append_11001, *[temp_11002], **kwargs_11003)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Type idiom detected: calculating its left and rigth part (line 414)
        # Getting the type of 'node' (line 414)
        node_11005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 15), 'node')
        # Obtaining the member 'starargs' of a type (line 414)
        starargs_11006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 414, 15), node_11005, 'starargs')
        # Getting the type of 'None' (line 414)
        None_11007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 32), 'None')
        
        (may_be_11008, more_types_in_union_11009) = may_not_be_none(starargs_11006, None_11007)

        if may_be_11008:

            if more_types_in_union_11009:
                # Runtime conditional SSA (line 414)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Tuple (line 417):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 417)
            # Processing the call arguments (line 417)
            # Getting the type of 'node' (line 417)
            node_11012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 37), 'node', False)
            # Obtaining the member 'starargs' of a type (line 417)
            starargs_11013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 37), node_11012, 'starargs')
            # Getting the type of 'context' (line 417)
            context_11014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 52), 'context', False)
            # Processing the call keyword arguments (line 417)
            kwargs_11015 = {}
            # Getting the type of 'self' (line 417)
            self_11010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 26), 'self', False)
            # Obtaining the member 'visit' of a type (line 417)
            visit_11011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 26), self_11010, 'visit')
            # Calling visit(args, kwargs) (line 417)
            visit_call_result_11016 = invoke(stypy.reporting.localization.Localization(__file__, 417, 26), visit_11011, *[starargs_11013, context_11014], **kwargs_11015)
            
            # Assigning a type to the variable 'call_assignment_9493' (line 417)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'call_assignment_9493', visit_call_result_11016)
            
            # Assigning a Call to a Name (line 417):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9493' (line 417)
            call_assignment_9493_11017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'call_assignment_9493', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11018 = stypy_get_value_from_tuple(call_assignment_9493_11017, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9494' (line 417)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'call_assignment_9494', stypy_get_value_from_tuple_call_result_11018)
            
            # Assigning a Name to a Name (line 417):
            # Getting the type of 'call_assignment_9494' (line 417)
            call_assignment_9494_11019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'call_assignment_9494')
            # Assigning a type to the variable 'stmts' (line 417)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'stmts', call_assignment_9494_11019)
            
            # Assigning a Call to a Name (line 417):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9493' (line 417)
            call_assignment_9493_11020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'call_assignment_9493', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11021 = stypy_get_value_from_tuple(call_assignment_9493_11020, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9495' (line 417)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'call_assignment_9495', stypy_get_value_from_tuple_call_result_11021)
            
            # Assigning a Name to a Name (line 417):
            # Getting the type of 'call_assignment_9495' (line 417)
            call_assignment_9495_11022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 12), 'call_assignment_9495')
            # Assigning a type to the variable 'temp' (line 417)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 417, 19), 'temp', call_assignment_9495_11022)
            
            # Call to append(...): (line 418)
            # Processing the call arguments (line 418)
            # Getting the type of 'stmts' (line 418)
            stmts_11025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 30), 'stmts', False)
            # Processing the call keyword arguments (line 418)
            kwargs_11026 = {}
            # Getting the type of 'call_stmts' (line 418)
            call_stmts_11023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 418)
            append_11024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 12), call_stmts_11023, 'append')
            # Calling append(args, kwargs) (line 418)
            append_call_result_11027 = invoke(stypy.reporting.localization.Localization(__file__, 418, 12), append_11024, *[stmts_11025], **kwargs_11026)
            
            
            # Call to append(...): (line 419)
            # Processing the call arguments (line 419)
            # Getting the type of 'temp' (line 419)
            temp_11030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 29), 'temp', False)
            # Processing the call keyword arguments (line 419)
            kwargs_11031 = {}
            # Getting the type of 'arguments' (line 419)
            arguments_11028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 12), 'arguments', False)
            # Obtaining the member 'append' of a type (line 419)
            append_11029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 12), arguments_11028, 'append')
            # Calling append(args, kwargs) (line 419)
            append_call_result_11032 = invoke(stypy.reporting.localization.Localization(__file__, 419, 12), append_11029, *[temp_11030], **kwargs_11031)
            

            if more_types_in_union_11009:
                # SSA join for if statement (line 414)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Call to append(...): (line 421)
        # Processing the call arguments (line 421)
        
        # Call to create_src_comment(...): (line 421)
        # Processing the call arguments (line 421)
        str_11037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 66), 'str', 'Processing call keyword arguments')
        # Getting the type of 'node' (line 421)
        node_11038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 421)
        lineno_11039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 103), node_11038, 'lineno')
        # Processing the call keyword arguments (line 421)
        kwargs_11040 = {}
        # Getting the type of 'stypy_functions_copy' (line 421)
        stypy_functions_copy_11035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 421)
        create_src_comment_11036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 26), stypy_functions_copy_11035, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 421)
        create_src_comment_call_result_11041 = invoke(stypy.reporting.localization.Localization(__file__, 421, 26), create_src_comment_11036, *[str_11037, lineno_11039], **kwargs_11040)
        
        # Processing the call keyword arguments (line 421)
        kwargs_11042 = {}
        # Getting the type of 'call_stmts' (line 421)
        call_stmts_11033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 421)
        append_11034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 421, 8), call_stmts_11033, 'append')
        # Calling append(args, kwargs) (line 421)
        append_call_result_11043 = invoke(stypy.reporting.localization.Localization(__file__, 421, 8), append_11034, *[create_src_comment_call_result_11041], **kwargs_11042)
        
        
        # Getting the type of 'node' (line 424)
        node_11044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 19), 'node')
        # Obtaining the member 'keywords' of a type (line 424)
        keywords_11045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 19), node_11044, 'keywords')
        # Assigning a type to the variable 'keywords_11045' (line 424)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'keywords_11045', keywords_11045)
        # Testing if the for loop is going to be iterated (line 424)
        # Testing the type of a for loop iterable (line 424)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 424, 8), keywords_11045)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 424, 8), keywords_11045):
            # Getting the type of the for loop variable (line 424)
            for_loop_var_11046 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 424, 8), keywords_11045)
            # Assigning a type to the variable 'arg' (line 424)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 8), 'arg', for_loop_var_11046)
            # SSA begins for a for statement (line 424)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 425):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 425)
            # Processing the call arguments (line 425)
            # Getting the type of 'arg' (line 425)
            arg_11049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 37), 'arg', False)
            # Getting the type of 'context' (line 425)
            context_11050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 42), 'context', False)
            # Processing the call keyword arguments (line 425)
            kwargs_11051 = {}
            # Getting the type of 'self' (line 425)
            self_11047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 26), 'self', False)
            # Obtaining the member 'visit' of a type (line 425)
            visit_11048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 26), self_11047, 'visit')
            # Calling visit(args, kwargs) (line 425)
            visit_call_result_11052 = invoke(stypy.reporting.localization.Localization(__file__, 425, 26), visit_11048, *[arg_11049, context_11050], **kwargs_11051)
            
            # Assigning a type to the variable 'call_assignment_9496' (line 425)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'call_assignment_9496', visit_call_result_11052)
            
            # Assigning a Call to a Name (line 425):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9496' (line 425)
            call_assignment_9496_11053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'call_assignment_9496', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11054 = stypy_get_value_from_tuple(call_assignment_9496_11053, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9497' (line 425)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'call_assignment_9497', stypy_get_value_from_tuple_call_result_11054)
            
            # Assigning a Name to a Name (line 425):
            # Getting the type of 'call_assignment_9497' (line 425)
            call_assignment_9497_11055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'call_assignment_9497')
            # Assigning a type to the variable 'stmts' (line 425)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'stmts', call_assignment_9497_11055)
            
            # Assigning a Call to a Name (line 425):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9496' (line 425)
            call_assignment_9496_11056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'call_assignment_9496', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11057 = stypy_get_value_from_tuple(call_assignment_9496_11056, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9498' (line 425)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'call_assignment_9498', stypy_get_value_from_tuple_call_result_11057)
            
            # Assigning a Name to a Name (line 425):
            # Getting the type of 'call_assignment_9498' (line 425)
            call_assignment_9498_11058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 12), 'call_assignment_9498')
            # Assigning a type to the variable 'temp' (line 425)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 425, 19), 'temp', call_assignment_9498_11058)
            
            # Call to append(...): (line 426)
            # Processing the call arguments (line 426)
            # Getting the type of 'stmts' (line 426)
            stmts_11061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 30), 'stmts', False)
            # Processing the call keyword arguments (line 426)
            kwargs_11062 = {}
            # Getting the type of 'call_stmts' (line 426)
            call_stmts_11059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 426, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 426)
            append_11060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 426, 12), call_stmts_11059, 'append')
            # Calling append(args, kwargs) (line 426)
            append_call_result_11063 = invoke(stypy.reporting.localization.Localization(__file__, 426, 12), append_11060, *[stmts_11061], **kwargs_11062)
            
            
            # Assigning a Name to a Subscript (line 427):
            
            # Assigning a Name to a Subscript (line 427):
            # Getting the type of 'temp' (line 427)
            temp_11064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 41), 'temp')
            # Getting the type of 'keyword_arguments' (line 427)
            keyword_arguments_11065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 12), 'keyword_arguments')
            # Getting the type of 'arg' (line 427)
            arg_11066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 30), 'arg')
            # Obtaining the member 'arg' of a type (line 427)
            arg_11067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 30), arg_11066, 'arg')
            # Storing an element on a container (line 427)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 427, 12), keyword_arguments_11065, (arg_11067, temp_11064))
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Type idiom detected: calculating its left and rigth part (line 430)
        # Getting the type of 'node' (line 430)
        node_11068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 15), 'node')
        # Obtaining the member 'kwargs' of a type (line 430)
        kwargs_11069 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 15), node_11068, 'kwargs')
        # Getting the type of 'None' (line 430)
        None_11070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 30), 'None')
        
        (may_be_11071, more_types_in_union_11072) = may_not_be_none(kwargs_11069, None_11070)

        if may_be_11071:

            if more_types_in_union_11072:
                # Runtime conditional SSA (line 430)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Tuple (line 433):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 433)
            # Processing the call arguments (line 433)
            # Getting the type of 'node' (line 433)
            node_11075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 37), 'node', False)
            # Obtaining the member 'kwargs' of a type (line 433)
            kwargs_11076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 37), node_11075, 'kwargs')
            # Getting the type of 'context' (line 433)
            context_11077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 50), 'context', False)
            # Processing the call keyword arguments (line 433)
            kwargs_11078 = {}
            # Getting the type of 'self' (line 433)
            self_11073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 26), 'self', False)
            # Obtaining the member 'visit' of a type (line 433)
            visit_11074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 433, 26), self_11073, 'visit')
            # Calling visit(args, kwargs) (line 433)
            visit_call_result_11079 = invoke(stypy.reporting.localization.Localization(__file__, 433, 26), visit_11074, *[kwargs_11076, context_11077], **kwargs_11078)
            
            # Assigning a type to the variable 'call_assignment_9499' (line 433)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'call_assignment_9499', visit_call_result_11079)
            
            # Assigning a Call to a Name (line 433):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9499' (line 433)
            call_assignment_9499_11080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'call_assignment_9499', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11081 = stypy_get_value_from_tuple(call_assignment_9499_11080, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9500' (line 433)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'call_assignment_9500', stypy_get_value_from_tuple_call_result_11081)
            
            # Assigning a Name to a Name (line 433):
            # Getting the type of 'call_assignment_9500' (line 433)
            call_assignment_9500_11082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'call_assignment_9500')
            # Assigning a type to the variable 'stmts' (line 433)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'stmts', call_assignment_9500_11082)
            
            # Assigning a Call to a Name (line 433):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9499' (line 433)
            call_assignment_9499_11083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'call_assignment_9499', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11084 = stypy_get_value_from_tuple(call_assignment_9499_11083, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9501' (line 433)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'call_assignment_9501', stypy_get_value_from_tuple_call_result_11084)
            
            # Assigning a Name to a Name (line 433):
            # Getting the type of 'call_assignment_9501' (line 433)
            call_assignment_9501_11085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 433, 12), 'call_assignment_9501')
            # Assigning a type to the variable 'temp' (line 433)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 433, 19), 'temp', call_assignment_9501_11085)
            
            # Call to append(...): (line 434)
            # Processing the call arguments (line 434)
            # Getting the type of 'stmts' (line 434)
            stmts_11088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 30), 'stmts', False)
            # Processing the call keyword arguments (line 434)
            kwargs_11089 = {}
            # Getting the type of 'call_stmts' (line 434)
            call_stmts_11086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 434)
            append_11087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 12), call_stmts_11086, 'append')
            # Calling append(args, kwargs) (line 434)
            append_call_result_11090 = invoke(stypy.reporting.localization.Localization(__file__, 434, 12), append_11087, *[stmts_11088], **kwargs_11089)
            
            
            # Assigning a Name to a Subscript (line 435):
            
            # Assigning a Name to a Subscript (line 435):
            # Getting the type of 'temp' (line 435)
            temp_11091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 41), 'temp')
            # Getting the type of 'keyword_arguments' (line 435)
            keyword_arguments_11092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 12), 'keyword_arguments')
            # Getting the type of 'temp' (line 435)
            temp_11093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 30), 'temp')
            # Obtaining the member 'id' of a type (line 435)
            id_11094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 30), temp_11093, 'id')
            # Storing an element on a container (line 435)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 435, 12), keyword_arguments_11092, (id_11094, temp_11091))

            if more_types_in_union_11072:
                # SSA join for if statement (line 430)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Assigning a Call to a Name (line 438):
        
        # Assigning a Call to a Name (line 438):
        
        # Call to create_keyword_dict(...): (line 438)
        # Processing the call arguments (line 438)
        # Getting the type of 'keyword_arguments' (line 438)
        keyword_arguments_11097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 66), 'keyword_arguments', False)
        # Processing the call keyword arguments (line 438)
        kwargs_11098 = {}
        # Getting the type of 'data_structures_copy' (line 438)
        data_structures_copy_11095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 25), 'data_structures_copy', False)
        # Obtaining the member 'create_keyword_dict' of a type (line 438)
        create_keyword_dict_11096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 25), data_structures_copy_11095, 'create_keyword_dict')
        # Calling create_keyword_dict(args, kwargs) (line 438)
        create_keyword_dict_call_result_11099 = invoke(stypy.reporting.localization.Localization(__file__, 438, 25), create_keyword_dict_11096, *[keyword_arguments_11097], **kwargs_11098)
        
        # Assigning a type to the variable 'dict_arguments' (line 438)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 438, 8), 'dict_arguments', create_keyword_dict_call_result_11099)
        
        # Assigning a Call to a Tuple (line 439):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 439)
        # Processing the call arguments (line 439)
        # Getting the type of 'dict_arguments' (line 439)
        dict_arguments_11102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 81), 'dict_arguments', False)
        # Getting the type of 'node' (line 439)
        node_11103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 97), 'node', False)
        # Obtaining the member 'lineno' of a type (line 439)
        lineno_11104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 97), node_11103, 'lineno')
        # Getting the type of 'node' (line 440)
        node_11105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 76), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 440)
        col_offset_11106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 76), node_11105, 'col_offset')
        # Processing the call keyword arguments (line 439)
        kwargs_11107 = {}
        # Getting the type of 'stypy_functions_copy' (line 439)
        stypy_functions_copy_11100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 41), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 439)
        create_temp_Assign_11101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 41), stypy_functions_copy_11100, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 439)
        create_temp_Assign_call_result_11108 = invoke(stypy.reporting.localization.Localization(__file__, 439, 41), create_temp_Assign_11101, *[dict_arguments_11102, lineno_11104, col_offset_11106], **kwargs_11107)
        
        # Assigning a type to the variable 'call_assignment_9502' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'call_assignment_9502', create_temp_Assign_call_result_11108)
        
        # Assigning a Call to a Name (line 439):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9502' (line 439)
        call_assignment_9502_11109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'call_assignment_9502', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11110 = stypy_get_value_from_tuple(call_assignment_9502_11109, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9503' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'call_assignment_9503', stypy_get_value_from_tuple_call_result_11110)
        
        # Assigning a Name to a Name (line 439):
        # Getting the type of 'call_assignment_9503' (line 439)
        call_assignment_9503_11111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'call_assignment_9503')
        # Assigning a type to the variable 'dict_assign_stmts' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'dict_assign_stmts', call_assignment_9503_11111)
        
        # Assigning a Call to a Name (line 439):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9502' (line 439)
        call_assignment_9502_11112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'call_assignment_9502', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11113 = stypy_get_value_from_tuple(call_assignment_9502_11112, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9504' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'call_assignment_9504', stypy_get_value_from_tuple_call_result_11113)
        
        # Assigning a Name to a Name (line 439):
        # Getting the type of 'call_assignment_9504' (line 439)
        call_assignment_9504_11114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 8), 'call_assignment_9504')
        # Assigning a type to the variable 'dict_assign' (line 439)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 27), 'dict_assign', call_assignment_9504_11114)
        
        # Call to append(...): (line 441)
        # Processing the call arguments (line 441)
        # Getting the type of 'dict_assign_stmts' (line 441)
        dict_assign_stmts_11117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 26), 'dict_assign_stmts', False)
        # Processing the call keyword arguments (line 441)
        kwargs_11118 = {}
        # Getting the type of 'call_stmts' (line 441)
        call_stmts_11115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 441)
        append_11116 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 8), call_stmts_11115, 'append')
        # Calling append(args, kwargs) (line 441)
        append_call_result_11119 = invoke(stypy.reporting.localization.Localization(__file__, 441, 8), append_11116, *[dict_assign_stmts_11117], **kwargs_11118)
        
        
        # Call to append(...): (line 443)
        # Processing the call arguments (line 443)
        
        # Call to create_set_unreferenced_var_check(...): (line 443)
        # Processing the call arguments (line 443)
        # Getting the type of 'False' (line 443)
        False_11124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 81), 'False', False)
        # Processing the call keyword arguments (line 443)
        kwargs_11125 = {}
        # Getting the type of 'stypy_functions_copy' (line 443)
        stypy_functions_copy_11122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_unreferenced_var_check' of a type (line 443)
        create_set_unreferenced_var_check_11123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 26), stypy_functions_copy_11122, 'create_set_unreferenced_var_check')
        # Calling create_set_unreferenced_var_check(args, kwargs) (line 443)
        create_set_unreferenced_var_check_call_result_11126 = invoke(stypy.reporting.localization.Localization(__file__, 443, 26), create_set_unreferenced_var_check_11123, *[False_11124], **kwargs_11125)
        
        # Processing the call keyword arguments (line 443)
        kwargs_11127 = {}
        # Getting the type of 'call_stmts' (line 443)
        call_stmts_11120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 443)
        append_11121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 8), call_stmts_11120, 'append')
        # Calling append(args, kwargs) (line 443)
        append_call_result_11128 = invoke(stypy.reporting.localization.Localization(__file__, 443, 8), append_11121, *[create_set_unreferenced_var_check_call_result_11126], **kwargs_11127)
        
        
        # Call to append(...): (line 444)
        # Processing the call arguments (line 444)
        # Getting the type of 'get_type_of_stmts' (line 444)
        get_type_of_stmts_11131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 26), 'get_type_of_stmts', False)
        # Processing the call keyword arguments (line 444)
        kwargs_11132 = {}
        # Getting the type of 'call_stmts' (line 444)
        call_stmts_11129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 444)
        append_11130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 8), call_stmts_11129, 'append')
        # Calling append(args, kwargs) (line 444)
        append_call_result_11133 = invoke(stypy.reporting.localization.Localization(__file__, 444, 8), append_11130, *[get_type_of_stmts_11131], **kwargs_11132)
        
        
        # Call to append(...): (line 445)
        # Processing the call arguments (line 445)
        
        # Call to create_set_unreferenced_var_check(...): (line 445)
        # Processing the call arguments (line 445)
        # Getting the type of 'True' (line 445)
        True_11138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 81), 'True', False)
        # Processing the call keyword arguments (line 445)
        kwargs_11139 = {}
        # Getting the type of 'stypy_functions_copy' (line 445)
        stypy_functions_copy_11136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_unreferenced_var_check' of a type (line 445)
        create_set_unreferenced_var_check_11137 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 26), stypy_functions_copy_11136, 'create_set_unreferenced_var_check')
        # Calling create_set_unreferenced_var_check(args, kwargs) (line 445)
        create_set_unreferenced_var_check_call_result_11140 = invoke(stypy.reporting.localization.Localization(__file__, 445, 26), create_set_unreferenced_var_check_11137, *[True_11138], **kwargs_11139)
        
        # Processing the call keyword arguments (line 445)
        kwargs_11141 = {}
        # Getting the type of 'call_stmts' (line 445)
        call_stmts_11134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 445)
        append_11135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 445, 8), call_stmts_11134, 'append')
        # Calling append(args, kwargs) (line 445)
        append_call_result_11142 = invoke(stypy.reporting.localization.Localization(__file__, 445, 8), append_11135, *[create_set_unreferenced_var_check_call_result_11140], **kwargs_11141)
        
        
        # Call to append(...): (line 447)
        # Processing the call arguments (line 447)
        
        # Call to create_src_comment(...): (line 447)
        # Processing the call arguments (line 447)
        str_11147 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 66), 'str', 'Performing the call')
        # Getting the type of 'node' (line 447)
        node_11148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 89), 'node', False)
        # Obtaining the member 'lineno' of a type (line 447)
        lineno_11149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 89), node_11148, 'lineno')
        # Processing the call keyword arguments (line 447)
        kwargs_11150 = {}
        # Getting the type of 'stypy_functions_copy' (line 447)
        stypy_functions_copy_11145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 447)
        create_src_comment_11146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 26), stypy_functions_copy_11145, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 447)
        create_src_comment_call_result_11151 = invoke(stypy.reporting.localization.Localization(__file__, 447, 26), create_src_comment_11146, *[str_11147, lineno_11149], **kwargs_11150)
        
        # Processing the call keyword arguments (line 447)
        kwargs_11152 = {}
        # Getting the type of 'call_stmts' (line 447)
        call_stmts_11143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 447)
        append_11144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 8), call_stmts_11143, 'append')
        # Calling append(args, kwargs) (line 447)
        append_call_result_11153 = invoke(stypy.reporting.localization.Localization(__file__, 447, 8), append_11144, *[create_src_comment_call_result_11151], **kwargs_11152)
        
        
        # Assigning a Call to a Name (line 448):
        
        # Assigning a Call to a Name (line 448):
        
        # Call to create_call_to_type_inference_code(...): (line 448)
        # Processing the call arguments (line 448)
        # Getting the type of 'function_to_call' (line 448)
        function_to_call_11155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 50), 'function_to_call', False)
        # Getting the type of 'localization' (line 448)
        localization_11156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 68), 'localization', False)
        # Processing the call keyword arguments (line 448)
        
        # Obtaining an instance of the builtin type 'list' (line 448)
        list_11157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 448, 91), 'list')
        # Adding type elements to the builtin type 'list' instance (line 448)
        
        keyword_11158 = list_11157
        # Getting the type of 'dict_assign' (line 448)
        dict_assign_11159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 102), 'dict_assign', False)
        keyword_11160 = dict_assign_11159
        # Getting the type of 'arguments' (line 449)
        arguments_11161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 59), 'arguments', False)
        keyword_11162 = arguments_11161
        # Getting the type of 'node' (line 450)
        node_11163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 55), 'node', False)
        # Obtaining the member 'lineno' of a type (line 450)
        lineno_11164 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 55), node_11163, 'lineno')
        keyword_11165 = lineno_11164
        # Getting the type of 'node' (line 450)
        node_11166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 75), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 450)
        col_offset_11167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 75), node_11166, 'col_offset')
        keyword_11168 = col_offset_11167
        kwargs_11169 = {'keywords': keyword_11158, 'column': keyword_11168, 'line': keyword_11165, 'starargs': keyword_11162, 'kwargs': keyword_11160}
        # Getting the type of 'create_call_to_type_inference_code' (line 448)
        create_call_to_type_inference_code_11154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 15), 'create_call_to_type_inference_code', False)
        # Calling create_call_to_type_inference_code(args, kwargs) (line 448)
        create_call_to_type_inference_code_call_result_11170 = invoke(stypy.reporting.localization.Localization(__file__, 448, 15), create_call_to_type_inference_code_11154, *[function_to_call_11155, localization_11156], **kwargs_11169)
        
        # Assigning a type to the variable 'call' (line 448)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 448, 8), 'call', create_call_to_type_inference_code_call_result_11170)
        
        # Assigning a Call to a Tuple (line 452):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 452)
        # Processing the call arguments (line 452)
        # Getting the type of 'call' (line 452)
        call_11173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 76), 'call', False)
        # Getting the type of 'node' (line 452)
        node_11174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 82), 'node', False)
        # Obtaining the member 'lineno' of a type (line 452)
        lineno_11175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 82), node_11174, 'lineno')
        # Getting the type of 'node' (line 452)
        node_11176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 95), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 452)
        col_offset_11177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 95), node_11176, 'col_offset')
        # Processing the call keyword arguments (line 452)
        kwargs_11178 = {}
        # Getting the type of 'stypy_functions_copy' (line 452)
        stypy_functions_copy_11171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 36), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 452)
        create_temp_Assign_11172 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 36), stypy_functions_copy_11171, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 452)
        create_temp_Assign_call_result_11179 = invoke(stypy.reporting.localization.Localization(__file__, 452, 36), create_temp_Assign_11172, *[call_11173, lineno_11175, col_offset_11177], **kwargs_11178)
        
        # Assigning a type to the variable 'call_assignment_9505' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'call_assignment_9505', create_temp_Assign_call_result_11179)
        
        # Assigning a Call to a Name (line 452):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9505' (line 452)
        call_assignment_9505_11180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'call_assignment_9505', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11181 = stypy_get_value_from_tuple(call_assignment_9505_11180, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9506' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'call_assignment_9506', stypy_get_value_from_tuple_call_result_11181)
        
        # Assigning a Name to a Name (line 452):
        # Getting the type of 'call_assignment_9506' (line 452)
        call_assignment_9506_11182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'call_assignment_9506')
        # Assigning a type to the variable 'assign_stmts' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'assign_stmts', call_assignment_9506_11182)
        
        # Assigning a Call to a Name (line 452):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9505' (line 452)
        call_assignment_9505_11183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'call_assignment_9505', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11184 = stypy_get_value_from_tuple(call_assignment_9505_11183, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9507' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'call_assignment_9507', stypy_get_value_from_tuple_call_result_11184)
        
        # Assigning a Name to a Name (line 452):
        # Getting the type of 'call_assignment_9507' (line 452)
        call_assignment_9507_11185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 8), 'call_assignment_9507')
        # Assigning a type to the variable 'temp_assign' (line 452)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 452, 22), 'temp_assign', call_assignment_9507_11185)
        
        # Call to append(...): (line 453)
        # Processing the call arguments (line 453)
        # Getting the type of 'assign_stmts' (line 453)
        assign_stmts_11188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 26), 'assign_stmts', False)
        # Processing the call keyword arguments (line 453)
        kwargs_11189 = {}
        # Getting the type of 'call_stmts' (line 453)
        call_stmts_11186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 453, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 453)
        append_11187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 453, 8), call_stmts_11186, 'append')
        # Calling append(args, kwargs) (line 453)
        append_call_result_11190 = invoke(stypy.reporting.localization.Localization(__file__, 453, 8), append_11187, *[assign_stmts_11188], **kwargs_11189)
        
        
        # Call to remove(...): (line 455)
        # Processing the call arguments (line 455)
        # Getting the type of 'node' (line 455)
        node_11193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 23), 'node', False)
        # Processing the call keyword arguments (line 455)
        kwargs_11194 = {}
        # Getting the type of 'context' (line 455)
        context_11191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 455)
        remove_11192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 8), context_11191, 'remove')
        # Calling remove(args, kwargs) (line 455)
        remove_call_result_11195 = invoke(stypy.reporting.localization.Localization(__file__, 455, 8), remove_11192, *[node_11193], **kwargs_11194)
        
        
        # Obtaining an instance of the builtin type 'tuple' (line 456)
        tuple_11196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 456, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 456)
        # Adding element type (line 456)
        
        # Call to flatten_lists(...): (line 456)
        # Processing the call arguments (line 456)
        
        # Call to create_blank_line(...): (line 457)
        # Processing the call keyword arguments (line 457)
        kwargs_11201 = {}
        # Getting the type of 'stypy_functions_copy' (line 457)
        stypy_functions_copy_11199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 457)
        create_blank_line_11200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 457, 12), stypy_functions_copy_11199, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 457)
        create_blank_line_call_result_11202 = invoke(stypy.reporting.localization.Localization(__file__, 457, 12), create_blank_line_11200, *[], **kwargs_11201)
        
        # Getting the type of 'call_stmts' (line 458)
        call_stmts_11203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'call_stmts', False)
        
        # Call to create_blank_line(...): (line 459)
        # Processing the call keyword arguments (line 459)
        kwargs_11206 = {}
        # Getting the type of 'stypy_functions_copy' (line 459)
        stypy_functions_copy_11204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 459, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 459)
        create_blank_line_11205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 459, 12), stypy_functions_copy_11204, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 459)
        create_blank_line_call_result_11207 = invoke(stypy.reporting.localization.Localization(__file__, 459, 12), create_blank_line_11205, *[], **kwargs_11206)
        
        # Processing the call keyword arguments (line 456)
        kwargs_11208 = {}
        # Getting the type of 'stypy_functions_copy' (line 456)
        stypy_functions_copy_11197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 456, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 456)
        flatten_lists_11198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 456, 15), stypy_functions_copy_11197, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 456)
        flatten_lists_call_result_11209 = invoke(stypy.reporting.localization.Localization(__file__, 456, 15), flatten_lists_11198, *[create_blank_line_call_result_11202, call_stmts_11203, create_blank_line_call_result_11207], **kwargs_11208)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 456, 15), tuple_11196, flatten_lists_call_result_11209)
        # Adding element type (line 456)
        # Getting the type of 'temp_assign' (line 460)
        temp_assign_11210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 11), 'temp_assign')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 456, 15), tuple_11196, temp_assign_11210)
        
        # Assigning a type to the variable 'stypy_return_type' (line 456)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 456, 8), 'stypy_return_type', tuple_11196)
        
        # ################# End of 'visit_Call(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Call' in the type store
        # Getting the type of 'stypy_return_type' (line 385)
        stypy_return_type_11211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 385, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_11211)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Call'
        return stypy_return_type_11211


    @norecursion
    def visit_keyword(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_keyword'
        module_type_store = module_type_store.open_function_context('visit_keyword', 462, 4, False)
        # Assigning a type to the variable 'self' (line 463)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_keyword')
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_keyword.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_keyword', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_keyword', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_keyword(...)' code ##################

        
        # Assigning a Call to a Tuple (line 465):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 465)
        # Processing the call arguments (line 465)
        # Getting the type of 'node' (line 465)
        node_11214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 49), 'node', False)
        # Obtaining the member 'value' of a type (line 465)
        value_11215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 49), node_11214, 'value')
        # Getting the type of 'context' (line 465)
        context_11216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 61), 'context', False)
        # Processing the call keyword arguments (line 465)
        kwargs_11217 = {}
        # Getting the type of 'self' (line 465)
        self_11212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 38), 'self', False)
        # Obtaining the member 'visit' of a type (line 465)
        visit_11213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 465, 38), self_11212, 'visit')
        # Calling visit(args, kwargs) (line 465)
        visit_call_result_11218 = invoke(stypy.reporting.localization.Localization(__file__, 465, 38), visit_11213, *[value_11215, context_11216], **kwargs_11217)
        
        # Assigning a type to the variable 'call_assignment_9508' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'call_assignment_9508', visit_call_result_11218)
        
        # Assigning a Call to a Name (line 465):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9508' (line 465)
        call_assignment_9508_11219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'call_assignment_9508', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11220 = stypy_get_value_from_tuple(call_assignment_9508_11219, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9509' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'call_assignment_9509', stypy_get_value_from_tuple_call_result_11220)
        
        # Assigning a Name to a Name (line 465):
        # Getting the type of 'call_assignment_9509' (line 465)
        call_assignment_9509_11221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'call_assignment_9509')
        # Assigning a type to the variable 'get_value_stmts' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'get_value_stmts', call_assignment_9509_11221)
        
        # Assigning a Call to a Name (line 465):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9508' (line 465)
        call_assignment_9508_11222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'call_assignment_9508', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11223 = stypy_get_value_from_tuple(call_assignment_9508_11222, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9510' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'call_assignment_9510', stypy_get_value_from_tuple_call_result_11223)
        
        # Assigning a Name to a Name (line 465):
        # Getting the type of 'call_assignment_9510' (line 465)
        call_assignment_9510_11224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 8), 'call_assignment_9510')
        # Assigning a type to the variable 'temp_value' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 25), 'temp_value', call_assignment_9510_11224)
        
        # Assigning a Call to a Tuple (line 466):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 466)
        # Processing the call arguments (line 466)
        # Getting the type of 'temp_value' (line 466)
        temp_value_11227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 86), 'temp_value', False)
        
        # Obtaining the type of the subscript
        int_11228 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 466, 106), 'int')
        # Getting the type of 'context' (line 466)
        context_11229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 98), 'context', False)
        # Obtaining the member '__getitem__' of a type (line 466)
        getitem___11230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 98), context_11229, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 466)
        subscript_call_result_11231 = invoke(stypy.reporting.localization.Localization(__file__, 466, 98), getitem___11230, int_11228)
        
        # Obtaining the member 'lineno' of a type (line 466)
        lineno_11232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 98), subscript_call_result_11231, 'lineno')
        
        # Obtaining the type of the subscript
        int_11233 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 467, 89), 'int')
        # Getting the type of 'context' (line 467)
        context_11234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 81), 'context', False)
        # Obtaining the member '__getitem__' of a type (line 467)
        getitem___11235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 81), context_11234, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 467)
        subscript_call_result_11236 = invoke(stypy.reporting.localization.Localization(__file__, 467, 81), getitem___11235, int_11233)
        
        # Obtaining the member 'col_offset' of a type (line 467)
        col_offset_11237 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 81), subscript_call_result_11236, 'col_offset')
        # Processing the call keyword arguments (line 466)
        kwargs_11238 = {}
        # Getting the type of 'stypy_functions_copy' (line 466)
        stypy_functions_copy_11225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 46), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 466)
        create_temp_Assign_11226 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 46), stypy_functions_copy_11225, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 466)
        create_temp_Assign_call_result_11239 = invoke(stypy.reporting.localization.Localization(__file__, 466, 46), create_temp_Assign_11226, *[temp_value_11227, lineno_11232, col_offset_11237], **kwargs_11238)
        
        # Assigning a type to the variable 'call_assignment_9511' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'call_assignment_9511', create_temp_Assign_call_result_11239)
        
        # Assigning a Call to a Name (line 466):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9511' (line 466)
        call_assignment_9511_11240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'call_assignment_9511', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11241 = stypy_get_value_from_tuple(call_assignment_9511_11240, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9512' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'call_assignment_9512', stypy_get_value_from_tuple_call_result_11241)
        
        # Assigning a Name to a Name (line 466):
        # Getting the type of 'call_assignment_9512' (line 466)
        call_assignment_9512_11242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'call_assignment_9512')
        # Assigning a type to the variable 'assign_keyword_value' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'assign_keyword_value', call_assignment_9512_11242)
        
        # Assigning a Call to a Name (line 466):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9511' (line 466)
        call_assignment_9511_11243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'call_assignment_9511', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11244 = stypy_get_value_from_tuple(call_assignment_9511_11243, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9513' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'call_assignment_9513', stypy_get_value_from_tuple_call_result_11244)
        
        # Assigning a Name to a Name (line 466):
        # Getting the type of 'call_assignment_9513' (line 466)
        call_assignment_9513_11245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'call_assignment_9513')
        # Assigning a type to the variable 'keyword_value' (line 466)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 30), 'keyword_value', call_assignment_9513_11245)
        
        # Obtaining an instance of the builtin type 'tuple' (line 468)
        tuple_11246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 468)
        # Adding element type (line 468)
        
        # Call to flatten_lists(...): (line 468)
        # Processing the call arguments (line 468)
        # Getting the type of 'get_value_stmts' (line 468)
        get_value_stmts_11249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 50), 'get_value_stmts', False)
        # Getting the type of 'assign_keyword_value' (line 468)
        assign_keyword_value_11250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 67), 'assign_keyword_value', False)
        # Processing the call keyword arguments (line 468)
        kwargs_11251 = {}
        # Getting the type of 'stypy_functions_copy' (line 468)
        stypy_functions_copy_11247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 468)
        flatten_lists_11248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 15), stypy_functions_copy_11247, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 468)
        flatten_lists_call_result_11252 = invoke(stypy.reporting.localization.Localization(__file__, 468, 15), flatten_lists_11248, *[get_value_stmts_11249, assign_keyword_value_11250], **kwargs_11251)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 15), tuple_11246, flatten_lists_call_result_11252)
        # Adding element type (line 468)
        # Getting the type of 'keyword_value' (line 468)
        keyword_value_11253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 90), 'keyword_value')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 15), tuple_11246, keyword_value_11253)
        
        # Assigning a type to the variable 'stypy_return_type' (line 468)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'stypy_return_type', tuple_11246)
        
        # ################# End of 'visit_keyword(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_keyword' in the type store
        # Getting the type of 'stypy_return_type' (line 462)
        stypy_return_type_11254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_11254)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_keyword'
        return stypy_return_type_11254


    @norecursion
    def visit_Lambda(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Lambda'
        module_type_store = module_type_store.open_function_context('visit_Lambda', 472, 4, False)
        # Assigning a type to the variable 'self' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Lambda')
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Lambda.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Lambda', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Lambda', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Lambda(...)' code ##################

        
        # Assigning a Call to a Name (line 474):
        
        # Assigning a Call to a Name (line 474):
        
        # Call to create_Name(...): (line 474)
        # Processing the call arguments (line 474)
        str_11257 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 474, 59), 'str', 'localization')
        # Getting the type of 'False' (line 474)
        False_11258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 75), 'False', False)
        # Processing the call keyword arguments (line 474)
        # Getting the type of 'node' (line 474)
        node_11259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 474)
        lineno_11260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 87), node_11259, 'lineno')
        keyword_11261 = lineno_11260
        # Getting the type of 'node' (line 474)
        node_11262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 107), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 474)
        col_offset_11263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 107), node_11262, 'col_offset')
        keyword_11264 = col_offset_11263
        kwargs_11265 = {'column': keyword_11264, 'line': keyword_11261}
        # Getting the type of 'core_language_copy' (line 474)
        core_language_copy_11255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 474, 28), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 474)
        create_Name_11256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 474, 28), core_language_copy_11255, 'create_Name')
        # Calling create_Name(args, kwargs) (line 474)
        create_Name_call_result_11266 = invoke(stypy.reporting.localization.Localization(__file__, 474, 28), create_Name_11256, *[str_11257, False_11258], **kwargs_11265)
        
        # Assigning a type to the variable 'decl_localization' (line 474)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 474, 8), 'decl_localization', create_Name_call_result_11266)
        
        # Assigning a Call to a Name (line 478):
        
        # Assigning a Call to a Name (line 478):
        
        # Call to create_Name(...): (line 478)
        # Processing the call arguments (line 478)
        str_11269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 56), 'str', 'norecursion')
        # Processing the call keyword arguments (line 478)
        # Getting the type of 'node' (line 478)
        node_11270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 76), 'node', False)
        # Obtaining the member 'lineno' of a type (line 478)
        lineno_11271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 76), node_11270, 'lineno')
        int_11272 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 478, 90), 'int')
        # Applying the binary operator '-' (line 478)
        result_sub_11273 = python_operator(stypy.reporting.localization.Localization(__file__, 478, 76), '-', lineno_11271, int_11272)
        
        keyword_11274 = result_sub_11273
        # Getting the type of 'node' (line 478)
        node_11275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 478)
        col_offset_11276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 100), node_11275, 'col_offset')
        keyword_11277 = col_offset_11276
        kwargs_11278 = {'column': keyword_11277, 'line': keyword_11274}
        # Getting the type of 'core_language_copy' (line 478)
        core_language_copy_11267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 25), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 478)
        create_Name_11268 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 25), core_language_copy_11267, 'create_Name')
        # Calling create_Name(args, kwargs) (line 478)
        create_Name_call_result_11279 = invoke(stypy.reporting.localization.Localization(__file__, 478, 25), create_Name_11268, *[str_11269], **kwargs_11278)
        
        # Assigning a type to the variable 'decorator_list' (line 478)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 8), 'decorator_list', create_Name_call_result_11279)
        
        # Assigning a List to a Name (line 480):
        
        # Assigning a List to a Name (line 480):
        
        # Obtaining an instance of the builtin type 'list' (line 480)
        list_11280 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 480, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 480)
        
        # Assigning a type to the variable 'defaults_types' (line 480)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 8), 'defaults_types', list_11280)
        
        # Getting the type of 'node' (line 481)
        node_11281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 20), 'node')
        # Obtaining the member 'args' of a type (line 481)
        args_11282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 20), node_11281, 'args')
        # Obtaining the member 'defaults' of a type (line 481)
        defaults_11283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 481, 20), args_11282, 'defaults')
        # Assigning a type to the variable 'defaults_11283' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'defaults_11283', defaults_11283)
        # Testing if the for loop is going to be iterated (line 481)
        # Testing the type of a for loop iterable (line 481)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 481, 8), defaults_11283)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 481, 8), defaults_11283):
            # Getting the type of the for loop variable (line 481)
            for_loop_var_11284 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 481, 8), defaults_11283)
            # Assigning a type to the variable 'elem' (line 481)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'elem', for_loop_var_11284)
            # SSA begins for a for statement (line 481)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 482):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 482)
            # Processing the call arguments (line 482)
            # Getting the type of 'elem' (line 482)
            elem_11287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 38), 'elem', False)
            # Getting the type of 'context' (line 482)
            context_11288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 44), 'context', False)
            # Processing the call keyword arguments (line 482)
            kwargs_11289 = {}
            # Getting the type of 'self' (line 482)
            self_11285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 27), 'self', False)
            # Obtaining the member 'visit' of a type (line 482)
            visit_11286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 482, 27), self_11285, 'visit')
            # Calling visit(args, kwargs) (line 482)
            visit_call_result_11290 = invoke(stypy.reporting.localization.Localization(__file__, 482, 27), visit_11286, *[elem_11287, context_11288], **kwargs_11289)
            
            # Assigning a type to the variable 'call_assignment_9514' (line 482)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'call_assignment_9514', visit_call_result_11290)
            
            # Assigning a Call to a Name (line 482):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9514' (line 482)
            call_assignment_9514_11291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'call_assignment_9514', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11292 = stypy_get_value_from_tuple(call_assignment_9514_11291, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9515' (line 482)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'call_assignment_9515', stypy_get_value_from_tuple_call_result_11292)
            
            # Assigning a Name to a Name (line 482):
            # Getting the type of 'call_assignment_9515' (line 482)
            call_assignment_9515_11293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'call_assignment_9515')
            # Assigning a type to the variable 'stmts' (line 482)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'stmts', call_assignment_9515_11293)
            
            # Assigning a Call to a Name (line 482):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9514' (line 482)
            call_assignment_9514_11294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'call_assignment_9514', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11295 = stypy_get_value_from_tuple(call_assignment_9514_11294, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9516' (line 482)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'call_assignment_9516', stypy_get_value_from_tuple_call_result_11295)
            
            # Assigning a Name to a Name (line 482):
            # Getting the type of 'call_assignment_9516' (line 482)
            call_assignment_9516_11296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'call_assignment_9516')
            # Assigning a type to the variable 'type_' (line 482)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 19), 'type_', call_assignment_9516_11296)
            
            # Call to append(...): (line 483)
            # Processing the call arguments (line 483)
            # Getting the type of 'type_' (line 483)
            type__11299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 34), 'type_', False)
            # Processing the call keyword arguments (line 483)
            kwargs_11300 = {}
            # Getting the type of 'defaults_types' (line 483)
            defaults_types_11297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 12), 'defaults_types', False)
            # Obtaining the member 'append' of a type (line 483)
            append_11298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 12), defaults_types_11297, 'append')
            # Calling append(args, kwargs) (line 483)
            append_call_result_11301 = invoke(stypy.reporting.localization.Localization(__file__, 483, 12), append_11298, *[type__11299], **kwargs_11300)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Attribute (line 485):
        
        # Assigning a Call to a Attribute (line 485):
        
        # Call to new_temp_lambda_str(...): (line 485)
        # Processing the call keyword arguments (line 485)
        kwargs_11304 = {}
        # Getting the type of 'stypy_functions_copy' (line 485)
        stypy_functions_copy_11302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 20), 'stypy_functions_copy', False)
        # Obtaining the member 'new_temp_lambda_str' of a type (line 485)
        new_temp_lambda_str_11303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 20), stypy_functions_copy_11302, 'new_temp_lambda_str')
        # Calling new_temp_lambda_str(args, kwargs) (line 485)
        new_temp_lambda_str_call_result_11305 = invoke(stypy.reporting.localization.Localization(__file__, 485, 20), new_temp_lambda_str_11303, *[], **kwargs_11304)
        
        # Getting the type of 'node' (line 485)
        node_11306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'node')
        # Setting the type of the member 'name' of a type (line 485)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 8), node_11306, 'name', new_temp_lambda_str_call_result_11305)
        
        # Assigning a Call to a Name (line 488):
        
        # Assigning a Call to a Name (line 488):
        
        # Call to create_function_def(...): (line 488)
        # Processing the call arguments (line 488)
        # Getting the type of 'node' (line 488)
        node_11309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 58), 'node', False)
        # Obtaining the member 'name' of a type (line 488)
        name_11310 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 58), node_11309, 'name')
        # Getting the type of 'decl_localization' (line 489)
        decl_localization_11311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 53), 'decl_localization', False)
        # Getting the type of 'decorator_list' (line 490)
        decorator_list_11312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 53), 'decorator_list', False)
        
        # Obtaining an instance of the builtin type 'list' (line 491)
        list_11313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 491, 53), 'list')
        # Adding type elements to the builtin type 'list' instance (line 491)
        
        # Processing the call keyword arguments (line 488)
        # Getting the type of 'node' (line 492)
        node_11314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 58), 'node', False)
        # Obtaining the member 'lineno' of a type (line 492)
        lineno_11315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 58), node_11314, 'lineno')
        keyword_11316 = lineno_11315
        # Getting the type of 'node' (line 493)
        node_11317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 60), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 493)
        col_offset_11318 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 60), node_11317, 'col_offset')
        keyword_11319 = col_offset_11318
        kwargs_11320 = {'column': keyword_11319, 'line': keyword_11316}
        # Getting the type of 'functions_copy' (line 488)
        functions_copy_11307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 23), 'functions_copy', False)
        # Obtaining the member 'create_function_def' of a type (line 488)
        create_function_def_11308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 23), functions_copy_11307, 'create_function_def')
        # Calling create_function_def(args, kwargs) (line 488)
        create_function_def_call_result_11321 = invoke(stypy.reporting.localization.Localization(__file__, 488, 23), create_function_def_11308, *[name_11310, decl_localization_11311, decorator_list_11312, list_11313], **kwargs_11320)
        
        # Assigning a type to the variable 'function_def' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 'function_def', create_function_def_call_result_11321)
        
        # Call to append(...): (line 496)
        # Processing the call arguments (line 496)
        
        # Call to create_src_comment(...): (line 496)
        # Processing the call arguments (line 496)
        str_11327 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 496, 73), 'str', 'Assign values to the parameters with defaults')
        # Processing the call keyword arguments (line 496)
        kwargs_11328 = {}
        # Getting the type of 'stypy_functions_copy' (line 496)
        stypy_functions_copy_11325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 496)
        create_src_comment_11326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 33), stypy_functions_copy_11325, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 496)
        create_src_comment_call_result_11329 = invoke(stypy.reporting.localization.Localization(__file__, 496, 33), create_src_comment_11326, *[str_11327], **kwargs_11328)
        
        # Processing the call keyword arguments (line 496)
        kwargs_11330 = {}
        # Getting the type of 'function_def' (line 496)
        function_def_11322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 496)
        body_11323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 8), function_def_11322, 'body')
        # Obtaining the member 'append' of a type (line 496)
        append_11324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 8), body_11323, 'append')
        # Calling append(args, kwargs) (line 496)
        append_call_result_11331 = invoke(stypy.reporting.localization.Localization(__file__, 496, 8), append_11324, *[create_src_comment_call_result_11329], **kwargs_11330)
        
        
        # Call to append(...): (line 497)
        # Processing the call arguments (line 497)
        
        # Call to create_Assign(...): (line 497)
        # Processing the call arguments (line 497)
        
        # Call to create_Name(...): (line 497)
        # Processing the call arguments (line 497)
        str_11339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 497, 97), 'str', 'defaults')
        # Processing the call keyword arguments (line 497)
        kwargs_11340 = {}
        # Getting the type of 'core_language_copy' (line 497)
        core_language_copy_11337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 66), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 497)
        create_Name_11338 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 66), core_language_copy_11337, 'create_Name')
        # Calling create_Name(args, kwargs) (line 497)
        create_Name_call_result_11341 = invoke(stypy.reporting.localization.Localization(__file__, 497, 66), create_Name_11338, *[str_11339], **kwargs_11340)
        
        
        # Call to create_list(...): (line 498)
        # Processing the call arguments (line 498)
        # Getting the type of 'defaults_types' (line 498)
        defaults_types_11344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 94), 'defaults_types', False)
        # Processing the call keyword arguments (line 498)
        kwargs_11345 = {}
        # Getting the type of 'data_structures_copy' (line 498)
        data_structures_copy_11342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 61), 'data_structures_copy', False)
        # Obtaining the member 'create_list' of a type (line 498)
        create_list_11343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 61), data_structures_copy_11342, 'create_list')
        # Calling create_list(args, kwargs) (line 498)
        create_list_call_result_11346 = invoke(stypy.reporting.localization.Localization(__file__, 498, 61), create_list_11343, *[defaults_types_11344], **kwargs_11345)
        
        # Processing the call keyword arguments (line 497)
        kwargs_11347 = {}
        # Getting the type of 'core_language_copy' (line 497)
        core_language_copy_11335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 33), 'core_language_copy', False)
        # Obtaining the member 'create_Assign' of a type (line 497)
        create_Assign_11336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 33), core_language_copy_11335, 'create_Assign')
        # Calling create_Assign(args, kwargs) (line 497)
        create_Assign_call_result_11348 = invoke(stypy.reporting.localization.Localization(__file__, 497, 33), create_Assign_11336, *[create_Name_call_result_11341, create_list_call_result_11346], **kwargs_11347)
        
        # Processing the call keyword arguments (line 497)
        kwargs_11349 = {}
        # Getting the type of 'function_def' (line 497)
        function_def_11332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 497)
        body_11333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 8), function_def_11332, 'body')
        # Obtaining the member 'append' of a type (line 497)
        append_11334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 8), body_11333, 'append')
        # Calling append(args, kwargs) (line 497)
        append_call_result_11350 = invoke(stypy.reporting.localization.Localization(__file__, 497, 8), append_11334, *[create_Assign_call_result_11348], **kwargs_11349)
        
        
        # Call to append(...): (line 501)
        # Processing the call arguments (line 501)
        
        # Call to create_src_comment(...): (line 501)
        # Processing the call arguments (line 501)
        
        # Call to format(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'node' (line 502)
        node_11358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 83), 'node', False)
        # Obtaining the member 'name' of a type (line 502)
        name_11359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 83), node_11358, 'name')
        # Processing the call keyword arguments (line 502)
        kwargs_11360 = {}
        str_11356 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 502, 34), 'str', "Create a new context for function '{0}'")
        # Obtaining the member 'format' of a type (line 502)
        format_11357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 34), str_11356, 'format')
        # Calling format(args, kwargs) (line 502)
        format_call_result_11361 = invoke(stypy.reporting.localization.Localization(__file__, 502, 34), format_11357, *[name_11359], **kwargs_11360)
        
        # Processing the call keyword arguments (line 501)
        kwargs_11362 = {}
        # Getting the type of 'stypy_functions_copy' (line 501)
        stypy_functions_copy_11354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 501)
        create_src_comment_11355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 33), stypy_functions_copy_11354, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 501)
        create_src_comment_call_result_11363 = invoke(stypy.reporting.localization.Localization(__file__, 501, 33), create_src_comment_11355, *[format_call_result_11361], **kwargs_11362)
        
        # Processing the call keyword arguments (line 501)
        kwargs_11364 = {}
        # Getting the type of 'function_def' (line 501)
        function_def_11351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 501, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 501)
        body_11352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 8), function_def_11351, 'body')
        # Obtaining the member 'append' of a type (line 501)
        append_11353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 501, 8), body_11352, 'append')
        # Calling append(args, kwargs) (line 501)
        append_call_result_11365 = invoke(stypy.reporting.localization.Localization(__file__, 501, 8), append_11353, *[create_src_comment_call_result_11363], **kwargs_11364)
        
        
        # Assigning a Call to a Name (line 503):
        
        # Assigning a Call to a Name (line 503):
        
        # Call to create_context_set(...): (line 503)
        # Processing the call arguments (line 503)
        # Getting the type of 'node' (line 503)
        node_11368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 56), 'node', False)
        # Obtaining the member 'name' of a type (line 503)
        name_11369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 56), node_11368, 'name')
        # Getting the type of 'node' (line 503)
        node_11370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 67), 'node', False)
        # Obtaining the member 'lineno' of a type (line 503)
        lineno_11371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 67), node_11370, 'lineno')
        # Getting the type of 'node' (line 504)
        node_11372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 51), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 504)
        col_offset_11373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 504, 51), node_11372, 'col_offset')
        # Processing the call keyword arguments (line 503)
        kwargs_11374 = {}
        # Getting the type of 'functions_copy' (line 503)
        functions_copy_11366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 22), 'functions_copy', False)
        # Obtaining the member 'create_context_set' of a type (line 503)
        create_context_set_11367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 503, 22), functions_copy_11366, 'create_context_set')
        # Calling create_context_set(args, kwargs) (line 503)
        create_context_set_call_result_11375 = invoke(stypy.reporting.localization.Localization(__file__, 503, 22), create_context_set_11367, *[name_11369, lineno_11371, col_offset_11373], **kwargs_11374)
        
        # Assigning a type to the variable 'context_set' (line 503)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 503, 8), 'context_set', create_context_set_call_result_11375)
        
        # Call to append(...): (line 505)
        # Processing the call arguments (line 505)
        # Getting the type of 'context_set' (line 505)
        context_set_11379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 33), 'context_set', False)
        # Processing the call keyword arguments (line 505)
        kwargs_11380 = {}
        # Getting the type of 'function_def' (line 505)
        function_def_11376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 505)
        body_11377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 8), function_def_11376, 'body')
        # Obtaining the member 'append' of a type (line 505)
        append_11378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 505, 8), body_11377, 'append')
        # Calling append(args, kwargs) (line 505)
        append_call_result_11381 = invoke(stypy.reporting.localization.Localization(__file__, 505, 8), append_11378, *[context_set_11379], **kwargs_11380)
        
        
        # Call to append(...): (line 508)
        # Processing the call arguments (line 508)
        
        # Call to create_src_comment(...): (line 508)
        # Processing the call arguments (line 508)
        str_11387 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 73), 'str', 'Passed parameters checking function')
        # Processing the call keyword arguments (line 508)
        kwargs_11388 = {}
        # Getting the type of 'stypy_functions_copy' (line 508)
        stypy_functions_copy_11385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 508)
        create_src_comment_11386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 33), stypy_functions_copy_11385, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 508)
        create_src_comment_call_result_11389 = invoke(stypy.reporting.localization.Localization(__file__, 508, 33), create_src_comment_11386, *[str_11387], **kwargs_11388)
        
        # Processing the call keyword arguments (line 508)
        kwargs_11390 = {}
        # Getting the type of 'function_def' (line 508)
        function_def_11382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 508)
        body_11383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 8), function_def_11382, 'body')
        # Obtaining the member 'append' of a type (line 508)
        append_11384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 508, 8), body_11383, 'append')
        # Calling append(args, kwargs) (line 508)
        append_call_result_11391 = invoke(stypy.reporting.localization.Localization(__file__, 508, 8), append_11384, *[create_src_comment_call_result_11389], **kwargs_11390)
        
        
        # Assigning a Call to a Name (line 509):
        
        # Assigning a Call to a Name (line 509):
        
        # Call to create_arg_number_test(...): (line 509)
        # Processing the call arguments (line 509)
        # Getting the type of 'node' (line 509)
        node_11394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 59), 'node', False)
        # Processing the call keyword arguments (line 509)
        kwargs_11395 = {}
        # Getting the type of 'functions_copy' (line 509)
        functions_copy_11392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 21), 'functions_copy', False)
        # Obtaining the member 'create_arg_number_test' of a type (line 509)
        create_arg_number_test_11393 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 509, 21), functions_copy_11392, 'create_arg_number_test')
        # Calling create_arg_number_test(args, kwargs) (line 509)
        create_arg_number_test_call_result_11396 = invoke(stypy.reporting.localization.Localization(__file__, 509, 21), create_arg_number_test_11393, *[node_11394], **kwargs_11395)
        
        # Assigning a type to the variable 'f_preamble' (line 509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 509, 8), 'f_preamble', create_arg_number_test_call_result_11396)
        
        # Call to append(...): (line 510)
        # Processing the call arguments (line 510)
        # Getting the type of 'f_preamble' (line 510)
        f_preamble_11400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 33), 'f_preamble', False)
        # Processing the call keyword arguments (line 510)
        kwargs_11401 = {}
        # Getting the type of 'function_def' (line 510)
        function_def_11397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 510, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 510)
        body_11398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 8), function_def_11397, 'body')
        # Obtaining the member 'append' of a type (line 510)
        append_11399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 510, 8), body_11398, 'append')
        # Calling append(args, kwargs) (line 510)
        append_call_result_11402 = invoke(stypy.reporting.localization.Localization(__file__, 510, 8), append_11399, *[f_preamble_11400], **kwargs_11401)
        
        
        # Call to append(...): (line 513)
        # Processing the call arguments (line 513)
        
        # Call to create_src_comment(...): (line 513)
        # Processing the call arguments (line 513)
        str_11408 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 73), 'str', 'Stacktrace push for error reporting')
        # Processing the call keyword arguments (line 513)
        kwargs_11409 = {}
        # Getting the type of 'stypy_functions_copy' (line 513)
        stypy_functions_copy_11406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 513)
        create_src_comment_11407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 33), stypy_functions_copy_11406, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 513)
        create_src_comment_call_result_11410 = invoke(stypy.reporting.localization.Localization(__file__, 513, 33), create_src_comment_11407, *[str_11408], **kwargs_11409)
        
        # Processing the call keyword arguments (line 513)
        kwargs_11411 = {}
        # Getting the type of 'function_def' (line 513)
        function_def_11403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 513)
        body_11404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 8), function_def_11403, 'body')
        # Obtaining the member 'append' of a type (line 513)
        append_11405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 513, 8), body_11404, 'append')
        # Calling append(args, kwargs) (line 513)
        append_call_result_11412 = invoke(stypy.reporting.localization.Localization(__file__, 513, 8), append_11405, *[create_src_comment_call_result_11410], **kwargs_11411)
        
        
        # Assigning a Call to a Name (line 514):
        
        # Assigning a Call to a Name (line 514):
        
        # Call to obtain_arg_list(...): (line 514)
        # Processing the call arguments (line 514)
        # Getting the type of 'node' (line 514)
        node_11415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 60), 'node', False)
        # Obtaining the member 'args' of a type (line 514)
        args_11416 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 60), node_11415, 'args')
        
        # Call to is_method(...): (line 514)
        # Processing the call arguments (line 514)
        # Getting the type of 'context' (line 514)
        context_11419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 96), 'context', False)
        # Processing the call keyword arguments (line 514)
        kwargs_11420 = {}
        # Getting the type of 'functions_copy' (line 514)
        functions_copy_11417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 71), 'functions_copy', False)
        # Obtaining the member 'is_method' of a type (line 514)
        is_method_11418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 71), functions_copy_11417, 'is_method')
        # Calling is_method(args, kwargs) (line 514)
        is_method_call_result_11421 = invoke(stypy.reporting.localization.Localization(__file__, 514, 71), is_method_11418, *[context_11419], **kwargs_11420)
        
        # Processing the call keyword arguments (line 514)
        kwargs_11422 = {}
        # Getting the type of 'functions_copy' (line 514)
        functions_copy_11413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 29), 'functions_copy', False)
        # Obtaining the member 'obtain_arg_list' of a type (line 514)
        obtain_arg_list_11414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 29), functions_copy_11413, 'obtain_arg_list')
        # Calling obtain_arg_list(args, kwargs) (line 514)
        obtain_arg_list_call_result_11423 = invoke(stypy.reporting.localization.Localization(__file__, 514, 29), obtain_arg_list_11414, *[args_11416, is_method_call_result_11421], **kwargs_11422)
        
        # Assigning a type to the variable 'declared_arguments' (line 514)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 8), 'declared_arguments', obtain_arg_list_call_result_11423)
        
        # Assigning a Call to a Name (line 515):
        
        # Assigning a Call to a Name (line 515):
        
        # Call to create_stacktrace_push(...): (line 515)
        # Processing the call arguments (line 515)
        # Getting the type of 'node' (line 515)
        node_11426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 59), 'node', False)
        # Obtaining the member 'name' of a type (line 515)
        name_11427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 59), node_11426, 'name')
        # Getting the type of 'declared_arguments' (line 515)
        declared_arguments_11428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 70), 'declared_arguments', False)
        # Processing the call keyword arguments (line 515)
        kwargs_11429 = {}
        # Getting the type of 'functions_copy' (line 515)
        functions_copy_11424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 21), 'functions_copy', False)
        # Obtaining the member 'create_stacktrace_push' of a type (line 515)
        create_stacktrace_push_11425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 21), functions_copy_11424, 'create_stacktrace_push')
        # Calling create_stacktrace_push(args, kwargs) (line 515)
        create_stacktrace_push_call_result_11430 = invoke(stypy.reporting.localization.Localization(__file__, 515, 21), create_stacktrace_push_11425, *[name_11427, declared_arguments_11428], **kwargs_11429)
        
        # Assigning a type to the variable 'stack_push' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'stack_push', create_stacktrace_push_call_result_11430)
        
        # Call to append(...): (line 516)
        # Processing the call arguments (line 516)
        # Getting the type of 'stack_push' (line 516)
        stack_push_11434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 33), 'stack_push', False)
        # Processing the call keyword arguments (line 516)
        kwargs_11435 = {}
        # Getting the type of 'function_def' (line 516)
        function_def_11431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 516)
        body_11432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 8), function_def_11431, 'body')
        # Obtaining the member 'append' of a type (line 516)
        append_11433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 8), body_11432, 'append')
        # Calling append(args, kwargs) (line 516)
        append_call_result_11436 = invoke(stypy.reporting.localization.Localization(__file__, 516, 8), append_11433, *[stack_push_11434], **kwargs_11435)
        
        
        # Call to append(...): (line 521)
        # Processing the call arguments (line 521)
        
        # Call to create_src_comment(...): (line 521)
        # Processing the call arguments (line 521)
        str_11442 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, 73), 'str', 'Default return type storage variable (SSA)')
        # Processing the call keyword arguments (line 521)
        kwargs_11443 = {}
        # Getting the type of 'stypy_functions_copy' (line 521)
        stypy_functions_copy_11440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 521)
        create_src_comment_11441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 33), stypy_functions_copy_11440, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 521)
        create_src_comment_call_result_11444 = invoke(stypy.reporting.localization.Localization(__file__, 521, 33), create_src_comment_11441, *[str_11442], **kwargs_11443)
        
        # Processing the call keyword arguments (line 521)
        kwargs_11445 = {}
        # Getting the type of 'function_def' (line 521)
        function_def_11437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 521)
        body_11438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 8), function_def_11437, 'body')
        # Obtaining the member 'append' of a type (line 521)
        append_11439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 8), body_11438, 'append')
        # Calling append(args, kwargs) (line 521)
        append_call_result_11446 = invoke(stypy.reporting.localization.Localization(__file__, 521, 8), append_11439, *[create_src_comment_call_result_11444], **kwargs_11445)
        
        
        # Call to append(...): (line 522)
        # Processing the call arguments (line 522)
        
        # Call to create_default_return_variable(...): (line 522)
        # Processing the call keyword arguments (line 522)
        kwargs_11452 = {}
        # Getting the type of 'stypy_functions_copy' (line 522)
        stypy_functions_copy_11450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_default_return_variable' of a type (line 522)
        create_default_return_variable_11451 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 33), stypy_functions_copy_11450, 'create_default_return_variable')
        # Calling create_default_return_variable(args, kwargs) (line 522)
        create_default_return_variable_call_result_11453 = invoke(stypy.reporting.localization.Localization(__file__, 522, 33), create_default_return_variable_11451, *[], **kwargs_11452)
        
        # Processing the call keyword arguments (line 522)
        kwargs_11454 = {}
        # Getting the type of 'function_def' (line 522)
        function_def_11447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 522)
        body_11448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 8), function_def_11447, 'body')
        # Obtaining the member 'append' of a type (line 522)
        append_11449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 8), body_11448, 'append')
        # Calling append(args, kwargs) (line 522)
        append_call_result_11455 = invoke(stypy.reporting.localization.Localization(__file__, 522, 8), append_11449, *[create_default_return_variable_call_result_11453], **kwargs_11454)
        
        
        # Call to append(...): (line 524)
        # Processing the call arguments (line 524)
        
        # Call to create_blank_line(...): (line 524)
        # Processing the call keyword arguments (line 524)
        kwargs_11461 = {}
        # Getting the type of 'stypy_functions_copy' (line 524)
        stypy_functions_copy_11459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 524)
        create_blank_line_11460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 33), stypy_functions_copy_11459, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 524)
        create_blank_line_call_result_11462 = invoke(stypy.reporting.localization.Localization(__file__, 524, 33), create_blank_line_11460, *[], **kwargs_11461)
        
        # Processing the call keyword arguments (line 524)
        kwargs_11463 = {}
        # Getting the type of 'function_def' (line 524)
        function_def_11456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 524)
        body_11457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 8), function_def_11456, 'body')
        # Obtaining the member 'append' of a type (line 524)
        append_11458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 8), body_11457, 'append')
        # Calling append(args, kwargs) (line 524)
        append_call_result_11464 = invoke(stypy.reporting.localization.Localization(__file__, 524, 8), append_11458, *[create_blank_line_call_result_11462], **kwargs_11463)
        
        
        # Call to append(...): (line 525)
        # Processing the call arguments (line 525)
        
        # Call to create_src_comment(...): (line 526)
        # Processing the call arguments (line 526)
        
        # Call to format(...): (line 526)
        # Processing the call arguments (line 526)
        # Getting the type of 'node' (line 526)
        node_11472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 94), 'node', False)
        # Obtaining the member 'name' of a type (line 526)
        name_11473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 94), node_11472, 'name')
        # Processing the call keyword arguments (line 526)
        kwargs_11474 = {}
        str_11470 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 526, 52), 'str', "Begin of the function '{0}' code")
        # Obtaining the member 'format' of a type (line 526)
        format_11471 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 52), str_11470, 'format')
        # Calling format(args, kwargs) (line 526)
        format_call_result_11475 = invoke(stypy.reporting.localization.Localization(__file__, 526, 52), format_11471, *[name_11473], **kwargs_11474)
        
        # Processing the call keyword arguments (line 526)
        kwargs_11476 = {}
        # Getting the type of 'stypy_functions_copy' (line 526)
        stypy_functions_copy_11468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 526)
        create_src_comment_11469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 12), stypy_functions_copy_11468, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 526)
        create_src_comment_call_result_11477 = invoke(stypy.reporting.localization.Localization(__file__, 526, 12), create_src_comment_11469, *[format_call_result_11475], **kwargs_11476)
        
        # Processing the call keyword arguments (line 525)
        kwargs_11478 = {}
        # Getting the type of 'function_def' (line 525)
        function_def_11465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 525, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 525)
        body_11466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 8), function_def_11465, 'body')
        # Obtaining the member 'append' of a type (line 525)
        append_11467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 525, 8), body_11466, 'append')
        # Calling append(args, kwargs) (line 525)
        append_call_result_11479 = invoke(stypy.reporting.localization.Localization(__file__, 525, 8), append_11467, *[create_src_comment_call_result_11477], **kwargs_11478)
        
        
        # Assigning a Call to a Tuple (line 529):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'node' (line 529)
        node_11482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 33), 'node', False)
        # Obtaining the member 'body' of a type (line 529)
        body_11483 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 33), node_11482, 'body')
        # Getting the type of 'context' (line 529)
        context_11484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 44), 'context', False)
        # Processing the call keyword arguments (line 529)
        kwargs_11485 = {}
        # Getting the type of 'self' (line 529)
        self_11480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 22), 'self', False)
        # Obtaining the member 'visit' of a type (line 529)
        visit_11481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 22), self_11480, 'visit')
        # Calling visit(args, kwargs) (line 529)
        visit_call_result_11486 = invoke(stypy.reporting.localization.Localization(__file__, 529, 22), visit_11481, *[body_11483, context_11484], **kwargs_11485)
        
        # Assigning a type to the variable 'call_assignment_9517' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'call_assignment_9517', visit_call_result_11486)
        
        # Assigning a Call to a Name (line 529):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9517' (line 529)
        call_assignment_9517_11487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'call_assignment_9517', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11488 = stypy_get_value_from_tuple(call_assignment_9517_11487, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9518' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'call_assignment_9518', stypy_get_value_from_tuple_call_result_11488)
        
        # Assigning a Name to a Name (line 529):
        # Getting the type of 'call_assignment_9518' (line 529)
        call_assignment_9518_11489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'call_assignment_9518')
        # Assigning a type to the variable 'stmts' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'stmts', call_assignment_9518_11489)
        
        # Assigning a Call to a Name (line 529):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9517' (line 529)
        call_assignment_9517_11490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'call_assignment_9517', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11491 = stypy_get_value_from_tuple(call_assignment_9517_11490, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9519' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'call_assignment_9519', stypy_get_value_from_tuple_call_result_11491)
        
        # Assigning a Name to a Name (line 529):
        # Getting the type of 'call_assignment_9519' (line 529)
        call_assignment_9519_11492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'call_assignment_9519')
        # Assigning a type to the variable 'temp' (line 529)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 529, 15), 'temp', call_assignment_9519_11492)
        
        # Call to append(...): (line 530)
        # Processing the call arguments (line 530)
        # Getting the type of 'stmts' (line 530)
        stmts_11496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 33), 'stmts', False)
        # Processing the call keyword arguments (line 530)
        kwargs_11497 = {}
        # Getting the type of 'function_def' (line 530)
        function_def_11493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 530)
        body_11494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 8), function_def_11493, 'body')
        # Obtaining the member 'append' of a type (line 530)
        append_11495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 8), body_11494, 'append')
        # Calling append(args, kwargs) (line 530)
        append_call_result_11498 = invoke(stypy.reporting.localization.Localization(__file__, 530, 8), append_11495, *[stmts_11496], **kwargs_11497)
        
        
        # Assigning a Call to a Attribute (line 531):
        
        # Assigning a Call to a Attribute (line 531):
        
        # Call to flatten_lists(...): (line 531)
        # Processing the call arguments (line 531)
        # Getting the type of 'function_def' (line 531)
        function_def_11501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 63), 'function_def', False)
        # Obtaining the member 'body' of a type (line 531)
        body_11502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 63), function_def_11501, 'body')
        # Processing the call keyword arguments (line 531)
        kwargs_11503 = {}
        # Getting the type of 'stypy_functions_copy' (line 531)
        stypy_functions_copy_11499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 531)
        flatten_lists_11500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 28), stypy_functions_copy_11499, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 531)
        flatten_lists_call_result_11504 = invoke(stypy.reporting.localization.Localization(__file__, 531, 28), flatten_lists_11500, *[body_11502], **kwargs_11503)
        
        # Getting the type of 'function_def' (line 531)
        function_def_11505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'function_def')
        # Setting the type of the member 'body' of a type (line 531)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 8), function_def_11505, 'body', flatten_lists_call_result_11504)
        
        # Assigning a Call to a Name (line 534):
        
        # Assigning a Call to a Name (line 534):
        
        # Call to create_src_comment(...): (line 534)
        # Processing the call arguments (line 534)
        str_11508 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 534, 65), 'str', 'Assigning the return type of the lambda function')
        # Processing the call keyword arguments (line 534)
        kwargs_11509 = {}
        # Getting the type of 'stypy_functions_copy' (line 534)
        stypy_functions_copy_11506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 25), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 534)
        create_src_comment_11507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 25), stypy_functions_copy_11506, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 534)
        create_src_comment_call_result_11510 = invoke(stypy.reporting.localization.Localization(__file__, 534, 25), create_src_comment_11507, *[str_11508], **kwargs_11509)
        
        # Assigning a type to the variable 'return_comment' (line 534)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'return_comment', create_src_comment_call_result_11510)
        
        # Call to append(...): (line 535)
        # Processing the call arguments (line 535)
        # Getting the type of 'return_comment' (line 535)
        return_comment_11514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 33), 'return_comment', False)
        # Processing the call keyword arguments (line 535)
        kwargs_11515 = {}
        # Getting the type of 'function_def' (line 535)
        function_def_11511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 535)
        body_11512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 8), function_def_11511, 'body')
        # Obtaining the member 'append' of a type (line 535)
        append_11513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 535, 8), body_11512, 'append')
        # Calling append(args, kwargs) (line 535)
        append_call_result_11516 = invoke(stypy.reporting.localization.Localization(__file__, 535, 8), append_11513, *[return_comment_11514], **kwargs_11515)
        
        
        # Assigning a Call to a Name (line 536):
        
        # Assigning a Call to a Name (line 536):
        
        # Call to create_Name(...): (line 536)
        # Processing the call arguments (line 536)
        # Getting the type of 'stypy_functions_copy' (line 536)
        stypy_functions_copy_11519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 71), 'stypy_functions_copy', False)
        # Obtaining the member 'default_function_ret_var_name' of a type (line 536)
        default_function_ret_var_name_11520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 71), stypy_functions_copy_11519, 'default_function_ret_var_name')
        # Processing the call keyword arguments (line 536)
        kwargs_11521 = {}
        # Getting the type of 'core_language_copy' (line 536)
        core_language_copy_11517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 40), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 536)
        create_Name_11518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 40), core_language_copy_11517, 'create_Name')
        # Calling create_Name(args, kwargs) (line 536)
        create_Name_call_result_11522 = invoke(stypy.reporting.localization.Localization(__file__, 536, 40), create_Name_11518, *[default_function_ret_var_name_11520], **kwargs_11521)
        
        # Assigning a type to the variable 'default_function_ret_var_name' (line 536)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 8), 'default_function_ret_var_name', create_Name_call_result_11522)
        
        # Assigning a Call to a Name (line 537):
        
        # Assigning a Call to a Name (line 537):
        
        # Call to create_Assign(...): (line 537)
        # Processing the call arguments (line 537)
        # Getting the type of 'default_function_ret_var_name' (line 537)
        default_function_ret_var_name_11525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 54), 'default_function_ret_var_name', False)
        # Getting the type of 'temp' (line 537)
        temp_11526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 85), 'temp', False)
        # Processing the call keyword arguments (line 537)
        kwargs_11527 = {}
        # Getting the type of 'core_language_copy' (line 537)
        core_language_copy_11523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 21), 'core_language_copy', False)
        # Obtaining the member 'create_Assign' of a type (line 537)
        create_Assign_11524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 21), core_language_copy_11523, 'create_Assign')
        # Calling create_Assign(args, kwargs) (line 537)
        create_Assign_call_result_11528 = invoke(stypy.reporting.localization.Localization(__file__, 537, 21), create_Assign_11524, *[default_function_ret_var_name_11525, temp_11526], **kwargs_11527)
        
        # Assigning a type to the variable 'ret_assign' (line 537)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 8), 'ret_assign', create_Assign_call_result_11528)
        
        # Call to append(...): (line 538)
        # Processing the call arguments (line 538)
        # Getting the type of 'ret_assign' (line 538)
        ret_assign_11532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 33), 'ret_assign', False)
        # Processing the call keyword arguments (line 538)
        kwargs_11533 = {}
        # Getting the type of 'function_def' (line 538)
        function_def_11529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 538)
        body_11530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 8), function_def_11529, 'body')
        # Obtaining the member 'append' of a type (line 538)
        append_11531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 8), body_11530, 'append')
        # Calling append(args, kwargs) (line 538)
        append_call_result_11534 = invoke(stypy.reporting.localization.Localization(__file__, 538, 8), append_11531, *[ret_assign_11532], **kwargs_11533)
        
        
        # Call to append(...): (line 540)
        # Processing the call arguments (line 540)
        
        # Call to create_end_block_src_comment(...): (line 541)
        # Processing the call arguments (line 541)
        
        # Call to format(...): (line 541)
        # Processing the call arguments (line 541)
        # Getting the type of 'node' (line 541)
        node_11542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 102), 'node', False)
        # Obtaining the member 'name' of a type (line 541)
        name_11543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 102), node_11542, 'name')
        # Processing the call keyword arguments (line 541)
        kwargs_11544 = {}
        str_11540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 62), 'str', "End of the function '{0}' code")
        # Obtaining the member 'format' of a type (line 541)
        format_11541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 62), str_11540, 'format')
        # Calling format(args, kwargs) (line 541)
        format_call_result_11545 = invoke(stypy.reporting.localization.Localization(__file__, 541, 62), format_11541, *[name_11543], **kwargs_11544)
        
        # Processing the call keyword arguments (line 541)
        kwargs_11546 = {}
        # Getting the type of 'stypy_functions_copy' (line 541)
        stypy_functions_copy_11538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_end_block_src_comment' of a type (line 541)
        create_end_block_src_comment_11539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 12), stypy_functions_copy_11538, 'create_end_block_src_comment')
        # Calling create_end_block_src_comment(args, kwargs) (line 541)
        create_end_block_src_comment_call_result_11547 = invoke(stypy.reporting.localization.Localization(__file__, 541, 12), create_end_block_src_comment_11539, *[format_call_result_11545], **kwargs_11546)
        
        # Processing the call keyword arguments (line 540)
        kwargs_11548 = {}
        # Getting the type of 'function_def' (line 540)
        function_def_11535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 540)
        body_11536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 8), function_def_11535, 'body')
        # Obtaining the member 'append' of a type (line 540)
        append_11537 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 8), body_11536, 'append')
        # Calling append(args, kwargs) (line 540)
        append_call_result_11549 = invoke(stypy.reporting.localization.Localization(__file__, 540, 8), append_11537, *[create_end_block_src_comment_call_result_11547], **kwargs_11548)
        
        
        # Call to append(...): (line 544)
        # Processing the call arguments (line 544)
        
        # Call to create_src_comment(...): (line 544)
        # Processing the call arguments (line 544)
        str_11555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 544, 73), 'str', 'Stacktrace pop (error reporting)')
        # Processing the call keyword arguments (line 544)
        kwargs_11556 = {}
        # Getting the type of 'stypy_functions_copy' (line 544)
        stypy_functions_copy_11553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 544)
        create_src_comment_11554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 33), stypy_functions_copy_11553, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 544)
        create_src_comment_call_result_11557 = invoke(stypy.reporting.localization.Localization(__file__, 544, 33), create_src_comment_11554, *[str_11555], **kwargs_11556)
        
        # Processing the call keyword arguments (line 544)
        kwargs_11558 = {}
        # Getting the type of 'function_def' (line 544)
        function_def_11550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 544, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 544)
        body_11551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), function_def_11550, 'body')
        # Obtaining the member 'append' of a type (line 544)
        append_11552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 544, 8), body_11551, 'append')
        # Calling append(args, kwargs) (line 544)
        append_call_result_11559 = invoke(stypy.reporting.localization.Localization(__file__, 544, 8), append_11552, *[create_src_comment_call_result_11557], **kwargs_11558)
        
        
        # Assigning a Call to a Name (line 545):
        
        # Assigning a Call to a Name (line 545):
        
        # Call to create_stacktrace_pop(...): (line 545)
        # Processing the call keyword arguments (line 545)
        kwargs_11562 = {}
        # Getting the type of 'functions_copy' (line 545)
        functions_copy_11560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 20), 'functions_copy', False)
        # Obtaining the member 'create_stacktrace_pop' of a type (line 545)
        create_stacktrace_pop_11561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 20), functions_copy_11560, 'create_stacktrace_pop')
        # Calling create_stacktrace_pop(args, kwargs) (line 545)
        create_stacktrace_pop_call_result_11563 = invoke(stypy.reporting.localization.Localization(__file__, 545, 20), create_stacktrace_pop_11561, *[], **kwargs_11562)
        
        # Assigning a type to the variable 'stack_pop' (line 545)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 8), 'stack_pop', create_stacktrace_pop_call_result_11563)
        
        # Call to append(...): (line 546)
        # Processing the call arguments (line 546)
        # Getting the type of 'stack_pop' (line 546)
        stack_pop_11567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 33), 'stack_pop', False)
        # Processing the call keyword arguments (line 546)
        kwargs_11568 = {}
        # Getting the type of 'function_def' (line 546)
        function_def_11564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 546)
        body_11565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 8), function_def_11564, 'body')
        # Obtaining the member 'append' of a type (line 546)
        append_11566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 8), body_11565, 'append')
        # Calling append(args, kwargs) (line 546)
        append_call_result_11569 = invoke(stypy.reporting.localization.Localization(__file__, 546, 8), append_11566, *[stack_pop_11567], **kwargs_11568)
        
        
        # Call to append(...): (line 549)
        # Processing the call arguments (line 549)
        
        # Call to create_src_comment(...): (line 549)
        # Processing the call arguments (line 549)
        
        # Call to format(...): (line 550)
        # Processing the call arguments (line 550)
        # Getting the type of 'node' (line 550)
        node_11577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 81), 'node', False)
        # Obtaining the member 'name' of a type (line 550)
        name_11578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 81), node_11577, 'name')
        # Processing the call keyword arguments (line 550)
        kwargs_11579 = {}
        str_11575 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 34), 'str', "Destroy the context of function '{0}'")
        # Obtaining the member 'format' of a type (line 550)
        format_11576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 34), str_11575, 'format')
        # Calling format(args, kwargs) (line 550)
        format_call_result_11580 = invoke(stypy.reporting.localization.Localization(__file__, 550, 34), format_11576, *[name_11578], **kwargs_11579)
        
        # Processing the call keyword arguments (line 549)
        kwargs_11581 = {}
        # Getting the type of 'stypy_functions_copy' (line 549)
        stypy_functions_copy_11573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 549)
        create_src_comment_11574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 33), stypy_functions_copy_11573, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 549)
        create_src_comment_call_result_11582 = invoke(stypy.reporting.localization.Localization(__file__, 549, 33), create_src_comment_11574, *[format_call_result_11580], **kwargs_11581)
        
        # Processing the call keyword arguments (line 549)
        kwargs_11583 = {}
        # Getting the type of 'function_def' (line 549)
        function_def_11570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 549, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 549)
        body_11571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 8), function_def_11570, 'body')
        # Obtaining the member 'append' of a type (line 549)
        append_11572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 549, 8), body_11571, 'append')
        # Calling append(args, kwargs) (line 549)
        append_call_result_11584 = invoke(stypy.reporting.localization.Localization(__file__, 549, 8), append_11572, *[create_src_comment_call_result_11582], **kwargs_11583)
        
        
        # Assigning a Call to a Name (line 551):
        
        # Assigning a Call to a Name (line 551):
        
        # Call to create_context_unset(...): (line 551)
        # Processing the call keyword arguments (line 551)
        kwargs_11587 = {}
        # Getting the type of 'functions_copy' (line 551)
        functions_copy_11585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 24), 'functions_copy', False)
        # Obtaining the member 'create_context_unset' of a type (line 551)
        create_context_unset_11586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 24), functions_copy_11585, 'create_context_unset')
        # Calling create_context_unset(args, kwargs) (line 551)
        create_context_unset_call_result_11588 = invoke(stypy.reporting.localization.Localization(__file__, 551, 24), create_context_unset_11586, *[], **kwargs_11587)
        
        # Assigning a type to the variable 'context_unset' (line 551)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 551, 8), 'context_unset', create_context_unset_call_result_11588)
        
        # Call to append(...): (line 552)
        # Processing the call arguments (line 552)
        # Getting the type of 'context_unset' (line 552)
        context_unset_11592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 33), 'context_unset', False)
        # Processing the call keyword arguments (line 552)
        kwargs_11593 = {}
        # Getting the type of 'function_def' (line 552)
        function_def_11589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 552)
        body_11590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 8), function_def_11589, 'body')
        # Obtaining the member 'append' of a type (line 552)
        append_11591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 8), body_11590, 'append')
        # Calling append(args, kwargs) (line 552)
        append_call_result_11594 = invoke(stypy.reporting.localization.Localization(__file__, 552, 8), append_11591, *[context_unset_11592], **kwargs_11593)
        
        
        # Call to append(...): (line 556)
        # Processing the call arguments (line 556)
        
        # Call to create_src_comment(...): (line 556)
        # Processing the call arguments (line 556)
        str_11600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 556, 73), 'str', 'Return type of the function')
        # Processing the call keyword arguments (line 556)
        kwargs_11601 = {}
        # Getting the type of 'stypy_functions_copy' (line 556)
        stypy_functions_copy_11598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 556)
        create_src_comment_11599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 33), stypy_functions_copy_11598, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 556)
        create_src_comment_call_result_11602 = invoke(stypy.reporting.localization.Localization(__file__, 556, 33), create_src_comment_11599, *[str_11600], **kwargs_11601)
        
        # Processing the call keyword arguments (line 556)
        kwargs_11603 = {}
        # Getting the type of 'function_def' (line 556)
        function_def_11595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 556)
        body_11596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 8), function_def_11595, 'body')
        # Obtaining the member 'append' of a type (line 556)
        append_11597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 8), body_11596, 'append')
        # Calling append(args, kwargs) (line 556)
        append_call_result_11604 = invoke(stypy.reporting.localization.Localization(__file__, 556, 8), append_11597, *[create_src_comment_call_result_11602], **kwargs_11603)
        
        
        # Call to append(...): (line 557)
        # Processing the call arguments (line 557)
        
        # Call to create_return_from_function(...): (line 557)
        # Processing the call arguments (line 557)
        # Getting the type of 'node' (line 557)
        node_11610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 82), 'node', False)
        # Obtaining the member 'lineno' of a type (line 557)
        lineno_11611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 82), node_11610, 'lineno')
        # Getting the type of 'node' (line 557)
        node_11612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 95), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 557)
        col_offset_11613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 95), node_11612, 'col_offset')
        # Processing the call keyword arguments (line 557)
        kwargs_11614 = {}
        # Getting the type of 'stypy_functions_copy' (line 557)
        stypy_functions_copy_11608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_return_from_function' of a type (line 557)
        create_return_from_function_11609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 33), stypy_functions_copy_11608, 'create_return_from_function')
        # Calling create_return_from_function(args, kwargs) (line 557)
        create_return_from_function_call_result_11615 = invoke(stypy.reporting.localization.Localization(__file__, 557, 33), create_return_from_function_11609, *[lineno_11611, col_offset_11613], **kwargs_11614)
        
        # Processing the call keyword arguments (line 557)
        kwargs_11616 = {}
        # Getting the type of 'function_def' (line 557)
        function_def_11605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 557, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 557)
        body_11606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 8), function_def_11605, 'body')
        # Obtaining the member 'append' of a type (line 557)
        append_11607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 557, 8), body_11606, 'append')
        # Calling append(args, kwargs) (line 557)
        append_call_result_11617 = invoke(stypy.reporting.localization.Localization(__file__, 557, 8), append_11607, *[create_return_from_function_call_result_11615], **kwargs_11616)
        
        
        # Assigning a Call to a Name (line 562):
        
        # Assigning a Call to a Name (line 562):
        
        # Call to create_type_for_lambda_function(...): (line 562)
        # Processing the call arguments (line 562)
        # Getting the type of 'node' (line 562)
        node_11620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 71), 'node', False)
        # Obtaining the member 'name' of a type (line 562)
        name_11621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 71), node_11620, 'name')
        # Getting the type of 'node' (line 562)
        node_11622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 82), 'node', False)
        # Obtaining the member 'name' of a type (line 562)
        name_11623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 82), node_11622, 'name')
        # Getting the type of 'node' (line 563)
        node_11624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 66), 'node', False)
        # Obtaining the member 'lineno' of a type (line 563)
        lineno_11625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 66), node_11624, 'lineno')
        # Getting the type of 'node' (line 563)
        node_11626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 79), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 563)
        col_offset_11627 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 79), node_11626, 'col_offset')
        # Processing the call keyword arguments (line 562)
        kwargs_11628 = {}
        # Getting the type of 'functions_copy' (line 562)
        functions_copy_11618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 24), 'functions_copy', False)
        # Obtaining the member 'create_type_for_lambda_function' of a type (line 562)
        create_type_for_lambda_function_11619 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 562, 24), functions_copy_11618, 'create_type_for_lambda_function')
        # Calling create_type_for_lambda_function(args, kwargs) (line 562)
        create_type_for_lambda_function_call_result_11629 = invoke(stypy.reporting.localization.Localization(__file__, 562, 24), create_type_for_lambda_function_11619, *[name_11621, name_11623, lineno_11625, col_offset_11627], **kwargs_11628)
        
        # Assigning a type to the variable 'register_expr' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'register_expr', create_type_for_lambda_function_call_result_11629)
        
        # Assigning a Call to a Tuple (line 564):
        
        # Assigning a Call to a Name:
        
        # Call to create_get_type_of(...): (line 564)
        # Processing the call arguments (line 564)
        # Getting the type of 'node' (line 564)
        node_11632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 78), 'node', False)
        # Obtaining the member 'name' of a type (line 564)
        name_11633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 78), node_11632, 'name')
        # Getting the type of 'node' (line 564)
        node_11634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 89), 'node', False)
        # Obtaining the member 'lineno' of a type (line 564)
        lineno_11635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 89), node_11634, 'lineno')
        # Getting the type of 'node' (line 564)
        node_11636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 102), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 564)
        col_offset_11637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 102), node_11636, 'col_offset')
        # Processing the call keyword arguments (line 564)
        kwargs_11638 = {}
        # Getting the type of 'stypy_functions_copy' (line 564)
        stypy_functions_copy_11630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_get_type_of' of a type (line 564)
        create_get_type_of_11631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 38), stypy_functions_copy_11630, 'create_get_type_of')
        # Calling create_get_type_of(args, kwargs) (line 564)
        create_get_type_of_call_result_11639 = invoke(stypy.reporting.localization.Localization(__file__, 564, 38), create_get_type_of_11631, *[name_11633, lineno_11635, col_offset_11637], **kwargs_11638)
        
        # Assigning a type to the variable 'call_assignment_9520' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'call_assignment_9520', create_get_type_of_call_result_11639)
        
        # Assigning a Call to a Name (line 564):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9520' (line 564)
        call_assignment_9520_11640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'call_assignment_9520', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11641 = stypy_get_value_from_tuple(call_assignment_9520_11640, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9521' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'call_assignment_9521', stypy_get_value_from_tuple_call_result_11641)
        
        # Assigning a Name to a Name (line 564):
        # Getting the type of 'call_assignment_9521' (line 564)
        call_assignment_9521_11642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'call_assignment_9521')
        # Assigning a type to the variable 'get_lambda_stmt' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'get_lambda_stmt', call_assignment_9521_11642)
        
        # Assigning a Call to a Name (line 564):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9520' (line 564)
        call_assignment_9520_11643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'call_assignment_9520', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11644 = stypy_get_value_from_tuple(call_assignment_9520_11643, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9522' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'call_assignment_9522', stypy_get_value_from_tuple_call_result_11644)
        
        # Assigning a Name to a Name (line 564):
        # Getting the type of 'call_assignment_9522' (line 564)
        call_assignment_9522_11645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'call_assignment_9522')
        # Assigning a type to the variable 'lambda_var' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 25), 'lambda_var', call_assignment_9522_11645)
        
        # Obtaining an instance of the builtin type 'tuple' (line 566)
        tuple_11646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 566)
        # Adding element type (line 566)
        
        # Call to flatten_lists(...): (line 566)
        # Processing the call arguments (line 566)
        # Getting the type of 'function_def' (line 566)
        function_def_11649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 50), 'function_def', False)
        # Getting the type of 'register_expr' (line 566)
        register_expr_11650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 64), 'register_expr', False)
        # Getting the type of 'get_lambda_stmt' (line 566)
        get_lambda_stmt_11651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 79), 'get_lambda_stmt', False)
        # Processing the call keyword arguments (line 566)
        kwargs_11652 = {}
        # Getting the type of 'stypy_functions_copy' (line 566)
        stypy_functions_copy_11647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 566)
        flatten_lists_11648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 15), stypy_functions_copy_11647, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 566)
        flatten_lists_call_result_11653 = invoke(stypy.reporting.localization.Localization(__file__, 566, 15), flatten_lists_11648, *[function_def_11649, register_expr_11650, get_lambda_stmt_11651], **kwargs_11652)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 15), tuple_11646, flatten_lists_call_result_11653)
        # Adding element type (line 566)
        # Getting the type of 'lambda_var' (line 566)
        lambda_var_11654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 97), 'lambda_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 566, 15), tuple_11646, lambda_var_11654)
        
        # Assigning a type to the variable 'stypy_return_type' (line 566)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 566, 8), 'stypy_return_type', tuple_11646)
        
        # ################# End of 'visit_Lambda(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Lambda' in the type store
        # Getting the type of 'stypy_return_type' (line 472)
        stypy_return_type_11655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_11655)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Lambda'
        return stypy_return_type_11655


    @norecursion
    def visit_List(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_List'
        module_type_store = module_type_store.open_function_context('visit_List', 570, 4, False)
        # Assigning a type to the variable 'self' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_List')
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_List.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_List', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_List', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_List(...)' code ##################

        
        # Assigning a List to a Name (line 573):
        
        # Assigning a List to a Name (line 573):
        
        # Obtaining an instance of the builtin type 'list' (line 573)
        list_11656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 573)
        
        # Assigning a type to the variable 'list_stmts' (line 573)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 573, 8), 'list_stmts', list_11656)
        
        # Assigning a Call to a Name (line 575):
        
        # Assigning a Call to a Name (line 575):
        
        # Call to create_localization(...): (line 575)
        # Processing the call arguments (line 575)
        # Getting the type of 'node' (line 575)
        node_11659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 575)
        lineno_11660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 64), node_11659, 'lineno')
        # Getting the type of 'node' (line 575)
        node_11661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 575)
        col_offset_11662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 77), node_11661, 'col_offset')
        # Processing the call keyword arguments (line 575)
        kwargs_11663 = {}
        # Getting the type of 'stypy_functions_copy' (line 575)
        stypy_functions_copy_11657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 575)
        create_localization_11658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 23), stypy_functions_copy_11657, 'create_localization')
        # Calling create_localization(args, kwargs) (line 575)
        create_localization_call_result_11664 = invoke(stypy.reporting.localization.Localization(__file__, 575, 23), create_localization_11658, *[lineno_11660, col_offset_11662], **kwargs_11663)
        
        # Assigning a type to the variable 'localization' (line 575)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 575, 8), 'localization', create_localization_call_result_11664)
        
        # Assigning a Call to a Name (line 578):
        
        # Assigning a Call to a Name (line 578):
        
        # Call to create_src_comment(...): (line 578)
        # Processing the call arguments (line 578)
        str_11667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 578, 63), 'str', "Obtaining an instance of the builtin type 'list'")
        # Getting the type of 'node' (line 579)
        node_11668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 58), 'node', False)
        # Obtaining the member 'lineno' of a type (line 579)
        lineno_11669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 58), node_11668, 'lineno')
        # Processing the call keyword arguments (line 578)
        kwargs_11670 = {}
        # Getting the type of 'stypy_functions_copy' (line 578)
        stypy_functions_copy_11665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 578)
        create_src_comment_11666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 578, 23), stypy_functions_copy_11665, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 578)
        create_src_comment_call_result_11671 = invoke(stypy.reporting.localization.Localization(__file__, 578, 23), create_src_comment_11666, *[str_11667, lineno_11669], **kwargs_11670)
        
        # Assigning a type to the variable 'call_comment' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 8), 'call_comment', create_src_comment_call_result_11671)
        
        # Call to append(...): (line 580)
        # Processing the call arguments (line 580)
        # Getting the type of 'call_comment' (line 580)
        call_comment_11674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 26), 'call_comment', False)
        # Processing the call keyword arguments (line 580)
        kwargs_11675 = {}
        # Getting the type of 'list_stmts' (line 580)
        list_stmts_11672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'list_stmts', False)
        # Obtaining the member 'append' of a type (line 580)
        append_11673 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 8), list_stmts_11672, 'append')
        # Calling append(args, kwargs) (line 580)
        append_call_result_11676 = invoke(stypy.reporting.localization.Localization(__file__, 580, 8), append_11673, *[call_comment_11674], **kwargs_11675)
        
        
        # Assigning a Call to a Name (line 581):
        
        # Assigning a Call to a Name (line 581):
        
        # Call to create_Name(...): (line 581)
        # Processing the call arguments (line 581)
        str_11679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 581)
        kwargs_11680 = {}
        # Getting the type of 'core_language_copy' (line 581)
        core_language_copy_11677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 581)
        create_Name_11678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 24), core_language_copy_11677, 'create_Name')
        # Calling create_Name(args, kwargs) (line 581)
        create_Name_call_result_11681 = invoke(stypy.reporting.localization.Localization(__file__, 581, 24), create_Name_11678, *[str_11679], **kwargs_11680)
        
        # Assigning a type to the variable 'get_list_func' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'get_list_func', create_Name_call_result_11681)
        
        # Assigning a Call to a Name (line 582):
        
        # Assigning a Call to a Name (line 582):
        
        # Call to create_str(...): (line 582)
        # Processing the call arguments (line 582)
        str_11684 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 47), 'str', 'list')
        # Processing the call keyword arguments (line 582)
        kwargs_11685 = {}
        # Getting the type of 'core_language_copy' (line 582)
        core_language_copy_11682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 17), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 582)
        create_str_11683 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 17), core_language_copy_11682, 'create_str')
        # Calling create_str(args, kwargs) (line 582)
        create_str_call_result_11686 = invoke(stypy.reporting.localization.Localization(__file__, 582, 17), create_str_11683, *[str_11684], **kwargs_11685)
        
        # Assigning a type to the variable 'param1' (line 582)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 8), 'param1', create_str_call_result_11686)
        
        # Assigning a Call to a Name (line 583):
        
        # Assigning a Call to a Name (line 583):
        
        # Call to create_call(...): (line 583)
        # Processing the call arguments (line 583)
        # Getting the type of 'get_list_func' (line 583)
        get_list_func_11689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 51), 'get_list_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 583)
        list_11690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 66), 'list')
        # Adding type elements to the builtin type 'list' instance (line 583)
        # Adding element type (line 583)
        # Getting the type of 'localization' (line 583)
        localization_11691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 67), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 66), list_11690, localization_11691)
        # Adding element type (line 583)
        # Getting the type of 'param1' (line 583)
        param1_11692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 81), 'param1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 583, 66), list_11690, param1_11692)
        
        # Processing the call keyword arguments (line 583)
        kwargs_11693 = {}
        # Getting the type of 'functions_copy' (line 583)
        functions_copy_11687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 24), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 583)
        create_call_11688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 24), functions_copy_11687, 'create_call')
        # Calling create_call(args, kwargs) (line 583)
        create_call_call_result_11694 = invoke(stypy.reporting.localization.Localization(__file__, 583, 24), create_call_11688, *[get_list_func_11689, list_11690], **kwargs_11693)
        
        # Assigning a type to the variable 'get_list_call' (line 583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'get_list_call', create_call_call_result_11694)
        
        # Assigning a Call to a Tuple (line 584):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'get_list_call' (line 584)
        get_list_call_11697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 75), 'get_list_call', False)
        # Getting the type of 'node' (line 584)
        node_11698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 90), 'node', False)
        # Obtaining the member 'lineno' of a type (line 584)
        lineno_11699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 90), node_11698, 'lineno')
        # Getting the type of 'node' (line 584)
        node_11700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 103), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 584)
        col_offset_11701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 103), node_11700, 'col_offset')
        # Processing the call keyword arguments (line 584)
        kwargs_11702 = {}
        # Getting the type of 'stypy_functions_copy' (line 584)
        stypy_functions_copy_11695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 35), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 584)
        create_temp_Assign_11696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 35), stypy_functions_copy_11695, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 584)
        create_temp_Assign_call_result_11703 = invoke(stypy.reporting.localization.Localization(__file__, 584, 35), create_temp_Assign_11696, *[get_list_call_11697, lineno_11699, col_offset_11701], **kwargs_11702)
        
        # Assigning a type to the variable 'call_assignment_9523' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'call_assignment_9523', create_temp_Assign_call_result_11703)
        
        # Assigning a Call to a Name (line 584):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9523' (line 584)
        call_assignment_9523_11704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'call_assignment_9523', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11705 = stypy_get_value_from_tuple(call_assignment_9523_11704, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9524' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'call_assignment_9524', stypy_get_value_from_tuple_call_result_11705)
        
        # Assigning a Name to a Name (line 584):
        # Getting the type of 'call_assignment_9524' (line 584)
        call_assignment_9524_11706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'call_assignment_9524')
        # Assigning a type to the variable 'get_list_stmts' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'get_list_stmts', call_assignment_9524_11706)
        
        # Assigning a Call to a Name (line 584):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9523' (line 584)
        call_assignment_9523_11707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'call_assignment_9523', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11708 = stypy_get_value_from_tuple(call_assignment_9523_11707, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9525' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'call_assignment_9525', stypy_get_value_from_tuple_call_result_11708)
        
        # Assigning a Name to a Name (line 584):
        # Getting the type of 'call_assignment_9525' (line 584)
        call_assignment_9525_11709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'call_assignment_9525')
        # Assigning a type to the variable 'list_var' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 24), 'list_var', call_assignment_9525_11709)
        
        # Call to append(...): (line 585)
        # Processing the call arguments (line 585)
        # Getting the type of 'get_list_stmts' (line 585)
        get_list_stmts_11712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 26), 'get_list_stmts', False)
        # Processing the call keyword arguments (line 585)
        kwargs_11713 = {}
        # Getting the type of 'list_stmts' (line 585)
        list_stmts_11710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 8), 'list_stmts', False)
        # Obtaining the member 'append' of a type (line 585)
        append_11711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 8), list_stmts_11710, 'append')
        # Calling append(args, kwargs) (line 585)
        append_call_result_11714 = invoke(stypy.reporting.localization.Localization(__file__, 585, 8), append_11711, *[get_list_stmts_11712], **kwargs_11713)
        
        
        # Assigning a Call to a Name (line 587):
        
        # Assigning a Call to a Name (line 587):
        
        # Call to create_src_comment(...): (line 587)
        # Processing the call arguments (line 587)
        str_11717 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 587, 58), 'str', "Adding type elements to the builtin type 'list' instance")
        # Getting the type of 'node' (line 588)
        node_11718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 53), 'node', False)
        # Obtaining the member 'lineno' of a type (line 588)
        lineno_11719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 53), node_11718, 'lineno')
        # Processing the call keyword arguments (line 587)
        kwargs_11720 = {}
        # Getting the type of 'stypy_functions_copy' (line 587)
        stypy_functions_copy_11715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 587, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 587)
        create_src_comment_11716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 587, 18), stypy_functions_copy_11715, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 587)
        create_src_comment_call_result_11721 = invoke(stypy.reporting.localization.Localization(__file__, 587, 18), create_src_comment_11716, *[str_11717, lineno_11719], **kwargs_11720)
        
        # Assigning a type to the variable 'comment' (line 587)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 587, 8), 'comment', create_src_comment_call_result_11721)
        
        # Call to append(...): (line 589)
        # Processing the call arguments (line 589)
        # Getting the type of 'comment' (line 589)
        comment_11724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 26), 'comment', False)
        # Processing the call keyword arguments (line 589)
        kwargs_11725 = {}
        # Getting the type of 'list_stmts' (line 589)
        list_stmts_11722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 8), 'list_stmts', False)
        # Obtaining the member 'append' of a type (line 589)
        append_11723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 589, 8), list_stmts_11722, 'append')
        # Calling append(args, kwargs) (line 589)
        append_call_result_11726 = invoke(stypy.reporting.localization.Localization(__file__, 589, 8), append_11723, *[comment_11724], **kwargs_11725)
        
        
        # Assigning a Call to a Name (line 592):
        
        # Assigning a Call to a Name (line 592):
        
        # Call to create_attribute(...): (line 592)
        # Processing the call arguments (line 592)
        # Getting the type of 'list_var' (line 592)
        list_var_11729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 60), 'list_var', False)
        # Obtaining the member 'id' of a type (line 592)
        id_11730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 60), list_var_11729, 'id')
        str_11731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 592, 73), 'str', 'add_type')
        # Processing the call keyword arguments (line 592)
        kwargs_11732 = {}
        # Getting the type of 'core_language_copy' (line 592)
        core_language_copy_11727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 24), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 592)
        create_attribute_11728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 592, 24), core_language_copy_11727, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 592)
        create_attribute_call_result_11733 = invoke(stypy.reporting.localization.Localization(__file__, 592, 24), create_attribute_11728, *[id_11730, str_11731], **kwargs_11732)
        
        # Assigning a type to the variable 'add_type_func' (line 592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 8), 'add_type_func', create_attribute_call_result_11733)
        
        # Getting the type of 'node' (line 594)
        node_11734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 594, 23), 'node')
        # Obtaining the member 'elts' of a type (line 594)
        elts_11735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 594, 23), node_11734, 'elts')
        # Assigning a type to the variable 'elts_11735' (line 594)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'elts_11735', elts_11735)
        # Testing if the for loop is going to be iterated (line 594)
        # Testing the type of a for loop iterable (line 594)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 594, 8), elts_11735)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 594, 8), elts_11735):
            # Getting the type of the for loop variable (line 594)
            for_loop_var_11736 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 594, 8), elts_11735)
            # Assigning a type to the variable 'element' (line 594)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 594, 8), 'element', for_loop_var_11736)
            # SSA begins for a for statement (line 594)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 595):
            
            # Assigning a Call to a Name (line 595):
            
            # Call to create_src_comment(...): (line 595)
            # Processing the call arguments (line 595)
            str_11739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 62), 'str', 'Adding element type')
            # Getting the type of 'node' (line 595)
            node_11740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 85), 'node', False)
            # Obtaining the member 'lineno' of a type (line 595)
            lineno_11741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 85), node_11740, 'lineno')
            # Processing the call keyword arguments (line 595)
            kwargs_11742 = {}
            # Getting the type of 'stypy_functions_copy' (line 595)
            stypy_functions_copy_11737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 22), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 595)
            create_src_comment_11738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 595, 22), stypy_functions_copy_11737, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 595)
            create_src_comment_call_result_11743 = invoke(stypy.reporting.localization.Localization(__file__, 595, 22), create_src_comment_11738, *[str_11739, lineno_11741], **kwargs_11742)
            
            # Assigning a type to the variable 'comment' (line 595)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'comment', create_src_comment_call_result_11743)
            
            # Call to append(...): (line 596)
            # Processing the call arguments (line 596)
            # Getting the type of 'comment' (line 596)
            comment_11746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 30), 'comment', False)
            # Processing the call keyword arguments (line 596)
            kwargs_11747 = {}
            # Getting the type of 'list_stmts' (line 596)
            list_stmts_11744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'list_stmts', False)
            # Obtaining the member 'append' of a type (line 596)
            append_11745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 12), list_stmts_11744, 'append')
            # Calling append(args, kwargs) (line 596)
            append_call_result_11748 = invoke(stypy.reporting.localization.Localization(__file__, 596, 12), append_11745, *[comment_11746], **kwargs_11747)
            
            
            # Assigning a Call to a Tuple (line 597):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 597)
            # Processing the call arguments (line 597)
            # Getting the type of 'element' (line 597)
            element_11751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 53), 'element', False)
            # Getting the type of 'context' (line 597)
            context_11752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 62), 'context', False)
            # Processing the call keyword arguments (line 597)
            kwargs_11753 = {}
            # Getting the type of 'self' (line 597)
            self_11749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 42), 'self', False)
            # Obtaining the member 'visit' of a type (line 597)
            visit_11750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 597, 42), self_11749, 'visit')
            # Calling visit(args, kwargs) (line 597)
            visit_call_result_11754 = invoke(stypy.reporting.localization.Localization(__file__, 597, 42), visit_11750, *[element_11751, context_11752], **kwargs_11753)
            
            # Assigning a type to the variable 'call_assignment_9526' (line 597)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'call_assignment_9526', visit_call_result_11754)
            
            # Assigning a Call to a Name (line 597):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9526' (line 597)
            call_assignment_9526_11755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'call_assignment_9526', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11756 = stypy_get_value_from_tuple(call_assignment_9526_11755, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9527' (line 597)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'call_assignment_9527', stypy_get_value_from_tuple_call_result_11756)
            
            # Assigning a Name to a Name (line 597):
            # Getting the type of 'call_assignment_9527' (line 597)
            call_assignment_9527_11757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'call_assignment_9527')
            # Assigning a type to the variable 'element_stmts' (line 597)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'element_stmts', call_assignment_9527_11757)
            
            # Assigning a Call to a Name (line 597):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9526' (line 597)
            call_assignment_9526_11758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'call_assignment_9526', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11759 = stypy_get_value_from_tuple(call_assignment_9526_11758, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9528' (line 597)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'call_assignment_9528', stypy_get_value_from_tuple_call_result_11759)
            
            # Assigning a Name to a Name (line 597):
            # Getting the type of 'call_assignment_9528' (line 597)
            call_assignment_9528_11760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 12), 'call_assignment_9528')
            # Assigning a type to the variable 'list_element' (line 597)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 27), 'list_element', call_assignment_9528_11760)
            
            # Call to append(...): (line 598)
            # Processing the call arguments (line 598)
            
            # Call to flatten_lists(...): (line 598)
            # Processing the call arguments (line 598)
            # Getting the type of 'element_stmts' (line 598)
            element_stmts_11765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 65), 'element_stmts', False)
            # Processing the call keyword arguments (line 598)
            kwargs_11766 = {}
            # Getting the type of 'stypy_functions_copy' (line 598)
            stypy_functions_copy_11763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 30), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 598)
            flatten_lists_11764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 30), stypy_functions_copy_11763, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 598)
            flatten_lists_call_result_11767 = invoke(stypy.reporting.localization.Localization(__file__, 598, 30), flatten_lists_11764, *[element_stmts_11765], **kwargs_11766)
            
            # Processing the call keyword arguments (line 598)
            kwargs_11768 = {}
            # Getting the type of 'list_stmts' (line 598)
            list_stmts_11761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 12), 'list_stmts', False)
            # Obtaining the member 'append' of a type (line 598)
            append_11762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 12), list_stmts_11761, 'append')
            # Calling append(args, kwargs) (line 598)
            append_call_result_11769 = invoke(stypy.reporting.localization.Localization(__file__, 598, 12), append_11762, *[flatten_lists_call_result_11767], **kwargs_11768)
            
            
            # Assigning a Call to a Name (line 600):
            
            # Assigning a Call to a Name (line 600):
            
            # Call to create_call_expression(...): (line 600)
            # Processing the call arguments (line 600)
            # Getting the type of 'add_type_func' (line 600)
            add_type_func_11772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 74), 'add_type_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 600)
            list_11773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 600, 89), 'list')
            # Adding type elements to the builtin type 'list' instance (line 600)
            # Adding element type (line 600)
            # Getting the type of 'localization' (line 600)
            localization_11774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 90), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 89), list_11773, localization_11774)
            # Adding element type (line 600)
            # Getting the type of 'list_element' (line 600)
            list_element_11775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 104), 'list_element', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 600, 89), list_11773, list_element_11775)
            
            # Processing the call keyword arguments (line 600)
            kwargs_11776 = {}
            # Getting the type of 'functions_copy' (line 600)
            functions_copy_11770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 36), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 600)
            create_call_expression_11771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 600, 36), functions_copy_11770, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 600)
            create_call_expression_call_result_11777 = invoke(stypy.reporting.localization.Localization(__file__, 600, 36), create_call_expression_11771, *[add_type_func_11772, list_11773], **kwargs_11776)
            
            # Assigning a type to the variable 'add_type_to_list_call' (line 600)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 600, 12), 'add_type_to_list_call', create_call_expression_call_result_11777)
            
            # Call to append(...): (line 601)
            # Processing the call arguments (line 601)
            # Getting the type of 'add_type_to_list_call' (line 601)
            add_type_to_list_call_11780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 30), 'add_type_to_list_call', False)
            # Processing the call keyword arguments (line 601)
            kwargs_11781 = {}
            # Getting the type of 'list_stmts' (line 601)
            list_stmts_11778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 12), 'list_stmts', False)
            # Obtaining the member 'append' of a type (line 601)
            append_11779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 12), list_stmts_11778, 'append')
            # Calling append(args, kwargs) (line 601)
            append_call_result_11782 = invoke(stypy.reporting.localization.Localization(__file__, 601, 12), append_11779, *[add_type_to_list_call_11780], **kwargs_11781)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Obtaining an instance of the builtin type 'tuple' (line 603)
        tuple_11783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 603, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 603)
        # Adding element type (line 603)
        
        # Call to flatten_lists(...): (line 603)
        # Processing the call arguments (line 603)
        
        # Call to create_blank_line(...): (line 603)
        # Processing the call keyword arguments (line 603)
        kwargs_11788 = {}
        # Getting the type of 'stypy_functions_copy' (line 603)
        stypy_functions_copy_11786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 603)
        create_blank_line_11787 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 50), stypy_functions_copy_11786, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 603)
        create_blank_line_call_result_11789 = invoke(stypy.reporting.localization.Localization(__file__, 603, 50), create_blank_line_11787, *[], **kwargs_11788)
        
        # Getting the type of 'list_stmts' (line 604)
        list_stmts_11790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 45), 'list_stmts', False)
        
        # Call to create_blank_line(...): (line 605)
        # Processing the call keyword arguments (line 605)
        kwargs_11793 = {}
        # Getting the type of 'stypy_functions_copy' (line 605)
        stypy_functions_copy_11791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 605)
        create_blank_line_11792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 605, 45), stypy_functions_copy_11791, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 605)
        create_blank_line_call_result_11794 = invoke(stypy.reporting.localization.Localization(__file__, 605, 45), create_blank_line_11792, *[], **kwargs_11793)
        
        # Processing the call keyword arguments (line 603)
        kwargs_11795 = {}
        # Getting the type of 'stypy_functions_copy' (line 603)
        stypy_functions_copy_11784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 603)
        flatten_lists_11785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 603, 15), stypy_functions_copy_11784, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 603)
        flatten_lists_call_result_11796 = invoke(stypy.reporting.localization.Localization(__file__, 603, 15), flatten_lists_11785, *[create_blank_line_call_result_11789, list_stmts_11790, create_blank_line_call_result_11794], **kwargs_11795)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 15), tuple_11783, flatten_lists_call_result_11796)
        # Adding element type (line 603)
        # Getting the type of 'list_var' (line 605)
        list_var_11797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 88), 'list_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 603, 15), tuple_11783, list_var_11797)
        
        # Assigning a type to the variable 'stypy_return_type' (line 603)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 8), 'stypy_return_type', tuple_11783)
        
        # ################# End of 'visit_List(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_List' in the type store
        # Getting the type of 'stypy_return_type' (line 570)
        stypy_return_type_11798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_11798)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_List'
        return stypy_return_type_11798


    @norecursion
    def visit_Tuple(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Tuple'
        module_type_store = module_type_store.open_function_context('visit_Tuple', 607, 4, False)
        # Assigning a type to the variable 'self' (line 608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Tuple')
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Tuple.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Tuple', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Tuple', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Tuple(...)' code ##################

        
        # Assigning a List to a Name (line 610):
        
        # Assigning a List to a Name (line 610):
        
        # Obtaining an instance of the builtin type 'list' (line 610)
        list_11799 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 610)
        
        # Assigning a type to the variable 'tuple_stmts' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 8), 'tuple_stmts', list_11799)
        
        # Assigning a Call to a Name (line 612):
        
        # Assigning a Call to a Name (line 612):
        
        # Call to create_localization(...): (line 612)
        # Processing the call arguments (line 612)
        # Getting the type of 'node' (line 612)
        node_11802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 612)
        lineno_11803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 64), node_11802, 'lineno')
        # Getting the type of 'node' (line 612)
        node_11804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 612)
        col_offset_11805 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 77), node_11804, 'col_offset')
        # Processing the call keyword arguments (line 612)
        kwargs_11806 = {}
        # Getting the type of 'stypy_functions_copy' (line 612)
        stypy_functions_copy_11800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 612, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 612)
        create_localization_11801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 612, 23), stypy_functions_copy_11800, 'create_localization')
        # Calling create_localization(args, kwargs) (line 612)
        create_localization_call_result_11807 = invoke(stypy.reporting.localization.Localization(__file__, 612, 23), create_localization_11801, *[lineno_11803, col_offset_11805], **kwargs_11806)
        
        # Assigning a type to the variable 'localization' (line 612)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 8), 'localization', create_localization_call_result_11807)
        
        # Assigning a Call to a Name (line 615):
        
        # Assigning a Call to a Name (line 615):
        
        # Call to create_src_comment(...): (line 615)
        # Processing the call arguments (line 615)
        str_11810 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 615, 63), 'str', "Obtaining an instance of the builtin type 'tuple'")
        # Getting the type of 'node' (line 616)
        node_11811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 58), 'node', False)
        # Obtaining the member 'lineno' of a type (line 616)
        lineno_11812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 616, 58), node_11811, 'lineno')
        # Processing the call keyword arguments (line 615)
        kwargs_11813 = {}
        # Getting the type of 'stypy_functions_copy' (line 615)
        stypy_functions_copy_11808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 615)
        create_src_comment_11809 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 23), stypy_functions_copy_11808, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 615)
        create_src_comment_call_result_11814 = invoke(stypy.reporting.localization.Localization(__file__, 615, 23), create_src_comment_11809, *[str_11810, lineno_11812], **kwargs_11813)
        
        # Assigning a type to the variable 'call_comment' (line 615)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'call_comment', create_src_comment_call_result_11814)
        
        # Call to append(...): (line 617)
        # Processing the call arguments (line 617)
        # Getting the type of 'call_comment' (line 617)
        call_comment_11817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 27), 'call_comment', False)
        # Processing the call keyword arguments (line 617)
        kwargs_11818 = {}
        # Getting the type of 'tuple_stmts' (line 617)
        tuple_stmts_11815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 8), 'tuple_stmts', False)
        # Obtaining the member 'append' of a type (line 617)
        append_11816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 8), tuple_stmts_11815, 'append')
        # Calling append(args, kwargs) (line 617)
        append_call_result_11819 = invoke(stypy.reporting.localization.Localization(__file__, 617, 8), append_11816, *[call_comment_11817], **kwargs_11818)
        
        
        # Assigning a Call to a Name (line 618):
        
        # Assigning a Call to a Name (line 618):
        
        # Call to create_Name(...): (line 618)
        # Processing the call arguments (line 618)
        str_11822 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 618, 56), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 618)
        kwargs_11823 = {}
        # Getting the type of 'core_language_copy' (line 618)
        core_language_copy_11820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 25), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 618)
        create_Name_11821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 25), core_language_copy_11820, 'create_Name')
        # Calling create_Name(args, kwargs) (line 618)
        create_Name_call_result_11824 = invoke(stypy.reporting.localization.Localization(__file__, 618, 25), create_Name_11821, *[str_11822], **kwargs_11823)
        
        # Assigning a type to the variable 'get_tuple_func' (line 618)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'get_tuple_func', create_Name_call_result_11824)
        
        # Assigning a Call to a Name (line 619):
        
        # Assigning a Call to a Name (line 619):
        
        # Call to create_str(...): (line 619)
        # Processing the call arguments (line 619)
        str_11827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 619, 47), 'str', 'tuple')
        # Processing the call keyword arguments (line 619)
        kwargs_11828 = {}
        # Getting the type of 'core_language_copy' (line 619)
        core_language_copy_11825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 17), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 619)
        create_str_11826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 17), core_language_copy_11825, 'create_str')
        # Calling create_str(args, kwargs) (line 619)
        create_str_call_result_11829 = invoke(stypy.reporting.localization.Localization(__file__, 619, 17), create_str_11826, *[str_11827], **kwargs_11828)
        
        # Assigning a type to the variable 'param1' (line 619)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 8), 'param1', create_str_call_result_11829)
        
        # Assigning a Call to a Name (line 620):
        
        # Assigning a Call to a Name (line 620):
        
        # Call to create_call(...): (line 620)
        # Processing the call arguments (line 620)
        # Getting the type of 'get_tuple_func' (line 620)
        get_tuple_func_11832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 52), 'get_tuple_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 620)
        list_11833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 68), 'list')
        # Adding type elements to the builtin type 'list' instance (line 620)
        # Adding element type (line 620)
        # Getting the type of 'localization' (line 620)
        localization_11834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 69), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 68), list_11833, localization_11834)
        # Adding element type (line 620)
        # Getting the type of 'param1' (line 620)
        param1_11835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 83), 'param1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 620, 68), list_11833, param1_11835)
        
        # Processing the call keyword arguments (line 620)
        kwargs_11836 = {}
        # Getting the type of 'functions_copy' (line 620)
        functions_copy_11830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 25), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 620)
        create_call_11831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 620, 25), functions_copy_11830, 'create_call')
        # Calling create_call(args, kwargs) (line 620)
        create_call_call_result_11837 = invoke(stypy.reporting.localization.Localization(__file__, 620, 25), create_call_11831, *[get_tuple_func_11832, list_11833], **kwargs_11836)
        
        # Assigning a type to the variable 'get_tuple_call' (line 620)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 620, 8), 'get_tuple_call', create_call_call_result_11837)
        
        # Assigning a Call to a Tuple (line 621):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 621)
        # Processing the call arguments (line 621)
        # Getting the type of 'get_tuple_call' (line 621)
        get_tuple_call_11840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 76), 'get_tuple_call', False)
        # Getting the type of 'node' (line 621)
        node_11841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 92), 'node', False)
        # Obtaining the member 'lineno' of a type (line 621)
        lineno_11842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 92), node_11841, 'lineno')
        # Getting the type of 'node' (line 621)
        node_11843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 105), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 621)
        col_offset_11844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 105), node_11843, 'col_offset')
        # Processing the call keyword arguments (line 621)
        kwargs_11845 = {}
        # Getting the type of 'stypy_functions_copy' (line 621)
        stypy_functions_copy_11838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 36), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 621)
        create_temp_Assign_11839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 36), stypy_functions_copy_11838, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 621)
        create_temp_Assign_call_result_11846 = invoke(stypy.reporting.localization.Localization(__file__, 621, 36), create_temp_Assign_11839, *[get_tuple_call_11840, lineno_11842, col_offset_11844], **kwargs_11845)
        
        # Assigning a type to the variable 'call_assignment_9529' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'call_assignment_9529', create_temp_Assign_call_result_11846)
        
        # Assigning a Call to a Name (line 621):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9529' (line 621)
        call_assignment_9529_11847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'call_assignment_9529', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11848 = stypy_get_value_from_tuple(call_assignment_9529_11847, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9530' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'call_assignment_9530', stypy_get_value_from_tuple_call_result_11848)
        
        # Assigning a Name to a Name (line 621):
        # Getting the type of 'call_assignment_9530' (line 621)
        call_assignment_9530_11849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'call_assignment_9530')
        # Assigning a type to the variable 'get_tuple_stmts' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'get_tuple_stmts', call_assignment_9530_11849)
        
        # Assigning a Call to a Name (line 621):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9529' (line 621)
        call_assignment_9529_11850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'call_assignment_9529', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_11851 = stypy_get_value_from_tuple(call_assignment_9529_11850, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9531' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'call_assignment_9531', stypy_get_value_from_tuple_call_result_11851)
        
        # Assigning a Name to a Name (line 621):
        # Getting the type of 'call_assignment_9531' (line 621)
        call_assignment_9531_11852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'call_assignment_9531')
        # Assigning a type to the variable 'list_var' (line 621)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 25), 'list_var', call_assignment_9531_11852)
        
        # Call to append(...): (line 622)
        # Processing the call arguments (line 622)
        # Getting the type of 'get_tuple_stmts' (line 622)
        get_tuple_stmts_11855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 27), 'get_tuple_stmts', False)
        # Processing the call keyword arguments (line 622)
        kwargs_11856 = {}
        # Getting the type of 'tuple_stmts' (line 622)
        tuple_stmts_11853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 8), 'tuple_stmts', False)
        # Obtaining the member 'append' of a type (line 622)
        append_11854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 8), tuple_stmts_11853, 'append')
        # Calling append(args, kwargs) (line 622)
        append_call_result_11857 = invoke(stypy.reporting.localization.Localization(__file__, 622, 8), append_11854, *[get_tuple_stmts_11855], **kwargs_11856)
        
        
        # Assigning a Call to a Name (line 624):
        
        # Assigning a Call to a Name (line 624):
        
        # Call to create_src_comment(...): (line 624)
        # Processing the call arguments (line 624)
        str_11860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 58), 'str', "Adding type elements to the builtin type 'tuple' instance")
        # Getting the type of 'node' (line 625)
        node_11861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 53), 'node', False)
        # Obtaining the member 'lineno' of a type (line 625)
        lineno_11862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 625, 53), node_11861, 'lineno')
        # Processing the call keyword arguments (line 624)
        kwargs_11863 = {}
        # Getting the type of 'stypy_functions_copy' (line 624)
        stypy_functions_copy_11858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 624)
        create_src_comment_11859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 18), stypy_functions_copy_11858, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 624)
        create_src_comment_call_result_11864 = invoke(stypy.reporting.localization.Localization(__file__, 624, 18), create_src_comment_11859, *[str_11860, lineno_11862], **kwargs_11863)
        
        # Assigning a type to the variable 'comment' (line 624)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'comment', create_src_comment_call_result_11864)
        
        # Call to append(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'comment' (line 626)
        comment_11867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 27), 'comment', False)
        # Processing the call keyword arguments (line 626)
        kwargs_11868 = {}
        # Getting the type of 'tuple_stmts' (line 626)
        tuple_stmts_11865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'tuple_stmts', False)
        # Obtaining the member 'append' of a type (line 626)
        append_11866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 8), tuple_stmts_11865, 'append')
        # Calling append(args, kwargs) (line 626)
        append_call_result_11869 = invoke(stypy.reporting.localization.Localization(__file__, 626, 8), append_11866, *[comment_11867], **kwargs_11868)
        
        
        # Assigning a Call to a Name (line 629):
        
        # Assigning a Call to a Name (line 629):
        
        # Call to create_attribute(...): (line 629)
        # Processing the call arguments (line 629)
        # Getting the type of 'list_var' (line 629)
        list_var_11872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 60), 'list_var', False)
        # Obtaining the member 'id' of a type (line 629)
        id_11873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 60), list_var_11872, 'id')
        str_11874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 629, 73), 'str', 'add_type')
        # Processing the call keyword arguments (line 629)
        kwargs_11875 = {}
        # Getting the type of 'core_language_copy' (line 629)
        core_language_copy_11870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 24), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 629)
        create_attribute_11871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 24), core_language_copy_11870, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 629)
        create_attribute_call_result_11876 = invoke(stypy.reporting.localization.Localization(__file__, 629, 24), create_attribute_11871, *[id_11873, str_11874], **kwargs_11875)
        
        # Assigning a type to the variable 'add_type_func' (line 629)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 629, 8), 'add_type_func', create_attribute_call_result_11876)
        
        # Getting the type of 'node' (line 631)
        node_11877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 23), 'node')
        # Obtaining the member 'elts' of a type (line 631)
        elts_11878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 23), node_11877, 'elts')
        # Assigning a type to the variable 'elts_11878' (line 631)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'elts_11878', elts_11878)
        # Testing if the for loop is going to be iterated (line 631)
        # Testing the type of a for loop iterable (line 631)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 631, 8), elts_11878)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 631, 8), elts_11878):
            # Getting the type of the for loop variable (line 631)
            for_loop_var_11879 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 631, 8), elts_11878)
            # Assigning a type to the variable 'element' (line 631)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 631, 8), 'element', for_loop_var_11879)
            # SSA begins for a for statement (line 631)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 632):
            
            # Assigning a Call to a Name (line 632):
            
            # Call to create_src_comment(...): (line 632)
            # Processing the call arguments (line 632)
            str_11882 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 62), 'str', 'Adding element type')
            # Getting the type of 'node' (line 632)
            node_11883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 85), 'node', False)
            # Obtaining the member 'lineno' of a type (line 632)
            lineno_11884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 632, 85), node_11883, 'lineno')
            # Processing the call keyword arguments (line 632)
            kwargs_11885 = {}
            # Getting the type of 'stypy_functions_copy' (line 632)
            stypy_functions_copy_11880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 22), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 632)
            create_src_comment_11881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 632, 22), stypy_functions_copy_11880, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 632)
            create_src_comment_call_result_11886 = invoke(stypy.reporting.localization.Localization(__file__, 632, 22), create_src_comment_11881, *[str_11882, lineno_11884], **kwargs_11885)
            
            # Assigning a type to the variable 'comment' (line 632)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 12), 'comment', create_src_comment_call_result_11886)
            
            # Call to append(...): (line 633)
            # Processing the call arguments (line 633)
            # Getting the type of 'comment' (line 633)
            comment_11889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 31), 'comment', False)
            # Processing the call keyword arguments (line 633)
            kwargs_11890 = {}
            # Getting the type of 'tuple_stmts' (line 633)
            tuple_stmts_11887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 12), 'tuple_stmts', False)
            # Obtaining the member 'append' of a type (line 633)
            append_11888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 12), tuple_stmts_11887, 'append')
            # Calling append(args, kwargs) (line 633)
            append_call_result_11891 = invoke(stypy.reporting.localization.Localization(__file__, 633, 12), append_11888, *[comment_11889], **kwargs_11890)
            
            
            # Assigning a Call to a Tuple (line 634):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 634)
            # Processing the call arguments (line 634)
            # Getting the type of 'element' (line 634)
            element_11894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 54), 'element', False)
            # Getting the type of 'context' (line 634)
            context_11895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 63), 'context', False)
            # Processing the call keyword arguments (line 634)
            kwargs_11896 = {}
            # Getting the type of 'self' (line 634)
            self_11892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 634)
            visit_11893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 43), self_11892, 'visit')
            # Calling visit(args, kwargs) (line 634)
            visit_call_result_11897 = invoke(stypy.reporting.localization.Localization(__file__, 634, 43), visit_11893, *[element_11894, context_11895], **kwargs_11896)
            
            # Assigning a type to the variable 'call_assignment_9532' (line 634)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'call_assignment_9532', visit_call_result_11897)
            
            # Assigning a Call to a Name (line 634):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9532' (line 634)
            call_assignment_9532_11898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'call_assignment_9532', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11899 = stypy_get_value_from_tuple(call_assignment_9532_11898, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9533' (line 634)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'call_assignment_9533', stypy_get_value_from_tuple_call_result_11899)
            
            # Assigning a Name to a Name (line 634):
            # Getting the type of 'call_assignment_9533' (line 634)
            call_assignment_9533_11900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'call_assignment_9533')
            # Assigning a type to the variable 'element_stmts' (line 634)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'element_stmts', call_assignment_9533_11900)
            
            # Assigning a Call to a Name (line 634):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9532' (line 634)
            call_assignment_9532_11901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'call_assignment_9532', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11902 = stypy_get_value_from_tuple(call_assignment_9532_11901, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9534' (line 634)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'call_assignment_9534', stypy_get_value_from_tuple_call_result_11902)
            
            # Assigning a Name to a Name (line 634):
            # Getting the type of 'call_assignment_9534' (line 634)
            call_assignment_9534_11903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 12), 'call_assignment_9534')
            # Assigning a type to the variable 'tuple_element' (line 634)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 27), 'tuple_element', call_assignment_9534_11903)
            
            # Call to append(...): (line 635)
            # Processing the call arguments (line 635)
            
            # Call to flatten_lists(...): (line 635)
            # Processing the call arguments (line 635)
            # Getting the type of 'element_stmts' (line 635)
            element_stmts_11908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 66), 'element_stmts', False)
            # Processing the call keyword arguments (line 635)
            kwargs_11909 = {}
            # Getting the type of 'stypy_functions_copy' (line 635)
            stypy_functions_copy_11906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 31), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 635)
            flatten_lists_11907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 31), stypy_functions_copy_11906, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 635)
            flatten_lists_call_result_11910 = invoke(stypy.reporting.localization.Localization(__file__, 635, 31), flatten_lists_11907, *[element_stmts_11908], **kwargs_11909)
            
            # Processing the call keyword arguments (line 635)
            kwargs_11911 = {}
            # Getting the type of 'tuple_stmts' (line 635)
            tuple_stmts_11904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 12), 'tuple_stmts', False)
            # Obtaining the member 'append' of a type (line 635)
            append_11905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 12), tuple_stmts_11904, 'append')
            # Calling append(args, kwargs) (line 635)
            append_call_result_11912 = invoke(stypy.reporting.localization.Localization(__file__, 635, 12), append_11905, *[flatten_lists_call_result_11910], **kwargs_11911)
            
            
            # Assigning a Call to a Name (line 637):
            
            # Assigning a Call to a Name (line 637):
            
            # Call to create_call_expression(...): (line 637)
            # Processing the call arguments (line 637)
            # Getting the type of 'add_type_func' (line 637)
            add_type_func_11915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 74), 'add_type_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 637)
            list_11916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 89), 'list')
            # Adding type elements to the builtin type 'list' instance (line 637)
            # Adding element type (line 637)
            # Getting the type of 'localization' (line 637)
            localization_11917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 90), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 89), list_11916, localization_11917)
            # Adding element type (line 637)
            # Getting the type of 'tuple_element' (line 637)
            tuple_element_11918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 104), 'tuple_element', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 637, 89), list_11916, tuple_element_11918)
            
            # Processing the call keyword arguments (line 637)
            kwargs_11919 = {}
            # Getting the type of 'functions_copy' (line 637)
            functions_copy_11913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 36), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 637)
            create_call_expression_11914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 637, 36), functions_copy_11913, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 637)
            create_call_expression_call_result_11920 = invoke(stypy.reporting.localization.Localization(__file__, 637, 36), create_call_expression_11914, *[add_type_func_11915, list_11916], **kwargs_11919)
            
            # Assigning a type to the variable 'add_type_to_list_call' (line 637)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 12), 'add_type_to_list_call', create_call_expression_call_result_11920)
            
            # Call to append(...): (line 638)
            # Processing the call arguments (line 638)
            # Getting the type of 'add_type_to_list_call' (line 638)
            add_type_to_list_call_11923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 31), 'add_type_to_list_call', False)
            # Processing the call keyword arguments (line 638)
            kwargs_11924 = {}
            # Getting the type of 'tuple_stmts' (line 638)
            tuple_stmts_11921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 12), 'tuple_stmts', False)
            # Obtaining the member 'append' of a type (line 638)
            append_11922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 638, 12), tuple_stmts_11921, 'append')
            # Calling append(args, kwargs) (line 638)
            append_call_result_11925 = invoke(stypy.reporting.localization.Localization(__file__, 638, 12), append_11922, *[add_type_to_list_call_11923], **kwargs_11924)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Obtaining an instance of the builtin type 'tuple' (line 640)
        tuple_11926 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 640, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 640)
        # Adding element type (line 640)
        
        # Call to flatten_lists(...): (line 640)
        # Processing the call arguments (line 640)
        
        # Call to create_blank_line(...): (line 640)
        # Processing the call keyword arguments (line 640)
        kwargs_11931 = {}
        # Getting the type of 'stypy_functions_copy' (line 640)
        stypy_functions_copy_11929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 640)
        create_blank_line_11930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 50), stypy_functions_copy_11929, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 640)
        create_blank_line_call_result_11932 = invoke(stypy.reporting.localization.Localization(__file__, 640, 50), create_blank_line_11930, *[], **kwargs_11931)
        
        # Getting the type of 'tuple_stmts' (line 641)
        tuple_stmts_11933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 641, 45), 'tuple_stmts', False)
        
        # Call to create_blank_line(...): (line 642)
        # Processing the call keyword arguments (line 642)
        kwargs_11936 = {}
        # Getting the type of 'stypy_functions_copy' (line 642)
        stypy_functions_copy_11934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 642)
        create_blank_line_11935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 642, 45), stypy_functions_copy_11934, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 642)
        create_blank_line_call_result_11937 = invoke(stypy.reporting.localization.Localization(__file__, 642, 45), create_blank_line_11935, *[], **kwargs_11936)
        
        # Processing the call keyword arguments (line 640)
        kwargs_11938 = {}
        # Getting the type of 'stypy_functions_copy' (line 640)
        stypy_functions_copy_11927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 640)
        flatten_lists_11928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 15), stypy_functions_copy_11927, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 640)
        flatten_lists_call_result_11939 = invoke(stypy.reporting.localization.Localization(__file__, 640, 15), flatten_lists_11928, *[create_blank_line_call_result_11932, tuple_stmts_11933, create_blank_line_call_result_11937], **kwargs_11938)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 640, 15), tuple_11926, flatten_lists_call_result_11939)
        # Adding element type (line 640)
        # Getting the type of 'list_var' (line 642)
        list_var_11940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 88), 'list_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 640, 15), tuple_11926, list_var_11940)
        
        # Assigning a type to the variable 'stypy_return_type' (line 640)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 8), 'stypy_return_type', tuple_11926)
        
        # ################# End of 'visit_Tuple(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Tuple' in the type store
        # Getting the type of 'stypy_return_type' (line 607)
        stypy_return_type_11941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_11941)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Tuple'
        return stypy_return_type_11941


    @norecursion
    def visit_Slice(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Slice'
        module_type_store = module_type_store.open_function_context('visit_Slice', 668, 4, False)
        # Assigning a type to the variable 'self' (line 669)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 669, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Slice')
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Slice.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Slice', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Slice', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Slice(...)' code ##################

        
        # Assigning a Call to a Name (line 670):
        
        # Assigning a Call to a Name (line 670):
        
        # Call to create_localization(...): (line 670)
        # Processing the call arguments (line 670)
        # Getting the type of 'node' (line 670)
        node_11944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 670)
        lineno_11945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 64), node_11944, 'lineno')
        # Getting the type of 'node' (line 670)
        node_11946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 670)
        col_offset_11947 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 77), node_11946, 'col_offset')
        # Processing the call keyword arguments (line 670)
        kwargs_11948 = {}
        # Getting the type of 'stypy_functions_copy' (line 670)
        stypy_functions_copy_11942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 670)
        create_localization_11943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 23), stypy_functions_copy_11942, 'create_localization')
        # Calling create_localization(args, kwargs) (line 670)
        create_localization_call_result_11949 = invoke(stypy.reporting.localization.Localization(__file__, 670, 23), create_localization_11943, *[lineno_11945, col_offset_11947], **kwargs_11948)
        
        # Assigning a type to the variable 'localization' (line 670)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'localization', create_localization_call_result_11949)
        
        # Getting the type of 'node' (line 672)
        node_11950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 11), 'node')
        # Obtaining the member 'lower' of a type (line 672)
        lower_11951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 11), node_11950, 'lower')
        # Getting the type of 'None' (line 672)
        None_11952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 29), 'None')
        # Applying the binary operator 'isnot' (line 672)
        result_is_not_11953 = python_operator(stypy.reporting.localization.Localization(__file__, 672, 11), 'isnot', lower_11951, None_11952)
        
        # Testing if the type of an if condition is none (line 672)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 672, 8), result_is_not_11953):
            
            # Assigning a Tuple to a Tuple (line 675):
            
            # Assigning a List to a Name (line 675):
            
            # Obtaining an instance of the builtin type 'list' (line 675)
            list_11968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 36), 'list')
            # Adding type elements to the builtin type 'list' instance (line 675)
            
            # Assigning a type to the variable 'tuple_assignment_9538' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9538', list_11968)
            
            # Assigning a Call to a Name (line 675):
            
            # Call to create_Name(...): (line 675)
            # Processing the call arguments (line 675)
            str_11971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 71), 'str', 'None')
            # Processing the call keyword arguments (line 675)
            kwargs_11972 = {}
            # Getting the type of 'core_language_copy' (line 675)
            core_language_copy_11969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 40), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 675)
            create_Name_11970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 40), core_language_copy_11969, 'create_Name')
            # Calling create_Name(args, kwargs) (line 675)
            create_Name_call_result_11973 = invoke(stypy.reporting.localization.Localization(__file__, 675, 40), create_Name_11970, *[str_11971], **kwargs_11972)
            
            # Assigning a type to the variable 'tuple_assignment_9539' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9539', create_Name_call_result_11973)
            
            # Assigning a Name to a Name (line 675):
            # Getting the type of 'tuple_assignment_9538' (line 675)
            tuple_assignment_9538_11974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9538')
            # Assigning a type to the variable 'lower_inst' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'lower_inst', tuple_assignment_9538_11974)
            
            # Assigning a Name to a Name (line 675):
            # Getting the type of 'tuple_assignment_9539' (line 675)
            tuple_assignment_9539_11975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9539')
            # Assigning a type to the variable 'lower_var' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 24), 'lower_var', tuple_assignment_9539_11975)
        else:
            
            # Testing the type of an if condition (line 672)
            if_condition_11954 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 672, 8), result_is_not_11953)
            # Assigning a type to the variable 'if_condition_11954' (line 672)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 672, 8), 'if_condition_11954', if_condition_11954)
            # SSA begins for if statement (line 672)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 673):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 673)
            # Processing the call arguments (line 673)
            # Getting the type of 'node' (line 673)
            node_11957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 47), 'node', False)
            # Obtaining the member 'lower' of a type (line 673)
            lower_11958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 47), node_11957, 'lower')
            # Getting the type of 'context' (line 673)
            context_11959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 59), 'context', False)
            # Processing the call keyword arguments (line 673)
            kwargs_11960 = {}
            # Getting the type of 'self' (line 673)
            self_11955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 673)
            visit_11956 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 36), self_11955, 'visit')
            # Calling visit(args, kwargs) (line 673)
            visit_call_result_11961 = invoke(stypy.reporting.localization.Localization(__file__, 673, 36), visit_11956, *[lower_11958, context_11959], **kwargs_11960)
            
            # Assigning a type to the variable 'call_assignment_9535' (line 673)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'call_assignment_9535', visit_call_result_11961)
            
            # Assigning a Call to a Name (line 673):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9535' (line 673)
            call_assignment_9535_11962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'call_assignment_9535', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11963 = stypy_get_value_from_tuple(call_assignment_9535_11962, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9536' (line 673)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'call_assignment_9536', stypy_get_value_from_tuple_call_result_11963)
            
            # Assigning a Name to a Name (line 673):
            # Getting the type of 'call_assignment_9536' (line 673)
            call_assignment_9536_11964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'call_assignment_9536')
            # Assigning a type to the variable 'lower_inst' (line 673)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'lower_inst', call_assignment_9536_11964)
            
            # Assigning a Call to a Name (line 673):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9535' (line 673)
            call_assignment_9535_11965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'call_assignment_9535', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11966 = stypy_get_value_from_tuple(call_assignment_9535_11965, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9537' (line 673)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'call_assignment_9537', stypy_get_value_from_tuple_call_result_11966)
            
            # Assigning a Name to a Name (line 673):
            # Getting the type of 'call_assignment_9537' (line 673)
            call_assignment_9537_11967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'call_assignment_9537')
            # Assigning a type to the variable 'lower_var' (line 673)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 673, 24), 'lower_var', call_assignment_9537_11967)
            # SSA branch for the else part of an if statement (line 672)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Tuple to a Tuple (line 675):
            
            # Assigning a List to a Name (line 675):
            
            # Obtaining an instance of the builtin type 'list' (line 675)
            list_11968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 36), 'list')
            # Adding type elements to the builtin type 'list' instance (line 675)
            
            # Assigning a type to the variable 'tuple_assignment_9538' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9538', list_11968)
            
            # Assigning a Call to a Name (line 675):
            
            # Call to create_Name(...): (line 675)
            # Processing the call arguments (line 675)
            str_11971 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 675, 71), 'str', 'None')
            # Processing the call keyword arguments (line 675)
            kwargs_11972 = {}
            # Getting the type of 'core_language_copy' (line 675)
            core_language_copy_11969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 40), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 675)
            create_Name_11970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 40), core_language_copy_11969, 'create_Name')
            # Calling create_Name(args, kwargs) (line 675)
            create_Name_call_result_11973 = invoke(stypy.reporting.localization.Localization(__file__, 675, 40), create_Name_11970, *[str_11971], **kwargs_11972)
            
            # Assigning a type to the variable 'tuple_assignment_9539' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9539', create_Name_call_result_11973)
            
            # Assigning a Name to a Name (line 675):
            # Getting the type of 'tuple_assignment_9538' (line 675)
            tuple_assignment_9538_11974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9538')
            # Assigning a type to the variable 'lower_inst' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'lower_inst', tuple_assignment_9538_11974)
            
            # Assigning a Name to a Name (line 675):
            # Getting the type of 'tuple_assignment_9539' (line 675)
            tuple_assignment_9539_11975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 12), 'tuple_assignment_9539')
            # Assigning a type to the variable 'lower_var' (line 675)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 675, 24), 'lower_var', tuple_assignment_9539_11975)
            # SSA join for if statement (line 672)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Getting the type of 'node' (line 677)
        node_11976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 11), 'node')
        # Obtaining the member 'upper' of a type (line 677)
        upper_11977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 677, 11), node_11976, 'upper')
        # Getting the type of 'None' (line 677)
        None_11978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 677, 29), 'None')
        # Applying the binary operator 'isnot' (line 677)
        result_is_not_11979 = python_operator(stypy.reporting.localization.Localization(__file__, 677, 11), 'isnot', upper_11977, None_11978)
        
        # Testing if the type of an if condition is none (line 677)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 677, 8), result_is_not_11979):
            
            # Assigning a Tuple to a Tuple (line 680):
            
            # Assigning a List to a Name (line 680):
            
            # Obtaining an instance of the builtin type 'list' (line 680)
            list_11994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 36), 'list')
            # Adding type elements to the builtin type 'list' instance (line 680)
            
            # Assigning a type to the variable 'tuple_assignment_9543' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9543', list_11994)
            
            # Assigning a Call to a Name (line 680):
            
            # Call to create_Name(...): (line 680)
            # Processing the call arguments (line 680)
            str_11997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 71), 'str', 'None')
            # Processing the call keyword arguments (line 680)
            kwargs_11998 = {}
            # Getting the type of 'core_language_copy' (line 680)
            core_language_copy_11995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 40), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 680)
            create_Name_11996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 40), core_language_copy_11995, 'create_Name')
            # Calling create_Name(args, kwargs) (line 680)
            create_Name_call_result_11999 = invoke(stypy.reporting.localization.Localization(__file__, 680, 40), create_Name_11996, *[str_11997], **kwargs_11998)
            
            # Assigning a type to the variable 'tuple_assignment_9544' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9544', create_Name_call_result_11999)
            
            # Assigning a Name to a Name (line 680):
            # Getting the type of 'tuple_assignment_9543' (line 680)
            tuple_assignment_9543_12000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9543')
            # Assigning a type to the variable 'upper_inst' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'upper_inst', tuple_assignment_9543_12000)
            
            # Assigning a Name to a Name (line 680):
            # Getting the type of 'tuple_assignment_9544' (line 680)
            tuple_assignment_9544_12001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9544')
            # Assigning a type to the variable 'upper_var' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 24), 'upper_var', tuple_assignment_9544_12001)
        else:
            
            # Testing the type of an if condition (line 677)
            if_condition_11980 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 677, 8), result_is_not_11979)
            # Assigning a type to the variable 'if_condition_11980' (line 677)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 677, 8), 'if_condition_11980', if_condition_11980)
            # SSA begins for if statement (line 677)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 678):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 678)
            # Processing the call arguments (line 678)
            # Getting the type of 'node' (line 678)
            node_11983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 47), 'node', False)
            # Obtaining the member 'upper' of a type (line 678)
            upper_11984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 47), node_11983, 'upper')
            # Getting the type of 'context' (line 678)
            context_11985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 59), 'context', False)
            # Processing the call keyword arguments (line 678)
            kwargs_11986 = {}
            # Getting the type of 'self' (line 678)
            self_11981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 678)
            visit_11982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 36), self_11981, 'visit')
            # Calling visit(args, kwargs) (line 678)
            visit_call_result_11987 = invoke(stypy.reporting.localization.Localization(__file__, 678, 36), visit_11982, *[upper_11984, context_11985], **kwargs_11986)
            
            # Assigning a type to the variable 'call_assignment_9540' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'call_assignment_9540', visit_call_result_11987)
            
            # Assigning a Call to a Name (line 678):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9540' (line 678)
            call_assignment_9540_11988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'call_assignment_9540', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11989 = stypy_get_value_from_tuple(call_assignment_9540_11988, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9541' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'call_assignment_9541', stypy_get_value_from_tuple_call_result_11989)
            
            # Assigning a Name to a Name (line 678):
            # Getting the type of 'call_assignment_9541' (line 678)
            call_assignment_9541_11990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'call_assignment_9541')
            # Assigning a type to the variable 'upper_inst' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'upper_inst', call_assignment_9541_11990)
            
            # Assigning a Call to a Name (line 678):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9540' (line 678)
            call_assignment_9540_11991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'call_assignment_9540', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_11992 = stypy_get_value_from_tuple(call_assignment_9540_11991, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9542' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'call_assignment_9542', stypy_get_value_from_tuple_call_result_11992)
            
            # Assigning a Name to a Name (line 678):
            # Getting the type of 'call_assignment_9542' (line 678)
            call_assignment_9542_11993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 12), 'call_assignment_9542')
            # Assigning a type to the variable 'upper_var' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 24), 'upper_var', call_assignment_9542_11993)
            # SSA branch for the else part of an if statement (line 677)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Tuple to a Tuple (line 680):
            
            # Assigning a List to a Name (line 680):
            
            # Obtaining an instance of the builtin type 'list' (line 680)
            list_11994 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 36), 'list')
            # Adding type elements to the builtin type 'list' instance (line 680)
            
            # Assigning a type to the variable 'tuple_assignment_9543' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9543', list_11994)
            
            # Assigning a Call to a Name (line 680):
            
            # Call to create_Name(...): (line 680)
            # Processing the call arguments (line 680)
            str_11997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 71), 'str', 'None')
            # Processing the call keyword arguments (line 680)
            kwargs_11998 = {}
            # Getting the type of 'core_language_copy' (line 680)
            core_language_copy_11995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 40), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 680)
            create_Name_11996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 680, 40), core_language_copy_11995, 'create_Name')
            # Calling create_Name(args, kwargs) (line 680)
            create_Name_call_result_11999 = invoke(stypy.reporting.localization.Localization(__file__, 680, 40), create_Name_11996, *[str_11997], **kwargs_11998)
            
            # Assigning a type to the variable 'tuple_assignment_9544' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9544', create_Name_call_result_11999)
            
            # Assigning a Name to a Name (line 680):
            # Getting the type of 'tuple_assignment_9543' (line 680)
            tuple_assignment_9543_12000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9543')
            # Assigning a type to the variable 'upper_inst' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'upper_inst', tuple_assignment_9543_12000)
            
            # Assigning a Name to a Name (line 680):
            # Getting the type of 'tuple_assignment_9544' (line 680)
            tuple_assignment_9544_12001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 12), 'tuple_assignment_9544')
            # Assigning a type to the variable 'upper_var' (line 680)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 24), 'upper_var', tuple_assignment_9544_12001)
            # SSA join for if statement (line 677)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Getting the type of 'node' (line 682)
        node_12002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 11), 'node')
        # Obtaining the member 'step' of a type (line 682)
        step_12003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 11), node_12002, 'step')
        # Getting the type of 'None' (line 682)
        None_12004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 28), 'None')
        # Applying the binary operator 'isnot' (line 682)
        result_is_not_12005 = python_operator(stypy.reporting.localization.Localization(__file__, 682, 11), 'isnot', step_12003, None_12004)
        
        # Testing if the type of an if condition is none (line 682)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 682, 8), result_is_not_12005):
            
            # Assigning a Tuple to a Tuple (line 685):
            
            # Assigning a List to a Name (line 685):
            
            # Obtaining an instance of the builtin type 'list' (line 685)
            list_12020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 685)
            
            # Assigning a type to the variable 'tuple_assignment_9548' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9548', list_12020)
            
            # Assigning a Call to a Name (line 685):
            
            # Call to create_Name(...): (line 685)
            # Processing the call arguments (line 685)
            str_12023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 69), 'str', 'None')
            # Processing the call keyword arguments (line 685)
            kwargs_12024 = {}
            # Getting the type of 'core_language_copy' (line 685)
            core_language_copy_12021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 38), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 685)
            create_Name_12022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 38), core_language_copy_12021, 'create_Name')
            # Calling create_Name(args, kwargs) (line 685)
            create_Name_call_result_12025 = invoke(stypy.reporting.localization.Localization(__file__, 685, 38), create_Name_12022, *[str_12023], **kwargs_12024)
            
            # Assigning a type to the variable 'tuple_assignment_9549' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9549', create_Name_call_result_12025)
            
            # Assigning a Name to a Name (line 685):
            # Getting the type of 'tuple_assignment_9548' (line 685)
            tuple_assignment_9548_12026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9548')
            # Assigning a type to the variable 'step_inst' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'step_inst', tuple_assignment_9548_12026)
            
            # Assigning a Name to a Name (line 685):
            # Getting the type of 'tuple_assignment_9549' (line 685)
            tuple_assignment_9549_12027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9549')
            # Assigning a type to the variable 'step_var' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 23), 'step_var', tuple_assignment_9549_12027)
        else:
            
            # Testing the type of an if condition (line 682)
            if_condition_12006 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 682, 8), result_is_not_12005)
            # Assigning a type to the variable 'if_condition_12006' (line 682)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 8), 'if_condition_12006', if_condition_12006)
            # SSA begins for if statement (line 682)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 683):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 683)
            # Processing the call arguments (line 683)
            # Getting the type of 'node' (line 683)
            node_12009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 45), 'node', False)
            # Obtaining the member 'upper' of a type (line 683)
            upper_12010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 45), node_12009, 'upper')
            # Getting the type of 'context' (line 683)
            context_12011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 57), 'context', False)
            # Processing the call keyword arguments (line 683)
            kwargs_12012 = {}
            # Getting the type of 'self' (line 683)
            self_12007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 34), 'self', False)
            # Obtaining the member 'visit' of a type (line 683)
            visit_12008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 683, 34), self_12007, 'visit')
            # Calling visit(args, kwargs) (line 683)
            visit_call_result_12013 = invoke(stypy.reporting.localization.Localization(__file__, 683, 34), visit_12008, *[upper_12010, context_12011], **kwargs_12012)
            
            # Assigning a type to the variable 'call_assignment_9545' (line 683)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'call_assignment_9545', visit_call_result_12013)
            
            # Assigning a Call to a Name (line 683):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9545' (line 683)
            call_assignment_9545_12014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'call_assignment_9545', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12015 = stypy_get_value_from_tuple(call_assignment_9545_12014, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9546' (line 683)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'call_assignment_9546', stypy_get_value_from_tuple_call_result_12015)
            
            # Assigning a Name to a Name (line 683):
            # Getting the type of 'call_assignment_9546' (line 683)
            call_assignment_9546_12016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'call_assignment_9546')
            # Assigning a type to the variable 'step_inst' (line 683)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'step_inst', call_assignment_9546_12016)
            
            # Assigning a Call to a Name (line 683):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9545' (line 683)
            call_assignment_9545_12017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'call_assignment_9545', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12018 = stypy_get_value_from_tuple(call_assignment_9545_12017, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9547' (line 683)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'call_assignment_9547', stypy_get_value_from_tuple_call_result_12018)
            
            # Assigning a Name to a Name (line 683):
            # Getting the type of 'call_assignment_9547' (line 683)
            call_assignment_9547_12019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 683, 12), 'call_assignment_9547')
            # Assigning a type to the variable 'step_var' (line 683)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 683, 23), 'step_var', call_assignment_9547_12019)
            # SSA branch for the else part of an if statement (line 682)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Tuple to a Tuple (line 685):
            
            # Assigning a List to a Name (line 685):
            
            # Obtaining an instance of the builtin type 'list' (line 685)
            list_12020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 685)
            
            # Assigning a type to the variable 'tuple_assignment_9548' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9548', list_12020)
            
            # Assigning a Call to a Name (line 685):
            
            # Call to create_Name(...): (line 685)
            # Processing the call arguments (line 685)
            str_12023 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 69), 'str', 'None')
            # Processing the call keyword arguments (line 685)
            kwargs_12024 = {}
            # Getting the type of 'core_language_copy' (line 685)
            core_language_copy_12021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 38), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 685)
            create_Name_12022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 38), core_language_copy_12021, 'create_Name')
            # Calling create_Name(args, kwargs) (line 685)
            create_Name_call_result_12025 = invoke(stypy.reporting.localization.Localization(__file__, 685, 38), create_Name_12022, *[str_12023], **kwargs_12024)
            
            # Assigning a type to the variable 'tuple_assignment_9549' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9549', create_Name_call_result_12025)
            
            # Assigning a Name to a Name (line 685):
            # Getting the type of 'tuple_assignment_9548' (line 685)
            tuple_assignment_9548_12026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9548')
            # Assigning a type to the variable 'step_inst' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'step_inst', tuple_assignment_9548_12026)
            
            # Assigning a Name to a Name (line 685):
            # Getting the type of 'tuple_assignment_9549' (line 685)
            tuple_assignment_9549_12027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 12), 'tuple_assignment_9549')
            # Assigning a type to the variable 'step_var' (line 685)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 685, 23), 'step_var', tuple_assignment_9549_12027)
            # SSA join for if statement (line 682)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Call to a Name (line 687):
        
        # Assigning a Call to a Name (line 687):
        
        # Call to create_Name(...): (line 687)
        # Processing the call arguments (line 687)
        str_12030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 687, 56), 'str', 'ensure_slice_bounds')
        # Processing the call keyword arguments (line 687)
        kwargs_12031 = {}
        # Getting the type of 'core_language_copy' (line 687)
        core_language_copy_12028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 25), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 687)
        create_Name_12029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 687, 25), core_language_copy_12028, 'create_Name')
        # Calling create_Name(args, kwargs) (line 687)
        create_Name_call_result_12032 = invoke(stypy.reporting.localization.Localization(__file__, 687, 25), create_Name_12029, *[str_12030], **kwargs_12031)
        
        # Assigning a type to the variable 'get_slice_func' (line 687)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 8), 'get_slice_func', create_Name_call_result_12032)
        
        # Assigning a Call to a Name (line 688):
        
        # Assigning a Call to a Name (line 688):
        
        # Call to create_call(...): (line 688)
        # Processing the call arguments (line 688)
        # Getting the type of 'get_slice_func' (line 688)
        get_slice_func_12035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 51), 'get_slice_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 688)
        list_12036 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 67), 'list')
        # Adding type elements to the builtin type 'list' instance (line 688)
        # Adding element type (line 688)
        # Getting the type of 'localization' (line 688)
        localization_12037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 68), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 67), list_12036, localization_12037)
        # Adding element type (line 688)
        # Getting the type of 'lower_var' (line 688)
        lower_var_12038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 82), 'lower_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 67), list_12036, lower_var_12038)
        # Adding element type (line 688)
        # Getting the type of 'upper_var' (line 688)
        upper_var_12039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 93), 'upper_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 67), list_12036, upper_var_12039)
        # Adding element type (line 688)
        # Getting the type of 'step_var' (line 688)
        step_var_12040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 104), 'step_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 688, 67), list_12036, step_var_12040)
        
        # Processing the call keyword arguments (line 688)
        kwargs_12041 = {}
        # Getting the type of 'functions_copy' (line 688)
        functions_copy_12033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 24), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 688)
        create_call_12034 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 24), functions_copy_12033, 'create_call')
        # Calling create_call(args, kwargs) (line 688)
        create_call_call_result_12042 = invoke(stypy.reporting.localization.Localization(__file__, 688, 24), create_call_12034, *[get_slice_func_12035, list_12036], **kwargs_12041)
        
        # Assigning a type to the variable 'get_list_call' (line 688)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 8), 'get_list_call', create_call_call_result_12042)
        
        # Assigning a Call to a Tuple (line 689):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 689)
        # Processing the call arguments (line 689)
        # Getting the type of 'get_list_call' (line 689)
        get_list_call_12045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 75), 'get_list_call', False)
        int_12046 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 90), 'int')
        int_12047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 93), 'int')
        # Processing the call keyword arguments (line 689)
        kwargs_12048 = {}
        # Getting the type of 'stypy_functions_copy' (line 689)
        stypy_functions_copy_12043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 35), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 689)
        create_temp_Assign_12044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 35), stypy_functions_copy_12043, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 689)
        create_temp_Assign_call_result_12049 = invoke(stypy.reporting.localization.Localization(__file__, 689, 35), create_temp_Assign_12044, *[get_list_call_12045, int_12046, int_12047], **kwargs_12048)
        
        # Assigning a type to the variable 'call_assignment_9550' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'call_assignment_9550', create_temp_Assign_call_result_12049)
        
        # Assigning a Call to a Name (line 689):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9550' (line 689)
        call_assignment_9550_12050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'call_assignment_9550', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12051 = stypy_get_value_from_tuple(call_assignment_9550_12050, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9551' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'call_assignment_9551', stypy_get_value_from_tuple_call_result_12051)
        
        # Assigning a Name to a Name (line 689):
        # Getting the type of 'call_assignment_9551' (line 689)
        call_assignment_9551_12052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'call_assignment_9551')
        # Assigning a type to the variable 'assign_stmts' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'assign_stmts', call_assignment_9551_12052)
        
        # Assigning a Call to a Name (line 689):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9550' (line 689)
        call_assignment_9550_12053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'call_assignment_9550', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12054 = stypy_get_value_from_tuple(call_assignment_9550_12053, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9552' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'call_assignment_9552', stypy_get_value_from_tuple_call_result_12054)
        
        # Assigning a Name to a Name (line 689):
        # Getting the type of 'call_assignment_9552' (line 689)
        call_assignment_9552_12055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 8), 'call_assignment_9552')
        # Assigning a type to the variable 'assign_var' (line 689)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 689, 22), 'assign_var', call_assignment_9552_12055)
        
        # Obtaining an instance of the builtin type 'tuple' (line 690)
        tuple_12056 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 690, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 690)
        # Adding element type (line 690)
        
        # Call to flatten_lists(...): (line 690)
        # Processing the call arguments (line 690)
        # Getting the type of 'lower_inst' (line 690)
        lower_inst_12059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 50), 'lower_inst', False)
        # Getting the type of 'upper_inst' (line 691)
        upper_inst_12060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 45), 'upper_inst', False)
        # Getting the type of 'step_inst' (line 692)
        step_inst_12061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 45), 'step_inst', False)
        # Getting the type of 'assign_stmts' (line 693)
        assign_stmts_12062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 45), 'assign_stmts', False)
        # Processing the call keyword arguments (line 690)
        kwargs_12063 = {}
        # Getting the type of 'stypy_functions_copy' (line 690)
        stypy_functions_copy_12057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 690)
        flatten_lists_12058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 15), stypy_functions_copy_12057, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 690)
        flatten_lists_call_result_12064 = invoke(stypy.reporting.localization.Localization(__file__, 690, 15), flatten_lists_12058, *[lower_inst_12059, upper_inst_12060, step_inst_12061, assign_stmts_12062], **kwargs_12063)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 690, 15), tuple_12056, flatten_lists_call_result_12064)
        # Adding element type (line 690)
        # Getting the type of 'assign_var' (line 693)
        assign_var_12065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 60), 'assign_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 690, 15), tuple_12056, assign_var_12065)
        
        # Assigning a type to the variable 'stypy_return_type' (line 690)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 8), 'stypy_return_type', tuple_12056)
        
        # ################# End of 'visit_Slice(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Slice' in the type store
        # Getting the type of 'stypy_return_type' (line 668)
        stypy_return_type_12066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_12066)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Slice'
        return stypy_return_type_12066


    @norecursion
    def visit_ListComp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_ListComp'
        module_type_store = module_type_store.open_function_context('visit_ListComp', 695, 4, False)
        # Assigning a type to the variable 'self' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_ListComp')
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_ListComp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_ListComp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_ListComp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_ListComp(...)' code ##################

        
        # Assigning a Call to a Name (line 696):
        
        # Assigning a Call to a Name (line 696):
        
        # Call to create_src_comment(...): (line 696)
        # Processing the call arguments (line 696)
        str_12069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 696, 62), 'str', 'Calculating list comprehension')
        # Processing the call keyword arguments (line 696)
        kwargs_12070 = {}
        # Getting the type of 'stypy_functions_copy' (line 696)
        stypy_functions_copy_12067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 696)
        create_src_comment_12068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 22), stypy_functions_copy_12067, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 696)
        create_src_comment_call_result_12071 = invoke(stypy.reporting.localization.Localization(__file__, 696, 22), create_src_comment_12068, *[str_12069], **kwargs_12070)
        
        # Assigning a type to the variable 'src_comment' (line 696)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 8), 'src_comment', create_src_comment_call_result_12071)
        
        # Assigning a Call to a Name (line 697):
        
        # Assigning a Call to a Name (line 697):
        
        # Call to create_localization(...): (line 697)
        # Processing the call arguments (line 697)
        # Getting the type of 'node' (line 697)
        node_12074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 697)
        lineno_12075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 64), node_12074, 'lineno')
        # Getting the type of 'node' (line 697)
        node_12076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 697)
        col_offset_12077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 77), node_12076, 'col_offset')
        # Processing the call keyword arguments (line 697)
        kwargs_12078 = {}
        # Getting the type of 'stypy_functions_copy' (line 697)
        stypy_functions_copy_12072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 697)
        create_localization_12073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 23), stypy_functions_copy_12072, 'create_localization')
        # Calling create_localization(args, kwargs) (line 697)
        create_localization_call_result_12079 = invoke(stypy.reporting.localization.Localization(__file__, 697, 23), create_localization_12073, *[lineno_12075, col_offset_12077], **kwargs_12078)
        
        # Assigning a type to the variable 'localization' (line 697)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 697, 8), 'localization', create_localization_call_result_12079)
        
        # Assigning a Call to a Tuple (line 701):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 701)
        # Processing the call arguments (line 701)
        # Getting the type of 'node' (line 701)
        node_12082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 40), 'node', False)
        # Obtaining the member 'elt' of a type (line 701)
        elt_12083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 40), node_12082, 'elt')
        # Getting the type of 'context' (line 701)
        context_12084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 50), 'context', False)
        # Processing the call keyword arguments (line 701)
        kwargs_12085 = {}
        # Getting the type of 'self' (line 701)
        self_12080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 29), 'self', False)
        # Obtaining the member 'visit' of a type (line 701)
        visit_12081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 701, 29), self_12080, 'visit')
        # Calling visit(args, kwargs) (line 701)
        visit_call_result_12086 = invoke(stypy.reporting.localization.Localization(__file__, 701, 29), visit_12081, *[elt_12083, context_12084], **kwargs_12085)
        
        # Assigning a type to the variable 'call_assignment_9553' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'call_assignment_9553', visit_call_result_12086)
        
        # Assigning a Call to a Name (line 701):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9553' (line 701)
        call_assignment_9553_12087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'call_assignment_9553', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12088 = stypy_get_value_from_tuple(call_assignment_9553_12087, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9554' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'call_assignment_9554', stypy_get_value_from_tuple_call_result_12088)
        
        # Assigning a Name to a Name (line 701):
        # Getting the type of 'call_assignment_9554' (line 701)
        call_assignment_9554_12089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'call_assignment_9554')
        # Assigning a type to the variable 'elt_stmts' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'elt_stmts', call_assignment_9554_12089)
        
        # Assigning a Call to a Name (line 701):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9553' (line 701)
        call_assignment_9553_12090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'call_assignment_9553', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12091 = stypy_get_value_from_tuple(call_assignment_9553_12090, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9555' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'call_assignment_9555', stypy_get_value_from_tuple_call_result_12091)
        
        # Assigning a Name to a Name (line 701):
        # Getting the type of 'call_assignment_9555' (line 701)
        call_assignment_9555_12092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 8), 'call_assignment_9555')
        # Assigning a type to the variable 'elt_var' (line 701)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 19), 'elt_var', call_assignment_9555_12092)
        
        # Assigning a List to a Name (line 703):
        
        # Assigning a List to a Name (line 703):
        
        # Obtaining an instance of the builtin type 'list' (line 703)
        list_12093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 703, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 703)
        
        # Assigning a type to the variable 'generator_stmts' (line 703)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 703, 8), 'generator_stmts', list_12093)
        
        # Assigning a List to a Name (line 704):
        
        # Assigning a List to a Name (line 704):
        
        # Obtaining an instance of the builtin type 'list' (line 704)
        list_12094 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 704, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 704)
        
        # Assigning a type to the variable 'generator_vars' (line 704)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 8), 'generator_vars', list_12094)
        
        # Getting the type of 'node' (line 705)
        node_12095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 19), 'node')
        # Obtaining the member 'generators' of a type (line 705)
        generators_12096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 19), node_12095, 'generators')
        # Assigning a type to the variable 'generators_12096' (line 705)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'generators_12096', generators_12096)
        # Testing if the for loop is going to be iterated (line 705)
        # Testing the type of a for loop iterable (line 705)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 705, 8), generators_12096)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 705, 8), generators_12096):
            # Getting the type of the for loop variable (line 705)
            for_loop_var_12097 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 705, 8), generators_12096)
            # Assigning a type to the variable 'gen' (line 705)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 8), 'gen', for_loop_var_12097)
            # SSA begins for a for statement (line 705)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to assign_line_and_column(...): (line 706)
            # Processing the call arguments (line 706)
            # Getting the type of 'gen' (line 706)
            gen_12100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 56), 'gen', False)
            # Getting the type of 'node' (line 706)
            node_12101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 61), 'node', False)
            # Processing the call keyword arguments (line 706)
            kwargs_12102 = {}
            # Getting the type of 'stypy_functions_copy' (line 706)
            stypy_functions_copy_12098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 706, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 706)
            assign_line_and_column_12099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 706, 12), stypy_functions_copy_12098, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 706)
            assign_line_and_column_call_result_12103 = invoke(stypy.reporting.localization.Localization(__file__, 706, 12), assign_line_and_column_12099, *[gen_12100, node_12101], **kwargs_12102)
            
            
            # Assigning a Call to a Tuple (line 707):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 707)
            # Processing the call arguments (line 707)
            # Getting the type of 'gen' (line 707)
            gen_12106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 46), 'gen', False)
            # Getting the type of 'context' (line 707)
            context_12107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 51), 'context', False)
            # Processing the call keyword arguments (line 707)
            kwargs_12108 = {}
            # Getting the type of 'self' (line 707)
            self_12104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 35), 'self', False)
            # Obtaining the member 'visit' of a type (line 707)
            visit_12105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 35), self_12104, 'visit')
            # Calling visit(args, kwargs) (line 707)
            visit_call_result_12109 = invoke(stypy.reporting.localization.Localization(__file__, 707, 35), visit_12105, *[gen_12106, context_12107], **kwargs_12108)
            
            # Assigning a type to the variable 'call_assignment_9556' (line 707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'call_assignment_9556', visit_call_result_12109)
            
            # Assigning a Call to a Name (line 707):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9556' (line 707)
            call_assignment_9556_12110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'call_assignment_9556', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12111 = stypy_get_value_from_tuple(call_assignment_9556_12110, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9557' (line 707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'call_assignment_9557', stypy_get_value_from_tuple_call_result_12111)
            
            # Assigning a Name to a Name (line 707):
            # Getting the type of 'call_assignment_9557' (line 707)
            call_assignment_9557_12112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'call_assignment_9557')
            # Assigning a type to the variable 'temp_stmts' (line 707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'temp_stmts', call_assignment_9557_12112)
            
            # Assigning a Call to a Name (line 707):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9556' (line 707)
            call_assignment_9556_12113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'call_assignment_9556', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12114 = stypy_get_value_from_tuple(call_assignment_9556_12113, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9558' (line 707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'call_assignment_9558', stypy_get_value_from_tuple_call_result_12114)
            
            # Assigning a Name to a Name (line 707):
            # Getting the type of 'call_assignment_9558' (line 707)
            call_assignment_9558_12115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 12), 'call_assignment_9558')
            # Assigning a type to the variable 'temp_var' (line 707)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 707, 24), 'temp_var', call_assignment_9558_12115)
            
            # Call to append(...): (line 708)
            # Processing the call arguments (line 708)
            # Getting the type of 'temp_stmts' (line 708)
            temp_stmts_12118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 35), 'temp_stmts', False)
            # Processing the call keyword arguments (line 708)
            kwargs_12119 = {}
            # Getting the type of 'generator_stmts' (line 708)
            generator_stmts_12116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 12), 'generator_stmts', False)
            # Obtaining the member 'append' of a type (line 708)
            append_12117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 12), generator_stmts_12116, 'append')
            # Calling append(args, kwargs) (line 708)
            append_call_result_12120 = invoke(stypy.reporting.localization.Localization(__file__, 708, 12), append_12117, *[temp_stmts_12118], **kwargs_12119)
            
            
            # Call to append(...): (line 709)
            # Processing the call arguments (line 709)
            # Getting the type of 'generator_vars' (line 709)
            generator_vars_12123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 34), 'generator_vars', False)
            # Processing the call keyword arguments (line 709)
            kwargs_12124 = {}
            # Getting the type of 'generator_vars' (line 709)
            generator_vars_12121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 12), 'generator_vars', False)
            # Obtaining the member 'append' of a type (line 709)
            append_12122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 12), generator_vars_12121, 'append')
            # Calling append(args, kwargs) (line 709)
            append_call_result_12125 = invoke(stypy.reporting.localization.Localization(__file__, 709, 12), append_12122, *[generator_vars_12123], **kwargs_12124)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 711):
        
        # Assigning a Call to a Name (line 711):
        
        # Call to create_Name(...): (line 711)
        # Processing the call arguments (line 711)
        str_12128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 711, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 711)
        # Getting the type of 'node' (line 711)
        node_12129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 80), 'node', False)
        # Obtaining the member 'lineno' of a type (line 711)
        lineno_12130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 80), node_12129, 'lineno')
        keyword_12131 = lineno_12130
        # Getting the type of 'node' (line 711)
        node_12132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 711)
        col_offset_12133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 100), node_12132, 'col_offset')
        keyword_12134 = col_offset_12133
        kwargs_12135 = {'column': keyword_12134, 'line': keyword_12131}
        # Getting the type of 'core_language_copy' (line 711)
        core_language_copy_12126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 711, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 711)
        create_Name_12127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 711, 24), core_language_copy_12126, 'create_Name')
        # Calling create_Name(args, kwargs) (line 711)
        create_Name_call_result_12136 = invoke(stypy.reporting.localization.Localization(__file__, 711, 24), create_Name_12127, *[str_12128], **kwargs_12135)
        
        # Assigning a type to the variable 'get_type_call' (line 711)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 711, 8), 'get_type_call', create_Name_call_result_12136)
        
        # Assigning a Call to a Name (line 712):
        
        # Assigning a Call to a Name (line 712):
        
        # Call to create_str(...): (line 712)
        # Processing the call arguments (line 712)
        str_12139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 712, 60), 'str', 'list')
        # Processing the call keyword arguments (line 712)
        kwargs_12140 = {}
        # Getting the type of 'core_language_copy' (line 712)
        core_language_copy_12137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 712, 30), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 712)
        create_str_12138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 712, 30), core_language_copy_12137, 'create_str')
        # Calling create_str(args, kwargs) (line 712)
        create_str_call_result_12141 = invoke(stypy.reporting.localization.Localization(__file__, 712, 30), create_str_12138, *[str_12139], **kwargs_12140)
        
        # Assigning a type to the variable 'get_type_call_param' (line 712)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 712, 8), 'get_type_call_param', create_str_call_result_12141)
        
        # Assigning a Call to a Name (line 713):
        
        # Assigning a Call to a Name (line 713):
        
        # Call to create_call(...): (line 713)
        # Processing the call arguments (line 713)
        # Getting the type of 'get_type_call' (line 713)
        get_type_call_12144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 42), 'get_type_call', False)
        
        # Obtaining an instance of the builtin type 'list' (line 713)
        list_12145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 713)
        # Adding element type (line 713)
        # Getting the type of 'localization' (line 713)
        localization_12146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 58), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 713, 57), list_12145, localization_12146)
        # Adding element type (line 713)
        # Getting the type of 'get_type_call_param' (line 713)
        get_type_call_param_12147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 72), 'get_type_call_param', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 713, 57), list_12145, get_type_call_param_12147)
        
        # Processing the call keyword arguments (line 713)
        kwargs_12148 = {}
        # Getting the type of 'functions_copy' (line 713)
        functions_copy_12142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 15), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 713)
        create_call_12143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 15), functions_copy_12142, 'create_call')
        # Calling create_call(args, kwargs) (line 713)
        create_call_call_result_12149 = invoke(stypy.reporting.localization.Localization(__file__, 713, 15), create_call_12143, *[get_type_call_12144, list_12145], **kwargs_12148)
        
        # Assigning a type to the variable 'call' (line 713)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'call', create_call_call_result_12149)
        
        # Assigning a Call to a Tuple (line 714):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 714)
        # Processing the call arguments (line 714)
        # Getting the type of 'call' (line 714)
        call_12152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 79), 'call', False)
        # Processing the call keyword arguments (line 714)
        # Getting the type of 'node' (line 714)
        node_12153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 90), 'node', False)
        # Obtaining the member 'lineno' of a type (line 714)
        lineno_12154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 90), node_12153, 'lineno')
        keyword_12155 = lineno_12154
        # Getting the type of 'node' (line 715)
        node_12156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 715, 81), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 715)
        col_offset_12157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 715, 81), node_12156, 'col_offset')
        keyword_12158 = col_offset_12157
        kwargs_12159 = {'column': keyword_12158, 'line': keyword_12155}
        # Getting the type of 'stypy_functions_copy' (line 714)
        stypy_functions_copy_12150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 714)
        create_temp_Assign_12151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 39), stypy_functions_copy_12150, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 714)
        create_temp_Assign_call_result_12160 = invoke(stypy.reporting.localization.Localization(__file__, 714, 39), create_temp_Assign_12151, *[call_12152], **kwargs_12159)
        
        # Assigning a type to the variable 'call_assignment_9559' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'call_assignment_9559', create_temp_Assign_call_result_12160)
        
        # Assigning a Call to a Name (line 714):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9559' (line 714)
        call_assignment_9559_12161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'call_assignment_9559', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12162 = stypy_get_value_from_tuple(call_assignment_9559_12161, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9560' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'call_assignment_9560', stypy_get_value_from_tuple_call_result_12162)
        
        # Assigning a Name to a Name (line 714):
        # Getting the type of 'call_assignment_9560' (line 714)
        call_assignment_9560_12163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'call_assignment_9560')
        # Assigning a type to the variable 'ret_list_stmts' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'ret_list_stmts', call_assignment_9560_12163)
        
        # Assigning a Call to a Name (line 714):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9559' (line 714)
        call_assignment_9559_12164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'call_assignment_9559', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12165 = stypy_get_value_from_tuple(call_assignment_9559_12164, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9561' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'call_assignment_9561', stypy_get_value_from_tuple_call_result_12165)
        
        # Assigning a Name to a Name (line 714):
        # Getting the type of 'call_assignment_9561' (line 714)
        call_assignment_9561_12166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 8), 'call_assignment_9561')
        # Assigning a type to the variable 'ret_list_var' (line 714)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 24), 'ret_list_var', call_assignment_9561_12166)
        
        # Assigning a Call to a Name (line 717):
        
        # Assigning a Call to a Name (line 717):
        
        # Call to create_attribute(...): (line 717)
        # Processing the call arguments (line 717)
        # Getting the type of 'ret_list_var' (line 717)
        ret_list_var_12169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 65), 'ret_list_var', False)
        str_12170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 717, 79), 'str', 'set_elements_type')
        # Processing the call keyword arguments (line 717)
        kwargs_12171 = {}
        # Getting the type of 'core_language_copy' (line 717)
        core_language_copy_12167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 29), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 717)
        create_attribute_12168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 29), core_language_copy_12167, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 717)
        create_attribute_call_result_12172 = invoke(stypy.reporting.localization.Localization(__file__, 717, 29), create_attribute_12168, *[ret_list_var_12169, str_12170], **kwargs_12171)
        
        # Assigning a type to the variable 'invoke_set_element' (line 717)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 717, 8), 'invoke_set_element', create_attribute_call_result_12172)
        
        # Assigning a Call to a Name (line 720):
        
        # Assigning a Call to a Name (line 720):
        
        # Call to create_Name(...): (line 720)
        # Processing the call arguments (line 720)
        str_12175 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 720, 48), 'str', 'False')
        # Processing the call keyword arguments (line 720)
        kwargs_12176 = {}
        # Getting the type of 'core_language_copy' (line 720)
        core_language_copy_12173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 720, 17), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 720)
        create_Name_12174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 720, 17), core_language_copy_12173, 'create_Name')
        # Calling create_Name(args, kwargs) (line 720)
        create_Name_call_result_12177 = invoke(stypy.reporting.localization.Localization(__file__, 720, 17), create_Name_12174, *[str_12175], **kwargs_12176)
        
        # Assigning a type to the variable 'false_' (line 720)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 720, 8), 'false_', create_Name_call_result_12177)
        
        # Assigning a Call to a Name (line 721):
        
        # Assigning a Call to a Name (line 721):
        
        # Call to create_call_expression(...): (line 721)
        # Processing the call arguments (line 721)
        # Getting the type of 'invoke_set_element' (line 721)
        invoke_set_element_12180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 68), 'invoke_set_element', False)
        
        # Obtaining an instance of the builtin type 'list' (line 721)
        list_12181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 88), 'list')
        # Adding type elements to the builtin type 'list' instance (line 721)
        # Adding element type (line 721)
        # Getting the type of 'localization' (line 721)
        localization_12182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 89), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 721, 88), list_12181, localization_12182)
        # Adding element type (line 721)
        # Getting the type of 'elt_var' (line 721)
        elt_var_12183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 103), 'elt_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 721, 88), list_12181, elt_var_12183)
        # Adding element type (line 721)
        # Getting the type of 'false_' (line 721)
        false__12184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 112), 'false_', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 721, 88), list_12181, false__12184)
        
        # Processing the call keyword arguments (line 721)
        kwargs_12185 = {}
        # Getting the type of 'functions_copy' (line 721)
        functions_copy_12178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 30), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 721)
        create_call_expression_12179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 30), functions_copy_12178, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 721)
        create_call_expression_call_result_12186 = invoke(stypy.reporting.localization.Localization(__file__, 721, 30), create_call_expression_12179, *[invoke_set_element_12180, list_12181], **kwargs_12185)
        
        # Assigning a type to the variable 'call_to_set_element' (line 721)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 721, 8), 'call_to_set_element', create_call_expression_call_result_12186)
        
        # Obtaining an instance of the builtin type 'tuple' (line 723)
        tuple_12187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 723)
        # Adding element type (line 723)
        
        # Call to flatten_lists(...): (line 723)
        # Processing the call arguments (line 723)
        # Getting the type of 'src_comment' (line 723)
        src_comment_12190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 50), 'src_comment', False)
        # Getting the type of 'generator_stmts' (line 723)
        generator_stmts_12191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 63), 'generator_stmts', False)
        # Getting the type of 'elt_stmts' (line 723)
        elt_stmts_12192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 80), 'elt_stmts', False)
        # Getting the type of 'ret_list_stmts' (line 723)
        ret_list_stmts_12193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 91), 'ret_list_stmts', False)
        # Getting the type of 'call_to_set_element' (line 724)
        call_to_set_element_12194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 45), 'call_to_set_element', False)
        # Processing the call keyword arguments (line 723)
        kwargs_12195 = {}
        # Getting the type of 'stypy_functions_copy' (line 723)
        stypy_functions_copy_12188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 723)
        flatten_lists_12189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 723, 15), stypy_functions_copy_12188, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 723)
        flatten_lists_call_result_12196 = invoke(stypy.reporting.localization.Localization(__file__, 723, 15), flatten_lists_12189, *[src_comment_12190, generator_stmts_12191, elt_stmts_12192, ret_list_stmts_12193, call_to_set_element_12194], **kwargs_12195)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 15), tuple_12187, flatten_lists_call_result_12196)
        # Adding element type (line 723)
        # Getting the type of 'ret_list_var' (line 724)
        ret_list_var_12197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 67), 'ret_list_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 15), tuple_12187, ret_list_var_12197)
        
        # Assigning a type to the variable 'stypy_return_type' (line 723)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 723, 8), 'stypy_return_type', tuple_12187)
        
        # ################# End of 'visit_ListComp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_ListComp' in the type store
        # Getting the type of 'stypy_return_type' (line 695)
        stypy_return_type_12198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_12198)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_ListComp'
        return stypy_return_type_12198


    @norecursion
    def visit_comprehension(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_comprehension'
        module_type_store = module_type_store.open_function_context('visit_comprehension', 726, 4, False)
        # Assigning a type to the variable 'self' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_comprehension')
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_comprehension.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_comprehension', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_comprehension', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_comprehension(...)' code ##################

        
        # Assigning a Call to a Name (line 727):
        
        # Assigning a Call to a Name (line 727):
        
        # Call to create_src_comment(...): (line 727)
        # Processing the call arguments (line 727)
        str_12201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 727, 62), 'str', 'Calculating comprehension expression')
        # Processing the call keyword arguments (line 727)
        kwargs_12202 = {}
        # Getting the type of 'stypy_functions_copy' (line 727)
        stypy_functions_copy_12199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 727, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 727)
        create_src_comment_12200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 727, 22), stypy_functions_copy_12199, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 727)
        create_src_comment_call_result_12203 = invoke(stypy.reporting.localization.Localization(__file__, 727, 22), create_src_comment_12200, *[str_12201], **kwargs_12202)
        
        # Assigning a type to the variable 'src_comment' (line 727)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 727, 8), 'src_comment', create_src_comment_call_result_12203)
        
        # Assigning a List to a Name (line 728):
        
        # Assigning a List to a Name (line 728):
        
        # Obtaining an instance of the builtin type 'list' (line 728)
        list_12204 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 728, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 728)
        
        # Assigning a type to the variable 'if_stmts' (line 728)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 728, 8), 'if_stmts', list_12204)
        
        # Assigning a List to a Name (line 729):
        
        # Assigning a List to a Name (line 729):
        
        # Obtaining an instance of the builtin type 'list' (line 729)
        list_12205 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 18), 'list')
        # Adding type elements to the builtin type 'list' instance (line 729)
        
        # Assigning a type to the variable 'if_vars' (line 729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 729, 8), 'if_vars', list_12205)
        
        # Getting the type of 'node' (line 730)
        node_12206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 19), 'node')
        # Obtaining the member 'ifs' of a type (line 730)
        ifs_12207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 19), node_12206, 'ifs')
        # Assigning a type to the variable 'ifs_12207' (line 730)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 8), 'ifs_12207', ifs_12207)
        # Testing if the for loop is going to be iterated (line 730)
        # Testing the type of a for loop iterable (line 730)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 730, 8), ifs_12207)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 730, 8), ifs_12207):
            # Getting the type of the for loop variable (line 730)
            for_loop_var_12208 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 730, 8), ifs_12207)
            # Assigning a type to the variable 'if_' (line 730)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 730, 8), 'if_', for_loop_var_12208)
            # SSA begins for a for statement (line 730)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 731):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 731)
            # Processing the call arguments (line 731)
            # Getting the type of 'if_' (line 731)
            if__12211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 46), 'if_', False)
            # Getting the type of 'context' (line 731)
            context_12212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 51), 'context', False)
            # Processing the call keyword arguments (line 731)
            kwargs_12213 = {}
            # Getting the type of 'self' (line 731)
            self_12209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 35), 'self', False)
            # Obtaining the member 'visit' of a type (line 731)
            visit_12210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 731, 35), self_12209, 'visit')
            # Calling visit(args, kwargs) (line 731)
            visit_call_result_12214 = invoke(stypy.reporting.localization.Localization(__file__, 731, 35), visit_12210, *[if__12211, context_12212], **kwargs_12213)
            
            # Assigning a type to the variable 'call_assignment_9562' (line 731)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'call_assignment_9562', visit_call_result_12214)
            
            # Assigning a Call to a Name (line 731):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9562' (line 731)
            call_assignment_9562_12215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'call_assignment_9562', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12216 = stypy_get_value_from_tuple(call_assignment_9562_12215, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9563' (line 731)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'call_assignment_9563', stypy_get_value_from_tuple_call_result_12216)
            
            # Assigning a Name to a Name (line 731):
            # Getting the type of 'call_assignment_9563' (line 731)
            call_assignment_9563_12217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'call_assignment_9563')
            # Assigning a type to the variable 'temp_stmts' (line 731)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'temp_stmts', call_assignment_9563_12217)
            
            # Assigning a Call to a Name (line 731):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9562' (line 731)
            call_assignment_9562_12218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'call_assignment_9562', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12219 = stypy_get_value_from_tuple(call_assignment_9562_12218, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9564' (line 731)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'call_assignment_9564', stypy_get_value_from_tuple_call_result_12219)
            
            # Assigning a Name to a Name (line 731):
            # Getting the type of 'call_assignment_9564' (line 731)
            call_assignment_9564_12220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 12), 'call_assignment_9564')
            # Assigning a type to the variable 'temp_var' (line 731)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 731, 24), 'temp_var', call_assignment_9564_12220)
            
            # Call to append(...): (line 732)
            # Processing the call arguments (line 732)
            # Getting the type of 'temp_stmts' (line 732)
            temp_stmts_12223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 28), 'temp_stmts', False)
            # Processing the call keyword arguments (line 732)
            kwargs_12224 = {}
            # Getting the type of 'if_stmts' (line 732)
            if_stmts_12221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 12), 'if_stmts', False)
            # Obtaining the member 'append' of a type (line 732)
            append_12222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 12), if_stmts_12221, 'append')
            # Calling append(args, kwargs) (line 732)
            append_call_result_12225 = invoke(stypy.reporting.localization.Localization(__file__, 732, 12), append_12222, *[temp_stmts_12223], **kwargs_12224)
            
            
            # Call to append(...): (line 733)
            # Processing the call arguments (line 733)
            # Getting the type of 'temp_var' (line 733)
            temp_var_12228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 27), 'temp_var', False)
            # Processing the call keyword arguments (line 733)
            kwargs_12229 = {}
            # Getting the type of 'if_vars' (line 733)
            if_vars_12226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 12), 'if_vars', False)
            # Obtaining the member 'append' of a type (line 733)
            append_12227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 12), if_vars_12226, 'append')
            # Calling append(args, kwargs) (line 733)
            append_call_result_12230 = invoke(stypy.reporting.localization.Localization(__file__, 733, 12), append_12227, *[temp_var_12228], **kwargs_12229)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Tuple (line 735):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 735)
        # Processing the call arguments (line 735)
        # Getting the type of 'node' (line 735)
        node_12233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 42), 'node', False)
        # Obtaining the member 'iter' of a type (line 735)
        iter_12234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 42), node_12233, 'iter')
        # Getting the type of 'context' (line 735)
        context_12235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 53), 'context', False)
        # Processing the call keyword arguments (line 735)
        kwargs_12236 = {}
        # Getting the type of 'self' (line 735)
        self_12231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 735)
        visit_12232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 31), self_12231, 'visit')
        # Calling visit(args, kwargs) (line 735)
        visit_call_result_12237 = invoke(stypy.reporting.localization.Localization(__file__, 735, 31), visit_12232, *[iter_12234, context_12235], **kwargs_12236)
        
        # Assigning a type to the variable 'call_assignment_9565' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'call_assignment_9565', visit_call_result_12237)
        
        # Assigning a Call to a Name (line 735):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9565' (line 735)
        call_assignment_9565_12238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'call_assignment_9565', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12239 = stypy_get_value_from_tuple(call_assignment_9565_12238, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9566' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'call_assignment_9566', stypy_get_value_from_tuple_call_result_12239)
        
        # Assigning a Name to a Name (line 735):
        # Getting the type of 'call_assignment_9566' (line 735)
        call_assignment_9566_12240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'call_assignment_9566')
        # Assigning a type to the variable 'iter_stmts' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'iter_stmts', call_assignment_9566_12240)
        
        # Assigning a Call to a Name (line 735):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9565' (line 735)
        call_assignment_9565_12241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'call_assignment_9565', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12242 = stypy_get_value_from_tuple(call_assignment_9565_12241, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9567' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'call_assignment_9567', stypy_get_value_from_tuple_call_result_12242)
        
        # Assigning a Name to a Name (line 735):
        # Getting the type of 'call_assignment_9567' (line 735)
        call_assignment_9567_12243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'call_assignment_9567')
        # Assigning a type to the variable 'iter_var' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 20), 'iter_var', call_assignment_9567_12243)
        
        # Assigning a Call to a Name (line 736):
        
        # Assigning a Call to a Name (line 736):
        
        # Call to create_attribute(...): (line 736)
        # Processing the call arguments (line 736)
        # Getting the type of 'iter_var' (line 736)
        iter_var_12246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 64), 'iter_var', False)
        str_12247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 74), 'str', 'get_elements_type')
        # Processing the call keyword arguments (line 736)
        # Getting the type of 'node' (line 736)
        node_12248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 100), 'node', False)
        # Obtaining the member 'lineno' of a type (line 736)
        lineno_12249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 100), node_12248, 'lineno')
        keyword_12250 = lineno_12249
        # Getting the type of 'node' (line 737)
        node_12251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 66), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 737)
        col_offset_12252 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 66), node_12251, 'col_offset')
        keyword_12253 = col_offset_12252
        kwargs_12254 = {'column': keyword_12253, 'line': keyword_12250}
        # Getting the type of 'core_language_copy' (line 736)
        core_language_copy_12244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 28), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 736)
        create_attribute_12245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 28), core_language_copy_12244, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 736)
        create_attribute_call_result_12255 = invoke(stypy.reporting.localization.Localization(__file__, 736, 28), create_attribute_12245, *[iter_var_12246, str_12247], **kwargs_12254)
        
        # Assigning a type to the variable 'get_elements_call' (line 736)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 8), 'get_elements_call', create_attribute_call_result_12255)
        
        # Assigning a Call to a Name (line 738):
        
        # Assigning a Call to a Name (line 738):
        
        # Call to create_call(...): (line 738)
        # Processing the call arguments (line 738)
        # Getting the type of 'get_elements_call' (line 738)
        get_elements_call_12258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 53), 'get_elements_call', False)
        
        # Obtaining an instance of the builtin type 'list' (line 738)
        list_12259 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 72), 'list')
        # Adding type elements to the builtin type 'list' instance (line 738)
        
        # Processing the call keyword arguments (line 738)
        # Getting the type of 'node' (line 738)
        node_12260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 81), 'node', False)
        # Obtaining the member 'lineno' of a type (line 738)
        lineno_12261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 81), node_12260, 'lineno')
        keyword_12262 = lineno_12261
        # Getting the type of 'node' (line 739)
        node_12263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 55), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 739)
        col_offset_12264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 739, 55), node_12263, 'col_offset')
        keyword_12265 = col_offset_12264
        kwargs_12266 = {'column': keyword_12265, 'line': keyword_12262}
        # Getting the type of 'functions_copy' (line 738)
        functions_copy_12256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 26), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 738)
        create_call_12257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 26), functions_copy_12256, 'create_call')
        # Calling create_call(args, kwargs) (line 738)
        create_call_call_result_12267 = invoke(stypy.reporting.localization.Localization(__file__, 738, 26), create_call_12257, *[get_elements_call_12258, list_12259], **kwargs_12266)
        
        # Assigning a type to the variable 'iter_elems_call' (line 738)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 8), 'iter_elems_call', create_call_call_result_12267)
        
        # Assigning a Call to a Tuple (line 740):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 740)
        # Processing the call arguments (line 740)
        # Getting the type of 'iter_elems_call' (line 740)
        iter_elems_call_12270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 83), 'iter_elems_call', False)
        # Processing the call keyword arguments (line 740)
        # Getting the type of 'node' (line 740)
        node_12271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 740)
        lineno_12272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 105), node_12271, 'lineno')
        keyword_12273 = lineno_12272
        # Getting the type of 'node' (line 741)
        node_12274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 85), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 741)
        col_offset_12275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 741, 85), node_12274, 'col_offset')
        keyword_12276 = col_offset_12275
        kwargs_12277 = {'column': keyword_12276, 'line': keyword_12273}
        # Getting the type of 'stypy_functions_copy' (line 740)
        stypy_functions_copy_12268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 43), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 740)
        create_temp_Assign_12269 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 740, 43), stypy_functions_copy_12268, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 740)
        create_temp_Assign_call_result_12278 = invoke(stypy.reporting.localization.Localization(__file__, 740, 43), create_temp_Assign_12269, *[iter_elems_call_12270], **kwargs_12277)
        
        # Assigning a type to the variable 'call_assignment_9568' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'call_assignment_9568', create_temp_Assign_call_result_12278)
        
        # Assigning a Call to a Name (line 740):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9568' (line 740)
        call_assignment_9568_12279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'call_assignment_9568', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12280 = stypy_get_value_from_tuple(call_assignment_9568_12279, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9569' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'call_assignment_9569', stypy_get_value_from_tuple_call_result_12280)
        
        # Assigning a Name to a Name (line 740):
        # Getting the type of 'call_assignment_9569' (line 740)
        call_assignment_9569_12281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'call_assignment_9569')
        # Assigning a type to the variable 'iter_elems_stmts' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'iter_elems_stmts', call_assignment_9569_12281)
        
        # Assigning a Call to a Name (line 740):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9568' (line 740)
        call_assignment_9568_12282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'call_assignment_9568', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12283 = stypy_get_value_from_tuple(call_assignment_9568_12282, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9570' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'call_assignment_9570', stypy_get_value_from_tuple_call_result_12283)
        
        # Assigning a Name to a Name (line 740):
        # Getting the type of 'call_assignment_9570' (line 740)
        call_assignment_9570_12284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 740, 8), 'call_assignment_9570')
        # Assigning a type to the variable 'iter_elems_var' (line 740)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 740, 26), 'iter_elems_var', call_assignment_9570_12284)
        
        # Assigning a Call to a Tuple (line 743):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 743)
        # Processing the call arguments (line 743)
        # Getting the type of 'node' (line 743)
        node_12287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 38), 'node', False)
        # Obtaining the member 'target' of a type (line 743)
        target_12288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 38), node_12287, 'target')
        # Getting the type of 'context' (line 743)
        context_12289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 51), 'context', False)
        # Processing the call keyword arguments (line 743)
        kwargs_12290 = {}
        # Getting the type of 'self' (line 743)
        self_12285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 27), 'self', False)
        # Obtaining the member 'visit' of a type (line 743)
        visit_12286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 743, 27), self_12285, 'visit')
        # Calling visit(args, kwargs) (line 743)
        visit_call_result_12291 = invoke(stypy.reporting.localization.Localization(__file__, 743, 27), visit_12286, *[target_12288, context_12289], **kwargs_12290)
        
        # Assigning a type to the variable 'call_assignment_9571' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'call_assignment_9571', visit_call_result_12291)
        
        # Assigning a Call to a Name (line 743):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9571' (line 743)
        call_assignment_9571_12292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'call_assignment_9571', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12293 = stypy_get_value_from_tuple(call_assignment_9571_12292, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9572' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'call_assignment_9572', stypy_get_value_from_tuple_call_result_12293)
        
        # Assigning a Name to a Name (line 743):
        # Getting the type of 'call_assignment_9572' (line 743)
        call_assignment_9572_12294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'call_assignment_9572')
        # Assigning a type to the variable 'target_var' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'target_var', call_assignment_9572_12294)
        
        # Assigning a Call to a Name (line 743):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9571' (line 743)
        call_assignment_9571_12295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'call_assignment_9571', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12296 = stypy_get_value_from_tuple(call_assignment_9571_12295, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9573' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'call_assignment_9573', stypy_get_value_from_tuple_call_result_12296)
        
        # Assigning a Name to a Name (line 743):
        # Getting the type of 'call_assignment_9573' (line 743)
        call_assignment_9573_12297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'call_assignment_9573')
        # Assigning a type to the variable 'temp' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 20), 'temp', call_assignment_9573_12297)
        
        # Call to isinstance(...): (line 744)
        # Processing the call arguments (line 744)
        # Getting the type of 'target_var' (line 744)
        target_var_12299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 22), 'target_var', False)
        # Getting the type of 'ast' (line 744)
        ast_12300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 34), 'ast', False)
        # Obtaining the member 'Name' of a type (line 744)
        Name_12301 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 744, 34), ast_12300, 'Name')
        # Processing the call keyword arguments (line 744)
        kwargs_12302 = {}
        # Getting the type of 'isinstance' (line 744)
        isinstance_12298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 744, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 744)
        isinstance_call_result_12303 = invoke(stypy.reporting.localization.Localization(__file__, 744, 11), isinstance_12298, *[target_var_12299, Name_12301], **kwargs_12302)
        
        # Testing if the type of an if condition is none (line 744)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 744, 8), isinstance_call_result_12303):
            
            # Assigning a Call to a Name (line 748):
            
            # Assigning a Call to a Name (line 748):
            
            # Call to create_set_type_of(...): (line 748)
            # Processing the call arguments (line 748)
            # Getting the type of 'temp' (line 748)
            temp_12320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 79), 'temp', False)
            # Obtaining the member 'id' of a type (line 748)
            id_12321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 79), temp_12320, 'id')
            # Getting the type of 'iter_elems_var' (line 748)
            iter_elems_var_12322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 88), 'iter_elems_var', False)
            # Processing the call keyword arguments (line 748)
            # Getting the type of 'node' (line 748)
            node_12323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 111), 'node', False)
            # Obtaining the member 'lineno' of a type (line 748)
            lineno_12324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 111), node_12323, 'lineno')
            keyword_12325 = lineno_12324
            # Getting the type of 'node' (line 749)
            node_12326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 749)
            col_offset_12327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 81), node_12326, 'col_offset')
            keyword_12328 = col_offset_12327
            kwargs_12329 = {'lineno': keyword_12325, 'col_offset': keyword_12328}
            # Getting the type of 'stypy_functions_copy' (line 748)
            stypy_functions_copy_12318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 39), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 748)
            create_set_type_of_12319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 39), stypy_functions_copy_12318, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 748)
            create_set_type_of_call_result_12330 = invoke(stypy.reporting.localization.Localization(__file__, 748, 39), create_set_type_of_12319, *[id_12321, iter_elems_var_12322], **kwargs_12329)
            
            # Assigning a type to the variable 'set_type_of_target_stmts' (line 748)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 12), 'set_type_of_target_stmts', create_set_type_of_call_result_12330)
            
            # Assigning a BinOp to a Name (line 750):
            
            # Assigning a BinOp to a Name (line 750):
            # Getting the type of 'target_var' (line 750)
            target_var_12331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 39), 'target_var')
            # Getting the type of 'set_type_of_target_stmts' (line 750)
            set_type_of_target_stmts_12332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 52), 'set_type_of_target_stmts')
            # Applying the binary operator '+' (line 750)
            result_add_12333 = python_operator(stypy.reporting.localization.Localization(__file__, 750, 39), '+', target_var_12331, set_type_of_target_stmts_12332)
            
            # Assigning a type to the variable 'set_type_of_target_stmts' (line 750)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 12), 'set_type_of_target_stmts', result_add_12333)
        else:
            
            # Testing the type of an if condition (line 744)
            if_condition_12304 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 744, 8), isinstance_call_result_12303)
            # Assigning a type to the variable 'if_condition_12304' (line 744)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 744, 8), 'if_condition_12304', if_condition_12304)
            # SSA begins for if statement (line 744)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 745):
            
            # Assigning a Call to a Name (line 745):
            
            # Call to create_set_type_of(...): (line 745)
            # Processing the call arguments (line 745)
            # Getting the type of 'target_var' (line 745)
            target_var_12307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 79), 'target_var', False)
            # Obtaining the member 'id' of a type (line 745)
            id_12308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 79), target_var_12307, 'id')
            # Getting the type of 'iter_elems_var' (line 745)
            iter_elems_var_12309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 94), 'iter_elems_var', False)
            # Processing the call keyword arguments (line 745)
            # Getting the type of 'node' (line 745)
            node_12310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 117), 'node', False)
            # Obtaining the member 'lineno' of a type (line 745)
            lineno_12311 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 117), node_12310, 'lineno')
            keyword_12312 = lineno_12311
            # Getting the type of 'node' (line 746)
            node_12313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 746)
            col_offset_12314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 81), node_12313, 'col_offset')
            keyword_12315 = col_offset_12314
            kwargs_12316 = {'lineno': keyword_12312, 'col_offset': keyword_12315}
            # Getting the type of 'stypy_functions_copy' (line 745)
            stypy_functions_copy_12305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 39), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 745)
            create_set_type_of_12306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 39), stypy_functions_copy_12305, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 745)
            create_set_type_of_call_result_12317 = invoke(stypy.reporting.localization.Localization(__file__, 745, 39), create_set_type_of_12306, *[id_12308, iter_elems_var_12309], **kwargs_12316)
            
            # Assigning a type to the variable 'set_type_of_target_stmts' (line 745)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 12), 'set_type_of_target_stmts', create_set_type_of_call_result_12317)
            # SSA branch for the else part of an if statement (line 744)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Name (line 748):
            
            # Assigning a Call to a Name (line 748):
            
            # Call to create_set_type_of(...): (line 748)
            # Processing the call arguments (line 748)
            # Getting the type of 'temp' (line 748)
            temp_12320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 79), 'temp', False)
            # Obtaining the member 'id' of a type (line 748)
            id_12321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 79), temp_12320, 'id')
            # Getting the type of 'iter_elems_var' (line 748)
            iter_elems_var_12322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 88), 'iter_elems_var', False)
            # Processing the call keyword arguments (line 748)
            # Getting the type of 'node' (line 748)
            node_12323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 111), 'node', False)
            # Obtaining the member 'lineno' of a type (line 748)
            lineno_12324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 111), node_12323, 'lineno')
            keyword_12325 = lineno_12324
            # Getting the type of 'node' (line 749)
            node_12326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 749)
            col_offset_12327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 81), node_12326, 'col_offset')
            keyword_12328 = col_offset_12327
            kwargs_12329 = {'lineno': keyword_12325, 'col_offset': keyword_12328}
            # Getting the type of 'stypy_functions_copy' (line 748)
            stypy_functions_copy_12318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 748, 39), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 748)
            create_set_type_of_12319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 748, 39), stypy_functions_copy_12318, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 748)
            create_set_type_of_call_result_12330 = invoke(stypy.reporting.localization.Localization(__file__, 748, 39), create_set_type_of_12319, *[id_12321, iter_elems_var_12322], **kwargs_12329)
            
            # Assigning a type to the variable 'set_type_of_target_stmts' (line 748)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 748, 12), 'set_type_of_target_stmts', create_set_type_of_call_result_12330)
            
            # Assigning a BinOp to a Name (line 750):
            
            # Assigning a BinOp to a Name (line 750):
            # Getting the type of 'target_var' (line 750)
            target_var_12331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 39), 'target_var')
            # Getting the type of 'set_type_of_target_stmts' (line 750)
            set_type_of_target_stmts_12332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 750, 52), 'set_type_of_target_stmts')
            # Applying the binary operator '+' (line 750)
            result_add_12333 = python_operator(stypy.reporting.localization.Localization(__file__, 750, 39), '+', target_var_12331, set_type_of_target_stmts_12332)
            
            # Assigning a type to the variable 'set_type_of_target_stmts' (line 750)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 750, 12), 'set_type_of_target_stmts', result_add_12333)
            # SSA join for if statement (line 744)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Obtaining an instance of the builtin type 'tuple' (line 754)
        tuple_12334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 754, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 754)
        # Adding element type (line 754)
        
        # Call to flatten_lists(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 'src_comment' (line 754)
        src_comment_12337 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 50), 'src_comment', False)
        # Getting the type of 'iter_stmts' (line 754)
        iter_stmts_12338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 63), 'iter_stmts', False)
        # Getting the type of 'iter_elems_stmts' (line 754)
        iter_elems_stmts_12339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 75), 'iter_elems_stmts', False)
        # Getting the type of 'set_type_of_target_stmts' (line 755)
        set_type_of_target_stmts_12340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 45), 'set_type_of_target_stmts', False)
        # Getting the type of 'if_stmts' (line 755)
        if_stmts_12341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 71), 'if_stmts', False)
        # Processing the call keyword arguments (line 754)
        kwargs_12342 = {}
        # Getting the type of 'stypy_functions_copy' (line 754)
        stypy_functions_copy_12335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 754)
        flatten_lists_12336 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 15), stypy_functions_copy_12335, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 754)
        flatten_lists_call_result_12343 = invoke(stypy.reporting.localization.Localization(__file__, 754, 15), flatten_lists_12336, *[src_comment_12337, iter_stmts_12338, iter_elems_stmts_12339, set_type_of_target_stmts_12340, if_stmts_12341], **kwargs_12342)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 754, 15), tuple_12334, flatten_lists_call_result_12343)
        # Adding element type (line 754)
        # Getting the type of 'target_var' (line 755)
        target_var_12344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 755, 82), 'target_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 754, 15), tuple_12334, target_var_12344)
        
        # Assigning a type to the variable 'stypy_return_type' (line 754)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'stypy_return_type', tuple_12334)
        
        # ################# End of 'visit_comprehension(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_comprehension' in the type store
        # Getting the type of 'stypy_return_type' (line 726)
        stypy_return_type_12345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_12345)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_comprehension'
        return stypy_return_type_12345


    @norecursion
    def visit_Set(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Set'
        module_type_store = module_type_store.open_function_context('visit_Set', 757, 4, False)
        # Assigning a type to the variable 'self' (line 758)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 758, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Set')
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Set.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Set', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Set', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Set(...)' code ##################

        
        # Assigning a List to a Name (line 758):
        
        # Assigning a List to a Name (line 758):
        
        # Obtaining an instance of the builtin type 'list' (line 758)
        list_12346 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 758, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 758)
        
        # Assigning a type to the variable 'set_stmts' (line 758)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 758, 8), 'set_stmts', list_12346)
        
        # Assigning a Call to a Name (line 760):
        
        # Assigning a Call to a Name (line 760):
        
        # Call to create_localization(...): (line 760)
        # Processing the call arguments (line 760)
        # Getting the type of 'node' (line 760)
        node_12349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 760)
        lineno_12350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 64), node_12349, 'lineno')
        # Getting the type of 'node' (line 760)
        node_12351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 760)
        col_offset_12352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 77), node_12351, 'col_offset')
        # Processing the call keyword arguments (line 760)
        kwargs_12353 = {}
        # Getting the type of 'stypy_functions_copy' (line 760)
        stypy_functions_copy_12347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 760)
        create_localization_12348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 760, 23), stypy_functions_copy_12347, 'create_localization')
        # Calling create_localization(args, kwargs) (line 760)
        create_localization_call_result_12354 = invoke(stypy.reporting.localization.Localization(__file__, 760, 23), create_localization_12348, *[lineno_12350, col_offset_12352], **kwargs_12353)
        
        # Assigning a type to the variable 'localization' (line 760)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 760, 8), 'localization', create_localization_call_result_12354)
        
        # Assigning a Call to a Name (line 763):
        
        # Assigning a Call to a Name (line 763):
        
        # Call to create_src_comment(...): (line 763)
        # Processing the call arguments (line 763)
        str_12357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 763, 63), 'str', "Obtaining an instance of the builtin type 'set'")
        # Getting the type of 'node' (line 764)
        node_12358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 764, 58), 'node', False)
        # Obtaining the member 'lineno' of a type (line 764)
        lineno_12359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 764, 58), node_12358, 'lineno')
        # Processing the call keyword arguments (line 763)
        kwargs_12360 = {}
        # Getting the type of 'stypy_functions_copy' (line 763)
        stypy_functions_copy_12355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 763)
        create_src_comment_12356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 23), stypy_functions_copy_12355, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 763)
        create_src_comment_call_result_12361 = invoke(stypy.reporting.localization.Localization(__file__, 763, 23), create_src_comment_12356, *[str_12357, lineno_12359], **kwargs_12360)
        
        # Assigning a type to the variable 'call_comment' (line 763)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 8), 'call_comment', create_src_comment_call_result_12361)
        
        # Call to append(...): (line 765)
        # Processing the call arguments (line 765)
        # Getting the type of 'call_comment' (line 765)
        call_comment_12364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 25), 'call_comment', False)
        # Processing the call keyword arguments (line 765)
        kwargs_12365 = {}
        # Getting the type of 'set_stmts' (line 765)
        set_stmts_12362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 8), 'set_stmts', False)
        # Obtaining the member 'append' of a type (line 765)
        append_12363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 765, 8), set_stmts_12362, 'append')
        # Calling append(args, kwargs) (line 765)
        append_call_result_12366 = invoke(stypy.reporting.localization.Localization(__file__, 765, 8), append_12363, *[call_comment_12364], **kwargs_12365)
        
        
        # Assigning a Call to a Name (line 766):
        
        # Assigning a Call to a Name (line 766):
        
        # Call to create_Name(...): (line 766)
        # Processing the call arguments (line 766)
        str_12369 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 766, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 766)
        kwargs_12370 = {}
        # Getting the type of 'core_language_copy' (line 766)
        core_language_copy_12367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 766, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 766)
        create_Name_12368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 766, 24), core_language_copy_12367, 'create_Name')
        # Calling create_Name(args, kwargs) (line 766)
        create_Name_call_result_12371 = invoke(stypy.reporting.localization.Localization(__file__, 766, 24), create_Name_12368, *[str_12369], **kwargs_12370)
        
        # Assigning a type to the variable 'get_sett_func' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 8), 'get_sett_func', create_Name_call_result_12371)
        
        # Assigning a Call to a Name (line 767):
        
        # Assigning a Call to a Name (line 767):
        
        # Call to create_str(...): (line 767)
        # Processing the call arguments (line 767)
        str_12374 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 767, 47), 'str', 'set')
        # Processing the call keyword arguments (line 767)
        kwargs_12375 = {}
        # Getting the type of 'core_language_copy' (line 767)
        core_language_copy_12372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 17), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 767)
        create_str_12373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 17), core_language_copy_12372, 'create_str')
        # Calling create_str(args, kwargs) (line 767)
        create_str_call_result_12376 = invoke(stypy.reporting.localization.Localization(__file__, 767, 17), create_str_12373, *[str_12374], **kwargs_12375)
        
        # Assigning a type to the variable 'param1' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'param1', create_str_call_result_12376)
        
        # Assigning a Call to a Name (line 768):
        
        # Assigning a Call to a Name (line 768):
        
        # Call to create_call(...): (line 768)
        # Processing the call arguments (line 768)
        # Getting the type of 'get_sett_func' (line 768)
        get_sett_func_12379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 50), 'get_sett_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 768)
        list_12380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 768)
        # Adding element type (line 768)
        # Getting the type of 'localization' (line 768)
        localization_12381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 66), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 65), list_12380, localization_12381)
        # Adding element type (line 768)
        # Getting the type of 'param1' (line 768)
        param1_12382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 80), 'param1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 768, 65), list_12380, param1_12382)
        
        # Processing the call keyword arguments (line 768)
        kwargs_12383 = {}
        # Getting the type of 'functions_copy' (line 768)
        functions_copy_12377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 23), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 768)
        create_call_12378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 23), functions_copy_12377, 'create_call')
        # Calling create_call(args, kwargs) (line 768)
        create_call_call_result_12384 = invoke(stypy.reporting.localization.Localization(__file__, 768, 23), create_call_12378, *[get_sett_func_12379, list_12380], **kwargs_12383)
        
        # Assigning a type to the variable 'get_set_call' (line 768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'get_set_call', create_call_call_result_12384)
        
        # Assigning a Call to a Tuple (line 769):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 769)
        # Processing the call arguments (line 769)
        # Getting the type of 'get_set_call' (line 769)
        get_set_call_12387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 73), 'get_set_call', False)
        # Getting the type of 'node' (line 769)
        node_12388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 769)
        lineno_12389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 87), node_12388, 'lineno')
        # Getting the type of 'node' (line 769)
        node_12390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 769)
        col_offset_12391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 100), node_12390, 'col_offset')
        # Processing the call keyword arguments (line 769)
        kwargs_12392 = {}
        # Getting the type of 'stypy_functions_copy' (line 769)
        stypy_functions_copy_12385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 769)
        create_temp_Assign_12386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 33), stypy_functions_copy_12385, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 769)
        create_temp_Assign_call_result_12393 = invoke(stypy.reporting.localization.Localization(__file__, 769, 33), create_temp_Assign_12386, *[get_set_call_12387, lineno_12389, col_offset_12391], **kwargs_12392)
        
        # Assigning a type to the variable 'call_assignment_9574' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'call_assignment_9574', create_temp_Assign_call_result_12393)
        
        # Assigning a Call to a Name (line 769):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9574' (line 769)
        call_assignment_9574_12394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'call_assignment_9574', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12395 = stypy_get_value_from_tuple(call_assignment_9574_12394, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9575' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'call_assignment_9575', stypy_get_value_from_tuple_call_result_12395)
        
        # Assigning a Name to a Name (line 769):
        # Getting the type of 'call_assignment_9575' (line 769)
        call_assignment_9575_12396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'call_assignment_9575')
        # Assigning a type to the variable 'get_set_stmts' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'get_set_stmts', call_assignment_9575_12396)
        
        # Assigning a Call to a Name (line 769):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9574' (line 769)
        call_assignment_9574_12397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'call_assignment_9574', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12398 = stypy_get_value_from_tuple(call_assignment_9574_12397, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9576' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'call_assignment_9576', stypy_get_value_from_tuple_call_result_12398)
        
        # Assigning a Name to a Name (line 769):
        # Getting the type of 'call_assignment_9576' (line 769)
        call_assignment_9576_12399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 8), 'call_assignment_9576')
        # Assigning a type to the variable 'set_var' (line 769)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 23), 'set_var', call_assignment_9576_12399)
        
        # Call to append(...): (line 770)
        # Processing the call arguments (line 770)
        # Getting the type of 'get_set_stmts' (line 770)
        get_set_stmts_12402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 25), 'get_set_stmts', False)
        # Processing the call keyword arguments (line 770)
        kwargs_12403 = {}
        # Getting the type of 'set_stmts' (line 770)
        set_stmts_12400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'set_stmts', False)
        # Obtaining the member 'append' of a type (line 770)
        append_12401 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 770, 8), set_stmts_12400, 'append')
        # Calling append(args, kwargs) (line 770)
        append_call_result_12404 = invoke(stypy.reporting.localization.Localization(__file__, 770, 8), append_12401, *[get_set_stmts_12402], **kwargs_12403)
        
        
        # Assigning a Call to a Name (line 772):
        
        # Assigning a Call to a Name (line 772):
        
        # Call to create_src_comment(...): (line 772)
        # Processing the call arguments (line 772)
        str_12407 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 58), 'str', "Adding type elements to the builtin type 'set' instance")
        # Getting the type of 'node' (line 773)
        node_12408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 53), 'node', False)
        # Obtaining the member 'lineno' of a type (line 773)
        lineno_12409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 53), node_12408, 'lineno')
        # Processing the call keyword arguments (line 772)
        kwargs_12410 = {}
        # Getting the type of 'stypy_functions_copy' (line 772)
        stypy_functions_copy_12405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 772)
        create_src_comment_12406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 18), stypy_functions_copy_12405, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 772)
        create_src_comment_call_result_12411 = invoke(stypy.reporting.localization.Localization(__file__, 772, 18), create_src_comment_12406, *[str_12407, lineno_12409], **kwargs_12410)
        
        # Assigning a type to the variable 'comment' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'comment', create_src_comment_call_result_12411)
        
        # Call to append(...): (line 774)
        # Processing the call arguments (line 774)
        # Getting the type of 'comment' (line 774)
        comment_12414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 25), 'comment', False)
        # Processing the call keyword arguments (line 774)
        kwargs_12415 = {}
        # Getting the type of 'set_stmts' (line 774)
        set_stmts_12412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'set_stmts', False)
        # Obtaining the member 'append' of a type (line 774)
        append_12413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 8), set_stmts_12412, 'append')
        # Calling append(args, kwargs) (line 774)
        append_call_result_12416 = invoke(stypy.reporting.localization.Localization(__file__, 774, 8), append_12413, *[comment_12414], **kwargs_12415)
        
        
        # Assigning a Call to a Name (line 777):
        
        # Assigning a Call to a Name (line 777):
        
        # Call to create_attribute(...): (line 777)
        # Processing the call arguments (line 777)
        # Getting the type of 'set_var' (line 777)
        set_var_12419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 60), 'set_var', False)
        # Obtaining the member 'id' of a type (line 777)
        id_12420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 60), set_var_12419, 'id')
        str_12421 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 72), 'str', 'add_type')
        # Processing the call keyword arguments (line 777)
        kwargs_12422 = {}
        # Getting the type of 'core_language_copy' (line 777)
        core_language_copy_12417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 24), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 777)
        create_attribute_12418 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 24), core_language_copy_12417, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 777)
        create_attribute_call_result_12423 = invoke(stypy.reporting.localization.Localization(__file__, 777, 24), create_attribute_12418, *[id_12420, str_12421], **kwargs_12422)
        
        # Assigning a type to the variable 'add_type_func' (line 777)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 8), 'add_type_func', create_attribute_call_result_12423)
        
        # Getting the type of 'node' (line 779)
        node_12424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 23), 'node')
        # Obtaining the member 'elts' of a type (line 779)
        elts_12425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 23), node_12424, 'elts')
        # Assigning a type to the variable 'elts_12425' (line 779)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'elts_12425', elts_12425)
        # Testing if the for loop is going to be iterated (line 779)
        # Testing the type of a for loop iterable (line 779)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 779, 8), elts_12425)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 779, 8), elts_12425):
            # Getting the type of the for loop variable (line 779)
            for_loop_var_12426 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 779, 8), elts_12425)
            # Assigning a type to the variable 'element' (line 779)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 8), 'element', for_loop_var_12426)
            # SSA begins for a for statement (line 779)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 780):
            
            # Assigning a Call to a Name (line 780):
            
            # Call to create_src_comment(...): (line 780)
            # Processing the call arguments (line 780)
            str_12429 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 780, 62), 'str', 'Adding element type')
            # Getting the type of 'node' (line 780)
            node_12430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 85), 'node', False)
            # Obtaining the member 'lineno' of a type (line 780)
            lineno_12431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 85), node_12430, 'lineno')
            # Processing the call keyword arguments (line 780)
            kwargs_12432 = {}
            # Getting the type of 'stypy_functions_copy' (line 780)
            stypy_functions_copy_12427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 22), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 780)
            create_src_comment_12428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 22), stypy_functions_copy_12427, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 780)
            create_src_comment_call_result_12433 = invoke(stypy.reporting.localization.Localization(__file__, 780, 22), create_src_comment_12428, *[str_12429, lineno_12431], **kwargs_12432)
            
            # Assigning a type to the variable 'comment' (line 780)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 12), 'comment', create_src_comment_call_result_12433)
            
            # Call to append(...): (line 781)
            # Processing the call arguments (line 781)
            # Getting the type of 'comment' (line 781)
            comment_12436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 29), 'comment', False)
            # Processing the call keyword arguments (line 781)
            kwargs_12437 = {}
            # Getting the type of 'set_stmts' (line 781)
            set_stmts_12434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 12), 'set_stmts', False)
            # Obtaining the member 'append' of a type (line 781)
            append_12435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 781, 12), set_stmts_12434, 'append')
            # Calling append(args, kwargs) (line 781)
            append_call_result_12438 = invoke(stypy.reporting.localization.Localization(__file__, 781, 12), append_12435, *[comment_12436], **kwargs_12437)
            
            
            # Assigning a Call to a Tuple (line 782):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 782)
            # Processing the call arguments (line 782)
            # Getting the type of 'element' (line 782)
            element_12441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 52), 'element', False)
            # Getting the type of 'context' (line 782)
            context_12442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 61), 'context', False)
            # Processing the call keyword arguments (line 782)
            kwargs_12443 = {}
            # Getting the type of 'self' (line 782)
            self_12439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 41), 'self', False)
            # Obtaining the member 'visit' of a type (line 782)
            visit_12440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 41), self_12439, 'visit')
            # Calling visit(args, kwargs) (line 782)
            visit_call_result_12444 = invoke(stypy.reporting.localization.Localization(__file__, 782, 41), visit_12440, *[element_12441, context_12442], **kwargs_12443)
            
            # Assigning a type to the variable 'call_assignment_9577' (line 782)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'call_assignment_9577', visit_call_result_12444)
            
            # Assigning a Call to a Name (line 782):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9577' (line 782)
            call_assignment_9577_12445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'call_assignment_9577', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12446 = stypy_get_value_from_tuple(call_assignment_9577_12445, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9578' (line 782)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'call_assignment_9578', stypy_get_value_from_tuple_call_result_12446)
            
            # Assigning a Name to a Name (line 782):
            # Getting the type of 'call_assignment_9578' (line 782)
            call_assignment_9578_12447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'call_assignment_9578')
            # Assigning a type to the variable 'element_stmts' (line 782)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'element_stmts', call_assignment_9578_12447)
            
            # Assigning a Call to a Name (line 782):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9577' (line 782)
            call_assignment_9577_12448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'call_assignment_9577', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12449 = stypy_get_value_from_tuple(call_assignment_9577_12448, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9579' (line 782)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'call_assignment_9579', stypy_get_value_from_tuple_call_result_12449)
            
            # Assigning a Name to a Name (line 782):
            # Getting the type of 'call_assignment_9579' (line 782)
            call_assignment_9579_12450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 12), 'call_assignment_9579')
            # Assigning a type to the variable 'set_element' (line 782)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 782, 27), 'set_element', call_assignment_9579_12450)
            
            # Call to append(...): (line 783)
            # Processing the call arguments (line 783)
            
            # Call to flatten_lists(...): (line 783)
            # Processing the call arguments (line 783)
            # Getting the type of 'element_stmts' (line 783)
            element_stmts_12455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 64), 'element_stmts', False)
            # Processing the call keyword arguments (line 783)
            kwargs_12456 = {}
            # Getting the type of 'stypy_functions_copy' (line 783)
            stypy_functions_copy_12453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 29), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 783)
            flatten_lists_12454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 29), stypy_functions_copy_12453, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 783)
            flatten_lists_call_result_12457 = invoke(stypy.reporting.localization.Localization(__file__, 783, 29), flatten_lists_12454, *[element_stmts_12455], **kwargs_12456)
            
            # Processing the call keyword arguments (line 783)
            kwargs_12458 = {}
            # Getting the type of 'set_stmts' (line 783)
            set_stmts_12451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 12), 'set_stmts', False)
            # Obtaining the member 'append' of a type (line 783)
            append_12452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 12), set_stmts_12451, 'append')
            # Calling append(args, kwargs) (line 783)
            append_call_result_12459 = invoke(stypy.reporting.localization.Localization(__file__, 783, 12), append_12452, *[flatten_lists_call_result_12457], **kwargs_12458)
            
            
            # Assigning a Call to a Name (line 785):
            
            # Assigning a Call to a Name (line 785):
            
            # Call to create_call_expression(...): (line 785)
            # Processing the call arguments (line 785)
            # Getting the type of 'add_type_func' (line 785)
            add_type_func_12462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 73), 'add_type_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 785)
            list_12463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 785, 88), 'list')
            # Adding type elements to the builtin type 'list' instance (line 785)
            # Adding element type (line 785)
            # Getting the type of 'localization' (line 785)
            localization_12464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 89), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 785, 88), list_12463, localization_12464)
            # Adding element type (line 785)
            # Getting the type of 'set_element' (line 785)
            set_element_12465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 103), 'set_element', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 785, 88), list_12463, set_element_12465)
            
            # Processing the call keyword arguments (line 785)
            kwargs_12466 = {}
            # Getting the type of 'functions_copy' (line 785)
            functions_copy_12460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 35), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 785)
            create_call_expression_12461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 35), functions_copy_12460, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 785)
            create_call_expression_call_result_12467 = invoke(stypy.reporting.localization.Localization(__file__, 785, 35), create_call_expression_12461, *[add_type_func_12462, list_12463], **kwargs_12466)
            
            # Assigning a type to the variable 'add_type_to_set_call' (line 785)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 12), 'add_type_to_set_call', create_call_expression_call_result_12467)
            
            # Call to append(...): (line 786)
            # Processing the call arguments (line 786)
            # Getting the type of 'add_type_to_set_call' (line 786)
            add_type_to_set_call_12470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 29), 'add_type_to_set_call', False)
            # Processing the call keyword arguments (line 786)
            kwargs_12471 = {}
            # Getting the type of 'set_stmts' (line 786)
            set_stmts_12468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 12), 'set_stmts', False)
            # Obtaining the member 'append' of a type (line 786)
            append_12469 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 12), set_stmts_12468, 'append')
            # Calling append(args, kwargs) (line 786)
            append_call_result_12472 = invoke(stypy.reporting.localization.Localization(__file__, 786, 12), append_12469, *[add_type_to_set_call_12470], **kwargs_12471)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Obtaining an instance of the builtin type 'tuple' (line 788)
        tuple_12473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 788)
        # Adding element type (line 788)
        
        # Call to flatten_lists(...): (line 788)
        # Processing the call arguments (line 788)
        
        # Call to create_blank_line(...): (line 788)
        # Processing the call keyword arguments (line 788)
        kwargs_12478 = {}
        # Getting the type of 'stypy_functions_copy' (line 788)
        stypy_functions_copy_12476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 788)
        create_blank_line_12477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 50), stypy_functions_copy_12476, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 788)
        create_blank_line_call_result_12479 = invoke(stypy.reporting.localization.Localization(__file__, 788, 50), create_blank_line_12477, *[], **kwargs_12478)
        
        # Getting the type of 'set_stmts' (line 789)
        set_stmts_12480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 45), 'set_stmts', False)
        
        # Call to create_blank_line(...): (line 790)
        # Processing the call keyword arguments (line 790)
        kwargs_12483 = {}
        # Getting the type of 'stypy_functions_copy' (line 790)
        stypy_functions_copy_12481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 790)
        create_blank_line_12482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 45), stypy_functions_copy_12481, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 790)
        create_blank_line_call_result_12484 = invoke(stypy.reporting.localization.Localization(__file__, 790, 45), create_blank_line_12482, *[], **kwargs_12483)
        
        # Processing the call keyword arguments (line 788)
        kwargs_12485 = {}
        # Getting the type of 'stypy_functions_copy' (line 788)
        stypy_functions_copy_12474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 788)
        flatten_lists_12475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 788, 15), stypy_functions_copy_12474, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 788)
        flatten_lists_call_result_12486 = invoke(stypy.reporting.localization.Localization(__file__, 788, 15), flatten_lists_12475, *[create_blank_line_call_result_12479, set_stmts_12480, create_blank_line_call_result_12484], **kwargs_12485)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 15), tuple_12473, flatten_lists_call_result_12486)
        # Adding element type (line 788)
        # Getting the type of 'set_var' (line 790)
        set_var_12487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 88), 'set_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 788, 15), tuple_12473, set_var_12487)
        
        # Assigning a type to the variable 'stypy_return_type' (line 788)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 8), 'stypy_return_type', tuple_12473)
        
        # ################# End of 'visit_Set(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Set' in the type store
        # Getting the type of 'stypy_return_type' (line 757)
        stypy_return_type_12488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_12488)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Set'
        return stypy_return_type_12488


    @norecursion
    def visit_SetComp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_SetComp'
        module_type_store = module_type_store.open_function_context('visit_SetComp', 792, 4, False)
        # Assigning a type to the variable 'self' (line 793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_SetComp')
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_SetComp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_SetComp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_SetComp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_SetComp(...)' code ##################

        
        # Assigning a Call to a Name (line 793):
        
        # Assigning a Call to a Name (line 793):
        
        # Call to create_src_comment(...): (line 793)
        # Processing the call arguments (line 793)
        str_12491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 62), 'str', 'Calculating set comprehension')
        # Processing the call keyword arguments (line 793)
        kwargs_12492 = {}
        # Getting the type of 'stypy_functions_copy' (line 793)
        stypy_functions_copy_12489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 793)
        create_src_comment_12490 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 22), stypy_functions_copy_12489, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 793)
        create_src_comment_call_result_12493 = invoke(stypy.reporting.localization.Localization(__file__, 793, 22), create_src_comment_12490, *[str_12491], **kwargs_12492)
        
        # Assigning a type to the variable 'src_comment' (line 793)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 8), 'src_comment', create_src_comment_call_result_12493)
        
        # Assigning a Call to a Name (line 794):
        
        # Assigning a Call to a Name (line 794):
        
        # Call to create_localization(...): (line 794)
        # Processing the call arguments (line 794)
        # Getting the type of 'node' (line 794)
        node_12496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 794)
        lineno_12497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 64), node_12496, 'lineno')
        # Getting the type of 'node' (line 794)
        node_12498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 794)
        col_offset_12499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 77), node_12498, 'col_offset')
        # Processing the call keyword arguments (line 794)
        kwargs_12500 = {}
        # Getting the type of 'stypy_functions_copy' (line 794)
        stypy_functions_copy_12494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 794)
        create_localization_12495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 23), stypy_functions_copy_12494, 'create_localization')
        # Calling create_localization(args, kwargs) (line 794)
        create_localization_call_result_12501 = invoke(stypy.reporting.localization.Localization(__file__, 794, 23), create_localization_12495, *[lineno_12497, col_offset_12499], **kwargs_12500)
        
        # Assigning a type to the variable 'localization' (line 794)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 794, 8), 'localization', create_localization_call_result_12501)
        
        # Assigning a Call to a Name (line 796):
        
        # Assigning a Call to a Name (line 796):
        
        # Call to create_context_set(...): (line 796)
        # Processing the call arguments (line 796)
        str_12504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 796, 56), 'str', 'set comprehension expression')
        # Getting the type of 'node' (line 796)
        node_12505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 88), 'node', False)
        # Obtaining the member 'lineno' of a type (line 796)
        lineno_12506 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 88), node_12505, 'lineno')
        # Getting the type of 'node' (line 796)
        node_12507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 101), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 796)
        col_offset_12508 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 101), node_12507, 'col_offset')
        # Processing the call keyword arguments (line 796)
        kwargs_12509 = {}
        # Getting the type of 'functions_copy' (line 796)
        functions_copy_12502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 22), 'functions_copy', False)
        # Obtaining the member 'create_context_set' of a type (line 796)
        create_context_set_12503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 22), functions_copy_12502, 'create_context_set')
        # Calling create_context_set(args, kwargs) (line 796)
        create_context_set_call_result_12510 = invoke(stypy.reporting.localization.Localization(__file__, 796, 22), create_context_set_12503, *[str_12504, lineno_12506, col_offset_12508], **kwargs_12509)
        
        # Assigning a type to the variable 'context_set' (line 796)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 8), 'context_set', create_context_set_call_result_12510)
        
        # Assigning a Call to a Tuple (line 798):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 798)
        # Processing the call arguments (line 798)
        # Getting the type of 'node' (line 798)
        node_12513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 40), 'node', False)
        # Obtaining the member 'elt' of a type (line 798)
        elt_12514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 40), node_12513, 'elt')
        # Getting the type of 'context' (line 798)
        context_12515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 50), 'context', False)
        # Processing the call keyword arguments (line 798)
        kwargs_12516 = {}
        # Getting the type of 'self' (line 798)
        self_12511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 29), 'self', False)
        # Obtaining the member 'visit' of a type (line 798)
        visit_12512 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 798, 29), self_12511, 'visit')
        # Calling visit(args, kwargs) (line 798)
        visit_call_result_12517 = invoke(stypy.reporting.localization.Localization(__file__, 798, 29), visit_12512, *[elt_12514, context_12515], **kwargs_12516)
        
        # Assigning a type to the variable 'call_assignment_9580' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'call_assignment_9580', visit_call_result_12517)
        
        # Assigning a Call to a Name (line 798):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9580' (line 798)
        call_assignment_9580_12518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'call_assignment_9580', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12519 = stypy_get_value_from_tuple(call_assignment_9580_12518, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9581' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'call_assignment_9581', stypy_get_value_from_tuple_call_result_12519)
        
        # Assigning a Name to a Name (line 798):
        # Getting the type of 'call_assignment_9581' (line 798)
        call_assignment_9581_12520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'call_assignment_9581')
        # Assigning a type to the variable 'elt_stmts' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'elt_stmts', call_assignment_9581_12520)
        
        # Assigning a Call to a Name (line 798):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9580' (line 798)
        call_assignment_9580_12521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'call_assignment_9580', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12522 = stypy_get_value_from_tuple(call_assignment_9580_12521, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9582' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'call_assignment_9582', stypy_get_value_from_tuple_call_result_12522)
        
        # Assigning a Name to a Name (line 798):
        # Getting the type of 'call_assignment_9582' (line 798)
        call_assignment_9582_12523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'call_assignment_9582')
        # Assigning a type to the variable 'elt_var' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 19), 'elt_var', call_assignment_9582_12523)
        
        # Assigning a List to a Name (line 800):
        
        # Assigning a List to a Name (line 800):
        
        # Obtaining an instance of the builtin type 'list' (line 800)
        list_12524 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 800, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 800)
        
        # Assigning a type to the variable 'generator_stmts' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'generator_stmts', list_12524)
        
        # Assigning a List to a Name (line 801):
        
        # Assigning a List to a Name (line 801):
        
        # Obtaining an instance of the builtin type 'list' (line 801)
        list_12525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 801, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 801)
        
        # Assigning a type to the variable 'generator_vars' (line 801)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 801, 8), 'generator_vars', list_12525)
        
        # Getting the type of 'node' (line 802)
        node_12526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 19), 'node')
        # Obtaining the member 'generators' of a type (line 802)
        generators_12527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 19), node_12526, 'generators')
        # Assigning a type to the variable 'generators_12527' (line 802)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'generators_12527', generators_12527)
        # Testing if the for loop is going to be iterated (line 802)
        # Testing the type of a for loop iterable (line 802)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 802, 8), generators_12527)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 802, 8), generators_12527):
            # Getting the type of the for loop variable (line 802)
            for_loop_var_12528 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 802, 8), generators_12527)
            # Assigning a type to the variable 'gen' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 8), 'gen', for_loop_var_12528)
            # SSA begins for a for statement (line 802)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to assign_line_and_column(...): (line 803)
            # Processing the call arguments (line 803)
            # Getting the type of 'gen' (line 803)
            gen_12531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 56), 'gen', False)
            # Getting the type of 'node' (line 803)
            node_12532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 61), 'node', False)
            # Processing the call keyword arguments (line 803)
            kwargs_12533 = {}
            # Getting the type of 'stypy_functions_copy' (line 803)
            stypy_functions_copy_12529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 803)
            assign_line_and_column_12530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 803, 12), stypy_functions_copy_12529, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 803)
            assign_line_and_column_call_result_12534 = invoke(stypy.reporting.localization.Localization(__file__, 803, 12), assign_line_and_column_12530, *[gen_12531, node_12532], **kwargs_12533)
            
            
            # Assigning a Call to a Tuple (line 804):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 804)
            # Processing the call arguments (line 804)
            # Getting the type of 'gen' (line 804)
            gen_12537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 46), 'gen', False)
            # Getting the type of 'context' (line 804)
            context_12538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 51), 'context', False)
            # Processing the call keyword arguments (line 804)
            kwargs_12539 = {}
            # Getting the type of 'self' (line 804)
            self_12535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 35), 'self', False)
            # Obtaining the member 'visit' of a type (line 804)
            visit_12536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 804, 35), self_12535, 'visit')
            # Calling visit(args, kwargs) (line 804)
            visit_call_result_12540 = invoke(stypy.reporting.localization.Localization(__file__, 804, 35), visit_12536, *[gen_12537, context_12538], **kwargs_12539)
            
            # Assigning a type to the variable 'call_assignment_9583' (line 804)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'call_assignment_9583', visit_call_result_12540)
            
            # Assigning a Call to a Name (line 804):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9583' (line 804)
            call_assignment_9583_12541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'call_assignment_9583', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12542 = stypy_get_value_from_tuple(call_assignment_9583_12541, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9584' (line 804)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'call_assignment_9584', stypy_get_value_from_tuple_call_result_12542)
            
            # Assigning a Name to a Name (line 804):
            # Getting the type of 'call_assignment_9584' (line 804)
            call_assignment_9584_12543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'call_assignment_9584')
            # Assigning a type to the variable 'temp_stmts' (line 804)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'temp_stmts', call_assignment_9584_12543)
            
            # Assigning a Call to a Name (line 804):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9583' (line 804)
            call_assignment_9583_12544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'call_assignment_9583', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12545 = stypy_get_value_from_tuple(call_assignment_9583_12544, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9585' (line 804)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'call_assignment_9585', stypy_get_value_from_tuple_call_result_12545)
            
            # Assigning a Name to a Name (line 804):
            # Getting the type of 'call_assignment_9585' (line 804)
            call_assignment_9585_12546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 12), 'call_assignment_9585')
            # Assigning a type to the variable 'temp_var' (line 804)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 804, 24), 'temp_var', call_assignment_9585_12546)
            
            # Call to append(...): (line 805)
            # Processing the call arguments (line 805)
            # Getting the type of 'temp_stmts' (line 805)
            temp_stmts_12549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 35), 'temp_stmts', False)
            # Processing the call keyword arguments (line 805)
            kwargs_12550 = {}
            # Getting the type of 'generator_stmts' (line 805)
            generator_stmts_12547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 12), 'generator_stmts', False)
            # Obtaining the member 'append' of a type (line 805)
            append_12548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 12), generator_stmts_12547, 'append')
            # Calling append(args, kwargs) (line 805)
            append_call_result_12551 = invoke(stypy.reporting.localization.Localization(__file__, 805, 12), append_12548, *[temp_stmts_12549], **kwargs_12550)
            
            
            # Call to append(...): (line 806)
            # Processing the call arguments (line 806)
            # Getting the type of 'generator_vars' (line 806)
            generator_vars_12554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 34), 'generator_vars', False)
            # Processing the call keyword arguments (line 806)
            kwargs_12555 = {}
            # Getting the type of 'generator_vars' (line 806)
            generator_vars_12552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 12), 'generator_vars', False)
            # Obtaining the member 'append' of a type (line 806)
            append_12553 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 12), generator_vars_12552, 'append')
            # Calling append(args, kwargs) (line 806)
            append_call_result_12556 = invoke(stypy.reporting.localization.Localization(__file__, 806, 12), append_12553, *[generator_vars_12554], **kwargs_12555)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 808):
        
        # Assigning a Call to a Name (line 808):
        
        # Call to create_Name(...): (line 808)
        # Processing the call arguments (line 808)
        str_12559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 808, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 808)
        # Getting the type of 'node' (line 808)
        node_12560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 80), 'node', False)
        # Obtaining the member 'lineno' of a type (line 808)
        lineno_12561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 80), node_12560, 'lineno')
        keyword_12562 = lineno_12561
        # Getting the type of 'node' (line 808)
        node_12563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 808)
        col_offset_12564 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 100), node_12563, 'col_offset')
        keyword_12565 = col_offset_12564
        kwargs_12566 = {'column': keyword_12565, 'line': keyword_12562}
        # Getting the type of 'core_language_copy' (line 808)
        core_language_copy_12557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 808)
        create_Name_12558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 24), core_language_copy_12557, 'create_Name')
        # Calling create_Name(args, kwargs) (line 808)
        create_Name_call_result_12567 = invoke(stypy.reporting.localization.Localization(__file__, 808, 24), create_Name_12558, *[str_12559], **kwargs_12566)
        
        # Assigning a type to the variable 'get_type_call' (line 808)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 808, 8), 'get_type_call', create_Name_call_result_12567)
        
        # Assigning a Call to a Name (line 809):
        
        # Assigning a Call to a Name (line 809):
        
        # Call to create_str(...): (line 809)
        # Processing the call arguments (line 809)
        str_12570 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 60), 'str', 'set')
        # Processing the call keyword arguments (line 809)
        kwargs_12571 = {}
        # Getting the type of 'core_language_copy' (line 809)
        core_language_copy_12568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 30), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 809)
        create_str_12569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 30), core_language_copy_12568, 'create_str')
        # Calling create_str(args, kwargs) (line 809)
        create_str_call_result_12572 = invoke(stypy.reporting.localization.Localization(__file__, 809, 30), create_str_12569, *[str_12570], **kwargs_12571)
        
        # Assigning a type to the variable 'get_type_call_param' (line 809)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 8), 'get_type_call_param', create_str_call_result_12572)
        
        # Assigning a Call to a Name (line 810):
        
        # Assigning a Call to a Name (line 810):
        
        # Call to create_call(...): (line 810)
        # Processing the call arguments (line 810)
        # Getting the type of 'get_type_call' (line 810)
        get_type_call_12575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 42), 'get_type_call', False)
        
        # Obtaining an instance of the builtin type 'list' (line 810)
        list_12576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 810)
        # Adding element type (line 810)
        # Getting the type of 'localization' (line 810)
        localization_12577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 58), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 810, 57), list_12576, localization_12577)
        # Adding element type (line 810)
        # Getting the type of 'get_type_call_param' (line 810)
        get_type_call_param_12578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 72), 'get_type_call_param', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 810, 57), list_12576, get_type_call_param_12578)
        
        # Processing the call keyword arguments (line 810)
        kwargs_12579 = {}
        # Getting the type of 'functions_copy' (line 810)
        functions_copy_12573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 15), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 810)
        create_call_12574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 15), functions_copy_12573, 'create_call')
        # Calling create_call(args, kwargs) (line 810)
        create_call_call_result_12580 = invoke(stypy.reporting.localization.Localization(__file__, 810, 15), create_call_12574, *[get_type_call_12575, list_12576], **kwargs_12579)
        
        # Assigning a type to the variable 'call' (line 810)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 8), 'call', create_call_call_result_12580)
        
        # Assigning a Call to a Tuple (line 811):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 811)
        # Processing the call arguments (line 811)
        # Getting the type of 'call' (line 811)
        call_12583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 77), 'call', False)
        # Processing the call keyword arguments (line 811)
        # Getting the type of 'node' (line 811)
        node_12584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 88), 'node', False)
        # Obtaining the member 'lineno' of a type (line 811)
        lineno_12585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 88), node_12584, 'lineno')
        keyword_12586 = lineno_12585
        # Getting the type of 'node' (line 812)
        node_12587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 79), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 812)
        col_offset_12588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 79), node_12587, 'col_offset')
        keyword_12589 = col_offset_12588
        kwargs_12590 = {'column': keyword_12589, 'line': keyword_12586}
        # Getting the type of 'stypy_functions_copy' (line 811)
        stypy_functions_copy_12581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 37), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 811)
        create_temp_Assign_12582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 37), stypy_functions_copy_12581, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 811)
        create_temp_Assign_call_result_12591 = invoke(stypy.reporting.localization.Localization(__file__, 811, 37), create_temp_Assign_12582, *[call_12583], **kwargs_12590)
        
        # Assigning a type to the variable 'call_assignment_9586' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_assignment_9586', create_temp_Assign_call_result_12591)
        
        # Assigning a Call to a Name (line 811):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9586' (line 811)
        call_assignment_9586_12592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_assignment_9586', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12593 = stypy_get_value_from_tuple(call_assignment_9586_12592, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9587' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_assignment_9587', stypy_get_value_from_tuple_call_result_12593)
        
        # Assigning a Name to a Name (line 811):
        # Getting the type of 'call_assignment_9587' (line 811)
        call_assignment_9587_12594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_assignment_9587')
        # Assigning a type to the variable 'ret_set_stmts' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'ret_set_stmts', call_assignment_9587_12594)
        
        # Assigning a Call to a Name (line 811):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9586' (line 811)
        call_assignment_9586_12595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_assignment_9586', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12596 = stypy_get_value_from_tuple(call_assignment_9586_12595, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9588' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_assignment_9588', stypy_get_value_from_tuple_call_result_12596)
        
        # Assigning a Name to a Name (line 811):
        # Getting the type of 'call_assignment_9588' (line 811)
        call_assignment_9588_12597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_assignment_9588')
        # Assigning a type to the variable 'ret_set_var' (line 811)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 811, 23), 'ret_set_var', call_assignment_9588_12597)
        
        # Assigning a Call to a Name (line 814):
        
        # Assigning a Call to a Name (line 814):
        
        # Call to create_attribute(...): (line 814)
        # Processing the call arguments (line 814)
        # Getting the type of 'ret_set_var' (line 814)
        ret_set_var_12600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 65), 'ret_set_var', False)
        str_12601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 814, 78), 'str', 'set_elements_type')
        # Processing the call keyword arguments (line 814)
        kwargs_12602 = {}
        # Getting the type of 'core_language_copy' (line 814)
        core_language_copy_12598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 29), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 814)
        create_attribute_12599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 814, 29), core_language_copy_12598, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 814)
        create_attribute_call_result_12603 = invoke(stypy.reporting.localization.Localization(__file__, 814, 29), create_attribute_12599, *[ret_set_var_12600, str_12601], **kwargs_12602)
        
        # Assigning a type to the variable 'invoke_set_element' (line 814)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 814, 8), 'invoke_set_element', create_attribute_call_result_12603)
        
        # Assigning a Call to a Name (line 816):
        
        # Assigning a Call to a Name (line 816):
        
        # Call to create_context_unset(...): (line 816)
        # Processing the call keyword arguments (line 816)
        kwargs_12606 = {}
        # Getting the type of 'functions_copy' (line 816)
        functions_copy_12604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 24), 'functions_copy', False)
        # Obtaining the member 'create_context_unset' of a type (line 816)
        create_context_unset_12605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 816, 24), functions_copy_12604, 'create_context_unset')
        # Calling create_context_unset(args, kwargs) (line 816)
        create_context_unset_call_result_12607 = invoke(stypy.reporting.localization.Localization(__file__, 816, 24), create_context_unset_12605, *[], **kwargs_12606)
        
        # Assigning a type to the variable 'context_unset' (line 816)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 8), 'context_unset', create_context_unset_call_result_12607)
        
        # Assigning a Call to a Name (line 817):
        
        # Assigning a Call to a Name (line 817):
        
        # Call to create_Name(...): (line 817)
        # Processing the call arguments (line 817)
        str_12610 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 48), 'str', 'False')
        # Processing the call keyword arguments (line 817)
        kwargs_12611 = {}
        # Getting the type of 'core_language_copy' (line 817)
        core_language_copy_12608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 17), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 817)
        create_Name_12609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 17), core_language_copy_12608, 'create_Name')
        # Calling create_Name(args, kwargs) (line 817)
        create_Name_call_result_12612 = invoke(stypy.reporting.localization.Localization(__file__, 817, 17), create_Name_12609, *[str_12610], **kwargs_12611)
        
        # Assigning a type to the variable 'false_' (line 817)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 817, 8), 'false_', create_Name_call_result_12612)
        
        # Assigning a Call to a Name (line 818):
        
        # Assigning a Call to a Name (line 818):
        
        # Call to create_call_expression(...): (line 818)
        # Processing the call arguments (line 818)
        # Getting the type of 'invoke_set_element' (line 818)
        invoke_set_element_12615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 68), 'invoke_set_element', False)
        
        # Obtaining an instance of the builtin type 'list' (line 818)
        list_12616 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 88), 'list')
        # Adding type elements to the builtin type 'list' instance (line 818)
        # Adding element type (line 818)
        # Getting the type of 'localization' (line 818)
        localization_12617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 89), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 818, 88), list_12616, localization_12617)
        # Adding element type (line 818)
        # Getting the type of 'elt_var' (line 818)
        elt_var_12618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 103), 'elt_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 818, 88), list_12616, elt_var_12618)
        # Adding element type (line 818)
        # Getting the type of 'false_' (line 818)
        false__12619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 112), 'false_', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 818, 88), list_12616, false__12619)
        
        # Processing the call keyword arguments (line 818)
        kwargs_12620 = {}
        # Getting the type of 'functions_copy' (line 818)
        functions_copy_12613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 30), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 818)
        create_call_expression_12614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 30), functions_copy_12613, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 818)
        create_call_expression_call_result_12621 = invoke(stypy.reporting.localization.Localization(__file__, 818, 30), create_call_expression_12614, *[invoke_set_element_12615, list_12616], **kwargs_12620)
        
        # Assigning a type to the variable 'call_to_set_element' (line 818)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 8), 'call_to_set_element', create_call_expression_call_result_12621)
        
        # Obtaining an instance of the builtin type 'tuple' (line 820)
        tuple_12622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 820, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 820)
        # Adding element type (line 820)
        
        # Call to flatten_lists(...): (line 820)
        # Processing the call arguments (line 820)
        # Getting the type of 'src_comment' (line 820)
        src_comment_12625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 50), 'src_comment', False)
        # Getting the type of 'context_set' (line 820)
        context_set_12626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 63), 'context_set', False)
        # Getting the type of 'generator_stmts' (line 820)
        generator_stmts_12627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 76), 'generator_stmts', False)
        # Getting the type of 'elt_stmts' (line 820)
        elt_stmts_12628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 93), 'elt_stmts', False)
        # Getting the type of 'ret_set_stmts' (line 820)
        ret_set_stmts_12629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 104), 'ret_set_stmts', False)
        # Getting the type of 'context_unset' (line 821)
        context_unset_12630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 45), 'context_unset', False)
        # Getting the type of 'call_to_set_element' (line 821)
        call_to_set_element_12631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 60), 'call_to_set_element', False)
        # Processing the call keyword arguments (line 820)
        kwargs_12632 = {}
        # Getting the type of 'stypy_functions_copy' (line 820)
        stypy_functions_copy_12623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 820)
        flatten_lists_12624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 15), stypy_functions_copy_12623, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 820)
        flatten_lists_call_result_12633 = invoke(stypy.reporting.localization.Localization(__file__, 820, 15), flatten_lists_12624, *[src_comment_12625, context_set_12626, generator_stmts_12627, elt_stmts_12628, ret_set_stmts_12629, context_unset_12630, call_to_set_element_12631], **kwargs_12632)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 820, 15), tuple_12622, flatten_lists_call_result_12633)
        # Adding element type (line 820)
        # Getting the type of 'ret_set_var' (line 821)
        ret_set_var_12634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 82), 'ret_set_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 820, 15), tuple_12622, ret_set_var_12634)
        
        # Assigning a type to the variable 'stypy_return_type' (line 820)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 820, 8), 'stypy_return_type', tuple_12622)
        
        # ################# End of 'visit_SetComp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_SetComp' in the type store
        # Getting the type of 'stypy_return_type' (line 792)
        stypy_return_type_12635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_12635)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_SetComp'
        return stypy_return_type_12635


    @norecursion
    def visit_Dict(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Dict'
        module_type_store = module_type_store.open_function_context('visit_Dict', 823, 4, False)
        # Assigning a type to the variable 'self' (line 824)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 824, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Dict')
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Dict.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Dict', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Dict', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Dict(...)' code ##################

        
        # Assigning a List to a Name (line 824):
        
        # Assigning a List to a Name (line 824):
        
        # Obtaining an instance of the builtin type 'list' (line 824)
        list_12636 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 824, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 824)
        
        # Assigning a type to the variable 'set_stmts' (line 824)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 824, 8), 'set_stmts', list_12636)
        
        # Assigning a Call to a Name (line 826):
        
        # Assigning a Call to a Name (line 826):
        
        # Call to create_localization(...): (line 826)
        # Processing the call arguments (line 826)
        # Getting the type of 'node' (line 826)
        node_12639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 826)
        lineno_12640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 64), node_12639, 'lineno')
        # Getting the type of 'node' (line 826)
        node_12641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 826)
        col_offset_12642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 77), node_12641, 'col_offset')
        # Processing the call keyword arguments (line 826)
        kwargs_12643 = {}
        # Getting the type of 'stypy_functions_copy' (line 826)
        stypy_functions_copy_12637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 826)
        create_localization_12638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 826, 23), stypy_functions_copy_12637, 'create_localization')
        # Calling create_localization(args, kwargs) (line 826)
        create_localization_call_result_12644 = invoke(stypy.reporting.localization.Localization(__file__, 826, 23), create_localization_12638, *[lineno_12640, col_offset_12642], **kwargs_12643)
        
        # Assigning a type to the variable 'localization' (line 826)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 8), 'localization', create_localization_call_result_12644)
        
        # Assigning a Call to a Name (line 829):
        
        # Assigning a Call to a Name (line 829):
        
        # Call to create_src_comment(...): (line 829)
        # Processing the call arguments (line 829)
        str_12647 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 63), 'str', "Obtaining an instance of the builtin type 'dict'")
        # Getting the type of 'node' (line 830)
        node_12648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 58), 'node', False)
        # Obtaining the member 'lineno' of a type (line 830)
        lineno_12649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 58), node_12648, 'lineno')
        # Processing the call keyword arguments (line 829)
        kwargs_12650 = {}
        # Getting the type of 'stypy_functions_copy' (line 829)
        stypy_functions_copy_12645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 829)
        create_src_comment_12646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 23), stypy_functions_copy_12645, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 829)
        create_src_comment_call_result_12651 = invoke(stypy.reporting.localization.Localization(__file__, 829, 23), create_src_comment_12646, *[str_12647, lineno_12649], **kwargs_12650)
        
        # Assigning a type to the variable 'call_comment' (line 829)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 829, 8), 'call_comment', create_src_comment_call_result_12651)
        
        # Call to append(...): (line 831)
        # Processing the call arguments (line 831)
        # Getting the type of 'call_comment' (line 831)
        call_comment_12654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 25), 'call_comment', False)
        # Processing the call keyword arguments (line 831)
        kwargs_12655 = {}
        # Getting the type of 'set_stmts' (line 831)
        set_stmts_12652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 8), 'set_stmts', False)
        # Obtaining the member 'append' of a type (line 831)
        append_12653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 8), set_stmts_12652, 'append')
        # Calling append(args, kwargs) (line 831)
        append_call_result_12656 = invoke(stypy.reporting.localization.Localization(__file__, 831, 8), append_12653, *[call_comment_12654], **kwargs_12655)
        
        
        # Assigning a Call to a Name (line 832):
        
        # Assigning a Call to a Name (line 832):
        
        # Call to create_Name(...): (line 832)
        # Processing the call arguments (line 832)
        str_12659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 832, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 832)
        kwargs_12660 = {}
        # Getting the type of 'core_language_copy' (line 832)
        core_language_copy_12657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 832)
        create_Name_12658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 24), core_language_copy_12657, 'create_Name')
        # Calling create_Name(args, kwargs) (line 832)
        create_Name_call_result_12661 = invoke(stypy.reporting.localization.Localization(__file__, 832, 24), create_Name_12658, *[str_12659], **kwargs_12660)
        
        # Assigning a type to the variable 'get_sett_func' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'get_sett_func', create_Name_call_result_12661)
        
        # Assigning a Call to a Name (line 833):
        
        # Assigning a Call to a Name (line 833):
        
        # Call to create_str(...): (line 833)
        # Processing the call arguments (line 833)
        str_12664 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 47), 'str', 'dict')
        # Processing the call keyword arguments (line 833)
        kwargs_12665 = {}
        # Getting the type of 'core_language_copy' (line 833)
        core_language_copy_12662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 17), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 833)
        create_str_12663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 17), core_language_copy_12662, 'create_str')
        # Calling create_str(args, kwargs) (line 833)
        create_str_call_result_12666 = invoke(stypy.reporting.localization.Localization(__file__, 833, 17), create_str_12663, *[str_12664], **kwargs_12665)
        
        # Assigning a type to the variable 'param1' (line 833)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 8), 'param1', create_str_call_result_12666)
        
        # Assigning a Call to a Name (line 834):
        
        # Assigning a Call to a Name (line 834):
        
        # Call to create_call(...): (line 834)
        # Processing the call arguments (line 834)
        # Getting the type of 'get_sett_func' (line 834)
        get_sett_func_12669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 50), 'get_sett_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 834)
        list_12670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 65), 'list')
        # Adding type elements to the builtin type 'list' instance (line 834)
        # Adding element type (line 834)
        # Getting the type of 'localization' (line 834)
        localization_12671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 66), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 65), list_12670, localization_12671)
        # Adding element type (line 834)
        # Getting the type of 'param1' (line 834)
        param1_12672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 80), 'param1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 834, 65), list_12670, param1_12672)
        
        # Processing the call keyword arguments (line 834)
        kwargs_12673 = {}
        # Getting the type of 'functions_copy' (line 834)
        functions_copy_12667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 23), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 834)
        create_call_12668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 23), functions_copy_12667, 'create_call')
        # Calling create_call(args, kwargs) (line 834)
        create_call_call_result_12674 = invoke(stypy.reporting.localization.Localization(__file__, 834, 23), create_call_12668, *[get_sett_func_12669, list_12670], **kwargs_12673)
        
        # Assigning a type to the variable 'get_set_call' (line 834)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 8), 'get_set_call', create_call_call_result_12674)
        
        # Assigning a Call to a Tuple (line 835):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 835)
        # Processing the call arguments (line 835)
        # Getting the type of 'get_set_call' (line 835)
        get_set_call_12677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 73), 'get_set_call', False)
        # Getting the type of 'node' (line 835)
        node_12678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 835)
        lineno_12679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 87), node_12678, 'lineno')
        # Getting the type of 'node' (line 835)
        node_12680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 835)
        col_offset_12681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 100), node_12680, 'col_offset')
        # Processing the call keyword arguments (line 835)
        kwargs_12682 = {}
        # Getting the type of 'stypy_functions_copy' (line 835)
        stypy_functions_copy_12675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 835)
        create_temp_Assign_12676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 835, 33), stypy_functions_copy_12675, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 835)
        create_temp_Assign_call_result_12683 = invoke(stypy.reporting.localization.Localization(__file__, 835, 33), create_temp_Assign_12676, *[get_set_call_12677, lineno_12679, col_offset_12681], **kwargs_12682)
        
        # Assigning a type to the variable 'call_assignment_9589' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'call_assignment_9589', create_temp_Assign_call_result_12683)
        
        # Assigning a Call to a Name (line 835):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9589' (line 835)
        call_assignment_9589_12684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'call_assignment_9589', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12685 = stypy_get_value_from_tuple(call_assignment_9589_12684, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9590' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'call_assignment_9590', stypy_get_value_from_tuple_call_result_12685)
        
        # Assigning a Name to a Name (line 835):
        # Getting the type of 'call_assignment_9590' (line 835)
        call_assignment_9590_12686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'call_assignment_9590')
        # Assigning a type to the variable 'get_set_stmts' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'get_set_stmts', call_assignment_9590_12686)
        
        # Assigning a Call to a Name (line 835):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9589' (line 835)
        call_assignment_9589_12687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'call_assignment_9589', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12688 = stypy_get_value_from_tuple(call_assignment_9589_12687, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9591' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'call_assignment_9591', stypy_get_value_from_tuple_call_result_12688)
        
        # Assigning a Name to a Name (line 835):
        # Getting the type of 'call_assignment_9591' (line 835)
        call_assignment_9591_12689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 8), 'call_assignment_9591')
        # Assigning a type to the variable 'set_var' (line 835)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 23), 'set_var', call_assignment_9591_12689)
        
        # Call to append(...): (line 836)
        # Processing the call arguments (line 836)
        # Getting the type of 'get_set_stmts' (line 836)
        get_set_stmts_12692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 25), 'get_set_stmts', False)
        # Processing the call keyword arguments (line 836)
        kwargs_12693 = {}
        # Getting the type of 'set_stmts' (line 836)
        set_stmts_12690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 8), 'set_stmts', False)
        # Obtaining the member 'append' of a type (line 836)
        append_12691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 8), set_stmts_12690, 'append')
        # Calling append(args, kwargs) (line 836)
        append_call_result_12694 = invoke(stypy.reporting.localization.Localization(__file__, 836, 8), append_12691, *[get_set_stmts_12692], **kwargs_12693)
        
        
        # Assigning a Call to a Name (line 838):
        
        # Assigning a Call to a Name (line 838):
        
        # Call to create_src_comment(...): (line 838)
        # Processing the call arguments (line 838)
        str_12697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 58), 'str', "Adding type elements to the builtin type 'dict' instance")
        # Getting the type of 'node' (line 839)
        node_12698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 839, 53), 'node', False)
        # Obtaining the member 'lineno' of a type (line 839)
        lineno_12699 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 839, 53), node_12698, 'lineno')
        # Processing the call keyword arguments (line 838)
        kwargs_12700 = {}
        # Getting the type of 'stypy_functions_copy' (line 838)
        stypy_functions_copy_12695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 838)
        create_src_comment_12696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 838, 18), stypy_functions_copy_12695, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 838)
        create_src_comment_call_result_12701 = invoke(stypy.reporting.localization.Localization(__file__, 838, 18), create_src_comment_12696, *[str_12697, lineno_12699], **kwargs_12700)
        
        # Assigning a type to the variable 'comment' (line 838)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 8), 'comment', create_src_comment_call_result_12701)
        
        # Call to append(...): (line 840)
        # Processing the call arguments (line 840)
        # Getting the type of 'comment' (line 840)
        comment_12704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 25), 'comment', False)
        # Processing the call keyword arguments (line 840)
        kwargs_12705 = {}
        # Getting the type of 'set_stmts' (line 840)
        set_stmts_12702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 8), 'set_stmts', False)
        # Obtaining the member 'append' of a type (line 840)
        append_12703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 840, 8), set_stmts_12702, 'append')
        # Calling append(args, kwargs) (line 840)
        append_call_result_12706 = invoke(stypy.reporting.localization.Localization(__file__, 840, 8), append_12703, *[comment_12704], **kwargs_12705)
        
        
        # Assigning a Call to a Name (line 843):
        
        # Assigning a Call to a Name (line 843):
        
        # Call to create_attribute(...): (line 843)
        # Processing the call arguments (line 843)
        # Getting the type of 'set_var' (line 843)
        set_var_12709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 60), 'set_var', False)
        # Obtaining the member 'id' of a type (line 843)
        id_12710 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 60), set_var_12709, 'id')
        str_12711 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 843, 72), 'str', 'add_key_and_value_type')
        # Processing the call keyword arguments (line 843)
        kwargs_12712 = {}
        # Getting the type of 'core_language_copy' (line 843)
        core_language_copy_12707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 24), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 843)
        create_attribute_12708 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 24), core_language_copy_12707, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 843)
        create_attribute_call_result_12713 = invoke(stypy.reporting.localization.Localization(__file__, 843, 24), create_attribute_12708, *[id_12710, str_12711], **kwargs_12712)
        
        # Assigning a type to the variable 'add_type_func' (line 843)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 843, 8), 'add_type_func', create_attribute_call_result_12713)
        
        
        # Call to zip(...): (line 845)
        # Processing the call arguments (line 845)
        # Getting the type of 'node' (line 845)
        node_12715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 30), 'node', False)
        # Obtaining the member 'keys' of a type (line 845)
        keys_12716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 30), node_12715, 'keys')
        # Getting the type of 'node' (line 845)
        node_12717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 41), 'node', False)
        # Obtaining the member 'values' of a type (line 845)
        values_12718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 845, 41), node_12717, 'values')
        # Processing the call keyword arguments (line 845)
        kwargs_12719 = {}
        # Getting the type of 'zip' (line 845)
        zip_12714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 845, 26), 'zip', False)
        # Calling zip(args, kwargs) (line 845)
        zip_call_result_12720 = invoke(stypy.reporting.localization.Localization(__file__, 845, 26), zip_12714, *[keys_12716, values_12718], **kwargs_12719)
        
        # Assigning a type to the variable 'zip_call_result_12720' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 8), 'zip_call_result_12720', zip_call_result_12720)
        # Testing if the for loop is going to be iterated (line 845)
        # Testing the type of a for loop iterable (line 845)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 845, 8), zip_call_result_12720)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 845, 8), zip_call_result_12720):
            # Getting the type of the for loop variable (line 845)
            for_loop_var_12721 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 845, 8), zip_call_result_12720)
            # Assigning a type to the variable 'key' (line 845)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 8), 'key', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 845, 8), for_loop_var_12721, 2, 0))
            # Assigning a type to the variable 'value' (line 845)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 8), 'value', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 845, 8), for_loop_var_12721, 2, 1))
            # SSA begins for a for statement (line 845)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 846):
            
            # Assigning a Call to a Name (line 846):
            
            # Call to create_src_comment(...): (line 846)
            # Processing the call arguments (line 846)
            str_12724 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 62), 'str', 'Adding element type (key, value)')
            # Getting the type of 'node' (line 846)
            node_12725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 98), 'node', False)
            # Obtaining the member 'lineno' of a type (line 846)
            lineno_12726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 98), node_12725, 'lineno')
            # Processing the call keyword arguments (line 846)
            kwargs_12727 = {}
            # Getting the type of 'stypy_functions_copy' (line 846)
            stypy_functions_copy_12722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 22), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 846)
            create_src_comment_12723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 846, 22), stypy_functions_copy_12722, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 846)
            create_src_comment_call_result_12728 = invoke(stypy.reporting.localization.Localization(__file__, 846, 22), create_src_comment_12723, *[str_12724, lineno_12726], **kwargs_12727)
            
            # Assigning a type to the variable 'comment' (line 846)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 12), 'comment', create_src_comment_call_result_12728)
            
            # Call to append(...): (line 847)
            # Processing the call arguments (line 847)
            # Getting the type of 'comment' (line 847)
            comment_12731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 29), 'comment', False)
            # Processing the call keyword arguments (line 847)
            kwargs_12732 = {}
            # Getting the type of 'set_stmts' (line 847)
            set_stmts_12729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 847, 12), 'set_stmts', False)
            # Obtaining the member 'append' of a type (line 847)
            append_12730 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 847, 12), set_stmts_12729, 'append')
            # Calling append(args, kwargs) (line 847)
            append_call_result_12733 = invoke(stypy.reporting.localization.Localization(__file__, 847, 12), append_12730, *[comment_12731], **kwargs_12732)
            
            
            # Assigning a Call to a Tuple (line 848):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 848)
            # Processing the call arguments (line 848)
            # Getting the type of 'key' (line 848)
            key_12736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 44), 'key', False)
            # Getting the type of 'context' (line 848)
            context_12737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 49), 'context', False)
            # Processing the call keyword arguments (line 848)
            kwargs_12738 = {}
            # Getting the type of 'self' (line 848)
            self_12734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 33), 'self', False)
            # Obtaining the member 'visit' of a type (line 848)
            visit_12735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 848, 33), self_12734, 'visit')
            # Calling visit(args, kwargs) (line 848)
            visit_call_result_12739 = invoke(stypy.reporting.localization.Localization(__file__, 848, 33), visit_12735, *[key_12736, context_12737], **kwargs_12738)
            
            # Assigning a type to the variable 'call_assignment_9592' (line 848)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'call_assignment_9592', visit_call_result_12739)
            
            # Assigning a Call to a Name (line 848):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9592' (line 848)
            call_assignment_9592_12740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'call_assignment_9592', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12741 = stypy_get_value_from_tuple(call_assignment_9592_12740, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9593' (line 848)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'call_assignment_9593', stypy_get_value_from_tuple_call_result_12741)
            
            # Assigning a Name to a Name (line 848):
            # Getting the type of 'call_assignment_9593' (line 848)
            call_assignment_9593_12742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'call_assignment_9593')
            # Assigning a type to the variable 'key_stmts' (line 848)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'key_stmts', call_assignment_9593_12742)
            
            # Assigning a Call to a Name (line 848):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9592' (line 848)
            call_assignment_9592_12743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'call_assignment_9592', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12744 = stypy_get_value_from_tuple(call_assignment_9592_12743, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9594' (line 848)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'call_assignment_9594', stypy_get_value_from_tuple_call_result_12744)
            
            # Assigning a Name to a Name (line 848):
            # Getting the type of 'call_assignment_9594' (line 848)
            call_assignment_9594_12745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 848, 12), 'call_assignment_9594')
            # Assigning a type to the variable 'key_var' (line 848)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 848, 23), 'key_var', call_assignment_9594_12745)
            
            # Assigning a Call to a Tuple (line 849):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 849)
            # Processing the call arguments (line 849)
            # Getting the type of 'value' (line 849)
            value_12748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 48), 'value', False)
            # Getting the type of 'context' (line 849)
            context_12749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 55), 'context', False)
            # Processing the call keyword arguments (line 849)
            kwargs_12750 = {}
            # Getting the type of 'self' (line 849)
            self_12746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 37), 'self', False)
            # Obtaining the member 'visit' of a type (line 849)
            visit_12747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 849, 37), self_12746, 'visit')
            # Calling visit(args, kwargs) (line 849)
            visit_call_result_12751 = invoke(stypy.reporting.localization.Localization(__file__, 849, 37), visit_12747, *[value_12748, context_12749], **kwargs_12750)
            
            # Assigning a type to the variable 'call_assignment_9595' (line 849)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'call_assignment_9595', visit_call_result_12751)
            
            # Assigning a Call to a Name (line 849):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9595' (line 849)
            call_assignment_9595_12752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'call_assignment_9595', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12753 = stypy_get_value_from_tuple(call_assignment_9595_12752, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9596' (line 849)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'call_assignment_9596', stypy_get_value_from_tuple_call_result_12753)
            
            # Assigning a Name to a Name (line 849):
            # Getting the type of 'call_assignment_9596' (line 849)
            call_assignment_9596_12754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'call_assignment_9596')
            # Assigning a type to the variable 'value_stmts' (line 849)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'value_stmts', call_assignment_9596_12754)
            
            # Assigning a Call to a Name (line 849):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9595' (line 849)
            call_assignment_9595_12755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'call_assignment_9595', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12756 = stypy_get_value_from_tuple(call_assignment_9595_12755, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9597' (line 849)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'call_assignment_9597', stypy_get_value_from_tuple_call_result_12756)
            
            # Assigning a Name to a Name (line 849):
            # Getting the type of 'call_assignment_9597' (line 849)
            call_assignment_9597_12757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 849, 12), 'call_assignment_9597')
            # Assigning a type to the variable 'value_var' (line 849)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 849, 25), 'value_var', call_assignment_9597_12757)
            
            # Assigning a Call to a Name (line 851):
            
            # Assigning a Call to a Name (line 851):
            
            # Call to Tuple(...): (line 851)
            # Processing the call keyword arguments (line 851)
            kwargs_12760 = {}
            # Getting the type of 'ast' (line 851)
            ast_12758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 25), 'ast', False)
            # Obtaining the member 'Tuple' of a type (line 851)
            Tuple_12759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 851, 25), ast_12758, 'Tuple')
            # Calling Tuple(args, kwargs) (line 851)
            Tuple_call_result_12761 = invoke(stypy.reporting.localization.Localization(__file__, 851, 25), Tuple_12759, *[], **kwargs_12760)
            
            # Assigning a type to the variable 'tuple_node' (line 851)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 12), 'tuple_node', Tuple_call_result_12761)
            
            # Assigning a List to a Attribute (line 852):
            
            # Assigning a List to a Attribute (line 852):
            
            # Obtaining an instance of the builtin type 'list' (line 852)
            list_12762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 30), 'list')
            # Adding type elements to the builtin type 'list' instance (line 852)
            # Adding element type (line 852)
            # Getting the type of 'key_var' (line 852)
            key_var_12763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 31), 'key_var')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 852, 30), list_12762, key_var_12763)
            # Adding element type (line 852)
            # Getting the type of 'value_var' (line 852)
            value_var_12764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 40), 'value_var')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 852, 30), list_12762, value_var_12764)
            
            # Getting the type of 'tuple_node' (line 852)
            tuple_node_12765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 852, 12), 'tuple_node')
            # Setting the type of the member 'elts' of a type (line 852)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 852, 12), tuple_node_12765, 'elts', list_12762)
            
            # Call to append(...): (line 856)
            # Processing the call arguments (line 856)
            # Getting the type of 'key_stmts' (line 856)
            key_stmts_12768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 29), 'key_stmts', False)
            # Processing the call keyword arguments (line 856)
            kwargs_12769 = {}
            # Getting the type of 'set_stmts' (line 856)
            set_stmts_12766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 12), 'set_stmts', False)
            # Obtaining the member 'append' of a type (line 856)
            append_12767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 12), set_stmts_12766, 'append')
            # Calling append(args, kwargs) (line 856)
            append_call_result_12770 = invoke(stypy.reporting.localization.Localization(__file__, 856, 12), append_12767, *[key_stmts_12768], **kwargs_12769)
            
            
            # Call to append(...): (line 857)
            # Processing the call arguments (line 857)
            # Getting the type of 'value_stmts' (line 857)
            value_stmts_12773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 29), 'value_stmts', False)
            # Processing the call keyword arguments (line 857)
            kwargs_12774 = {}
            # Getting the type of 'set_stmts' (line 857)
            set_stmts_12771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 12), 'set_stmts', False)
            # Obtaining the member 'append' of a type (line 857)
            append_12772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 12), set_stmts_12771, 'append')
            # Calling append(args, kwargs) (line 857)
            append_call_result_12775 = invoke(stypy.reporting.localization.Localization(__file__, 857, 12), append_12772, *[value_stmts_12773], **kwargs_12774)
            
            
            # Assigning a Call to a Name (line 859):
            
            # Assigning a Call to a Name (line 859):
            
            # Call to create_call_expression(...): (line 859)
            # Processing the call arguments (line 859)
            # Getting the type of 'add_type_func' (line 859)
            add_type_func_12778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 73), 'add_type_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 859)
            list_12779 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 859, 88), 'list')
            # Adding type elements to the builtin type 'list' instance (line 859)
            # Adding element type (line 859)
            # Getting the type of 'localization' (line 859)
            localization_12780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 89), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 88), list_12779, localization_12780)
            # Adding element type (line 859)
            # Getting the type of 'tuple_node' (line 859)
            tuple_node_12781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 103), 'tuple_node', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 859, 88), list_12779, tuple_node_12781)
            
            # Processing the call keyword arguments (line 859)
            kwargs_12782 = {}
            # Getting the type of 'functions_copy' (line 859)
            functions_copy_12776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 35), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 859)
            create_call_expression_12777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 35), functions_copy_12776, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 859)
            create_call_expression_call_result_12783 = invoke(stypy.reporting.localization.Localization(__file__, 859, 35), create_call_expression_12777, *[add_type_func_12778, list_12779], **kwargs_12782)
            
            # Assigning a type to the variable 'add_type_to_set_call' (line 859)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 12), 'add_type_to_set_call', create_call_expression_call_result_12783)
            
            # Call to append(...): (line 860)
            # Processing the call arguments (line 860)
            # Getting the type of 'add_type_to_set_call' (line 860)
            add_type_to_set_call_12786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 29), 'add_type_to_set_call', False)
            # Processing the call keyword arguments (line 860)
            kwargs_12787 = {}
            # Getting the type of 'set_stmts' (line 860)
            set_stmts_12784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 860, 12), 'set_stmts', False)
            # Obtaining the member 'append' of a type (line 860)
            append_12785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 860, 12), set_stmts_12784, 'append')
            # Calling append(args, kwargs) (line 860)
            append_call_result_12788 = invoke(stypy.reporting.localization.Localization(__file__, 860, 12), append_12785, *[add_type_to_set_call_12786], **kwargs_12787)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Obtaining an instance of the builtin type 'tuple' (line 862)
        tuple_12789 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 862)
        # Adding element type (line 862)
        
        # Call to flatten_lists(...): (line 862)
        # Processing the call arguments (line 862)
        
        # Call to create_blank_line(...): (line 862)
        # Processing the call keyword arguments (line 862)
        kwargs_12794 = {}
        # Getting the type of 'stypy_functions_copy' (line 862)
        stypy_functions_copy_12792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 862)
        create_blank_line_12793 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 50), stypy_functions_copy_12792, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 862)
        create_blank_line_call_result_12795 = invoke(stypy.reporting.localization.Localization(__file__, 862, 50), create_blank_line_12793, *[], **kwargs_12794)
        
        # Getting the type of 'set_stmts' (line 863)
        set_stmts_12796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 45), 'set_stmts', False)
        
        # Call to create_blank_line(...): (line 864)
        # Processing the call keyword arguments (line 864)
        kwargs_12799 = {}
        # Getting the type of 'stypy_functions_copy' (line 864)
        stypy_functions_copy_12797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 864)
        create_blank_line_12798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 864, 45), stypy_functions_copy_12797, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 864)
        create_blank_line_call_result_12800 = invoke(stypy.reporting.localization.Localization(__file__, 864, 45), create_blank_line_12798, *[], **kwargs_12799)
        
        # Processing the call keyword arguments (line 862)
        kwargs_12801 = {}
        # Getting the type of 'stypy_functions_copy' (line 862)
        stypy_functions_copy_12790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 862)
        flatten_lists_12791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 862, 15), stypy_functions_copy_12790, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 862)
        flatten_lists_call_result_12802 = invoke(stypy.reporting.localization.Localization(__file__, 862, 15), flatten_lists_12791, *[create_blank_line_call_result_12795, set_stmts_12796, create_blank_line_call_result_12800], **kwargs_12801)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 15), tuple_12789, flatten_lists_call_result_12802)
        # Adding element type (line 862)
        # Getting the type of 'set_var' (line 864)
        set_var_12803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 864, 88), 'set_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 862, 15), tuple_12789, set_var_12803)
        
        # Assigning a type to the variable 'stypy_return_type' (line 862)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 862, 8), 'stypy_return_type', tuple_12789)
        
        # ################# End of 'visit_Dict(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Dict' in the type store
        # Getting the type of 'stypy_return_type' (line 823)
        stypy_return_type_12804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_12804)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Dict'
        return stypy_return_type_12804


    @norecursion
    def visit_DictComp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_DictComp'
        module_type_store = module_type_store.open_function_context('visit_DictComp', 866, 4, False)
        # Assigning a type to the variable 'self' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_DictComp')
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_DictComp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_DictComp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_DictComp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_DictComp(...)' code ##################

        
        # Assigning a Call to a Name (line 867):
        
        # Assigning a Call to a Name (line 867):
        
        # Call to create_src_comment(...): (line 867)
        # Processing the call arguments (line 867)
        str_12807 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 62), 'str', 'Calculating dict comprehension')
        # Processing the call keyword arguments (line 867)
        kwargs_12808 = {}
        # Getting the type of 'stypy_functions_copy' (line 867)
        stypy_functions_copy_12805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 867)
        create_src_comment_12806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 22), stypy_functions_copy_12805, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 867)
        create_src_comment_call_result_12809 = invoke(stypy.reporting.localization.Localization(__file__, 867, 22), create_src_comment_12806, *[str_12807], **kwargs_12808)
        
        # Assigning a type to the variable 'src_comment' (line 867)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 8), 'src_comment', create_src_comment_call_result_12809)
        
        # Assigning a Call to a Name (line 868):
        
        # Assigning a Call to a Name (line 868):
        
        # Call to create_localization(...): (line 868)
        # Processing the call arguments (line 868)
        # Getting the type of 'node' (line 868)
        node_12812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 868)
        lineno_12813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 64), node_12812, 'lineno')
        # Getting the type of 'node' (line 868)
        node_12814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 868)
        col_offset_12815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 77), node_12814, 'col_offset')
        # Processing the call keyword arguments (line 868)
        kwargs_12816 = {}
        # Getting the type of 'stypy_functions_copy' (line 868)
        stypy_functions_copy_12810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 868)
        create_localization_12811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 23), stypy_functions_copy_12810, 'create_localization')
        # Calling create_localization(args, kwargs) (line 868)
        create_localization_call_result_12817 = invoke(stypy.reporting.localization.Localization(__file__, 868, 23), create_localization_12811, *[lineno_12813, col_offset_12815], **kwargs_12816)
        
        # Assigning a type to the variable 'localization' (line 868)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 8), 'localization', create_localization_call_result_12817)
        
        # Assigning a Call to a Name (line 870):
        
        # Assigning a Call to a Name (line 870):
        
        # Call to create_context_set(...): (line 870)
        # Processing the call arguments (line 870)
        str_12820 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 870, 56), 'str', 'dict comprehension expression')
        # Getting the type of 'node' (line 870)
        node_12821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 89), 'node', False)
        # Obtaining the member 'lineno' of a type (line 870)
        lineno_12822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 89), node_12821, 'lineno')
        # Getting the type of 'node' (line 871)
        node_12823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 51), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 871)
        col_offset_12824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 51), node_12823, 'col_offset')
        # Processing the call keyword arguments (line 870)
        kwargs_12825 = {}
        # Getting the type of 'functions_copy' (line 870)
        functions_copy_12818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 870, 22), 'functions_copy', False)
        # Obtaining the member 'create_context_set' of a type (line 870)
        create_context_set_12819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 870, 22), functions_copy_12818, 'create_context_set')
        # Calling create_context_set(args, kwargs) (line 870)
        create_context_set_call_result_12826 = invoke(stypy.reporting.localization.Localization(__file__, 870, 22), create_context_set_12819, *[str_12820, lineno_12822, col_offset_12824], **kwargs_12825)
        
        # Assigning a type to the variable 'context_set' (line 870)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 870, 8), 'context_set', create_context_set_call_result_12826)
        
        # Assigning a Call to a Tuple (line 873):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 873)
        # Processing the call arguments (line 873)
        # Getting the type of 'node' (line 873)
        node_12829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 40), 'node', False)
        # Obtaining the member 'key' of a type (line 873)
        key_12830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 40), node_12829, 'key')
        # Getting the type of 'context' (line 873)
        context_12831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 50), 'context', False)
        # Processing the call keyword arguments (line 873)
        kwargs_12832 = {}
        # Getting the type of 'self' (line 873)
        self_12827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 29), 'self', False)
        # Obtaining the member 'visit' of a type (line 873)
        visit_12828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 873, 29), self_12827, 'visit')
        # Calling visit(args, kwargs) (line 873)
        visit_call_result_12833 = invoke(stypy.reporting.localization.Localization(__file__, 873, 29), visit_12828, *[key_12830, context_12831], **kwargs_12832)
        
        # Assigning a type to the variable 'call_assignment_9598' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'call_assignment_9598', visit_call_result_12833)
        
        # Assigning a Call to a Name (line 873):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9598' (line 873)
        call_assignment_9598_12834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'call_assignment_9598', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12835 = stypy_get_value_from_tuple(call_assignment_9598_12834, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9599' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'call_assignment_9599', stypy_get_value_from_tuple_call_result_12835)
        
        # Assigning a Name to a Name (line 873):
        # Getting the type of 'call_assignment_9599' (line 873)
        call_assignment_9599_12836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'call_assignment_9599')
        # Assigning a type to the variable 'key_stmts' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'key_stmts', call_assignment_9599_12836)
        
        # Assigning a Call to a Name (line 873):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9598' (line 873)
        call_assignment_9598_12837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'call_assignment_9598', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12838 = stypy_get_value_from_tuple(call_assignment_9598_12837, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9600' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'call_assignment_9600', stypy_get_value_from_tuple_call_result_12838)
        
        # Assigning a Name to a Name (line 873):
        # Getting the type of 'call_assignment_9600' (line 873)
        call_assignment_9600_12839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 8), 'call_assignment_9600')
        # Assigning a type to the variable 'key_var' (line 873)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 873, 19), 'key_var', call_assignment_9600_12839)
        
        # Assigning a Call to a Tuple (line 874):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 874)
        # Processing the call arguments (line 874)
        # Getting the type of 'node' (line 874)
        node_12842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 44), 'node', False)
        # Obtaining the member 'value' of a type (line 874)
        value_12843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 44), node_12842, 'value')
        # Getting the type of 'context' (line 874)
        context_12844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 56), 'context', False)
        # Processing the call keyword arguments (line 874)
        kwargs_12845 = {}
        # Getting the type of 'self' (line 874)
        self_12840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 33), 'self', False)
        # Obtaining the member 'visit' of a type (line 874)
        visit_12841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 874, 33), self_12840, 'visit')
        # Calling visit(args, kwargs) (line 874)
        visit_call_result_12846 = invoke(stypy.reporting.localization.Localization(__file__, 874, 33), visit_12841, *[value_12843, context_12844], **kwargs_12845)
        
        # Assigning a type to the variable 'call_assignment_9601' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'call_assignment_9601', visit_call_result_12846)
        
        # Assigning a Call to a Name (line 874):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9601' (line 874)
        call_assignment_9601_12847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'call_assignment_9601', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12848 = stypy_get_value_from_tuple(call_assignment_9601_12847, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9602' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'call_assignment_9602', stypy_get_value_from_tuple_call_result_12848)
        
        # Assigning a Name to a Name (line 874):
        # Getting the type of 'call_assignment_9602' (line 874)
        call_assignment_9602_12849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'call_assignment_9602')
        # Assigning a type to the variable 'value_stmts' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'value_stmts', call_assignment_9602_12849)
        
        # Assigning a Call to a Name (line 874):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9601' (line 874)
        call_assignment_9601_12850 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'call_assignment_9601', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12851 = stypy_get_value_from_tuple(call_assignment_9601_12850, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9603' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'call_assignment_9603', stypy_get_value_from_tuple_call_result_12851)
        
        # Assigning a Name to a Name (line 874):
        # Getting the type of 'call_assignment_9603' (line 874)
        call_assignment_9603_12852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 874, 8), 'call_assignment_9603')
        # Assigning a type to the variable 'value_var' (line 874)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 874, 21), 'value_var', call_assignment_9603_12852)
        
        # Assigning a List to a Name (line 876):
        
        # Assigning a List to a Name (line 876):
        
        # Obtaining an instance of the builtin type 'list' (line 876)
        list_12853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 876, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 876)
        
        # Assigning a type to the variable 'generator_stmts' (line 876)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 876, 8), 'generator_stmts', list_12853)
        
        # Assigning a List to a Name (line 877):
        
        # Assigning a List to a Name (line 877):
        
        # Obtaining an instance of the builtin type 'list' (line 877)
        list_12854 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 877, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 877)
        
        # Assigning a type to the variable 'generator_vars' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'generator_vars', list_12854)
        
        # Getting the type of 'node' (line 878)
        node_12855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 878, 19), 'node')
        # Obtaining the member 'generators' of a type (line 878)
        generators_12856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 878, 19), node_12855, 'generators')
        # Assigning a type to the variable 'generators_12856' (line 878)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'generators_12856', generators_12856)
        # Testing if the for loop is going to be iterated (line 878)
        # Testing the type of a for loop iterable (line 878)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 878, 8), generators_12856)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 878, 8), generators_12856):
            # Getting the type of the for loop variable (line 878)
            for_loop_var_12857 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 878, 8), generators_12856)
            # Assigning a type to the variable 'gen' (line 878)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 878, 8), 'gen', for_loop_var_12857)
            # SSA begins for a for statement (line 878)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to assign_line_and_column(...): (line 879)
            # Processing the call arguments (line 879)
            # Getting the type of 'gen' (line 879)
            gen_12860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 56), 'gen', False)
            # Getting the type of 'node' (line 879)
            node_12861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 61), 'node', False)
            # Processing the call keyword arguments (line 879)
            kwargs_12862 = {}
            # Getting the type of 'stypy_functions_copy' (line 879)
            stypy_functions_copy_12858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 879, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 879)
            assign_line_and_column_12859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 879, 12), stypy_functions_copy_12858, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 879)
            assign_line_and_column_call_result_12863 = invoke(stypy.reporting.localization.Localization(__file__, 879, 12), assign_line_and_column_12859, *[gen_12860, node_12861], **kwargs_12862)
            
            
            # Assigning a Call to a Tuple (line 880):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 880)
            # Processing the call arguments (line 880)
            # Getting the type of 'gen' (line 880)
            gen_12866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 46), 'gen', False)
            # Getting the type of 'context' (line 880)
            context_12867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 51), 'context', False)
            # Processing the call keyword arguments (line 880)
            kwargs_12868 = {}
            # Getting the type of 'self' (line 880)
            self_12864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 35), 'self', False)
            # Obtaining the member 'visit' of a type (line 880)
            visit_12865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 880, 35), self_12864, 'visit')
            # Calling visit(args, kwargs) (line 880)
            visit_call_result_12869 = invoke(stypy.reporting.localization.Localization(__file__, 880, 35), visit_12865, *[gen_12866, context_12867], **kwargs_12868)
            
            # Assigning a type to the variable 'call_assignment_9604' (line 880)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'call_assignment_9604', visit_call_result_12869)
            
            # Assigning a Call to a Name (line 880):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9604' (line 880)
            call_assignment_9604_12870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'call_assignment_9604', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12871 = stypy_get_value_from_tuple(call_assignment_9604_12870, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9605' (line 880)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'call_assignment_9605', stypy_get_value_from_tuple_call_result_12871)
            
            # Assigning a Name to a Name (line 880):
            # Getting the type of 'call_assignment_9605' (line 880)
            call_assignment_9605_12872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'call_assignment_9605')
            # Assigning a type to the variable 'temp_stmts' (line 880)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'temp_stmts', call_assignment_9605_12872)
            
            # Assigning a Call to a Name (line 880):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9604' (line 880)
            call_assignment_9604_12873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'call_assignment_9604', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_12874 = stypy_get_value_from_tuple(call_assignment_9604_12873, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9606' (line 880)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'call_assignment_9606', stypy_get_value_from_tuple_call_result_12874)
            
            # Assigning a Name to a Name (line 880):
            # Getting the type of 'call_assignment_9606' (line 880)
            call_assignment_9606_12875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 12), 'call_assignment_9606')
            # Assigning a type to the variable 'temp_var' (line 880)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 880, 24), 'temp_var', call_assignment_9606_12875)
            
            # Call to append(...): (line 881)
            # Processing the call arguments (line 881)
            # Getting the type of 'temp_stmts' (line 881)
            temp_stmts_12878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 35), 'temp_stmts', False)
            # Processing the call keyword arguments (line 881)
            kwargs_12879 = {}
            # Getting the type of 'generator_stmts' (line 881)
            generator_stmts_12876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 12), 'generator_stmts', False)
            # Obtaining the member 'append' of a type (line 881)
            append_12877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 881, 12), generator_stmts_12876, 'append')
            # Calling append(args, kwargs) (line 881)
            append_call_result_12880 = invoke(stypy.reporting.localization.Localization(__file__, 881, 12), append_12877, *[temp_stmts_12878], **kwargs_12879)
            
            
            # Call to append(...): (line 882)
            # Processing the call arguments (line 882)
            # Getting the type of 'generator_vars' (line 882)
            generator_vars_12883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 34), 'generator_vars', False)
            # Processing the call keyword arguments (line 882)
            kwargs_12884 = {}
            # Getting the type of 'generator_vars' (line 882)
            generator_vars_12881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 12), 'generator_vars', False)
            # Obtaining the member 'append' of a type (line 882)
            append_12882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 12), generator_vars_12881, 'append')
            # Calling append(args, kwargs) (line 882)
            append_call_result_12885 = invoke(stypy.reporting.localization.Localization(__file__, 882, 12), append_12882, *[generator_vars_12883], **kwargs_12884)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 884):
        
        # Assigning a Call to a Name (line 884):
        
        # Call to create_Name(...): (line 884)
        # Processing the call arguments (line 884)
        str_12888 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 884, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 884)
        # Getting the type of 'node' (line 884)
        node_12889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 80), 'node', False)
        # Obtaining the member 'lineno' of a type (line 884)
        lineno_12890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 80), node_12889, 'lineno')
        keyword_12891 = lineno_12890
        # Getting the type of 'node' (line 884)
        node_12892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 884)
        col_offset_12893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 100), node_12892, 'col_offset')
        keyword_12894 = col_offset_12893
        kwargs_12895 = {'column': keyword_12894, 'line': keyword_12891}
        # Getting the type of 'core_language_copy' (line 884)
        core_language_copy_12886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 884)
        create_Name_12887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 24), core_language_copy_12886, 'create_Name')
        # Calling create_Name(args, kwargs) (line 884)
        create_Name_call_result_12896 = invoke(stypy.reporting.localization.Localization(__file__, 884, 24), create_Name_12887, *[str_12888], **kwargs_12895)
        
        # Assigning a type to the variable 'get_type_call' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 8), 'get_type_call', create_Name_call_result_12896)
        
        # Assigning a Call to a Name (line 885):
        
        # Assigning a Call to a Name (line 885):
        
        # Call to create_str(...): (line 885)
        # Processing the call arguments (line 885)
        str_12899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 885, 60), 'str', 'dict')
        # Processing the call keyword arguments (line 885)
        kwargs_12900 = {}
        # Getting the type of 'core_language_copy' (line 885)
        core_language_copy_12897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 885, 30), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 885)
        create_str_12898 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 885, 30), core_language_copy_12897, 'create_str')
        # Calling create_str(args, kwargs) (line 885)
        create_str_call_result_12901 = invoke(stypy.reporting.localization.Localization(__file__, 885, 30), create_str_12898, *[str_12899], **kwargs_12900)
        
        # Assigning a type to the variable 'get_type_call_param' (line 885)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 885, 8), 'get_type_call_param', create_str_call_result_12901)
        
        # Assigning a Call to a Name (line 886):
        
        # Assigning a Call to a Name (line 886):
        
        # Call to create_call(...): (line 886)
        # Processing the call arguments (line 886)
        # Getting the type of 'get_type_call' (line 886)
        get_type_call_12904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 42), 'get_type_call', False)
        
        # Obtaining an instance of the builtin type 'list' (line 886)
        list_12905 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 886, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 886)
        # Adding element type (line 886)
        # Getting the type of 'localization' (line 886)
        localization_12906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 58), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 57), list_12905, localization_12906)
        # Adding element type (line 886)
        # Getting the type of 'get_type_call_param' (line 886)
        get_type_call_param_12907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 72), 'get_type_call_param', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 886, 57), list_12905, get_type_call_param_12907)
        
        # Processing the call keyword arguments (line 886)
        kwargs_12908 = {}
        # Getting the type of 'functions_copy' (line 886)
        functions_copy_12902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 15), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 886)
        create_call_12903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 886, 15), functions_copy_12902, 'create_call')
        # Calling create_call(args, kwargs) (line 886)
        create_call_call_result_12909 = invoke(stypy.reporting.localization.Localization(__file__, 886, 15), create_call_12903, *[get_type_call_12904, list_12905], **kwargs_12908)
        
        # Assigning a type to the variable 'call' (line 886)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 886, 8), 'call', create_call_call_result_12909)
        
        # Assigning a Call to a Tuple (line 887):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 887)
        # Processing the call arguments (line 887)
        # Getting the type of 'call' (line 887)
        call_12912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 77), 'call', False)
        # Processing the call keyword arguments (line 887)
        # Getting the type of 'node' (line 887)
        node_12913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 88), 'node', False)
        # Obtaining the member 'lineno' of a type (line 887)
        lineno_12914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 88), node_12913, 'lineno')
        keyword_12915 = lineno_12914
        # Getting the type of 'node' (line 888)
        node_12916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 79), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 888)
        col_offset_12917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 79), node_12916, 'col_offset')
        keyword_12918 = col_offset_12917
        kwargs_12919 = {'column': keyword_12918, 'line': keyword_12915}
        # Getting the type of 'stypy_functions_copy' (line 887)
        stypy_functions_copy_12910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 37), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 887)
        create_temp_Assign_12911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 37), stypy_functions_copy_12910, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 887)
        create_temp_Assign_call_result_12920 = invoke(stypy.reporting.localization.Localization(__file__, 887, 37), create_temp_Assign_12911, *[call_12912], **kwargs_12919)
        
        # Assigning a type to the variable 'call_assignment_9607' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'call_assignment_9607', create_temp_Assign_call_result_12920)
        
        # Assigning a Call to a Name (line 887):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9607' (line 887)
        call_assignment_9607_12921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'call_assignment_9607', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12922 = stypy_get_value_from_tuple(call_assignment_9607_12921, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9608' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'call_assignment_9608', stypy_get_value_from_tuple_call_result_12922)
        
        # Assigning a Name to a Name (line 887):
        # Getting the type of 'call_assignment_9608' (line 887)
        call_assignment_9608_12923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'call_assignment_9608')
        # Assigning a type to the variable 'ret_set_stmts' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'ret_set_stmts', call_assignment_9608_12923)
        
        # Assigning a Call to a Name (line 887):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9607' (line 887)
        call_assignment_9607_12924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'call_assignment_9607', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_12925 = stypy_get_value_from_tuple(call_assignment_9607_12924, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9609' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'call_assignment_9609', stypy_get_value_from_tuple_call_result_12925)
        
        # Assigning a Name to a Name (line 887):
        # Getting the type of 'call_assignment_9609' (line 887)
        call_assignment_9609_12926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'call_assignment_9609')
        # Assigning a type to the variable 'ret_set_var' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 23), 'ret_set_var', call_assignment_9609_12926)
        
        # Assigning a Call to a Name (line 890):
        
        # Assigning a Call to a Name (line 890):
        
        # Call to create_attribute(...): (line 890)
        # Processing the call arguments (line 890)
        # Getting the type of 'ret_set_var' (line 890)
        ret_set_var_12929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 65), 'ret_set_var', False)
        str_12930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 890, 78), 'str', 'add_key_and_value_type')
        # Processing the call keyword arguments (line 890)
        kwargs_12931 = {}
        # Getting the type of 'core_language_copy' (line 890)
        core_language_copy_12927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 29), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 890)
        create_attribute_12928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 29), core_language_copy_12927, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 890)
        create_attribute_call_result_12932 = invoke(stypy.reporting.localization.Localization(__file__, 890, 29), create_attribute_12928, *[ret_set_var_12929, str_12930], **kwargs_12931)
        
        # Assigning a type to the variable 'invoke_set_element' (line 890)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 890, 8), 'invoke_set_element', create_attribute_call_result_12932)
        
        # Assigning a Call to a Name (line 892):
        
        # Assigning a Call to a Name (line 892):
        
        # Call to create_context_unset(...): (line 892)
        # Processing the call keyword arguments (line 892)
        kwargs_12935 = {}
        # Getting the type of 'functions_copy' (line 892)
        functions_copy_12933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 892, 24), 'functions_copy', False)
        # Obtaining the member 'create_context_unset' of a type (line 892)
        create_context_unset_12934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 892, 24), functions_copy_12933, 'create_context_unset')
        # Calling create_context_unset(args, kwargs) (line 892)
        create_context_unset_call_result_12936 = invoke(stypy.reporting.localization.Localization(__file__, 892, 24), create_context_unset_12934, *[], **kwargs_12935)
        
        # Assigning a type to the variable 'context_unset' (line 892)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 892, 8), 'context_unset', create_context_unset_call_result_12936)
        
        # Assigning a Call to a Name (line 893):
        
        # Assigning a Call to a Name (line 893):
        
        # Call to Tuple(...): (line 893)
        # Processing the call keyword arguments (line 893)
        kwargs_12939 = {}
        # Getting the type of 'ast' (line 893)
        ast_12937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 21), 'ast', False)
        # Obtaining the member 'Tuple' of a type (line 893)
        Tuple_12938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 21), ast_12937, 'Tuple')
        # Calling Tuple(args, kwargs) (line 893)
        Tuple_call_result_12940 = invoke(stypy.reporting.localization.Localization(__file__, 893, 21), Tuple_12938, *[], **kwargs_12939)
        
        # Assigning a type to the variable 'tuple_node' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'tuple_node', Tuple_call_result_12940)
        
        # Assigning a List to a Attribute (line 894):
        
        # Assigning a List to a Attribute (line 894):
        
        # Obtaining an instance of the builtin type 'list' (line 894)
        list_12941 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 894, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 894)
        # Adding element type (line 894)
        # Getting the type of 'key_var' (line 894)
        key_var_12942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 27), 'key_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 26), list_12941, key_var_12942)
        # Adding element type (line 894)
        # Getting the type of 'value_var' (line 894)
        value_var_12943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 36), 'value_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 894, 26), list_12941, value_var_12943)
        
        # Getting the type of 'tuple_node' (line 894)
        tuple_node_12944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 894, 8), 'tuple_node')
        # Setting the type of the member 'elts' of a type (line 894)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 894, 8), tuple_node_12944, 'elts', list_12941)
        
        # Assigning a Call to a Name (line 895):
        
        # Assigning a Call to a Name (line 895):
        
        # Call to create_Name(...): (line 895)
        # Processing the call arguments (line 895)
        str_12947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 48), 'str', 'False')
        # Processing the call keyword arguments (line 895)
        kwargs_12948 = {}
        # Getting the type of 'core_language_copy' (line 895)
        core_language_copy_12945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 17), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 895)
        create_Name_12946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 17), core_language_copy_12945, 'create_Name')
        # Calling create_Name(args, kwargs) (line 895)
        create_Name_call_result_12949 = invoke(stypy.reporting.localization.Localization(__file__, 895, 17), create_Name_12946, *[str_12947], **kwargs_12948)
        
        # Assigning a type to the variable 'false_' (line 895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'false_', create_Name_call_result_12949)
        
        # Assigning a Call to a Name (line 896):
        
        # Assigning a Call to a Name (line 896):
        
        # Call to create_call_expression(...): (line 896)
        # Processing the call arguments (line 896)
        # Getting the type of 'invoke_set_element' (line 896)
        invoke_set_element_12952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 68), 'invoke_set_element', False)
        
        # Obtaining an instance of the builtin type 'list' (line 896)
        list_12953 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 88), 'list')
        # Adding type elements to the builtin type 'list' instance (line 896)
        # Adding element type (line 896)
        # Getting the type of 'localization' (line 896)
        localization_12954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 89), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 88), list_12953, localization_12954)
        # Adding element type (line 896)
        # Getting the type of 'tuple_node' (line 896)
        tuple_node_12955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 103), 'tuple_node', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 88), list_12953, tuple_node_12955)
        # Adding element type (line 896)
        # Getting the type of 'false_' (line 896)
        false__12956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 115), 'false_', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 896, 88), list_12953, false__12956)
        
        # Processing the call keyword arguments (line 896)
        kwargs_12957 = {}
        # Getting the type of 'functions_copy' (line 896)
        functions_copy_12950 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 30), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 896)
        create_call_expression_12951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 30), functions_copy_12950, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 896)
        create_call_expression_call_result_12958 = invoke(stypy.reporting.localization.Localization(__file__, 896, 30), create_call_expression_12951, *[invoke_set_element_12952, list_12953], **kwargs_12957)
        
        # Assigning a type to the variable 'call_to_set_element' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'call_to_set_element', create_call_expression_call_result_12958)
        
        # Obtaining an instance of the builtin type 'tuple' (line 898)
        tuple_12959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 898)
        # Adding element type (line 898)
        
        # Call to flatten_lists(...): (line 898)
        # Processing the call arguments (line 898)
        # Getting the type of 'src_comment' (line 898)
        src_comment_12962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 50), 'src_comment', False)
        # Getting the type of 'context_set' (line 898)
        context_set_12963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 63), 'context_set', False)
        # Getting the type of 'generator_stmts' (line 898)
        generator_stmts_12964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 76), 'generator_stmts', False)
        # Getting the type of 'key_stmts' (line 898)
        key_stmts_12965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 93), 'key_stmts', False)
        # Getting the type of 'value_stmts' (line 898)
        value_stmts_12966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 104), 'value_stmts', False)
        # Getting the type of 'ret_set_stmts' (line 899)
        ret_set_stmts_12967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 45), 'ret_set_stmts', False)
        # Getting the type of 'context_unset' (line 900)
        context_unset_12968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 45), 'context_unset', False)
        # Getting the type of 'call_to_set_element' (line 900)
        call_to_set_element_12969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 60), 'call_to_set_element', False)
        # Processing the call keyword arguments (line 898)
        kwargs_12970 = {}
        # Getting the type of 'stypy_functions_copy' (line 898)
        stypy_functions_copy_12960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 898)
        flatten_lists_12961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 898, 15), stypy_functions_copy_12960, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 898)
        flatten_lists_call_result_12971 = invoke(stypy.reporting.localization.Localization(__file__, 898, 15), flatten_lists_12961, *[src_comment_12962, context_set_12963, generator_stmts_12964, key_stmts_12965, value_stmts_12966, ret_set_stmts_12967, context_unset_12968, call_to_set_element_12969], **kwargs_12970)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 15), tuple_12959, flatten_lists_call_result_12971)
        # Adding element type (line 898)
        # Getting the type of 'ret_set_var' (line 900)
        ret_set_var_12972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 82), 'ret_set_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 898, 15), tuple_12959, ret_set_var_12972)
        
        # Assigning a type to the variable 'stypy_return_type' (line 898)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 898, 8), 'stypy_return_type', tuple_12959)
        
        # ################# End of 'visit_DictComp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_DictComp' in the type store
        # Getting the type of 'stypy_return_type' (line 866)
        stypy_return_type_12973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_12973)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_DictComp'
        return stypy_return_type_12973


    @norecursion
    def visit_GeneratorExp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_GeneratorExp'
        module_type_store = module_type_store.open_function_context('visit_GeneratorExp', 902, 4, False)
        # Assigning a type to the variable 'self' (line 903)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 903, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_GeneratorExp')
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_GeneratorExp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_GeneratorExp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_GeneratorExp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_GeneratorExp(...)' code ##################

        
        # Assigning a Call to a Name (line 903):
        
        # Assigning a Call to a Name (line 903):
        
        # Call to create_src_comment(...): (line 903)
        # Processing the call arguments (line 903)
        str_12976 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 903, 62), 'str', 'Calculating generator expression')
        # Processing the call keyword arguments (line 903)
        kwargs_12977 = {}
        # Getting the type of 'stypy_functions_copy' (line 903)
        stypy_functions_copy_12974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 903)
        create_src_comment_12975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 903, 22), stypy_functions_copy_12974, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 903)
        create_src_comment_call_result_12978 = invoke(stypy.reporting.localization.Localization(__file__, 903, 22), create_src_comment_12975, *[str_12976], **kwargs_12977)
        
        # Assigning a type to the variable 'src_comment' (line 903)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 903, 8), 'src_comment', create_src_comment_call_result_12978)
        
        # Assigning a Call to a Name (line 904):
        
        # Assigning a Call to a Name (line 904):
        
        # Call to create_localization(...): (line 904)
        # Processing the call arguments (line 904)
        # Getting the type of 'node' (line 904)
        node_12981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 904)
        lineno_12982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 904, 64), node_12981, 'lineno')
        # Getting the type of 'node' (line 904)
        node_12983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 904)
        col_offset_12984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 904, 77), node_12983, 'col_offset')
        # Processing the call keyword arguments (line 904)
        kwargs_12985 = {}
        # Getting the type of 'stypy_functions_copy' (line 904)
        stypy_functions_copy_12979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 904, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 904)
        create_localization_12980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 904, 23), stypy_functions_copy_12979, 'create_localization')
        # Calling create_localization(args, kwargs) (line 904)
        create_localization_call_result_12986 = invoke(stypy.reporting.localization.Localization(__file__, 904, 23), create_localization_12980, *[lineno_12982, col_offset_12984], **kwargs_12985)
        
        # Assigning a type to the variable 'localization' (line 904)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 904, 8), 'localization', create_localization_call_result_12986)
        
        # Assigning a Call to a Name (line 906):
        
        # Assigning a Call to a Name (line 906):
        
        # Call to create_context_set(...): (line 906)
        # Processing the call arguments (line 906)
        str_12989 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 56), 'str', 'list comprehension expression')
        # Getting the type of 'node' (line 906)
        node_12990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 89), 'node', False)
        # Obtaining the member 'lineno' of a type (line 906)
        lineno_12991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 89), node_12990, 'lineno')
        # Getting the type of 'node' (line 906)
        node_12992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 102), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 906)
        col_offset_12993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 102), node_12992, 'col_offset')
        # Processing the call keyword arguments (line 906)
        kwargs_12994 = {}
        # Getting the type of 'functions_copy' (line 906)
        functions_copy_12987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 906, 22), 'functions_copy', False)
        # Obtaining the member 'create_context_set' of a type (line 906)
        create_context_set_12988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 906, 22), functions_copy_12987, 'create_context_set')
        # Calling create_context_set(args, kwargs) (line 906)
        create_context_set_call_result_12995 = invoke(stypy.reporting.localization.Localization(__file__, 906, 22), create_context_set_12988, *[str_12989, lineno_12991, col_offset_12993], **kwargs_12994)
        
        # Assigning a type to the variable 'context_set' (line 906)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 906, 8), 'context_set', create_context_set_call_result_12995)
        
        # Assigning a Call to a Tuple (line 908):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 908)
        # Processing the call arguments (line 908)
        # Getting the type of 'node' (line 908)
        node_12998 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 40), 'node', False)
        # Obtaining the member 'elt' of a type (line 908)
        elt_12999 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 40), node_12998, 'elt')
        # Getting the type of 'context' (line 908)
        context_13000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 50), 'context', False)
        # Processing the call keyword arguments (line 908)
        kwargs_13001 = {}
        # Getting the type of 'self' (line 908)
        self_12996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 29), 'self', False)
        # Obtaining the member 'visit' of a type (line 908)
        visit_12997 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 908, 29), self_12996, 'visit')
        # Calling visit(args, kwargs) (line 908)
        visit_call_result_13002 = invoke(stypy.reporting.localization.Localization(__file__, 908, 29), visit_12997, *[elt_12999, context_13000], **kwargs_13001)
        
        # Assigning a type to the variable 'call_assignment_9610' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'call_assignment_9610', visit_call_result_13002)
        
        # Assigning a Call to a Name (line 908):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9610' (line 908)
        call_assignment_9610_13003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'call_assignment_9610', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13004 = stypy_get_value_from_tuple(call_assignment_9610_13003, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9611' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'call_assignment_9611', stypy_get_value_from_tuple_call_result_13004)
        
        # Assigning a Name to a Name (line 908):
        # Getting the type of 'call_assignment_9611' (line 908)
        call_assignment_9611_13005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'call_assignment_9611')
        # Assigning a type to the variable 'elt_stmts' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'elt_stmts', call_assignment_9611_13005)
        
        # Assigning a Call to a Name (line 908):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9610' (line 908)
        call_assignment_9610_13006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'call_assignment_9610', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13007 = stypy_get_value_from_tuple(call_assignment_9610_13006, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9612' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'call_assignment_9612', stypy_get_value_from_tuple_call_result_13007)
        
        # Assigning a Name to a Name (line 908):
        # Getting the type of 'call_assignment_9612' (line 908)
        call_assignment_9612_13008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 908, 8), 'call_assignment_9612')
        # Assigning a type to the variable 'elt_var' (line 908)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 908, 19), 'elt_var', call_assignment_9612_13008)
        
        # Assigning a List to a Name (line 910):
        
        # Assigning a List to a Name (line 910):
        
        # Obtaining an instance of the builtin type 'list' (line 910)
        list_13009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 910, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 910)
        
        # Assigning a type to the variable 'generator_stmts' (line 910)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 910, 8), 'generator_stmts', list_13009)
        
        # Assigning a List to a Name (line 911):
        
        # Assigning a List to a Name (line 911):
        
        # Obtaining an instance of the builtin type 'list' (line 911)
        list_13010 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 911, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 911)
        
        # Assigning a type to the variable 'generator_vars' (line 911)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 911, 8), 'generator_vars', list_13010)
        
        # Getting the type of 'node' (line 912)
        node_13011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 19), 'node')
        # Obtaining the member 'generators' of a type (line 912)
        generators_13012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 19), node_13011, 'generators')
        # Assigning a type to the variable 'generators_13012' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'generators_13012', generators_13012)
        # Testing if the for loop is going to be iterated (line 912)
        # Testing the type of a for loop iterable (line 912)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 912, 8), generators_13012)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 912, 8), generators_13012):
            # Getting the type of the for loop variable (line 912)
            for_loop_var_13013 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 912, 8), generators_13012)
            # Assigning a type to the variable 'gen' (line 912)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'gen', for_loop_var_13013)
            # SSA begins for a for statement (line 912)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to assign_line_and_column(...): (line 913)
            # Processing the call arguments (line 913)
            # Getting the type of 'gen' (line 913)
            gen_13016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 56), 'gen', False)
            # Getting the type of 'node' (line 913)
            node_13017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 61), 'node', False)
            # Processing the call keyword arguments (line 913)
            kwargs_13018 = {}
            # Getting the type of 'stypy_functions_copy' (line 913)
            stypy_functions_copy_13014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 913)
            assign_line_and_column_13015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 12), stypy_functions_copy_13014, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 913)
            assign_line_and_column_call_result_13019 = invoke(stypy.reporting.localization.Localization(__file__, 913, 12), assign_line_and_column_13015, *[gen_13016, node_13017], **kwargs_13018)
            
            
            # Assigning a Call to a Tuple (line 914):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 914)
            # Processing the call arguments (line 914)
            # Getting the type of 'gen' (line 914)
            gen_13022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 46), 'gen', False)
            # Getting the type of 'context' (line 914)
            context_13023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 51), 'context', False)
            # Processing the call keyword arguments (line 914)
            kwargs_13024 = {}
            # Getting the type of 'self' (line 914)
            self_13020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 35), 'self', False)
            # Obtaining the member 'visit' of a type (line 914)
            visit_13021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 914, 35), self_13020, 'visit')
            # Calling visit(args, kwargs) (line 914)
            visit_call_result_13025 = invoke(stypy.reporting.localization.Localization(__file__, 914, 35), visit_13021, *[gen_13022, context_13023], **kwargs_13024)
            
            # Assigning a type to the variable 'call_assignment_9613' (line 914)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'call_assignment_9613', visit_call_result_13025)
            
            # Assigning a Call to a Name (line 914):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9613' (line 914)
            call_assignment_9613_13026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'call_assignment_9613', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_13027 = stypy_get_value_from_tuple(call_assignment_9613_13026, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9614' (line 914)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'call_assignment_9614', stypy_get_value_from_tuple_call_result_13027)
            
            # Assigning a Name to a Name (line 914):
            # Getting the type of 'call_assignment_9614' (line 914)
            call_assignment_9614_13028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'call_assignment_9614')
            # Assigning a type to the variable 'temp_stmts' (line 914)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'temp_stmts', call_assignment_9614_13028)
            
            # Assigning a Call to a Name (line 914):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9613' (line 914)
            call_assignment_9613_13029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'call_assignment_9613', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_13030 = stypy_get_value_from_tuple(call_assignment_9613_13029, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9615' (line 914)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'call_assignment_9615', stypy_get_value_from_tuple_call_result_13030)
            
            # Assigning a Name to a Name (line 914):
            # Getting the type of 'call_assignment_9615' (line 914)
            call_assignment_9615_13031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 12), 'call_assignment_9615')
            # Assigning a type to the variable 'temp_var' (line 914)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 24), 'temp_var', call_assignment_9615_13031)
            
            # Call to append(...): (line 915)
            # Processing the call arguments (line 915)
            # Getting the type of 'temp_stmts' (line 915)
            temp_stmts_13034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 35), 'temp_stmts', False)
            # Processing the call keyword arguments (line 915)
            kwargs_13035 = {}
            # Getting the type of 'generator_stmts' (line 915)
            generator_stmts_13032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 915, 12), 'generator_stmts', False)
            # Obtaining the member 'append' of a type (line 915)
            append_13033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 915, 12), generator_stmts_13032, 'append')
            # Calling append(args, kwargs) (line 915)
            append_call_result_13036 = invoke(stypy.reporting.localization.Localization(__file__, 915, 12), append_13033, *[temp_stmts_13034], **kwargs_13035)
            
            
            # Call to append(...): (line 916)
            # Processing the call arguments (line 916)
            # Getting the type of 'generator_vars' (line 916)
            generator_vars_13039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 34), 'generator_vars', False)
            # Processing the call keyword arguments (line 916)
            kwargs_13040 = {}
            # Getting the type of 'generator_vars' (line 916)
            generator_vars_13037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 12), 'generator_vars', False)
            # Obtaining the member 'append' of a type (line 916)
            append_13038 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 12), generator_vars_13037, 'append')
            # Calling append(args, kwargs) (line 916)
            append_call_result_13041 = invoke(stypy.reporting.localization.Localization(__file__, 916, 12), append_13038, *[generator_vars_13039], **kwargs_13040)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 918):
        
        # Assigning a Call to a Name (line 918):
        
        # Call to create_Name(...): (line 918)
        # Processing the call arguments (line 918)
        str_13044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 55), 'str', 'get_builtin_type')
        # Processing the call keyword arguments (line 918)
        # Getting the type of 'node' (line 918)
        node_13045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 80), 'node', False)
        # Obtaining the member 'lineno' of a type (line 918)
        lineno_13046 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 80), node_13045, 'lineno')
        keyword_13047 = lineno_13046
        # Getting the type of 'node' (line 918)
        node_13048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 918)
        col_offset_13049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 100), node_13048, 'col_offset')
        keyword_13050 = col_offset_13049
        kwargs_13051 = {'column': keyword_13050, 'line': keyword_13047}
        # Getting the type of 'core_language_copy' (line 918)
        core_language_copy_13042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 918)
        create_Name_13043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 24), core_language_copy_13042, 'create_Name')
        # Calling create_Name(args, kwargs) (line 918)
        create_Name_call_result_13052 = invoke(stypy.reporting.localization.Localization(__file__, 918, 24), create_Name_13043, *[str_13044], **kwargs_13051)
        
        # Assigning a type to the variable 'get_type_call' (line 918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'get_type_call', create_Name_call_result_13052)
        
        # Assigning a Call to a Name (line 919):
        
        # Assigning a Call to a Name (line 919):
        
        # Call to create_str(...): (line 919)
        # Processing the call arguments (line 919)
        str_13055 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 919, 60), 'str', 'list')
        # Processing the call keyword arguments (line 919)
        kwargs_13056 = {}
        # Getting the type of 'core_language_copy' (line 919)
        core_language_copy_13053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 30), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 919)
        create_str_13054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 30), core_language_copy_13053, 'create_str')
        # Calling create_str(args, kwargs) (line 919)
        create_str_call_result_13057 = invoke(stypy.reporting.localization.Localization(__file__, 919, 30), create_str_13054, *[str_13055], **kwargs_13056)
        
        # Assigning a type to the variable 'get_type_call_param' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 8), 'get_type_call_param', create_str_call_result_13057)
        
        # Assigning a Call to a Name (line 920):
        
        # Assigning a Call to a Name (line 920):
        
        # Call to create_call(...): (line 920)
        # Processing the call arguments (line 920)
        # Getting the type of 'get_type_call' (line 920)
        get_type_call_13060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 42), 'get_type_call', False)
        
        # Obtaining an instance of the builtin type 'list' (line 920)
        list_13061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 920, 57), 'list')
        # Adding type elements to the builtin type 'list' instance (line 920)
        # Adding element type (line 920)
        # Getting the type of 'localization' (line 920)
        localization_13062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 58), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 57), list_13061, localization_13062)
        # Adding element type (line 920)
        # Getting the type of 'get_type_call_param' (line 920)
        get_type_call_param_13063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 72), 'get_type_call_param', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 57), list_13061, get_type_call_param_13063)
        
        # Processing the call keyword arguments (line 920)
        kwargs_13064 = {}
        # Getting the type of 'functions_copy' (line 920)
        functions_copy_13058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 15), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 920)
        create_call_13059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 920, 15), functions_copy_13058, 'create_call')
        # Calling create_call(args, kwargs) (line 920)
        create_call_call_result_13065 = invoke(stypy.reporting.localization.Localization(__file__, 920, 15), create_call_13059, *[get_type_call_13060, list_13061], **kwargs_13064)
        
        # Assigning a type to the variable 'call' (line 920)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 920, 8), 'call', create_call_call_result_13065)
        
        # Assigning a Call to a Tuple (line 921):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 921)
        # Processing the call arguments (line 921)
        # Getting the type of 'call' (line 921)
        call_13068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 79), 'call', False)
        # Processing the call keyword arguments (line 921)
        # Getting the type of 'node' (line 921)
        node_13069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 90), 'node', False)
        # Obtaining the member 'lineno' of a type (line 921)
        lineno_13070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 921, 90), node_13069, 'lineno')
        keyword_13071 = lineno_13070
        # Getting the type of 'node' (line 922)
        node_13072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 81), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 922)
        col_offset_13073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 81), node_13072, 'col_offset')
        keyword_13074 = col_offset_13073
        kwargs_13075 = {'column': keyword_13074, 'line': keyword_13071}
        # Getting the type of 'stypy_functions_copy' (line 921)
        stypy_functions_copy_13066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 921)
        create_temp_Assign_13067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 921, 39), stypy_functions_copy_13066, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 921)
        create_temp_Assign_call_result_13076 = invoke(stypy.reporting.localization.Localization(__file__, 921, 39), create_temp_Assign_13067, *[call_13068], **kwargs_13075)
        
        # Assigning a type to the variable 'call_assignment_9616' (line 921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'call_assignment_9616', create_temp_Assign_call_result_13076)
        
        # Assigning a Call to a Name (line 921):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9616' (line 921)
        call_assignment_9616_13077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'call_assignment_9616', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13078 = stypy_get_value_from_tuple(call_assignment_9616_13077, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9617' (line 921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'call_assignment_9617', stypy_get_value_from_tuple_call_result_13078)
        
        # Assigning a Name to a Name (line 921):
        # Getting the type of 'call_assignment_9617' (line 921)
        call_assignment_9617_13079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'call_assignment_9617')
        # Assigning a type to the variable 'ret_list_stmts' (line 921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'ret_list_stmts', call_assignment_9617_13079)
        
        # Assigning a Call to a Name (line 921):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9616' (line 921)
        call_assignment_9616_13080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'call_assignment_9616', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13081 = stypy_get_value_from_tuple(call_assignment_9616_13080, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9618' (line 921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'call_assignment_9618', stypy_get_value_from_tuple_call_result_13081)
        
        # Assigning a Name to a Name (line 921):
        # Getting the type of 'call_assignment_9618' (line 921)
        call_assignment_9618_13082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 921, 8), 'call_assignment_9618')
        # Assigning a type to the variable 'ret_list_var' (line 921)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 921, 24), 'ret_list_var', call_assignment_9618_13082)
        
        # Assigning a Call to a Name (line 924):
        
        # Assigning a Call to a Name (line 924):
        
        # Call to create_attribute(...): (line 924)
        # Processing the call arguments (line 924)
        # Getting the type of 'ret_list_var' (line 924)
        ret_list_var_13085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 65), 'ret_list_var', False)
        str_13086 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 924, 79), 'str', 'set_elements_type')
        # Processing the call keyword arguments (line 924)
        kwargs_13087 = {}
        # Getting the type of 'core_language_copy' (line 924)
        core_language_copy_13083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 924, 29), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 924)
        create_attribute_13084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 924, 29), core_language_copy_13083, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 924)
        create_attribute_call_result_13088 = invoke(stypy.reporting.localization.Localization(__file__, 924, 29), create_attribute_13084, *[ret_list_var_13085, str_13086], **kwargs_13087)
        
        # Assigning a type to the variable 'invoke_set_element' (line 924)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 924, 8), 'invoke_set_element', create_attribute_call_result_13088)
        
        # Assigning a Call to a Name (line 926):
        
        # Assigning a Call to a Name (line 926):
        
        # Call to create_context_unset(...): (line 926)
        # Processing the call keyword arguments (line 926)
        kwargs_13091 = {}
        # Getting the type of 'functions_copy' (line 926)
        functions_copy_13089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 24), 'functions_copy', False)
        # Obtaining the member 'create_context_unset' of a type (line 926)
        create_context_unset_13090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 24), functions_copy_13089, 'create_context_unset')
        # Calling create_context_unset(args, kwargs) (line 926)
        create_context_unset_call_result_13092 = invoke(stypy.reporting.localization.Localization(__file__, 926, 24), create_context_unset_13090, *[], **kwargs_13091)
        
        # Assigning a type to the variable 'context_unset' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 8), 'context_unset', create_context_unset_call_result_13092)
        
        # Assigning a Call to a Name (line 927):
        
        # Assigning a Call to a Name (line 927):
        
        # Call to create_call_expression(...): (line 927)
        # Processing the call arguments (line 927)
        # Getting the type of 'invoke_set_element' (line 927)
        invoke_set_element_13095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 68), 'invoke_set_element', False)
        
        # Obtaining an instance of the builtin type 'list' (line 927)
        list_13096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 927, 88), 'list')
        # Adding type elements to the builtin type 'list' instance (line 927)
        # Adding element type (line 927)
        # Getting the type of 'localization' (line 927)
        localization_13097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 89), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 927, 88), list_13096, localization_13097)
        # Adding element type (line 927)
        # Getting the type of 'elt_var' (line 927)
        elt_var_13098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 103), 'elt_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 927, 88), list_13096, elt_var_13098)
        
        # Processing the call keyword arguments (line 927)
        kwargs_13099 = {}
        # Getting the type of 'functions_copy' (line 927)
        functions_copy_13093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 30), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 927)
        create_call_expression_13094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 30), functions_copy_13093, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 927)
        create_call_expression_call_result_13100 = invoke(stypy.reporting.localization.Localization(__file__, 927, 30), create_call_expression_13094, *[invoke_set_element_13095, list_13096], **kwargs_13099)
        
        # Assigning a type to the variable 'call_to_set_element' (line 927)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 927, 8), 'call_to_set_element', create_call_expression_call_result_13100)
        
        # Obtaining an instance of the builtin type 'tuple' (line 929)
        tuple_13101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 929, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 929)
        # Adding element type (line 929)
        
        # Call to flatten_lists(...): (line 929)
        # Processing the call arguments (line 929)
        # Getting the type of 'src_comment' (line 929)
        src_comment_13104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 50), 'src_comment', False)
        # Getting the type of 'context_set' (line 929)
        context_set_13105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 63), 'context_set', False)
        # Getting the type of 'generator_stmts' (line 929)
        generator_stmts_13106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 76), 'generator_stmts', False)
        # Getting the type of 'elt_stmts' (line 929)
        elt_stmts_13107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 93), 'elt_stmts', False)
        # Getting the type of 'ret_list_stmts' (line 929)
        ret_list_stmts_13108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 104), 'ret_list_stmts', False)
        # Getting the type of 'context_unset' (line 930)
        context_unset_13109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 45), 'context_unset', False)
        # Getting the type of 'call_to_set_element' (line 930)
        call_to_set_element_13110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 60), 'call_to_set_element', False)
        # Processing the call keyword arguments (line 929)
        kwargs_13111 = {}
        # Getting the type of 'stypy_functions_copy' (line 929)
        stypy_functions_copy_13102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 929, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 929)
        flatten_lists_13103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 929, 15), stypy_functions_copy_13102, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 929)
        flatten_lists_call_result_13112 = invoke(stypy.reporting.localization.Localization(__file__, 929, 15), flatten_lists_13103, *[src_comment_13104, context_set_13105, generator_stmts_13106, elt_stmts_13107, ret_list_stmts_13108, context_unset_13109, call_to_set_element_13110], **kwargs_13111)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 929, 15), tuple_13101, flatten_lists_call_result_13112)
        # Adding element type (line 929)
        # Getting the type of 'ret_list_var' (line 930)
        ret_list_var_13113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 82), 'ret_list_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 929, 15), tuple_13101, ret_list_var_13113)
        
        # Assigning a type to the variable 'stypy_return_type' (line 929)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 929, 8), 'stypy_return_type', tuple_13101)
        
        # ################# End of 'visit_GeneratorExp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_GeneratorExp' in the type store
        # Getting the type of 'stypy_return_type' (line 902)
        stypy_return_type_13114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_13114)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_GeneratorExp'
        return stypy_return_type_13114


    @norecursion
    def visit_IfExp(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_IfExp'
        module_type_store = module_type_store.open_function_context('visit_IfExp', 932, 4, False)
        # Assigning a type to the variable 'self' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_IfExp')
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_IfExp.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_IfExp', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_IfExp', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_IfExp(...)' code ##################

        
        # Assigning a List to a Name (line 933):
        
        # Assigning a List to a Name (line 933):
        
        # Obtaining an instance of the builtin type 'list' (line 933)
        list_13115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 933, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 933)
        
        # Assigning a type to the variable 'if_stmt_body' (line 933)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 933, 8), 'if_stmt_body', list_13115)
        
        # Assigning a List to a Name (line 934):
        
        # Assigning a List to a Name (line 934):
        
        # Obtaining an instance of the builtin type 'list' (line 934)
        list_13116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 934, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 934)
        
        # Assigning a type to the variable 'if_stmt_orelse' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'if_stmt_orelse', list_13116)
        
        # Assigning a Call to a Name (line 936):
        
        # Assigning a Call to a Name (line 936):
        
        # Call to create_blank_line(...): (line 936)
        # Processing the call keyword arguments (line 936)
        kwargs_13119 = {}
        # Getting the type of 'stypy_functions_copy' (line 936)
        stypy_functions_copy_13117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 936, 27), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 936)
        create_blank_line_13118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 936, 27), stypy_functions_copy_13117, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 936)
        create_blank_line_call_result_13120 = invoke(stypy.reporting.localization.Localization(__file__, 936, 27), create_blank_line_13118, *[], **kwargs_13119)
        
        # Assigning a type to the variable 'begin_if_comment' (line 936)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 936, 8), 'begin_if_comment', create_blank_line_call_result_13120)
        
        # Assigning a Call to a Tuple (line 939):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 939)
        # Processing the call arguments (line 939)
        # Getting the type of 'node' (line 939)
        node_13123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 50), 'node', False)
        # Obtaining the member 'test' of a type (line 939)
        test_13124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 939, 50), node_13123, 'test')
        # Getting the type of 'context' (line 939)
        context_13125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 61), 'context', False)
        # Processing the call keyword arguments (line 939)
        kwargs_13126 = {}
        # Getting the type of 'self' (line 939)
        self_13121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 39), 'self', False)
        # Obtaining the member 'visit' of a type (line 939)
        visit_13122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 939, 39), self_13121, 'visit')
        # Calling visit(args, kwargs) (line 939)
        visit_call_result_13127 = invoke(stypy.reporting.localization.Localization(__file__, 939, 39), visit_13122, *[test_13124, context_13125], **kwargs_13126)
        
        # Assigning a type to the variable 'call_assignment_9619' (line 939)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'call_assignment_9619', visit_call_result_13127)
        
        # Assigning a Call to a Name (line 939):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9619' (line 939)
        call_assignment_9619_13128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'call_assignment_9619', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13129 = stypy_get_value_from_tuple(call_assignment_9619_13128, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9620' (line 939)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'call_assignment_9620', stypy_get_value_from_tuple_call_result_13129)
        
        # Assigning a Name to a Name (line 939):
        # Getting the type of 'call_assignment_9620' (line 939)
        call_assignment_9620_13130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'call_assignment_9620')
        # Assigning a type to the variable 'condition_stmt' (line 939)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'condition_stmt', call_assignment_9620_13130)
        
        # Assigning a Call to a Name (line 939):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9619' (line 939)
        call_assignment_9619_13131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'call_assignment_9619', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13132 = stypy_get_value_from_tuple(call_assignment_9619_13131, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9621' (line 939)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'call_assignment_9621', stypy_get_value_from_tuple_call_result_13132)
        
        # Assigning a Name to a Name (line 939):
        # Getting the type of 'call_assignment_9621' (line 939)
        call_assignment_9621_13133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 939, 8), 'call_assignment_9621')
        # Assigning a type to the variable 'if_stmt_test' (line 939)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 939, 24), 'if_stmt_test', call_assignment_9621_13133)
        
        # Assigning a Call to a Name (line 942):
        
        # Assigning a Call to a Name (line 942):
        
        # Call to create_src_comment(...): (line 942)
        # Processing the call arguments (line 942)
        str_13136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 68), 'str', 'Testing the type of an if expression')
        # Getting the type of 'node' (line 942)
        node_13137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 108), 'node', False)
        # Obtaining the member 'lineno' of a type (line 942)
        lineno_13138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 108), node_13137, 'lineno')
        # Processing the call keyword arguments (line 942)
        kwargs_13139 = {}
        # Getting the type of 'stypy_functions_copy' (line 942)
        stypy_functions_copy_13134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 942)
        create_src_comment_13135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 28), stypy_functions_copy_13134, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 942)
        create_src_comment_call_result_13140 = invoke(stypy.reporting.localization.Localization(__file__, 942, 28), create_src_comment_13135, *[str_13136, lineno_13138], **kwargs_13139)
        
        # Assigning a type to the variable 'condition_comment' (line 942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'condition_comment', create_src_comment_call_result_13140)
        
        # Assigning a Call to a Name (line 943):
        
        # Assigning a Call to a Name (line 943):
        
        # Call to create_Name(...): (line 943)
        # Processing the call arguments (line 943)
        str_13143 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 943, 51), 'str', 'is_suitable_condition')
        # Processing the call keyword arguments (line 943)
        kwargs_13144 = {}
        # Getting the type of 'core_language_copy' (line 943)
        core_language_copy_13141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 20), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 943)
        create_Name_13142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 943, 20), core_language_copy_13141, 'create_Name')
        # Calling create_Name(args, kwargs) (line 943)
        create_Name_call_result_13145 = invoke(stypy.reporting.localization.Localization(__file__, 943, 20), create_Name_13142, *[str_13143], **kwargs_13144)
        
        # Assigning a type to the variable 'attribute' (line 943)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 943, 8), 'attribute', create_Name_call_result_13145)
        
        # Assigning a Call to a Name (line 944):
        
        # Assigning a Call to a Name (line 944):
        
        # Call to create_localization(...): (line 944)
        # Processing the call arguments (line 944)
        # Getting the type of 'node' (line 944)
        node_13148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 944)
        lineno_13149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 64), node_13148, 'lineno')
        # Getting the type of 'node' (line 944)
        node_13150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 944)
        col_offset_13151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 77), node_13150, 'col_offset')
        # Processing the call keyword arguments (line 944)
        kwargs_13152 = {}
        # Getting the type of 'stypy_functions_copy' (line 944)
        stypy_functions_copy_13146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 944)
        create_localization_13147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 23), stypy_functions_copy_13146, 'create_localization')
        # Calling create_localization(args, kwargs) (line 944)
        create_localization_call_result_13153 = invoke(stypy.reporting.localization.Localization(__file__, 944, 23), create_localization_13147, *[lineno_13149, col_offset_13151], **kwargs_13152)
        
        # Assigning a type to the variable 'localization' (line 944)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 944, 8), 'localization', create_localization_call_result_13153)
        
        # Assigning a Call to a Name (line 945):
        
        # Assigning a Call to a Name (line 945):
        
        # Call to create_call_expression(...): (line 945)
        # Processing the call arguments (line 945)
        # Getting the type of 'attribute' (line 945)
        attribute_13156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 68), 'attribute', False)
        
        # Obtaining an instance of the builtin type 'list' (line 945)
        list_13157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 945, 79), 'list')
        # Adding type elements to the builtin type 'list' instance (line 945)
        # Adding element type (line 945)
        # Getting the type of 'localization' (line 945)
        localization_13158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 80), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 79), list_13157, localization_13158)
        # Adding element type (line 945)
        # Getting the type of 'if_stmt_test' (line 945)
        if_stmt_test_13159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 94), 'if_stmt_test', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 945, 79), list_13157, if_stmt_test_13159)
        
        # Processing the call keyword arguments (line 945)
        kwargs_13160 = {}
        # Getting the type of 'functions_copy' (line 945)
        functions_copy_13154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 945, 30), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 945)
        create_call_expression_13155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 945, 30), functions_copy_13154, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 945)
        create_call_expression_call_result_13161 = invoke(stypy.reporting.localization.Localization(__file__, 945, 30), create_call_expression_13155, *[attribute_13156, list_13157], **kwargs_13160)
        
        # Assigning a type to the variable 'test_condition_call' (line 945)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 945, 8), 'test_condition_call', create_call_expression_call_result_13161)
        
        # Call to append(...): (line 948)
        # Processing the call arguments (line 948)
        
        # Call to create_src_comment(...): (line 948)
        # Processing the call arguments (line 948)
        str_13166 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 948, 68), 'str', 'SSA begins for if expression')
        # Getting the type of 'node' (line 948)
        node_13167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 100), 'node', False)
        # Obtaining the member 'lineno' of a type (line 948)
        lineno_13168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 100), node_13167, 'lineno')
        # Processing the call keyword arguments (line 948)
        kwargs_13169 = {}
        # Getting the type of 'stypy_functions_copy' (line 948)
        stypy_functions_copy_13164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 948)
        create_src_comment_13165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 28), stypy_functions_copy_13164, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 948)
        create_src_comment_call_result_13170 = invoke(stypy.reporting.localization.Localization(__file__, 948, 28), create_src_comment_13165, *[str_13166, lineno_13168], **kwargs_13169)
        
        # Processing the call keyword arguments (line 948)
        kwargs_13171 = {}
        # Getting the type of 'if_stmt_body' (line 948)
        if_stmt_body_13162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 948, 8), 'if_stmt_body', False)
        # Obtaining the member 'append' of a type (line 948)
        append_13163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 948, 8), if_stmt_body_13162, 'append')
        # Calling append(args, kwargs) (line 948)
        append_call_result_13172 = invoke(stypy.reporting.localization.Localization(__file__, 948, 8), append_13163, *[create_src_comment_call_result_13170], **kwargs_13171)
        
        
        # Assigning a Call to a Tuple (line 949):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 949)
        # Processing the call keyword arguments (line 949)
        kwargs_13175 = {}
        # Getting the type of 'stypy_functions_copy' (line 949)
        stypy_functions_copy_13173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 949)
        create_clone_type_store_13174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 39), stypy_functions_copy_13173, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 949)
        create_clone_type_store_call_result_13176 = invoke(stypy.reporting.localization.Localization(__file__, 949, 39), create_clone_type_store_13174, *[], **kwargs_13175)
        
        # Assigning a type to the variable 'call_assignment_9622' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'call_assignment_9622', create_clone_type_store_call_result_13176)
        
        # Assigning a Call to a Name (line 949):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9622' (line 949)
        call_assignment_9622_13177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'call_assignment_9622', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13178 = stypy_get_value_from_tuple(call_assignment_9622_13177, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9623' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'call_assignment_9623', stypy_get_value_from_tuple_call_result_13178)
        
        # Assigning a Name to a Name (line 949):
        # Getting the type of 'call_assignment_9623' (line 949)
        call_assignment_9623_13179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'call_assignment_9623')
        # Assigning a type to the variable 'clone_stmt1' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'clone_stmt1', call_assignment_9623_13179)
        
        # Assigning a Call to a Name (line 949):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9622' (line 949)
        call_assignment_9622_13180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'call_assignment_9622', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13181 = stypy_get_value_from_tuple(call_assignment_9622_13180, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9624' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'call_assignment_9624', stypy_get_value_from_tuple_call_result_13181)
        
        # Assigning a Name to a Name (line 949):
        # Getting the type of 'call_assignment_9624' (line 949)
        call_assignment_9624_13182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'call_assignment_9624')
        # Assigning a type to the variable 'type_store_var1' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 21), 'type_store_var1', call_assignment_9624_13182)
        
        # Call to append(...): (line 950)
        # Processing the call arguments (line 950)
        # Getting the type of 'clone_stmt1' (line 950)
        clone_stmt1_13185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 28), 'clone_stmt1', False)
        # Processing the call keyword arguments (line 950)
        kwargs_13186 = {}
        # Getting the type of 'if_stmt_body' (line 950)
        if_stmt_body_13183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 8), 'if_stmt_body', False)
        # Obtaining the member 'append' of a type (line 950)
        append_13184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 950, 8), if_stmt_body_13183, 'append')
        # Calling append(args, kwargs) (line 950)
        append_call_result_13187 = invoke(stypy.reporting.localization.Localization(__file__, 950, 8), append_13184, *[clone_stmt1_13185], **kwargs_13186)
        
        
        # Assigning a Call to a Tuple (line 953):
        
        # Assigning a Call to a Name:
        
        # Call to __visit_instruction_body(...): (line 953)
        # Processing the call arguments (line 953)
        # Getting the type of 'node' (line 953)
        node_13190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 63), 'node', False)
        # Obtaining the member 'body' of a type (line 953)
        body_13191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 63), node_13190, 'body')
        # Getting the type of 'context' (line 953)
        context_13192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 74), 'context', False)
        # Processing the call keyword arguments (line 953)
        kwargs_13193 = {}
        # Getting the type of 'self' (line 953)
        self_13188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 953)
        visit_instruction_body_13189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 33), self_13188, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 953)
        visit_instruction_body_call_result_13194 = invoke(stypy.reporting.localization.Localization(__file__, 953, 33), visit_instruction_body_13189, *[body_13191, context_13192], **kwargs_13193)
        
        # Assigning a type to the variable 'call_assignment_9625' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'call_assignment_9625', visit_instruction_body_call_result_13194)
        
        # Assigning a Call to a Name (line 953):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9625' (line 953)
        call_assignment_9625_13195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'call_assignment_9625', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13196 = stypy_get_value_from_tuple(call_assignment_9625_13195, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9626' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'call_assignment_9626', stypy_get_value_from_tuple_call_result_13196)
        
        # Assigning a Name to a Name (line 953):
        # Getting the type of 'call_assignment_9626' (line 953)
        call_assignment_9626_13197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'call_assignment_9626')
        # Assigning a type to the variable 'body_stmts' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'body_stmts', call_assignment_9626_13197)
        
        # Assigning a Call to a Name (line 953):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9625' (line 953)
        call_assignment_9625_13198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'call_assignment_9625', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13199 = stypy_get_value_from_tuple(call_assignment_9625_13198, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9627' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'call_assignment_9627', stypy_get_value_from_tuple_call_result_13199)
        
        # Assigning a Name to a Name (line 953):
        # Getting the type of 'call_assignment_9627' (line 953)
        call_assignment_9627_13200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'call_assignment_9627')
        # Assigning a type to the variable 'body_value' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 20), 'body_value', call_assignment_9627_13200)
        
        # Call to extend(...): (line 954)
        # Processing the call arguments (line 954)
        # Getting the type of 'body_stmts' (line 954)
        body_stmts_13203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 28), 'body_stmts', False)
        # Processing the call keyword arguments (line 954)
        kwargs_13204 = {}
        # Getting the type of 'if_stmt_body' (line 954)
        if_stmt_body_13201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 954, 8), 'if_stmt_body', False)
        # Obtaining the member 'extend' of a type (line 954)
        extend_13202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 954, 8), if_stmt_body_13201, 'extend')
        # Calling extend(args, kwargs) (line 954)
        extend_call_result_13205 = invoke(stypy.reporting.localization.Localization(__file__, 954, 8), extend_13202, *[body_stmts_13203], **kwargs_13204)
        
        
        # Call to append(...): (line 957)
        # Processing the call arguments (line 957)
        
        # Call to create_src_comment(...): (line 958)
        # Processing the call arguments (line 958)
        str_13210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 958, 52), 'str', 'SSA branch for the else part of an if expression')
        # Getting the type of 'node' (line 958)
        node_13211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 104), 'node', False)
        # Obtaining the member 'lineno' of a type (line 958)
        lineno_13212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 104), node_13211, 'lineno')
        # Processing the call keyword arguments (line 958)
        kwargs_13213 = {}
        # Getting the type of 'stypy_functions_copy' (line 958)
        stypy_functions_copy_13208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 958)
        create_src_comment_13209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 12), stypy_functions_copy_13208, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 958)
        create_src_comment_call_result_13214 = invoke(stypy.reporting.localization.Localization(__file__, 958, 12), create_src_comment_13209, *[str_13210, lineno_13212], **kwargs_13213)
        
        # Processing the call keyword arguments (line 957)
        kwargs_13215 = {}
        # Getting the type of 'if_stmt_body' (line 957)
        if_stmt_body_13206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 8), 'if_stmt_body', False)
        # Obtaining the member 'append' of a type (line 957)
        append_13207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 8), if_stmt_body_13206, 'append')
        # Calling append(args, kwargs) (line 957)
        append_call_result_13216 = invoke(stypy.reporting.localization.Localization(__file__, 957, 8), append_13207, *[create_src_comment_call_result_13214], **kwargs_13215)
        
        
        # Assigning a Call to a Tuple (line 959):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 959)
        # Processing the call keyword arguments (line 959)
        kwargs_13219 = {}
        # Getting the type of 'stypy_functions_copy' (line 959)
        stypy_functions_copy_13217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 959)
        create_clone_type_store_13218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 959, 39), stypy_functions_copy_13217, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 959)
        create_clone_type_store_call_result_13220 = invoke(stypy.reporting.localization.Localization(__file__, 959, 39), create_clone_type_store_13218, *[], **kwargs_13219)
        
        # Assigning a type to the variable 'call_assignment_9628' (line 959)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'call_assignment_9628', create_clone_type_store_call_result_13220)
        
        # Assigning a Call to a Name (line 959):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9628' (line 959)
        call_assignment_9628_13221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'call_assignment_9628', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13222 = stypy_get_value_from_tuple(call_assignment_9628_13221, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9629' (line 959)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'call_assignment_9629', stypy_get_value_from_tuple_call_result_13222)
        
        # Assigning a Name to a Name (line 959):
        # Getting the type of 'call_assignment_9629' (line 959)
        call_assignment_9629_13223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'call_assignment_9629')
        # Assigning a type to the variable 'clone_stmt2' (line 959)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'clone_stmt2', call_assignment_9629_13223)
        
        # Assigning a Call to a Name (line 959):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9628' (line 959)
        call_assignment_9628_13224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'call_assignment_9628', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13225 = stypy_get_value_from_tuple(call_assignment_9628_13224, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9630' (line 959)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'call_assignment_9630', stypy_get_value_from_tuple_call_result_13225)
        
        # Assigning a Name to a Name (line 959):
        # Getting the type of 'call_assignment_9630' (line 959)
        call_assignment_9630_13226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 8), 'call_assignment_9630')
        # Assigning a type to the variable 'type_store_var2' (line 959)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 959, 21), 'type_store_var2', call_assignment_9630_13226)
        
        # Call to append(...): (line 960)
        # Processing the call arguments (line 960)
        # Getting the type of 'clone_stmt2' (line 960)
        clone_stmt2_13229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 28), 'clone_stmt2', False)
        # Processing the call keyword arguments (line 960)
        kwargs_13230 = {}
        # Getting the type of 'if_stmt_body' (line 960)
        if_stmt_body_13227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 960, 8), 'if_stmt_body', False)
        # Obtaining the member 'append' of a type (line 960)
        append_13228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 960, 8), if_stmt_body_13227, 'append')
        # Calling append(args, kwargs) (line 960)
        append_call_result_13231 = invoke(stypy.reporting.localization.Localization(__file__, 960, 8), append_13228, *[clone_stmt2_13229], **kwargs_13230)
        
        
        # Assigning a Call to a Name (line 962):
        
        # Assigning a Call to a Name (line 962):
        
        # Call to create_set_type_store(...): (line 962)
        # Processing the call arguments (line 962)
        # Getting the type of 'type_store_var1' (line 962)
        type_store_var1_13234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 69), 'type_store_var1', False)
        # Processing the call keyword arguments (line 962)
        kwargs_13235 = {}
        # Getting the type of 'stypy_functions_copy' (line 962)
        stypy_functions_copy_13232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 962, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 962)
        create_set_type_store_13233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 962, 26), stypy_functions_copy_13232, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 962)
        create_set_type_store_call_result_13236 = invoke(stypy.reporting.localization.Localization(__file__, 962, 26), create_set_type_store_13233, *[type_store_var1_13234], **kwargs_13235)
        
        # Assigning a type to the variable 'set_type_store1' (line 962)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 962, 8), 'set_type_store1', create_set_type_store_call_result_13236)
        
        # Call to append(...): (line 963)
        # Processing the call arguments (line 963)
        # Getting the type of 'set_type_store1' (line 963)
        set_type_store1_13239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 28), 'set_type_store1', False)
        # Processing the call keyword arguments (line 963)
        kwargs_13240 = {}
        # Getting the type of 'if_stmt_body' (line 963)
        if_stmt_body_13237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 8), 'if_stmt_body', False)
        # Obtaining the member 'append' of a type (line 963)
        append_13238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 8), if_stmt_body_13237, 'append')
        # Calling append(args, kwargs) (line 963)
        append_call_result_13241 = invoke(stypy.reporting.localization.Localization(__file__, 963, 8), append_13238, *[set_type_store1_13239], **kwargs_13240)
        
        
        # Assigning a Call to a Tuple (line 966):
        
        # Assigning a Call to a Name:
        
        # Call to __visit_instruction_body(...): (line 966)
        # Processing the call arguments (line 966)
        # Getting the type of 'node' (line 966)
        node_13244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 67), 'node', False)
        # Obtaining the member 'orelse' of a type (line 966)
        orelse_13245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 966, 67), node_13244, 'orelse')
        # Getting the type of 'context' (line 966)
        context_13246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 80), 'context', False)
        # Processing the call keyword arguments (line 966)
        kwargs_13247 = {}
        # Getting the type of 'self' (line 966)
        self_13242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 37), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 966)
        visit_instruction_body_13243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 966, 37), self_13242, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 966)
        visit_instruction_body_call_result_13248 = invoke(stypy.reporting.localization.Localization(__file__, 966, 37), visit_instruction_body_13243, *[orelse_13245, context_13246], **kwargs_13247)
        
        # Assigning a type to the variable 'call_assignment_9631' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'call_assignment_9631', visit_instruction_body_call_result_13248)
        
        # Assigning a Call to a Name (line 966):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9631' (line 966)
        call_assignment_9631_13249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'call_assignment_9631', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13250 = stypy_get_value_from_tuple(call_assignment_9631_13249, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9632' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'call_assignment_9632', stypy_get_value_from_tuple_call_result_13250)
        
        # Assigning a Name to a Name (line 966):
        # Getting the type of 'call_assignment_9632' (line 966)
        call_assignment_9632_13251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'call_assignment_9632')
        # Assigning a type to the variable 'orelse_stmts' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'orelse_stmts', call_assignment_9632_13251)
        
        # Assigning a Call to a Name (line 966):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9631' (line 966)
        call_assignment_9631_13252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'call_assignment_9631', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13253 = stypy_get_value_from_tuple(call_assignment_9631_13252, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9633' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'call_assignment_9633', stypy_get_value_from_tuple_call_result_13253)
        
        # Assigning a Name to a Name (line 966):
        # Getting the type of 'call_assignment_9633' (line 966)
        call_assignment_9633_13254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'call_assignment_9633')
        # Assigning a type to the variable 'orelse_value' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 22), 'orelse_value', call_assignment_9633_13254)
        
        # Call to extend(...): (line 967)
        # Processing the call arguments (line 967)
        # Getting the type of 'orelse_stmts' (line 967)
        orelse_stmts_13257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 30), 'orelse_stmts', False)
        # Processing the call keyword arguments (line 967)
        kwargs_13258 = {}
        # Getting the type of 'if_stmt_orelse' (line 967)
        if_stmt_orelse_13255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 8), 'if_stmt_orelse', False)
        # Obtaining the member 'extend' of a type (line 967)
        extend_13256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 967, 8), if_stmt_orelse_13255, 'extend')
        # Calling extend(args, kwargs) (line 967)
        extend_call_result_13259 = invoke(stypy.reporting.localization.Localization(__file__, 967, 8), extend_13256, *[orelse_stmts_13257], **kwargs_13258)
        
        
        # Call to append(...): (line 970)
        # Processing the call arguments (line 970)
        
        # Call to create_src_comment(...): (line 970)
        # Processing the call arguments (line 970)
        str_13264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 970, 70), 'str', 'SSA join for if expression')
        # Getting the type of 'node' (line 970)
        node_13265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 100), 'node', False)
        # Obtaining the member 'lineno' of a type (line 970)
        lineno_13266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 970, 100), node_13265, 'lineno')
        # Processing the call keyword arguments (line 970)
        kwargs_13267 = {}
        # Getting the type of 'stypy_functions_copy' (line 970)
        stypy_functions_copy_13262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 30), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 970)
        create_src_comment_13263 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 970, 30), stypy_functions_copy_13262, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 970)
        create_src_comment_call_result_13268 = invoke(stypy.reporting.localization.Localization(__file__, 970, 30), create_src_comment_13263, *[str_13264, lineno_13266], **kwargs_13267)
        
        # Processing the call keyword arguments (line 970)
        kwargs_13269 = {}
        # Getting the type of 'if_stmt_orelse' (line 970)
        if_stmt_orelse_13260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 8), 'if_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 970)
        append_13261 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 970, 8), if_stmt_orelse_13260, 'append')
        # Calling append(args, kwargs) (line 970)
        append_call_result_13270 = invoke(stypy.reporting.localization.Localization(__file__, 970, 8), append_13261, *[create_src_comment_call_result_13268], **kwargs_13269)
        
        
        # Assigning a Call to a Tuple (line 971):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 971)
        # Processing the call keyword arguments (line 971)
        kwargs_13273 = {}
        # Getting the type of 'stypy_functions_copy' (line 971)
        stypy_functions_copy_13271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 971)
        create_clone_type_store_13272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 971, 39), stypy_functions_copy_13271, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 971)
        create_clone_type_store_call_result_13274 = invoke(stypy.reporting.localization.Localization(__file__, 971, 39), create_clone_type_store_13272, *[], **kwargs_13273)
        
        # Assigning a type to the variable 'call_assignment_9634' (line 971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'call_assignment_9634', create_clone_type_store_call_result_13274)
        
        # Assigning a Call to a Name (line 971):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9634' (line 971)
        call_assignment_9634_13275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'call_assignment_9634', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13276 = stypy_get_value_from_tuple(call_assignment_9634_13275, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9635' (line 971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'call_assignment_9635', stypy_get_value_from_tuple_call_result_13276)
        
        # Assigning a Name to a Name (line 971):
        # Getting the type of 'call_assignment_9635' (line 971)
        call_assignment_9635_13277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'call_assignment_9635')
        # Assigning a type to the variable 'clone_stmt3' (line 971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'clone_stmt3', call_assignment_9635_13277)
        
        # Assigning a Call to a Name (line 971):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9634' (line 971)
        call_assignment_9634_13278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'call_assignment_9634', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13279 = stypy_get_value_from_tuple(call_assignment_9634_13278, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9636' (line 971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'call_assignment_9636', stypy_get_value_from_tuple_call_result_13279)
        
        # Assigning a Name to a Name (line 971):
        # Getting the type of 'call_assignment_9636' (line 971)
        call_assignment_9636_13280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 971, 8), 'call_assignment_9636')
        # Assigning a type to the variable 'type_store_var3' (line 971)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 971, 21), 'type_store_var3', call_assignment_9636_13280)
        
        # Call to append(...): (line 972)
        # Processing the call arguments (line 972)
        # Getting the type of 'clone_stmt3' (line 972)
        clone_stmt3_13283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 30), 'clone_stmt3', False)
        # Processing the call keyword arguments (line 972)
        kwargs_13284 = {}
        # Getting the type of 'if_stmt_orelse' (line 972)
        if_stmt_orelse_13281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 972, 8), 'if_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 972)
        append_13282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 972, 8), if_stmt_orelse_13281, 'append')
        # Calling append(args, kwargs) (line 972)
        append_call_result_13285 = invoke(stypy.reporting.localization.Localization(__file__, 972, 8), append_13282, *[clone_stmt3_13283], **kwargs_13284)
        
        
        # Assigning a Call to a Tuple (line 973):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 973)
        # Processing the call arguments (line 973)
        str_13288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 973, 82), 'str', 'ssa_join_with_else_branch')
        
        # Obtaining an instance of the builtin type 'list' (line 974)
        list_13289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 974, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 974)
        # Adding element type (line 974)
        # Getting the type of 'type_store_var1' (line 974)
        type_store_var1_13290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 78), 'type_store_var1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 974, 77), list_13289, type_store_var1_13290)
        # Adding element type (line 974)
        # Getting the type of 'type_store_var2' (line 974)
        type_store_var2_13291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 95), 'type_store_var2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 974, 77), list_13289, type_store_var2_13291)
        # Adding element type (line 974)
        # Getting the type of 'type_store_var3' (line 975)
        type_store_var3_13292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 975, 78), 'type_store_var3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 974, 77), list_13289, type_store_var3_13292)
        
        # Processing the call keyword arguments (line 973)
        kwargs_13293 = {}
        # Getting the type of 'stypy_functions_copy' (line 973)
        stypy_functions_copy_13286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 973)
        create_join_type_store_13287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 38), stypy_functions_copy_13286, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 973)
        create_join_type_store_call_result_13294 = invoke(stypy.reporting.localization.Localization(__file__, 973, 38), create_join_type_store_13287, *[str_13288, list_13289], **kwargs_13293)
        
        # Assigning a type to the variable 'call_assignment_9637' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_9637', create_join_type_store_call_result_13294)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9637' (line 973)
        call_assignment_9637_13295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_9637', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13296 = stypy_get_value_from_tuple(call_assignment_9637_13295, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9638' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_9638', stypy_get_value_from_tuple_call_result_13296)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_9638' (line 973)
        call_assignment_9638_13297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_9638')
        # Assigning a type to the variable 'join_stmt' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'join_stmt', call_assignment_9638_13297)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9637' (line 973)
        call_assignment_9637_13298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_9637', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13299 = stypy_get_value_from_tuple(call_assignment_9637_13298, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9639' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_9639', stypy_get_value_from_tuple_call_result_13299)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_9639' (line 973)
        call_assignment_9639_13300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_9639')
        # Assigning a type to the variable 'final_type_store' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 19), 'final_type_store', call_assignment_9639_13300)
        
        # Call to append(...): (line 976)
        # Processing the call arguments (line 976)
        # Getting the type of 'join_stmt' (line 976)
        join_stmt_13303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 30), 'join_stmt', False)
        # Processing the call keyword arguments (line 976)
        kwargs_13304 = {}
        # Getting the type of 'if_stmt_orelse' (line 976)
        if_stmt_orelse_13301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 8), 'if_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 976)
        append_13302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 976, 8), if_stmt_orelse_13301, 'append')
        # Calling append(args, kwargs) (line 976)
        append_call_result_13305 = invoke(stypy.reporting.localization.Localization(__file__, 976, 8), append_13302, *[join_stmt_13303], **kwargs_13304)
        
        
        # Assigning a Call to a Name (line 979):
        
        # Assigning a Call to a Name (line 979):
        
        # Call to create_set_type_store(...): (line 979)
        # Processing the call arguments (line 979)
        # Getting the type of 'final_type_store' (line 979)
        final_type_store_13308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 69), 'final_type_store', False)
        # Processing the call keyword arguments (line 979)
        kwargs_13309 = {}
        # Getting the type of 'stypy_functions_copy' (line 979)
        stypy_functions_copy_13306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 979)
        create_set_type_store_13307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 26), stypy_functions_copy_13306, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 979)
        create_set_type_store_call_result_13310 = invoke(stypy.reporting.localization.Localization(__file__, 979, 26), create_set_type_store_13307, *[final_type_store_13308], **kwargs_13309)
        
        # Assigning a type to the variable 'set_type_store2' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'set_type_store2', create_set_type_store_call_result_13310)
        
        # Call to append(...): (line 980)
        # Processing the call arguments (line 980)
        # Getting the type of 'set_type_store2' (line 980)
        set_type_store2_13313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 30), 'set_type_store2', False)
        # Processing the call keyword arguments (line 980)
        kwargs_13314 = {}
        # Getting the type of 'if_stmt_orelse' (line 980)
        if_stmt_orelse_13311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'if_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 980)
        append_13312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 8), if_stmt_orelse_13311, 'append')
        # Calling append(args, kwargs) (line 980)
        append_call_result_13315 = invoke(stypy.reporting.localization.Localization(__file__, 980, 8), append_13312, *[set_type_store2_13313], **kwargs_13314)
        
        
        # Assigning a BinOp to a Name (line 983):
        
        # Assigning a BinOp to a Name (line 983):
        # Getting the type of 'if_stmt_body' (line 983)
        if_stmt_body_13316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 23), 'if_stmt_body')
        # Getting the type of 'if_stmt_orelse' (line 983)
        if_stmt_orelse_13317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 38), 'if_stmt_orelse')
        # Applying the binary operator '+' (line 983)
        result_add_13318 = python_operator(stypy.reporting.localization.Localization(__file__, 983, 23), '+', if_stmt_body_13316, if_stmt_orelse_13317)
        
        # Assigning a type to the variable 'all_if_stmts' (line 983)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'all_if_stmts', result_add_13318)
        
        # Assigning a Call to a Name (line 986):
        
        # Assigning a Call to a Name (line 986):
        
        # Call to flatten_lists(...): (line 986)
        # Processing the call arguments (line 986)
        # Getting the type of 'condition_comment' (line 986)
        condition_comment_13321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 53), 'condition_comment', False)
        # Getting the type of 'test_condition_call' (line 986)
        test_condition_call_13322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 72), 'test_condition_call', False)
        # Getting the type of 'all_if_stmts' (line 986)
        all_if_stmts_13323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 93), 'all_if_stmts', False)
        # Processing the call keyword arguments (line 986)
        kwargs_13324 = {}
        # Getting the type of 'stypy_functions_copy' (line 986)
        stypy_functions_copy_13319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 986)
        flatten_lists_13320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 986, 18), stypy_functions_copy_13319, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 986)
        flatten_lists_call_result_13325 = invoke(stypy.reporting.localization.Localization(__file__, 986, 18), flatten_lists_13320, *[condition_comment_13321, test_condition_call_13322, all_if_stmts_13323], **kwargs_13324)
        
        # Assigning a type to the variable 'if_stmt' (line 986)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 8), 'if_stmt', flatten_lists_call_result_13325)
        
        # Assigning a Call to a Name (line 988):
        
        # Assigning a Call to a Name (line 988):
        
        # Call to create_attribute(...): (line 988)
        # Processing the call arguments (line 988)
        str_13328 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 57), 'str', 'union_type')
        str_13329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 988, 71), 'str', 'UnionType')
        # Processing the call keyword arguments (line 988)
        kwargs_13330 = {}
        # Getting the type of 'core_language_copy' (line 988)
        core_language_copy_13326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 21), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 988)
        create_attribute_13327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 21), core_language_copy_13326, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 988)
        create_attribute_call_result_13331 = invoke(stypy.reporting.localization.Localization(__file__, 988, 21), create_attribute_13327, *[str_13328, str_13329], **kwargs_13330)
        
        # Assigning a type to the variable 'union_type' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'union_type', create_attribute_call_result_13331)
        
        # Assigning a Call to a Name (line 989):
        
        # Assigning a Call to a Name (line 989):
        
        # Call to create_attribute(...): (line 989)
        # Processing the call arguments (line 989)
        # Getting the type of 'union_type' (line 989)
        union_type_13334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 56), 'union_type', False)
        str_13335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 989, 68), 'str', 'add')
        # Processing the call keyword arguments (line 989)
        kwargs_13336 = {}
        # Getting the type of 'core_language_copy' (line 989)
        core_language_copy_13332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 989, 20), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 989)
        create_attribute_13333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 989, 20), core_language_copy_13332, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 989)
        create_attribute_call_result_13337 = invoke(stypy.reporting.localization.Localization(__file__, 989, 20), create_attribute_13333, *[union_type_13334, str_13335], **kwargs_13336)
        
        # Assigning a type to the variable 'union_add' (line 989)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 989, 8), 'union_add', create_attribute_call_result_13337)
        
        # Assigning a Call to a Name (line 991):
        
        # Assigning a Call to a Name (line 991):
        
        # Call to create_call(...): (line 991)
        # Processing the call arguments (line 991)
        # Getting the type of 'union_add' (line 991)
        union_add_13340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 48), 'union_add', False)
        
        # Obtaining an instance of the builtin type 'list' (line 991)
        list_13341 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 991)
        # Adding element type (line 991)
        # Getting the type of 'body_value' (line 991)
        body_value_13342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 60), 'body_value', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 59), list_13341, body_value_13342)
        # Adding element type (line 991)
        # Getting the type of 'orelse_value' (line 991)
        orelse_value_13343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 72), 'orelse_value', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 991, 59), list_13341, orelse_value_13343)
        
        # Processing the call keyword arguments (line 991)
        kwargs_13344 = {}
        # Getting the type of 'functions_copy' (line 991)
        functions_copy_13338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 21), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 991)
        create_call_13339 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 21), functions_copy_13338, 'create_call')
        # Calling create_call(args, kwargs) (line 991)
        create_call_call_result_13345 = invoke(stypy.reporting.localization.Localization(__file__, 991, 21), create_call_13339, *[union_add_13340, list_13341], **kwargs_13344)
        
        # Assigning a type to the variable 'union_call' (line 991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 991, 8), 'union_call', create_call_call_result_13345)
        
        # Assigning a Call to a Tuple (line 993):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 993)
        # Processing the call arguments (line 993)
        # Getting the type of 'union_call' (line 993)
        union_call_13348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 76), 'union_call', False)
        # Processing the call keyword arguments (line 993)
        # Getting the type of 'node' (line 993)
        node_13349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 93), 'node', False)
        # Obtaining the member 'lineno' of a type (line 993)
        lineno_13350 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 93), node_13349, 'lineno')
        keyword_13351 = lineno_13350
        # Getting the type of 'node' (line 994)
        node_13352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 78), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 994)
        col_offset_13353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 78), node_13352, 'col_offset')
        keyword_13354 = col_offset_13353
        kwargs_13355 = {'column': keyword_13354, 'line': keyword_13351}
        # Getting the type of 'stypy_functions_copy' (line 993)
        stypy_functions_copy_13346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 36), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 993)
        create_temp_Assign_13347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 36), stypy_functions_copy_13346, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 993)
        create_temp_Assign_call_result_13356 = invoke(stypy.reporting.localization.Localization(__file__, 993, 36), create_temp_Assign_13347, *[union_call_13348], **kwargs_13355)
        
        # Assigning a type to the variable 'call_assignment_9640' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'call_assignment_9640', create_temp_Assign_call_result_13356)
        
        # Assigning a Call to a Name (line 993):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9640' (line 993)
        call_assignment_9640_13357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'call_assignment_9640', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13358 = stypy_get_value_from_tuple(call_assignment_9640_13357, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_9641' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'call_assignment_9641', stypy_get_value_from_tuple_call_result_13358)
        
        # Assigning a Name to a Name (line 993):
        # Getting the type of 'call_assignment_9641' (line 993)
        call_assignment_9641_13359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'call_assignment_9641')
        # Assigning a type to the variable 'ret_assign_stmts' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'ret_assign_stmts', call_assignment_9641_13359)
        
        # Assigning a Call to a Name (line 993):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_9640' (line 993)
        call_assignment_9640_13360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'call_assignment_9640', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_13361 = stypy_get_value_from_tuple(call_assignment_9640_13360, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_9642' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'call_assignment_9642', stypy_get_value_from_tuple_call_result_13361)
        
        # Assigning a Name to a Name (line 993):
        # Getting the type of 'call_assignment_9642' (line 993)
        call_assignment_9642_13362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 8), 'call_assignment_9642')
        # Assigning a type to the variable 'ret_var' (line 993)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 993, 26), 'ret_var', call_assignment_9642_13362)
        
        # Assigning a Call to a Name (line 996):
        
        # Assigning a Call to a Name (line 996):
        
        # Call to create_blank_line(...): (line 996)
        # Processing the call keyword arguments (line 996)
        kwargs_13365 = {}
        # Getting the type of 'stypy_functions_copy' (line 996)
        stypy_functions_copy_13363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 25), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 996)
        create_blank_line_13364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 25), stypy_functions_copy_13363, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 996)
        create_blank_line_call_result_13366 = invoke(stypy.reporting.localization.Localization(__file__, 996, 25), create_blank_line_13364, *[], **kwargs_13365)
        
        # Assigning a type to the variable 'end_if_comment' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'end_if_comment', create_blank_line_call_result_13366)
        
        # Obtaining an instance of the builtin type 'tuple' (line 998)
        tuple_13367 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 998, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 998)
        # Adding element type (line 998)
        
        # Call to flatten_lists(...): (line 998)
        # Processing the call arguments (line 998)
        # Getting the type of 'begin_if_comment' (line 998)
        begin_if_comment_13370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 50), 'begin_if_comment', False)
        # Getting the type of 'condition_stmt' (line 999)
        condition_stmt_13371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 45), 'condition_stmt', False)
        # Getting the type of 'if_stmt' (line 1000)
        if_stmt_13372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 45), 'if_stmt', False)
        # Getting the type of 'ret_assign_stmts' (line 1001)
        ret_assign_stmts_13373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 45), 'ret_assign_stmts', False)
        # Getting the type of 'end_if_comment' (line 1002)
        end_if_comment_13374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 45), 'end_if_comment', False)
        # Processing the call keyword arguments (line 998)
        kwargs_13375 = {}
        # Getting the type of 'stypy_functions_copy' (line 998)
        stypy_functions_copy_13368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 998)
        flatten_lists_13369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 998, 15), stypy_functions_copy_13368, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 998)
        flatten_lists_call_result_13376 = invoke(stypy.reporting.localization.Localization(__file__, 998, 15), flatten_lists_13369, *[begin_if_comment_13370, condition_stmt_13371, if_stmt_13372, ret_assign_stmts_13373, end_if_comment_13374], **kwargs_13375)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 998, 15), tuple_13367, flatten_lists_call_result_13376)
        # Adding element type (line 998)
        # Getting the type of 'ret_var' (line 1002)
        ret_var_13377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1002, 62), 'ret_var')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 998, 15), tuple_13367, ret_var_13377)
        
        # Assigning a type to the variable 'stypy_return_type' (line 998)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 998, 8), 'stypy_return_type', tuple_13367)
        
        # ################# End of 'visit_IfExp(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_IfExp' in the type store
        # Getting the type of 'stypy_return_type' (line 932)
        stypy_return_type_13378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_13378)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_IfExp'
        return stypy_return_type_13378


    @norecursion
    def visit_Ellipsis(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Ellipsis'
        module_type_store = module_type_store.open_function_context('visit_Ellipsis', 1004, 4, False)
        # Assigning a type to the variable 'self' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_Ellipsis')
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_Ellipsis.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_Ellipsis', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Ellipsis', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Ellipsis(...)' code ##################

        
        # Obtaining an instance of the builtin type 'tuple' (line 1005)
        tuple_13379 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1005)
        # Adding element type (line 1005)
        
        # Obtaining an instance of the builtin type 'list' (line 1005)
        list_13380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1005)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 15), tuple_13379, list_13380)
        # Adding element type (line 1005)
        
        # Obtaining an instance of the builtin type 'list' (line 1005)
        list_13381 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1005, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1005)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1005, 15), tuple_13379, list_13381)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'stypy_return_type', tuple_13379)
        
        # ################# End of 'visit_Ellipsis(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Ellipsis' in the type store
        # Getting the type of 'stypy_return_type' (line 1004)
        stypy_return_type_13382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1004, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_13382)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Ellipsis'
        return stypy_return_type_13382


    @norecursion
    def visit_ExtSlice(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_ExtSlice'
        module_type_store = module_type_store.open_function_context('visit_ExtSlice', 1007, 4, False)
        # Assigning a type to the variable 'self' (line 1008)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1008, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_ExtSlice')
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_ExtSlice.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_ExtSlice', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_ExtSlice', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_ExtSlice(...)' code ##################

        
        # Assigning a List to a Name (line 1009):
        
        # Assigning a List to a Name (line 1009):
        
        # Obtaining an instance of the builtin type 'list' (line 1009)
        list_13383 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1009, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1009)
        
        # Assigning a type to the variable 'stmts' (line 1009)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1009, 8), 'stmts', list_13383)
        
        # Assigning a List to a Name (line 1010):
        
        # Assigning a List to a Name (line 1010):
        
        # Obtaining an instance of the builtin type 'list' (line 1010)
        list_13384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1010, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1010)
        
        # Assigning a type to the variable 'dim_vars' (line 1010)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1010, 8), 'dim_vars', list_13384)
        
        # Getting the type of 'node' (line 1011)
        node_13385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 19), 'node')
        # Obtaining the member 'dims' of a type (line 1011)
        dims_13386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1011, 19), node_13385, 'dims')
        # Assigning a type to the variable 'dims_13386' (line 1011)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 8), 'dims_13386', dims_13386)
        # Testing if the for loop is going to be iterated (line 1011)
        # Testing the type of a for loop iterable (line 1011)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 1011, 8), dims_13386)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 1011, 8), dims_13386):
            # Getting the type of the for loop variable (line 1011)
            for_loop_var_13387 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 1011, 8), dims_13386)
            # Assigning a type to the variable 'dim' (line 1011)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 8), 'dim', for_loop_var_13387)
            # SSA begins for a for statement (line 1011)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to assign_line_and_column(...): (line 1012)
            # Processing the call arguments (line 1012)
            # Getting the type of 'dim' (line 1012)
            dim_13390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 56), 'dim', False)
            # Getting the type of 'node' (line 1012)
            node_13391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 61), 'node', False)
            # Processing the call keyword arguments (line 1012)
            kwargs_13392 = {}
            # Getting the type of 'stypy_functions_copy' (line 1012)
            stypy_functions_copy_13388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1012, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 1012)
            assign_line_and_column_13389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1012, 12), stypy_functions_copy_13388, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 1012)
            assign_line_and_column_call_result_13393 = invoke(stypy.reporting.localization.Localization(__file__, 1012, 12), assign_line_and_column_13389, *[dim_13390, node_13391], **kwargs_13392)
            
            
            # Assigning a Call to a Tuple (line 1013):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 1013)
            # Processing the call arguments (line 1013)
            # Getting the type of 'dim' (line 1013)
            dim_13396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 44), 'dim', False)
            # Getting the type of 'context' (line 1013)
            context_13397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 49), 'context', False)
            # Processing the call keyword arguments (line 1013)
            kwargs_13398 = {}
            # Getting the type of 'self' (line 1013)
            self_13394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 33), 'self', False)
            # Obtaining the member 'visit' of a type (line 1013)
            visit_13395 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1013, 33), self_13394, 'visit')
            # Calling visit(args, kwargs) (line 1013)
            visit_call_result_13399 = invoke(stypy.reporting.localization.Localization(__file__, 1013, 33), visit_13395, *[dim_13396, context_13397], **kwargs_13398)
            
            # Assigning a type to the variable 'call_assignment_9643' (line 1013)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'call_assignment_9643', visit_call_result_13399)
            
            # Assigning a Call to a Name (line 1013):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9643' (line 1013)
            call_assignment_9643_13400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'call_assignment_9643', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_13401 = stypy_get_value_from_tuple(call_assignment_9643_13400, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_9644' (line 1013)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'call_assignment_9644', stypy_get_value_from_tuple_call_result_13401)
            
            # Assigning a Name to a Name (line 1013):
            # Getting the type of 'call_assignment_9644' (line 1013)
            call_assignment_9644_13402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'call_assignment_9644')
            # Assigning a type to the variable 'dim_stmts' (line 1013)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'dim_stmts', call_assignment_9644_13402)
            
            # Assigning a Call to a Name (line 1013):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_9643' (line 1013)
            call_assignment_9643_13403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'call_assignment_9643', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_13404 = stypy_get_value_from_tuple(call_assignment_9643_13403, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_9645' (line 1013)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'call_assignment_9645', stypy_get_value_from_tuple_call_result_13404)
            
            # Assigning a Name to a Name (line 1013):
            # Getting the type of 'call_assignment_9645' (line 1013)
            call_assignment_9645_13405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1013, 12), 'call_assignment_9645')
            # Assigning a type to the variable 'dim_var' (line 1013)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1013, 23), 'dim_var', call_assignment_9645_13405)
            
            # Call to append(...): (line 1014)
            # Processing the call arguments (line 1014)
            # Getting the type of 'dim_stmts' (line 1014)
            dim_stmts_13408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 25), 'dim_stmts', False)
            # Processing the call keyword arguments (line 1014)
            kwargs_13409 = {}
            # Getting the type of 'stmts' (line 1014)
            stmts_13406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1014, 12), 'stmts', False)
            # Obtaining the member 'append' of a type (line 1014)
            append_13407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1014, 12), stmts_13406, 'append')
            # Calling append(args, kwargs) (line 1014)
            append_call_result_13410 = invoke(stypy.reporting.localization.Localization(__file__, 1014, 12), append_13407, *[dim_stmts_13408], **kwargs_13409)
            
            
            # Call to append(...): (line 1015)
            # Processing the call arguments (line 1015)
            # Getting the type of 'dim_var' (line 1015)
            dim_var_13413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 28), 'dim_var', False)
            # Processing the call keyword arguments (line 1015)
            kwargs_13414 = {}
            # Getting the type of 'dim_vars' (line 1015)
            dim_vars_13411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1015, 12), 'dim_vars', False)
            # Obtaining the member 'append' of a type (line 1015)
            append_13412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1015, 12), dim_vars_13411, 'append')
            # Calling append(args, kwargs) (line 1015)
            append_call_result_13415 = invoke(stypy.reporting.localization.Localization(__file__, 1015, 12), append_13412, *[dim_var_13413], **kwargs_13414)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 1017):
        
        # Assigning a Call to a Name (line 1017):
        
        # Call to Tuple(...): (line 1017)
        # Processing the call keyword arguments (line 1017)
        kwargs_13418 = {}
        # Getting the type of 'ast' (line 1017)
        ast_13416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1017, 21), 'ast', False)
        # Obtaining the member 'Tuple' of a type (line 1017)
        Tuple_13417 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1017, 21), ast_13416, 'Tuple')
        # Calling Tuple(args, kwargs) (line 1017)
        Tuple_call_result_13419 = invoke(stypy.reporting.localization.Localization(__file__, 1017, 21), Tuple_13417, *[], **kwargs_13418)
        
        # Assigning a type to the variable 'tuple_node' (line 1017)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1017, 8), 'tuple_node', Tuple_call_result_13419)
        
        # Assigning a Name to a Attribute (line 1018):
        
        # Assigning a Name to a Attribute (line 1018):
        # Getting the type of 'dim_vars' (line 1018)
        dim_vars_13420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 26), 'dim_vars')
        # Getting the type of 'tuple_node' (line 1018)
        tuple_node_13421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1018, 8), 'tuple_node')
        # Setting the type of the member 'elts' of a type (line 1018)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 1018, 8), tuple_node_13421, 'elts', dim_vars_13420)
        
        # Obtaining an instance of the builtin type 'tuple' (line 1020)
        tuple_13422 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1020, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1020)
        # Adding element type (line 1020)
        
        # Call to flatten_lists(...): (line 1020)
        # Processing the call arguments (line 1020)
        # Getting the type of 'stmts' (line 1020)
        stmts_13425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 50), 'stmts', False)
        # Processing the call keyword arguments (line 1020)
        kwargs_13426 = {}
        # Getting the type of 'stypy_functions_copy' (line 1020)
        stypy_functions_copy_13423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 1020)
        flatten_lists_13424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1020, 15), stypy_functions_copy_13423, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 1020)
        flatten_lists_call_result_13427 = invoke(stypy.reporting.localization.Localization(__file__, 1020, 15), flatten_lists_13424, *[stmts_13425], **kwargs_13426)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1020, 15), tuple_13422, flatten_lists_call_result_13427)
        # Adding element type (line 1020)
        # Getting the type of 'tuple_node' (line 1020)
        tuple_node_13428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1020, 58), 'tuple_node')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1020, 15), tuple_13422, tuple_node_13428)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1020)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1020, 8), 'stypy_return_type', tuple_13422)
        
        # ################# End of 'visit_ExtSlice(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_ExtSlice' in the type store
        # Getting the type of 'stypy_return_type' (line 1007)
        stypy_return_type_13429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_13429)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_ExtSlice'
        return stypy_return_type_13429


    @norecursion
    def visit_alias(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_alias'
        module_type_store = module_type_store.open_function_context('visit_alias', 1022, 4, False)
        # Assigning a type to the variable 'self' (line 1023)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1023, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_localization', localization)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_type_store', module_type_store)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_function_name', 'ValueVisitor.visit_alias')
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_varargs_param_name', None)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_kwargs_param_name', None)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_call_defaults', defaults)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_call_varargs', varargs)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        ValueVisitor.visit_alias.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'ValueVisitor.visit_alias', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_alias', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_alias(...)' code ##################

        
        # Assigning a Call to a Name (line 1024):
        
        # Assigning a Call to a Name (line 1024):
        
        # Call to create_str(...): (line 1024)
        # Processing the call arguments (line 1024)
        # Getting the type of 'node' (line 1024)
        node_13432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 52), 'node', False)
        # Obtaining the member 'name' of a type (line 1024)
        name_13433 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 52), node_13432, 'name')
        # Processing the call keyword arguments (line 1024)
        kwargs_13434 = {}
        # Getting the type of 'core_language_copy' (line 1024)
        core_language_copy_13430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1024, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 1024)
        create_str_13431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1024, 22), core_language_copy_13430, 'create_str')
        # Calling create_str(args, kwargs) (line 1024)
        create_str_call_result_13435 = invoke(stypy.reporting.localization.Localization(__file__, 1024, 22), create_str_13431, *[name_13433], **kwargs_13434)
        
        # Assigning a type to the variable 'return_name' (line 1024)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1024, 8), 'return_name', create_str_call_result_13435)
        
        # Assigning a List to a Name (line 1025):
        
        # Assigning a List to a Name (line 1025):
        
        # Obtaining an instance of the builtin type 'list' (line 1025)
        list_13436 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1025, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1025)
        
        # Assigning a type to the variable 'alias_method_call' (line 1025)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1025, 8), 'alias_method_call', list_13436)
        
        # Type idiom detected: calculating its left and rigth part (line 1027)
        # Getting the type of 'node' (line 1027)
        node_13437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 15), 'node')
        # Obtaining the member 'asname' of a type (line 1027)
        asname_13438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1027, 15), node_13437, 'asname')
        # Getting the type of 'None' (line 1027)
        None_13439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1027, 30), 'None')
        
        (may_be_13440, more_types_in_union_13441) = may_not_be_none(asname_13438, None_13439)

        if may_be_13440:

            if more_types_in_union_13441:
                # Runtime conditional SSA (line 1027)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a Call to a Name (line 1028):
            
            # Assigning a Call to a Name (line 1028):
            
            # Call to create_str(...): (line 1028)
            # Processing the call arguments (line 1028)
            # Getting the type of 'node' (line 1028)
            node_13444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 55), 'node', False)
            # Obtaining the member 'asname' of a type (line 1028)
            asname_13445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1028, 55), node_13444, 'asname')
            # Processing the call keyword arguments (line 1028)
            kwargs_13446 = {}
            # Getting the type of 'core_language_copy' (line 1028)
            core_language_copy_13442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1028, 25), 'core_language_copy', False)
            # Obtaining the member 'create_str' of a type (line 1028)
            create_str_13443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1028, 25), core_language_copy_13442, 'create_str')
            # Calling create_str(args, kwargs) (line 1028)
            create_str_call_result_13447 = invoke(stypy.reporting.localization.Localization(__file__, 1028, 25), create_str_13443, *[asname_13445], **kwargs_13446)
            
            # Assigning a type to the variable 'alias_name' (line 1028)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1028, 12), 'alias_name', create_str_call_result_13447)
            
            # Assigning a Call to a Name (line 1029):
            
            # Assigning a Call to a Name (line 1029):
            
            # Call to create_add_alias(...): (line 1029)
            # Processing the call arguments (line 1029)
            # Getting the type of 'alias_name' (line 1029)
            alias_name_13450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 70), 'alias_name', False)
            # Getting the type of 'return_name' (line 1029)
            return_name_13451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 82), 'return_name', False)
            # Getting the type of 'node' (line 1029)
            node_13452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 95), 'node', False)
            # Obtaining the member 'lineno' of a type (line 1029)
            lineno_13453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1029, 95), node_13452, 'lineno')
            # Getting the type of 'node' (line 1029)
            node_13454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 108), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 1029)
            col_offset_13455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1029, 108), node_13454, 'col_offset')
            # Processing the call keyword arguments (line 1029)
            kwargs_13456 = {}
            # Getting the type of 'stypy_functions_copy' (line 1029)
            stypy_functions_copy_13448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1029, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_add_alias' of a type (line 1029)
            create_add_alias_13449 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1029, 32), stypy_functions_copy_13448, 'create_add_alias')
            # Calling create_add_alias(args, kwargs) (line 1029)
            create_add_alias_call_result_13457 = invoke(stypy.reporting.localization.Localization(__file__, 1029, 32), create_add_alias_13449, *[alias_name_13450, return_name_13451, lineno_13453, col_offset_13455], **kwargs_13456)
            
            # Assigning a type to the variable 'alias_method_call' (line 1029)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1029, 12), 'alias_method_call', create_add_alias_call_result_13457)

            if more_types_in_union_13441:
                # SSA join for if statement (line 1027)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Obtaining an instance of the builtin type 'tuple' (line 1031)
        tuple_13458 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1031, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 1031)
        # Adding element type (line 1031)
        
        # Call to flatten_lists(...): (line 1031)
        # Processing the call arguments (line 1031)
        # Getting the type of 'alias_method_call' (line 1031)
        alias_method_call_13461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 50), 'alias_method_call', False)
        # Processing the call keyword arguments (line 1031)
        kwargs_13462 = {}
        # Getting the type of 'stypy_functions_copy' (line 1031)
        stypy_functions_copy_13459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 1031)
        flatten_lists_13460 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1031, 15), stypy_functions_copy_13459, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 1031)
        flatten_lists_call_result_13463 = invoke(stypy.reporting.localization.Localization(__file__, 1031, 15), flatten_lists_13460, *[alias_method_call_13461], **kwargs_13462)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1031, 15), tuple_13458, flatten_lists_call_result_13463)
        # Adding element type (line 1031)
        # Getting the type of 'return_name' (line 1031)
        return_name_13464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1031, 70), 'return_name')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1031, 15), tuple_13458, return_name_13464)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1031)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1031, 8), 'stypy_return_type', tuple_13458)
        
        # ################# End of 'visit_alias(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_alias' in the type store
        # Getting the type of 'stypy_return_type' (line 1022)
        stypy_return_type_13465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1022, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_13465)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_alias'
        return stypy_return_type_13465


# Assigning a type to the variable 'ValueVisitor' (line 7)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 7, 0), 'ValueVisitor', ValueVisitor)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
