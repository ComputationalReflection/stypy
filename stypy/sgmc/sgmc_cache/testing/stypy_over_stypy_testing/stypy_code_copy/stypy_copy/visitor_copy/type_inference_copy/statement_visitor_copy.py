
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: import os
2: 
3: from stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import *
4: from stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, \
5:     conditional_statements_copy, idioms_copy
6: import value_visitor_copy
7: import ast
8: 
9: class StatementVisitor(ast.NodeVisitor):
10:     '''
11:     Visitor for statement nodes, that are AST nodes that return only statement lists. If when processing a statement
12:     node one of its children nodes is a value node, a ValueVisitor is automatically run to process this child node.
13:     '''
14: 
15:     def __init__(self, filename):
16:         self.file_name = filename
17: 
18:     def visit(self, node, context):
19:         '''Visit a node.'''
20:         method = 'visit_' + node.__class__.__name__
21:         visitor = getattr(self, method, self.generic_visit)
22:         if visitor == self.generic_visit:
23:             return visitor(node, context + [method])
24:         return visitor(node, context)
25: 
26:     def generic_visit(self, node, context):
27:         if hasattr(value_visitor_copy.ValueVisitor, context[-1]):
28:             return self.visit_value(node, context[:-1])
29:         else:
30:             raise Exception("SENTENCE VISITOR: " + context[-1] + " is not yet implemented")
31: 
32:     def __visit_instruction_body(self, body, context):
33:         new_stmts = []
34: 
35:         # Visit all body instructions
36:         v_visitor = value_visitor_copy.ValueVisitor(self.file_name)
37:         for stmt in body:
38:             stmts, temp = v_visitor.visit(stmt, context)
39:             if isinstance(stmts, list):
40:                 new_stmts.extend(stmts)
41:             else:
42:                 new_stmts.append(stmts)
43:                 # new_stmts = stypy_functions_copy.flatten_lists(new_stmts)
44: 
45:         return new_stmts
46: 
47:     def visit_value(self, node, context):
48:         v_visitor = value_visitor_copy.ValueVisitor(self.file_name)
49: 
50:         result, temp = v_visitor.visit(node, context)
51: 
52:         return result, temp
53: 
54:     # ######################################### MAIN MODULE #############################################
55: 
56:     def visit_Module(self, node, context):
57:         # print inspect.stack()[0][3]
58: 
59:         context.append(node)
60:         stmts = self.__visit_instruction_body(node.body, context)
61:         context.remove(node)
62: 
63:         return stmts
64: 
65:     # ######################################### functions_copy #############################################
66: 
67:     def visit_FunctionDef(self, node, context):
68:         # print inspect.stack()[0][3]
69: 
70:         self.building_function_name = node.name
71: 
72:         # Function declaration localization
73:         decl_localization = core_language_copy.create_Name('localization', False, line=node.lineno, column=node.col_offset)
74: 
75:         # Decorators are declarative properties of methods or functions_copy that give problems if directly ported to
76:         # type-inference equivalent code. For now, we only translate the @staticmethod decorator.
77:         decorator_list = []
78:         if len(node.decorator_list) > 0:
79:             for dec in node.decorator_list:
80:                 if isinstance(dec, ast.Name):
81:                     if dec.id == "staticmethod":
82:                         decorator_list.append(dec)
83: 
84:         # The 'norecursion' decorator, mandatory in every stypy code generation to enable the type inference program
85:         # to not to hang on recursive calls.
86:         decorator_list.append(core_language_copy.create_Name('norecursion', line=node.lineno - 1, column=node.col_offset))
87: 
88:         defaults_types = []
89:         defaults_stmts = []
90: 
91:         for elem in node.args.defaults:
92:             stmts, type_ = self.visit(elem, context)
93:             defaults_types.append(type_)
94:             defaults_stmts.append(stmts)
95: 
96:         # Create and add the function definition header
97:         function_def = functions_copy.create_function_def(node.name,
98:                                                      decl_localization,
99:                                                      decorator_list,
100:                                                      context,
101:                                                      line=node.lineno,
102:                                                      column=node.col_offset)
103: 
104:         # Defaults are stored in a variable at the beginning of the function
105:         function_def.body.append(stypy_functions_copy.create_src_comment("Assign values to the parameters with defaults"))
106:         function_def.body.append(stypy_functions_copy.create_set_unreferenced_var_check(False))
107:         function_def.body.append(defaults_stmts)
108:         function_def.body.append(stypy_functions_copy.create_set_unreferenced_var_check(True))
109:         function_def.body.append(core_language_copy.create_Assign(core_language_copy.create_Name("defaults"),
110:                                                              data_structures_copy.create_list(defaults_types)))
111: 
112:         # Generate code from setting a new context in the type store
113:         function_def.body.append(stypy_functions_copy.create_src_comment
114:                                  ("Create a new context for function '{0}'".format(node.name)))
115:         context_set = functions_copy.create_context_set(node.name, node.lineno,
116:                                                    node.col_offset)
117:         function_def.body.append(context_set)
118: 
119:         if functions_copy.is_method(context):
120:             function_def.body.append(
121:                 stypy_functions_copy.create_set_type_of('self', core_language_copy.create_Name('type_of_self'), node.lineno + 1,
122:                                                    node.col_offset))
123: 
124:         # Generate code for arity checking of the function arguments and assigning them to suitable local variables
125:         function_def.body.append(stypy_functions_copy.create_src_comment("Passed parameters checking function"))
126: 
127:         # Generate argument number test
128:         f_preamble = functions_copy.create_arg_number_test(node, context)
129: 
130:         function_def.body.append(f_preamble)
131: 
132:         # Generate code for create a new stack push for error reporting.
133:         function_def.body.append(stypy_functions_copy.create_src_comment("Stacktrace push for error reporting"))
134:         declared_arguments = functions_copy.obtain_arg_list(node.args, functions_copy.is_method(context))
135:         stack_push = functions_copy.create_stacktrace_push(node.name, declared_arguments)
136:         function_def.body.append(stack_push)
137: 
138:         # Initialize the variable where the return of the function will be stored.
139:         # This is needed due to a single return statement must exist within a function in order to not to conflict with
140:         # the SSA algorithm
141:         function_def.body.append(stypy_functions_copy.create_src_comment("Default return type storage variable (SSA)"))
142:         function_def.body.append(stypy_functions_copy.create_default_return_variable())
143: 
144:         function_def.body.append(stypy_functions_copy.create_blank_line())
145:         function_def.body.append(
146:             stypy_functions_copy.create_src_comment("Begin of the function '{0}' code".format(node.name)))
147: 
148:         context.append(node)
149:         # Visit the function body
150:         function_def.body.extend(self.__visit_instruction_body(node.body, context))
151:         context.remove(node)
152: 
153:         function_def.body.append(
154:             stypy_functions_copy.create_end_block_src_comment("End of the function '{0}' code".format(node.name)))
155: 
156:         # Pop the error reporting stack trace
157:         function_def.body.append(stypy_functions_copy.create_src_comment("Stacktrace pop (error reporting)"))
158:         stack_pop = functions_copy.create_stacktrace_pop()
159:         function_def.body.append(stack_pop)
160: 
161:         # Generate code for pop the function context.
162:         function_def.body.append(stypy_functions_copy.create_src_comment
163:                                  ("Destroy the context of function '{0}'".format(node.name)))
164: 
165:         function_def.body.append(stypy_functions_copy.create_store_return_from_function(node.lineno, node.col_offset))
166:         context_unset = functions_copy.create_context_unset()
167:         function_def.body.append(context_unset)
168: 
169:         # Finally, return the return value (contained in a predefined var name)
170:         # in the single return statement of each function.
171:         if not functions_copy.is_constructor(node):
172:             function_def.body.append(stypy_functions_copy.create_src_comment("Return type of the function"))
173:             function_def.body.append(stypy_functions_copy.create_return_from_function(node.lineno, 0))
174: 
175:         if not functions_copy.is_method(context):
176:             # Register the function type outside the function context
177:             register_expr = stypy_functions_copy.create_set_type_of(node.name, core_language_copy.create_Name(node.name),
178:                                                                node.lineno, node.col_offset)
179:         else:
180:             register_expr = []
181: 
182:         return stypy_functions_copy.flatten_lists(function_def, register_expr)
183: 
184:     def visit_Return(self, node, context):
185:         # print inspect.stack()[0][3]
186: 
187:         union_type = core_language_copy.create_attribute("union_type", "UnionType")
188:         union_add = core_language_copy.create_attribute(union_type, "add")
189:         default_function_ret_var = core_language_copy.create_Name(stypy_functions_copy.default_function_ret_var_name)
190:         if node.value is not None:
191:             get_value_stmts, value_var = self.visit_value(node.value, context)
192:         else:
193:             get_value_stmts, value_var = [], core_language_copy.create_Name("types.NoneType")
194: 
195:         union_call = functions_copy.create_call(union_add, [default_function_ret_var, value_var])
196: 
197:         # default_function_ret_var = core_language_copy.create_Name(stypy_functions_copy.default_function_ret_var_name)
198:         # ret_assign = core_language_copy.create_Assign(default_function_ret_var, union_call)
199:         ret_assign = stypy_functions_copy.assign_as_return_type(union_call)
200:         return stypy_functions_copy.flatten_lists(get_value_stmts, ret_assign)
201: 
202:     # ################################################ CLASSES ##########################################
203: 
204:     def visit_ClassDef(self, node, context):
205:         # print inspect.stack()[0][3]
206: 
207:         self.building_class_name = node.name
208: 
209:         # Writes the instruction: from stypy import *
210:         initial_comment = stypy_functions_copy.create_src_comment("Declaration of the '{0}' class".format(node.name))
211: 
212:         # Obtaining the type of the superclasses of this class (if they exist)
213:         superclass_inst = []
214:         new_bases = []
215:         for class_name in node.bases:
216:             superclass_, type_var = self.visit(class_name,
217:                                                context)  # stypy_functions_copy.create_get_type_of(class_name.id, node.lineno, node.col_offset)
218:             # superclass_type, superclass_var = stypy_functions_copy.create_temp_Assign(superclass_, node.lineno,
219:             #                                                                      node.col_offset)
220:             # superclass_inst.append(superclass_type)
221:             # new_bases.append(superclass_var)
222:             superclass_inst.append(superclass_)
223:             new_bases.append(type_var)
224: 
225:         node.bases = []
226: 
227:         # Remove class decorators (it may interfere in type inference generated code)
228:         node.decorator_list = []
229: 
230:         context.append(node)
231:         # Visit all body instructions
232:         node.body = self.__visit_instruction_body(node.body, context)
233: 
234:         context.remove(node)
235:         # Register the function type outside the function context
236:         register_expr = stypy_functions_copy.create_set_type_of(node.name, core_language_copy.create_Name(node.name),
237:                                                            node.lineno, node.col_offset)
238: 
239:         # Base type assignment
240:         if len(new_bases) > 0:
241:             class_obj_inst, class_var = stypy_functions_copy.create_get_type_of(node.name,
242:                                                                            node.lineno, node.col_offset)
243:             change_base_types_att = core_language_copy.create_attribute(class_var, 'change_base_types')
244:             bases_tuple = core_language_copy.create_type_tuple(*new_bases)
245:             localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
246:             change_bases_call = functions_copy.create_call_expression(change_base_types_att, [localization, bases_tuple])
247:             change_bases = [class_obj_inst, change_bases_call]
248:         else:
249:             change_bases = []
250: 
251:         return stypy_functions_copy.flatten_lists(initial_comment, superclass_inst, node,
252:                                              stypy_functions_copy.create_blank_line(), register_expr, change_bases)
253: 
254:     # ################################################ ASSIGNMENTS ###################################################
255: 
256:     def visit_Assign(self, node, context):
257:         # print inspect.stack()[0][3]
258: 
259:         get_value_stmts, temp_value = self.visit_value(node.value, context)
260: 
261:         if type(temp_value) is ast.Tuple:
262:             temp_value = temp_value.elts[0]
263: 
264:         if isinstance(node.targets[0], ast.Name):
265:             name = node.targets[0]
266:             set_type_of_stmts = stypy_functions_copy.create_set_type_of(name.id, temp_value, name.lineno,
267:                                                                    name.col_offset)
268:         else:
269:             get_target_stmts, target_var = self.visit(node.targets[0].value, context)
270:             if type(target_var) is ast.Tuple:
271:                 target_var = target_var.elts[0]
272: 
273:             if isinstance(node.targets[0], ast.Subscript):
274:                 # temp_value: type to add
275:                 # target_var: container
276:                 # node.slice: subscript to calculate
277:                 slice_stmts, slice_var = self.visit(node.targets[0].slice, context)
278:                 set_type_of_stmts = stypy_functions_copy.create_add_stored_type(target_var, slice_var, temp_value,
279:                                                                            node.targets[0].lineno,
280:                                                                            node.targets[0].col_offset)
281:                 set_type_of_stmts = stypy_functions_copy.flatten_lists(get_target_stmts, slice_stmts, set_type_of_stmts)
282: 
283:             else:
284:                 set_type_of_stmts = stypy_functions_copy.create_set_type_of_member(target_var, node.targets[0].attr,
285:                                                                               temp_value,
286:                                                                               node.targets[0].lineno,
287:                                                                               node.targets[0].col_offset)
288: 
289:                 set_type_of_stmts = stypy_functions_copy.flatten_lists(get_target_stmts, set_type_of_stmts)
290: 
291:         return stypy_functions_copy.flatten_lists(get_value_stmts, set_type_of_stmts)
292: 
293:     # ################################################ PASS NODES #####################################################
294: 
295:     def visit_Pass(self, node, context):
296:         return node
297: 
298:     # ################################################ IF #####################################################
299: 
300:     def visit_If(self, node, context):
301:         # print inspect.stack()[0][3]
302: 
303:         if_stmt_body = []
304:         if_stmt_orelse = []
305: 
306:         begin_if_comment = stypy_functions_copy.create_blank_line()
307: 
308:         is_an_idiom, left_stmts_tuple, rigth_stmts_tuple, idiom_name = idioms_copy.is_recognized_idiom(node.test, self,
309:                                                                                                   context)
310: 
311:         if is_an_idiom:
312:             condition_comment = stypy_functions_copy.create_src_comment(
313:                 "Type idiom detected: calculating its left and rigth part", node.lineno)
314:             # Statements for the left part of the idiom
315:             if_stmt_body += left_stmts_tuple[0]
316:             # Statements for the right part of the idiom
317:             if_stmt_body += rigth_stmts_tuple[0]
318: 
319:             test_condition_call = []
320:             condition_stmt = []
321:             if_stmt_body.append(stypy_functions_copy.create_blank_line())
322:         else:
323:             # Process conditional expression of the if
324:             condition_stmt, if_stmt_test = self.visit(node.test, context)
325: 
326:             # Test the type of the if condition
327:             condition_comment = stypy_functions_copy.create_src_comment("Testing the type of an if condition", node.lineno)
328:             attribute = core_language_copy.create_Name("is_suitable_condition")
329:             localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
330:             test_condition_call = functions_copy.create_call_expression(attribute, [localization, if_stmt_test])
331: 
332:         more_types_temp_var = None
333:         if is_an_idiom:
334:             idiom_if_func = core_language_copy.create_Name(idioms_copy.get_recognized_idiom_function(idiom_name), node.lineno,
335:                                                       node.col_offset)
336:             call_to_idiom_if_func = functions_copy.create_call(idiom_if_func, [left_stmts_tuple[1], rigth_stmts_tuple[1]])
337: 
338:             may_be_type_temp_var = stypy_functions_copy.new_temp_Name(False, idioms_copy.may_be_var_name, node.lineno,
339:                                                                  node.col_offset)
340:             more_types_temp_var = stypy_functions_copy.new_temp_Name(False, idioms_copy.more_types_var_name, node.lineno,
341:                                                                 node.col_offset)
342:             if_func_ret_type_tuple = core_language_copy.create_type_tuple(may_be_type_temp_var, more_types_temp_var)
343:             may_be_type_assignment = core_language_copy.create_Assign(if_func_ret_type_tuple, call_to_idiom_if_func)
344:             if_stmt_body.append(stypy_functions_copy.flatten_lists(may_be_type_assignment))
345: 
346:             # Create first idiom if
347:             idiom_first_if_body = []
348:             if_may_be = conditional_statements_copy.create_if(may_be_type_temp_var, idiom_first_if_body)
349:             if_stmt_body.append(if_may_be)
350: 
351:             # Create second idiom if
352:             idiom_more_types_body = []
353:             if_more_types = conditional_statements_copy.create_if(more_types_temp_var, idiom_more_types_body)
354: 
355:             # Begin the second if body
356:             idiom_more_types_body.append(stypy_functions_copy.create_src_comment("Runtime conditional SSA", node.lineno))
357:             clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
358:             idiom_more_types_body.append(clone_stmt1)
359: 
360:             # Needed to remove the "used before assignment" warning in the generated body: Basically we store the
361:             # existing type store into the temp var name instead of cloning it.
362:             may_be_type_assignment = core_language_copy.create_Assign(type_store_var1, core_language_copy.create_Name(
363:                 stypy_functions_copy.default_module_type_store_var_name))
364:             if_more_types.orelse = [may_be_type_assignment]
365: 
366:             idiom_first_if_body.append(if_more_types)  # Second if goes inside first one
367: 
368:             # Set the type of the condition var according to the identified idiom
369: 
370:             set_type = idioms_copy.set_type_of_idiom_var(idiom_name, "if", node.test, rigth_stmts_tuple[1], node.lineno,
371:                                                     node.col_offset)
372:             if not len(set_type) == 0:
373:                 idiom_first_if_body.append(set_type)
374: 
375:             body_stmts_location = idiom_first_if_body
376:         else:
377:             # Begin the if body
378:             if_stmt_body.append(stypy_functions_copy.create_src_comment("SSA begins for if statement", node.lineno))
379:             clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
380:             if_stmt_body.append(clone_stmt1)
381:             body_stmts_location = if_stmt_body
382: 
383:         # Process if body sentences
384:         body_stmts_location.extend(self.__visit_instruction_body(node.body, context))
385: 
386:         # Process else branch
387:         if len(node.orelse) > 0:
388:             if is_an_idiom:
389:                 idiom_more_types_body_2 = []
390:                 if_more_types_2 = conditional_statements_copy.create_if(more_types_temp_var, idiom_more_types_body_2)
391:                 # Begin the third if body
392:                 idiom_more_types_body_2.append(
393:                     stypy_functions_copy.create_src_comment("Runtime conditional SSA for else branch", node.lineno))
394:                 clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
395:                 idiom_more_types_body_2.append(clone_stmt2)
396:                 body_stmts_location.append(if_more_types_2)
397:                 body_stmts_location = if_stmt_body  # Return to the parent sentence trunk of the function
398: 
399:                 # Process else with idioms_copy part:
400:                 # Create first idiom if
401:                 idiom_first_if_body_else = []
402: 
403:                 or_cond = ast.BoolOp()
404:                 or_cond.op = ast.Or()
405:                 not_cond = ast.UnaryOp()
406:                 not_cond.op = ast.Not()
407:                 not_cond.operand = may_be_type_temp_var
408:                 or_cond.values = [not_cond, more_types_temp_var]
409: 
410:                 if_may_be = conditional_statements_copy.create_if(or_cond, idiom_first_if_body_else)
411:                 body_stmts_location.append(if_may_be)
412: 
413:                 # Create second idiom if
414:                 idiom_more_types_body_else = []
415: 
416:                 and_cond = ast.BoolOp()
417:                 and_cond.op = ast.And()
418:                 and_cond.values = [may_be_type_temp_var, more_types_temp_var]
419: 
420:                 if_more_types = conditional_statements_copy.create_if(and_cond, idiom_more_types_body_else)
421:                 # Begin the second if body
422:                 idiom_more_types_body_else.append(
423:                     stypy_functions_copy.create_src_comment("Runtime conditional SSA", node.lineno))
424:                 set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
425:                 idiom_more_types_body_else.append(set_type_store1)
426: 
427:                 idiom_first_if_body_else.append(if_more_types)  # Second if goes inside first one
428: 
429:                 # Set the type of the condition var according to the identified idiom in the else branch
430:                 set_type = idioms_copy.set_type_of_idiom_var(idiom_name, "else", node.test, rigth_stmts_tuple[1],
431:                                                         node.lineno,
432:                                                         node.col_offset)
433: 
434:                 idiom_first_if_body_else.append(set_type)
435:                 body_stmts_location = idiom_first_if_body_else
436:             else:
437:                 if_stmt_body.append(
438:                     stypy_functions_copy.create_src_comment("SSA branch for the else part of an if statement", node.lineno))
439:                 clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
440:                 if_stmt_body.append(clone_stmt2)
441: 
442:                 set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
443:                 if_stmt_body.append(set_type_store1)
444:                 body_stmts_location = if_stmt_body
445: 
446:             # Process else body sentences
447:             body_stmts_location.extend(self.__visit_instruction_body(node.orelse, context))
448: 
449:         else:
450:             clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
451:             body_stmts_location.append(clone_stmt2)
452:             # No else means that the after-if type store is the one that is currently on use and the
453:             # pre-if type store is the one cloned before. Else type store is None
454:             # type_store_var2 = core_language_copy.create_Name(stypy_functions_copy.default_module_type_store_var_name)
455:             type_store_var3 = core_language_copy.create_Name('None')
456: 
457:         if is_an_idiom:
458:             if len(node.orelse) == 0:
459:                 idiom_more_types_body_final = []
460:                 if_more_types_final = conditional_statements_copy.create_if(more_types_temp_var, idiom_more_types_body_final)
461:                 body_stmts_location.append(if_more_types_final)
462:                 final_stmts = idiom_more_types_body_final
463:             else:
464:                 idiom_more_types_body_final = []
465: 
466:                 and_cond = ast.BoolOp()
467:                 and_cond.op = ast.And()
468:                 and_cond.values = [may_be_type_temp_var, more_types_temp_var]
469: 
470:                 if_more_types_final = conditional_statements_copy.create_if(and_cond, idiom_more_types_body_final)
471:                 body_stmts_location.append(if_more_types_final)
472:                 clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
473:                 idiom_more_types_body_final.append(clone_stmt3)
474: 
475:                 final_stmts = idiom_more_types_body_final
476:         else:
477:             if len(node.orelse) > 0:
478:                 clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
479:                 if_stmt_body.append(clone_stmt3)
480:             final_stmts = if_stmt_body
481: 
482: 
483:         # Join if
484:         final_stmts.append(stypy_functions_copy.create_src_comment("SSA join for if statement", node.lineno))
485:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("ssa_join_with_else_branch",
486:                                                                              [type_store_var1, type_store_var2,
487:                                                                               type_store_var3])
488:         final_stmts.append(join_stmt)
489: 
490:         # Calculate the final type store
491:         set_type_store2 = stypy_functions_copy.create_set_type_store(final_type_store)
492:         final_stmts.append(set_type_store2)
493: 
494:         # Unify all if body statements
495:         all_if_stmts = if_stmt_body
496: 
497:         # Unify all if sentences
498:         if_stmt = stypy_functions_copy.flatten_lists(condition_comment, test_condition_call, all_if_stmts)
499: 
500:         end_if_comment = stypy_functions_copy.create_blank_line()
501: 
502:         return stypy_functions_copy.flatten_lists(begin_if_comment,
503:                                              condition_stmt,
504:                                              if_stmt,
505:                                              end_if_comment)
506: 
507:     # ################################################ FOR #####################################################
508: 
509:     def visit_For(self, node, context):
510:         # print inspect.stack()[0][3]
511: 
512:         for_stmt_body = []
513:         for_stmt_orelse = []
514: 
515:         begin_for_comment = stypy_functions_copy.create_blank_line()
516: 
517:         # Process for test
518:         iter_stmt, for_stmt_test = self.visit(node.iter, context)
519: 
520:         # Check if the for statement is suitable for iteration
521:         condition_comment = stypy_functions_copy.create_src_comment("Testing the type of a for loop iterable", node.lineno)
522:         loop_test_fname = core_language_copy.create_Name("is_suitable_for_loop_condition")
523:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
524:         condition_call = functions_copy.create_call_expression(loop_test_fname, [localization, for_stmt_test])
525: 
526:         # Get the type of the loop iteration variable and assign it
527:         get_target_comment = stypy_functions_copy.create_src_comment("Getting the type of the for loop variable",
528:                                                                 node.lineno)
529:         for_stmt_body.append(get_target_comment)
530:         loop_target_fname = core_language_copy.create_Name("get_type_of_for_loop_variable")
531:         target_assign_call = functions_copy.create_call(loop_target_fname, [localization, for_stmt_test])
532:         target_assign, target_assign_var = stypy_functions_copy.create_temp_Assign(target_assign_call, node.lineno,
533:                                                                               node.col_offset)
534:         for_stmt_body.append(target_assign)
535: 
536:         if isinstance(node.target, ast.Tuple):
537:             get_elements_call = core_language_copy.create_attribute(target_assign_var.id, "get_elements_type")
538:             assign_target_type = []
539:             for elt in node.target.elts:
540:                 call_to_elements = functions_copy.create_call(get_elements_call, [])
541:                 type_set = stypy_functions_copy.create_set_type_of(elt.id, call_to_elements, node.lineno,
542:                                                               node.col_offset)
543:                 assign_target_type.append(type_set)
544:         else:
545:             assign_target_type = stypy_functions_copy.create_set_type_of(node.target.id, target_assign_var, node.lineno,
546:                                                                     node.col_offset)
547: 
548:         for_stmt_body.append(assign_target_type)
549: 
550:         # For body
551:         for_stmt_body.append(stypy_functions_copy.create_src_comment("SSA begins for a for statement", node.lineno))
552:         clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
553:         for_stmt_body.append(clone_stmt1)
554: 
555:         # Process for body statements
556:         for_stmt_body.extend(self.__visit_instruction_body(node.body, context))
557: 
558:         for_stmt_body.append(
559:             stypy_functions_copy.create_src_comment("SSA branch for the else part of a for statement", node.lineno))
560:         clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
561:         for_stmt_body.append(clone_stmt2)
562: 
563:         # Else part of a for statement
564:         set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
565:         for_stmt_body.append(set_type_store1)
566: 
567:         for_stmt_orelse.extend(self.__visit_instruction_body(node.orelse, context))
568: 
569:         # Join and finish for
570:         for_stmt_orelse.append(stypy_functions_copy.create_src_comment("SSA join for a for statement"))
571:         clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
572:         for_stmt_orelse.append(clone_stmt3)
573: 
574:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("ssa_join_with_else_branch",
575:                                                                              [type_store_var1, type_store_var2,
576:                                                                               type_store_var3])
577:         for_stmt_orelse.append(join_stmt)
578: 
579:         # Assign final type store
580:         set_type_store2 = stypy_functions_copy.create_set_type_store(final_type_store)
581:         for_stmt_orelse.append(set_type_store2)
582: 
583:         for_stmts = for_stmt_body + for_stmt_orelse
584:         for_stmt = stypy_functions_copy.flatten_lists(condition_comment, condition_call, for_stmts)
585: 
586:         end_for_comment = stypy_functions_copy.create_blank_line()
587: 
588:         return stypy_functions_copy.flatten_lists(begin_for_comment,
589:                                              iter_stmt,
590:                                              for_stmt,
591:                                              end_for_comment)
592: 
593:     # ################################################ WHILE #####################################################
594: 
595:     def visit_While(self, node, context):
596:         # print inspect.stack()[0][3]
597: 
598:         while_stmt_body = []
599:         while_stmt_orelse = []
600: 
601:         begin_while_comment = stypy_functions_copy.create_blank_line()
602: 
603:         # Process the condition of the while statement
604:         condition_stmt, while_stmt_test = self.visit(node.test, context)
605: 
606:         # Test the type of the while condition
607:         condition_comment = stypy_functions_copy.create_src_comment("Testing the type of an if condition", node.lineno)
608:         attribute = core_language_copy.create_Name("is_suitable_condition")
609:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
610:         condition_call = functions_copy.create_call_expression(attribute, [localization, while_stmt_test])
611: 
612:         # Process the body of the while statement
613:         while_stmt_body.append(stypy_functions_copy.create_src_comment("SSA begins for while statement", node.lineno))
614:         clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
615:         while_stmt_body.append(clone_stmt1)
616: 
617:         # While body
618:         while_stmt_body.extend(self.__visit_instruction_body(node.body, context))
619: 
620:         # Else part of the while statements
621:         while_stmt_body.append(
622:             stypy_functions_copy.create_src_comment("SSA branch for the else part of a while statement", node.lineno))
623:         clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
624:         while_stmt_body.append(clone_stmt2)
625: 
626:         set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
627:         while_stmt_body.append(set_type_store1)
628: 
629:         # While else part
630:         while_stmt_orelse.extend(self.__visit_instruction_body(node.orelse, context))
631: 
632:         # Join type stores and finish while
633:         while_stmt_orelse.append(stypy_functions_copy.create_src_comment("SSA join for while statement", node.lineno))
634:         clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
635:         while_stmt_orelse.append(clone_stmt3)
636: 
637:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("ssa_join_with_else_branch",
638:                                                                              [type_store_var1, type_store_var2,
639:                                                                               type_store_var3])
640:         while_stmt_orelse.append(join_stmt)
641: 
642:         # Final type store
643:         set_type_store2 = stypy_functions_copy.create_set_type_store(final_type_store)
644:         while_stmt_orelse.append(set_type_store2)
645: 
646:         all_while_stmts = while_stmt_body + while_stmt_orelse
647:         while_stmt = stypy_functions_copy.flatten_lists(condition_comment, condition_call, all_while_stmts)
648: 
649:         end_while_comment = stypy_functions_copy.create_blank_line()
650:         return stypy_functions_copy.flatten_lists(begin_while_comment,
651:                                              condition_stmt,
652:                                              while_stmt,
653:                                              end_while_comment)
654: 
655:     # ################################################ EXCEPTIONS #####################################################
656: 
657:     def visit_TryExcept(self, node, context):
658:         # print inspect.stack()[0][3]
659: 
660:         try_except_stmts = []
661:         handler_type_stores = []
662:         begin_except_comment = stypy_functions_copy.create_blank_line()
663: 
664:         # Begin the exception body
665:         try_except_stmts.append(stypy_functions_copy.create_src_comment("SSA begins for try-except statement", node.lineno))
666:         clone_stmt1, pre_try_type_store = stypy_functions_copy.create_clone_type_store()
667:         try_except_stmts.append(clone_stmt1)
668: 
669:         # Process exception body sentences
670:         try_except_stmts.extend(self.__visit_instruction_body(node.body, context))
671: 
672:         try_except_stmts.append(
673:             stypy_functions_copy.create_src_comment("SSA branch for the except part of a try statement", node.lineno))
674:         clone_stmt2, post_try_type_store = stypy_functions_copy.create_clone_type_store()
675:         try_except_stmts.append(clone_stmt2)
676: 
677:         # Process all except handlers
678:         for handler in node.handlers:
679:             if handler.type is None:
680:                 except_handler = "<any exception>"
681:             else:
682:                 except_handler = handler.type.id
683: 
684:             try_except_stmts.append(stypy_functions_copy.create_src_comment(
685:                 "SSA branch for the except '{0}' branch of a try statement".format(except_handler), node.lineno))
686: 
687:             set_type_store_handler = stypy_functions_copy.create_set_type_store(pre_try_type_store)
688:             try_except_stmts.append(set_type_store_handler)
689: 
690:             if not handler.type is None and not handler.name is None:
691:                 try_except_stmts.append(stypy_functions_copy.create_src_comment("Storing handler type"))
692:                 handler_type_stmts, handle_type_var = self.visit(handler.type, context)
693:                 handler_name_assign = stypy_functions_copy.create_set_type_of(handler.name.id, handle_type_var,
694:                                                                          handler.lineno,
695:                                                                          handler.col_offset)
696:                 try_except_stmts.append(handler_type_stmts)
697:                 try_except_stmts.append(handler_name_assign)
698: 
699:             # Process except handler body sentences
700:             try_except_stmts.extend(self.__visit_instruction_body(handler.body, context))
701: 
702:             clone_stmt_handler, type_store_except_handler = stypy_functions_copy.create_clone_type_store()
703:             try_except_stmts.append(clone_stmt_handler)
704:             handler_type_stores.append(type_store_except_handler)
705: 
706:         # Else branch
707:         try_except_stmts.append(stypy_functions_copy.create_src_comment(
708:             "SSA branch for the else branch of a try statement", node.lineno))
709:         set_type_store_handler = stypy_functions_copy.create_set_type_store(pre_try_type_store)
710:         try_except_stmts.append(set_type_store_handler)
711: 
712:         # Process except handler body sentences
713:         if len(node.orelse) > 0:
714:             try_except_stmts.extend(self.__visit_instruction_body(node.orelse, context))
715: 
716:             clone_stmt_handler, type_store_else_handler = stypy_functions_copy.create_clone_type_store()
717:             try_except_stmts.append(clone_stmt_handler)
718:             handler_type_stores.append(type_store_else_handler)
719: 
720:         # Join try
721:         try_except_stmts.append(stypy_functions_copy.create_src_comment("SSA join for try-except statement", node.lineno))
722:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("join_exception_block",
723:                                                                              [pre_try_type_store, post_try_type_store,
724:                                                                               core_language_copy.create_Name(
725:                                                                                   "None")] + handler_type_stores)
726:         try_except_stmts.append(join_stmt)
727: 
728:         # Calculate the final type store
729:         set_type_store_final = stypy_functions_copy.create_set_type_store(final_type_store)
730:         try_except_stmts.append(set_type_store_final)
731: 
732:         # Unify all if sentences
733:         all_try_except_stmt = stypy_functions_copy.flatten_lists(begin_except_comment, try_except_stmts)
734: 
735:         end_except_comment = stypy_functions_copy.create_blank_line()
736: 
737:         return stypy_functions_copy.flatten_lists(begin_except_comment,
738:                                              all_try_except_stmt,
739:                                              end_except_comment)
740: 
741:     def visit_TryFinally(self, node, context):
742:         # print inspect.stack()[0][3]
743:         try_finally_stmts = []
744: 
745:         initial_comment = stypy_functions_copy.create_src_comment("Try-finally block", node.lineno)
746:         try_finally_stmts.append(initial_comment)
747: 
748:         # Process exception body sentences
749:         try_finally_stmts.extend(self.__visit_instruction_body(node.body, context))
750: 
751:         try_finally_stmts.append(stypy_functions_copy.create_blank_line())
752:         finally_comment = stypy_functions_copy.create_src_comment("finally branch of the try-finally block",
753:                                                              node.lineno)
754:         try_finally_stmts.append(finally_comment)
755: 
756:         # Process exception body sentences
757:         try_finally_stmts.extend(self.__visit_instruction_body(node.finalbody, context))
758: 
759:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
760:                                              try_finally_stmts,
761:                                              stypy_functions_copy.create_blank_line())
762: 
763:     # ################################################ IMPORTS ##########################################
764: 
765:     def visit_Import(self, node, context):
766:         # print inspect.stack()[0][3]
767:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
768:         call_stmts = []
769: 
770:         import_func = core_language_copy.create_Name("import_elements_from_external_module")
771: 
772:         dir_name = os.path.dirname(self.file_name)
773:         alias_stmt = []
774:         for alias in node.names:
775:             call_stmts.append(
776:                 stypy_functions_copy.create_src_comment("Importing '{0}' module".format(alias.name), node.lineno))
777:             stypy_functions_copy.assign_line_and_column(alias, node)
778:             alias_stmt, alias_var = self.visit(alias, context)
779:             call = functions_copy.create_call_expression(import_func, [localization,
780:                                                                  # core_language_copy.create_str(dir_name),
781:                                                                   alias_var,  # core_language_copy.create_str(alias.name),
782:                                                                   core_language_copy.create_Name("type_store")])
783:             call_stmts.append(call)
784: 
785:         return stypy_functions_copy.flatten_lists(call_stmts, alias_stmt,
786:                                              stypy_functions_copy.create_blank_line())
787: 
788:     def visit_ImportFrom(self, node, context):
789:         # print inspect.stack()[0][3]
790:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
791:         call_stmts = []
792: 
793:         call_stmts.append(
794:             stypy_functions_copy.create_src_comment("Importing from '{0}' module".format(node.module), node.lineno))
795:         import_func = core_language_copy.create_Name("import_elements_from_external_module")
796: 
797:         dir_name = os.path.dirname(self.file_name)
798:         elements = []
799:         alias_stmt = []
800:         for alias in node.names:
801:             stypy_functions_copy.assign_line_and_column(alias, node)
802:             alias_stmt, alias_var = self.visit(alias, context)
803:             elements.append(alias_var)  # core_language_copy.create_str(alias.name))
804: 
805:         starargs = data_structures_copy.create_list(elements)
806:         call = functions_copy.create_call_expression(import_func, [localization,
807:                                                               #core_language_copy.create_str(dir_name),
808:                                                               core_language_copy.create_str(node.module),
809:                                                               core_language_copy.create_Name("type_store")],
810:                                                 starargs=starargs)
811:         call_stmts.append(call)
812: 
813:         return stypy_functions_copy.flatten_lists(call_stmts, alias_stmt,
814:                                              stypy_functions_copy.create_blank_line())
815: 
816:     # #################################################### PRINT ######################################################
817: 
818:     def visit_Print(self, node, context):
819:         # print inspect.stack()[0][3]
820: 
821:         print_stmts = self.__visit_instruction_body(node.values, context)
822: 
823:         return stypy_functions_copy.flatten_lists(print_stmts)
824: 
825:     # #################################################### GLOBAL #####################################################
826: 
827:     def visit_Global(self, node, context):
828:         # print inspect.stack()[0][3]
829:         global_stmts = [stypy_functions_copy.create_src_comment("Marking variables as global", node.lineno)]
830:         mark_function = core_language_copy.create_attribute('type_store', 'mark_as_global', node.lineno, node.col_offset)
831:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
832:         for name in node.names:
833:             mark_call = functions_copy.create_call_expression(mark_function, [localization, core_language_copy.create_str(name)])
834:             global_stmts.append(mark_call)
835: 
836:         return stypy_functions_copy.flatten_lists(global_stmts)
837: 
838:     # ######################################### BREAK AND CONTINUE ####################################################
839: 
840:     def visit_Break(self, node, context):
841:         # print inspect.stack()[0][3]
842:         return []
843: 
844:     def visit_Continue(self, node, context):
845:         # print inspect.stack()[0][3]
846:         return []
847: 
848:     # ######################################### DELETE #######################################################
849: 
850:     def visit_Delete(self, node, context):
851:         # print inspect.stack()[0][3]
852:         stmts = []
853: 
854:         comment = stypy_functions_copy.create_src_comment("Deleting a member")
855:         for target in node.targets:
856:             # Is an attribute of a class or module
857:             if type(target) is ast.Attribute:
858:                 parent = target.value.id
859:                 attr = core_language_copy.create_str(target.attr)
860:             else:
861:                 # Is a name (__builtins__)
862:                 parent = '__builtins__'
863:                 attr = target
864: 
865:             parent_stmts, parent_var = stypy_functions_copy.create_get_type_of(parent, node.lineno, node.col_offset)
866: 
867:             delete_func = core_language_copy.create_attribute(parent_var, 'delete_member',
868:                                                          line=node.lineno,
869:                                                          column=node.col_offset)
870: 
871:             localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
872:             delete_member_call = functions_copy.create_call_expression(delete_func,
873:                                                                   [localization, attr])
874: 
875:             stmts += stypy_functions_copy.flatten_lists(comment, parent_stmts, delete_member_call)
876: 
877:         return stmts
878: 
879:     # ######################################### ASSERT #######################################################
880: 
881:     def visit_Assert(self, node, context):
882:         comment = stypy_functions_copy.create_src_comment("Evaluating assert statement condition")
883:         stmts, var = self.visit(node.test, context)
884:         return stypy_functions_copy.flatten_lists(comment, stmts)
885: 
886:     def visit_Exec(self, node, context):
887:         src_comment = stypy_functions_copy.create_src_comment("Dynamic code evaluation using an exec statement")
888:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
889:         type_check_func = core_language_copy.create_Name('ensure_var_of_types',
890:                                                     line=node.lineno,
891:                                                     column=node.col_offset)
892: 
893:         body_stmts, body_var = self.visit(node.body, context)
894: 
895:         description = core_language_copy.create_str("exec parameter")
896:         string_type = core_language_copy.create_str("StringType")
897:         file_type = core_language_copy.create_str("FileType")
898:         code_type = core_language_copy.create_str("CodeType")
899:         check_params_call = functions_copy.create_call_expression(type_check_func,
900:                                                              [localization, body_var, description,
901:                                                               string_type,
902:                                                               file_type,
903:                                                               code_type])
904: 
905:         unsupported_feature_call = stypy_functions_copy.create_unsupported_feature_call(localization, "exec",
906:                                                                                    "Dynamic code evaluation using exec is not yet supported by stypy",
907:                                                                                    node.lineno, node.col_offset)
908: 
909:         return stypy_functions_copy.flatten_lists(src_comment, body_stmts, check_params_call, unsupported_feature_call)
910: 
911:     def visit_Yield(self, node, context):
912:         src_comment = stypy_functions_copy.create_src_comment("Creating a generator")
913:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
914:         generator_stored_type_stmts, generator_stored_type_var = self.visit(node.value, context)
915: 
916:         types_module = core_language_copy.create_str("types")
917:         generator_type = core_language_copy.create_str("GeneratorType")
918:         get_type_func = core_language_copy.create_Name("get_python_api_type")
919:         get_generator_call = functions_copy.create_call(get_type_func,
920:                                                    [localization, types_module, generator_type])
921: 
922:         generator_stmts, generator_type_var = stypy_functions_copy.create_temp_Assign(get_generator_call, node.lineno,
923:                                                                                  node.col_offset)
924: 
925:         # Assign to the generator its stored type
926:         store_type_func = core_language_copy.create_attribute(generator_type_var, 'set_elements_type',
927:                                                          line=node.lineno,
928:                                                          column=node.col_offset)
929: 
930:         store_type_call = functions_copy.create_call_expression(store_type_func, [localization, generator_stored_type_var])
931: 
932:         ret_assign = stypy_functions_copy.assign_as_return_type(generator_type_var)
933: 
934:         return stypy_functions_copy.flatten_lists(src_comment, generator_stored_type_stmts, generator_stmts, store_type_call,
935:                                              ret_assign)
936: 
937:     def visit_Raise(self, node, context):
938:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
939: 
940:         type_stmts, type_var = self.visit(node.type, context)
941: 
942:         type_check_func = core_language_copy.create_Name('ensure_var_of_types',
943:                                                     line=node.lineno,
944:                                                     column=node.col_offset)
945: 
946:         description = core_language_copy.create_str("raise parameter")
947:         admitted_type = core_language_copy.create_Name('Exception')
948: 
949:         check_params_call = functions_copy.create_call_expression(type_check_func,
950:                                                              [localization, type_var, description,
951:                                                               admitted_type])
952: 
953:         return stypy_functions_copy.flatten_lists(type_stmts, check_params_call)
954: 
955:     def visit_With(self, node, context):
956:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
957:         type_check_func = core_language_copy.create_Name('ensure_var_has_members',
958:                                                     line=node.lineno,
959:                                                     column=node.col_offset)
960: 
961:         context_stmts, context_var = self.visit(node.context_expr, context)
962: 
963:         description = core_language_copy.create_str("with parameter")
964: 
965:         enter = core_language_copy.create_str("__enter__")
966:         exit = core_language_copy.create_str("__exit__")
967:         check_params_call = functions_copy.create_call(type_check_func,
968:                                                   [localization, context_var, description,
969:                                                    enter,
970:                                                    exit,
971:                                                    ])
972: 
973:         call_test_stmts, call_test_var = stypy_functions_copy.create_temp_Assign(check_params_call, line=node.lineno,
974:                                                                             column=node.col_offset)
975:         # Call __enter__
976:         enter_comment = stypy_functions_copy.create_src_comment("Calling the __enter__ method to initiate a with section")
977:         enter_method, enter_var = stypy_functions_copy.create_get_type_of_member(context_var, '__enter__', node.lineno,
978:                                                                             node.col_offset)
979:         enter_method_invoke = core_language_copy.create_attribute(enter_var, 'invoke', node.lineno, node.col_offset)
980:         enter_method_call, call_var = stypy_functions_copy.create_temp_Assign(
981:             functions_copy.create_call(enter_method_invoke, [localization]), node.lineno, node.col_offset)
982:         body_stmts = [enter_comment, enter_method, enter_method_call]
983:         if node.optional_vars is not None:
984:             assing_to_var = stypy_functions_copy.create_set_type_of(node.optional_vars.id, call_var, node.lineno,
985:                                                                node.col_offset)
986:             body_stmts += [assing_to_var]
987: 
988:         body_stmts += self.__visit_instruction_body(node.body, context)
989: 
990:         # Call __exit__
991:         exit_comment = stypy_functions_copy.create_src_comment("Calling the __exit__ method to finish a with section")
992:         exit_method, exit_var = stypy_functions_copy.create_get_type_of_member(context_var, '__exit__', node.lineno,
993:                                                                           node.col_offset)
994:         exit_method_invoke = core_language_copy.create_attribute(exit_var, 'invoke', node.lineno, node.col_offset)
995:         none_type = core_language_copy.create_Name('None')
996:         exit_method_call, call_var = stypy_functions_copy.create_temp_Assign(functions_copy.create_call(exit_method_invoke,
997:                                                                                               [localization,
998:                                                                                                none_type,
999:                                                                                                none_type,
1000:                                                                                                none_type]),
1001:                                                                         node.lineno, node.col_offset)
1002: 
1003:         body_stmts += [exit_comment, exit_method, exit_method_call]
1004: 
1005:         with_if = conditional_statements_copy.create_if(call_test_var, body_stmts)
1006: 
1007:         return stypy_functions_copy.flatten_lists(context_stmts, call_test_stmts, with_if)
1008: 
1009:     # Integrated into visit_FunctionDef
1010:     def visit_arguments(self, node, context):
1011:         return node
1012: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 1, 0))

# 'import os' statement (line 1)
import os

import_module(stypy.reporting.localization.Localization(__file__, 1, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 3, 0))

# 'from stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import ' statement (line 3)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_5827 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy')

if (type(import_5827) is not StypyTypeError):

    if (import_5827 != 'pyd_module'):
        __import__(import_5827)
        sys_modules_5828 = sys.modules[import_5827]
        import_from_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', sys_modules_5828.module_type_store, module_type_store, ['*'])
        nest_module(stypy.reporting.localization.Localization(__file__, 3, 0), __file__, sys_modules_5828, sys_modules_5828.module_type_store, module_type_store)
    else:
        from stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import *

        import_from_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', None, module_type_store, ['*'], None)

else:
    # Assigning a type to the variable 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy' (line 3)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3, 0), 'stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', import_5827)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 4, 0))

# 'from stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, conditional_statements_copy, idioms_copy' statement (line 4)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_5829 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy')

if (type(import_5829) is not StypyTypeError):

    if (import_5829 != 'pyd_module'):
        __import__(import_5829)
        sys_modules_5830 = sys.modules[import_5829]
        import_from_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', sys_modules_5830.module_type_store, module_type_store, ['core_language_copy', 'functions_copy', 'stypy_functions_copy', 'data_structures_copy', 'conditional_statements_copy', 'idioms_copy'])
        nest_module(stypy.reporting.localization.Localization(__file__, 4, 0), __file__, sys_modules_5830, sys_modules_5830.module_type_store, module_type_store)
    else:
        from stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, conditional_statements_copy, idioms_copy

        import_from_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', None, module_type_store, ['core_language_copy', 'functions_copy', 'stypy_functions_copy', 'data_structures_copy', 'conditional_statements_copy', 'idioms_copy'], [core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, conditional_statements_copy, idioms_copy])

else:
    # Assigning a type to the variable 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy' (line 4)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 4, 0), 'stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', import_5829)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 6, 0))

# 'import value_visitor_copy' statement (line 6)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_5831 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy')

if (type(import_5831) is not StypyTypeError):

    if (import_5831 != 'pyd_module'):
        __import__(import_5831)
        sys_modules_5832 = sys.modules[import_5831]
        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy', sys_modules_5832.module_type_store, module_type_store)
    else:
        import value_visitor_copy

        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy', value_visitor_copy, module_type_store)

else:
    # Assigning a type to the variable 'value_visitor_copy' (line 6)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy', import_5831)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/stypy_over_stypy_testing/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 7, 0))

# 'import ast' statement (line 7)
import ast

import_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'ast', ast, module_type_store)

# Declaration of the 'StatementVisitor' class
# Getting the type of 'ast' (line 9)
ast_5833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 23), 'ast')
# Obtaining the member 'NodeVisitor' of a type (line 9)
NodeVisitor_5834 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 23), ast_5833, 'NodeVisitor')

class StatementVisitor(NodeVisitor_5834, ):
    str_5835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, (-1)), 'str', '\n    Visitor for statement nodes, that are AST nodes that return only statement lists. If when processing a statement\n    node one of its children nodes is a value node, a ValueVisitor is automatically run to process this child node.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 15, 4, False)
        # Assigning a type to the variable 'self' (line 16)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.__init__', ['filename'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 16):
        
        # Assigning a Name to a Attribute (line 16):
        # Getting the type of 'filename' (line 16)
        filename_5836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 25), 'filename')
        # Getting the type of 'self' (line 16)
        self_5837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 8), 'self')
        # Setting the type of the member 'file_name' of a type (line 16)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 16, 8), self_5837, 'file_name', filename_5836)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def visit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit'
        module_type_store = module_type_store.open_function_context('visit', 18, 4, False)
        # Assigning a type to the variable 'self' (line 19)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit')
        StatementVisitor.visit.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit(...)' code ##################

        str_5838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 19, 8), 'str', 'Visit a node.')
        
        # Assigning a BinOp to a Name (line 20):
        
        # Assigning a BinOp to a Name (line 20):
        str_5839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 17), 'str', 'visit_')
        # Getting the type of 'node' (line 20)
        node_5840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 28), 'node')
        # Obtaining the member '__class__' of a type (line 20)
        class___5841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 28), node_5840, '__class__')
        # Obtaining the member '__name__' of a type (line 20)
        name___5842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 28), class___5841, '__name__')
        # Applying the binary operator '+' (line 20)
        result_add_5843 = python_operator(stypy.reporting.localization.Localization(__file__, 20, 17), '+', str_5839, name___5842)
        
        # Assigning a type to the variable 'method' (line 20)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 8), 'method', result_add_5843)
        
        # Assigning a Call to a Name (line 21):
        
        # Assigning a Call to a Name (line 21):
        
        # Call to getattr(...): (line 21)
        # Processing the call arguments (line 21)
        # Getting the type of 'self' (line 21)
        self_5845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 26), 'self', False)
        # Getting the type of 'method' (line 21)
        method_5846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 32), 'method', False)
        # Getting the type of 'self' (line 21)
        self_5847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 40), 'self', False)
        # Obtaining the member 'generic_visit' of a type (line 21)
        generic_visit_5848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 21, 40), self_5847, 'generic_visit')
        # Processing the call keyword arguments (line 21)
        kwargs_5849 = {}
        # Getting the type of 'getattr' (line 21)
        getattr_5844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 18), 'getattr', False)
        # Calling getattr(args, kwargs) (line 21)
        getattr_call_result_5850 = invoke(stypy.reporting.localization.Localization(__file__, 21, 18), getattr_5844, *[self_5845, method_5846, generic_visit_5848], **kwargs_5849)
        
        # Assigning a type to the variable 'visitor' (line 21)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 8), 'visitor', getattr_call_result_5850)
        
        # Getting the type of 'visitor' (line 22)
        visitor_5851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 11), 'visitor')
        # Getting the type of 'self' (line 22)
        self_5852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 22), 'self')
        # Obtaining the member 'generic_visit' of a type (line 22)
        generic_visit_5853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 22, 22), self_5852, 'generic_visit')
        # Applying the binary operator '==' (line 22)
        result_eq_5854 = python_operator(stypy.reporting.localization.Localization(__file__, 22, 11), '==', visitor_5851, generic_visit_5853)
        
        # Testing if the type of an if condition is none (line 22)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 22, 8), result_eq_5854):
            pass
        else:
            
            # Testing the type of an if condition (line 22)
            if_condition_5855 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 22, 8), result_eq_5854)
            # Assigning a type to the variable 'if_condition_5855' (line 22)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 8), 'if_condition_5855', if_condition_5855)
            # SSA begins for if statement (line 22)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to visitor(...): (line 23)
            # Processing the call arguments (line 23)
            # Getting the type of 'node' (line 23)
            node_5857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 27), 'node', False)
            # Getting the type of 'context' (line 23)
            context_5858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 33), 'context', False)
            
            # Obtaining an instance of the builtin type 'list' (line 23)
            list_5859 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 43), 'list')
            # Adding type elements to the builtin type 'list' instance (line 23)
            # Adding element type (line 23)
            # Getting the type of 'method' (line 23)
            method_5860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 44), 'method', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 43), list_5859, method_5860)
            
            # Applying the binary operator '+' (line 23)
            result_add_5861 = python_operator(stypy.reporting.localization.Localization(__file__, 23, 33), '+', context_5858, list_5859)
            
            # Processing the call keyword arguments (line 23)
            kwargs_5862 = {}
            # Getting the type of 'visitor' (line 23)
            visitor_5856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 19), 'visitor', False)
            # Calling visitor(args, kwargs) (line 23)
            visitor_call_result_5863 = invoke(stypy.reporting.localization.Localization(__file__, 23, 19), visitor_5856, *[node_5857, result_add_5861], **kwargs_5862)
            
            # Assigning a type to the variable 'stypy_return_type' (line 23)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 12), 'stypy_return_type', visitor_call_result_5863)
            # SSA join for if statement (line 22)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to visitor(...): (line 24)
        # Processing the call arguments (line 24)
        # Getting the type of 'node' (line 24)
        node_5865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 23), 'node', False)
        # Getting the type of 'context' (line 24)
        context_5866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 29), 'context', False)
        # Processing the call keyword arguments (line 24)
        kwargs_5867 = {}
        # Getting the type of 'visitor' (line 24)
        visitor_5864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 15), 'visitor', False)
        # Calling visitor(args, kwargs) (line 24)
        visitor_call_result_5868 = invoke(stypy.reporting.localization.Localization(__file__, 24, 15), visitor_5864, *[node_5865, context_5866], **kwargs_5867)
        
        # Assigning a type to the variable 'stypy_return_type' (line 24)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 8), 'stypy_return_type', visitor_call_result_5868)
        
        # ################# End of 'visit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit' in the type store
        # Getting the type of 'stypy_return_type' (line 18)
        stypy_return_type_5869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 18, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_5869)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit'
        return stypy_return_type_5869


    @norecursion
    def generic_visit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'generic_visit'
        module_type_store = module_type_store.open_function_context('generic_visit', 26, 4, False)
        # Assigning a type to the variable 'self' (line 27)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.generic_visit')
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.generic_visit', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'generic_visit', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'generic_visit(...)' code ##################

        
        # Call to hasattr(...): (line 27)
        # Processing the call arguments (line 27)
        # Getting the type of 'value_visitor_copy' (line 27)
        value_visitor_copy_5871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 19), 'value_visitor_copy', False)
        # Obtaining the member 'ValueVisitor' of a type (line 27)
        ValueVisitor_5872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 19), value_visitor_copy_5871, 'ValueVisitor')
        
        # Obtaining the type of the subscript
        int_5873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 60), 'int')
        # Getting the type of 'context' (line 27)
        context_5874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 52), 'context', False)
        # Obtaining the member '__getitem__' of a type (line 27)
        getitem___5875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 52), context_5874, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 27)
        subscript_call_result_5876 = invoke(stypy.reporting.localization.Localization(__file__, 27, 52), getitem___5875, int_5873)
        
        # Processing the call keyword arguments (line 27)
        kwargs_5877 = {}
        # Getting the type of 'hasattr' (line 27)
        hasattr_5870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 11), 'hasattr', False)
        # Calling hasattr(args, kwargs) (line 27)
        hasattr_call_result_5878 = invoke(stypy.reporting.localization.Localization(__file__, 27, 11), hasattr_5870, *[ValueVisitor_5872, subscript_call_result_5876], **kwargs_5877)
        
        # Testing if the type of an if condition is none (line 27)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 27, 8), hasattr_call_result_5878):
            
            # Call to Exception(...): (line 30)
            # Processing the call arguments (line 30)
            str_5891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 28), 'str', 'SENTENCE VISITOR: ')
            
            # Obtaining the type of the subscript
            int_5892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 59), 'int')
            # Getting the type of 'context' (line 30)
            context_5893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 51), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 30)
            getitem___5894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 51), context_5893, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 30)
            subscript_call_result_5895 = invoke(stypy.reporting.localization.Localization(__file__, 30, 51), getitem___5894, int_5892)
            
            # Applying the binary operator '+' (line 30)
            result_add_5896 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 28), '+', str_5891, subscript_call_result_5895)
            
            str_5897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 65), 'str', ' is not yet implemented')
            # Applying the binary operator '+' (line 30)
            result_add_5898 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 63), '+', result_add_5896, str_5897)
            
            # Processing the call keyword arguments (line 30)
            kwargs_5899 = {}
            # Getting the type of 'Exception' (line 30)
            Exception_5890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 18), 'Exception', False)
            # Calling Exception(args, kwargs) (line 30)
            Exception_call_result_5900 = invoke(stypy.reporting.localization.Localization(__file__, 30, 18), Exception_5890, *[result_add_5898], **kwargs_5899)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 30, 12), Exception_call_result_5900, 'raise parameter', BaseException)
        else:
            
            # Testing the type of an if condition (line 27)
            if_condition_5879 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 27, 8), hasattr_call_result_5878)
            # Assigning a type to the variable 'if_condition_5879' (line 27)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 8), 'if_condition_5879', if_condition_5879)
            # SSA begins for if statement (line 27)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to visit_value(...): (line 28)
            # Processing the call arguments (line 28)
            # Getting the type of 'node' (line 28)
            node_5882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 36), 'node', False)
            
            # Obtaining the type of the subscript
            int_5883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 51), 'int')
            slice_5884 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 28, 42), None, int_5883, None)
            # Getting the type of 'context' (line 28)
            context_5885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 42), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 28)
            getitem___5886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 42), context_5885, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 28)
            subscript_call_result_5887 = invoke(stypy.reporting.localization.Localization(__file__, 28, 42), getitem___5886, slice_5884)
            
            # Processing the call keyword arguments (line 28)
            kwargs_5888 = {}
            # Getting the type of 'self' (line 28)
            self_5880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 19), 'self', False)
            # Obtaining the member 'visit_value' of a type (line 28)
            visit_value_5881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 19), self_5880, 'visit_value')
            # Calling visit_value(args, kwargs) (line 28)
            visit_value_call_result_5889 = invoke(stypy.reporting.localization.Localization(__file__, 28, 19), visit_value_5881, *[node_5882, subscript_call_result_5887], **kwargs_5888)
            
            # Assigning a type to the variable 'stypy_return_type' (line 28)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 12), 'stypy_return_type', visit_value_call_result_5889)
            # SSA branch for the else part of an if statement (line 27)
            module_type_store.open_ssa_branch('else')
            
            # Call to Exception(...): (line 30)
            # Processing the call arguments (line 30)
            str_5891 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 28), 'str', 'SENTENCE VISITOR: ')
            
            # Obtaining the type of the subscript
            int_5892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 59), 'int')
            # Getting the type of 'context' (line 30)
            context_5893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 51), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 30)
            getitem___5894 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 51), context_5893, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 30)
            subscript_call_result_5895 = invoke(stypy.reporting.localization.Localization(__file__, 30, 51), getitem___5894, int_5892)
            
            # Applying the binary operator '+' (line 30)
            result_add_5896 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 28), '+', str_5891, subscript_call_result_5895)
            
            str_5897 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 65), 'str', ' is not yet implemented')
            # Applying the binary operator '+' (line 30)
            result_add_5898 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 63), '+', result_add_5896, str_5897)
            
            # Processing the call keyword arguments (line 30)
            kwargs_5899 = {}
            # Getting the type of 'Exception' (line 30)
            Exception_5890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 18), 'Exception', False)
            # Calling Exception(args, kwargs) (line 30)
            Exception_call_result_5900 = invoke(stypy.reporting.localization.Localization(__file__, 30, 18), Exception_5890, *[result_add_5898], **kwargs_5899)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 30, 12), Exception_call_result_5900, 'raise parameter', BaseException)
            # SSA join for if statement (line 27)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # ################# End of 'generic_visit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'generic_visit' in the type store
        # Getting the type of 'stypy_return_type' (line 26)
        stypy_return_type_5901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_5901)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'generic_visit'
        return stypy_return_type_5901


    @norecursion
    def __visit_instruction_body(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__visit_instruction_body'
        module_type_store = module_type_store.open_function_context('__visit_instruction_body', 32, 4, False)
        # Assigning a type to the variable 'self' (line 33)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.__visit_instruction_body')
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_param_names_list', ['body', 'context'])
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.__visit_instruction_body', ['body', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__visit_instruction_body', localization, ['body', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__visit_instruction_body(...)' code ##################

        
        # Assigning a List to a Name (line 33):
        
        # Assigning a List to a Name (line 33):
        
        # Obtaining an instance of the builtin type 'list' (line 33)
        list_5902 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 33, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 33)
        
        # Assigning a type to the variable 'new_stmts' (line 33)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 8), 'new_stmts', list_5902)
        
        # Assigning a Call to a Name (line 36):
        
        # Assigning a Call to a Name (line 36):
        
        # Call to ValueVisitor(...): (line 36)
        # Processing the call arguments (line 36)
        # Getting the type of 'self' (line 36)
        self_5905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 52), 'self', False)
        # Obtaining the member 'file_name' of a type (line 36)
        file_name_5906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 36, 52), self_5905, 'file_name')
        # Processing the call keyword arguments (line 36)
        kwargs_5907 = {}
        # Getting the type of 'value_visitor_copy' (line 36)
        value_visitor_copy_5903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 20), 'value_visitor_copy', False)
        # Obtaining the member 'ValueVisitor' of a type (line 36)
        ValueVisitor_5904 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 36, 20), value_visitor_copy_5903, 'ValueVisitor')
        # Calling ValueVisitor(args, kwargs) (line 36)
        ValueVisitor_call_result_5908 = invoke(stypy.reporting.localization.Localization(__file__, 36, 20), ValueVisitor_5904, *[file_name_5906], **kwargs_5907)
        
        # Assigning a type to the variable 'v_visitor' (line 36)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 8), 'v_visitor', ValueVisitor_call_result_5908)
        
        # Getting the type of 'body' (line 37)
        body_5909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 20), 'body')
        # Assigning a type to the variable 'body_5909' (line 37)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 8), 'body_5909', body_5909)
        # Testing if the for loop is going to be iterated (line 37)
        # Testing the type of a for loop iterable (line 37)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 37, 8), body_5909)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 37, 8), body_5909):
            # Getting the type of the for loop variable (line 37)
            for_loop_var_5910 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 37, 8), body_5909)
            # Assigning a type to the variable 'stmt' (line 37)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 8), 'stmt', for_loop_var_5910)
            # SSA begins for a for statement (line 37)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 38):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 38)
            # Processing the call arguments (line 38)
            # Getting the type of 'stmt' (line 38)
            stmt_5913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 42), 'stmt', False)
            # Getting the type of 'context' (line 38)
            context_5914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 48), 'context', False)
            # Processing the call keyword arguments (line 38)
            kwargs_5915 = {}
            # Getting the type of 'v_visitor' (line 38)
            v_visitor_5911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 26), 'v_visitor', False)
            # Obtaining the member 'visit' of a type (line 38)
            visit_5912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 38, 26), v_visitor_5911, 'visit')
            # Calling visit(args, kwargs) (line 38)
            visit_call_result_5916 = invoke(stypy.reporting.localization.Localization(__file__, 38, 26), visit_5912, *[stmt_5913, context_5914], **kwargs_5915)
            
            # Assigning a type to the variable 'call_assignment_5673' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_5673', visit_call_result_5916)
            
            # Assigning a Call to a Name (line 38):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5673' (line 38)
            call_assignment_5673_5917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_5673', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_5918 = stypy_get_value_from_tuple(call_assignment_5673_5917, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5674' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_5674', stypy_get_value_from_tuple_call_result_5918)
            
            # Assigning a Name to a Name (line 38):
            # Getting the type of 'call_assignment_5674' (line 38)
            call_assignment_5674_5919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_5674')
            # Assigning a type to the variable 'stmts' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'stmts', call_assignment_5674_5919)
            
            # Assigning a Call to a Name (line 38):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5673' (line 38)
            call_assignment_5673_5920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_5673', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_5921 = stypy_get_value_from_tuple(call_assignment_5673_5920, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5675' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_5675', stypy_get_value_from_tuple_call_result_5921)
            
            # Assigning a Name to a Name (line 38):
            # Getting the type of 'call_assignment_5675' (line 38)
            call_assignment_5675_5922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_5675')
            # Assigning a type to the variable 'temp' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 19), 'temp', call_assignment_5675_5922)
            
            # Type idiom detected: calculating its left and rigth part (line 39)
            # Getting the type of 'list' (line 39)
            list_5923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 33), 'list')
            # Getting the type of 'stmts' (line 39)
            stmts_5924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 26), 'stmts')
            
            (may_be_5925, more_types_in_union_5926) = may_be_subtype(list_5923, stmts_5924)

            if may_be_5925:

                if more_types_in_union_5926:
                    # Runtime conditional SSA (line 39)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                # Assigning a type to the variable 'stmts' (line 39)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 12), 'stmts', remove_not_subtype_from_union(stmts_5924, list))
                
                # Call to extend(...): (line 40)
                # Processing the call arguments (line 40)
                # Getting the type of 'stmts' (line 40)
                stmts_5929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 40, 33), 'stmts', False)
                # Processing the call keyword arguments (line 40)
                kwargs_5930 = {}
                # Getting the type of 'new_stmts' (line 40)
                new_stmts_5927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 40, 16), 'new_stmts', False)
                # Obtaining the member 'extend' of a type (line 40)
                extend_5928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 40, 16), new_stmts_5927, 'extend')
                # Calling extend(args, kwargs) (line 40)
                extend_call_result_5931 = invoke(stypy.reporting.localization.Localization(__file__, 40, 16), extend_5928, *[stmts_5929], **kwargs_5930)
                

                if more_types_in_union_5926:
                    # Runtime conditional SSA for else branch (line 39)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_5925) or more_types_in_union_5926):
                # Assigning a type to the variable 'stmts' (line 39)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 12), 'stmts', remove_subtype_from_union(stmts_5924, list))
                
                # Call to append(...): (line 42)
                # Processing the call arguments (line 42)
                # Getting the type of 'stmts' (line 42)
                stmts_5934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 33), 'stmts', False)
                # Processing the call keyword arguments (line 42)
                kwargs_5935 = {}
                # Getting the type of 'new_stmts' (line 42)
                new_stmts_5932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 16), 'new_stmts', False)
                # Obtaining the member 'append' of a type (line 42)
                append_5933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 16), new_stmts_5932, 'append')
                # Calling append(args, kwargs) (line 42)
                append_call_result_5936 = invoke(stypy.reporting.localization.Localization(__file__, 42, 16), append_5933, *[stmts_5934], **kwargs_5935)
                

                if (may_be_5925 and more_types_in_union_5926):
                    # SSA join for if statement (line 39)
                    module_type_store = module_type_store.join_ssa_context()


            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'new_stmts' (line 45)
        new_stmts_5937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 15), 'new_stmts')
        # Assigning a type to the variable 'stypy_return_type' (line 45)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 8), 'stypy_return_type', new_stmts_5937)
        
        # ################# End of '__visit_instruction_body(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__visit_instruction_body' in the type store
        # Getting the type of 'stypy_return_type' (line 32)
        stypy_return_type_5938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_5938)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__visit_instruction_body'
        return stypy_return_type_5938


    @norecursion
    def visit_value(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_value'
        module_type_store = module_type_store.open_function_context('visit_value', 47, 4, False)
        # Assigning a type to the variable 'self' (line 48)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_value')
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_value', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_value', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_value(...)' code ##################

        
        # Assigning a Call to a Name (line 48):
        
        # Assigning a Call to a Name (line 48):
        
        # Call to ValueVisitor(...): (line 48)
        # Processing the call arguments (line 48)
        # Getting the type of 'self' (line 48)
        self_5941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 52), 'self', False)
        # Obtaining the member 'file_name' of a type (line 48)
        file_name_5942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 52), self_5941, 'file_name')
        # Processing the call keyword arguments (line 48)
        kwargs_5943 = {}
        # Getting the type of 'value_visitor_copy' (line 48)
        value_visitor_copy_5939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 20), 'value_visitor_copy', False)
        # Obtaining the member 'ValueVisitor' of a type (line 48)
        ValueVisitor_5940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 20), value_visitor_copy_5939, 'ValueVisitor')
        # Calling ValueVisitor(args, kwargs) (line 48)
        ValueVisitor_call_result_5944 = invoke(stypy.reporting.localization.Localization(__file__, 48, 20), ValueVisitor_5940, *[file_name_5942], **kwargs_5943)
        
        # Assigning a type to the variable 'v_visitor' (line 48)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 8), 'v_visitor', ValueVisitor_call_result_5944)
        
        # Assigning a Call to a Tuple (line 50):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 50)
        # Processing the call arguments (line 50)
        # Getting the type of 'node' (line 50)
        node_5947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 39), 'node', False)
        # Getting the type of 'context' (line 50)
        context_5948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 45), 'context', False)
        # Processing the call keyword arguments (line 50)
        kwargs_5949 = {}
        # Getting the type of 'v_visitor' (line 50)
        v_visitor_5945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 23), 'v_visitor', False)
        # Obtaining the member 'visit' of a type (line 50)
        visit_5946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 23), v_visitor_5945, 'visit')
        # Calling visit(args, kwargs) (line 50)
        visit_call_result_5950 = invoke(stypy.reporting.localization.Localization(__file__, 50, 23), visit_5946, *[node_5947, context_5948], **kwargs_5949)
        
        # Assigning a type to the variable 'call_assignment_5676' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_5676', visit_call_result_5950)
        
        # Assigning a Call to a Name (line 50):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5676' (line 50)
        call_assignment_5676_5951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_5676', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_5952 = stypy_get_value_from_tuple(call_assignment_5676_5951, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5677' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_5677', stypy_get_value_from_tuple_call_result_5952)
        
        # Assigning a Name to a Name (line 50):
        # Getting the type of 'call_assignment_5677' (line 50)
        call_assignment_5677_5953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_5677')
        # Assigning a type to the variable 'result' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'result', call_assignment_5677_5953)
        
        # Assigning a Call to a Name (line 50):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5676' (line 50)
        call_assignment_5676_5954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_5676', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_5955 = stypy_get_value_from_tuple(call_assignment_5676_5954, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5678' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_5678', stypy_get_value_from_tuple_call_result_5955)
        
        # Assigning a Name to a Name (line 50):
        # Getting the type of 'call_assignment_5678' (line 50)
        call_assignment_5678_5956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_5678')
        # Assigning a type to the variable 'temp' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 16), 'temp', call_assignment_5678_5956)
        
        # Obtaining an instance of the builtin type 'tuple' (line 52)
        tuple_5957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 52)
        # Adding element type (line 52)
        # Getting the type of 'result' (line 52)
        result_5958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 15), 'result')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 15), tuple_5957, result_5958)
        # Adding element type (line 52)
        # Getting the type of 'temp' (line 52)
        temp_5959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 23), 'temp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 15), tuple_5957, temp_5959)
        
        # Assigning a type to the variable 'stypy_return_type' (line 52)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 8), 'stypy_return_type', tuple_5957)
        
        # ################# End of 'visit_value(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_value' in the type store
        # Getting the type of 'stypy_return_type' (line 47)
        stypy_return_type_5960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_5960)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_value'
        return stypy_return_type_5960


    @norecursion
    def visit_Module(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Module'
        module_type_store = module_type_store.open_function_context('visit_Module', 56, 4, False)
        # Assigning a type to the variable 'self' (line 57)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Module')
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Module', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Module', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Module(...)' code ##################

        
        # Call to append(...): (line 59)
        # Processing the call arguments (line 59)
        # Getting the type of 'node' (line 59)
        node_5963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 23), 'node', False)
        # Processing the call keyword arguments (line 59)
        kwargs_5964 = {}
        # Getting the type of 'context' (line 59)
        context_5961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 59)
        append_5962 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 8), context_5961, 'append')
        # Calling append(args, kwargs) (line 59)
        append_call_result_5965 = invoke(stypy.reporting.localization.Localization(__file__, 59, 8), append_5962, *[node_5963], **kwargs_5964)
        
        
        # Assigning a Call to a Name (line 60):
        
        # Assigning a Call to a Name (line 60):
        
        # Call to __visit_instruction_body(...): (line 60)
        # Processing the call arguments (line 60)
        # Getting the type of 'node' (line 60)
        node_5968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 46), 'node', False)
        # Obtaining the member 'body' of a type (line 60)
        body_5969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 60, 46), node_5968, 'body')
        # Getting the type of 'context' (line 60)
        context_5970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 57), 'context', False)
        # Processing the call keyword arguments (line 60)
        kwargs_5971 = {}
        # Getting the type of 'self' (line 60)
        self_5966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 16), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 60)
        visit_instruction_body_5967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 60, 16), self_5966, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 60)
        visit_instruction_body_call_result_5972 = invoke(stypy.reporting.localization.Localization(__file__, 60, 16), visit_instruction_body_5967, *[body_5969, context_5970], **kwargs_5971)
        
        # Assigning a type to the variable 'stmts' (line 60)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 8), 'stmts', visit_instruction_body_call_result_5972)
        
        # Call to remove(...): (line 61)
        # Processing the call arguments (line 61)
        # Getting the type of 'node' (line 61)
        node_5975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 23), 'node', False)
        # Processing the call keyword arguments (line 61)
        kwargs_5976 = {}
        # Getting the type of 'context' (line 61)
        context_5973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 61)
        remove_5974 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 8), context_5973, 'remove')
        # Calling remove(args, kwargs) (line 61)
        remove_call_result_5977 = invoke(stypy.reporting.localization.Localization(__file__, 61, 8), remove_5974, *[node_5975], **kwargs_5976)
        
        # Getting the type of 'stmts' (line 63)
        stmts_5978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 15), 'stmts')
        # Assigning a type to the variable 'stypy_return_type' (line 63)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 63, 8), 'stypy_return_type', stmts_5978)
        
        # ################# End of 'visit_Module(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Module' in the type store
        # Getting the type of 'stypy_return_type' (line 56)
        stypy_return_type_5979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_5979)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Module'
        return stypy_return_type_5979


    @norecursion
    def visit_FunctionDef(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_FunctionDef'
        module_type_store = module_type_store.open_function_context('visit_FunctionDef', 67, 4, False)
        # Assigning a type to the variable 'self' (line 68)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_FunctionDef')
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_FunctionDef', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_FunctionDef', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_FunctionDef(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 70):
        
        # Assigning a Attribute to a Attribute (line 70):
        # Getting the type of 'node' (line 70)
        node_5980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 38), 'node')
        # Obtaining the member 'name' of a type (line 70)
        name_5981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 38), node_5980, 'name')
        # Getting the type of 'self' (line 70)
        self_5982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 8), 'self')
        # Setting the type of the member 'building_function_name' of a type (line 70)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 8), self_5982, 'building_function_name', name_5981)
        
        # Assigning a Call to a Name (line 73):
        
        # Assigning a Call to a Name (line 73):
        
        # Call to create_Name(...): (line 73)
        # Processing the call arguments (line 73)
        str_5985 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 73, 59), 'str', 'localization')
        # Getting the type of 'False' (line 73)
        False_5986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 75), 'False', False)
        # Processing the call keyword arguments (line 73)
        # Getting the type of 'node' (line 73)
        node_5987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 73)
        lineno_5988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 87), node_5987, 'lineno')
        keyword_5989 = lineno_5988
        # Getting the type of 'node' (line 73)
        node_5990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 107), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 73)
        col_offset_5991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 107), node_5990, 'col_offset')
        keyword_5992 = col_offset_5991
        kwargs_5993 = {'column': keyword_5992, 'line': keyword_5989}
        # Getting the type of 'core_language_copy' (line 73)
        core_language_copy_5983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 28), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 73)
        create_Name_5984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 28), core_language_copy_5983, 'create_Name')
        # Calling create_Name(args, kwargs) (line 73)
        create_Name_call_result_5994 = invoke(stypy.reporting.localization.Localization(__file__, 73, 28), create_Name_5984, *[str_5985, False_5986], **kwargs_5993)
        
        # Assigning a type to the variable 'decl_localization' (line 73)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 8), 'decl_localization', create_Name_call_result_5994)
        
        # Assigning a List to a Name (line 77):
        
        # Assigning a List to a Name (line 77):
        
        # Obtaining an instance of the builtin type 'list' (line 77)
        list_5995 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 77)
        
        # Assigning a type to the variable 'decorator_list' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'decorator_list', list_5995)
        
        
        # Call to len(...): (line 78)
        # Processing the call arguments (line 78)
        # Getting the type of 'node' (line 78)
        node_5997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 15), 'node', False)
        # Obtaining the member 'decorator_list' of a type (line 78)
        decorator_list_5998 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 78, 15), node_5997, 'decorator_list')
        # Processing the call keyword arguments (line 78)
        kwargs_5999 = {}
        # Getting the type of 'len' (line 78)
        len_5996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 11), 'len', False)
        # Calling len(args, kwargs) (line 78)
        len_call_result_6000 = invoke(stypy.reporting.localization.Localization(__file__, 78, 11), len_5996, *[decorator_list_5998], **kwargs_5999)
        
        int_6001 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 78, 38), 'int')
        # Applying the binary operator '>' (line 78)
        result_gt_6002 = python_operator(stypy.reporting.localization.Localization(__file__, 78, 11), '>', len_call_result_6000, int_6001)
        
        # Testing if the type of an if condition is none (line 78)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 78, 8), result_gt_6002):
            pass
        else:
            
            # Testing the type of an if condition (line 78)
            if_condition_6003 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 78, 8), result_gt_6002)
            # Assigning a type to the variable 'if_condition_6003' (line 78)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 8), 'if_condition_6003', if_condition_6003)
            # SSA begins for if statement (line 78)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'node' (line 79)
            node_6004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 23), 'node')
            # Obtaining the member 'decorator_list' of a type (line 79)
            decorator_list_6005 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 79, 23), node_6004, 'decorator_list')
            # Assigning a type to the variable 'decorator_list_6005' (line 79)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 12), 'decorator_list_6005', decorator_list_6005)
            # Testing if the for loop is going to be iterated (line 79)
            # Testing the type of a for loop iterable (line 79)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 79, 12), decorator_list_6005)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 79, 12), decorator_list_6005):
                # Getting the type of the for loop variable (line 79)
                for_loop_var_6006 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 79, 12), decorator_list_6005)
                # Assigning a type to the variable 'dec' (line 79)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 12), 'dec', for_loop_var_6006)
                # SSA begins for a for statement (line 79)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Call to isinstance(...): (line 80)
                # Processing the call arguments (line 80)
                # Getting the type of 'dec' (line 80)
                dec_6008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 30), 'dec', False)
                # Getting the type of 'ast' (line 80)
                ast_6009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 35), 'ast', False)
                # Obtaining the member 'Name' of a type (line 80)
                Name_6010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 35), ast_6009, 'Name')
                # Processing the call keyword arguments (line 80)
                kwargs_6011 = {}
                # Getting the type of 'isinstance' (line 80)
                isinstance_6007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 19), 'isinstance', False)
                # Calling isinstance(args, kwargs) (line 80)
                isinstance_call_result_6012 = invoke(stypy.reporting.localization.Localization(__file__, 80, 19), isinstance_6007, *[dec_6008, Name_6010], **kwargs_6011)
                
                # Testing if the type of an if condition is none (line 80)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 80, 16), isinstance_call_result_6012):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 80)
                    if_condition_6013 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 80, 16), isinstance_call_result_6012)
                    # Assigning a type to the variable 'if_condition_6013' (line 80)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 16), 'if_condition_6013', if_condition_6013)
                    # SSA begins for if statement (line 80)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Getting the type of 'dec' (line 81)
                    dec_6014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 23), 'dec')
                    # Obtaining the member 'id' of a type (line 81)
                    id_6015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 81, 23), dec_6014, 'id')
                    str_6016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 33), 'str', 'staticmethod')
                    # Applying the binary operator '==' (line 81)
                    result_eq_6017 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 23), '==', id_6015, str_6016)
                    
                    # Testing if the type of an if condition is none (line 81)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 81, 20), result_eq_6017):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 81)
                        if_condition_6018 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 81, 20), result_eq_6017)
                        # Assigning a type to the variable 'if_condition_6018' (line 81)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 20), 'if_condition_6018', if_condition_6018)
                        # SSA begins for if statement (line 81)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 82)
                        # Processing the call arguments (line 82)
                        # Getting the type of 'dec' (line 82)
                        dec_6021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 46), 'dec', False)
                        # Processing the call keyword arguments (line 82)
                        kwargs_6022 = {}
                        # Getting the type of 'decorator_list' (line 82)
                        decorator_list_6019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 24), 'decorator_list', False)
                        # Obtaining the member 'append' of a type (line 82)
                        append_6020 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 24), decorator_list_6019, 'append')
                        # Calling append(args, kwargs) (line 82)
                        append_call_result_6023 = invoke(stypy.reporting.localization.Localization(__file__, 82, 24), append_6020, *[dec_6021], **kwargs_6022)
                        
                        # SSA join for if statement (line 81)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 80)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            # SSA join for if statement (line 78)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 86)
        # Processing the call arguments (line 86)
        
        # Call to create_Name(...): (line 86)
        # Processing the call arguments (line 86)
        str_6028 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 61), 'str', 'norecursion')
        # Processing the call keyword arguments (line 86)
        # Getting the type of 'node' (line 86)
        node_6029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 81), 'node', False)
        # Obtaining the member 'lineno' of a type (line 86)
        lineno_6030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 81), node_6029, 'lineno')
        int_6031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 95), 'int')
        # Applying the binary operator '-' (line 86)
        result_sub_6032 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 81), '-', lineno_6030, int_6031)
        
        keyword_6033 = result_sub_6032
        # Getting the type of 'node' (line 86)
        node_6034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 105), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 86)
        col_offset_6035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 105), node_6034, 'col_offset')
        keyword_6036 = col_offset_6035
        kwargs_6037 = {'column': keyword_6036, 'line': keyword_6033}
        # Getting the type of 'core_language_copy' (line 86)
        core_language_copy_6026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 30), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 86)
        create_Name_6027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 30), core_language_copy_6026, 'create_Name')
        # Calling create_Name(args, kwargs) (line 86)
        create_Name_call_result_6038 = invoke(stypy.reporting.localization.Localization(__file__, 86, 30), create_Name_6027, *[str_6028], **kwargs_6037)
        
        # Processing the call keyword arguments (line 86)
        kwargs_6039 = {}
        # Getting the type of 'decorator_list' (line 86)
        decorator_list_6024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 'decorator_list', False)
        # Obtaining the member 'append' of a type (line 86)
        append_6025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 8), decorator_list_6024, 'append')
        # Calling append(args, kwargs) (line 86)
        append_call_result_6040 = invoke(stypy.reporting.localization.Localization(__file__, 86, 8), append_6025, *[create_Name_call_result_6038], **kwargs_6039)
        
        
        # Assigning a List to a Name (line 88):
        
        # Assigning a List to a Name (line 88):
        
        # Obtaining an instance of the builtin type 'list' (line 88)
        list_6041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 88)
        
        # Assigning a type to the variable 'defaults_types' (line 88)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 8), 'defaults_types', list_6041)
        
        # Assigning a List to a Name (line 89):
        
        # Assigning a List to a Name (line 89):
        
        # Obtaining an instance of the builtin type 'list' (line 89)
        list_6042 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 89)
        
        # Assigning a type to the variable 'defaults_stmts' (line 89)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 8), 'defaults_stmts', list_6042)
        
        # Getting the type of 'node' (line 91)
        node_6043 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 20), 'node')
        # Obtaining the member 'args' of a type (line 91)
        args_6044 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 20), node_6043, 'args')
        # Obtaining the member 'defaults' of a type (line 91)
        defaults_6045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 20), args_6044, 'defaults')
        # Assigning a type to the variable 'defaults_6045' (line 91)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'defaults_6045', defaults_6045)
        # Testing if the for loop is going to be iterated (line 91)
        # Testing the type of a for loop iterable (line 91)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 91, 8), defaults_6045)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 91, 8), defaults_6045):
            # Getting the type of the for loop variable (line 91)
            for_loop_var_6046 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 91, 8), defaults_6045)
            # Assigning a type to the variable 'elem' (line 91)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'elem', for_loop_var_6046)
            # SSA begins for a for statement (line 91)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 92):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 92)
            # Processing the call arguments (line 92)
            # Getting the type of 'elem' (line 92)
            elem_6049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 38), 'elem', False)
            # Getting the type of 'context' (line 92)
            context_6050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 44), 'context', False)
            # Processing the call keyword arguments (line 92)
            kwargs_6051 = {}
            # Getting the type of 'self' (line 92)
            self_6047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 27), 'self', False)
            # Obtaining the member 'visit' of a type (line 92)
            visit_6048 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 92, 27), self_6047, 'visit')
            # Calling visit(args, kwargs) (line 92)
            visit_call_result_6052 = invoke(stypy.reporting.localization.Localization(__file__, 92, 27), visit_6048, *[elem_6049, context_6050], **kwargs_6051)
            
            # Assigning a type to the variable 'call_assignment_5679' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_5679', visit_call_result_6052)
            
            # Assigning a Call to a Name (line 92):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5679' (line 92)
            call_assignment_5679_6053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_5679', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6054 = stypy_get_value_from_tuple(call_assignment_5679_6053, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5680' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_5680', stypy_get_value_from_tuple_call_result_6054)
            
            # Assigning a Name to a Name (line 92):
            # Getting the type of 'call_assignment_5680' (line 92)
            call_assignment_5680_6055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_5680')
            # Assigning a type to the variable 'stmts' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'stmts', call_assignment_5680_6055)
            
            # Assigning a Call to a Name (line 92):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5679' (line 92)
            call_assignment_5679_6056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_5679', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6057 = stypy_get_value_from_tuple(call_assignment_5679_6056, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5681' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_5681', stypy_get_value_from_tuple_call_result_6057)
            
            # Assigning a Name to a Name (line 92):
            # Getting the type of 'call_assignment_5681' (line 92)
            call_assignment_5681_6058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_5681')
            # Assigning a type to the variable 'type_' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 19), 'type_', call_assignment_5681_6058)
            
            # Call to append(...): (line 93)
            # Processing the call arguments (line 93)
            # Getting the type of 'type_' (line 93)
            type__6061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 34), 'type_', False)
            # Processing the call keyword arguments (line 93)
            kwargs_6062 = {}
            # Getting the type of 'defaults_types' (line 93)
            defaults_types_6059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 12), 'defaults_types', False)
            # Obtaining the member 'append' of a type (line 93)
            append_6060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 93, 12), defaults_types_6059, 'append')
            # Calling append(args, kwargs) (line 93)
            append_call_result_6063 = invoke(stypy.reporting.localization.Localization(__file__, 93, 12), append_6060, *[type__6061], **kwargs_6062)
            
            
            # Call to append(...): (line 94)
            # Processing the call arguments (line 94)
            # Getting the type of 'stmts' (line 94)
            stmts_6066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 34), 'stmts', False)
            # Processing the call keyword arguments (line 94)
            kwargs_6067 = {}
            # Getting the type of 'defaults_stmts' (line 94)
            defaults_stmts_6064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 12), 'defaults_stmts', False)
            # Obtaining the member 'append' of a type (line 94)
            append_6065 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 12), defaults_stmts_6064, 'append')
            # Calling append(args, kwargs) (line 94)
            append_call_result_6068 = invoke(stypy.reporting.localization.Localization(__file__, 94, 12), append_6065, *[stmts_6066], **kwargs_6067)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 97):
        
        # Assigning a Call to a Name (line 97):
        
        # Call to create_function_def(...): (line 97)
        # Processing the call arguments (line 97)
        # Getting the type of 'node' (line 97)
        node_6071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 58), 'node', False)
        # Obtaining the member 'name' of a type (line 97)
        name_6072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 58), node_6071, 'name')
        # Getting the type of 'decl_localization' (line 98)
        decl_localization_6073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 53), 'decl_localization', False)
        # Getting the type of 'decorator_list' (line 99)
        decorator_list_6074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 53), 'decorator_list', False)
        # Getting the type of 'context' (line 100)
        context_6075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 53), 'context', False)
        # Processing the call keyword arguments (line 97)
        # Getting the type of 'node' (line 101)
        node_6076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 58), 'node', False)
        # Obtaining the member 'lineno' of a type (line 101)
        lineno_6077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 101, 58), node_6076, 'lineno')
        keyword_6078 = lineno_6077
        # Getting the type of 'node' (line 102)
        node_6079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 60), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 102)
        col_offset_6080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 60), node_6079, 'col_offset')
        keyword_6081 = col_offset_6080
        kwargs_6082 = {'column': keyword_6081, 'line': keyword_6078}
        # Getting the type of 'functions_copy' (line 97)
        functions_copy_6069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 23), 'functions_copy', False)
        # Obtaining the member 'create_function_def' of a type (line 97)
        create_function_def_6070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 23), functions_copy_6069, 'create_function_def')
        # Calling create_function_def(args, kwargs) (line 97)
        create_function_def_call_result_6083 = invoke(stypy.reporting.localization.Localization(__file__, 97, 23), create_function_def_6070, *[name_6072, decl_localization_6073, decorator_list_6074, context_6075], **kwargs_6082)
        
        # Assigning a type to the variable 'function_def' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'function_def', create_function_def_call_result_6083)
        
        # Call to append(...): (line 105)
        # Processing the call arguments (line 105)
        
        # Call to create_src_comment(...): (line 105)
        # Processing the call arguments (line 105)
        str_6089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 73), 'str', 'Assign values to the parameters with defaults')
        # Processing the call keyword arguments (line 105)
        kwargs_6090 = {}
        # Getting the type of 'stypy_functions_copy' (line 105)
        stypy_functions_copy_6087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 105)
        create_src_comment_6088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 33), stypy_functions_copy_6087, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 105)
        create_src_comment_call_result_6091 = invoke(stypy.reporting.localization.Localization(__file__, 105, 33), create_src_comment_6088, *[str_6089], **kwargs_6090)
        
        # Processing the call keyword arguments (line 105)
        kwargs_6092 = {}
        # Getting the type of 'function_def' (line 105)
        function_def_6084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 105)
        body_6085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 8), function_def_6084, 'body')
        # Obtaining the member 'append' of a type (line 105)
        append_6086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 8), body_6085, 'append')
        # Calling append(args, kwargs) (line 105)
        append_call_result_6093 = invoke(stypy.reporting.localization.Localization(__file__, 105, 8), append_6086, *[create_src_comment_call_result_6091], **kwargs_6092)
        
        
        # Call to append(...): (line 106)
        # Processing the call arguments (line 106)
        
        # Call to create_set_unreferenced_var_check(...): (line 106)
        # Processing the call arguments (line 106)
        # Getting the type of 'False' (line 106)
        False_6099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 88), 'False', False)
        # Processing the call keyword arguments (line 106)
        kwargs_6100 = {}
        # Getting the type of 'stypy_functions_copy' (line 106)
        stypy_functions_copy_6097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_unreferenced_var_check' of a type (line 106)
        create_set_unreferenced_var_check_6098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 33), stypy_functions_copy_6097, 'create_set_unreferenced_var_check')
        # Calling create_set_unreferenced_var_check(args, kwargs) (line 106)
        create_set_unreferenced_var_check_call_result_6101 = invoke(stypy.reporting.localization.Localization(__file__, 106, 33), create_set_unreferenced_var_check_6098, *[False_6099], **kwargs_6100)
        
        # Processing the call keyword arguments (line 106)
        kwargs_6102 = {}
        # Getting the type of 'function_def' (line 106)
        function_def_6094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 106)
        body_6095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 8), function_def_6094, 'body')
        # Obtaining the member 'append' of a type (line 106)
        append_6096 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 8), body_6095, 'append')
        # Calling append(args, kwargs) (line 106)
        append_call_result_6103 = invoke(stypy.reporting.localization.Localization(__file__, 106, 8), append_6096, *[create_set_unreferenced_var_check_call_result_6101], **kwargs_6102)
        
        
        # Call to append(...): (line 107)
        # Processing the call arguments (line 107)
        # Getting the type of 'defaults_stmts' (line 107)
        defaults_stmts_6107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 33), 'defaults_stmts', False)
        # Processing the call keyword arguments (line 107)
        kwargs_6108 = {}
        # Getting the type of 'function_def' (line 107)
        function_def_6104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 107)
        body_6105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), function_def_6104, 'body')
        # Obtaining the member 'append' of a type (line 107)
        append_6106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), body_6105, 'append')
        # Calling append(args, kwargs) (line 107)
        append_call_result_6109 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), append_6106, *[defaults_stmts_6107], **kwargs_6108)
        
        
        # Call to append(...): (line 108)
        # Processing the call arguments (line 108)
        
        # Call to create_set_unreferenced_var_check(...): (line 108)
        # Processing the call arguments (line 108)
        # Getting the type of 'True' (line 108)
        True_6115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 88), 'True', False)
        # Processing the call keyword arguments (line 108)
        kwargs_6116 = {}
        # Getting the type of 'stypy_functions_copy' (line 108)
        stypy_functions_copy_6113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_unreferenced_var_check' of a type (line 108)
        create_set_unreferenced_var_check_6114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 33), stypy_functions_copy_6113, 'create_set_unreferenced_var_check')
        # Calling create_set_unreferenced_var_check(args, kwargs) (line 108)
        create_set_unreferenced_var_check_call_result_6117 = invoke(stypy.reporting.localization.Localization(__file__, 108, 33), create_set_unreferenced_var_check_6114, *[True_6115], **kwargs_6116)
        
        # Processing the call keyword arguments (line 108)
        kwargs_6118 = {}
        # Getting the type of 'function_def' (line 108)
        function_def_6110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 108)
        body_6111 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 8), function_def_6110, 'body')
        # Obtaining the member 'append' of a type (line 108)
        append_6112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 8), body_6111, 'append')
        # Calling append(args, kwargs) (line 108)
        append_call_result_6119 = invoke(stypy.reporting.localization.Localization(__file__, 108, 8), append_6112, *[create_set_unreferenced_var_check_call_result_6117], **kwargs_6118)
        
        
        # Call to append(...): (line 109)
        # Processing the call arguments (line 109)
        
        # Call to create_Assign(...): (line 109)
        # Processing the call arguments (line 109)
        
        # Call to create_Name(...): (line 109)
        # Processing the call arguments (line 109)
        str_6127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 97), 'str', 'defaults')
        # Processing the call keyword arguments (line 109)
        kwargs_6128 = {}
        # Getting the type of 'core_language_copy' (line 109)
        core_language_copy_6125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 66), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 109)
        create_Name_6126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 66), core_language_copy_6125, 'create_Name')
        # Calling create_Name(args, kwargs) (line 109)
        create_Name_call_result_6129 = invoke(stypy.reporting.localization.Localization(__file__, 109, 66), create_Name_6126, *[str_6127], **kwargs_6128)
        
        
        # Call to create_list(...): (line 110)
        # Processing the call arguments (line 110)
        # Getting the type of 'defaults_types' (line 110)
        defaults_types_6132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 94), 'defaults_types', False)
        # Processing the call keyword arguments (line 110)
        kwargs_6133 = {}
        # Getting the type of 'data_structures_copy' (line 110)
        data_structures_copy_6130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 61), 'data_structures_copy', False)
        # Obtaining the member 'create_list' of a type (line 110)
        create_list_6131 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 61), data_structures_copy_6130, 'create_list')
        # Calling create_list(args, kwargs) (line 110)
        create_list_call_result_6134 = invoke(stypy.reporting.localization.Localization(__file__, 110, 61), create_list_6131, *[defaults_types_6132], **kwargs_6133)
        
        # Processing the call keyword arguments (line 109)
        kwargs_6135 = {}
        # Getting the type of 'core_language_copy' (line 109)
        core_language_copy_6123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 33), 'core_language_copy', False)
        # Obtaining the member 'create_Assign' of a type (line 109)
        create_Assign_6124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 33), core_language_copy_6123, 'create_Assign')
        # Calling create_Assign(args, kwargs) (line 109)
        create_Assign_call_result_6136 = invoke(stypy.reporting.localization.Localization(__file__, 109, 33), create_Assign_6124, *[create_Name_call_result_6129, create_list_call_result_6134], **kwargs_6135)
        
        # Processing the call keyword arguments (line 109)
        kwargs_6137 = {}
        # Getting the type of 'function_def' (line 109)
        function_def_6120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 109)
        body_6121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 8), function_def_6120, 'body')
        # Obtaining the member 'append' of a type (line 109)
        append_6122 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 8), body_6121, 'append')
        # Calling append(args, kwargs) (line 109)
        append_call_result_6138 = invoke(stypy.reporting.localization.Localization(__file__, 109, 8), append_6122, *[create_Assign_call_result_6136], **kwargs_6137)
        
        
        # Call to append(...): (line 113)
        # Processing the call arguments (line 113)
        
        # Call to create_src_comment(...): (line 113)
        # Processing the call arguments (line 113)
        
        # Call to format(...): (line 114)
        # Processing the call arguments (line 114)
        # Getting the type of 'node' (line 114)
        node_6146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 83), 'node', False)
        # Obtaining the member 'name' of a type (line 114)
        name_6147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 83), node_6146, 'name')
        # Processing the call keyword arguments (line 114)
        kwargs_6148 = {}
        str_6144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 34), 'str', "Create a new context for function '{0}'")
        # Obtaining the member 'format' of a type (line 114)
        format_6145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 34), str_6144, 'format')
        # Calling format(args, kwargs) (line 114)
        format_call_result_6149 = invoke(stypy.reporting.localization.Localization(__file__, 114, 34), format_6145, *[name_6147], **kwargs_6148)
        
        # Processing the call keyword arguments (line 113)
        kwargs_6150 = {}
        # Getting the type of 'stypy_functions_copy' (line 113)
        stypy_functions_copy_6142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 113)
        create_src_comment_6143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 33), stypy_functions_copy_6142, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 113)
        create_src_comment_call_result_6151 = invoke(stypy.reporting.localization.Localization(__file__, 113, 33), create_src_comment_6143, *[format_call_result_6149], **kwargs_6150)
        
        # Processing the call keyword arguments (line 113)
        kwargs_6152 = {}
        # Getting the type of 'function_def' (line 113)
        function_def_6139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 113)
        body_6140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 8), function_def_6139, 'body')
        # Obtaining the member 'append' of a type (line 113)
        append_6141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 8), body_6140, 'append')
        # Calling append(args, kwargs) (line 113)
        append_call_result_6153 = invoke(stypy.reporting.localization.Localization(__file__, 113, 8), append_6141, *[create_src_comment_call_result_6151], **kwargs_6152)
        
        
        # Assigning a Call to a Name (line 115):
        
        # Assigning a Call to a Name (line 115):
        
        # Call to create_context_set(...): (line 115)
        # Processing the call arguments (line 115)
        # Getting the type of 'node' (line 115)
        node_6156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 56), 'node', False)
        # Obtaining the member 'name' of a type (line 115)
        name_6157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 56), node_6156, 'name')
        # Getting the type of 'node' (line 115)
        node_6158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 67), 'node', False)
        # Obtaining the member 'lineno' of a type (line 115)
        lineno_6159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 67), node_6158, 'lineno')
        # Getting the type of 'node' (line 116)
        node_6160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 51), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 116)
        col_offset_6161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 116, 51), node_6160, 'col_offset')
        # Processing the call keyword arguments (line 115)
        kwargs_6162 = {}
        # Getting the type of 'functions_copy' (line 115)
        functions_copy_6154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 22), 'functions_copy', False)
        # Obtaining the member 'create_context_set' of a type (line 115)
        create_context_set_6155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 22), functions_copy_6154, 'create_context_set')
        # Calling create_context_set(args, kwargs) (line 115)
        create_context_set_call_result_6163 = invoke(stypy.reporting.localization.Localization(__file__, 115, 22), create_context_set_6155, *[name_6157, lineno_6159, col_offset_6161], **kwargs_6162)
        
        # Assigning a type to the variable 'context_set' (line 115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 8), 'context_set', create_context_set_call_result_6163)
        
        # Call to append(...): (line 117)
        # Processing the call arguments (line 117)
        # Getting the type of 'context_set' (line 117)
        context_set_6167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 33), 'context_set', False)
        # Processing the call keyword arguments (line 117)
        kwargs_6168 = {}
        # Getting the type of 'function_def' (line 117)
        function_def_6164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 117)
        body_6165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 8), function_def_6164, 'body')
        # Obtaining the member 'append' of a type (line 117)
        append_6166 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 8), body_6165, 'append')
        # Calling append(args, kwargs) (line 117)
        append_call_result_6169 = invoke(stypy.reporting.localization.Localization(__file__, 117, 8), append_6166, *[context_set_6167], **kwargs_6168)
        
        
        # Call to is_method(...): (line 119)
        # Processing the call arguments (line 119)
        # Getting the type of 'context' (line 119)
        context_6172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 36), 'context', False)
        # Processing the call keyword arguments (line 119)
        kwargs_6173 = {}
        # Getting the type of 'functions_copy' (line 119)
        functions_copy_6170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 11), 'functions_copy', False)
        # Obtaining the member 'is_method' of a type (line 119)
        is_method_6171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 119, 11), functions_copy_6170, 'is_method')
        # Calling is_method(args, kwargs) (line 119)
        is_method_call_result_6174 = invoke(stypy.reporting.localization.Localization(__file__, 119, 11), is_method_6171, *[context_6172], **kwargs_6173)
        
        # Testing if the type of an if condition is none (line 119)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 119, 8), is_method_call_result_6174):
            pass
        else:
            
            # Testing the type of an if condition (line 119)
            if_condition_6175 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 119, 8), is_method_call_result_6174)
            # Assigning a type to the variable 'if_condition_6175' (line 119)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 8), 'if_condition_6175', if_condition_6175)
            # SSA begins for if statement (line 119)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 120)
            # Processing the call arguments (line 120)
            
            # Call to create_set_type_of(...): (line 121)
            # Processing the call arguments (line 121)
            str_6181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 56), 'str', 'self')
            
            # Call to create_Name(...): (line 121)
            # Processing the call arguments (line 121)
            str_6184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 95), 'str', 'type_of_self')
            # Processing the call keyword arguments (line 121)
            kwargs_6185 = {}
            # Getting the type of 'core_language_copy' (line 121)
            core_language_copy_6182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 64), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 121)
            create_Name_6183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 64), core_language_copy_6182, 'create_Name')
            # Calling create_Name(args, kwargs) (line 121)
            create_Name_call_result_6186 = invoke(stypy.reporting.localization.Localization(__file__, 121, 64), create_Name_6183, *[str_6184], **kwargs_6185)
            
            # Getting the type of 'node' (line 121)
            node_6187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 112), 'node', False)
            # Obtaining the member 'lineno' of a type (line 121)
            lineno_6188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 112), node_6187, 'lineno')
            int_6189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 126), 'int')
            # Applying the binary operator '+' (line 121)
            result_add_6190 = python_operator(stypy.reporting.localization.Localization(__file__, 121, 112), '+', lineno_6188, int_6189)
            
            # Getting the type of 'node' (line 122)
            node_6191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 51), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 122)
            col_offset_6192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 51), node_6191, 'col_offset')
            # Processing the call keyword arguments (line 121)
            kwargs_6193 = {}
            # Getting the type of 'stypy_functions_copy' (line 121)
            stypy_functions_copy_6179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 16), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 121)
            create_set_type_of_6180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 16), stypy_functions_copy_6179, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 121)
            create_set_type_of_call_result_6194 = invoke(stypy.reporting.localization.Localization(__file__, 121, 16), create_set_type_of_6180, *[str_6181, create_Name_call_result_6186, result_add_6190, col_offset_6192], **kwargs_6193)
            
            # Processing the call keyword arguments (line 120)
            kwargs_6195 = {}
            # Getting the type of 'function_def' (line 120)
            function_def_6176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 12), 'function_def', False)
            # Obtaining the member 'body' of a type (line 120)
            body_6177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 12), function_def_6176, 'body')
            # Obtaining the member 'append' of a type (line 120)
            append_6178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 12), body_6177, 'append')
            # Calling append(args, kwargs) (line 120)
            append_call_result_6196 = invoke(stypy.reporting.localization.Localization(__file__, 120, 12), append_6178, *[create_set_type_of_call_result_6194], **kwargs_6195)
            
            # SSA join for if statement (line 119)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 125)
        # Processing the call arguments (line 125)
        
        # Call to create_src_comment(...): (line 125)
        # Processing the call arguments (line 125)
        str_6202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 73), 'str', 'Passed parameters checking function')
        # Processing the call keyword arguments (line 125)
        kwargs_6203 = {}
        # Getting the type of 'stypy_functions_copy' (line 125)
        stypy_functions_copy_6200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 125)
        create_src_comment_6201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 33), stypy_functions_copy_6200, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 125)
        create_src_comment_call_result_6204 = invoke(stypy.reporting.localization.Localization(__file__, 125, 33), create_src_comment_6201, *[str_6202], **kwargs_6203)
        
        # Processing the call keyword arguments (line 125)
        kwargs_6205 = {}
        # Getting the type of 'function_def' (line 125)
        function_def_6197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 125)
        body_6198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 8), function_def_6197, 'body')
        # Obtaining the member 'append' of a type (line 125)
        append_6199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 8), body_6198, 'append')
        # Calling append(args, kwargs) (line 125)
        append_call_result_6206 = invoke(stypy.reporting.localization.Localization(__file__, 125, 8), append_6199, *[create_src_comment_call_result_6204], **kwargs_6205)
        
        
        # Assigning a Call to a Name (line 128):
        
        # Assigning a Call to a Name (line 128):
        
        # Call to create_arg_number_test(...): (line 128)
        # Processing the call arguments (line 128)
        # Getting the type of 'node' (line 128)
        node_6209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 59), 'node', False)
        # Getting the type of 'context' (line 128)
        context_6210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 65), 'context', False)
        # Processing the call keyword arguments (line 128)
        kwargs_6211 = {}
        # Getting the type of 'functions_copy' (line 128)
        functions_copy_6207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 21), 'functions_copy', False)
        # Obtaining the member 'create_arg_number_test' of a type (line 128)
        create_arg_number_test_6208 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 128, 21), functions_copy_6207, 'create_arg_number_test')
        # Calling create_arg_number_test(args, kwargs) (line 128)
        create_arg_number_test_call_result_6212 = invoke(stypy.reporting.localization.Localization(__file__, 128, 21), create_arg_number_test_6208, *[node_6209, context_6210], **kwargs_6211)
        
        # Assigning a type to the variable 'f_preamble' (line 128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 8), 'f_preamble', create_arg_number_test_call_result_6212)
        
        # Call to append(...): (line 130)
        # Processing the call arguments (line 130)
        # Getting the type of 'f_preamble' (line 130)
        f_preamble_6216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 33), 'f_preamble', False)
        # Processing the call keyword arguments (line 130)
        kwargs_6217 = {}
        # Getting the type of 'function_def' (line 130)
        function_def_6213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 130)
        body_6214 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 130, 8), function_def_6213, 'body')
        # Obtaining the member 'append' of a type (line 130)
        append_6215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 130, 8), body_6214, 'append')
        # Calling append(args, kwargs) (line 130)
        append_call_result_6218 = invoke(stypy.reporting.localization.Localization(__file__, 130, 8), append_6215, *[f_preamble_6216], **kwargs_6217)
        
        
        # Call to append(...): (line 133)
        # Processing the call arguments (line 133)
        
        # Call to create_src_comment(...): (line 133)
        # Processing the call arguments (line 133)
        str_6224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 73), 'str', 'Stacktrace push for error reporting')
        # Processing the call keyword arguments (line 133)
        kwargs_6225 = {}
        # Getting the type of 'stypy_functions_copy' (line 133)
        stypy_functions_copy_6222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 133)
        create_src_comment_6223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 33), stypy_functions_copy_6222, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 133)
        create_src_comment_call_result_6226 = invoke(stypy.reporting.localization.Localization(__file__, 133, 33), create_src_comment_6223, *[str_6224], **kwargs_6225)
        
        # Processing the call keyword arguments (line 133)
        kwargs_6227 = {}
        # Getting the type of 'function_def' (line 133)
        function_def_6219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 133)
        body_6220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 8), function_def_6219, 'body')
        # Obtaining the member 'append' of a type (line 133)
        append_6221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 8), body_6220, 'append')
        # Calling append(args, kwargs) (line 133)
        append_call_result_6228 = invoke(stypy.reporting.localization.Localization(__file__, 133, 8), append_6221, *[create_src_comment_call_result_6226], **kwargs_6227)
        
        
        # Assigning a Call to a Name (line 134):
        
        # Assigning a Call to a Name (line 134):
        
        # Call to obtain_arg_list(...): (line 134)
        # Processing the call arguments (line 134)
        # Getting the type of 'node' (line 134)
        node_6231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 60), 'node', False)
        # Obtaining the member 'args' of a type (line 134)
        args_6232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 60), node_6231, 'args')
        
        # Call to is_method(...): (line 134)
        # Processing the call arguments (line 134)
        # Getting the type of 'context' (line 134)
        context_6235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 96), 'context', False)
        # Processing the call keyword arguments (line 134)
        kwargs_6236 = {}
        # Getting the type of 'functions_copy' (line 134)
        functions_copy_6233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 71), 'functions_copy', False)
        # Obtaining the member 'is_method' of a type (line 134)
        is_method_6234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 71), functions_copy_6233, 'is_method')
        # Calling is_method(args, kwargs) (line 134)
        is_method_call_result_6237 = invoke(stypy.reporting.localization.Localization(__file__, 134, 71), is_method_6234, *[context_6235], **kwargs_6236)
        
        # Processing the call keyword arguments (line 134)
        kwargs_6238 = {}
        # Getting the type of 'functions_copy' (line 134)
        functions_copy_6229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 29), 'functions_copy', False)
        # Obtaining the member 'obtain_arg_list' of a type (line 134)
        obtain_arg_list_6230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 29), functions_copy_6229, 'obtain_arg_list')
        # Calling obtain_arg_list(args, kwargs) (line 134)
        obtain_arg_list_call_result_6239 = invoke(stypy.reporting.localization.Localization(__file__, 134, 29), obtain_arg_list_6230, *[args_6232, is_method_call_result_6237], **kwargs_6238)
        
        # Assigning a type to the variable 'declared_arguments' (line 134)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 134, 8), 'declared_arguments', obtain_arg_list_call_result_6239)
        
        # Assigning a Call to a Name (line 135):
        
        # Assigning a Call to a Name (line 135):
        
        # Call to create_stacktrace_push(...): (line 135)
        # Processing the call arguments (line 135)
        # Getting the type of 'node' (line 135)
        node_6242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 59), 'node', False)
        # Obtaining the member 'name' of a type (line 135)
        name_6243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 59), node_6242, 'name')
        # Getting the type of 'declared_arguments' (line 135)
        declared_arguments_6244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 70), 'declared_arguments', False)
        # Processing the call keyword arguments (line 135)
        kwargs_6245 = {}
        # Getting the type of 'functions_copy' (line 135)
        functions_copy_6240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 21), 'functions_copy', False)
        # Obtaining the member 'create_stacktrace_push' of a type (line 135)
        create_stacktrace_push_6241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 21), functions_copy_6240, 'create_stacktrace_push')
        # Calling create_stacktrace_push(args, kwargs) (line 135)
        create_stacktrace_push_call_result_6246 = invoke(stypy.reporting.localization.Localization(__file__, 135, 21), create_stacktrace_push_6241, *[name_6243, declared_arguments_6244], **kwargs_6245)
        
        # Assigning a type to the variable 'stack_push' (line 135)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 8), 'stack_push', create_stacktrace_push_call_result_6246)
        
        # Call to append(...): (line 136)
        # Processing the call arguments (line 136)
        # Getting the type of 'stack_push' (line 136)
        stack_push_6250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 33), 'stack_push', False)
        # Processing the call keyword arguments (line 136)
        kwargs_6251 = {}
        # Getting the type of 'function_def' (line 136)
        function_def_6247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 136)
        body_6248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 136, 8), function_def_6247, 'body')
        # Obtaining the member 'append' of a type (line 136)
        append_6249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 136, 8), body_6248, 'append')
        # Calling append(args, kwargs) (line 136)
        append_call_result_6252 = invoke(stypy.reporting.localization.Localization(__file__, 136, 8), append_6249, *[stack_push_6250], **kwargs_6251)
        
        
        # Call to append(...): (line 141)
        # Processing the call arguments (line 141)
        
        # Call to create_src_comment(...): (line 141)
        # Processing the call arguments (line 141)
        str_6258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 73), 'str', 'Default return type storage variable (SSA)')
        # Processing the call keyword arguments (line 141)
        kwargs_6259 = {}
        # Getting the type of 'stypy_functions_copy' (line 141)
        stypy_functions_copy_6256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 141)
        create_src_comment_6257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 141, 33), stypy_functions_copy_6256, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 141)
        create_src_comment_call_result_6260 = invoke(stypy.reporting.localization.Localization(__file__, 141, 33), create_src_comment_6257, *[str_6258], **kwargs_6259)
        
        # Processing the call keyword arguments (line 141)
        kwargs_6261 = {}
        # Getting the type of 'function_def' (line 141)
        function_def_6253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 141)
        body_6254 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 141, 8), function_def_6253, 'body')
        # Obtaining the member 'append' of a type (line 141)
        append_6255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 141, 8), body_6254, 'append')
        # Calling append(args, kwargs) (line 141)
        append_call_result_6262 = invoke(stypy.reporting.localization.Localization(__file__, 141, 8), append_6255, *[create_src_comment_call_result_6260], **kwargs_6261)
        
        
        # Call to append(...): (line 142)
        # Processing the call arguments (line 142)
        
        # Call to create_default_return_variable(...): (line 142)
        # Processing the call keyword arguments (line 142)
        kwargs_6268 = {}
        # Getting the type of 'stypy_functions_copy' (line 142)
        stypy_functions_copy_6266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_default_return_variable' of a type (line 142)
        create_default_return_variable_6267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 33), stypy_functions_copy_6266, 'create_default_return_variable')
        # Calling create_default_return_variable(args, kwargs) (line 142)
        create_default_return_variable_call_result_6269 = invoke(stypy.reporting.localization.Localization(__file__, 142, 33), create_default_return_variable_6267, *[], **kwargs_6268)
        
        # Processing the call keyword arguments (line 142)
        kwargs_6270 = {}
        # Getting the type of 'function_def' (line 142)
        function_def_6263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 142)
        body_6264 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 8), function_def_6263, 'body')
        # Obtaining the member 'append' of a type (line 142)
        append_6265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 8), body_6264, 'append')
        # Calling append(args, kwargs) (line 142)
        append_call_result_6271 = invoke(stypy.reporting.localization.Localization(__file__, 142, 8), append_6265, *[create_default_return_variable_call_result_6269], **kwargs_6270)
        
        
        # Call to append(...): (line 144)
        # Processing the call arguments (line 144)
        
        # Call to create_blank_line(...): (line 144)
        # Processing the call keyword arguments (line 144)
        kwargs_6277 = {}
        # Getting the type of 'stypy_functions_copy' (line 144)
        stypy_functions_copy_6275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 144)
        create_blank_line_6276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 33), stypy_functions_copy_6275, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 144)
        create_blank_line_call_result_6278 = invoke(stypy.reporting.localization.Localization(__file__, 144, 33), create_blank_line_6276, *[], **kwargs_6277)
        
        # Processing the call keyword arguments (line 144)
        kwargs_6279 = {}
        # Getting the type of 'function_def' (line 144)
        function_def_6272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 144)
        body_6273 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 8), function_def_6272, 'body')
        # Obtaining the member 'append' of a type (line 144)
        append_6274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 8), body_6273, 'append')
        # Calling append(args, kwargs) (line 144)
        append_call_result_6280 = invoke(stypy.reporting.localization.Localization(__file__, 144, 8), append_6274, *[create_blank_line_call_result_6278], **kwargs_6279)
        
        
        # Call to append(...): (line 145)
        # Processing the call arguments (line 145)
        
        # Call to create_src_comment(...): (line 146)
        # Processing the call arguments (line 146)
        
        # Call to format(...): (line 146)
        # Processing the call arguments (line 146)
        # Getting the type of 'node' (line 146)
        node_6288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 94), 'node', False)
        # Obtaining the member 'name' of a type (line 146)
        name_6289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 94), node_6288, 'name')
        # Processing the call keyword arguments (line 146)
        kwargs_6290 = {}
        str_6286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 52), 'str', "Begin of the function '{0}' code")
        # Obtaining the member 'format' of a type (line 146)
        format_6287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 52), str_6286, 'format')
        # Calling format(args, kwargs) (line 146)
        format_call_result_6291 = invoke(stypy.reporting.localization.Localization(__file__, 146, 52), format_6287, *[name_6289], **kwargs_6290)
        
        # Processing the call keyword arguments (line 146)
        kwargs_6292 = {}
        # Getting the type of 'stypy_functions_copy' (line 146)
        stypy_functions_copy_6284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 146)
        create_src_comment_6285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 12), stypy_functions_copy_6284, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 146)
        create_src_comment_call_result_6293 = invoke(stypy.reporting.localization.Localization(__file__, 146, 12), create_src_comment_6285, *[format_call_result_6291], **kwargs_6292)
        
        # Processing the call keyword arguments (line 145)
        kwargs_6294 = {}
        # Getting the type of 'function_def' (line 145)
        function_def_6281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 145)
        body_6282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 145, 8), function_def_6281, 'body')
        # Obtaining the member 'append' of a type (line 145)
        append_6283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 145, 8), body_6282, 'append')
        # Calling append(args, kwargs) (line 145)
        append_call_result_6295 = invoke(stypy.reporting.localization.Localization(__file__, 145, 8), append_6283, *[create_src_comment_call_result_6293], **kwargs_6294)
        
        
        # Call to append(...): (line 148)
        # Processing the call arguments (line 148)
        # Getting the type of 'node' (line 148)
        node_6298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 23), 'node', False)
        # Processing the call keyword arguments (line 148)
        kwargs_6299 = {}
        # Getting the type of 'context' (line 148)
        context_6296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 148)
        append_6297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 8), context_6296, 'append')
        # Calling append(args, kwargs) (line 148)
        append_call_result_6300 = invoke(stypy.reporting.localization.Localization(__file__, 148, 8), append_6297, *[node_6298], **kwargs_6299)
        
        
        # Call to extend(...): (line 150)
        # Processing the call arguments (line 150)
        
        # Call to __visit_instruction_body(...): (line 150)
        # Processing the call arguments (line 150)
        # Getting the type of 'node' (line 150)
        node_6306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 63), 'node', False)
        # Obtaining the member 'body' of a type (line 150)
        body_6307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 63), node_6306, 'body')
        # Getting the type of 'context' (line 150)
        context_6308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 74), 'context', False)
        # Processing the call keyword arguments (line 150)
        kwargs_6309 = {}
        # Getting the type of 'self' (line 150)
        self_6304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 150)
        visit_instruction_body_6305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 33), self_6304, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 150)
        visit_instruction_body_call_result_6310 = invoke(stypy.reporting.localization.Localization(__file__, 150, 33), visit_instruction_body_6305, *[body_6307, context_6308], **kwargs_6309)
        
        # Processing the call keyword arguments (line 150)
        kwargs_6311 = {}
        # Getting the type of 'function_def' (line 150)
        function_def_6301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 150)
        body_6302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 8), function_def_6301, 'body')
        # Obtaining the member 'extend' of a type (line 150)
        extend_6303 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 8), body_6302, 'extend')
        # Calling extend(args, kwargs) (line 150)
        extend_call_result_6312 = invoke(stypy.reporting.localization.Localization(__file__, 150, 8), extend_6303, *[visit_instruction_body_call_result_6310], **kwargs_6311)
        
        
        # Call to remove(...): (line 151)
        # Processing the call arguments (line 151)
        # Getting the type of 'node' (line 151)
        node_6315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 23), 'node', False)
        # Processing the call keyword arguments (line 151)
        kwargs_6316 = {}
        # Getting the type of 'context' (line 151)
        context_6313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 151)
        remove_6314 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 8), context_6313, 'remove')
        # Calling remove(args, kwargs) (line 151)
        remove_call_result_6317 = invoke(stypy.reporting.localization.Localization(__file__, 151, 8), remove_6314, *[node_6315], **kwargs_6316)
        
        
        # Call to append(...): (line 153)
        # Processing the call arguments (line 153)
        
        # Call to create_end_block_src_comment(...): (line 154)
        # Processing the call arguments (line 154)
        
        # Call to format(...): (line 154)
        # Processing the call arguments (line 154)
        # Getting the type of 'node' (line 154)
        node_6325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 102), 'node', False)
        # Obtaining the member 'name' of a type (line 154)
        name_6326 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 102), node_6325, 'name')
        # Processing the call keyword arguments (line 154)
        kwargs_6327 = {}
        str_6323 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 62), 'str', "End of the function '{0}' code")
        # Obtaining the member 'format' of a type (line 154)
        format_6324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 62), str_6323, 'format')
        # Calling format(args, kwargs) (line 154)
        format_call_result_6328 = invoke(stypy.reporting.localization.Localization(__file__, 154, 62), format_6324, *[name_6326], **kwargs_6327)
        
        # Processing the call keyword arguments (line 154)
        kwargs_6329 = {}
        # Getting the type of 'stypy_functions_copy' (line 154)
        stypy_functions_copy_6321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_end_block_src_comment' of a type (line 154)
        create_end_block_src_comment_6322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 12), stypy_functions_copy_6321, 'create_end_block_src_comment')
        # Calling create_end_block_src_comment(args, kwargs) (line 154)
        create_end_block_src_comment_call_result_6330 = invoke(stypy.reporting.localization.Localization(__file__, 154, 12), create_end_block_src_comment_6322, *[format_call_result_6328], **kwargs_6329)
        
        # Processing the call keyword arguments (line 153)
        kwargs_6331 = {}
        # Getting the type of 'function_def' (line 153)
        function_def_6318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 153)
        body_6319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 8), function_def_6318, 'body')
        # Obtaining the member 'append' of a type (line 153)
        append_6320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 8), body_6319, 'append')
        # Calling append(args, kwargs) (line 153)
        append_call_result_6332 = invoke(stypy.reporting.localization.Localization(__file__, 153, 8), append_6320, *[create_end_block_src_comment_call_result_6330], **kwargs_6331)
        
        
        # Call to append(...): (line 157)
        # Processing the call arguments (line 157)
        
        # Call to create_src_comment(...): (line 157)
        # Processing the call arguments (line 157)
        str_6338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 73), 'str', 'Stacktrace pop (error reporting)')
        # Processing the call keyword arguments (line 157)
        kwargs_6339 = {}
        # Getting the type of 'stypy_functions_copy' (line 157)
        stypy_functions_copy_6336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 157)
        create_src_comment_6337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 33), stypy_functions_copy_6336, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 157)
        create_src_comment_call_result_6340 = invoke(stypy.reporting.localization.Localization(__file__, 157, 33), create_src_comment_6337, *[str_6338], **kwargs_6339)
        
        # Processing the call keyword arguments (line 157)
        kwargs_6341 = {}
        # Getting the type of 'function_def' (line 157)
        function_def_6333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 157)
        body_6334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 8), function_def_6333, 'body')
        # Obtaining the member 'append' of a type (line 157)
        append_6335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 8), body_6334, 'append')
        # Calling append(args, kwargs) (line 157)
        append_call_result_6342 = invoke(stypy.reporting.localization.Localization(__file__, 157, 8), append_6335, *[create_src_comment_call_result_6340], **kwargs_6341)
        
        
        # Assigning a Call to a Name (line 158):
        
        # Assigning a Call to a Name (line 158):
        
        # Call to create_stacktrace_pop(...): (line 158)
        # Processing the call keyword arguments (line 158)
        kwargs_6345 = {}
        # Getting the type of 'functions_copy' (line 158)
        functions_copy_6343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 20), 'functions_copy', False)
        # Obtaining the member 'create_stacktrace_pop' of a type (line 158)
        create_stacktrace_pop_6344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 20), functions_copy_6343, 'create_stacktrace_pop')
        # Calling create_stacktrace_pop(args, kwargs) (line 158)
        create_stacktrace_pop_call_result_6346 = invoke(stypy.reporting.localization.Localization(__file__, 158, 20), create_stacktrace_pop_6344, *[], **kwargs_6345)
        
        # Assigning a type to the variable 'stack_pop' (line 158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 158, 8), 'stack_pop', create_stacktrace_pop_call_result_6346)
        
        # Call to append(...): (line 159)
        # Processing the call arguments (line 159)
        # Getting the type of 'stack_pop' (line 159)
        stack_pop_6350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 33), 'stack_pop', False)
        # Processing the call keyword arguments (line 159)
        kwargs_6351 = {}
        # Getting the type of 'function_def' (line 159)
        function_def_6347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 159)
        body_6348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 8), function_def_6347, 'body')
        # Obtaining the member 'append' of a type (line 159)
        append_6349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 8), body_6348, 'append')
        # Calling append(args, kwargs) (line 159)
        append_call_result_6352 = invoke(stypy.reporting.localization.Localization(__file__, 159, 8), append_6349, *[stack_pop_6350], **kwargs_6351)
        
        
        # Call to append(...): (line 162)
        # Processing the call arguments (line 162)
        
        # Call to create_src_comment(...): (line 162)
        # Processing the call arguments (line 162)
        
        # Call to format(...): (line 163)
        # Processing the call arguments (line 163)
        # Getting the type of 'node' (line 163)
        node_6360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 81), 'node', False)
        # Obtaining the member 'name' of a type (line 163)
        name_6361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 81), node_6360, 'name')
        # Processing the call keyword arguments (line 163)
        kwargs_6362 = {}
        str_6358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 34), 'str', "Destroy the context of function '{0}'")
        # Obtaining the member 'format' of a type (line 163)
        format_6359 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 34), str_6358, 'format')
        # Calling format(args, kwargs) (line 163)
        format_call_result_6363 = invoke(stypy.reporting.localization.Localization(__file__, 163, 34), format_6359, *[name_6361], **kwargs_6362)
        
        # Processing the call keyword arguments (line 162)
        kwargs_6364 = {}
        # Getting the type of 'stypy_functions_copy' (line 162)
        stypy_functions_copy_6356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 162)
        create_src_comment_6357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 33), stypy_functions_copy_6356, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 162)
        create_src_comment_call_result_6365 = invoke(stypy.reporting.localization.Localization(__file__, 162, 33), create_src_comment_6357, *[format_call_result_6363], **kwargs_6364)
        
        # Processing the call keyword arguments (line 162)
        kwargs_6366 = {}
        # Getting the type of 'function_def' (line 162)
        function_def_6353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 162)
        body_6354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 8), function_def_6353, 'body')
        # Obtaining the member 'append' of a type (line 162)
        append_6355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 8), body_6354, 'append')
        # Calling append(args, kwargs) (line 162)
        append_call_result_6367 = invoke(stypy.reporting.localization.Localization(__file__, 162, 8), append_6355, *[create_src_comment_call_result_6365], **kwargs_6366)
        
        
        # Call to append(...): (line 165)
        # Processing the call arguments (line 165)
        
        # Call to create_store_return_from_function(...): (line 165)
        # Processing the call arguments (line 165)
        # Getting the type of 'node' (line 165)
        node_6373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 88), 'node', False)
        # Obtaining the member 'lineno' of a type (line 165)
        lineno_6374 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 88), node_6373, 'lineno')
        # Getting the type of 'node' (line 165)
        node_6375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 101), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 165)
        col_offset_6376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 101), node_6375, 'col_offset')
        # Processing the call keyword arguments (line 165)
        kwargs_6377 = {}
        # Getting the type of 'stypy_functions_copy' (line 165)
        stypy_functions_copy_6371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_store_return_from_function' of a type (line 165)
        create_store_return_from_function_6372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 33), stypy_functions_copy_6371, 'create_store_return_from_function')
        # Calling create_store_return_from_function(args, kwargs) (line 165)
        create_store_return_from_function_call_result_6378 = invoke(stypy.reporting.localization.Localization(__file__, 165, 33), create_store_return_from_function_6372, *[lineno_6374, col_offset_6376], **kwargs_6377)
        
        # Processing the call keyword arguments (line 165)
        kwargs_6379 = {}
        # Getting the type of 'function_def' (line 165)
        function_def_6368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 165)
        body_6369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 8), function_def_6368, 'body')
        # Obtaining the member 'append' of a type (line 165)
        append_6370 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 8), body_6369, 'append')
        # Calling append(args, kwargs) (line 165)
        append_call_result_6380 = invoke(stypy.reporting.localization.Localization(__file__, 165, 8), append_6370, *[create_store_return_from_function_call_result_6378], **kwargs_6379)
        
        
        # Assigning a Call to a Name (line 166):
        
        # Assigning a Call to a Name (line 166):
        
        # Call to create_context_unset(...): (line 166)
        # Processing the call keyword arguments (line 166)
        kwargs_6383 = {}
        # Getting the type of 'functions_copy' (line 166)
        functions_copy_6381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 24), 'functions_copy', False)
        # Obtaining the member 'create_context_unset' of a type (line 166)
        create_context_unset_6382 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 24), functions_copy_6381, 'create_context_unset')
        # Calling create_context_unset(args, kwargs) (line 166)
        create_context_unset_call_result_6384 = invoke(stypy.reporting.localization.Localization(__file__, 166, 24), create_context_unset_6382, *[], **kwargs_6383)
        
        # Assigning a type to the variable 'context_unset' (line 166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 8), 'context_unset', create_context_unset_call_result_6384)
        
        # Call to append(...): (line 167)
        # Processing the call arguments (line 167)
        # Getting the type of 'context_unset' (line 167)
        context_unset_6388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 33), 'context_unset', False)
        # Processing the call keyword arguments (line 167)
        kwargs_6389 = {}
        # Getting the type of 'function_def' (line 167)
        function_def_6385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 167)
        body_6386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 8), function_def_6385, 'body')
        # Obtaining the member 'append' of a type (line 167)
        append_6387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 8), body_6386, 'append')
        # Calling append(args, kwargs) (line 167)
        append_call_result_6390 = invoke(stypy.reporting.localization.Localization(__file__, 167, 8), append_6387, *[context_unset_6388], **kwargs_6389)
        
        
        
        # Call to is_constructor(...): (line 171)
        # Processing the call arguments (line 171)
        # Getting the type of 'node' (line 171)
        node_6393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 45), 'node', False)
        # Processing the call keyword arguments (line 171)
        kwargs_6394 = {}
        # Getting the type of 'functions_copy' (line 171)
        functions_copy_6391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 15), 'functions_copy', False)
        # Obtaining the member 'is_constructor' of a type (line 171)
        is_constructor_6392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 15), functions_copy_6391, 'is_constructor')
        # Calling is_constructor(args, kwargs) (line 171)
        is_constructor_call_result_6395 = invoke(stypy.reporting.localization.Localization(__file__, 171, 15), is_constructor_6392, *[node_6393], **kwargs_6394)
        
        # Applying the 'not' unary operator (line 171)
        result_not__6396 = python_operator(stypy.reporting.localization.Localization(__file__, 171, 11), 'not', is_constructor_call_result_6395)
        
        # Testing if the type of an if condition is none (line 171)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 171, 8), result_not__6396):
            pass
        else:
            
            # Testing the type of an if condition (line 171)
            if_condition_6397 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 171, 8), result_not__6396)
            # Assigning a type to the variable 'if_condition_6397' (line 171)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 8), 'if_condition_6397', if_condition_6397)
            # SSA begins for if statement (line 171)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 172)
            # Processing the call arguments (line 172)
            
            # Call to create_src_comment(...): (line 172)
            # Processing the call arguments (line 172)
            str_6403 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 77), 'str', 'Return type of the function')
            # Processing the call keyword arguments (line 172)
            kwargs_6404 = {}
            # Getting the type of 'stypy_functions_copy' (line 172)
            stypy_functions_copy_6401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 37), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 172)
            create_src_comment_6402 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 37), stypy_functions_copy_6401, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 172)
            create_src_comment_call_result_6405 = invoke(stypy.reporting.localization.Localization(__file__, 172, 37), create_src_comment_6402, *[str_6403], **kwargs_6404)
            
            # Processing the call keyword arguments (line 172)
            kwargs_6406 = {}
            # Getting the type of 'function_def' (line 172)
            function_def_6398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 12), 'function_def', False)
            # Obtaining the member 'body' of a type (line 172)
            body_6399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 12), function_def_6398, 'body')
            # Obtaining the member 'append' of a type (line 172)
            append_6400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 12), body_6399, 'append')
            # Calling append(args, kwargs) (line 172)
            append_call_result_6407 = invoke(stypy.reporting.localization.Localization(__file__, 172, 12), append_6400, *[create_src_comment_call_result_6405], **kwargs_6406)
            
            
            # Call to append(...): (line 173)
            # Processing the call arguments (line 173)
            
            # Call to create_return_from_function(...): (line 173)
            # Processing the call arguments (line 173)
            # Getting the type of 'node' (line 173)
            node_6413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 86), 'node', False)
            # Obtaining the member 'lineno' of a type (line 173)
            lineno_6414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 86), node_6413, 'lineno')
            int_6415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 99), 'int')
            # Processing the call keyword arguments (line 173)
            kwargs_6416 = {}
            # Getting the type of 'stypy_functions_copy' (line 173)
            stypy_functions_copy_6411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 37), 'stypy_functions_copy', False)
            # Obtaining the member 'create_return_from_function' of a type (line 173)
            create_return_from_function_6412 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 37), stypy_functions_copy_6411, 'create_return_from_function')
            # Calling create_return_from_function(args, kwargs) (line 173)
            create_return_from_function_call_result_6417 = invoke(stypy.reporting.localization.Localization(__file__, 173, 37), create_return_from_function_6412, *[lineno_6414, int_6415], **kwargs_6416)
            
            # Processing the call keyword arguments (line 173)
            kwargs_6418 = {}
            # Getting the type of 'function_def' (line 173)
            function_def_6408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 12), 'function_def', False)
            # Obtaining the member 'body' of a type (line 173)
            body_6409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 12), function_def_6408, 'body')
            # Obtaining the member 'append' of a type (line 173)
            append_6410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 12), body_6409, 'append')
            # Calling append(args, kwargs) (line 173)
            append_call_result_6419 = invoke(stypy.reporting.localization.Localization(__file__, 173, 12), append_6410, *[create_return_from_function_call_result_6417], **kwargs_6418)
            
            # SSA join for if statement (line 171)
            module_type_store = module_type_store.join_ssa_context()
            

        
        
        # Call to is_method(...): (line 175)
        # Processing the call arguments (line 175)
        # Getting the type of 'context' (line 175)
        context_6422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 40), 'context', False)
        # Processing the call keyword arguments (line 175)
        kwargs_6423 = {}
        # Getting the type of 'functions_copy' (line 175)
        functions_copy_6420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 15), 'functions_copy', False)
        # Obtaining the member 'is_method' of a type (line 175)
        is_method_6421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 175, 15), functions_copy_6420, 'is_method')
        # Calling is_method(args, kwargs) (line 175)
        is_method_call_result_6424 = invoke(stypy.reporting.localization.Localization(__file__, 175, 15), is_method_6421, *[context_6422], **kwargs_6423)
        
        # Applying the 'not' unary operator (line 175)
        result_not__6425 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 11), 'not', is_method_call_result_6424)
        
        # Testing if the type of an if condition is none (line 175)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 175, 8), result_not__6425):
            
            # Assigning a List to a Name (line 180):
            
            # Assigning a List to a Name (line 180):
            
            # Obtaining an instance of the builtin type 'list' (line 180)
            list_6443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 28), 'list')
            # Adding type elements to the builtin type 'list' instance (line 180)
            
            # Assigning a type to the variable 'register_expr' (line 180)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 12), 'register_expr', list_6443)
        else:
            
            # Testing the type of an if condition (line 175)
            if_condition_6426 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 175, 8), result_not__6425)
            # Assigning a type to the variable 'if_condition_6426' (line 175)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 8), 'if_condition_6426', if_condition_6426)
            # SSA begins for if statement (line 175)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 177):
            
            # Assigning a Call to a Name (line 177):
            
            # Call to create_set_type_of(...): (line 177)
            # Processing the call arguments (line 177)
            # Getting the type of 'node' (line 177)
            node_6429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 68), 'node', False)
            # Obtaining the member 'name' of a type (line 177)
            name_6430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 68), node_6429, 'name')
            
            # Call to create_Name(...): (line 177)
            # Processing the call arguments (line 177)
            # Getting the type of 'node' (line 177)
            node_6433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 110), 'node', False)
            # Obtaining the member 'name' of a type (line 177)
            name_6434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 110), node_6433, 'name')
            # Processing the call keyword arguments (line 177)
            kwargs_6435 = {}
            # Getting the type of 'core_language_copy' (line 177)
            core_language_copy_6431 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 79), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 177)
            create_Name_6432 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 79), core_language_copy_6431, 'create_Name')
            # Calling create_Name(args, kwargs) (line 177)
            create_Name_call_result_6436 = invoke(stypy.reporting.localization.Localization(__file__, 177, 79), create_Name_6432, *[name_6434], **kwargs_6435)
            
            # Getting the type of 'node' (line 178)
            node_6437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 63), 'node', False)
            # Obtaining the member 'lineno' of a type (line 178)
            lineno_6438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 63), node_6437, 'lineno')
            # Getting the type of 'node' (line 178)
            node_6439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 76), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 178)
            col_offset_6440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 76), node_6439, 'col_offset')
            # Processing the call keyword arguments (line 177)
            kwargs_6441 = {}
            # Getting the type of 'stypy_functions_copy' (line 177)
            stypy_functions_copy_6427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 28), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 177)
            create_set_type_of_6428 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 28), stypy_functions_copy_6427, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 177)
            create_set_type_of_call_result_6442 = invoke(stypy.reporting.localization.Localization(__file__, 177, 28), create_set_type_of_6428, *[name_6430, create_Name_call_result_6436, lineno_6438, col_offset_6440], **kwargs_6441)
            
            # Assigning a type to the variable 'register_expr' (line 177)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 12), 'register_expr', create_set_type_of_call_result_6442)
            # SSA branch for the else part of an if statement (line 175)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a List to a Name (line 180):
            
            # Assigning a List to a Name (line 180):
            
            # Obtaining an instance of the builtin type 'list' (line 180)
            list_6443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 28), 'list')
            # Adding type elements to the builtin type 'list' instance (line 180)
            
            # Assigning a type to the variable 'register_expr' (line 180)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 12), 'register_expr', list_6443)
            # SSA join for if statement (line 175)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to flatten_lists(...): (line 182)
        # Processing the call arguments (line 182)
        # Getting the type of 'function_def' (line 182)
        function_def_6446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 50), 'function_def', False)
        # Getting the type of 'register_expr' (line 182)
        register_expr_6447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 64), 'register_expr', False)
        # Processing the call keyword arguments (line 182)
        kwargs_6448 = {}
        # Getting the type of 'stypy_functions_copy' (line 182)
        stypy_functions_copy_6444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 182)
        flatten_lists_6445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 182, 15), stypy_functions_copy_6444, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 182)
        flatten_lists_call_result_6449 = invoke(stypy.reporting.localization.Localization(__file__, 182, 15), flatten_lists_6445, *[function_def_6446, register_expr_6447], **kwargs_6448)
        
        # Assigning a type to the variable 'stypy_return_type' (line 182)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 182, 8), 'stypy_return_type', flatten_lists_call_result_6449)
        
        # ################# End of 'visit_FunctionDef(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_FunctionDef' in the type store
        # Getting the type of 'stypy_return_type' (line 67)
        stypy_return_type_6450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_6450)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_FunctionDef'
        return stypy_return_type_6450


    @norecursion
    def visit_Return(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Return'
        module_type_store = module_type_store.open_function_context('visit_Return', 184, 4, False)
        # Assigning a type to the variable 'self' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Return')
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Return', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Return', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Return(...)' code ##################

        
        # Assigning a Call to a Name (line 187):
        
        # Assigning a Call to a Name (line 187):
        
        # Call to create_attribute(...): (line 187)
        # Processing the call arguments (line 187)
        str_6453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 57), 'str', 'union_type')
        str_6454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 71), 'str', 'UnionType')
        # Processing the call keyword arguments (line 187)
        kwargs_6455 = {}
        # Getting the type of 'core_language_copy' (line 187)
        core_language_copy_6451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 21), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 187)
        create_attribute_6452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 21), core_language_copy_6451, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 187)
        create_attribute_call_result_6456 = invoke(stypy.reporting.localization.Localization(__file__, 187, 21), create_attribute_6452, *[str_6453, str_6454], **kwargs_6455)
        
        # Assigning a type to the variable 'union_type' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 8), 'union_type', create_attribute_call_result_6456)
        
        # Assigning a Call to a Name (line 188):
        
        # Assigning a Call to a Name (line 188):
        
        # Call to create_attribute(...): (line 188)
        # Processing the call arguments (line 188)
        # Getting the type of 'union_type' (line 188)
        union_type_6459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 56), 'union_type', False)
        str_6460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 68), 'str', 'add')
        # Processing the call keyword arguments (line 188)
        kwargs_6461 = {}
        # Getting the type of 'core_language_copy' (line 188)
        core_language_copy_6457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 20), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 188)
        create_attribute_6458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 20), core_language_copy_6457, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 188)
        create_attribute_call_result_6462 = invoke(stypy.reporting.localization.Localization(__file__, 188, 20), create_attribute_6458, *[union_type_6459, str_6460], **kwargs_6461)
        
        # Assigning a type to the variable 'union_add' (line 188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'union_add', create_attribute_call_result_6462)
        
        # Assigning a Call to a Name (line 189):
        
        # Assigning a Call to a Name (line 189):
        
        # Call to create_Name(...): (line 189)
        # Processing the call arguments (line 189)
        # Getting the type of 'stypy_functions_copy' (line 189)
        stypy_functions_copy_6465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 66), 'stypy_functions_copy', False)
        # Obtaining the member 'default_function_ret_var_name' of a type (line 189)
        default_function_ret_var_name_6466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 66), stypy_functions_copy_6465, 'default_function_ret_var_name')
        # Processing the call keyword arguments (line 189)
        kwargs_6467 = {}
        # Getting the type of 'core_language_copy' (line 189)
        core_language_copy_6463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 35), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 189)
        create_Name_6464 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 35), core_language_copy_6463, 'create_Name')
        # Calling create_Name(args, kwargs) (line 189)
        create_Name_call_result_6468 = invoke(stypy.reporting.localization.Localization(__file__, 189, 35), create_Name_6464, *[default_function_ret_var_name_6466], **kwargs_6467)
        
        # Assigning a type to the variable 'default_function_ret_var' (line 189)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'default_function_ret_var', create_Name_call_result_6468)
        
        # Getting the type of 'node' (line 190)
        node_6469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 11), 'node')
        # Obtaining the member 'value' of a type (line 190)
        value_6470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 11), node_6469, 'value')
        # Getting the type of 'None' (line 190)
        None_6471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 29), 'None')
        # Applying the binary operator 'isnot' (line 190)
        result_is_not_6472 = python_operator(stypy.reporting.localization.Localization(__file__, 190, 11), 'isnot', value_6470, None_6471)
        
        # Testing if the type of an if condition is none (line 190)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 190, 8), result_is_not_6472):
            
            # Assigning a Tuple to a Tuple (line 193):
            
            # Assigning a List to a Name (line 193):
            
            # Obtaining an instance of the builtin type 'list' (line 193)
            list_6487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 41), 'list')
            # Adding type elements to the builtin type 'list' instance (line 193)
            
            # Assigning a type to the variable 'tuple_assignment_5685' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5685', list_6487)
            
            # Assigning a Call to a Name (line 193):
            
            # Call to create_Name(...): (line 193)
            # Processing the call arguments (line 193)
            str_6490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 76), 'str', 'types.NoneType')
            # Processing the call keyword arguments (line 193)
            kwargs_6491 = {}
            # Getting the type of 'core_language_copy' (line 193)
            core_language_copy_6488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 45), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 193)
            create_Name_6489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 45), core_language_copy_6488, 'create_Name')
            # Calling create_Name(args, kwargs) (line 193)
            create_Name_call_result_6492 = invoke(stypy.reporting.localization.Localization(__file__, 193, 45), create_Name_6489, *[str_6490], **kwargs_6491)
            
            # Assigning a type to the variable 'tuple_assignment_5686' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5686', create_Name_call_result_6492)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_5685' (line 193)
            tuple_assignment_5685_6493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5685')
            # Assigning a type to the variable 'get_value_stmts' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'get_value_stmts', tuple_assignment_5685_6493)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_5686' (line 193)
            tuple_assignment_5686_6494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5686')
            # Assigning a type to the variable 'value_var' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 29), 'value_var', tuple_assignment_5686_6494)
        else:
            
            # Testing the type of an if condition (line 190)
            if_condition_6473 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 190, 8), result_is_not_6472)
            # Assigning a type to the variable 'if_condition_6473' (line 190)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'if_condition_6473', if_condition_6473)
            # SSA begins for if statement (line 190)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 191):
            
            # Assigning a Call to a Name:
            
            # Call to visit_value(...): (line 191)
            # Processing the call arguments (line 191)
            # Getting the type of 'node' (line 191)
            node_6476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 58), 'node', False)
            # Obtaining the member 'value' of a type (line 191)
            value_6477 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 58), node_6476, 'value')
            # Getting the type of 'context' (line 191)
            context_6478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 70), 'context', False)
            # Processing the call keyword arguments (line 191)
            kwargs_6479 = {}
            # Getting the type of 'self' (line 191)
            self_6474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 41), 'self', False)
            # Obtaining the member 'visit_value' of a type (line 191)
            visit_value_6475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 41), self_6474, 'visit_value')
            # Calling visit_value(args, kwargs) (line 191)
            visit_value_call_result_6480 = invoke(stypy.reporting.localization.Localization(__file__, 191, 41), visit_value_6475, *[value_6477, context_6478], **kwargs_6479)
            
            # Assigning a type to the variable 'call_assignment_5682' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_5682', visit_value_call_result_6480)
            
            # Assigning a Call to a Name (line 191):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5682' (line 191)
            call_assignment_5682_6481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_5682', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6482 = stypy_get_value_from_tuple(call_assignment_5682_6481, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5683' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_5683', stypy_get_value_from_tuple_call_result_6482)
            
            # Assigning a Name to a Name (line 191):
            # Getting the type of 'call_assignment_5683' (line 191)
            call_assignment_5683_6483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_5683')
            # Assigning a type to the variable 'get_value_stmts' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'get_value_stmts', call_assignment_5683_6483)
            
            # Assigning a Call to a Name (line 191):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5682' (line 191)
            call_assignment_5682_6484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_5682', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6485 = stypy_get_value_from_tuple(call_assignment_5682_6484, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5684' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_5684', stypy_get_value_from_tuple_call_result_6485)
            
            # Assigning a Name to a Name (line 191):
            # Getting the type of 'call_assignment_5684' (line 191)
            call_assignment_5684_6486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_5684')
            # Assigning a type to the variable 'value_var' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 29), 'value_var', call_assignment_5684_6486)
            # SSA branch for the else part of an if statement (line 190)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Tuple to a Tuple (line 193):
            
            # Assigning a List to a Name (line 193):
            
            # Obtaining an instance of the builtin type 'list' (line 193)
            list_6487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 41), 'list')
            # Adding type elements to the builtin type 'list' instance (line 193)
            
            # Assigning a type to the variable 'tuple_assignment_5685' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5685', list_6487)
            
            # Assigning a Call to a Name (line 193):
            
            # Call to create_Name(...): (line 193)
            # Processing the call arguments (line 193)
            str_6490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 76), 'str', 'types.NoneType')
            # Processing the call keyword arguments (line 193)
            kwargs_6491 = {}
            # Getting the type of 'core_language_copy' (line 193)
            core_language_copy_6488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 45), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 193)
            create_Name_6489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 45), core_language_copy_6488, 'create_Name')
            # Calling create_Name(args, kwargs) (line 193)
            create_Name_call_result_6492 = invoke(stypy.reporting.localization.Localization(__file__, 193, 45), create_Name_6489, *[str_6490], **kwargs_6491)
            
            # Assigning a type to the variable 'tuple_assignment_5686' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5686', create_Name_call_result_6492)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_5685' (line 193)
            tuple_assignment_5685_6493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5685')
            # Assigning a type to the variable 'get_value_stmts' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'get_value_stmts', tuple_assignment_5685_6493)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_5686' (line 193)
            tuple_assignment_5686_6494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_5686')
            # Assigning a type to the variable 'value_var' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 29), 'value_var', tuple_assignment_5686_6494)
            # SSA join for if statement (line 190)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Call to a Name (line 195):
        
        # Assigning a Call to a Name (line 195):
        
        # Call to create_call(...): (line 195)
        # Processing the call arguments (line 195)
        # Getting the type of 'union_add' (line 195)
        union_add_6497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 48), 'union_add', False)
        
        # Obtaining an instance of the builtin type 'list' (line 195)
        list_6498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 195)
        # Adding element type (line 195)
        # Getting the type of 'default_function_ret_var' (line 195)
        default_function_ret_var_6499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 60), 'default_function_ret_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 59), list_6498, default_function_ret_var_6499)
        # Adding element type (line 195)
        # Getting the type of 'value_var' (line 195)
        value_var_6500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 86), 'value_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 59), list_6498, value_var_6500)
        
        # Processing the call keyword arguments (line 195)
        kwargs_6501 = {}
        # Getting the type of 'functions_copy' (line 195)
        functions_copy_6495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 21), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 195)
        create_call_6496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 21), functions_copy_6495, 'create_call')
        # Calling create_call(args, kwargs) (line 195)
        create_call_call_result_6502 = invoke(stypy.reporting.localization.Localization(__file__, 195, 21), create_call_6496, *[union_add_6497, list_6498], **kwargs_6501)
        
        # Assigning a type to the variable 'union_call' (line 195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'union_call', create_call_call_result_6502)
        
        # Assigning a Call to a Name (line 199):
        
        # Assigning a Call to a Name (line 199):
        
        # Call to assign_as_return_type(...): (line 199)
        # Processing the call arguments (line 199)
        # Getting the type of 'union_call' (line 199)
        union_call_6505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 64), 'union_call', False)
        # Processing the call keyword arguments (line 199)
        kwargs_6506 = {}
        # Getting the type of 'stypy_functions_copy' (line 199)
        stypy_functions_copy_6503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 21), 'stypy_functions_copy', False)
        # Obtaining the member 'assign_as_return_type' of a type (line 199)
        assign_as_return_type_6504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 21), stypy_functions_copy_6503, 'assign_as_return_type')
        # Calling assign_as_return_type(args, kwargs) (line 199)
        assign_as_return_type_call_result_6507 = invoke(stypy.reporting.localization.Localization(__file__, 199, 21), assign_as_return_type_6504, *[union_call_6505], **kwargs_6506)
        
        # Assigning a type to the variable 'ret_assign' (line 199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'ret_assign', assign_as_return_type_call_result_6507)
        
        # Call to flatten_lists(...): (line 200)
        # Processing the call arguments (line 200)
        # Getting the type of 'get_value_stmts' (line 200)
        get_value_stmts_6510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 50), 'get_value_stmts', False)
        # Getting the type of 'ret_assign' (line 200)
        ret_assign_6511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 67), 'ret_assign', False)
        # Processing the call keyword arguments (line 200)
        kwargs_6512 = {}
        # Getting the type of 'stypy_functions_copy' (line 200)
        stypy_functions_copy_6508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 200)
        flatten_lists_6509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 15), stypy_functions_copy_6508, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 200)
        flatten_lists_call_result_6513 = invoke(stypy.reporting.localization.Localization(__file__, 200, 15), flatten_lists_6509, *[get_value_stmts_6510, ret_assign_6511], **kwargs_6512)
        
        # Assigning a type to the variable 'stypy_return_type' (line 200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'stypy_return_type', flatten_lists_call_result_6513)
        
        # ################# End of 'visit_Return(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Return' in the type store
        # Getting the type of 'stypy_return_type' (line 184)
        stypy_return_type_6514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_6514)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Return'
        return stypy_return_type_6514


    @norecursion
    def visit_ClassDef(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_ClassDef'
        module_type_store = module_type_store.open_function_context('visit_ClassDef', 204, 4, False)
        # Assigning a type to the variable 'self' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_ClassDef')
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_ClassDef', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_ClassDef', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_ClassDef(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 207):
        
        # Assigning a Attribute to a Attribute (line 207):
        # Getting the type of 'node' (line 207)
        node_6515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 35), 'node')
        # Obtaining the member 'name' of a type (line 207)
        name_6516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 35), node_6515, 'name')
        # Getting the type of 'self' (line 207)
        self_6517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'self')
        # Setting the type of the member 'building_class_name' of a type (line 207)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 8), self_6517, 'building_class_name', name_6516)
        
        # Assigning a Call to a Name (line 210):
        
        # Assigning a Call to a Name (line 210):
        
        # Call to create_src_comment(...): (line 210)
        # Processing the call arguments (line 210)
        
        # Call to format(...): (line 210)
        # Processing the call arguments (line 210)
        # Getting the type of 'node' (line 210)
        node_6522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 106), 'node', False)
        # Obtaining the member 'name' of a type (line 210)
        name_6523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 106), node_6522, 'name')
        # Processing the call keyword arguments (line 210)
        kwargs_6524 = {}
        str_6520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 66), 'str', "Declaration of the '{0}' class")
        # Obtaining the member 'format' of a type (line 210)
        format_6521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 66), str_6520, 'format')
        # Calling format(args, kwargs) (line 210)
        format_call_result_6525 = invoke(stypy.reporting.localization.Localization(__file__, 210, 66), format_6521, *[name_6523], **kwargs_6524)
        
        # Processing the call keyword arguments (line 210)
        kwargs_6526 = {}
        # Getting the type of 'stypy_functions_copy' (line 210)
        stypy_functions_copy_6518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 210)
        create_src_comment_6519 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 26), stypy_functions_copy_6518, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 210)
        create_src_comment_call_result_6527 = invoke(stypy.reporting.localization.Localization(__file__, 210, 26), create_src_comment_6519, *[format_call_result_6525], **kwargs_6526)
        
        # Assigning a type to the variable 'initial_comment' (line 210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 8), 'initial_comment', create_src_comment_call_result_6527)
        
        # Assigning a List to a Name (line 213):
        
        # Assigning a List to a Name (line 213):
        
        # Obtaining an instance of the builtin type 'list' (line 213)
        list_6528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 213)
        
        # Assigning a type to the variable 'superclass_inst' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'superclass_inst', list_6528)
        
        # Assigning a List to a Name (line 214):
        
        # Assigning a List to a Name (line 214):
        
        # Obtaining an instance of the builtin type 'list' (line 214)
        list_6529 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 214)
        
        # Assigning a type to the variable 'new_bases' (line 214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'new_bases', list_6529)
        
        # Getting the type of 'node' (line 215)
        node_6530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 26), 'node')
        # Obtaining the member 'bases' of a type (line 215)
        bases_6531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 26), node_6530, 'bases')
        # Assigning a type to the variable 'bases_6531' (line 215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'bases_6531', bases_6531)
        # Testing if the for loop is going to be iterated (line 215)
        # Testing the type of a for loop iterable (line 215)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 215, 8), bases_6531)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 215, 8), bases_6531):
            # Getting the type of the for loop variable (line 215)
            for_loop_var_6532 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 215, 8), bases_6531)
            # Assigning a type to the variable 'class_name' (line 215)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'class_name', for_loop_var_6532)
            # SSA begins for a for statement (line 215)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 216):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 216)
            # Processing the call arguments (line 216)
            # Getting the type of 'class_name' (line 216)
            class_name_6535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 47), 'class_name', False)
            # Getting the type of 'context' (line 217)
            context_6536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 47), 'context', False)
            # Processing the call keyword arguments (line 216)
            kwargs_6537 = {}
            # Getting the type of 'self' (line 216)
            self_6533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 216)
            visit_6534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 36), self_6533, 'visit')
            # Calling visit(args, kwargs) (line 216)
            visit_call_result_6538 = invoke(stypy.reporting.localization.Localization(__file__, 216, 36), visit_6534, *[class_name_6535, context_6536], **kwargs_6537)
            
            # Assigning a type to the variable 'call_assignment_5687' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_5687', visit_call_result_6538)
            
            # Assigning a Call to a Name (line 216):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5687' (line 216)
            call_assignment_5687_6539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_5687', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6540 = stypy_get_value_from_tuple(call_assignment_5687_6539, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5688' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_5688', stypy_get_value_from_tuple_call_result_6540)
            
            # Assigning a Name to a Name (line 216):
            # Getting the type of 'call_assignment_5688' (line 216)
            call_assignment_5688_6541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_5688')
            # Assigning a type to the variable 'superclass_' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'superclass_', call_assignment_5688_6541)
            
            # Assigning a Call to a Name (line 216):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5687' (line 216)
            call_assignment_5687_6542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_5687', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6543 = stypy_get_value_from_tuple(call_assignment_5687_6542, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5689' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_5689', stypy_get_value_from_tuple_call_result_6543)
            
            # Assigning a Name to a Name (line 216):
            # Getting the type of 'call_assignment_5689' (line 216)
            call_assignment_5689_6544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_5689')
            # Assigning a type to the variable 'type_var' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 25), 'type_var', call_assignment_5689_6544)
            
            # Call to append(...): (line 222)
            # Processing the call arguments (line 222)
            # Getting the type of 'superclass_' (line 222)
            superclass__6547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 35), 'superclass_', False)
            # Processing the call keyword arguments (line 222)
            kwargs_6548 = {}
            # Getting the type of 'superclass_inst' (line 222)
            superclass_inst_6545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 12), 'superclass_inst', False)
            # Obtaining the member 'append' of a type (line 222)
            append_6546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 12), superclass_inst_6545, 'append')
            # Calling append(args, kwargs) (line 222)
            append_call_result_6549 = invoke(stypy.reporting.localization.Localization(__file__, 222, 12), append_6546, *[superclass__6547], **kwargs_6548)
            
            
            # Call to append(...): (line 223)
            # Processing the call arguments (line 223)
            # Getting the type of 'type_var' (line 223)
            type_var_6552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 29), 'type_var', False)
            # Processing the call keyword arguments (line 223)
            kwargs_6553 = {}
            # Getting the type of 'new_bases' (line 223)
            new_bases_6550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 12), 'new_bases', False)
            # Obtaining the member 'append' of a type (line 223)
            append_6551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 12), new_bases_6550, 'append')
            # Calling append(args, kwargs) (line 223)
            append_call_result_6554 = invoke(stypy.reporting.localization.Localization(__file__, 223, 12), append_6551, *[type_var_6552], **kwargs_6553)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a List to a Attribute (line 225):
        
        # Assigning a List to a Attribute (line 225):
        
        # Obtaining an instance of the builtin type 'list' (line 225)
        list_6555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 225)
        
        # Getting the type of 'node' (line 225)
        node_6556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 8), 'node')
        # Setting the type of the member 'bases' of a type (line 225)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 8), node_6556, 'bases', list_6555)
        
        # Assigning a List to a Attribute (line 228):
        
        # Assigning a List to a Attribute (line 228):
        
        # Obtaining an instance of the builtin type 'list' (line 228)
        list_6557 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 228)
        
        # Getting the type of 'node' (line 228)
        node_6558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'node')
        # Setting the type of the member 'decorator_list' of a type (line 228)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 8), node_6558, 'decorator_list', list_6557)
        
        # Call to append(...): (line 230)
        # Processing the call arguments (line 230)
        # Getting the type of 'node' (line 230)
        node_6561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 23), 'node', False)
        # Processing the call keyword arguments (line 230)
        kwargs_6562 = {}
        # Getting the type of 'context' (line 230)
        context_6559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 230)
        append_6560 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 8), context_6559, 'append')
        # Calling append(args, kwargs) (line 230)
        append_call_result_6563 = invoke(stypy.reporting.localization.Localization(__file__, 230, 8), append_6560, *[node_6561], **kwargs_6562)
        
        
        # Assigning a Call to a Attribute (line 232):
        
        # Assigning a Call to a Attribute (line 232):
        
        # Call to __visit_instruction_body(...): (line 232)
        # Processing the call arguments (line 232)
        # Getting the type of 'node' (line 232)
        node_6566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 50), 'node', False)
        # Obtaining the member 'body' of a type (line 232)
        body_6567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 50), node_6566, 'body')
        # Getting the type of 'context' (line 232)
        context_6568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 61), 'context', False)
        # Processing the call keyword arguments (line 232)
        kwargs_6569 = {}
        # Getting the type of 'self' (line 232)
        self_6564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 20), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 232)
        visit_instruction_body_6565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 20), self_6564, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 232)
        visit_instruction_body_call_result_6570 = invoke(stypy.reporting.localization.Localization(__file__, 232, 20), visit_instruction_body_6565, *[body_6567, context_6568], **kwargs_6569)
        
        # Getting the type of 'node' (line 232)
        node_6571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'node')
        # Setting the type of the member 'body' of a type (line 232)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 8), node_6571, 'body', visit_instruction_body_call_result_6570)
        
        # Call to remove(...): (line 234)
        # Processing the call arguments (line 234)
        # Getting the type of 'node' (line 234)
        node_6574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 23), 'node', False)
        # Processing the call keyword arguments (line 234)
        kwargs_6575 = {}
        # Getting the type of 'context' (line 234)
        context_6572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 234)
        remove_6573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 8), context_6572, 'remove')
        # Calling remove(args, kwargs) (line 234)
        remove_call_result_6576 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), remove_6573, *[node_6574], **kwargs_6575)
        
        
        # Assigning a Call to a Name (line 236):
        
        # Assigning a Call to a Name (line 236):
        
        # Call to create_set_type_of(...): (line 236)
        # Processing the call arguments (line 236)
        # Getting the type of 'node' (line 236)
        node_6579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 64), 'node', False)
        # Obtaining the member 'name' of a type (line 236)
        name_6580 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 64), node_6579, 'name')
        
        # Call to create_Name(...): (line 236)
        # Processing the call arguments (line 236)
        # Getting the type of 'node' (line 236)
        node_6583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 106), 'node', False)
        # Obtaining the member 'name' of a type (line 236)
        name_6584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 106), node_6583, 'name')
        # Processing the call keyword arguments (line 236)
        kwargs_6585 = {}
        # Getting the type of 'core_language_copy' (line 236)
        core_language_copy_6581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 75), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 236)
        create_Name_6582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 75), core_language_copy_6581, 'create_Name')
        # Calling create_Name(args, kwargs) (line 236)
        create_Name_call_result_6586 = invoke(stypy.reporting.localization.Localization(__file__, 236, 75), create_Name_6582, *[name_6584], **kwargs_6585)
        
        # Getting the type of 'node' (line 237)
        node_6587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 59), 'node', False)
        # Obtaining the member 'lineno' of a type (line 237)
        lineno_6588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 59), node_6587, 'lineno')
        # Getting the type of 'node' (line 237)
        node_6589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 72), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 237)
        col_offset_6590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 72), node_6589, 'col_offset')
        # Processing the call keyword arguments (line 236)
        kwargs_6591 = {}
        # Getting the type of 'stypy_functions_copy' (line 236)
        stypy_functions_copy_6577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 24), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_of' of a type (line 236)
        create_set_type_of_6578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 24), stypy_functions_copy_6577, 'create_set_type_of')
        # Calling create_set_type_of(args, kwargs) (line 236)
        create_set_type_of_call_result_6592 = invoke(stypy.reporting.localization.Localization(__file__, 236, 24), create_set_type_of_6578, *[name_6580, create_Name_call_result_6586, lineno_6588, col_offset_6590], **kwargs_6591)
        
        # Assigning a type to the variable 'register_expr' (line 236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'register_expr', create_set_type_of_call_result_6592)
        
        
        # Call to len(...): (line 240)
        # Processing the call arguments (line 240)
        # Getting the type of 'new_bases' (line 240)
        new_bases_6594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 15), 'new_bases', False)
        # Processing the call keyword arguments (line 240)
        kwargs_6595 = {}
        # Getting the type of 'len' (line 240)
        len_6593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 11), 'len', False)
        # Calling len(args, kwargs) (line 240)
        len_call_result_6596 = invoke(stypy.reporting.localization.Localization(__file__, 240, 11), len_6593, *[new_bases_6594], **kwargs_6595)
        
        int_6597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 28), 'int')
        # Applying the binary operator '>' (line 240)
        result_gt_6598 = python_operator(stypy.reporting.localization.Localization(__file__, 240, 11), '>', len_call_result_6596, int_6597)
        
        # Testing if the type of an if condition is none (line 240)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 240, 8), result_gt_6598):
            
            # Assigning a List to a Name (line 249):
            
            # Assigning a List to a Name (line 249):
            
            # Obtaining an instance of the builtin type 'list' (line 249)
            list_6646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 27), 'list')
            # Adding type elements to the builtin type 'list' instance (line 249)
            
            # Assigning a type to the variable 'change_bases' (line 249)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'change_bases', list_6646)
        else:
            
            # Testing the type of an if condition (line 240)
            if_condition_6599 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 240, 8), result_gt_6598)
            # Assigning a type to the variable 'if_condition_6599' (line 240)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'if_condition_6599', if_condition_6599)
            # SSA begins for if statement (line 240)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 241):
            
            # Assigning a Call to a Name:
            
            # Call to create_get_type_of(...): (line 241)
            # Processing the call arguments (line 241)
            # Getting the type of 'node' (line 241)
            node_6602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 80), 'node', False)
            # Obtaining the member 'name' of a type (line 241)
            name_6603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 80), node_6602, 'name')
            # Getting the type of 'node' (line 242)
            node_6604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 75), 'node', False)
            # Obtaining the member 'lineno' of a type (line 242)
            lineno_6605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 75), node_6604, 'lineno')
            # Getting the type of 'node' (line 242)
            node_6606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 88), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 242)
            col_offset_6607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 88), node_6606, 'col_offset')
            # Processing the call keyword arguments (line 241)
            kwargs_6608 = {}
            # Getting the type of 'stypy_functions_copy' (line 241)
            stypy_functions_copy_6600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 40), 'stypy_functions_copy', False)
            # Obtaining the member 'create_get_type_of' of a type (line 241)
            create_get_type_of_6601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 40), stypy_functions_copy_6600, 'create_get_type_of')
            # Calling create_get_type_of(args, kwargs) (line 241)
            create_get_type_of_call_result_6609 = invoke(stypy.reporting.localization.Localization(__file__, 241, 40), create_get_type_of_6601, *[name_6603, lineno_6605, col_offset_6607], **kwargs_6608)
            
            # Assigning a type to the variable 'call_assignment_5690' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_5690', create_get_type_of_call_result_6609)
            
            # Assigning a Call to a Name (line 241):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5690' (line 241)
            call_assignment_5690_6610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_5690', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6611 = stypy_get_value_from_tuple(call_assignment_5690_6610, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5691' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_5691', stypy_get_value_from_tuple_call_result_6611)
            
            # Assigning a Name to a Name (line 241):
            # Getting the type of 'call_assignment_5691' (line 241)
            call_assignment_5691_6612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_5691')
            # Assigning a type to the variable 'class_obj_inst' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'class_obj_inst', call_assignment_5691_6612)
            
            # Assigning a Call to a Name (line 241):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5690' (line 241)
            call_assignment_5690_6613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_5690', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6614 = stypy_get_value_from_tuple(call_assignment_5690_6613, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5692' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_5692', stypy_get_value_from_tuple_call_result_6614)
            
            # Assigning a Name to a Name (line 241):
            # Getting the type of 'call_assignment_5692' (line 241)
            call_assignment_5692_6615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_5692')
            # Assigning a type to the variable 'class_var' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 28), 'class_var', call_assignment_5692_6615)
            
            # Assigning a Call to a Name (line 243):
            
            # Assigning a Call to a Name (line 243):
            
            # Call to create_attribute(...): (line 243)
            # Processing the call arguments (line 243)
            # Getting the type of 'class_var' (line 243)
            class_var_6618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 72), 'class_var', False)
            str_6619 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 83), 'str', 'change_base_types')
            # Processing the call keyword arguments (line 243)
            kwargs_6620 = {}
            # Getting the type of 'core_language_copy' (line 243)
            core_language_copy_6616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 36), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 243)
            create_attribute_6617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 36), core_language_copy_6616, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 243)
            create_attribute_call_result_6621 = invoke(stypy.reporting.localization.Localization(__file__, 243, 36), create_attribute_6617, *[class_var_6618, str_6619], **kwargs_6620)
            
            # Assigning a type to the variable 'change_base_types_att' (line 243)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 12), 'change_base_types_att', create_attribute_call_result_6621)
            
            # Assigning a Call to a Name (line 244):
            
            # Assigning a Call to a Name (line 244):
            
            # Call to create_type_tuple(...): (line 244)
            # Getting the type of 'new_bases' (line 244)
            new_bases_6624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 64), 'new_bases', False)
            # Processing the call keyword arguments (line 244)
            kwargs_6625 = {}
            # Getting the type of 'core_language_copy' (line 244)
            core_language_copy_6622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 26), 'core_language_copy', False)
            # Obtaining the member 'create_type_tuple' of a type (line 244)
            create_type_tuple_6623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 26), core_language_copy_6622, 'create_type_tuple')
            # Calling create_type_tuple(args, kwargs) (line 244)
            create_type_tuple_call_result_6626 = invoke(stypy.reporting.localization.Localization(__file__, 244, 26), create_type_tuple_6623, *[new_bases_6624], **kwargs_6625)
            
            # Assigning a type to the variable 'bases_tuple' (line 244)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 12), 'bases_tuple', create_type_tuple_call_result_6626)
            
            # Assigning a Call to a Name (line 245):
            
            # Assigning a Call to a Name (line 245):
            
            # Call to create_localization(...): (line 245)
            # Processing the call arguments (line 245)
            # Getting the type of 'node' (line 245)
            node_6629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 245)
            lineno_6630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 68), node_6629, 'lineno')
            # Getting the type of 'node' (line 245)
            node_6631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 245)
            col_offset_6632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 81), node_6631, 'col_offset')
            # Processing the call keyword arguments (line 245)
            kwargs_6633 = {}
            # Getting the type of 'stypy_functions_copy' (line 245)
            stypy_functions_copy_6627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 245)
            create_localization_6628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 27), stypy_functions_copy_6627, 'create_localization')
            # Calling create_localization(args, kwargs) (line 245)
            create_localization_call_result_6634 = invoke(stypy.reporting.localization.Localization(__file__, 245, 27), create_localization_6628, *[lineno_6630, col_offset_6632], **kwargs_6633)
            
            # Assigning a type to the variable 'localization' (line 245)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 12), 'localization', create_localization_call_result_6634)
            
            # Assigning a Call to a Name (line 246):
            
            # Assigning a Call to a Name (line 246):
            
            # Call to create_call_expression(...): (line 246)
            # Processing the call arguments (line 246)
            # Getting the type of 'change_base_types_att' (line 246)
            change_base_types_att_6637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 70), 'change_base_types_att', False)
            
            # Obtaining an instance of the builtin type 'list' (line 246)
            list_6638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 93), 'list')
            # Adding type elements to the builtin type 'list' instance (line 246)
            # Adding element type (line 246)
            # Getting the type of 'localization' (line 246)
            localization_6639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 94), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 93), list_6638, localization_6639)
            # Adding element type (line 246)
            # Getting the type of 'bases_tuple' (line 246)
            bases_tuple_6640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 108), 'bases_tuple', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 93), list_6638, bases_tuple_6640)
            
            # Processing the call keyword arguments (line 246)
            kwargs_6641 = {}
            # Getting the type of 'functions_copy' (line 246)
            functions_copy_6635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 32), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 246)
            create_call_expression_6636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 32), functions_copy_6635, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 246)
            create_call_expression_call_result_6642 = invoke(stypy.reporting.localization.Localization(__file__, 246, 32), create_call_expression_6636, *[change_base_types_att_6637, list_6638], **kwargs_6641)
            
            # Assigning a type to the variable 'change_bases_call' (line 246)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'change_bases_call', create_call_expression_call_result_6642)
            
            # Assigning a List to a Name (line 247):
            
            # Assigning a List to a Name (line 247):
            
            # Obtaining an instance of the builtin type 'list' (line 247)
            list_6643 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 27), 'list')
            # Adding type elements to the builtin type 'list' instance (line 247)
            # Adding element type (line 247)
            # Getting the type of 'class_obj_inst' (line 247)
            class_obj_inst_6644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 28), 'class_obj_inst')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), list_6643, class_obj_inst_6644)
            # Adding element type (line 247)
            # Getting the type of 'change_bases_call' (line 247)
            change_bases_call_6645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 44), 'change_bases_call')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), list_6643, change_bases_call_6645)
            
            # Assigning a type to the variable 'change_bases' (line 247)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'change_bases', list_6643)
            # SSA branch for the else part of an if statement (line 240)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a List to a Name (line 249):
            
            # Assigning a List to a Name (line 249):
            
            # Obtaining an instance of the builtin type 'list' (line 249)
            list_6646 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 27), 'list')
            # Adding type elements to the builtin type 'list' instance (line 249)
            
            # Assigning a type to the variable 'change_bases' (line 249)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'change_bases', list_6646)
            # SSA join for if statement (line 240)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to flatten_lists(...): (line 251)
        # Processing the call arguments (line 251)
        # Getting the type of 'initial_comment' (line 251)
        initial_comment_6649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 50), 'initial_comment', False)
        # Getting the type of 'superclass_inst' (line 251)
        superclass_inst_6650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 67), 'superclass_inst', False)
        # Getting the type of 'node' (line 251)
        node_6651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 84), 'node', False)
        
        # Call to create_blank_line(...): (line 252)
        # Processing the call keyword arguments (line 252)
        kwargs_6654 = {}
        # Getting the type of 'stypy_functions_copy' (line 252)
        stypy_functions_copy_6652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 252)
        create_blank_line_6653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 45), stypy_functions_copy_6652, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 252)
        create_blank_line_call_result_6655 = invoke(stypy.reporting.localization.Localization(__file__, 252, 45), create_blank_line_6653, *[], **kwargs_6654)
        
        # Getting the type of 'register_expr' (line 252)
        register_expr_6656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 87), 'register_expr', False)
        # Getting the type of 'change_bases' (line 252)
        change_bases_6657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 102), 'change_bases', False)
        # Processing the call keyword arguments (line 251)
        kwargs_6658 = {}
        # Getting the type of 'stypy_functions_copy' (line 251)
        stypy_functions_copy_6647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 251)
        flatten_lists_6648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 15), stypy_functions_copy_6647, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 251)
        flatten_lists_call_result_6659 = invoke(stypy.reporting.localization.Localization(__file__, 251, 15), flatten_lists_6648, *[initial_comment_6649, superclass_inst_6650, node_6651, create_blank_line_call_result_6655, register_expr_6656, change_bases_6657], **kwargs_6658)
        
        # Assigning a type to the variable 'stypy_return_type' (line 251)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 8), 'stypy_return_type', flatten_lists_call_result_6659)
        
        # ################# End of 'visit_ClassDef(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_ClassDef' in the type store
        # Getting the type of 'stypy_return_type' (line 204)
        stypy_return_type_6660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_6660)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_ClassDef'
        return stypy_return_type_6660


    @norecursion
    def visit_Assign(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Assign'
        module_type_store = module_type_store.open_function_context('visit_Assign', 256, 4, False)
        # Assigning a type to the variable 'self' (line 257)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Assign')
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Assign', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Assign', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Assign(...)' code ##################

        
        # Assigning a Call to a Tuple (line 259):
        
        # Assigning a Call to a Name:
        
        # Call to visit_value(...): (line 259)
        # Processing the call arguments (line 259)
        # Getting the type of 'node' (line 259)
        node_6663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 55), 'node', False)
        # Obtaining the member 'value' of a type (line 259)
        value_6664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 55), node_6663, 'value')
        # Getting the type of 'context' (line 259)
        context_6665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 67), 'context', False)
        # Processing the call keyword arguments (line 259)
        kwargs_6666 = {}
        # Getting the type of 'self' (line 259)
        self_6661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 38), 'self', False)
        # Obtaining the member 'visit_value' of a type (line 259)
        visit_value_6662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 38), self_6661, 'visit_value')
        # Calling visit_value(args, kwargs) (line 259)
        visit_value_call_result_6667 = invoke(stypy.reporting.localization.Localization(__file__, 259, 38), visit_value_6662, *[value_6664, context_6665], **kwargs_6666)
        
        # Assigning a type to the variable 'call_assignment_5693' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_5693', visit_value_call_result_6667)
        
        # Assigning a Call to a Name (line 259):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5693' (line 259)
        call_assignment_5693_6668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_5693', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_6669 = stypy_get_value_from_tuple(call_assignment_5693_6668, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5694' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_5694', stypy_get_value_from_tuple_call_result_6669)
        
        # Assigning a Name to a Name (line 259):
        # Getting the type of 'call_assignment_5694' (line 259)
        call_assignment_5694_6670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_5694')
        # Assigning a type to the variable 'get_value_stmts' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'get_value_stmts', call_assignment_5694_6670)
        
        # Assigning a Call to a Name (line 259):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5693' (line 259)
        call_assignment_5693_6671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_5693', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_6672 = stypy_get_value_from_tuple(call_assignment_5693_6671, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5695' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_5695', stypy_get_value_from_tuple_call_result_6672)
        
        # Assigning a Name to a Name (line 259):
        # Getting the type of 'call_assignment_5695' (line 259)
        call_assignment_5695_6673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_5695')
        # Assigning a type to the variable 'temp_value' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 25), 'temp_value', call_assignment_5695_6673)
        
        
        # Call to type(...): (line 261)
        # Processing the call arguments (line 261)
        # Getting the type of 'temp_value' (line 261)
        temp_value_6675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'temp_value', False)
        # Processing the call keyword arguments (line 261)
        kwargs_6676 = {}
        # Getting the type of 'type' (line 261)
        type_6674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 11), 'type', False)
        # Calling type(args, kwargs) (line 261)
        type_call_result_6677 = invoke(stypy.reporting.localization.Localization(__file__, 261, 11), type_6674, *[temp_value_6675], **kwargs_6676)
        
        # Getting the type of 'ast' (line 261)
        ast_6678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 31), 'ast')
        # Obtaining the member 'Tuple' of a type (line 261)
        Tuple_6679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 31), ast_6678, 'Tuple')
        # Applying the binary operator 'is' (line 261)
        result_is__6680 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 11), 'is', type_call_result_6677, Tuple_6679)
        
        # Testing if the type of an if condition is none (line 261)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 261, 8), result_is__6680):
            pass
        else:
            
            # Testing the type of an if condition (line 261)
            if_condition_6681 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 261, 8), result_is__6680)
            # Assigning a type to the variable 'if_condition_6681' (line 261)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'if_condition_6681', if_condition_6681)
            # SSA begins for if statement (line 261)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 262):
            
            # Assigning a Subscript to a Name (line 262):
            
            # Obtaining the type of the subscript
            int_6682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 41), 'int')
            # Getting the type of 'temp_value' (line 262)
            temp_value_6683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 25), 'temp_value')
            # Obtaining the member 'elts' of a type (line 262)
            elts_6684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 25), temp_value_6683, 'elts')
            # Obtaining the member '__getitem__' of a type (line 262)
            getitem___6685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 25), elts_6684, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 262)
            subscript_call_result_6686 = invoke(stypy.reporting.localization.Localization(__file__, 262, 25), getitem___6685, int_6682)
            
            # Assigning a type to the variable 'temp_value' (line 262)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'temp_value', subscript_call_result_6686)
            # SSA join for if statement (line 261)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to isinstance(...): (line 264)
        # Processing the call arguments (line 264)
        
        # Obtaining the type of the subscript
        int_6688 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 35), 'int')
        # Getting the type of 'node' (line 264)
        node_6689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 22), 'node', False)
        # Obtaining the member 'targets' of a type (line 264)
        targets_6690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 22), node_6689, 'targets')
        # Obtaining the member '__getitem__' of a type (line 264)
        getitem___6691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 22), targets_6690, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 264)
        subscript_call_result_6692 = invoke(stypy.reporting.localization.Localization(__file__, 264, 22), getitem___6691, int_6688)
        
        # Getting the type of 'ast' (line 264)
        ast_6693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 39), 'ast', False)
        # Obtaining the member 'Name' of a type (line 264)
        Name_6694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 39), ast_6693, 'Name')
        # Processing the call keyword arguments (line 264)
        kwargs_6695 = {}
        # Getting the type of 'isinstance' (line 264)
        isinstance_6687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 264)
        isinstance_call_result_6696 = invoke(stypy.reporting.localization.Localization(__file__, 264, 11), isinstance_6687, *[subscript_call_result_6692, Name_6694], **kwargs_6695)
        
        # Testing if the type of an if condition is none (line 264)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 264, 8), isinstance_call_result_6696):
            
            # Assigning a Call to a Tuple (line 269):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 269)
            # Processing the call arguments (line 269)
            
            # Obtaining the type of the subscript
            int_6716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 67), 'int')
            # Getting the type of 'node' (line 269)
            node_6717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 54), 'node', False)
            # Obtaining the member 'targets' of a type (line 269)
            targets_6718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), node_6717, 'targets')
            # Obtaining the member '__getitem__' of a type (line 269)
            getitem___6719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), targets_6718, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 269)
            subscript_call_result_6720 = invoke(stypy.reporting.localization.Localization(__file__, 269, 54), getitem___6719, int_6716)
            
            # Obtaining the member 'value' of a type (line 269)
            value_6721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), subscript_call_result_6720, 'value')
            # Getting the type of 'context' (line 269)
            context_6722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 77), 'context', False)
            # Processing the call keyword arguments (line 269)
            kwargs_6723 = {}
            # Getting the type of 'self' (line 269)
            self_6714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 269)
            visit_6715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 43), self_6714, 'visit')
            # Calling visit(args, kwargs) (line 269)
            visit_call_result_6724 = invoke(stypy.reporting.localization.Localization(__file__, 269, 43), visit_6715, *[value_6721, context_6722], **kwargs_6723)
            
            # Assigning a type to the variable 'call_assignment_5696' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5696', visit_call_result_6724)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5696' (line 269)
            call_assignment_5696_6725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5696', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6726 = stypy_get_value_from_tuple(call_assignment_5696_6725, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5697' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5697', stypy_get_value_from_tuple_call_result_6726)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_5697' (line 269)
            call_assignment_5697_6727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5697')
            # Assigning a type to the variable 'get_target_stmts' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'get_target_stmts', call_assignment_5697_6727)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5696' (line 269)
            call_assignment_5696_6728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5696', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6729 = stypy_get_value_from_tuple(call_assignment_5696_6728, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5698' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5698', stypy_get_value_from_tuple_call_result_6729)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_5698' (line 269)
            call_assignment_5698_6730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5698')
            # Assigning a type to the variable 'target_var' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 30), 'target_var', call_assignment_5698_6730)
            
            
            # Call to type(...): (line 270)
            # Processing the call arguments (line 270)
            # Getting the type of 'target_var' (line 270)
            target_var_6732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 20), 'target_var', False)
            # Processing the call keyword arguments (line 270)
            kwargs_6733 = {}
            # Getting the type of 'type' (line 270)
            type_6731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 15), 'type', False)
            # Calling type(args, kwargs) (line 270)
            type_call_result_6734 = invoke(stypy.reporting.localization.Localization(__file__, 270, 15), type_6731, *[target_var_6732], **kwargs_6733)
            
            # Getting the type of 'ast' (line 270)
            ast_6735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 35), 'ast')
            # Obtaining the member 'Tuple' of a type (line 270)
            Tuple_6736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 35), ast_6735, 'Tuple')
            # Applying the binary operator 'is' (line 270)
            result_is__6737 = python_operator(stypy.reporting.localization.Localization(__file__, 270, 15), 'is', type_call_result_6734, Tuple_6736)
            
            # Testing if the type of an if condition is none (line 270)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__6737):
                pass
            else:
                
                # Testing the type of an if condition (line 270)
                if_condition_6738 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__6737)
                # Assigning a type to the variable 'if_condition_6738' (line 270)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'if_condition_6738', if_condition_6738)
                # SSA begins for if statement (line 270)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Name (line 271):
                
                # Assigning a Subscript to a Name (line 271):
                
                # Obtaining the type of the subscript
                int_6739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 45), 'int')
                # Getting the type of 'target_var' (line 271)
                target_var_6740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 29), 'target_var')
                # Obtaining the member 'elts' of a type (line 271)
                elts_6741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), target_var_6740, 'elts')
                # Obtaining the member '__getitem__' of a type (line 271)
                getitem___6742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), elts_6741, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 271)
                subscript_call_result_6743 = invoke(stypy.reporting.localization.Localization(__file__, 271, 29), getitem___6742, int_6739)
                
                # Assigning a type to the variable 'target_var' (line 271)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'target_var', subscript_call_result_6743)
                # SSA join for if statement (line 270)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to isinstance(...): (line 273)
            # Processing the call arguments (line 273)
            
            # Obtaining the type of the subscript
            int_6745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 39), 'int')
            # Getting the type of 'node' (line 273)
            node_6746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 26), 'node', False)
            # Obtaining the member 'targets' of a type (line 273)
            targets_6747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), node_6746, 'targets')
            # Obtaining the member '__getitem__' of a type (line 273)
            getitem___6748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), targets_6747, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 273)
            subscript_call_result_6749 = invoke(stypy.reporting.localization.Localization(__file__, 273, 26), getitem___6748, int_6745)
            
            # Getting the type of 'ast' (line 273)
            ast_6750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 43), 'ast', False)
            # Obtaining the member 'Subscript' of a type (line 273)
            Subscript_6751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 43), ast_6750, 'Subscript')
            # Processing the call keyword arguments (line 273)
            kwargs_6752 = {}
            # Getting the type of 'isinstance' (line 273)
            isinstance_6744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 15), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 273)
            isinstance_call_result_6753 = invoke(stypy.reporting.localization.Localization(__file__, 273, 15), isinstance_6744, *[subscript_call_result_6749, Subscript_6751], **kwargs_6752)
            
            # Testing if the type of an if condition is none (line 273)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_6753):
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_6800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_6801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_6802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_6803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_6802, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___6804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_6803, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_6805 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___6804, int_6801)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_6806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_6805, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_6807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_6808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_6809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_6810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_6809, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___6811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_6810, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_6812 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___6811, int_6808)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_6813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_6812, 'lineno')
                
                # Obtaining the type of the subscript
                int_6814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_6815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_6816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_6815, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___6817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_6816, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_6818 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___6817, int_6814)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_6819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_6818, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_6820 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_6798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_6799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_6798, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_6821 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_6799, *[target_var_6800, attr_6806, temp_value_6807, lineno_6813, col_offset_6819], **kwargs_6820)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_6821)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_6824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_6825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_6826 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_6822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_6823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_6822, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_6827 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_6823, *[get_target_stmts_6824, set_type_of_stmts_6825], **kwargs_6826)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_6827)
            else:
                
                # Testing the type of an if condition (line 273)
                if_condition_6754 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_6753)
                # Assigning a type to the variable 'if_condition_6754' (line 273)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 273, 12), 'if_condition_6754', if_condition_6754)
                # SSA begins for if statement (line 273)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 277):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 277)
                # Processing the call arguments (line 277)
                
                # Obtaining the type of the subscript
                int_6757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 65), 'int')
                # Getting the type of 'node' (line 277)
                node_6758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 52), 'node', False)
                # Obtaining the member 'targets' of a type (line 277)
                targets_6759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), node_6758, 'targets')
                # Obtaining the member '__getitem__' of a type (line 277)
                getitem___6760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), targets_6759, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 277)
                subscript_call_result_6761 = invoke(stypy.reporting.localization.Localization(__file__, 277, 52), getitem___6760, int_6757)
                
                # Obtaining the member 'slice' of a type (line 277)
                slice_6762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), subscript_call_result_6761, 'slice')
                # Getting the type of 'context' (line 277)
                context_6763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 75), 'context', False)
                # Processing the call keyword arguments (line 277)
                kwargs_6764 = {}
                # Getting the type of 'self' (line 277)
                self_6755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 277)
                visit_6756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 41), self_6755, 'visit')
                # Calling visit(args, kwargs) (line 277)
                visit_call_result_6765 = invoke(stypy.reporting.localization.Localization(__file__, 277, 41), visit_6756, *[slice_6762, context_6763], **kwargs_6764)
                
                # Assigning a type to the variable 'call_assignment_5699' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5699', visit_call_result_6765)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5699' (line 277)
                call_assignment_5699_6766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5699', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_6767 = stypy_get_value_from_tuple(call_assignment_5699_6766, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5700' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5700', stypy_get_value_from_tuple_call_result_6767)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_5700' (line 277)
                call_assignment_5700_6768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5700')
                # Assigning a type to the variable 'slice_stmts' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'slice_stmts', call_assignment_5700_6768)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5699' (line 277)
                call_assignment_5699_6769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5699', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_6770 = stypy_get_value_from_tuple(call_assignment_5699_6769, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5701' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5701', stypy_get_value_from_tuple_call_result_6770)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_5701' (line 277)
                call_assignment_5701_6771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5701')
                # Assigning a type to the variable 'slice_var' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 29), 'slice_var', call_assignment_5701_6771)
                
                # Assigning a Call to a Name (line 278):
                
                # Assigning a Call to a Name (line 278):
                
                # Call to create_add_stored_type(...): (line 278)
                # Processing the call arguments (line 278)
                # Getting the type of 'target_var' (line 278)
                target_var_6774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 278)
                slice_var_6775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 92), 'slice_var', False)
                # Getting the type of 'temp_value' (line 278)
                temp_value_6776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 103), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_6777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 88), 'int')
                # Getting the type of 'node' (line 279)
                node_6778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 279)
                targets_6779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), node_6778, 'targets')
                # Obtaining the member '__getitem__' of a type (line 279)
                getitem___6780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), targets_6779, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 279)
                subscript_call_result_6781 = invoke(stypy.reporting.localization.Localization(__file__, 279, 75), getitem___6780, int_6777)
                
                # Obtaining the member 'lineno' of a type (line 279)
                lineno_6782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), subscript_call_result_6781, 'lineno')
                
                # Obtaining the type of the subscript
                int_6783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 88), 'int')
                # Getting the type of 'node' (line 280)
                node_6784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 280)
                targets_6785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), node_6784, 'targets')
                # Obtaining the member '__getitem__' of a type (line 280)
                getitem___6786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), targets_6785, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 280)
                subscript_call_result_6787 = invoke(stypy.reporting.localization.Localization(__file__, 280, 75), getitem___6786, int_6783)
                
                # Obtaining the member 'col_offset' of a type (line 280)
                col_offset_6788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), subscript_call_result_6787, 'col_offset')
                # Processing the call keyword arguments (line 278)
                kwargs_6789 = {}
                # Getting the type of 'stypy_functions_copy' (line 278)
                stypy_functions_copy_6772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 278)
                create_add_stored_type_6773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 36), stypy_functions_copy_6772, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 278)
                create_add_stored_type_call_result_6790 = invoke(stypy.reporting.localization.Localization(__file__, 278, 36), create_add_stored_type_6773, *[target_var_6774, slice_var_6775, temp_value_6776, lineno_6782, col_offset_6788], **kwargs_6789)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 278)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 16), 'set_type_of_stmts', create_add_stored_type_call_result_6790)
                
                # Assigning a Call to a Name (line 281):
                
                # Assigning a Call to a Name (line 281):
                
                # Call to flatten_lists(...): (line 281)
                # Processing the call arguments (line 281)
                # Getting the type of 'get_target_stmts' (line 281)
                get_target_stmts_6793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 71), 'get_target_stmts', False)
                # Getting the type of 'slice_stmts' (line 281)
                slice_stmts_6794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 89), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 281)
                set_type_of_stmts_6795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 102), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 281)
                kwargs_6796 = {}
                # Getting the type of 'stypy_functions_copy' (line 281)
                stypy_functions_copy_6791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 281)
                flatten_lists_6792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 36), stypy_functions_copy_6791, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 281)
                flatten_lists_call_result_6797 = invoke(stypy.reporting.localization.Localization(__file__, 281, 36), flatten_lists_6792, *[get_target_stmts_6793, slice_stmts_6794, set_type_of_stmts_6795], **kwargs_6796)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 281)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 16), 'set_type_of_stmts', flatten_lists_call_result_6797)
                # SSA branch for the else part of an if statement (line 273)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_6800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_6801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_6802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_6803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_6802, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___6804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_6803, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_6805 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___6804, int_6801)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_6806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_6805, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_6807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_6808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_6809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_6810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_6809, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___6811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_6810, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_6812 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___6811, int_6808)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_6813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_6812, 'lineno')
                
                # Obtaining the type of the subscript
                int_6814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_6815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_6816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_6815, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___6817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_6816, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_6818 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___6817, int_6814)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_6819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_6818, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_6820 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_6798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_6799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_6798, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_6821 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_6799, *[target_var_6800, attr_6806, temp_value_6807, lineno_6813, col_offset_6819], **kwargs_6820)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_6821)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_6824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_6825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_6826 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_6822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_6823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_6822, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_6827 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_6823, *[get_target_stmts_6824, set_type_of_stmts_6825], **kwargs_6826)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_6827)
                # SSA join for if statement (line 273)
                module_type_store = module_type_store.join_ssa_context()
                

        else:
            
            # Testing the type of an if condition (line 264)
            if_condition_6697 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 264, 8), isinstance_call_result_6696)
            # Assigning a type to the variable 'if_condition_6697' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 8), 'if_condition_6697', if_condition_6697)
            # SSA begins for if statement (line 264)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 265):
            
            # Assigning a Subscript to a Name (line 265):
            
            # Obtaining the type of the subscript
            int_6698 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 32), 'int')
            # Getting the type of 'node' (line 265)
            node_6699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 19), 'node')
            # Obtaining the member 'targets' of a type (line 265)
            targets_6700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 19), node_6699, 'targets')
            # Obtaining the member '__getitem__' of a type (line 265)
            getitem___6701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 19), targets_6700, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 265)
            subscript_call_result_6702 = invoke(stypy.reporting.localization.Localization(__file__, 265, 19), getitem___6701, int_6698)
            
            # Assigning a type to the variable 'name' (line 265)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'name', subscript_call_result_6702)
            
            # Assigning a Call to a Name (line 266):
            
            # Assigning a Call to a Name (line 266):
            
            # Call to create_set_type_of(...): (line 266)
            # Processing the call arguments (line 266)
            # Getting the type of 'name' (line 266)
            name_6705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 72), 'name', False)
            # Obtaining the member 'id' of a type (line 266)
            id_6706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 72), name_6705, 'id')
            # Getting the type of 'temp_value' (line 266)
            temp_value_6707 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 81), 'temp_value', False)
            # Getting the type of 'name' (line 266)
            name_6708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 93), 'name', False)
            # Obtaining the member 'lineno' of a type (line 266)
            lineno_6709 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 93), name_6708, 'lineno')
            # Getting the type of 'name' (line 267)
            name_6710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 67), 'name', False)
            # Obtaining the member 'col_offset' of a type (line 267)
            col_offset_6711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 67), name_6710, 'col_offset')
            # Processing the call keyword arguments (line 266)
            kwargs_6712 = {}
            # Getting the type of 'stypy_functions_copy' (line 266)
            stypy_functions_copy_6703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 266)
            create_set_type_of_6704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 32), stypy_functions_copy_6703, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 266)
            create_set_type_of_call_result_6713 = invoke(stypy.reporting.localization.Localization(__file__, 266, 32), create_set_type_of_6704, *[id_6706, temp_value_6707, lineno_6709, col_offset_6711], **kwargs_6712)
            
            # Assigning a type to the variable 'set_type_of_stmts' (line 266)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 266, 12), 'set_type_of_stmts', create_set_type_of_call_result_6713)
            # SSA branch for the else part of an if statement (line 264)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 269):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 269)
            # Processing the call arguments (line 269)
            
            # Obtaining the type of the subscript
            int_6716 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 67), 'int')
            # Getting the type of 'node' (line 269)
            node_6717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 54), 'node', False)
            # Obtaining the member 'targets' of a type (line 269)
            targets_6718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), node_6717, 'targets')
            # Obtaining the member '__getitem__' of a type (line 269)
            getitem___6719 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), targets_6718, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 269)
            subscript_call_result_6720 = invoke(stypy.reporting.localization.Localization(__file__, 269, 54), getitem___6719, int_6716)
            
            # Obtaining the member 'value' of a type (line 269)
            value_6721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), subscript_call_result_6720, 'value')
            # Getting the type of 'context' (line 269)
            context_6722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 77), 'context', False)
            # Processing the call keyword arguments (line 269)
            kwargs_6723 = {}
            # Getting the type of 'self' (line 269)
            self_6714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 269)
            visit_6715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 43), self_6714, 'visit')
            # Calling visit(args, kwargs) (line 269)
            visit_call_result_6724 = invoke(stypy.reporting.localization.Localization(__file__, 269, 43), visit_6715, *[value_6721, context_6722], **kwargs_6723)
            
            # Assigning a type to the variable 'call_assignment_5696' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5696', visit_call_result_6724)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5696' (line 269)
            call_assignment_5696_6725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5696', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6726 = stypy_get_value_from_tuple(call_assignment_5696_6725, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5697' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5697', stypy_get_value_from_tuple_call_result_6726)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_5697' (line 269)
            call_assignment_5697_6727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5697')
            # Assigning a type to the variable 'get_target_stmts' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'get_target_stmts', call_assignment_5697_6727)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5696' (line 269)
            call_assignment_5696_6728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5696', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6729 = stypy_get_value_from_tuple(call_assignment_5696_6728, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5698' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5698', stypy_get_value_from_tuple_call_result_6729)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_5698' (line 269)
            call_assignment_5698_6730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_5698')
            # Assigning a type to the variable 'target_var' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 30), 'target_var', call_assignment_5698_6730)
            
            
            # Call to type(...): (line 270)
            # Processing the call arguments (line 270)
            # Getting the type of 'target_var' (line 270)
            target_var_6732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 20), 'target_var', False)
            # Processing the call keyword arguments (line 270)
            kwargs_6733 = {}
            # Getting the type of 'type' (line 270)
            type_6731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 15), 'type', False)
            # Calling type(args, kwargs) (line 270)
            type_call_result_6734 = invoke(stypy.reporting.localization.Localization(__file__, 270, 15), type_6731, *[target_var_6732], **kwargs_6733)
            
            # Getting the type of 'ast' (line 270)
            ast_6735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 35), 'ast')
            # Obtaining the member 'Tuple' of a type (line 270)
            Tuple_6736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 35), ast_6735, 'Tuple')
            # Applying the binary operator 'is' (line 270)
            result_is__6737 = python_operator(stypy.reporting.localization.Localization(__file__, 270, 15), 'is', type_call_result_6734, Tuple_6736)
            
            # Testing if the type of an if condition is none (line 270)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__6737):
                pass
            else:
                
                # Testing the type of an if condition (line 270)
                if_condition_6738 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__6737)
                # Assigning a type to the variable 'if_condition_6738' (line 270)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'if_condition_6738', if_condition_6738)
                # SSA begins for if statement (line 270)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Name (line 271):
                
                # Assigning a Subscript to a Name (line 271):
                
                # Obtaining the type of the subscript
                int_6739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 45), 'int')
                # Getting the type of 'target_var' (line 271)
                target_var_6740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 29), 'target_var')
                # Obtaining the member 'elts' of a type (line 271)
                elts_6741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), target_var_6740, 'elts')
                # Obtaining the member '__getitem__' of a type (line 271)
                getitem___6742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), elts_6741, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 271)
                subscript_call_result_6743 = invoke(stypy.reporting.localization.Localization(__file__, 271, 29), getitem___6742, int_6739)
                
                # Assigning a type to the variable 'target_var' (line 271)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'target_var', subscript_call_result_6743)
                # SSA join for if statement (line 270)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to isinstance(...): (line 273)
            # Processing the call arguments (line 273)
            
            # Obtaining the type of the subscript
            int_6745 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 39), 'int')
            # Getting the type of 'node' (line 273)
            node_6746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 26), 'node', False)
            # Obtaining the member 'targets' of a type (line 273)
            targets_6747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), node_6746, 'targets')
            # Obtaining the member '__getitem__' of a type (line 273)
            getitem___6748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), targets_6747, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 273)
            subscript_call_result_6749 = invoke(stypy.reporting.localization.Localization(__file__, 273, 26), getitem___6748, int_6745)
            
            # Getting the type of 'ast' (line 273)
            ast_6750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 43), 'ast', False)
            # Obtaining the member 'Subscript' of a type (line 273)
            Subscript_6751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 43), ast_6750, 'Subscript')
            # Processing the call keyword arguments (line 273)
            kwargs_6752 = {}
            # Getting the type of 'isinstance' (line 273)
            isinstance_6744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 15), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 273)
            isinstance_call_result_6753 = invoke(stypy.reporting.localization.Localization(__file__, 273, 15), isinstance_6744, *[subscript_call_result_6749, Subscript_6751], **kwargs_6752)
            
            # Testing if the type of an if condition is none (line 273)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_6753):
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_6800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_6801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_6802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_6803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_6802, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___6804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_6803, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_6805 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___6804, int_6801)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_6806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_6805, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_6807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_6808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_6809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_6810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_6809, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___6811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_6810, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_6812 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___6811, int_6808)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_6813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_6812, 'lineno')
                
                # Obtaining the type of the subscript
                int_6814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_6815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_6816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_6815, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___6817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_6816, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_6818 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___6817, int_6814)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_6819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_6818, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_6820 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_6798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_6799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_6798, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_6821 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_6799, *[target_var_6800, attr_6806, temp_value_6807, lineno_6813, col_offset_6819], **kwargs_6820)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_6821)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_6824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_6825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_6826 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_6822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_6823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_6822, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_6827 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_6823, *[get_target_stmts_6824, set_type_of_stmts_6825], **kwargs_6826)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_6827)
            else:
                
                # Testing the type of an if condition (line 273)
                if_condition_6754 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_6753)
                # Assigning a type to the variable 'if_condition_6754' (line 273)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 273, 12), 'if_condition_6754', if_condition_6754)
                # SSA begins for if statement (line 273)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 277):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 277)
                # Processing the call arguments (line 277)
                
                # Obtaining the type of the subscript
                int_6757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 65), 'int')
                # Getting the type of 'node' (line 277)
                node_6758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 52), 'node', False)
                # Obtaining the member 'targets' of a type (line 277)
                targets_6759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), node_6758, 'targets')
                # Obtaining the member '__getitem__' of a type (line 277)
                getitem___6760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), targets_6759, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 277)
                subscript_call_result_6761 = invoke(stypy.reporting.localization.Localization(__file__, 277, 52), getitem___6760, int_6757)
                
                # Obtaining the member 'slice' of a type (line 277)
                slice_6762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), subscript_call_result_6761, 'slice')
                # Getting the type of 'context' (line 277)
                context_6763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 75), 'context', False)
                # Processing the call keyword arguments (line 277)
                kwargs_6764 = {}
                # Getting the type of 'self' (line 277)
                self_6755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 277)
                visit_6756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 41), self_6755, 'visit')
                # Calling visit(args, kwargs) (line 277)
                visit_call_result_6765 = invoke(stypy.reporting.localization.Localization(__file__, 277, 41), visit_6756, *[slice_6762, context_6763], **kwargs_6764)
                
                # Assigning a type to the variable 'call_assignment_5699' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5699', visit_call_result_6765)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5699' (line 277)
                call_assignment_5699_6766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5699', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_6767 = stypy_get_value_from_tuple(call_assignment_5699_6766, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5700' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5700', stypy_get_value_from_tuple_call_result_6767)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_5700' (line 277)
                call_assignment_5700_6768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5700')
                # Assigning a type to the variable 'slice_stmts' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'slice_stmts', call_assignment_5700_6768)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5699' (line 277)
                call_assignment_5699_6769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5699', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_6770 = stypy_get_value_from_tuple(call_assignment_5699_6769, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5701' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5701', stypy_get_value_from_tuple_call_result_6770)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_5701' (line 277)
                call_assignment_5701_6771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_5701')
                # Assigning a type to the variable 'slice_var' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 29), 'slice_var', call_assignment_5701_6771)
                
                # Assigning a Call to a Name (line 278):
                
                # Assigning a Call to a Name (line 278):
                
                # Call to create_add_stored_type(...): (line 278)
                # Processing the call arguments (line 278)
                # Getting the type of 'target_var' (line 278)
                target_var_6774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 278)
                slice_var_6775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 92), 'slice_var', False)
                # Getting the type of 'temp_value' (line 278)
                temp_value_6776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 103), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_6777 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 88), 'int')
                # Getting the type of 'node' (line 279)
                node_6778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 279)
                targets_6779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), node_6778, 'targets')
                # Obtaining the member '__getitem__' of a type (line 279)
                getitem___6780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), targets_6779, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 279)
                subscript_call_result_6781 = invoke(stypy.reporting.localization.Localization(__file__, 279, 75), getitem___6780, int_6777)
                
                # Obtaining the member 'lineno' of a type (line 279)
                lineno_6782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), subscript_call_result_6781, 'lineno')
                
                # Obtaining the type of the subscript
                int_6783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 88), 'int')
                # Getting the type of 'node' (line 280)
                node_6784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 280)
                targets_6785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), node_6784, 'targets')
                # Obtaining the member '__getitem__' of a type (line 280)
                getitem___6786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), targets_6785, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 280)
                subscript_call_result_6787 = invoke(stypy.reporting.localization.Localization(__file__, 280, 75), getitem___6786, int_6783)
                
                # Obtaining the member 'col_offset' of a type (line 280)
                col_offset_6788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), subscript_call_result_6787, 'col_offset')
                # Processing the call keyword arguments (line 278)
                kwargs_6789 = {}
                # Getting the type of 'stypy_functions_copy' (line 278)
                stypy_functions_copy_6772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 278)
                create_add_stored_type_6773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 36), stypy_functions_copy_6772, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 278)
                create_add_stored_type_call_result_6790 = invoke(stypy.reporting.localization.Localization(__file__, 278, 36), create_add_stored_type_6773, *[target_var_6774, slice_var_6775, temp_value_6776, lineno_6782, col_offset_6788], **kwargs_6789)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 278)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 16), 'set_type_of_stmts', create_add_stored_type_call_result_6790)
                
                # Assigning a Call to a Name (line 281):
                
                # Assigning a Call to a Name (line 281):
                
                # Call to flatten_lists(...): (line 281)
                # Processing the call arguments (line 281)
                # Getting the type of 'get_target_stmts' (line 281)
                get_target_stmts_6793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 71), 'get_target_stmts', False)
                # Getting the type of 'slice_stmts' (line 281)
                slice_stmts_6794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 89), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 281)
                set_type_of_stmts_6795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 102), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 281)
                kwargs_6796 = {}
                # Getting the type of 'stypy_functions_copy' (line 281)
                stypy_functions_copy_6791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 281)
                flatten_lists_6792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 36), stypy_functions_copy_6791, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 281)
                flatten_lists_call_result_6797 = invoke(stypy.reporting.localization.Localization(__file__, 281, 36), flatten_lists_6792, *[get_target_stmts_6793, slice_stmts_6794, set_type_of_stmts_6795], **kwargs_6796)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 281)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 16), 'set_type_of_stmts', flatten_lists_call_result_6797)
                # SSA branch for the else part of an if statement (line 273)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_6800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_6801 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_6802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_6803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_6802, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___6804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_6803, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_6805 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___6804, int_6801)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_6806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_6805, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_6807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_6808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_6809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_6810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_6809, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___6811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_6810, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_6812 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___6811, int_6808)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_6813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_6812, 'lineno')
                
                # Obtaining the type of the subscript
                int_6814 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_6815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_6816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_6815, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___6817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_6816, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_6818 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___6817, int_6814)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_6819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_6818, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_6820 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_6798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_6799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_6798, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_6821 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_6799, *[target_var_6800, attr_6806, temp_value_6807, lineno_6813, col_offset_6819], **kwargs_6820)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_6821)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_6824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_6825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_6826 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_6822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_6823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_6822, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_6827 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_6823, *[get_target_stmts_6824, set_type_of_stmts_6825], **kwargs_6826)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_6827)
                # SSA join for if statement (line 273)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for if statement (line 264)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to flatten_lists(...): (line 291)
        # Processing the call arguments (line 291)
        # Getting the type of 'get_value_stmts' (line 291)
        get_value_stmts_6830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 50), 'get_value_stmts', False)
        # Getting the type of 'set_type_of_stmts' (line 291)
        set_type_of_stmts_6831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 67), 'set_type_of_stmts', False)
        # Processing the call keyword arguments (line 291)
        kwargs_6832 = {}
        # Getting the type of 'stypy_functions_copy' (line 291)
        stypy_functions_copy_6828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 291)
        flatten_lists_6829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 15), stypy_functions_copy_6828, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 291)
        flatten_lists_call_result_6833 = invoke(stypy.reporting.localization.Localization(__file__, 291, 15), flatten_lists_6829, *[get_value_stmts_6830, set_type_of_stmts_6831], **kwargs_6832)
        
        # Assigning a type to the variable 'stypy_return_type' (line 291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'stypy_return_type', flatten_lists_call_result_6833)
        
        # ################# End of 'visit_Assign(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Assign' in the type store
        # Getting the type of 'stypy_return_type' (line 256)
        stypy_return_type_6834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_6834)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Assign'
        return stypy_return_type_6834


    @norecursion
    def visit_Pass(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Pass'
        module_type_store = module_type_store.open_function_context('visit_Pass', 295, 4, False)
        # Assigning a type to the variable 'self' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Pass')
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Pass', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Pass', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Pass(...)' code ##################

        # Getting the type of 'node' (line 296)
        node_6835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 15), 'node')
        # Assigning a type to the variable 'stypy_return_type' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'stypy_return_type', node_6835)
        
        # ################# End of 'visit_Pass(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Pass' in the type store
        # Getting the type of 'stypy_return_type' (line 295)
        stypy_return_type_6836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_6836)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Pass'
        return stypy_return_type_6836


    @norecursion
    def visit_If(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_If'
        module_type_store = module_type_store.open_function_context('visit_If', 300, 4, False)
        # Assigning a type to the variable 'self' (line 301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 301, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_If')
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_If', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_If', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_If(...)' code ##################

        
        # Assigning a List to a Name (line 303):
        
        # Assigning a List to a Name (line 303):
        
        # Obtaining an instance of the builtin type 'list' (line 303)
        list_6837 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 303)
        
        # Assigning a type to the variable 'if_stmt_body' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'if_stmt_body', list_6837)
        
        # Assigning a List to a Name (line 304):
        
        # Assigning a List to a Name (line 304):
        
        # Obtaining an instance of the builtin type 'list' (line 304)
        list_6838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 304)
        
        # Assigning a type to the variable 'if_stmt_orelse' (line 304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 304, 8), 'if_stmt_orelse', list_6838)
        
        # Assigning a Call to a Name (line 306):
        
        # Assigning a Call to a Name (line 306):
        
        # Call to create_blank_line(...): (line 306)
        # Processing the call keyword arguments (line 306)
        kwargs_6841 = {}
        # Getting the type of 'stypy_functions_copy' (line 306)
        stypy_functions_copy_6839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 27), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 306)
        create_blank_line_6840 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 27), stypy_functions_copy_6839, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 306)
        create_blank_line_call_result_6842 = invoke(stypy.reporting.localization.Localization(__file__, 306, 27), create_blank_line_6840, *[], **kwargs_6841)
        
        # Assigning a type to the variable 'begin_if_comment' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'begin_if_comment', create_blank_line_call_result_6842)
        
        # Assigning a Call to a Tuple (line 308):
        
        # Assigning a Call to a Name:
        
        # Call to is_recognized_idiom(...): (line 308)
        # Processing the call arguments (line 308)
        # Getting the type of 'node' (line 308)
        node_6845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 103), 'node', False)
        # Obtaining the member 'test' of a type (line 308)
        test_6846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 103), node_6845, 'test')
        # Getting the type of 'self' (line 308)
        self_6847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 114), 'self', False)
        # Getting the type of 'context' (line 309)
        context_6848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 98), 'context', False)
        # Processing the call keyword arguments (line 308)
        kwargs_6849 = {}
        # Getting the type of 'idioms_copy' (line 308)
        idioms_copy_6843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 71), 'idioms_copy', False)
        # Obtaining the member 'is_recognized_idiom' of a type (line 308)
        is_recognized_idiom_6844 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 71), idioms_copy_6843, 'is_recognized_idiom')
        # Calling is_recognized_idiom(args, kwargs) (line 308)
        is_recognized_idiom_call_result_6850 = invoke(stypy.reporting.localization.Localization(__file__, 308, 71), is_recognized_idiom_6844, *[test_6846, self_6847, context_6848], **kwargs_6849)
        
        # Assigning a type to the variable 'call_assignment_5702' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5702', is_recognized_idiom_call_result_6850)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5702' (line 308)
        call_assignment_5702_6851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5702', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_6852 = stypy_get_value_from_tuple(call_assignment_5702_6851, 4, 0)
        
        # Assigning a type to the variable 'call_assignment_5703' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5703', stypy_get_value_from_tuple_call_result_6852)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_5703' (line 308)
        call_assignment_5703_6853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5703')
        # Assigning a type to the variable 'is_an_idiom' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'is_an_idiom', call_assignment_5703_6853)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5702' (line 308)
        call_assignment_5702_6854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5702', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_6855 = stypy_get_value_from_tuple(call_assignment_5702_6854, 4, 1)
        
        # Assigning a type to the variable 'call_assignment_5704' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5704', stypy_get_value_from_tuple_call_result_6855)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_5704' (line 308)
        call_assignment_5704_6856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5704')
        # Assigning a type to the variable 'left_stmts_tuple' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 21), 'left_stmts_tuple', call_assignment_5704_6856)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5702' (line 308)
        call_assignment_5702_6857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5702', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_6858 = stypy_get_value_from_tuple(call_assignment_5702_6857, 4, 2)
        
        # Assigning a type to the variable 'call_assignment_5705' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5705', stypy_get_value_from_tuple_call_result_6858)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_5705' (line 308)
        call_assignment_5705_6859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5705')
        # Assigning a type to the variable 'rigth_stmts_tuple' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 39), 'rigth_stmts_tuple', call_assignment_5705_6859)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5702' (line 308)
        call_assignment_5702_6860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5702', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_6861 = stypy_get_value_from_tuple(call_assignment_5702_6860, 4, 3)
        
        # Assigning a type to the variable 'call_assignment_5706' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5706', stypy_get_value_from_tuple_call_result_6861)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_5706' (line 308)
        call_assignment_5706_6862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_5706')
        # Assigning a type to the variable 'idiom_name' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 58), 'idiom_name', call_assignment_5706_6862)
        # Getting the type of 'is_an_idiom' (line 311)
        is_an_idiom_6863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 11), 'is_an_idiom')
        # Testing if the type of an if condition is none (line 311)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 311, 8), is_an_idiom_6863):
            
            # Assigning a Call to a Tuple (line 324):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 324)
            # Processing the call arguments (line 324)
            # Getting the type of 'node' (line 324)
            node_6896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 54), 'node', False)
            # Obtaining the member 'test' of a type (line 324)
            test_6897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 54), node_6896, 'test')
            # Getting the type of 'context' (line 324)
            context_6898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 65), 'context', False)
            # Processing the call keyword arguments (line 324)
            kwargs_6899 = {}
            # Getting the type of 'self' (line 324)
            self_6894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 324)
            visit_6895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 43), self_6894, 'visit')
            # Calling visit(args, kwargs) (line 324)
            visit_call_result_6900 = invoke(stypy.reporting.localization.Localization(__file__, 324, 43), visit_6895, *[test_6897, context_6898], **kwargs_6899)
            
            # Assigning a type to the variable 'call_assignment_5707' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5707', visit_call_result_6900)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5707' (line 324)
            call_assignment_5707_6901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5707', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6902 = stypy_get_value_from_tuple(call_assignment_5707_6901, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5708' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5708', stypy_get_value_from_tuple_call_result_6902)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_5708' (line 324)
            call_assignment_5708_6903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5708')
            # Assigning a type to the variable 'condition_stmt' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'condition_stmt', call_assignment_5708_6903)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5707' (line 324)
            call_assignment_5707_6904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5707', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6905 = stypy_get_value_from_tuple(call_assignment_5707_6904, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5709' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5709', stypy_get_value_from_tuple_call_result_6905)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_5709' (line 324)
            call_assignment_5709_6906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5709')
            # Assigning a type to the variable 'if_stmt_test' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 28), 'if_stmt_test', call_assignment_5709_6906)
            
            # Assigning a Call to a Name (line 327):
            
            # Assigning a Call to a Name (line 327):
            
            # Call to create_src_comment(...): (line 327)
            # Processing the call arguments (line 327)
            str_6909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 72), 'str', 'Testing the type of an if condition')
            # Getting the type of 'node' (line 327)
            node_6910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 111), 'node', False)
            # Obtaining the member 'lineno' of a type (line 327)
            lineno_6911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 111), node_6910, 'lineno')
            # Processing the call keyword arguments (line 327)
            kwargs_6912 = {}
            # Getting the type of 'stypy_functions_copy' (line 327)
            stypy_functions_copy_6907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 327)
            create_src_comment_6908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 32), stypy_functions_copy_6907, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 327)
            create_src_comment_call_result_6913 = invoke(stypy.reporting.localization.Localization(__file__, 327, 32), create_src_comment_6908, *[str_6909, lineno_6911], **kwargs_6912)
            
            # Assigning a type to the variable 'condition_comment' (line 327)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 12), 'condition_comment', create_src_comment_call_result_6913)
            
            # Assigning a Call to a Name (line 328):
            
            # Assigning a Call to a Name (line 328):
            
            # Call to create_Name(...): (line 328)
            # Processing the call arguments (line 328)
            str_6916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 55), 'str', 'is_suitable_condition')
            # Processing the call keyword arguments (line 328)
            kwargs_6917 = {}
            # Getting the type of 'core_language_copy' (line 328)
            core_language_copy_6914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 24), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 328)
            create_Name_6915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 24), core_language_copy_6914, 'create_Name')
            # Calling create_Name(args, kwargs) (line 328)
            create_Name_call_result_6918 = invoke(stypy.reporting.localization.Localization(__file__, 328, 24), create_Name_6915, *[str_6916], **kwargs_6917)
            
            # Assigning a type to the variable 'attribute' (line 328)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 12), 'attribute', create_Name_call_result_6918)
            
            # Assigning a Call to a Name (line 329):
            
            # Assigning a Call to a Name (line 329):
            
            # Call to create_localization(...): (line 329)
            # Processing the call arguments (line 329)
            # Getting the type of 'node' (line 329)
            node_6921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 329)
            lineno_6922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 68), node_6921, 'lineno')
            # Getting the type of 'node' (line 329)
            node_6923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 329)
            col_offset_6924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 81), node_6923, 'col_offset')
            # Processing the call keyword arguments (line 329)
            kwargs_6925 = {}
            # Getting the type of 'stypy_functions_copy' (line 329)
            stypy_functions_copy_6919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 329)
            create_localization_6920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 27), stypy_functions_copy_6919, 'create_localization')
            # Calling create_localization(args, kwargs) (line 329)
            create_localization_call_result_6926 = invoke(stypy.reporting.localization.Localization(__file__, 329, 27), create_localization_6920, *[lineno_6922, col_offset_6924], **kwargs_6925)
            
            # Assigning a type to the variable 'localization' (line 329)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 12), 'localization', create_localization_call_result_6926)
            
            # Assigning a Call to a Name (line 330):
            
            # Assigning a Call to a Name (line 330):
            
            # Call to create_call_expression(...): (line 330)
            # Processing the call arguments (line 330)
            # Getting the type of 'attribute' (line 330)
            attribute_6929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 72), 'attribute', False)
            
            # Obtaining an instance of the builtin type 'list' (line 330)
            list_6930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 83), 'list')
            # Adding type elements to the builtin type 'list' instance (line 330)
            # Adding element type (line 330)
            # Getting the type of 'localization' (line 330)
            localization_6931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 84), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_6930, localization_6931)
            # Adding element type (line 330)
            # Getting the type of 'if_stmt_test' (line 330)
            if_stmt_test_6932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 98), 'if_stmt_test', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_6930, if_stmt_test_6932)
            
            # Processing the call keyword arguments (line 330)
            kwargs_6933 = {}
            # Getting the type of 'functions_copy' (line 330)
            functions_copy_6927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 34), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 330)
            create_call_expression_6928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 34), functions_copy_6927, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 330)
            create_call_expression_call_result_6934 = invoke(stypy.reporting.localization.Localization(__file__, 330, 34), create_call_expression_6928, *[attribute_6929, list_6930], **kwargs_6933)
            
            # Assigning a type to the variable 'test_condition_call' (line 330)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'test_condition_call', create_call_expression_call_result_6934)
        else:
            
            # Testing the type of an if condition (line 311)
            if_condition_6864 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 311, 8), is_an_idiom_6863)
            # Assigning a type to the variable 'if_condition_6864' (line 311)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'if_condition_6864', if_condition_6864)
            # SSA begins for if statement (line 311)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 312):
            
            # Assigning a Call to a Name (line 312):
            
            # Call to create_src_comment(...): (line 312)
            # Processing the call arguments (line 312)
            str_6867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 16), 'str', 'Type idiom detected: calculating its left and rigth part')
            # Getting the type of 'node' (line 313)
            node_6868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 76), 'node', False)
            # Obtaining the member 'lineno' of a type (line 313)
            lineno_6869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 76), node_6868, 'lineno')
            # Processing the call keyword arguments (line 312)
            kwargs_6870 = {}
            # Getting the type of 'stypy_functions_copy' (line 312)
            stypy_functions_copy_6865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 312)
            create_src_comment_6866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 32), stypy_functions_copy_6865, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 312)
            create_src_comment_call_result_6871 = invoke(stypy.reporting.localization.Localization(__file__, 312, 32), create_src_comment_6866, *[str_6867, lineno_6869], **kwargs_6870)
            
            # Assigning a type to the variable 'condition_comment' (line 312)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 12), 'condition_comment', create_src_comment_call_result_6871)
            
            # Getting the type of 'if_stmt_body' (line 315)
            if_stmt_body_6872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 12), 'if_stmt_body')
            
            # Obtaining the type of the subscript
            int_6873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 45), 'int')
            # Getting the type of 'left_stmts_tuple' (line 315)
            left_stmts_tuple_6874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 28), 'left_stmts_tuple')
            # Obtaining the member '__getitem__' of a type (line 315)
            getitem___6875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 28), left_stmts_tuple_6874, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 315)
            subscript_call_result_6876 = invoke(stypy.reporting.localization.Localization(__file__, 315, 28), getitem___6875, int_6873)
            
            # Applying the binary operator '+=' (line 315)
            result_iadd_6877 = python_operator(stypy.reporting.localization.Localization(__file__, 315, 12), '+=', if_stmt_body_6872, subscript_call_result_6876)
            # Assigning a type to the variable 'if_stmt_body' (line 315)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 12), 'if_stmt_body', result_iadd_6877)
            
            
            # Getting the type of 'if_stmt_body' (line 317)
            if_stmt_body_6878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 12), 'if_stmt_body')
            
            # Obtaining the type of the subscript
            int_6879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 46), 'int')
            # Getting the type of 'rigth_stmts_tuple' (line 317)
            rigth_stmts_tuple_6880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 28), 'rigth_stmts_tuple')
            # Obtaining the member '__getitem__' of a type (line 317)
            getitem___6881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 28), rigth_stmts_tuple_6880, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 317)
            subscript_call_result_6882 = invoke(stypy.reporting.localization.Localization(__file__, 317, 28), getitem___6881, int_6879)
            
            # Applying the binary operator '+=' (line 317)
            result_iadd_6883 = python_operator(stypy.reporting.localization.Localization(__file__, 317, 12), '+=', if_stmt_body_6878, subscript_call_result_6882)
            # Assigning a type to the variable 'if_stmt_body' (line 317)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 12), 'if_stmt_body', result_iadd_6883)
            
            
            # Assigning a List to a Name (line 319):
            
            # Assigning a List to a Name (line 319):
            
            # Obtaining an instance of the builtin type 'list' (line 319)
            list_6884 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 319)
            
            # Assigning a type to the variable 'test_condition_call' (line 319)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 12), 'test_condition_call', list_6884)
            
            # Assigning a List to a Name (line 320):
            
            # Assigning a List to a Name (line 320):
            
            # Obtaining an instance of the builtin type 'list' (line 320)
            list_6885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 320)
            
            # Assigning a type to the variable 'condition_stmt' (line 320)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 12), 'condition_stmt', list_6885)
            
            # Call to append(...): (line 321)
            # Processing the call arguments (line 321)
            
            # Call to create_blank_line(...): (line 321)
            # Processing the call keyword arguments (line 321)
            kwargs_6890 = {}
            # Getting the type of 'stypy_functions_copy' (line 321)
            stypy_functions_copy_6888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_blank_line' of a type (line 321)
            create_blank_line_6889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 32), stypy_functions_copy_6888, 'create_blank_line')
            # Calling create_blank_line(args, kwargs) (line 321)
            create_blank_line_call_result_6891 = invoke(stypy.reporting.localization.Localization(__file__, 321, 32), create_blank_line_6889, *[], **kwargs_6890)
            
            # Processing the call keyword arguments (line 321)
            kwargs_6892 = {}
            # Getting the type of 'if_stmt_body' (line 321)
            if_stmt_body_6886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 321)
            append_6887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 12), if_stmt_body_6886, 'append')
            # Calling append(args, kwargs) (line 321)
            append_call_result_6893 = invoke(stypy.reporting.localization.Localization(__file__, 321, 12), append_6887, *[create_blank_line_call_result_6891], **kwargs_6892)
            
            # SSA branch for the else part of an if statement (line 311)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 324):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 324)
            # Processing the call arguments (line 324)
            # Getting the type of 'node' (line 324)
            node_6896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 54), 'node', False)
            # Obtaining the member 'test' of a type (line 324)
            test_6897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 54), node_6896, 'test')
            # Getting the type of 'context' (line 324)
            context_6898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 65), 'context', False)
            # Processing the call keyword arguments (line 324)
            kwargs_6899 = {}
            # Getting the type of 'self' (line 324)
            self_6894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 324)
            visit_6895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 43), self_6894, 'visit')
            # Calling visit(args, kwargs) (line 324)
            visit_call_result_6900 = invoke(stypy.reporting.localization.Localization(__file__, 324, 43), visit_6895, *[test_6897, context_6898], **kwargs_6899)
            
            # Assigning a type to the variable 'call_assignment_5707' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5707', visit_call_result_6900)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5707' (line 324)
            call_assignment_5707_6901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5707', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6902 = stypy_get_value_from_tuple(call_assignment_5707_6901, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5708' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5708', stypy_get_value_from_tuple_call_result_6902)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_5708' (line 324)
            call_assignment_5708_6903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5708')
            # Assigning a type to the variable 'condition_stmt' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'condition_stmt', call_assignment_5708_6903)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5707' (line 324)
            call_assignment_5707_6904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5707', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_6905 = stypy_get_value_from_tuple(call_assignment_5707_6904, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5709' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5709', stypy_get_value_from_tuple_call_result_6905)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_5709' (line 324)
            call_assignment_5709_6906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_5709')
            # Assigning a type to the variable 'if_stmt_test' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 28), 'if_stmt_test', call_assignment_5709_6906)
            
            # Assigning a Call to a Name (line 327):
            
            # Assigning a Call to a Name (line 327):
            
            # Call to create_src_comment(...): (line 327)
            # Processing the call arguments (line 327)
            str_6909 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 72), 'str', 'Testing the type of an if condition')
            # Getting the type of 'node' (line 327)
            node_6910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 111), 'node', False)
            # Obtaining the member 'lineno' of a type (line 327)
            lineno_6911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 111), node_6910, 'lineno')
            # Processing the call keyword arguments (line 327)
            kwargs_6912 = {}
            # Getting the type of 'stypy_functions_copy' (line 327)
            stypy_functions_copy_6907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 327)
            create_src_comment_6908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 32), stypy_functions_copy_6907, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 327)
            create_src_comment_call_result_6913 = invoke(stypy.reporting.localization.Localization(__file__, 327, 32), create_src_comment_6908, *[str_6909, lineno_6911], **kwargs_6912)
            
            # Assigning a type to the variable 'condition_comment' (line 327)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 12), 'condition_comment', create_src_comment_call_result_6913)
            
            # Assigning a Call to a Name (line 328):
            
            # Assigning a Call to a Name (line 328):
            
            # Call to create_Name(...): (line 328)
            # Processing the call arguments (line 328)
            str_6916 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 55), 'str', 'is_suitable_condition')
            # Processing the call keyword arguments (line 328)
            kwargs_6917 = {}
            # Getting the type of 'core_language_copy' (line 328)
            core_language_copy_6914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 24), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 328)
            create_Name_6915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 24), core_language_copy_6914, 'create_Name')
            # Calling create_Name(args, kwargs) (line 328)
            create_Name_call_result_6918 = invoke(stypy.reporting.localization.Localization(__file__, 328, 24), create_Name_6915, *[str_6916], **kwargs_6917)
            
            # Assigning a type to the variable 'attribute' (line 328)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 12), 'attribute', create_Name_call_result_6918)
            
            # Assigning a Call to a Name (line 329):
            
            # Assigning a Call to a Name (line 329):
            
            # Call to create_localization(...): (line 329)
            # Processing the call arguments (line 329)
            # Getting the type of 'node' (line 329)
            node_6921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 329)
            lineno_6922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 68), node_6921, 'lineno')
            # Getting the type of 'node' (line 329)
            node_6923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 329)
            col_offset_6924 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 81), node_6923, 'col_offset')
            # Processing the call keyword arguments (line 329)
            kwargs_6925 = {}
            # Getting the type of 'stypy_functions_copy' (line 329)
            stypy_functions_copy_6919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 329)
            create_localization_6920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 27), stypy_functions_copy_6919, 'create_localization')
            # Calling create_localization(args, kwargs) (line 329)
            create_localization_call_result_6926 = invoke(stypy.reporting.localization.Localization(__file__, 329, 27), create_localization_6920, *[lineno_6922, col_offset_6924], **kwargs_6925)
            
            # Assigning a type to the variable 'localization' (line 329)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 12), 'localization', create_localization_call_result_6926)
            
            # Assigning a Call to a Name (line 330):
            
            # Assigning a Call to a Name (line 330):
            
            # Call to create_call_expression(...): (line 330)
            # Processing the call arguments (line 330)
            # Getting the type of 'attribute' (line 330)
            attribute_6929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 72), 'attribute', False)
            
            # Obtaining an instance of the builtin type 'list' (line 330)
            list_6930 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 83), 'list')
            # Adding type elements to the builtin type 'list' instance (line 330)
            # Adding element type (line 330)
            # Getting the type of 'localization' (line 330)
            localization_6931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 84), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_6930, localization_6931)
            # Adding element type (line 330)
            # Getting the type of 'if_stmt_test' (line 330)
            if_stmt_test_6932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 98), 'if_stmt_test', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_6930, if_stmt_test_6932)
            
            # Processing the call keyword arguments (line 330)
            kwargs_6933 = {}
            # Getting the type of 'functions_copy' (line 330)
            functions_copy_6927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 34), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 330)
            create_call_expression_6928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 34), functions_copy_6927, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 330)
            create_call_expression_call_result_6934 = invoke(stypy.reporting.localization.Localization(__file__, 330, 34), create_call_expression_6928, *[attribute_6929, list_6930], **kwargs_6933)
            
            # Assigning a type to the variable 'test_condition_call' (line 330)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'test_condition_call', create_call_expression_call_result_6934)
            # SSA join for if statement (line 311)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Name to a Name (line 332):
        
        # Assigning a Name to a Name (line 332):
        # Getting the type of 'None' (line 332)
        None_6935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 30), 'None')
        # Assigning a type to the variable 'more_types_temp_var' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 8), 'more_types_temp_var', None_6935)
        # Getting the type of 'is_an_idiom' (line 333)
        is_an_idiom_6936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 11), 'is_an_idiom')
        # Testing if the type of an if condition is none (line 333)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 333, 8), is_an_idiom_6936):
            
            # Call to append(...): (line 378)
            # Processing the call arguments (line 378)
            
            # Call to create_src_comment(...): (line 378)
            # Processing the call arguments (line 378)
            str_7106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 72), 'str', 'SSA begins for if statement')
            # Getting the type of 'node' (line 378)
            node_7107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 103), 'node', False)
            # Obtaining the member 'lineno' of a type (line 378)
            lineno_7108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 103), node_7107, 'lineno')
            # Processing the call keyword arguments (line 378)
            kwargs_7109 = {}
            # Getting the type of 'stypy_functions_copy' (line 378)
            stypy_functions_copy_7104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 378)
            create_src_comment_7105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 32), stypy_functions_copy_7104, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 378)
            create_src_comment_call_result_7110 = invoke(stypy.reporting.localization.Localization(__file__, 378, 32), create_src_comment_7105, *[str_7106, lineno_7108], **kwargs_7109)
            
            # Processing the call keyword arguments (line 378)
            kwargs_7111 = {}
            # Getting the type of 'if_stmt_body' (line 378)
            if_stmt_body_7102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 378)
            append_7103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 12), if_stmt_body_7102, 'append')
            # Calling append(args, kwargs) (line 378)
            append_call_result_7112 = invoke(stypy.reporting.localization.Localization(__file__, 378, 12), append_7103, *[create_src_comment_call_result_7110], **kwargs_7111)
            
            
            # Assigning a Call to a Tuple (line 379):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 379)
            # Processing the call keyword arguments (line 379)
            kwargs_7115 = {}
            # Getting the type of 'stypy_functions_copy' (line 379)
            stypy_functions_copy_7113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 379)
            create_clone_type_store_7114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 43), stypy_functions_copy_7113, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 379)
            create_clone_type_store_call_result_7116 = invoke(stypy.reporting.localization.Localization(__file__, 379, 43), create_clone_type_store_7114, *[], **kwargs_7115)
            
            # Assigning a type to the variable 'call_assignment_5713' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5713', create_clone_type_store_call_result_7116)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5713' (line 379)
            call_assignment_5713_7117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5713', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7118 = stypy_get_value_from_tuple(call_assignment_5713_7117, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5714' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5714', stypy_get_value_from_tuple_call_result_7118)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_5714' (line 379)
            call_assignment_5714_7119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5714')
            # Assigning a type to the variable 'clone_stmt1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'clone_stmt1', call_assignment_5714_7119)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5713' (line 379)
            call_assignment_5713_7120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5713', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7121 = stypy_get_value_from_tuple(call_assignment_5713_7120, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5715' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5715', stypy_get_value_from_tuple_call_result_7121)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_5715' (line 379)
            call_assignment_5715_7122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5715')
            # Assigning a type to the variable 'type_store_var1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 25), 'type_store_var1', call_assignment_5715_7122)
            
            # Call to append(...): (line 380)
            # Processing the call arguments (line 380)
            # Getting the type of 'clone_stmt1' (line 380)
            clone_stmt1_7125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 32), 'clone_stmt1', False)
            # Processing the call keyword arguments (line 380)
            kwargs_7126 = {}
            # Getting the type of 'if_stmt_body' (line 380)
            if_stmt_body_7123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 380)
            append_7124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 12), if_stmt_body_7123, 'append')
            # Calling append(args, kwargs) (line 380)
            append_call_result_7127 = invoke(stypy.reporting.localization.Localization(__file__, 380, 12), append_7124, *[clone_stmt1_7125], **kwargs_7126)
            
            
            # Assigning a Name to a Name (line 381):
            
            # Assigning a Name to a Name (line 381):
            # Getting the type of 'if_stmt_body' (line 381)
            if_stmt_body_7128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 34), 'if_stmt_body')
            # Assigning a type to the variable 'body_stmts_location' (line 381)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 12), 'body_stmts_location', if_stmt_body_7128)
        else:
            
            # Testing the type of an if condition (line 333)
            if_condition_6937 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 333, 8), is_an_idiom_6936)
            # Assigning a type to the variable 'if_condition_6937' (line 333)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'if_condition_6937', if_condition_6937)
            # SSA begins for if statement (line 333)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 334):
            
            # Assigning a Call to a Name (line 334):
            
            # Call to create_Name(...): (line 334)
            # Processing the call arguments (line 334)
            
            # Call to get_recognized_idiom_function(...): (line 334)
            # Processing the call arguments (line 334)
            # Getting the type of 'idiom_name' (line 334)
            idiom_name_6942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 101), 'idiom_name', False)
            # Processing the call keyword arguments (line 334)
            kwargs_6943 = {}
            # Getting the type of 'idioms_copy' (line 334)
            idioms_copy_6940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 59), 'idioms_copy', False)
            # Obtaining the member 'get_recognized_idiom_function' of a type (line 334)
            get_recognized_idiom_function_6941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 59), idioms_copy_6940, 'get_recognized_idiom_function')
            # Calling get_recognized_idiom_function(args, kwargs) (line 334)
            get_recognized_idiom_function_call_result_6944 = invoke(stypy.reporting.localization.Localization(__file__, 334, 59), get_recognized_idiom_function_6941, *[idiom_name_6942], **kwargs_6943)
            
            # Getting the type of 'node' (line 334)
            node_6945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 114), 'node', False)
            # Obtaining the member 'lineno' of a type (line 334)
            lineno_6946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 114), node_6945, 'lineno')
            # Getting the type of 'node' (line 335)
            node_6947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 54), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 335)
            col_offset_6948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 54), node_6947, 'col_offset')
            # Processing the call keyword arguments (line 334)
            kwargs_6949 = {}
            # Getting the type of 'core_language_copy' (line 334)
            core_language_copy_6938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 28), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 334)
            create_Name_6939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 28), core_language_copy_6938, 'create_Name')
            # Calling create_Name(args, kwargs) (line 334)
            create_Name_call_result_6950 = invoke(stypy.reporting.localization.Localization(__file__, 334, 28), create_Name_6939, *[get_recognized_idiom_function_call_result_6944, lineno_6946, col_offset_6948], **kwargs_6949)
            
            # Assigning a type to the variable 'idiom_if_func' (line 334)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'idiom_if_func', create_Name_call_result_6950)
            
            # Assigning a Call to a Name (line 336):
            
            # Assigning a Call to a Name (line 336):
            
            # Call to create_call(...): (line 336)
            # Processing the call arguments (line 336)
            # Getting the type of 'idiom_if_func' (line 336)
            idiom_if_func_6953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 63), 'idiom_if_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 336)
            list_6954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 78), 'list')
            # Adding type elements to the builtin type 'list' instance (line 336)
            # Adding element type (line 336)
            
            # Obtaining the type of the subscript
            int_6955 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 96), 'int')
            # Getting the type of 'left_stmts_tuple' (line 336)
            left_stmts_tuple_6956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 79), 'left_stmts_tuple', False)
            # Obtaining the member '__getitem__' of a type (line 336)
            getitem___6957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 79), left_stmts_tuple_6956, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 336)
            subscript_call_result_6958 = invoke(stypy.reporting.localization.Localization(__file__, 336, 79), getitem___6957, int_6955)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 336, 78), list_6954, subscript_call_result_6958)
            # Adding element type (line 336)
            
            # Obtaining the type of the subscript
            int_6959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 118), 'int')
            # Getting the type of 'rigth_stmts_tuple' (line 336)
            rigth_stmts_tuple_6960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 100), 'rigth_stmts_tuple', False)
            # Obtaining the member '__getitem__' of a type (line 336)
            getitem___6961 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 100), rigth_stmts_tuple_6960, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 336)
            subscript_call_result_6962 = invoke(stypy.reporting.localization.Localization(__file__, 336, 100), getitem___6961, int_6959)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 336, 78), list_6954, subscript_call_result_6962)
            
            # Processing the call keyword arguments (line 336)
            kwargs_6963 = {}
            # Getting the type of 'functions_copy' (line 336)
            functions_copy_6951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 36), 'functions_copy', False)
            # Obtaining the member 'create_call' of a type (line 336)
            create_call_6952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 36), functions_copy_6951, 'create_call')
            # Calling create_call(args, kwargs) (line 336)
            create_call_call_result_6964 = invoke(stypy.reporting.localization.Localization(__file__, 336, 36), create_call_6952, *[idiom_if_func_6953, list_6954], **kwargs_6963)
            
            # Assigning a type to the variable 'call_to_idiom_if_func' (line 336)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 12), 'call_to_idiom_if_func', create_call_call_result_6964)
            
            # Assigning a Call to a Name (line 338):
            
            # Assigning a Call to a Name (line 338):
            
            # Call to new_temp_Name(...): (line 338)
            # Processing the call arguments (line 338)
            # Getting the type of 'False' (line 338)
            False_6967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 70), 'False', False)
            # Getting the type of 'idioms_copy' (line 338)
            idioms_copy_6968 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 77), 'idioms_copy', False)
            # Obtaining the member 'may_be_var_name' of a type (line 338)
            may_be_var_name_6969 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 77), idioms_copy_6968, 'may_be_var_name')
            # Getting the type of 'node' (line 338)
            node_6970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 106), 'node', False)
            # Obtaining the member 'lineno' of a type (line 338)
            lineno_6971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 106), node_6970, 'lineno')
            # Getting the type of 'node' (line 339)
            node_6972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 65), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 339)
            col_offset_6973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 65), node_6972, 'col_offset')
            # Processing the call keyword arguments (line 338)
            kwargs_6974 = {}
            # Getting the type of 'stypy_functions_copy' (line 338)
            stypy_functions_copy_6965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 35), 'stypy_functions_copy', False)
            # Obtaining the member 'new_temp_Name' of a type (line 338)
            new_temp_Name_6966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 35), stypy_functions_copy_6965, 'new_temp_Name')
            # Calling new_temp_Name(args, kwargs) (line 338)
            new_temp_Name_call_result_6975 = invoke(stypy.reporting.localization.Localization(__file__, 338, 35), new_temp_Name_6966, *[False_6967, may_be_var_name_6969, lineno_6971, col_offset_6973], **kwargs_6974)
            
            # Assigning a type to the variable 'may_be_type_temp_var' (line 338)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'may_be_type_temp_var', new_temp_Name_call_result_6975)
            
            # Assigning a Call to a Name (line 340):
            
            # Assigning a Call to a Name (line 340):
            
            # Call to new_temp_Name(...): (line 340)
            # Processing the call arguments (line 340)
            # Getting the type of 'False' (line 340)
            False_6978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 69), 'False', False)
            # Getting the type of 'idioms_copy' (line 340)
            idioms_copy_6979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 76), 'idioms_copy', False)
            # Obtaining the member 'more_types_var_name' of a type (line 340)
            more_types_var_name_6980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 76), idioms_copy_6979, 'more_types_var_name')
            # Getting the type of 'node' (line 340)
            node_6981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 109), 'node', False)
            # Obtaining the member 'lineno' of a type (line 340)
            lineno_6982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 109), node_6981, 'lineno')
            # Getting the type of 'node' (line 341)
            node_6983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 64), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 341)
            col_offset_6984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 64), node_6983, 'col_offset')
            # Processing the call keyword arguments (line 340)
            kwargs_6985 = {}
            # Getting the type of 'stypy_functions_copy' (line 340)
            stypy_functions_copy_6976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 34), 'stypy_functions_copy', False)
            # Obtaining the member 'new_temp_Name' of a type (line 340)
            new_temp_Name_6977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 34), stypy_functions_copy_6976, 'new_temp_Name')
            # Calling new_temp_Name(args, kwargs) (line 340)
            new_temp_Name_call_result_6986 = invoke(stypy.reporting.localization.Localization(__file__, 340, 34), new_temp_Name_6977, *[False_6978, more_types_var_name_6980, lineno_6982, col_offset_6984], **kwargs_6985)
            
            # Assigning a type to the variable 'more_types_temp_var' (line 340)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 12), 'more_types_temp_var', new_temp_Name_call_result_6986)
            
            # Assigning a Call to a Name (line 342):
            
            # Assigning a Call to a Name (line 342):
            
            # Call to create_type_tuple(...): (line 342)
            # Processing the call arguments (line 342)
            # Getting the type of 'may_be_type_temp_var' (line 342)
            may_be_type_temp_var_6989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 74), 'may_be_type_temp_var', False)
            # Getting the type of 'more_types_temp_var' (line 342)
            more_types_temp_var_6990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 96), 'more_types_temp_var', False)
            # Processing the call keyword arguments (line 342)
            kwargs_6991 = {}
            # Getting the type of 'core_language_copy' (line 342)
            core_language_copy_6987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 37), 'core_language_copy', False)
            # Obtaining the member 'create_type_tuple' of a type (line 342)
            create_type_tuple_6988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 37), core_language_copy_6987, 'create_type_tuple')
            # Calling create_type_tuple(args, kwargs) (line 342)
            create_type_tuple_call_result_6992 = invoke(stypy.reporting.localization.Localization(__file__, 342, 37), create_type_tuple_6988, *[may_be_type_temp_var_6989, more_types_temp_var_6990], **kwargs_6991)
            
            # Assigning a type to the variable 'if_func_ret_type_tuple' (line 342)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 12), 'if_func_ret_type_tuple', create_type_tuple_call_result_6992)
            
            # Assigning a Call to a Name (line 343):
            
            # Assigning a Call to a Name (line 343):
            
            # Call to create_Assign(...): (line 343)
            # Processing the call arguments (line 343)
            # Getting the type of 'if_func_ret_type_tuple' (line 343)
            if_func_ret_type_tuple_6995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 70), 'if_func_ret_type_tuple', False)
            # Getting the type of 'call_to_idiom_if_func' (line 343)
            call_to_idiom_if_func_6996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 94), 'call_to_idiom_if_func', False)
            # Processing the call keyword arguments (line 343)
            kwargs_6997 = {}
            # Getting the type of 'core_language_copy' (line 343)
            core_language_copy_6993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 37), 'core_language_copy', False)
            # Obtaining the member 'create_Assign' of a type (line 343)
            create_Assign_6994 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 37), core_language_copy_6993, 'create_Assign')
            # Calling create_Assign(args, kwargs) (line 343)
            create_Assign_call_result_6998 = invoke(stypy.reporting.localization.Localization(__file__, 343, 37), create_Assign_6994, *[if_func_ret_type_tuple_6995, call_to_idiom_if_func_6996], **kwargs_6997)
            
            # Assigning a type to the variable 'may_be_type_assignment' (line 343)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 12), 'may_be_type_assignment', create_Assign_call_result_6998)
            
            # Call to append(...): (line 344)
            # Processing the call arguments (line 344)
            
            # Call to flatten_lists(...): (line 344)
            # Processing the call arguments (line 344)
            # Getting the type of 'may_be_type_assignment' (line 344)
            may_be_type_assignment_7003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 67), 'may_be_type_assignment', False)
            # Processing the call keyword arguments (line 344)
            kwargs_7004 = {}
            # Getting the type of 'stypy_functions_copy' (line 344)
            stypy_functions_copy_7001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 344)
            flatten_lists_7002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 32), stypy_functions_copy_7001, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 344)
            flatten_lists_call_result_7005 = invoke(stypy.reporting.localization.Localization(__file__, 344, 32), flatten_lists_7002, *[may_be_type_assignment_7003], **kwargs_7004)
            
            # Processing the call keyword arguments (line 344)
            kwargs_7006 = {}
            # Getting the type of 'if_stmt_body' (line 344)
            if_stmt_body_6999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 344)
            append_7000 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 12), if_stmt_body_6999, 'append')
            # Calling append(args, kwargs) (line 344)
            append_call_result_7007 = invoke(stypy.reporting.localization.Localization(__file__, 344, 12), append_7000, *[flatten_lists_call_result_7005], **kwargs_7006)
            
            
            # Assigning a List to a Name (line 347):
            
            # Assigning a List to a Name (line 347):
            
            # Obtaining an instance of the builtin type 'list' (line 347)
            list_7008 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 347)
            
            # Assigning a type to the variable 'idiom_first_if_body' (line 347)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'idiom_first_if_body', list_7008)
            
            # Assigning a Call to a Name (line 348):
            
            # Assigning a Call to a Name (line 348):
            
            # Call to create_if(...): (line 348)
            # Processing the call arguments (line 348)
            # Getting the type of 'may_be_type_temp_var' (line 348)
            may_be_type_temp_var_7011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 62), 'may_be_type_temp_var', False)
            # Getting the type of 'idiom_first_if_body' (line 348)
            idiom_first_if_body_7012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 84), 'idiom_first_if_body', False)
            # Processing the call keyword arguments (line 348)
            kwargs_7013 = {}
            # Getting the type of 'conditional_statements_copy' (line 348)
            conditional_statements_copy_7009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 24), 'conditional_statements_copy', False)
            # Obtaining the member 'create_if' of a type (line 348)
            create_if_7010 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 24), conditional_statements_copy_7009, 'create_if')
            # Calling create_if(args, kwargs) (line 348)
            create_if_call_result_7014 = invoke(stypy.reporting.localization.Localization(__file__, 348, 24), create_if_7010, *[may_be_type_temp_var_7011, idiom_first_if_body_7012], **kwargs_7013)
            
            # Assigning a type to the variable 'if_may_be' (line 348)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'if_may_be', create_if_call_result_7014)
            
            # Call to append(...): (line 349)
            # Processing the call arguments (line 349)
            # Getting the type of 'if_may_be' (line 349)
            if_may_be_7017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 32), 'if_may_be', False)
            # Processing the call keyword arguments (line 349)
            kwargs_7018 = {}
            # Getting the type of 'if_stmt_body' (line 349)
            if_stmt_body_7015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 349)
            append_7016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 12), if_stmt_body_7015, 'append')
            # Calling append(args, kwargs) (line 349)
            append_call_result_7019 = invoke(stypy.reporting.localization.Localization(__file__, 349, 12), append_7016, *[if_may_be_7017], **kwargs_7018)
            
            
            # Assigning a List to a Name (line 352):
            
            # Assigning a List to a Name (line 352):
            
            # Obtaining an instance of the builtin type 'list' (line 352)
            list_7020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 36), 'list')
            # Adding type elements to the builtin type 'list' instance (line 352)
            
            # Assigning a type to the variable 'idiom_more_types_body' (line 352)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 12), 'idiom_more_types_body', list_7020)
            
            # Assigning a Call to a Name (line 353):
            
            # Assigning a Call to a Name (line 353):
            
            # Call to create_if(...): (line 353)
            # Processing the call arguments (line 353)
            # Getting the type of 'more_types_temp_var' (line 353)
            more_types_temp_var_7023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 66), 'more_types_temp_var', False)
            # Getting the type of 'idiom_more_types_body' (line 353)
            idiom_more_types_body_7024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 87), 'idiom_more_types_body', False)
            # Processing the call keyword arguments (line 353)
            kwargs_7025 = {}
            # Getting the type of 'conditional_statements_copy' (line 353)
            conditional_statements_copy_7021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 28), 'conditional_statements_copy', False)
            # Obtaining the member 'create_if' of a type (line 353)
            create_if_7022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 28), conditional_statements_copy_7021, 'create_if')
            # Calling create_if(args, kwargs) (line 353)
            create_if_call_result_7026 = invoke(stypy.reporting.localization.Localization(__file__, 353, 28), create_if_7022, *[more_types_temp_var_7023, idiom_more_types_body_7024], **kwargs_7025)
            
            # Assigning a type to the variable 'if_more_types' (line 353)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'if_more_types', create_if_call_result_7026)
            
            # Call to append(...): (line 356)
            # Processing the call arguments (line 356)
            
            # Call to create_src_comment(...): (line 356)
            # Processing the call arguments (line 356)
            str_7031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 81), 'str', 'Runtime conditional SSA')
            # Getting the type of 'node' (line 356)
            node_7032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 356)
            lineno_7033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 108), node_7032, 'lineno')
            # Processing the call keyword arguments (line 356)
            kwargs_7034 = {}
            # Getting the type of 'stypy_functions_copy' (line 356)
            stypy_functions_copy_7029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 41), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 356)
            create_src_comment_7030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 41), stypy_functions_copy_7029, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 356)
            create_src_comment_call_result_7035 = invoke(stypy.reporting.localization.Localization(__file__, 356, 41), create_src_comment_7030, *[str_7031, lineno_7033], **kwargs_7034)
            
            # Processing the call keyword arguments (line 356)
            kwargs_7036 = {}
            # Getting the type of 'idiom_more_types_body' (line 356)
            idiom_more_types_body_7027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 12), 'idiom_more_types_body', False)
            # Obtaining the member 'append' of a type (line 356)
            append_7028 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 12), idiom_more_types_body_7027, 'append')
            # Calling append(args, kwargs) (line 356)
            append_call_result_7037 = invoke(stypy.reporting.localization.Localization(__file__, 356, 12), append_7028, *[create_src_comment_call_result_7035], **kwargs_7036)
            
            
            # Assigning a Call to a Tuple (line 357):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 357)
            # Processing the call keyword arguments (line 357)
            kwargs_7040 = {}
            # Getting the type of 'stypy_functions_copy' (line 357)
            stypy_functions_copy_7038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 357)
            create_clone_type_store_7039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 43), stypy_functions_copy_7038, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 357)
            create_clone_type_store_call_result_7041 = invoke(stypy.reporting.localization.Localization(__file__, 357, 43), create_clone_type_store_7039, *[], **kwargs_7040)
            
            # Assigning a type to the variable 'call_assignment_5710' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_5710', create_clone_type_store_call_result_7041)
            
            # Assigning a Call to a Name (line 357):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5710' (line 357)
            call_assignment_5710_7042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_5710', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7043 = stypy_get_value_from_tuple(call_assignment_5710_7042, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5711' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_5711', stypy_get_value_from_tuple_call_result_7043)
            
            # Assigning a Name to a Name (line 357):
            # Getting the type of 'call_assignment_5711' (line 357)
            call_assignment_5711_7044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_5711')
            # Assigning a type to the variable 'clone_stmt1' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'clone_stmt1', call_assignment_5711_7044)
            
            # Assigning a Call to a Name (line 357):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5710' (line 357)
            call_assignment_5710_7045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_5710', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7046 = stypy_get_value_from_tuple(call_assignment_5710_7045, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5712' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_5712', stypy_get_value_from_tuple_call_result_7046)
            
            # Assigning a Name to a Name (line 357):
            # Getting the type of 'call_assignment_5712' (line 357)
            call_assignment_5712_7047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_5712')
            # Assigning a type to the variable 'type_store_var1' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 25), 'type_store_var1', call_assignment_5712_7047)
            
            # Call to append(...): (line 358)
            # Processing the call arguments (line 358)
            # Getting the type of 'clone_stmt1' (line 358)
            clone_stmt1_7050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 41), 'clone_stmt1', False)
            # Processing the call keyword arguments (line 358)
            kwargs_7051 = {}
            # Getting the type of 'idiom_more_types_body' (line 358)
            idiom_more_types_body_7048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'idiom_more_types_body', False)
            # Obtaining the member 'append' of a type (line 358)
            append_7049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 12), idiom_more_types_body_7048, 'append')
            # Calling append(args, kwargs) (line 358)
            append_call_result_7052 = invoke(stypy.reporting.localization.Localization(__file__, 358, 12), append_7049, *[clone_stmt1_7050], **kwargs_7051)
            
            
            # Assigning a Call to a Name (line 362):
            
            # Assigning a Call to a Name (line 362):
            
            # Call to create_Assign(...): (line 362)
            # Processing the call arguments (line 362)
            # Getting the type of 'type_store_var1' (line 362)
            type_store_var1_7055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 70), 'type_store_var1', False)
            
            # Call to create_Name(...): (line 362)
            # Processing the call arguments (line 362)
            # Getting the type of 'stypy_functions_copy' (line 363)
            stypy_functions_copy_7058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 16), 'stypy_functions_copy', False)
            # Obtaining the member 'default_module_type_store_var_name' of a type (line 363)
            default_module_type_store_var_name_7059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 16), stypy_functions_copy_7058, 'default_module_type_store_var_name')
            # Processing the call keyword arguments (line 362)
            kwargs_7060 = {}
            # Getting the type of 'core_language_copy' (line 362)
            core_language_copy_7056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 87), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 362)
            create_Name_7057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 87), core_language_copy_7056, 'create_Name')
            # Calling create_Name(args, kwargs) (line 362)
            create_Name_call_result_7061 = invoke(stypy.reporting.localization.Localization(__file__, 362, 87), create_Name_7057, *[default_module_type_store_var_name_7059], **kwargs_7060)
            
            # Processing the call keyword arguments (line 362)
            kwargs_7062 = {}
            # Getting the type of 'core_language_copy' (line 362)
            core_language_copy_7053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 37), 'core_language_copy', False)
            # Obtaining the member 'create_Assign' of a type (line 362)
            create_Assign_7054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 37), core_language_copy_7053, 'create_Assign')
            # Calling create_Assign(args, kwargs) (line 362)
            create_Assign_call_result_7063 = invoke(stypy.reporting.localization.Localization(__file__, 362, 37), create_Assign_7054, *[type_store_var1_7055, create_Name_call_result_7061], **kwargs_7062)
            
            # Assigning a type to the variable 'may_be_type_assignment' (line 362)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 12), 'may_be_type_assignment', create_Assign_call_result_7063)
            
            # Assigning a List to a Attribute (line 364):
            
            # Assigning a List to a Attribute (line 364):
            
            # Obtaining an instance of the builtin type 'list' (line 364)
            list_7064 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 35), 'list')
            # Adding type elements to the builtin type 'list' instance (line 364)
            # Adding element type (line 364)
            # Getting the type of 'may_be_type_assignment' (line 364)
            may_be_type_assignment_7065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 36), 'may_be_type_assignment')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 364, 35), list_7064, may_be_type_assignment_7065)
            
            # Getting the type of 'if_more_types' (line 364)
            if_more_types_7066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'if_more_types')
            # Setting the type of the member 'orelse' of a type (line 364)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 12), if_more_types_7066, 'orelse', list_7064)
            
            # Call to append(...): (line 366)
            # Processing the call arguments (line 366)
            # Getting the type of 'if_more_types' (line 366)
            if_more_types_7069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 39), 'if_more_types', False)
            # Processing the call keyword arguments (line 366)
            kwargs_7070 = {}
            # Getting the type of 'idiom_first_if_body' (line 366)
            idiom_first_if_body_7067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 12), 'idiom_first_if_body', False)
            # Obtaining the member 'append' of a type (line 366)
            append_7068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 12), idiom_first_if_body_7067, 'append')
            # Calling append(args, kwargs) (line 366)
            append_call_result_7071 = invoke(stypy.reporting.localization.Localization(__file__, 366, 12), append_7068, *[if_more_types_7069], **kwargs_7070)
            
            
            # Assigning a Call to a Name (line 370):
            
            # Assigning a Call to a Name (line 370):
            
            # Call to set_type_of_idiom_var(...): (line 370)
            # Processing the call arguments (line 370)
            # Getting the type of 'idiom_name' (line 370)
            idiom_name_7074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 57), 'idiom_name', False)
            str_7075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 69), 'str', 'if')
            # Getting the type of 'node' (line 370)
            node_7076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 75), 'node', False)
            # Obtaining the member 'test' of a type (line 370)
            test_7077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 75), node_7076, 'test')
            
            # Obtaining the type of the subscript
            int_7078 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 104), 'int')
            # Getting the type of 'rigth_stmts_tuple' (line 370)
            rigth_stmts_tuple_7079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 86), 'rigth_stmts_tuple', False)
            # Obtaining the member '__getitem__' of a type (line 370)
            getitem___7080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 86), rigth_stmts_tuple_7079, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 370)
            subscript_call_result_7081 = invoke(stypy.reporting.localization.Localization(__file__, 370, 86), getitem___7080, int_7078)
            
            # Getting the type of 'node' (line 370)
            node_7082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 370)
            lineno_7083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 108), node_7082, 'lineno')
            # Getting the type of 'node' (line 371)
            node_7084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 52), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 371)
            col_offset_7085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 371, 52), node_7084, 'col_offset')
            # Processing the call keyword arguments (line 370)
            kwargs_7086 = {}
            # Getting the type of 'idioms_copy' (line 370)
            idioms_copy_7072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 23), 'idioms_copy', False)
            # Obtaining the member 'set_type_of_idiom_var' of a type (line 370)
            set_type_of_idiom_var_7073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 23), idioms_copy_7072, 'set_type_of_idiom_var')
            # Calling set_type_of_idiom_var(args, kwargs) (line 370)
            set_type_of_idiom_var_call_result_7087 = invoke(stypy.reporting.localization.Localization(__file__, 370, 23), set_type_of_idiom_var_7073, *[idiom_name_7074, str_7075, test_7077, subscript_call_result_7081, lineno_7083, col_offset_7085], **kwargs_7086)
            
            # Assigning a type to the variable 'set_type' (line 370)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'set_type', set_type_of_idiom_var_call_result_7087)
            
            
            
            # Call to len(...): (line 372)
            # Processing the call arguments (line 372)
            # Getting the type of 'set_type' (line 372)
            set_type_7089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 23), 'set_type', False)
            # Processing the call keyword arguments (line 372)
            kwargs_7090 = {}
            # Getting the type of 'len' (line 372)
            len_7088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 19), 'len', False)
            # Calling len(args, kwargs) (line 372)
            len_call_result_7091 = invoke(stypy.reporting.localization.Localization(__file__, 372, 19), len_7088, *[set_type_7089], **kwargs_7090)
            
            int_7092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 36), 'int')
            # Applying the binary operator '==' (line 372)
            result_eq_7093 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 19), '==', len_call_result_7091, int_7092)
            
            # Applying the 'not' unary operator (line 372)
            result_not__7094 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 15), 'not', result_eq_7093)
            
            # Testing if the type of an if condition is none (line 372)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 372, 12), result_not__7094):
                pass
            else:
                
                # Testing the type of an if condition (line 372)
                if_condition_7095 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 372, 12), result_not__7094)
                # Assigning a type to the variable 'if_condition_7095' (line 372)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 12), 'if_condition_7095', if_condition_7095)
                # SSA begins for if statement (line 372)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 373)
                # Processing the call arguments (line 373)
                # Getting the type of 'set_type' (line 373)
                set_type_7098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 43), 'set_type', False)
                # Processing the call keyword arguments (line 373)
                kwargs_7099 = {}
                # Getting the type of 'idiom_first_if_body' (line 373)
                idiom_first_if_body_7096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 16), 'idiom_first_if_body', False)
                # Obtaining the member 'append' of a type (line 373)
                append_7097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 16), idiom_first_if_body_7096, 'append')
                # Calling append(args, kwargs) (line 373)
                append_call_result_7100 = invoke(stypy.reporting.localization.Localization(__file__, 373, 16), append_7097, *[set_type_7098], **kwargs_7099)
                
                # SSA join for if statement (line 372)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Name (line 375):
            
            # Assigning a Name to a Name (line 375):
            # Getting the type of 'idiom_first_if_body' (line 375)
            idiom_first_if_body_7101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 'idiom_first_if_body')
            # Assigning a type to the variable 'body_stmts_location' (line 375)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 12), 'body_stmts_location', idiom_first_if_body_7101)
            # SSA branch for the else part of an if statement (line 333)
            module_type_store.open_ssa_branch('else')
            
            # Call to append(...): (line 378)
            # Processing the call arguments (line 378)
            
            # Call to create_src_comment(...): (line 378)
            # Processing the call arguments (line 378)
            str_7106 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 72), 'str', 'SSA begins for if statement')
            # Getting the type of 'node' (line 378)
            node_7107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 103), 'node', False)
            # Obtaining the member 'lineno' of a type (line 378)
            lineno_7108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 103), node_7107, 'lineno')
            # Processing the call keyword arguments (line 378)
            kwargs_7109 = {}
            # Getting the type of 'stypy_functions_copy' (line 378)
            stypy_functions_copy_7104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 378)
            create_src_comment_7105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 32), stypy_functions_copy_7104, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 378)
            create_src_comment_call_result_7110 = invoke(stypy.reporting.localization.Localization(__file__, 378, 32), create_src_comment_7105, *[str_7106, lineno_7108], **kwargs_7109)
            
            # Processing the call keyword arguments (line 378)
            kwargs_7111 = {}
            # Getting the type of 'if_stmt_body' (line 378)
            if_stmt_body_7102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 378)
            append_7103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 12), if_stmt_body_7102, 'append')
            # Calling append(args, kwargs) (line 378)
            append_call_result_7112 = invoke(stypy.reporting.localization.Localization(__file__, 378, 12), append_7103, *[create_src_comment_call_result_7110], **kwargs_7111)
            
            
            # Assigning a Call to a Tuple (line 379):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 379)
            # Processing the call keyword arguments (line 379)
            kwargs_7115 = {}
            # Getting the type of 'stypy_functions_copy' (line 379)
            stypy_functions_copy_7113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 379)
            create_clone_type_store_7114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 43), stypy_functions_copy_7113, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 379)
            create_clone_type_store_call_result_7116 = invoke(stypy.reporting.localization.Localization(__file__, 379, 43), create_clone_type_store_7114, *[], **kwargs_7115)
            
            # Assigning a type to the variable 'call_assignment_5713' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5713', create_clone_type_store_call_result_7116)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5713' (line 379)
            call_assignment_5713_7117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5713', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7118 = stypy_get_value_from_tuple(call_assignment_5713_7117, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5714' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5714', stypy_get_value_from_tuple_call_result_7118)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_5714' (line 379)
            call_assignment_5714_7119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5714')
            # Assigning a type to the variable 'clone_stmt1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'clone_stmt1', call_assignment_5714_7119)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5713' (line 379)
            call_assignment_5713_7120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5713', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7121 = stypy_get_value_from_tuple(call_assignment_5713_7120, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5715' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5715', stypy_get_value_from_tuple_call_result_7121)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_5715' (line 379)
            call_assignment_5715_7122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_5715')
            # Assigning a type to the variable 'type_store_var1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 25), 'type_store_var1', call_assignment_5715_7122)
            
            # Call to append(...): (line 380)
            # Processing the call arguments (line 380)
            # Getting the type of 'clone_stmt1' (line 380)
            clone_stmt1_7125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 32), 'clone_stmt1', False)
            # Processing the call keyword arguments (line 380)
            kwargs_7126 = {}
            # Getting the type of 'if_stmt_body' (line 380)
            if_stmt_body_7123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 380)
            append_7124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 12), if_stmt_body_7123, 'append')
            # Calling append(args, kwargs) (line 380)
            append_call_result_7127 = invoke(stypy.reporting.localization.Localization(__file__, 380, 12), append_7124, *[clone_stmt1_7125], **kwargs_7126)
            
            
            # Assigning a Name to a Name (line 381):
            
            # Assigning a Name to a Name (line 381):
            # Getting the type of 'if_stmt_body' (line 381)
            if_stmt_body_7128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 34), 'if_stmt_body')
            # Assigning a type to the variable 'body_stmts_location' (line 381)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 12), 'body_stmts_location', if_stmt_body_7128)
            # SSA join for if statement (line 333)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to extend(...): (line 384)
        # Processing the call arguments (line 384)
        
        # Call to __visit_instruction_body(...): (line 384)
        # Processing the call arguments (line 384)
        # Getting the type of 'node' (line 384)
        node_7133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 65), 'node', False)
        # Obtaining the member 'body' of a type (line 384)
        body_7134 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 65), node_7133, 'body')
        # Getting the type of 'context' (line 384)
        context_7135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 76), 'context', False)
        # Processing the call keyword arguments (line 384)
        kwargs_7136 = {}
        # Getting the type of 'self' (line 384)
        self_7131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 35), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 384)
        visit_instruction_body_7132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 35), self_7131, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 384)
        visit_instruction_body_call_result_7137 = invoke(stypy.reporting.localization.Localization(__file__, 384, 35), visit_instruction_body_7132, *[body_7134, context_7135], **kwargs_7136)
        
        # Processing the call keyword arguments (line 384)
        kwargs_7138 = {}
        # Getting the type of 'body_stmts_location' (line 384)
        body_stmts_location_7129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 8), 'body_stmts_location', False)
        # Obtaining the member 'extend' of a type (line 384)
        extend_7130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 8), body_stmts_location_7129, 'extend')
        # Calling extend(args, kwargs) (line 384)
        extend_call_result_7139 = invoke(stypy.reporting.localization.Localization(__file__, 384, 8), extend_7130, *[visit_instruction_body_call_result_7137], **kwargs_7138)
        
        
        
        # Call to len(...): (line 387)
        # Processing the call arguments (line 387)
        # Getting the type of 'node' (line 387)
        node_7141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 15), 'node', False)
        # Obtaining the member 'orelse' of a type (line 387)
        orelse_7142 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 15), node_7141, 'orelse')
        # Processing the call keyword arguments (line 387)
        kwargs_7143 = {}
        # Getting the type of 'len' (line 387)
        len_7140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 11), 'len', False)
        # Calling len(args, kwargs) (line 387)
        len_call_result_7144 = invoke(stypy.reporting.localization.Localization(__file__, 387, 11), len_7140, *[orelse_7142], **kwargs_7143)
        
        int_7145 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 30), 'int')
        # Applying the binary operator '>' (line 387)
        result_gt_7146 = python_operator(stypy.reporting.localization.Localization(__file__, 387, 11), '>', len_call_result_7144, int_7145)
        
        # Testing if the type of an if condition is none (line 387)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 387, 8), result_gt_7146):
            
            # Assigning a Call to a Tuple (line 450):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 450)
            # Processing the call keyword arguments (line 450)
            kwargs_7343 = {}
            # Getting the type of 'stypy_functions_copy' (line 450)
            stypy_functions_copy_7341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 450)
            create_clone_type_store_7342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 43), stypy_functions_copy_7341, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 450)
            create_clone_type_store_call_result_7344 = invoke(stypy.reporting.localization.Localization(__file__, 450, 43), create_clone_type_store_7342, *[], **kwargs_7343)
            
            # Assigning a type to the variable 'call_assignment_5722' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5722', create_clone_type_store_call_result_7344)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5722' (line 450)
            call_assignment_5722_7345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5722', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7346 = stypy_get_value_from_tuple(call_assignment_5722_7345, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5723' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5723', stypy_get_value_from_tuple_call_result_7346)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_5723' (line 450)
            call_assignment_5723_7347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5723')
            # Assigning a type to the variable 'clone_stmt2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'clone_stmt2', call_assignment_5723_7347)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5722' (line 450)
            call_assignment_5722_7348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5722', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7349 = stypy_get_value_from_tuple(call_assignment_5722_7348, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5724' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5724', stypy_get_value_from_tuple_call_result_7349)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_5724' (line 450)
            call_assignment_5724_7350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5724')
            # Assigning a type to the variable 'type_store_var2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 25), 'type_store_var2', call_assignment_5724_7350)
            
            # Call to append(...): (line 451)
            # Processing the call arguments (line 451)
            # Getting the type of 'clone_stmt2' (line 451)
            clone_stmt2_7353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 39), 'clone_stmt2', False)
            # Processing the call keyword arguments (line 451)
            kwargs_7354 = {}
            # Getting the type of 'body_stmts_location' (line 451)
            body_stmts_location_7351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 12), 'body_stmts_location', False)
            # Obtaining the member 'append' of a type (line 451)
            append_7352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 12), body_stmts_location_7351, 'append')
            # Calling append(args, kwargs) (line 451)
            append_call_result_7355 = invoke(stypy.reporting.localization.Localization(__file__, 451, 12), append_7352, *[clone_stmt2_7353], **kwargs_7354)
            
            
            # Assigning a Call to a Name (line 455):
            
            # Assigning a Call to a Name (line 455):
            
            # Call to create_Name(...): (line 455)
            # Processing the call arguments (line 455)
            str_7358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 61), 'str', 'None')
            # Processing the call keyword arguments (line 455)
            kwargs_7359 = {}
            # Getting the type of 'core_language_copy' (line 455)
            core_language_copy_7356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 30), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 455)
            create_Name_7357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 30), core_language_copy_7356, 'create_Name')
            # Calling create_Name(args, kwargs) (line 455)
            create_Name_call_result_7360 = invoke(stypy.reporting.localization.Localization(__file__, 455, 30), create_Name_7357, *[str_7358], **kwargs_7359)
            
            # Assigning a type to the variable 'type_store_var3' (line 455)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 12), 'type_store_var3', create_Name_call_result_7360)
        else:
            
            # Testing the type of an if condition (line 387)
            if_condition_7147 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 387, 8), result_gt_7146)
            # Assigning a type to the variable 'if_condition_7147' (line 387)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 8), 'if_condition_7147', if_condition_7147)
            # SSA begins for if statement (line 387)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'is_an_idiom' (line 388)
            is_an_idiom_7148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 15), 'is_an_idiom')
            # Testing if the type of an if condition is none (line 388)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 388, 12), is_an_idiom_7148):
                
                # Call to append(...): (line 437)
                # Processing the call arguments (line 437)
                
                # Call to create_src_comment(...): (line 438)
                # Processing the call arguments (line 438)
                str_7297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 60), 'str', 'SSA branch for the else part of an if statement')
                # Getting the type of 'node' (line 438)
                node_7298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 111), 'node', False)
                # Obtaining the member 'lineno' of a type (line 438)
                lineno_7299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 111), node_7298, 'lineno')
                # Processing the call keyword arguments (line 438)
                kwargs_7300 = {}
                # Getting the type of 'stypy_functions_copy' (line 438)
                stypy_functions_copy_7295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 438)
                create_src_comment_7296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 20), stypy_functions_copy_7295, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 438)
                create_src_comment_call_result_7301 = invoke(stypy.reporting.localization.Localization(__file__, 438, 20), create_src_comment_7296, *[str_7297, lineno_7299], **kwargs_7300)
                
                # Processing the call keyword arguments (line 437)
                kwargs_7302 = {}
                # Getting the type of 'if_stmt_body' (line 437)
                if_stmt_body_7293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 437)
                append_7294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 16), if_stmt_body_7293, 'append')
                # Calling append(args, kwargs) (line 437)
                append_call_result_7303 = invoke(stypy.reporting.localization.Localization(__file__, 437, 16), append_7294, *[create_src_comment_call_result_7301], **kwargs_7302)
                
                
                # Assigning a Call to a Tuple (line 439):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 439)
                # Processing the call keyword arguments (line 439)
                kwargs_7306 = {}
                # Getting the type of 'stypy_functions_copy' (line 439)
                stypy_functions_copy_7304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 439)
                create_clone_type_store_7305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 47), stypy_functions_copy_7304, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 439)
                create_clone_type_store_call_result_7307 = invoke(stypy.reporting.localization.Localization(__file__, 439, 47), create_clone_type_store_7305, *[], **kwargs_7306)
                
                # Assigning a type to the variable 'call_assignment_5719' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5719', create_clone_type_store_call_result_7307)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5719' (line 439)
                call_assignment_5719_7308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5719', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7309 = stypy_get_value_from_tuple(call_assignment_5719_7308, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5720' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5720', stypy_get_value_from_tuple_call_result_7309)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_5720' (line 439)
                call_assignment_5720_7310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5720')
                # Assigning a type to the variable 'clone_stmt2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'clone_stmt2', call_assignment_5720_7310)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5719' (line 439)
                call_assignment_5719_7311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5719', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7312 = stypy_get_value_from_tuple(call_assignment_5719_7311, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5721' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5721', stypy_get_value_from_tuple_call_result_7312)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_5721' (line 439)
                call_assignment_5721_7313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5721')
                # Assigning a type to the variable 'type_store_var2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 29), 'type_store_var2', call_assignment_5721_7313)
                
                # Call to append(...): (line 440)
                # Processing the call arguments (line 440)
                # Getting the type of 'clone_stmt2' (line 440)
                clone_stmt2_7316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 36), 'clone_stmt2', False)
                # Processing the call keyword arguments (line 440)
                kwargs_7317 = {}
                # Getting the type of 'if_stmt_body' (line 440)
                if_stmt_body_7314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 440)
                append_7315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 16), if_stmt_body_7314, 'append')
                # Calling append(args, kwargs) (line 440)
                append_call_result_7318 = invoke(stypy.reporting.localization.Localization(__file__, 440, 16), append_7315, *[clone_stmt2_7316], **kwargs_7317)
                
                
                # Assigning a Call to a Name (line 442):
                
                # Assigning a Call to a Name (line 442):
                
                # Call to create_set_type_store(...): (line 442)
                # Processing the call arguments (line 442)
                # Getting the type of 'type_store_var1' (line 442)
                type_store_var1_7321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 77), 'type_store_var1', False)
                # Processing the call keyword arguments (line 442)
                kwargs_7322 = {}
                # Getting the type of 'stypy_functions_copy' (line 442)
                stypy_functions_copy_7319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 34), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_store' of a type (line 442)
                create_set_type_store_7320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 34), stypy_functions_copy_7319, 'create_set_type_store')
                # Calling create_set_type_store(args, kwargs) (line 442)
                create_set_type_store_call_result_7323 = invoke(stypy.reporting.localization.Localization(__file__, 442, 34), create_set_type_store_7320, *[type_store_var1_7321], **kwargs_7322)
                
                # Assigning a type to the variable 'set_type_store1' (line 442)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'set_type_store1', create_set_type_store_call_result_7323)
                
                # Call to append(...): (line 443)
                # Processing the call arguments (line 443)
                # Getting the type of 'set_type_store1' (line 443)
                set_type_store1_7326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 36), 'set_type_store1', False)
                # Processing the call keyword arguments (line 443)
                kwargs_7327 = {}
                # Getting the type of 'if_stmt_body' (line 443)
                if_stmt_body_7324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 443)
                append_7325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 16), if_stmt_body_7324, 'append')
                # Calling append(args, kwargs) (line 443)
                append_call_result_7328 = invoke(stypy.reporting.localization.Localization(__file__, 443, 16), append_7325, *[set_type_store1_7326], **kwargs_7327)
                
                
                # Assigning a Name to a Name (line 444):
                
                # Assigning a Name to a Name (line 444):
                # Getting the type of 'if_stmt_body' (line 444)
                if_stmt_body_7329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 38), 'if_stmt_body')
                # Assigning a type to the variable 'body_stmts_location' (line 444)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'body_stmts_location', if_stmt_body_7329)
            else:
                
                # Testing the type of an if condition (line 388)
                if_condition_7149 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 388, 12), is_an_idiom_7148)
                # Assigning a type to the variable 'if_condition_7149' (line 388)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 12), 'if_condition_7149', if_condition_7149)
                # SSA begins for if statement (line 388)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a List to a Name (line 389):
                
                # Assigning a List to a Name (line 389):
                
                # Obtaining an instance of the builtin type 'list' (line 389)
                list_7150 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 42), 'list')
                # Adding type elements to the builtin type 'list' instance (line 389)
                
                # Assigning a type to the variable 'idiom_more_types_body_2' (line 389)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 16), 'idiom_more_types_body_2', list_7150)
                
                # Assigning a Call to a Name (line 390):
                
                # Assigning a Call to a Name (line 390):
                
                # Call to create_if(...): (line 390)
                # Processing the call arguments (line 390)
                # Getting the type of 'more_types_temp_var' (line 390)
                more_types_temp_var_7153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 72), 'more_types_temp_var', False)
                # Getting the type of 'idiom_more_types_body_2' (line 390)
                idiom_more_types_body_2_7154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 93), 'idiom_more_types_body_2', False)
                # Processing the call keyword arguments (line 390)
                kwargs_7155 = {}
                # Getting the type of 'conditional_statements_copy' (line 390)
                conditional_statements_copy_7151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 34), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 390)
                create_if_7152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 34), conditional_statements_copy_7151, 'create_if')
                # Calling create_if(args, kwargs) (line 390)
                create_if_call_result_7156 = invoke(stypy.reporting.localization.Localization(__file__, 390, 34), create_if_7152, *[more_types_temp_var_7153, idiom_more_types_body_2_7154], **kwargs_7155)
                
                # Assigning a type to the variable 'if_more_types_2' (line 390)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'if_more_types_2', create_if_call_result_7156)
                
                # Call to append(...): (line 392)
                # Processing the call arguments (line 392)
                
                # Call to create_src_comment(...): (line 393)
                # Processing the call arguments (line 393)
                str_7161 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 60), 'str', 'Runtime conditional SSA for else branch')
                # Getting the type of 'node' (line 393)
                node_7162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 103), 'node', False)
                # Obtaining the member 'lineno' of a type (line 393)
                lineno_7163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 103), node_7162, 'lineno')
                # Processing the call keyword arguments (line 393)
                kwargs_7164 = {}
                # Getting the type of 'stypy_functions_copy' (line 393)
                stypy_functions_copy_7159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 393)
                create_src_comment_7160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 20), stypy_functions_copy_7159, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 393)
                create_src_comment_call_result_7165 = invoke(stypy.reporting.localization.Localization(__file__, 393, 20), create_src_comment_7160, *[str_7161, lineno_7163], **kwargs_7164)
                
                # Processing the call keyword arguments (line 392)
                kwargs_7166 = {}
                # Getting the type of 'idiom_more_types_body_2' (line 392)
                idiom_more_types_body_2_7157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'idiom_more_types_body_2', False)
                # Obtaining the member 'append' of a type (line 392)
                append_7158 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), idiom_more_types_body_2_7157, 'append')
                # Calling append(args, kwargs) (line 392)
                append_call_result_7167 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_7158, *[create_src_comment_call_result_7165], **kwargs_7166)
                
                
                # Assigning a Call to a Tuple (line 394):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 394)
                # Processing the call keyword arguments (line 394)
                kwargs_7170 = {}
                # Getting the type of 'stypy_functions_copy' (line 394)
                stypy_functions_copy_7168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 394)
                create_clone_type_store_7169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 394, 47), stypy_functions_copy_7168, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 394)
                create_clone_type_store_call_result_7171 = invoke(stypy.reporting.localization.Localization(__file__, 394, 47), create_clone_type_store_7169, *[], **kwargs_7170)
                
                # Assigning a type to the variable 'call_assignment_5716' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_5716', create_clone_type_store_call_result_7171)
                
                # Assigning a Call to a Name (line 394):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5716' (line 394)
                call_assignment_5716_7172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_5716', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7173 = stypy_get_value_from_tuple(call_assignment_5716_7172, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5717' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_5717', stypy_get_value_from_tuple_call_result_7173)
                
                # Assigning a Name to a Name (line 394):
                # Getting the type of 'call_assignment_5717' (line 394)
                call_assignment_5717_7174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_5717')
                # Assigning a type to the variable 'clone_stmt2' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'clone_stmt2', call_assignment_5717_7174)
                
                # Assigning a Call to a Name (line 394):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5716' (line 394)
                call_assignment_5716_7175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_5716', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7176 = stypy_get_value_from_tuple(call_assignment_5716_7175, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5718' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_5718', stypy_get_value_from_tuple_call_result_7176)
                
                # Assigning a Name to a Name (line 394):
                # Getting the type of 'call_assignment_5718' (line 394)
                call_assignment_5718_7177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_5718')
                # Assigning a type to the variable 'type_store_var2' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 29), 'type_store_var2', call_assignment_5718_7177)
                
                # Call to append(...): (line 395)
                # Processing the call arguments (line 395)
                # Getting the type of 'clone_stmt2' (line 395)
                clone_stmt2_7180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 47), 'clone_stmt2', False)
                # Processing the call keyword arguments (line 395)
                kwargs_7181 = {}
                # Getting the type of 'idiom_more_types_body_2' (line 395)
                idiom_more_types_body_2_7178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'idiom_more_types_body_2', False)
                # Obtaining the member 'append' of a type (line 395)
                append_7179 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 16), idiom_more_types_body_2_7178, 'append')
                # Calling append(args, kwargs) (line 395)
                append_call_result_7182 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), append_7179, *[clone_stmt2_7180], **kwargs_7181)
                
                
                # Call to append(...): (line 396)
                # Processing the call arguments (line 396)
                # Getting the type of 'if_more_types_2' (line 396)
                if_more_types_2_7185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 43), 'if_more_types_2', False)
                # Processing the call keyword arguments (line 396)
                kwargs_7186 = {}
                # Getting the type of 'body_stmts_location' (line 396)
                body_stmts_location_7183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 396)
                append_7184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 396, 16), body_stmts_location_7183, 'append')
                # Calling append(args, kwargs) (line 396)
                append_call_result_7187 = invoke(stypy.reporting.localization.Localization(__file__, 396, 16), append_7184, *[if_more_types_2_7185], **kwargs_7186)
                
                
                # Assigning a Name to a Name (line 397):
                
                # Assigning a Name to a Name (line 397):
                # Getting the type of 'if_stmt_body' (line 397)
                if_stmt_body_7188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 38), 'if_stmt_body')
                # Assigning a type to the variable 'body_stmts_location' (line 397)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 16), 'body_stmts_location', if_stmt_body_7188)
                
                # Assigning a List to a Name (line 401):
                
                # Assigning a List to a Name (line 401):
                
                # Obtaining an instance of the builtin type 'list' (line 401)
                list_7189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 43), 'list')
                # Adding type elements to the builtin type 'list' instance (line 401)
                
                # Assigning a type to the variable 'idiom_first_if_body_else' (line 401)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 16), 'idiom_first_if_body_else', list_7189)
                
                # Assigning a Call to a Name (line 403):
                
                # Assigning a Call to a Name (line 403):
                
                # Call to BoolOp(...): (line 403)
                # Processing the call keyword arguments (line 403)
                kwargs_7192 = {}
                # Getting the type of 'ast' (line 403)
                ast_7190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 26), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 403)
                BoolOp_7191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 26), ast_7190, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 403)
                BoolOp_call_result_7193 = invoke(stypy.reporting.localization.Localization(__file__, 403, 26), BoolOp_7191, *[], **kwargs_7192)
                
                # Assigning a type to the variable 'or_cond' (line 403)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 16), 'or_cond', BoolOp_call_result_7193)
                
                # Assigning a Call to a Attribute (line 404):
                
                # Assigning a Call to a Attribute (line 404):
                
                # Call to Or(...): (line 404)
                # Processing the call keyword arguments (line 404)
                kwargs_7196 = {}
                # Getting the type of 'ast' (line 404)
                ast_7194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 29), 'ast', False)
                # Obtaining the member 'Or' of a type (line 404)
                Or_7195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 29), ast_7194, 'Or')
                # Calling Or(args, kwargs) (line 404)
                Or_call_result_7197 = invoke(stypy.reporting.localization.Localization(__file__, 404, 29), Or_7195, *[], **kwargs_7196)
                
                # Getting the type of 'or_cond' (line 404)
                or_cond_7198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 16), 'or_cond')
                # Setting the type of the member 'op' of a type (line 404)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 16), or_cond_7198, 'op', Or_call_result_7197)
                
                # Assigning a Call to a Name (line 405):
                
                # Assigning a Call to a Name (line 405):
                
                # Call to UnaryOp(...): (line 405)
                # Processing the call keyword arguments (line 405)
                kwargs_7201 = {}
                # Getting the type of 'ast' (line 405)
                ast_7199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 27), 'ast', False)
                # Obtaining the member 'UnaryOp' of a type (line 405)
                UnaryOp_7200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 27), ast_7199, 'UnaryOp')
                # Calling UnaryOp(args, kwargs) (line 405)
                UnaryOp_call_result_7202 = invoke(stypy.reporting.localization.Localization(__file__, 405, 27), UnaryOp_7200, *[], **kwargs_7201)
                
                # Assigning a type to the variable 'not_cond' (line 405)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 405, 16), 'not_cond', UnaryOp_call_result_7202)
                
                # Assigning a Call to a Attribute (line 406):
                
                # Assigning a Call to a Attribute (line 406):
                
                # Call to Not(...): (line 406)
                # Processing the call keyword arguments (line 406)
                kwargs_7205 = {}
                # Getting the type of 'ast' (line 406)
                ast_7203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 30), 'ast', False)
                # Obtaining the member 'Not' of a type (line 406)
                Not_7204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 30), ast_7203, 'Not')
                # Calling Not(args, kwargs) (line 406)
                Not_call_result_7206 = invoke(stypy.reporting.localization.Localization(__file__, 406, 30), Not_7204, *[], **kwargs_7205)
                
                # Getting the type of 'not_cond' (line 406)
                not_cond_7207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 16), 'not_cond')
                # Setting the type of the member 'op' of a type (line 406)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 16), not_cond_7207, 'op', Not_call_result_7206)
                
                # Assigning a Name to a Attribute (line 407):
                
                # Assigning a Name to a Attribute (line 407):
                # Getting the type of 'may_be_type_temp_var' (line 407)
                may_be_type_temp_var_7208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 35), 'may_be_type_temp_var')
                # Getting the type of 'not_cond' (line 407)
                not_cond_7209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 16), 'not_cond')
                # Setting the type of the member 'operand' of a type (line 407)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 16), not_cond_7209, 'operand', may_be_type_temp_var_7208)
                
                # Assigning a List to a Attribute (line 408):
                
                # Assigning a List to a Attribute (line 408):
                
                # Obtaining an instance of the builtin type 'list' (line 408)
                list_7210 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 33), 'list')
                # Adding type elements to the builtin type 'list' instance (line 408)
                # Adding element type (line 408)
                # Getting the type of 'not_cond' (line 408)
                not_cond_7211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 34), 'not_cond')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 33), list_7210, not_cond_7211)
                # Adding element type (line 408)
                # Getting the type of 'more_types_temp_var' (line 408)
                more_types_temp_var_7212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 44), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 33), list_7210, more_types_temp_var_7212)
                
                # Getting the type of 'or_cond' (line 408)
                or_cond_7213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 16), 'or_cond')
                # Setting the type of the member 'values' of a type (line 408)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 16), or_cond_7213, 'values', list_7210)
                
                # Assigning a Call to a Name (line 410):
                
                # Assigning a Call to a Name (line 410):
                
                # Call to create_if(...): (line 410)
                # Processing the call arguments (line 410)
                # Getting the type of 'or_cond' (line 410)
                or_cond_7216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 66), 'or_cond', False)
                # Getting the type of 'idiom_first_if_body_else' (line 410)
                idiom_first_if_body_else_7217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 75), 'idiom_first_if_body_else', False)
                # Processing the call keyword arguments (line 410)
                kwargs_7218 = {}
                # Getting the type of 'conditional_statements_copy' (line 410)
                conditional_statements_copy_7214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 28), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 410)
                create_if_7215 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 28), conditional_statements_copy_7214, 'create_if')
                # Calling create_if(args, kwargs) (line 410)
                create_if_call_result_7219 = invoke(stypy.reporting.localization.Localization(__file__, 410, 28), create_if_7215, *[or_cond_7216, idiom_first_if_body_else_7217], **kwargs_7218)
                
                # Assigning a type to the variable 'if_may_be' (line 410)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 16), 'if_may_be', create_if_call_result_7219)
                
                # Call to append(...): (line 411)
                # Processing the call arguments (line 411)
                # Getting the type of 'if_may_be' (line 411)
                if_may_be_7222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 43), 'if_may_be', False)
                # Processing the call keyword arguments (line 411)
                kwargs_7223 = {}
                # Getting the type of 'body_stmts_location' (line 411)
                body_stmts_location_7220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 411)
                append_7221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 16), body_stmts_location_7220, 'append')
                # Calling append(args, kwargs) (line 411)
                append_call_result_7224 = invoke(stypy.reporting.localization.Localization(__file__, 411, 16), append_7221, *[if_may_be_7222], **kwargs_7223)
                
                
                # Assigning a List to a Name (line 414):
                
                # Assigning a List to a Name (line 414):
                
                # Obtaining an instance of the builtin type 'list' (line 414)
                list_7225 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 45), 'list')
                # Adding type elements to the builtin type 'list' instance (line 414)
                
                # Assigning a type to the variable 'idiom_more_types_body_else' (line 414)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 414, 16), 'idiom_more_types_body_else', list_7225)
                
                # Assigning a Call to a Name (line 416):
                
                # Assigning a Call to a Name (line 416):
                
                # Call to BoolOp(...): (line 416)
                # Processing the call keyword arguments (line 416)
                kwargs_7228 = {}
                # Getting the type of 'ast' (line 416)
                ast_7226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 27), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 416)
                BoolOp_7227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 27), ast_7226, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 416)
                BoolOp_call_result_7229 = invoke(stypy.reporting.localization.Localization(__file__, 416, 27), BoolOp_7227, *[], **kwargs_7228)
                
                # Assigning a type to the variable 'and_cond' (line 416)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 16), 'and_cond', BoolOp_call_result_7229)
                
                # Assigning a Call to a Attribute (line 417):
                
                # Assigning a Call to a Attribute (line 417):
                
                # Call to And(...): (line 417)
                # Processing the call keyword arguments (line 417)
                kwargs_7232 = {}
                # Getting the type of 'ast' (line 417)
                ast_7230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 30), 'ast', False)
                # Obtaining the member 'And' of a type (line 417)
                And_7231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 30), ast_7230, 'And')
                # Calling And(args, kwargs) (line 417)
                And_call_result_7233 = invoke(stypy.reporting.localization.Localization(__file__, 417, 30), And_7231, *[], **kwargs_7232)
                
                # Getting the type of 'and_cond' (line 417)
                and_cond_7234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 16), 'and_cond')
                # Setting the type of the member 'op' of a type (line 417)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 16), and_cond_7234, 'op', And_call_result_7233)
                
                # Assigning a List to a Attribute (line 418):
                
                # Assigning a List to a Attribute (line 418):
                
                # Obtaining an instance of the builtin type 'list' (line 418)
                list_7235 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 34), 'list')
                # Adding type elements to the builtin type 'list' instance (line 418)
                # Adding element type (line 418)
                # Getting the type of 'may_be_type_temp_var' (line 418)
                may_be_type_temp_var_7236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 35), 'may_be_type_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 34), list_7235, may_be_type_temp_var_7236)
                # Adding element type (line 418)
                # Getting the type of 'more_types_temp_var' (line 418)
                more_types_temp_var_7237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 57), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 34), list_7235, more_types_temp_var_7237)
                
                # Getting the type of 'and_cond' (line 418)
                and_cond_7238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 16), 'and_cond')
                # Setting the type of the member 'values' of a type (line 418)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 16), and_cond_7238, 'values', list_7235)
                
                # Assigning a Call to a Name (line 420):
                
                # Assigning a Call to a Name (line 420):
                
                # Call to create_if(...): (line 420)
                # Processing the call arguments (line 420)
                # Getting the type of 'and_cond' (line 420)
                and_cond_7241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 70), 'and_cond', False)
                # Getting the type of 'idiom_more_types_body_else' (line 420)
                idiom_more_types_body_else_7242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 80), 'idiom_more_types_body_else', False)
                # Processing the call keyword arguments (line 420)
                kwargs_7243 = {}
                # Getting the type of 'conditional_statements_copy' (line 420)
                conditional_statements_copy_7239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 32), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 420)
                create_if_7240 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 32), conditional_statements_copy_7239, 'create_if')
                # Calling create_if(args, kwargs) (line 420)
                create_if_call_result_7244 = invoke(stypy.reporting.localization.Localization(__file__, 420, 32), create_if_7240, *[and_cond_7241, idiom_more_types_body_else_7242], **kwargs_7243)
                
                # Assigning a type to the variable 'if_more_types' (line 420)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 16), 'if_more_types', create_if_call_result_7244)
                
                # Call to append(...): (line 422)
                # Processing the call arguments (line 422)
                
                # Call to create_src_comment(...): (line 423)
                # Processing the call arguments (line 423)
                str_7249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 60), 'str', 'Runtime conditional SSA')
                # Getting the type of 'node' (line 423)
                node_7250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 87), 'node', False)
                # Obtaining the member 'lineno' of a type (line 423)
                lineno_7251 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 87), node_7250, 'lineno')
                # Processing the call keyword arguments (line 423)
                kwargs_7252 = {}
                # Getting the type of 'stypy_functions_copy' (line 423)
                stypy_functions_copy_7247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 423)
                create_src_comment_7248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 20), stypy_functions_copy_7247, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 423)
                create_src_comment_call_result_7253 = invoke(stypy.reporting.localization.Localization(__file__, 423, 20), create_src_comment_7248, *[str_7249, lineno_7251], **kwargs_7252)
                
                # Processing the call keyword arguments (line 422)
                kwargs_7254 = {}
                # Getting the type of 'idiom_more_types_body_else' (line 422)
                idiom_more_types_body_else_7245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 16), 'idiom_more_types_body_else', False)
                # Obtaining the member 'append' of a type (line 422)
                append_7246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 16), idiom_more_types_body_else_7245, 'append')
                # Calling append(args, kwargs) (line 422)
                append_call_result_7255 = invoke(stypy.reporting.localization.Localization(__file__, 422, 16), append_7246, *[create_src_comment_call_result_7253], **kwargs_7254)
                
                
                # Assigning a Call to a Name (line 424):
                
                # Assigning a Call to a Name (line 424):
                
                # Call to create_set_type_store(...): (line 424)
                # Processing the call arguments (line 424)
                # Getting the type of 'type_store_var1' (line 424)
                type_store_var1_7258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 77), 'type_store_var1', False)
                # Processing the call keyword arguments (line 424)
                kwargs_7259 = {}
                # Getting the type of 'stypy_functions_copy' (line 424)
                stypy_functions_copy_7256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 34), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_store' of a type (line 424)
                create_set_type_store_7257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 34), stypy_functions_copy_7256, 'create_set_type_store')
                # Calling create_set_type_store(args, kwargs) (line 424)
                create_set_type_store_call_result_7260 = invoke(stypy.reporting.localization.Localization(__file__, 424, 34), create_set_type_store_7257, *[type_store_var1_7258], **kwargs_7259)
                
                # Assigning a type to the variable 'set_type_store1' (line 424)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 16), 'set_type_store1', create_set_type_store_call_result_7260)
                
                # Call to append(...): (line 425)
                # Processing the call arguments (line 425)
                # Getting the type of 'set_type_store1' (line 425)
                set_type_store1_7263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 50), 'set_type_store1', False)
                # Processing the call keyword arguments (line 425)
                kwargs_7264 = {}
                # Getting the type of 'idiom_more_types_body_else' (line 425)
                idiom_more_types_body_else_7261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 16), 'idiom_more_types_body_else', False)
                # Obtaining the member 'append' of a type (line 425)
                append_7262 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 16), idiom_more_types_body_else_7261, 'append')
                # Calling append(args, kwargs) (line 425)
                append_call_result_7265 = invoke(stypy.reporting.localization.Localization(__file__, 425, 16), append_7262, *[set_type_store1_7263], **kwargs_7264)
                
                
                # Call to append(...): (line 427)
                # Processing the call arguments (line 427)
                # Getting the type of 'if_more_types' (line 427)
                if_more_types_7268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 48), 'if_more_types', False)
                # Processing the call keyword arguments (line 427)
                kwargs_7269 = {}
                # Getting the type of 'idiom_first_if_body_else' (line 427)
                idiom_first_if_body_else_7266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 16), 'idiom_first_if_body_else', False)
                # Obtaining the member 'append' of a type (line 427)
                append_7267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 16), idiom_first_if_body_else_7266, 'append')
                # Calling append(args, kwargs) (line 427)
                append_call_result_7270 = invoke(stypy.reporting.localization.Localization(__file__, 427, 16), append_7267, *[if_more_types_7268], **kwargs_7269)
                
                
                # Assigning a Call to a Name (line 430):
                
                # Assigning a Call to a Name (line 430):
                
                # Call to set_type_of_idiom_var(...): (line 430)
                # Processing the call arguments (line 430)
                # Getting the type of 'idiom_name' (line 430)
                idiom_name_7273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 61), 'idiom_name', False)
                str_7274 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 73), 'str', 'else')
                # Getting the type of 'node' (line 430)
                node_7275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 81), 'node', False)
                # Obtaining the member 'test' of a type (line 430)
                test_7276 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 81), node_7275, 'test')
                
                # Obtaining the type of the subscript
                int_7277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 110), 'int')
                # Getting the type of 'rigth_stmts_tuple' (line 430)
                rigth_stmts_tuple_7278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 92), 'rigth_stmts_tuple', False)
                # Obtaining the member '__getitem__' of a type (line 430)
                getitem___7279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 92), rigth_stmts_tuple_7278, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 430)
                subscript_call_result_7280 = invoke(stypy.reporting.localization.Localization(__file__, 430, 92), getitem___7279, int_7277)
                
                # Getting the type of 'node' (line 431)
                node_7281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 56), 'node', False)
                # Obtaining the member 'lineno' of a type (line 431)
                lineno_7282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 56), node_7281, 'lineno')
                # Getting the type of 'node' (line 432)
                node_7283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 56), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 432)
                col_offset_7284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 56), node_7283, 'col_offset')
                # Processing the call keyword arguments (line 430)
                kwargs_7285 = {}
                # Getting the type of 'idioms_copy' (line 430)
                idioms_copy_7271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 27), 'idioms_copy', False)
                # Obtaining the member 'set_type_of_idiom_var' of a type (line 430)
                set_type_of_idiom_var_7272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 27), idioms_copy_7271, 'set_type_of_idiom_var')
                # Calling set_type_of_idiom_var(args, kwargs) (line 430)
                set_type_of_idiom_var_call_result_7286 = invoke(stypy.reporting.localization.Localization(__file__, 430, 27), set_type_of_idiom_var_7272, *[idiom_name_7273, str_7274, test_7276, subscript_call_result_7280, lineno_7282, col_offset_7284], **kwargs_7285)
                
                # Assigning a type to the variable 'set_type' (line 430)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 16), 'set_type', set_type_of_idiom_var_call_result_7286)
                
                # Call to append(...): (line 434)
                # Processing the call arguments (line 434)
                # Getting the type of 'set_type' (line 434)
                set_type_7289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 48), 'set_type', False)
                # Processing the call keyword arguments (line 434)
                kwargs_7290 = {}
                # Getting the type of 'idiom_first_if_body_else' (line 434)
                idiom_first_if_body_else_7287 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 16), 'idiom_first_if_body_else', False)
                # Obtaining the member 'append' of a type (line 434)
                append_7288 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 16), idiom_first_if_body_else_7287, 'append')
                # Calling append(args, kwargs) (line 434)
                append_call_result_7291 = invoke(stypy.reporting.localization.Localization(__file__, 434, 16), append_7288, *[set_type_7289], **kwargs_7290)
                
                
                # Assigning a Name to a Name (line 435):
                
                # Assigning a Name to a Name (line 435):
                # Getting the type of 'idiom_first_if_body_else' (line 435)
                idiom_first_if_body_else_7292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 38), 'idiom_first_if_body_else')
                # Assigning a type to the variable 'body_stmts_location' (line 435)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 16), 'body_stmts_location', idiom_first_if_body_else_7292)
                # SSA branch for the else part of an if statement (line 388)
                module_type_store.open_ssa_branch('else')
                
                # Call to append(...): (line 437)
                # Processing the call arguments (line 437)
                
                # Call to create_src_comment(...): (line 438)
                # Processing the call arguments (line 438)
                str_7297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 60), 'str', 'SSA branch for the else part of an if statement')
                # Getting the type of 'node' (line 438)
                node_7298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 111), 'node', False)
                # Obtaining the member 'lineno' of a type (line 438)
                lineno_7299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 111), node_7298, 'lineno')
                # Processing the call keyword arguments (line 438)
                kwargs_7300 = {}
                # Getting the type of 'stypy_functions_copy' (line 438)
                stypy_functions_copy_7295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 438)
                create_src_comment_7296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 20), stypy_functions_copy_7295, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 438)
                create_src_comment_call_result_7301 = invoke(stypy.reporting.localization.Localization(__file__, 438, 20), create_src_comment_7296, *[str_7297, lineno_7299], **kwargs_7300)
                
                # Processing the call keyword arguments (line 437)
                kwargs_7302 = {}
                # Getting the type of 'if_stmt_body' (line 437)
                if_stmt_body_7293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 437)
                append_7294 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 16), if_stmt_body_7293, 'append')
                # Calling append(args, kwargs) (line 437)
                append_call_result_7303 = invoke(stypy.reporting.localization.Localization(__file__, 437, 16), append_7294, *[create_src_comment_call_result_7301], **kwargs_7302)
                
                
                # Assigning a Call to a Tuple (line 439):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 439)
                # Processing the call keyword arguments (line 439)
                kwargs_7306 = {}
                # Getting the type of 'stypy_functions_copy' (line 439)
                stypy_functions_copy_7304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 439)
                create_clone_type_store_7305 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 47), stypy_functions_copy_7304, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 439)
                create_clone_type_store_call_result_7307 = invoke(stypy.reporting.localization.Localization(__file__, 439, 47), create_clone_type_store_7305, *[], **kwargs_7306)
                
                # Assigning a type to the variable 'call_assignment_5719' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5719', create_clone_type_store_call_result_7307)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5719' (line 439)
                call_assignment_5719_7308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5719', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7309 = stypy_get_value_from_tuple(call_assignment_5719_7308, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5720' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5720', stypy_get_value_from_tuple_call_result_7309)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_5720' (line 439)
                call_assignment_5720_7310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5720')
                # Assigning a type to the variable 'clone_stmt2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'clone_stmt2', call_assignment_5720_7310)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5719' (line 439)
                call_assignment_5719_7311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5719', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7312 = stypy_get_value_from_tuple(call_assignment_5719_7311, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5721' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5721', stypy_get_value_from_tuple_call_result_7312)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_5721' (line 439)
                call_assignment_5721_7313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_5721')
                # Assigning a type to the variable 'type_store_var2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 29), 'type_store_var2', call_assignment_5721_7313)
                
                # Call to append(...): (line 440)
                # Processing the call arguments (line 440)
                # Getting the type of 'clone_stmt2' (line 440)
                clone_stmt2_7316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 36), 'clone_stmt2', False)
                # Processing the call keyword arguments (line 440)
                kwargs_7317 = {}
                # Getting the type of 'if_stmt_body' (line 440)
                if_stmt_body_7314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 440)
                append_7315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 16), if_stmt_body_7314, 'append')
                # Calling append(args, kwargs) (line 440)
                append_call_result_7318 = invoke(stypy.reporting.localization.Localization(__file__, 440, 16), append_7315, *[clone_stmt2_7316], **kwargs_7317)
                
                
                # Assigning a Call to a Name (line 442):
                
                # Assigning a Call to a Name (line 442):
                
                # Call to create_set_type_store(...): (line 442)
                # Processing the call arguments (line 442)
                # Getting the type of 'type_store_var1' (line 442)
                type_store_var1_7321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 77), 'type_store_var1', False)
                # Processing the call keyword arguments (line 442)
                kwargs_7322 = {}
                # Getting the type of 'stypy_functions_copy' (line 442)
                stypy_functions_copy_7319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 34), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_store' of a type (line 442)
                create_set_type_store_7320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 34), stypy_functions_copy_7319, 'create_set_type_store')
                # Calling create_set_type_store(args, kwargs) (line 442)
                create_set_type_store_call_result_7323 = invoke(stypy.reporting.localization.Localization(__file__, 442, 34), create_set_type_store_7320, *[type_store_var1_7321], **kwargs_7322)
                
                # Assigning a type to the variable 'set_type_store1' (line 442)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'set_type_store1', create_set_type_store_call_result_7323)
                
                # Call to append(...): (line 443)
                # Processing the call arguments (line 443)
                # Getting the type of 'set_type_store1' (line 443)
                set_type_store1_7326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 36), 'set_type_store1', False)
                # Processing the call keyword arguments (line 443)
                kwargs_7327 = {}
                # Getting the type of 'if_stmt_body' (line 443)
                if_stmt_body_7324 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 443)
                append_7325 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 16), if_stmt_body_7324, 'append')
                # Calling append(args, kwargs) (line 443)
                append_call_result_7328 = invoke(stypy.reporting.localization.Localization(__file__, 443, 16), append_7325, *[set_type_store1_7326], **kwargs_7327)
                
                
                # Assigning a Name to a Name (line 444):
                
                # Assigning a Name to a Name (line 444):
                # Getting the type of 'if_stmt_body' (line 444)
                if_stmt_body_7329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 38), 'if_stmt_body')
                # Assigning a type to the variable 'body_stmts_location' (line 444)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'body_stmts_location', if_stmt_body_7329)
                # SSA join for if statement (line 388)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to extend(...): (line 447)
            # Processing the call arguments (line 447)
            
            # Call to __visit_instruction_body(...): (line 447)
            # Processing the call arguments (line 447)
            # Getting the type of 'node' (line 447)
            node_7334 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 69), 'node', False)
            # Obtaining the member 'orelse' of a type (line 447)
            orelse_7335 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 69), node_7334, 'orelse')
            # Getting the type of 'context' (line 447)
            context_7336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 82), 'context', False)
            # Processing the call keyword arguments (line 447)
            kwargs_7337 = {}
            # Getting the type of 'self' (line 447)
            self_7332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 39), 'self', False)
            # Obtaining the member '__visit_instruction_body' of a type (line 447)
            visit_instruction_body_7333 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 39), self_7332, '__visit_instruction_body')
            # Calling __visit_instruction_body(args, kwargs) (line 447)
            visit_instruction_body_call_result_7338 = invoke(stypy.reporting.localization.Localization(__file__, 447, 39), visit_instruction_body_7333, *[orelse_7335, context_7336], **kwargs_7337)
            
            # Processing the call keyword arguments (line 447)
            kwargs_7339 = {}
            # Getting the type of 'body_stmts_location' (line 447)
            body_stmts_location_7330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 12), 'body_stmts_location', False)
            # Obtaining the member 'extend' of a type (line 447)
            extend_7331 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 12), body_stmts_location_7330, 'extend')
            # Calling extend(args, kwargs) (line 447)
            extend_call_result_7340 = invoke(stypy.reporting.localization.Localization(__file__, 447, 12), extend_7331, *[visit_instruction_body_call_result_7338], **kwargs_7339)
            
            # SSA branch for the else part of an if statement (line 387)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 450):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 450)
            # Processing the call keyword arguments (line 450)
            kwargs_7343 = {}
            # Getting the type of 'stypy_functions_copy' (line 450)
            stypy_functions_copy_7341 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 450)
            create_clone_type_store_7342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 43), stypy_functions_copy_7341, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 450)
            create_clone_type_store_call_result_7344 = invoke(stypy.reporting.localization.Localization(__file__, 450, 43), create_clone_type_store_7342, *[], **kwargs_7343)
            
            # Assigning a type to the variable 'call_assignment_5722' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5722', create_clone_type_store_call_result_7344)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5722' (line 450)
            call_assignment_5722_7345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5722', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7346 = stypy_get_value_from_tuple(call_assignment_5722_7345, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5723' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5723', stypy_get_value_from_tuple_call_result_7346)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_5723' (line 450)
            call_assignment_5723_7347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5723')
            # Assigning a type to the variable 'clone_stmt2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'clone_stmt2', call_assignment_5723_7347)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5722' (line 450)
            call_assignment_5722_7348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5722', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_7349 = stypy_get_value_from_tuple(call_assignment_5722_7348, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5724' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5724', stypy_get_value_from_tuple_call_result_7349)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_5724' (line 450)
            call_assignment_5724_7350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_5724')
            # Assigning a type to the variable 'type_store_var2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 25), 'type_store_var2', call_assignment_5724_7350)
            
            # Call to append(...): (line 451)
            # Processing the call arguments (line 451)
            # Getting the type of 'clone_stmt2' (line 451)
            clone_stmt2_7353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 39), 'clone_stmt2', False)
            # Processing the call keyword arguments (line 451)
            kwargs_7354 = {}
            # Getting the type of 'body_stmts_location' (line 451)
            body_stmts_location_7351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 12), 'body_stmts_location', False)
            # Obtaining the member 'append' of a type (line 451)
            append_7352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 12), body_stmts_location_7351, 'append')
            # Calling append(args, kwargs) (line 451)
            append_call_result_7355 = invoke(stypy.reporting.localization.Localization(__file__, 451, 12), append_7352, *[clone_stmt2_7353], **kwargs_7354)
            
            
            # Assigning a Call to a Name (line 455):
            
            # Assigning a Call to a Name (line 455):
            
            # Call to create_Name(...): (line 455)
            # Processing the call arguments (line 455)
            str_7358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 61), 'str', 'None')
            # Processing the call keyword arguments (line 455)
            kwargs_7359 = {}
            # Getting the type of 'core_language_copy' (line 455)
            core_language_copy_7356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 30), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 455)
            create_Name_7357 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 30), core_language_copy_7356, 'create_Name')
            # Calling create_Name(args, kwargs) (line 455)
            create_Name_call_result_7360 = invoke(stypy.reporting.localization.Localization(__file__, 455, 30), create_Name_7357, *[str_7358], **kwargs_7359)
            
            # Assigning a type to the variable 'type_store_var3' (line 455)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 12), 'type_store_var3', create_Name_call_result_7360)
            # SSA join for if statement (line 387)
            module_type_store = module_type_store.join_ssa_context()
            

        # Getting the type of 'is_an_idiom' (line 457)
        is_an_idiom_7361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 11), 'is_an_idiom')
        # Testing if the type of an if condition is none (line 457)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 457, 8), is_an_idiom_7361):
            
            
            # Call to len(...): (line 477)
            # Processing the call arguments (line 477)
            # Getting the type of 'node' (line 477)
            node_7426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 19), 'node', False)
            # Obtaining the member 'orelse' of a type (line 477)
            orelse_7427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 19), node_7426, 'orelse')
            # Processing the call keyword arguments (line 477)
            kwargs_7428 = {}
            # Getting the type of 'len' (line 477)
            len_7425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 15), 'len', False)
            # Calling len(args, kwargs) (line 477)
            len_call_result_7429 = invoke(stypy.reporting.localization.Localization(__file__, 477, 15), len_7425, *[orelse_7427], **kwargs_7428)
            
            int_7430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 34), 'int')
            # Applying the binary operator '>' (line 477)
            result_gt_7431 = python_operator(stypy.reporting.localization.Localization(__file__, 477, 15), '>', len_call_result_7429, int_7430)
            
            # Testing if the type of an if condition is none (line 477)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_7431):
                pass
            else:
                
                # Testing the type of an if condition (line 477)
                if_condition_7432 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_7431)
                # Assigning a type to the variable 'if_condition_7432' (line 477)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 12), 'if_condition_7432', if_condition_7432)
                # SSA begins for if statement (line 477)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 478):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 478)
                # Processing the call keyword arguments (line 478)
                kwargs_7435 = {}
                # Getting the type of 'stypy_functions_copy' (line 478)
                stypy_functions_copy_7433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 478)
                create_clone_type_store_7434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 47), stypy_functions_copy_7433, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 478)
                create_clone_type_store_call_result_7436 = invoke(stypy.reporting.localization.Localization(__file__, 478, 47), create_clone_type_store_7434, *[], **kwargs_7435)
                
                # Assigning a type to the variable 'call_assignment_5728' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5728', create_clone_type_store_call_result_7436)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5728' (line 478)
                call_assignment_5728_7437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5728', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7438 = stypy_get_value_from_tuple(call_assignment_5728_7437, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5729' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5729', stypy_get_value_from_tuple_call_result_7438)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_5729' (line 478)
                call_assignment_5729_7439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5729')
                # Assigning a type to the variable 'clone_stmt3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'clone_stmt3', call_assignment_5729_7439)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5728' (line 478)
                call_assignment_5728_7440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5728', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7441 = stypy_get_value_from_tuple(call_assignment_5728_7440, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5730' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5730', stypy_get_value_from_tuple_call_result_7441)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_5730' (line 478)
                call_assignment_5730_7442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5730')
                # Assigning a type to the variable 'type_store_var3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 29), 'type_store_var3', call_assignment_5730_7442)
                
                # Call to append(...): (line 479)
                # Processing the call arguments (line 479)
                # Getting the type of 'clone_stmt3' (line 479)
                clone_stmt3_7445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 36), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 479)
                kwargs_7446 = {}
                # Getting the type of 'if_stmt_body' (line 479)
                if_stmt_body_7443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 479)
                append_7444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 16), if_stmt_body_7443, 'append')
                # Calling append(args, kwargs) (line 479)
                append_call_result_7447 = invoke(stypy.reporting.localization.Localization(__file__, 479, 16), append_7444, *[clone_stmt3_7445], **kwargs_7446)
                
                # SSA join for if statement (line 477)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Name (line 480):
            
            # Assigning a Name to a Name (line 480):
            # Getting the type of 'if_stmt_body' (line 480)
            if_stmt_body_7448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 26), 'if_stmt_body')
            # Assigning a type to the variable 'final_stmts' (line 480)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'final_stmts', if_stmt_body_7448)
        else:
            
            # Testing the type of an if condition (line 457)
            if_condition_7362 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 457, 8), is_an_idiom_7361)
            # Assigning a type to the variable 'if_condition_7362' (line 457)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 8), 'if_condition_7362', if_condition_7362)
            # SSA begins for if statement (line 457)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # Call to len(...): (line 458)
            # Processing the call arguments (line 458)
            # Getting the type of 'node' (line 458)
            node_7364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 19), 'node', False)
            # Obtaining the member 'orelse' of a type (line 458)
            orelse_7365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 19), node_7364, 'orelse')
            # Processing the call keyword arguments (line 458)
            kwargs_7366 = {}
            # Getting the type of 'len' (line 458)
            len_7363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 15), 'len', False)
            # Calling len(args, kwargs) (line 458)
            len_call_result_7367 = invoke(stypy.reporting.localization.Localization(__file__, 458, 15), len_7363, *[orelse_7365], **kwargs_7366)
            
            int_7368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 35), 'int')
            # Applying the binary operator '==' (line 458)
            result_eq_7369 = python_operator(stypy.reporting.localization.Localization(__file__, 458, 15), '==', len_call_result_7367, int_7368)
            
            # Testing if the type of an if condition is none (line 458)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 458, 12), result_eq_7369):
                
                # Assigning a List to a Name (line 464):
                
                # Assigning a List to a Name (line 464):
                
                # Obtaining an instance of the builtin type 'list' (line 464)
                list_7384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 46), 'list')
                # Adding type elements to the builtin type 'list' instance (line 464)
                
                # Assigning a type to the variable 'idiom_more_types_body_final' (line 464)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 16), 'idiom_more_types_body_final', list_7384)
                
                # Assigning a Call to a Name (line 466):
                
                # Assigning a Call to a Name (line 466):
                
                # Call to BoolOp(...): (line 466)
                # Processing the call keyword arguments (line 466)
                kwargs_7387 = {}
                # Getting the type of 'ast' (line 466)
                ast_7385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 27), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 466)
                BoolOp_7386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 27), ast_7385, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 466)
                BoolOp_call_result_7388 = invoke(stypy.reporting.localization.Localization(__file__, 466, 27), BoolOp_7386, *[], **kwargs_7387)
                
                # Assigning a type to the variable 'and_cond' (line 466)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 16), 'and_cond', BoolOp_call_result_7388)
                
                # Assigning a Call to a Attribute (line 467):
                
                # Assigning a Call to a Attribute (line 467):
                
                # Call to And(...): (line 467)
                # Processing the call keyword arguments (line 467)
                kwargs_7391 = {}
                # Getting the type of 'ast' (line 467)
                ast_7389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 30), 'ast', False)
                # Obtaining the member 'And' of a type (line 467)
                And_7390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 30), ast_7389, 'And')
                # Calling And(args, kwargs) (line 467)
                And_call_result_7392 = invoke(stypy.reporting.localization.Localization(__file__, 467, 30), And_7390, *[], **kwargs_7391)
                
                # Getting the type of 'and_cond' (line 467)
                and_cond_7393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 16), 'and_cond')
                # Setting the type of the member 'op' of a type (line 467)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 16), and_cond_7393, 'op', And_call_result_7392)
                
                # Assigning a List to a Attribute (line 468):
                
                # Assigning a List to a Attribute (line 468):
                
                # Obtaining an instance of the builtin type 'list' (line 468)
                list_7394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 34), 'list')
                # Adding type elements to the builtin type 'list' instance (line 468)
                # Adding element type (line 468)
                # Getting the type of 'may_be_type_temp_var' (line 468)
                may_be_type_temp_var_7395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 35), 'may_be_type_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_7394, may_be_type_temp_var_7395)
                # Adding element type (line 468)
                # Getting the type of 'more_types_temp_var' (line 468)
                more_types_temp_var_7396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 57), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_7394, more_types_temp_var_7396)
                
                # Getting the type of 'and_cond' (line 468)
                and_cond_7397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 16), 'and_cond')
                # Setting the type of the member 'values' of a type (line 468)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 16), and_cond_7397, 'values', list_7394)
                
                # Assigning a Call to a Name (line 470):
                
                # Assigning a Call to a Name (line 470):
                
                # Call to create_if(...): (line 470)
                # Processing the call arguments (line 470)
                # Getting the type of 'and_cond' (line 470)
                and_cond_7400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 76), 'and_cond', False)
                # Getting the type of 'idiom_more_types_body_final' (line 470)
                idiom_more_types_body_final_7401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 86), 'idiom_more_types_body_final', False)
                # Processing the call keyword arguments (line 470)
                kwargs_7402 = {}
                # Getting the type of 'conditional_statements_copy' (line 470)
                conditional_statements_copy_7398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 38), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 470)
                create_if_7399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 38), conditional_statements_copy_7398, 'create_if')
                # Calling create_if(args, kwargs) (line 470)
                create_if_call_result_7403 = invoke(stypy.reporting.localization.Localization(__file__, 470, 38), create_if_7399, *[and_cond_7400, idiom_more_types_body_final_7401], **kwargs_7402)
                
                # Assigning a type to the variable 'if_more_types_final' (line 470)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'if_more_types_final', create_if_call_result_7403)
                
                # Call to append(...): (line 471)
                # Processing the call arguments (line 471)
                # Getting the type of 'if_more_types_final' (line 471)
                if_more_types_final_7406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 43), 'if_more_types_final', False)
                # Processing the call keyword arguments (line 471)
                kwargs_7407 = {}
                # Getting the type of 'body_stmts_location' (line 471)
                body_stmts_location_7404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 471)
                append_7405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 16), body_stmts_location_7404, 'append')
                # Calling append(args, kwargs) (line 471)
                append_call_result_7408 = invoke(stypy.reporting.localization.Localization(__file__, 471, 16), append_7405, *[if_more_types_final_7406], **kwargs_7407)
                
                
                # Assigning a Call to a Tuple (line 472):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 472)
                # Processing the call keyword arguments (line 472)
                kwargs_7411 = {}
                # Getting the type of 'stypy_functions_copy' (line 472)
                stypy_functions_copy_7409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 472)
                create_clone_type_store_7410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 47), stypy_functions_copy_7409, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 472)
                create_clone_type_store_call_result_7412 = invoke(stypy.reporting.localization.Localization(__file__, 472, 47), create_clone_type_store_7410, *[], **kwargs_7411)
                
                # Assigning a type to the variable 'call_assignment_5725' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5725', create_clone_type_store_call_result_7412)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5725' (line 472)
                call_assignment_5725_7413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5725', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7414 = stypy_get_value_from_tuple(call_assignment_5725_7413, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5726' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5726', stypy_get_value_from_tuple_call_result_7414)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_5726' (line 472)
                call_assignment_5726_7415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5726')
                # Assigning a type to the variable 'clone_stmt3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'clone_stmt3', call_assignment_5726_7415)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5725' (line 472)
                call_assignment_5725_7416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5725', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7417 = stypy_get_value_from_tuple(call_assignment_5725_7416, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5727' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5727', stypy_get_value_from_tuple_call_result_7417)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_5727' (line 472)
                call_assignment_5727_7418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5727')
                # Assigning a type to the variable 'type_store_var3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 29), 'type_store_var3', call_assignment_5727_7418)
                
                # Call to append(...): (line 473)
                # Processing the call arguments (line 473)
                # Getting the type of 'clone_stmt3' (line 473)
                clone_stmt3_7421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 51), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 473)
                kwargs_7422 = {}
                # Getting the type of 'idiom_more_types_body_final' (line 473)
                idiom_more_types_body_final_7419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 16), 'idiom_more_types_body_final', False)
                # Obtaining the member 'append' of a type (line 473)
                append_7420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 16), idiom_more_types_body_final_7419, 'append')
                # Calling append(args, kwargs) (line 473)
                append_call_result_7423 = invoke(stypy.reporting.localization.Localization(__file__, 473, 16), append_7420, *[clone_stmt3_7421], **kwargs_7422)
                
                
                # Assigning a Name to a Name (line 475):
                
                # Assigning a Name to a Name (line 475):
                # Getting the type of 'idiom_more_types_body_final' (line 475)
                idiom_more_types_body_final_7424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 30), 'idiom_more_types_body_final')
                # Assigning a type to the variable 'final_stmts' (line 475)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 16), 'final_stmts', idiom_more_types_body_final_7424)
            else:
                
                # Testing the type of an if condition (line 458)
                if_condition_7370 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 458, 12), result_eq_7369)
                # Assigning a type to the variable 'if_condition_7370' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'if_condition_7370', if_condition_7370)
                # SSA begins for if statement (line 458)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a List to a Name (line 459):
                
                # Assigning a List to a Name (line 459):
                
                # Obtaining an instance of the builtin type 'list' (line 459)
                list_7371 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 46), 'list')
                # Adding type elements to the builtin type 'list' instance (line 459)
                
                # Assigning a type to the variable 'idiom_more_types_body_final' (line 459)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 16), 'idiom_more_types_body_final', list_7371)
                
                # Assigning a Call to a Name (line 460):
                
                # Assigning a Call to a Name (line 460):
                
                # Call to create_if(...): (line 460)
                # Processing the call arguments (line 460)
                # Getting the type of 'more_types_temp_var' (line 460)
                more_types_temp_var_7374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 76), 'more_types_temp_var', False)
                # Getting the type of 'idiom_more_types_body_final' (line 460)
                idiom_more_types_body_final_7375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 97), 'idiom_more_types_body_final', False)
                # Processing the call keyword arguments (line 460)
                kwargs_7376 = {}
                # Getting the type of 'conditional_statements_copy' (line 460)
                conditional_statements_copy_7372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 38), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 460)
                create_if_7373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 460, 38), conditional_statements_copy_7372, 'create_if')
                # Calling create_if(args, kwargs) (line 460)
                create_if_call_result_7377 = invoke(stypy.reporting.localization.Localization(__file__, 460, 38), create_if_7373, *[more_types_temp_var_7374, idiom_more_types_body_final_7375], **kwargs_7376)
                
                # Assigning a type to the variable 'if_more_types_final' (line 460)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 16), 'if_more_types_final', create_if_call_result_7377)
                
                # Call to append(...): (line 461)
                # Processing the call arguments (line 461)
                # Getting the type of 'if_more_types_final' (line 461)
                if_more_types_final_7380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 43), 'if_more_types_final', False)
                # Processing the call keyword arguments (line 461)
                kwargs_7381 = {}
                # Getting the type of 'body_stmts_location' (line 461)
                body_stmts_location_7378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 461)
                append_7379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 16), body_stmts_location_7378, 'append')
                # Calling append(args, kwargs) (line 461)
                append_call_result_7382 = invoke(stypy.reporting.localization.Localization(__file__, 461, 16), append_7379, *[if_more_types_final_7380], **kwargs_7381)
                
                
                # Assigning a Name to a Name (line 462):
                
                # Assigning a Name to a Name (line 462):
                # Getting the type of 'idiom_more_types_body_final' (line 462)
                idiom_more_types_body_final_7383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 30), 'idiom_more_types_body_final')
                # Assigning a type to the variable 'final_stmts' (line 462)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 16), 'final_stmts', idiom_more_types_body_final_7383)
                # SSA branch for the else part of an if statement (line 458)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a List to a Name (line 464):
                
                # Assigning a List to a Name (line 464):
                
                # Obtaining an instance of the builtin type 'list' (line 464)
                list_7384 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 46), 'list')
                # Adding type elements to the builtin type 'list' instance (line 464)
                
                # Assigning a type to the variable 'idiom_more_types_body_final' (line 464)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 16), 'idiom_more_types_body_final', list_7384)
                
                # Assigning a Call to a Name (line 466):
                
                # Assigning a Call to a Name (line 466):
                
                # Call to BoolOp(...): (line 466)
                # Processing the call keyword arguments (line 466)
                kwargs_7387 = {}
                # Getting the type of 'ast' (line 466)
                ast_7385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 27), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 466)
                BoolOp_7386 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 27), ast_7385, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 466)
                BoolOp_call_result_7388 = invoke(stypy.reporting.localization.Localization(__file__, 466, 27), BoolOp_7386, *[], **kwargs_7387)
                
                # Assigning a type to the variable 'and_cond' (line 466)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 16), 'and_cond', BoolOp_call_result_7388)
                
                # Assigning a Call to a Attribute (line 467):
                
                # Assigning a Call to a Attribute (line 467):
                
                # Call to And(...): (line 467)
                # Processing the call keyword arguments (line 467)
                kwargs_7391 = {}
                # Getting the type of 'ast' (line 467)
                ast_7389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 30), 'ast', False)
                # Obtaining the member 'And' of a type (line 467)
                And_7390 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 30), ast_7389, 'And')
                # Calling And(args, kwargs) (line 467)
                And_call_result_7392 = invoke(stypy.reporting.localization.Localization(__file__, 467, 30), And_7390, *[], **kwargs_7391)
                
                # Getting the type of 'and_cond' (line 467)
                and_cond_7393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 16), 'and_cond')
                # Setting the type of the member 'op' of a type (line 467)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 16), and_cond_7393, 'op', And_call_result_7392)
                
                # Assigning a List to a Attribute (line 468):
                
                # Assigning a List to a Attribute (line 468):
                
                # Obtaining an instance of the builtin type 'list' (line 468)
                list_7394 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 34), 'list')
                # Adding type elements to the builtin type 'list' instance (line 468)
                # Adding element type (line 468)
                # Getting the type of 'may_be_type_temp_var' (line 468)
                may_be_type_temp_var_7395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 35), 'may_be_type_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_7394, may_be_type_temp_var_7395)
                # Adding element type (line 468)
                # Getting the type of 'more_types_temp_var' (line 468)
                more_types_temp_var_7396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 57), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_7394, more_types_temp_var_7396)
                
                # Getting the type of 'and_cond' (line 468)
                and_cond_7397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 16), 'and_cond')
                # Setting the type of the member 'values' of a type (line 468)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 16), and_cond_7397, 'values', list_7394)
                
                # Assigning a Call to a Name (line 470):
                
                # Assigning a Call to a Name (line 470):
                
                # Call to create_if(...): (line 470)
                # Processing the call arguments (line 470)
                # Getting the type of 'and_cond' (line 470)
                and_cond_7400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 76), 'and_cond', False)
                # Getting the type of 'idiom_more_types_body_final' (line 470)
                idiom_more_types_body_final_7401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 86), 'idiom_more_types_body_final', False)
                # Processing the call keyword arguments (line 470)
                kwargs_7402 = {}
                # Getting the type of 'conditional_statements_copy' (line 470)
                conditional_statements_copy_7398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 38), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 470)
                create_if_7399 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 38), conditional_statements_copy_7398, 'create_if')
                # Calling create_if(args, kwargs) (line 470)
                create_if_call_result_7403 = invoke(stypy.reporting.localization.Localization(__file__, 470, 38), create_if_7399, *[and_cond_7400, idiom_more_types_body_final_7401], **kwargs_7402)
                
                # Assigning a type to the variable 'if_more_types_final' (line 470)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'if_more_types_final', create_if_call_result_7403)
                
                # Call to append(...): (line 471)
                # Processing the call arguments (line 471)
                # Getting the type of 'if_more_types_final' (line 471)
                if_more_types_final_7406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 43), 'if_more_types_final', False)
                # Processing the call keyword arguments (line 471)
                kwargs_7407 = {}
                # Getting the type of 'body_stmts_location' (line 471)
                body_stmts_location_7404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 471)
                append_7405 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 16), body_stmts_location_7404, 'append')
                # Calling append(args, kwargs) (line 471)
                append_call_result_7408 = invoke(stypy.reporting.localization.Localization(__file__, 471, 16), append_7405, *[if_more_types_final_7406], **kwargs_7407)
                
                
                # Assigning a Call to a Tuple (line 472):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 472)
                # Processing the call keyword arguments (line 472)
                kwargs_7411 = {}
                # Getting the type of 'stypy_functions_copy' (line 472)
                stypy_functions_copy_7409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 472)
                create_clone_type_store_7410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 47), stypy_functions_copy_7409, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 472)
                create_clone_type_store_call_result_7412 = invoke(stypy.reporting.localization.Localization(__file__, 472, 47), create_clone_type_store_7410, *[], **kwargs_7411)
                
                # Assigning a type to the variable 'call_assignment_5725' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5725', create_clone_type_store_call_result_7412)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5725' (line 472)
                call_assignment_5725_7413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5725', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7414 = stypy_get_value_from_tuple(call_assignment_5725_7413, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5726' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5726', stypy_get_value_from_tuple_call_result_7414)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_5726' (line 472)
                call_assignment_5726_7415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5726')
                # Assigning a type to the variable 'clone_stmt3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'clone_stmt3', call_assignment_5726_7415)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5725' (line 472)
                call_assignment_5725_7416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5725', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7417 = stypy_get_value_from_tuple(call_assignment_5725_7416, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5727' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5727', stypy_get_value_from_tuple_call_result_7417)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_5727' (line 472)
                call_assignment_5727_7418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_5727')
                # Assigning a type to the variable 'type_store_var3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 29), 'type_store_var3', call_assignment_5727_7418)
                
                # Call to append(...): (line 473)
                # Processing the call arguments (line 473)
                # Getting the type of 'clone_stmt3' (line 473)
                clone_stmt3_7421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 51), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 473)
                kwargs_7422 = {}
                # Getting the type of 'idiom_more_types_body_final' (line 473)
                idiom_more_types_body_final_7419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 16), 'idiom_more_types_body_final', False)
                # Obtaining the member 'append' of a type (line 473)
                append_7420 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 16), idiom_more_types_body_final_7419, 'append')
                # Calling append(args, kwargs) (line 473)
                append_call_result_7423 = invoke(stypy.reporting.localization.Localization(__file__, 473, 16), append_7420, *[clone_stmt3_7421], **kwargs_7422)
                
                
                # Assigning a Name to a Name (line 475):
                
                # Assigning a Name to a Name (line 475):
                # Getting the type of 'idiom_more_types_body_final' (line 475)
                idiom_more_types_body_final_7424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 30), 'idiom_more_types_body_final')
                # Assigning a type to the variable 'final_stmts' (line 475)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 16), 'final_stmts', idiom_more_types_body_final_7424)
                # SSA join for if statement (line 458)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA branch for the else part of an if statement (line 457)
            module_type_store.open_ssa_branch('else')
            
            
            # Call to len(...): (line 477)
            # Processing the call arguments (line 477)
            # Getting the type of 'node' (line 477)
            node_7426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 19), 'node', False)
            # Obtaining the member 'orelse' of a type (line 477)
            orelse_7427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 19), node_7426, 'orelse')
            # Processing the call keyword arguments (line 477)
            kwargs_7428 = {}
            # Getting the type of 'len' (line 477)
            len_7425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 15), 'len', False)
            # Calling len(args, kwargs) (line 477)
            len_call_result_7429 = invoke(stypy.reporting.localization.Localization(__file__, 477, 15), len_7425, *[orelse_7427], **kwargs_7428)
            
            int_7430 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 34), 'int')
            # Applying the binary operator '>' (line 477)
            result_gt_7431 = python_operator(stypy.reporting.localization.Localization(__file__, 477, 15), '>', len_call_result_7429, int_7430)
            
            # Testing if the type of an if condition is none (line 477)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_7431):
                pass
            else:
                
                # Testing the type of an if condition (line 477)
                if_condition_7432 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_7431)
                # Assigning a type to the variable 'if_condition_7432' (line 477)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 12), 'if_condition_7432', if_condition_7432)
                # SSA begins for if statement (line 477)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 478):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 478)
                # Processing the call keyword arguments (line 478)
                kwargs_7435 = {}
                # Getting the type of 'stypy_functions_copy' (line 478)
                stypy_functions_copy_7433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 478)
                create_clone_type_store_7434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 47), stypy_functions_copy_7433, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 478)
                create_clone_type_store_call_result_7436 = invoke(stypy.reporting.localization.Localization(__file__, 478, 47), create_clone_type_store_7434, *[], **kwargs_7435)
                
                # Assigning a type to the variable 'call_assignment_5728' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5728', create_clone_type_store_call_result_7436)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5728' (line 478)
                call_assignment_5728_7437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5728', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7438 = stypy_get_value_from_tuple(call_assignment_5728_7437, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5729' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5729', stypy_get_value_from_tuple_call_result_7438)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_5729' (line 478)
                call_assignment_5729_7439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5729')
                # Assigning a type to the variable 'clone_stmt3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'clone_stmt3', call_assignment_5729_7439)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5728' (line 478)
                call_assignment_5728_7440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5728', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_7441 = stypy_get_value_from_tuple(call_assignment_5728_7440, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5730' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5730', stypy_get_value_from_tuple_call_result_7441)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_5730' (line 478)
                call_assignment_5730_7442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_5730')
                # Assigning a type to the variable 'type_store_var3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 29), 'type_store_var3', call_assignment_5730_7442)
                
                # Call to append(...): (line 479)
                # Processing the call arguments (line 479)
                # Getting the type of 'clone_stmt3' (line 479)
                clone_stmt3_7445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 36), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 479)
                kwargs_7446 = {}
                # Getting the type of 'if_stmt_body' (line 479)
                if_stmt_body_7443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 479)
                append_7444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 16), if_stmt_body_7443, 'append')
                # Calling append(args, kwargs) (line 479)
                append_call_result_7447 = invoke(stypy.reporting.localization.Localization(__file__, 479, 16), append_7444, *[clone_stmt3_7445], **kwargs_7446)
                
                # SSA join for if statement (line 477)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Name (line 480):
            
            # Assigning a Name to a Name (line 480):
            # Getting the type of 'if_stmt_body' (line 480)
            if_stmt_body_7448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 26), 'if_stmt_body')
            # Assigning a type to the variable 'final_stmts' (line 480)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'final_stmts', if_stmt_body_7448)
            # SSA join for if statement (line 457)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 484)
        # Processing the call arguments (line 484)
        
        # Call to create_src_comment(...): (line 484)
        # Processing the call arguments (line 484)
        str_7453 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 484, 67), 'str', 'SSA join for if statement')
        # Getting the type of 'node' (line 484)
        node_7454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 96), 'node', False)
        # Obtaining the member 'lineno' of a type (line 484)
        lineno_7455 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 96), node_7454, 'lineno')
        # Processing the call keyword arguments (line 484)
        kwargs_7456 = {}
        # Getting the type of 'stypy_functions_copy' (line 484)
        stypy_functions_copy_7451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 27), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 484)
        create_src_comment_7452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 27), stypy_functions_copy_7451, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 484)
        create_src_comment_call_result_7457 = invoke(stypy.reporting.localization.Localization(__file__, 484, 27), create_src_comment_7452, *[str_7453, lineno_7455], **kwargs_7456)
        
        # Processing the call keyword arguments (line 484)
        kwargs_7458 = {}
        # Getting the type of 'final_stmts' (line 484)
        final_stmts_7449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 8), 'final_stmts', False)
        # Obtaining the member 'append' of a type (line 484)
        append_7450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 8), final_stmts_7449, 'append')
        # Calling append(args, kwargs) (line 484)
        append_call_result_7459 = invoke(stypy.reporting.localization.Localization(__file__, 484, 8), append_7450, *[create_src_comment_call_result_7457], **kwargs_7458)
        
        
        # Assigning a Call to a Tuple (line 485):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 485)
        # Processing the call arguments (line 485)
        str_7462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 82), 'str', 'ssa_join_with_else_branch')
        
        # Obtaining an instance of the builtin type 'list' (line 486)
        list_7463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 486)
        # Adding element type (line 486)
        # Getting the type of 'type_store_var1' (line 486)
        type_store_var1_7464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 78), 'type_store_var1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 77), list_7463, type_store_var1_7464)
        # Adding element type (line 486)
        # Getting the type of 'type_store_var2' (line 486)
        type_store_var2_7465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 95), 'type_store_var2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 77), list_7463, type_store_var2_7465)
        # Adding element type (line 486)
        # Getting the type of 'type_store_var3' (line 487)
        type_store_var3_7466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 78), 'type_store_var3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 77), list_7463, type_store_var3_7466)
        
        # Processing the call keyword arguments (line 485)
        kwargs_7467 = {}
        # Getting the type of 'stypy_functions_copy' (line 485)
        stypy_functions_copy_7460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 485)
        create_join_type_store_7461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 38), stypy_functions_copy_7460, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 485)
        create_join_type_store_call_result_7468 = invoke(stypy.reporting.localization.Localization(__file__, 485, 38), create_join_type_store_7461, *[str_7462, list_7463], **kwargs_7467)
        
        # Assigning a type to the variable 'call_assignment_5731' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_5731', create_join_type_store_call_result_7468)
        
        # Assigning a Call to a Name (line 485):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5731' (line 485)
        call_assignment_5731_7469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_5731', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7470 = stypy_get_value_from_tuple(call_assignment_5731_7469, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5732' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_5732', stypy_get_value_from_tuple_call_result_7470)
        
        # Assigning a Name to a Name (line 485):
        # Getting the type of 'call_assignment_5732' (line 485)
        call_assignment_5732_7471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_5732')
        # Assigning a type to the variable 'join_stmt' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'join_stmt', call_assignment_5732_7471)
        
        # Assigning a Call to a Name (line 485):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5731' (line 485)
        call_assignment_5731_7472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_5731', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7473 = stypy_get_value_from_tuple(call_assignment_5731_7472, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5733' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_5733', stypy_get_value_from_tuple_call_result_7473)
        
        # Assigning a Name to a Name (line 485):
        # Getting the type of 'call_assignment_5733' (line 485)
        call_assignment_5733_7474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_5733')
        # Assigning a type to the variable 'final_type_store' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 19), 'final_type_store', call_assignment_5733_7474)
        
        # Call to append(...): (line 488)
        # Processing the call arguments (line 488)
        # Getting the type of 'join_stmt' (line 488)
        join_stmt_7477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 27), 'join_stmt', False)
        # Processing the call keyword arguments (line 488)
        kwargs_7478 = {}
        # Getting the type of 'final_stmts' (line 488)
        final_stmts_7475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 'final_stmts', False)
        # Obtaining the member 'append' of a type (line 488)
        append_7476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 8), final_stmts_7475, 'append')
        # Calling append(args, kwargs) (line 488)
        append_call_result_7479 = invoke(stypy.reporting.localization.Localization(__file__, 488, 8), append_7476, *[join_stmt_7477], **kwargs_7478)
        
        
        # Assigning a Call to a Name (line 491):
        
        # Assigning a Call to a Name (line 491):
        
        # Call to create_set_type_store(...): (line 491)
        # Processing the call arguments (line 491)
        # Getting the type of 'final_type_store' (line 491)
        final_type_store_7482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 69), 'final_type_store', False)
        # Processing the call keyword arguments (line 491)
        kwargs_7483 = {}
        # Getting the type of 'stypy_functions_copy' (line 491)
        stypy_functions_copy_7480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 491)
        create_set_type_store_7481 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 26), stypy_functions_copy_7480, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 491)
        create_set_type_store_call_result_7484 = invoke(stypy.reporting.localization.Localization(__file__, 491, 26), create_set_type_store_7481, *[final_type_store_7482], **kwargs_7483)
        
        # Assigning a type to the variable 'set_type_store2' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'set_type_store2', create_set_type_store_call_result_7484)
        
        # Call to append(...): (line 492)
        # Processing the call arguments (line 492)
        # Getting the type of 'set_type_store2' (line 492)
        set_type_store2_7487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 27), 'set_type_store2', False)
        # Processing the call keyword arguments (line 492)
        kwargs_7488 = {}
        # Getting the type of 'final_stmts' (line 492)
        final_stmts_7485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 8), 'final_stmts', False)
        # Obtaining the member 'append' of a type (line 492)
        append_7486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 8), final_stmts_7485, 'append')
        # Calling append(args, kwargs) (line 492)
        append_call_result_7489 = invoke(stypy.reporting.localization.Localization(__file__, 492, 8), append_7486, *[set_type_store2_7487], **kwargs_7488)
        
        
        # Assigning a Name to a Name (line 495):
        
        # Assigning a Name to a Name (line 495):
        # Getting the type of 'if_stmt_body' (line 495)
        if_stmt_body_7490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 23), 'if_stmt_body')
        # Assigning a type to the variable 'all_if_stmts' (line 495)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'all_if_stmts', if_stmt_body_7490)
        
        # Assigning a Call to a Name (line 498):
        
        # Assigning a Call to a Name (line 498):
        
        # Call to flatten_lists(...): (line 498)
        # Processing the call arguments (line 498)
        # Getting the type of 'condition_comment' (line 498)
        condition_comment_7493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 53), 'condition_comment', False)
        # Getting the type of 'test_condition_call' (line 498)
        test_condition_call_7494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 72), 'test_condition_call', False)
        # Getting the type of 'all_if_stmts' (line 498)
        all_if_stmts_7495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 93), 'all_if_stmts', False)
        # Processing the call keyword arguments (line 498)
        kwargs_7496 = {}
        # Getting the type of 'stypy_functions_copy' (line 498)
        stypy_functions_copy_7491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 498)
        flatten_lists_7492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 18), stypy_functions_copy_7491, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 498)
        flatten_lists_call_result_7497 = invoke(stypy.reporting.localization.Localization(__file__, 498, 18), flatten_lists_7492, *[condition_comment_7493, test_condition_call_7494, all_if_stmts_7495], **kwargs_7496)
        
        # Assigning a type to the variable 'if_stmt' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'if_stmt', flatten_lists_call_result_7497)
        
        # Assigning a Call to a Name (line 500):
        
        # Assigning a Call to a Name (line 500):
        
        # Call to create_blank_line(...): (line 500)
        # Processing the call keyword arguments (line 500)
        kwargs_7500 = {}
        # Getting the type of 'stypy_functions_copy' (line 500)
        stypy_functions_copy_7498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 25), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 500)
        create_blank_line_7499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 25), stypy_functions_copy_7498, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 500)
        create_blank_line_call_result_7501 = invoke(stypy.reporting.localization.Localization(__file__, 500, 25), create_blank_line_7499, *[], **kwargs_7500)
        
        # Assigning a type to the variable 'end_if_comment' (line 500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 8), 'end_if_comment', create_blank_line_call_result_7501)
        
        # Call to flatten_lists(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'begin_if_comment' (line 502)
        begin_if_comment_7504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 50), 'begin_if_comment', False)
        # Getting the type of 'condition_stmt' (line 503)
        condition_stmt_7505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 45), 'condition_stmt', False)
        # Getting the type of 'if_stmt' (line 504)
        if_stmt_7506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 45), 'if_stmt', False)
        # Getting the type of 'end_if_comment' (line 505)
        end_if_comment_7507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 45), 'end_if_comment', False)
        # Processing the call keyword arguments (line 502)
        kwargs_7508 = {}
        # Getting the type of 'stypy_functions_copy' (line 502)
        stypy_functions_copy_7502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 502)
        flatten_lists_7503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 15), stypy_functions_copy_7502, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 502)
        flatten_lists_call_result_7509 = invoke(stypy.reporting.localization.Localization(__file__, 502, 15), flatten_lists_7503, *[begin_if_comment_7504, condition_stmt_7505, if_stmt_7506, end_if_comment_7507], **kwargs_7508)
        
        # Assigning a type to the variable 'stypy_return_type' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 'stypy_return_type', flatten_lists_call_result_7509)
        
        # ################# End of 'visit_If(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_If' in the type store
        # Getting the type of 'stypy_return_type' (line 300)
        stypy_return_type_7510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7510)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_If'
        return stypy_return_type_7510


    @norecursion
    def visit_For(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_For'
        module_type_store = module_type_store.open_function_context('visit_For', 509, 4, False)
        # Assigning a type to the variable 'self' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_For')
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_For', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_For', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_For(...)' code ##################

        
        # Assigning a List to a Name (line 512):
        
        # Assigning a List to a Name (line 512):
        
        # Obtaining an instance of the builtin type 'list' (line 512)
        list_7511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 512)
        
        # Assigning a type to the variable 'for_stmt_body' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'for_stmt_body', list_7511)
        
        # Assigning a List to a Name (line 513):
        
        # Assigning a List to a Name (line 513):
        
        # Obtaining an instance of the builtin type 'list' (line 513)
        list_7512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 513)
        
        # Assigning a type to the variable 'for_stmt_orelse' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'for_stmt_orelse', list_7512)
        
        # Assigning a Call to a Name (line 515):
        
        # Assigning a Call to a Name (line 515):
        
        # Call to create_blank_line(...): (line 515)
        # Processing the call keyword arguments (line 515)
        kwargs_7515 = {}
        # Getting the type of 'stypy_functions_copy' (line 515)
        stypy_functions_copy_7513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 515)
        create_blank_line_7514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 28), stypy_functions_copy_7513, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 515)
        create_blank_line_call_result_7516 = invoke(stypy.reporting.localization.Localization(__file__, 515, 28), create_blank_line_7514, *[], **kwargs_7515)
        
        # Assigning a type to the variable 'begin_for_comment' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'begin_for_comment', create_blank_line_call_result_7516)
        
        # Assigning a Call to a Tuple (line 518):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 518)
        # Processing the call arguments (line 518)
        # Getting the type of 'node' (line 518)
        node_7519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 46), 'node', False)
        # Obtaining the member 'iter' of a type (line 518)
        iter_7520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 46), node_7519, 'iter')
        # Getting the type of 'context' (line 518)
        context_7521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 57), 'context', False)
        # Processing the call keyword arguments (line 518)
        kwargs_7522 = {}
        # Getting the type of 'self' (line 518)
        self_7517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 35), 'self', False)
        # Obtaining the member 'visit' of a type (line 518)
        visit_7518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 35), self_7517, 'visit')
        # Calling visit(args, kwargs) (line 518)
        visit_call_result_7523 = invoke(stypy.reporting.localization.Localization(__file__, 518, 35), visit_7518, *[iter_7520, context_7521], **kwargs_7522)
        
        # Assigning a type to the variable 'call_assignment_5734' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_5734', visit_call_result_7523)
        
        # Assigning a Call to a Name (line 518):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5734' (line 518)
        call_assignment_5734_7524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_5734', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7525 = stypy_get_value_from_tuple(call_assignment_5734_7524, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5735' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_5735', stypy_get_value_from_tuple_call_result_7525)
        
        # Assigning a Name to a Name (line 518):
        # Getting the type of 'call_assignment_5735' (line 518)
        call_assignment_5735_7526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_5735')
        # Assigning a type to the variable 'iter_stmt' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'iter_stmt', call_assignment_5735_7526)
        
        # Assigning a Call to a Name (line 518):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5734' (line 518)
        call_assignment_5734_7527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_5734', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7528 = stypy_get_value_from_tuple(call_assignment_5734_7527, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5736' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_5736', stypy_get_value_from_tuple_call_result_7528)
        
        # Assigning a Name to a Name (line 518):
        # Getting the type of 'call_assignment_5736' (line 518)
        call_assignment_5736_7529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_5736')
        # Assigning a type to the variable 'for_stmt_test' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 19), 'for_stmt_test', call_assignment_5736_7529)
        
        # Assigning a Call to a Name (line 521):
        
        # Assigning a Call to a Name (line 521):
        
        # Call to create_src_comment(...): (line 521)
        # Processing the call arguments (line 521)
        str_7532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, 68), 'str', 'Testing the type of a for loop iterable')
        # Getting the type of 'node' (line 521)
        node_7533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 111), 'node', False)
        # Obtaining the member 'lineno' of a type (line 521)
        lineno_7534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 111), node_7533, 'lineno')
        # Processing the call keyword arguments (line 521)
        kwargs_7535 = {}
        # Getting the type of 'stypy_functions_copy' (line 521)
        stypy_functions_copy_7530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 521)
        create_src_comment_7531 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 28), stypy_functions_copy_7530, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 521)
        create_src_comment_call_result_7536 = invoke(stypy.reporting.localization.Localization(__file__, 521, 28), create_src_comment_7531, *[str_7532, lineno_7534], **kwargs_7535)
        
        # Assigning a type to the variable 'condition_comment' (line 521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'condition_comment', create_src_comment_call_result_7536)
        
        # Assigning a Call to a Name (line 522):
        
        # Assigning a Call to a Name (line 522):
        
        # Call to create_Name(...): (line 522)
        # Processing the call arguments (line 522)
        str_7539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 57), 'str', 'is_suitable_for_loop_condition')
        # Processing the call keyword arguments (line 522)
        kwargs_7540 = {}
        # Getting the type of 'core_language_copy' (line 522)
        core_language_copy_7537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 522)
        create_Name_7538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 26), core_language_copy_7537, 'create_Name')
        # Calling create_Name(args, kwargs) (line 522)
        create_Name_call_result_7541 = invoke(stypy.reporting.localization.Localization(__file__, 522, 26), create_Name_7538, *[str_7539], **kwargs_7540)
        
        # Assigning a type to the variable 'loop_test_fname' (line 522)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'loop_test_fname', create_Name_call_result_7541)
        
        # Assigning a Call to a Name (line 523):
        
        # Assigning a Call to a Name (line 523):
        
        # Call to create_localization(...): (line 523)
        # Processing the call arguments (line 523)
        # Getting the type of 'node' (line 523)
        node_7544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 523)
        lineno_7545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 64), node_7544, 'lineno')
        # Getting the type of 'node' (line 523)
        node_7546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 523)
        col_offset_7547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 77), node_7546, 'col_offset')
        # Processing the call keyword arguments (line 523)
        kwargs_7548 = {}
        # Getting the type of 'stypy_functions_copy' (line 523)
        stypy_functions_copy_7542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 523)
        create_localization_7543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 23), stypy_functions_copy_7542, 'create_localization')
        # Calling create_localization(args, kwargs) (line 523)
        create_localization_call_result_7549 = invoke(stypy.reporting.localization.Localization(__file__, 523, 23), create_localization_7543, *[lineno_7545, col_offset_7547], **kwargs_7548)
        
        # Assigning a type to the variable 'localization' (line 523)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'localization', create_localization_call_result_7549)
        
        # Assigning a Call to a Name (line 524):
        
        # Assigning a Call to a Name (line 524):
        
        # Call to create_call_expression(...): (line 524)
        # Processing the call arguments (line 524)
        # Getting the type of 'loop_test_fname' (line 524)
        loop_test_fname_7552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 63), 'loop_test_fname', False)
        
        # Obtaining an instance of the builtin type 'list' (line 524)
        list_7553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 80), 'list')
        # Adding type elements to the builtin type 'list' instance (line 524)
        # Adding element type (line 524)
        # Getting the type of 'localization' (line 524)
        localization_7554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 81), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 80), list_7553, localization_7554)
        # Adding element type (line 524)
        # Getting the type of 'for_stmt_test' (line 524)
        for_stmt_test_7555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 95), 'for_stmt_test', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 80), list_7553, for_stmt_test_7555)
        
        # Processing the call keyword arguments (line 524)
        kwargs_7556 = {}
        # Getting the type of 'functions_copy' (line 524)
        functions_copy_7550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 25), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 524)
        create_call_expression_7551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 25), functions_copy_7550, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 524)
        create_call_expression_call_result_7557 = invoke(stypy.reporting.localization.Localization(__file__, 524, 25), create_call_expression_7551, *[loop_test_fname_7552, list_7553], **kwargs_7556)
        
        # Assigning a type to the variable 'condition_call' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'condition_call', create_call_expression_call_result_7557)
        
        # Assigning a Call to a Name (line 527):
        
        # Assigning a Call to a Name (line 527):
        
        # Call to create_src_comment(...): (line 527)
        # Processing the call arguments (line 527)
        str_7560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 69), 'str', 'Getting the type of the for loop variable')
        # Getting the type of 'node' (line 528)
        node_7561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 528)
        lineno_7562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 64), node_7561, 'lineno')
        # Processing the call keyword arguments (line 527)
        kwargs_7563 = {}
        # Getting the type of 'stypy_functions_copy' (line 527)
        stypy_functions_copy_7558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 29), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 527)
        create_src_comment_7559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 29), stypy_functions_copy_7558, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 527)
        create_src_comment_call_result_7564 = invoke(stypy.reporting.localization.Localization(__file__, 527, 29), create_src_comment_7559, *[str_7560, lineno_7562], **kwargs_7563)
        
        # Assigning a type to the variable 'get_target_comment' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 8), 'get_target_comment', create_src_comment_call_result_7564)
        
        # Call to append(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'get_target_comment' (line 529)
        get_target_comment_7567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 29), 'get_target_comment', False)
        # Processing the call keyword arguments (line 529)
        kwargs_7568 = {}
        # Getting the type of 'for_stmt_body' (line 529)
        for_stmt_body_7565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 529)
        append_7566 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 8), for_stmt_body_7565, 'append')
        # Calling append(args, kwargs) (line 529)
        append_call_result_7569 = invoke(stypy.reporting.localization.Localization(__file__, 529, 8), append_7566, *[get_target_comment_7567], **kwargs_7568)
        
        
        # Assigning a Call to a Name (line 530):
        
        # Assigning a Call to a Name (line 530):
        
        # Call to create_Name(...): (line 530)
        # Processing the call arguments (line 530)
        str_7572 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 59), 'str', 'get_type_of_for_loop_variable')
        # Processing the call keyword arguments (line 530)
        kwargs_7573 = {}
        # Getting the type of 'core_language_copy' (line 530)
        core_language_copy_7570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 28), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 530)
        create_Name_7571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 28), core_language_copy_7570, 'create_Name')
        # Calling create_Name(args, kwargs) (line 530)
        create_Name_call_result_7574 = invoke(stypy.reporting.localization.Localization(__file__, 530, 28), create_Name_7571, *[str_7572], **kwargs_7573)
        
        # Assigning a type to the variable 'loop_target_fname' (line 530)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'loop_target_fname', create_Name_call_result_7574)
        
        # Assigning a Call to a Name (line 531):
        
        # Assigning a Call to a Name (line 531):
        
        # Call to create_call(...): (line 531)
        # Processing the call arguments (line 531)
        # Getting the type of 'loop_target_fname' (line 531)
        loop_target_fname_7577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 56), 'loop_target_fname', False)
        
        # Obtaining an instance of the builtin type 'list' (line 531)
        list_7578 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 75), 'list')
        # Adding type elements to the builtin type 'list' instance (line 531)
        # Adding element type (line 531)
        # Getting the type of 'localization' (line 531)
        localization_7579 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 76), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 75), list_7578, localization_7579)
        # Adding element type (line 531)
        # Getting the type of 'for_stmt_test' (line 531)
        for_stmt_test_7580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 90), 'for_stmt_test', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 75), list_7578, for_stmt_test_7580)
        
        # Processing the call keyword arguments (line 531)
        kwargs_7581 = {}
        # Getting the type of 'functions_copy' (line 531)
        functions_copy_7575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 29), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 531)
        create_call_7576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 29), functions_copy_7575, 'create_call')
        # Calling create_call(args, kwargs) (line 531)
        create_call_call_result_7582 = invoke(stypy.reporting.localization.Localization(__file__, 531, 29), create_call_7576, *[loop_target_fname_7577, list_7578], **kwargs_7581)
        
        # Assigning a type to the variable 'target_assign_call' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'target_assign_call', create_call_call_result_7582)
        
        # Assigning a Call to a Tuple (line 532):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 532)
        # Processing the call arguments (line 532)
        # Getting the type of 'target_assign_call' (line 532)
        target_assign_call_7585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 83), 'target_assign_call', False)
        # Getting the type of 'node' (line 532)
        node_7586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 532)
        lineno_7587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 103), node_7586, 'lineno')
        # Getting the type of 'node' (line 533)
        node_7588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 78), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 533)
        col_offset_7589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 78), node_7588, 'col_offset')
        # Processing the call keyword arguments (line 532)
        kwargs_7590 = {}
        # Getting the type of 'stypy_functions_copy' (line 532)
        stypy_functions_copy_7583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 43), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 532)
        create_temp_Assign_7584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 43), stypy_functions_copy_7583, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 532)
        create_temp_Assign_call_result_7591 = invoke(stypy.reporting.localization.Localization(__file__, 532, 43), create_temp_Assign_7584, *[target_assign_call_7585, lineno_7587, col_offset_7589], **kwargs_7590)
        
        # Assigning a type to the variable 'call_assignment_5737' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_5737', create_temp_Assign_call_result_7591)
        
        # Assigning a Call to a Name (line 532):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5737' (line 532)
        call_assignment_5737_7592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_5737', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7593 = stypy_get_value_from_tuple(call_assignment_5737_7592, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5738' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_5738', stypy_get_value_from_tuple_call_result_7593)
        
        # Assigning a Name to a Name (line 532):
        # Getting the type of 'call_assignment_5738' (line 532)
        call_assignment_5738_7594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_5738')
        # Assigning a type to the variable 'target_assign' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'target_assign', call_assignment_5738_7594)
        
        # Assigning a Call to a Name (line 532):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5737' (line 532)
        call_assignment_5737_7595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_5737', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7596 = stypy_get_value_from_tuple(call_assignment_5737_7595, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5739' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_5739', stypy_get_value_from_tuple_call_result_7596)
        
        # Assigning a Name to a Name (line 532):
        # Getting the type of 'call_assignment_5739' (line 532)
        call_assignment_5739_7597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_5739')
        # Assigning a type to the variable 'target_assign_var' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 23), 'target_assign_var', call_assignment_5739_7597)
        
        # Call to append(...): (line 534)
        # Processing the call arguments (line 534)
        # Getting the type of 'target_assign' (line 534)
        target_assign_7600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 29), 'target_assign', False)
        # Processing the call keyword arguments (line 534)
        kwargs_7601 = {}
        # Getting the type of 'for_stmt_body' (line 534)
        for_stmt_body_7598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 534)
        append_7599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), for_stmt_body_7598, 'append')
        # Calling append(args, kwargs) (line 534)
        append_call_result_7602 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), append_7599, *[target_assign_7600], **kwargs_7601)
        
        
        # Call to isinstance(...): (line 536)
        # Processing the call arguments (line 536)
        # Getting the type of 'node' (line 536)
        node_7604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 22), 'node', False)
        # Obtaining the member 'target' of a type (line 536)
        target_7605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 22), node_7604, 'target')
        # Getting the type of 'ast' (line 536)
        ast_7606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 35), 'ast', False)
        # Obtaining the member 'Tuple' of a type (line 536)
        Tuple_7607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 35), ast_7606, 'Tuple')
        # Processing the call keyword arguments (line 536)
        kwargs_7608 = {}
        # Getting the type of 'isinstance' (line 536)
        isinstance_7603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 536)
        isinstance_call_result_7609 = invoke(stypy.reporting.localization.Localization(__file__, 536, 11), isinstance_7603, *[target_7605, Tuple_7607], **kwargs_7608)
        
        # Testing if the type of an if condition is none (line 536)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 536, 8), isinstance_call_result_7609):
            
            # Assigning a Call to a Name (line 545):
            
            # Assigning a Call to a Name (line 545):
            
            # Call to create_set_type_of(...): (line 545)
            # Processing the call arguments (line 545)
            # Getting the type of 'node' (line 545)
            node_7647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 73), 'node', False)
            # Obtaining the member 'target' of a type (line 545)
            target_7648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), node_7647, 'target')
            # Obtaining the member 'id' of a type (line 545)
            id_7649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), target_7648, 'id')
            # Getting the type of 'target_assign_var' (line 545)
            target_assign_var_7650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 89), 'target_assign_var', False)
            # Getting the type of 'node' (line 545)
            node_7651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 545)
            lineno_7652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 108), node_7651, 'lineno')
            # Getting the type of 'node' (line 546)
            node_7653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 68), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 546)
            col_offset_7654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 68), node_7653, 'col_offset')
            # Processing the call keyword arguments (line 545)
            kwargs_7655 = {}
            # Getting the type of 'stypy_functions_copy' (line 545)
            stypy_functions_copy_7645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 33), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 545)
            create_set_type_of_7646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 33), stypy_functions_copy_7645, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 545)
            create_set_type_of_call_result_7656 = invoke(stypy.reporting.localization.Localization(__file__, 545, 33), create_set_type_of_7646, *[id_7649, target_assign_var_7650, lineno_7652, col_offset_7654], **kwargs_7655)
            
            # Assigning a type to the variable 'assign_target_type' (line 545)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'assign_target_type', create_set_type_of_call_result_7656)
        else:
            
            # Testing the type of an if condition (line 536)
            if_condition_7610 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 536, 8), isinstance_call_result_7609)
            # Assigning a type to the variable 'if_condition_7610' (line 536)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 8), 'if_condition_7610', if_condition_7610)
            # SSA begins for if statement (line 536)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 537):
            
            # Assigning a Call to a Name (line 537):
            
            # Call to create_attribute(...): (line 537)
            # Processing the call arguments (line 537)
            # Getting the type of 'target_assign_var' (line 537)
            target_assign_var_7613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'target_assign_var', False)
            # Obtaining the member 'id' of a type (line 537)
            id_7614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), target_assign_var_7613, 'id')
            str_7615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 90), 'str', 'get_elements_type')
            # Processing the call keyword arguments (line 537)
            kwargs_7616 = {}
            # Getting the type of 'core_language_copy' (line 537)
            core_language_copy_7611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 537)
            create_attribute_7612 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), core_language_copy_7611, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 537)
            create_attribute_call_result_7617 = invoke(stypy.reporting.localization.Localization(__file__, 537, 32), create_attribute_7612, *[id_7614, str_7615], **kwargs_7616)
            
            # Assigning a type to the variable 'get_elements_call' (line 537)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'get_elements_call', create_attribute_call_result_7617)
            
            # Assigning a List to a Name (line 538):
            
            # Assigning a List to a Name (line 538):
            
            # Obtaining an instance of the builtin type 'list' (line 538)
            list_7618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 33), 'list')
            # Adding type elements to the builtin type 'list' instance (line 538)
            
            # Assigning a type to the variable 'assign_target_type' (line 538)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'assign_target_type', list_7618)
            
            # Getting the type of 'node' (line 539)
            node_7619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 23), 'node')
            # Obtaining the member 'target' of a type (line 539)
            target_7620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 23), node_7619, 'target')
            # Obtaining the member 'elts' of a type (line 539)
            elts_7621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 23), target_7620, 'elts')
            # Assigning a type to the variable 'elts_7621' (line 539)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'elts_7621', elts_7621)
            # Testing if the for loop is going to be iterated (line 539)
            # Testing the type of a for loop iterable (line 539)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 539, 12), elts_7621)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 539, 12), elts_7621):
                # Getting the type of the for loop variable (line 539)
                for_loop_var_7622 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 539, 12), elts_7621)
                # Assigning a type to the variable 'elt' (line 539)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'elt', for_loop_var_7622)
                # SSA begins for a for statement (line 539)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Assigning a Call to a Name (line 540):
                
                # Assigning a Call to a Name (line 540):
                
                # Call to create_call(...): (line 540)
                # Processing the call arguments (line 540)
                # Getting the type of 'get_elements_call' (line 540)
                get_elements_call_7625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 62), 'get_elements_call', False)
                
                # Obtaining an instance of the builtin type 'list' (line 540)
                list_7626 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 81), 'list')
                # Adding type elements to the builtin type 'list' instance (line 540)
                
                # Processing the call keyword arguments (line 540)
                kwargs_7627 = {}
                # Getting the type of 'functions_copy' (line 540)
                functions_copy_7623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 35), 'functions_copy', False)
                # Obtaining the member 'create_call' of a type (line 540)
                create_call_7624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 35), functions_copy_7623, 'create_call')
                # Calling create_call(args, kwargs) (line 540)
                create_call_call_result_7628 = invoke(stypy.reporting.localization.Localization(__file__, 540, 35), create_call_7624, *[get_elements_call_7625, list_7626], **kwargs_7627)
                
                # Assigning a type to the variable 'call_to_elements' (line 540)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'call_to_elements', create_call_call_result_7628)
                
                # Assigning a Call to a Name (line 541):
                
                # Assigning a Call to a Name (line 541):
                
                # Call to create_set_type_of(...): (line 541)
                # Processing the call arguments (line 541)
                # Getting the type of 'elt' (line 541)
                elt_7631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 67), 'elt', False)
                # Obtaining the member 'id' of a type (line 541)
                id_7632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 67), elt_7631, 'id')
                # Getting the type of 'call_to_elements' (line 541)
                call_to_elements_7633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 75), 'call_to_elements', False)
                # Getting the type of 'node' (line 541)
                node_7634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 93), 'node', False)
                # Obtaining the member 'lineno' of a type (line 541)
                lineno_7635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 93), node_7634, 'lineno')
                # Getting the type of 'node' (line 542)
                node_7636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 62), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 542)
                col_offset_7637 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 62), node_7636, 'col_offset')
                # Processing the call keyword arguments (line 541)
                kwargs_7638 = {}
                # Getting the type of 'stypy_functions_copy' (line 541)
                stypy_functions_copy_7629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of' of a type (line 541)
                create_set_type_of_7630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 27), stypy_functions_copy_7629, 'create_set_type_of')
                # Calling create_set_type_of(args, kwargs) (line 541)
                create_set_type_of_call_result_7639 = invoke(stypy.reporting.localization.Localization(__file__, 541, 27), create_set_type_of_7630, *[id_7632, call_to_elements_7633, lineno_7635, col_offset_7637], **kwargs_7638)
                
                # Assigning a type to the variable 'type_set' (line 541)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 16), 'type_set', create_set_type_of_call_result_7639)
                
                # Call to append(...): (line 543)
                # Processing the call arguments (line 543)
                # Getting the type of 'type_set' (line 543)
                type_set_7642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 42), 'type_set', False)
                # Processing the call keyword arguments (line 543)
                kwargs_7643 = {}
                # Getting the type of 'assign_target_type' (line 543)
                assign_target_type_7640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 16), 'assign_target_type', False)
                # Obtaining the member 'append' of a type (line 543)
                append_7641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 16), assign_target_type_7640, 'append')
                # Calling append(args, kwargs) (line 543)
                append_call_result_7644 = invoke(stypy.reporting.localization.Localization(__file__, 543, 16), append_7641, *[type_set_7642], **kwargs_7643)
                
                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            # SSA branch for the else part of an if statement (line 536)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Name (line 545):
            
            # Assigning a Call to a Name (line 545):
            
            # Call to create_set_type_of(...): (line 545)
            # Processing the call arguments (line 545)
            # Getting the type of 'node' (line 545)
            node_7647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 73), 'node', False)
            # Obtaining the member 'target' of a type (line 545)
            target_7648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), node_7647, 'target')
            # Obtaining the member 'id' of a type (line 545)
            id_7649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), target_7648, 'id')
            # Getting the type of 'target_assign_var' (line 545)
            target_assign_var_7650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 89), 'target_assign_var', False)
            # Getting the type of 'node' (line 545)
            node_7651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 545)
            lineno_7652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 108), node_7651, 'lineno')
            # Getting the type of 'node' (line 546)
            node_7653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 68), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 546)
            col_offset_7654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 68), node_7653, 'col_offset')
            # Processing the call keyword arguments (line 545)
            kwargs_7655 = {}
            # Getting the type of 'stypy_functions_copy' (line 545)
            stypy_functions_copy_7645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 33), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 545)
            create_set_type_of_7646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 33), stypy_functions_copy_7645, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 545)
            create_set_type_of_call_result_7656 = invoke(stypy.reporting.localization.Localization(__file__, 545, 33), create_set_type_of_7646, *[id_7649, target_assign_var_7650, lineno_7652, col_offset_7654], **kwargs_7655)
            
            # Assigning a type to the variable 'assign_target_type' (line 545)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'assign_target_type', create_set_type_of_call_result_7656)
            # SSA join for if statement (line 536)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 548)
        # Processing the call arguments (line 548)
        # Getting the type of 'assign_target_type' (line 548)
        assign_target_type_7659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 29), 'assign_target_type', False)
        # Processing the call keyword arguments (line 548)
        kwargs_7660 = {}
        # Getting the type of 'for_stmt_body' (line 548)
        for_stmt_body_7657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 548)
        append_7658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 548, 8), for_stmt_body_7657, 'append')
        # Calling append(args, kwargs) (line 548)
        append_call_result_7661 = invoke(stypy.reporting.localization.Localization(__file__, 548, 8), append_7658, *[assign_target_type_7659], **kwargs_7660)
        
        
        # Call to append(...): (line 551)
        # Processing the call arguments (line 551)
        
        # Call to create_src_comment(...): (line 551)
        # Processing the call arguments (line 551)
        str_7666 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 69), 'str', 'SSA begins for a for statement')
        # Getting the type of 'node' (line 551)
        node_7667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 551)
        lineno_7668 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 103), node_7667, 'lineno')
        # Processing the call keyword arguments (line 551)
        kwargs_7669 = {}
        # Getting the type of 'stypy_functions_copy' (line 551)
        stypy_functions_copy_7664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 29), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 551)
        create_src_comment_7665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 29), stypy_functions_copy_7664, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 551)
        create_src_comment_call_result_7670 = invoke(stypy.reporting.localization.Localization(__file__, 551, 29), create_src_comment_7665, *[str_7666, lineno_7668], **kwargs_7669)
        
        # Processing the call keyword arguments (line 551)
        kwargs_7671 = {}
        # Getting the type of 'for_stmt_body' (line 551)
        for_stmt_body_7662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 551)
        append_7663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 8), for_stmt_body_7662, 'append')
        # Calling append(args, kwargs) (line 551)
        append_call_result_7672 = invoke(stypy.reporting.localization.Localization(__file__, 551, 8), append_7663, *[create_src_comment_call_result_7670], **kwargs_7671)
        
        
        # Assigning a Call to a Tuple (line 552):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 552)
        # Processing the call keyword arguments (line 552)
        kwargs_7675 = {}
        # Getting the type of 'stypy_functions_copy' (line 552)
        stypy_functions_copy_7673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 552)
        create_clone_type_store_7674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 39), stypy_functions_copy_7673, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 552)
        create_clone_type_store_call_result_7676 = invoke(stypy.reporting.localization.Localization(__file__, 552, 39), create_clone_type_store_7674, *[], **kwargs_7675)
        
        # Assigning a type to the variable 'call_assignment_5740' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_5740', create_clone_type_store_call_result_7676)
        
        # Assigning a Call to a Name (line 552):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5740' (line 552)
        call_assignment_5740_7677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_5740', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7678 = stypy_get_value_from_tuple(call_assignment_5740_7677, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5741' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_5741', stypy_get_value_from_tuple_call_result_7678)
        
        # Assigning a Name to a Name (line 552):
        # Getting the type of 'call_assignment_5741' (line 552)
        call_assignment_5741_7679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_5741')
        # Assigning a type to the variable 'clone_stmt1' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'clone_stmt1', call_assignment_5741_7679)
        
        # Assigning a Call to a Name (line 552):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5740' (line 552)
        call_assignment_5740_7680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_5740', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7681 = stypy_get_value_from_tuple(call_assignment_5740_7680, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5742' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_5742', stypy_get_value_from_tuple_call_result_7681)
        
        # Assigning a Name to a Name (line 552):
        # Getting the type of 'call_assignment_5742' (line 552)
        call_assignment_5742_7682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_5742')
        # Assigning a type to the variable 'type_store_var1' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 21), 'type_store_var1', call_assignment_5742_7682)
        
        # Call to append(...): (line 553)
        # Processing the call arguments (line 553)
        # Getting the type of 'clone_stmt1' (line 553)
        clone_stmt1_7685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 29), 'clone_stmt1', False)
        # Processing the call keyword arguments (line 553)
        kwargs_7686 = {}
        # Getting the type of 'for_stmt_body' (line 553)
        for_stmt_body_7683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 553)
        append_7684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 8), for_stmt_body_7683, 'append')
        # Calling append(args, kwargs) (line 553)
        append_call_result_7687 = invoke(stypy.reporting.localization.Localization(__file__, 553, 8), append_7684, *[clone_stmt1_7685], **kwargs_7686)
        
        
        # Call to extend(...): (line 556)
        # Processing the call arguments (line 556)
        
        # Call to __visit_instruction_body(...): (line 556)
        # Processing the call arguments (line 556)
        # Getting the type of 'node' (line 556)
        node_7692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 59), 'node', False)
        # Obtaining the member 'body' of a type (line 556)
        body_7693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 59), node_7692, 'body')
        # Getting the type of 'context' (line 556)
        context_7694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 70), 'context', False)
        # Processing the call keyword arguments (line 556)
        kwargs_7695 = {}
        # Getting the type of 'self' (line 556)
        self_7690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 29), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 556)
        visit_instruction_body_7691 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 29), self_7690, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 556)
        visit_instruction_body_call_result_7696 = invoke(stypy.reporting.localization.Localization(__file__, 556, 29), visit_instruction_body_7691, *[body_7693, context_7694], **kwargs_7695)
        
        # Processing the call keyword arguments (line 556)
        kwargs_7697 = {}
        # Getting the type of 'for_stmt_body' (line 556)
        for_stmt_body_7688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'for_stmt_body', False)
        # Obtaining the member 'extend' of a type (line 556)
        extend_7689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 8), for_stmt_body_7688, 'extend')
        # Calling extend(args, kwargs) (line 556)
        extend_call_result_7698 = invoke(stypy.reporting.localization.Localization(__file__, 556, 8), extend_7689, *[visit_instruction_body_call_result_7696], **kwargs_7697)
        
        
        # Call to append(...): (line 558)
        # Processing the call arguments (line 558)
        
        # Call to create_src_comment(...): (line 559)
        # Processing the call arguments (line 559)
        str_7703 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 52), 'str', 'SSA branch for the else part of a for statement')
        # Getting the type of 'node' (line 559)
        node_7704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 559)
        lineno_7705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 103), node_7704, 'lineno')
        # Processing the call keyword arguments (line 559)
        kwargs_7706 = {}
        # Getting the type of 'stypy_functions_copy' (line 559)
        stypy_functions_copy_7701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 559)
        create_src_comment_7702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 12), stypy_functions_copy_7701, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 559)
        create_src_comment_call_result_7707 = invoke(stypy.reporting.localization.Localization(__file__, 559, 12), create_src_comment_7702, *[str_7703, lineno_7705], **kwargs_7706)
        
        # Processing the call keyword arguments (line 558)
        kwargs_7708 = {}
        # Getting the type of 'for_stmt_body' (line 558)
        for_stmt_body_7699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 558)
        append_7700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 8), for_stmt_body_7699, 'append')
        # Calling append(args, kwargs) (line 558)
        append_call_result_7709 = invoke(stypy.reporting.localization.Localization(__file__, 558, 8), append_7700, *[create_src_comment_call_result_7707], **kwargs_7708)
        
        
        # Assigning a Call to a Tuple (line 560):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 560)
        # Processing the call keyword arguments (line 560)
        kwargs_7712 = {}
        # Getting the type of 'stypy_functions_copy' (line 560)
        stypy_functions_copy_7710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 560)
        create_clone_type_store_7711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 39), stypy_functions_copy_7710, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 560)
        create_clone_type_store_call_result_7713 = invoke(stypy.reporting.localization.Localization(__file__, 560, 39), create_clone_type_store_7711, *[], **kwargs_7712)
        
        # Assigning a type to the variable 'call_assignment_5743' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_5743', create_clone_type_store_call_result_7713)
        
        # Assigning a Call to a Name (line 560):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5743' (line 560)
        call_assignment_5743_7714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_5743', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7715 = stypy_get_value_from_tuple(call_assignment_5743_7714, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5744' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_5744', stypy_get_value_from_tuple_call_result_7715)
        
        # Assigning a Name to a Name (line 560):
        # Getting the type of 'call_assignment_5744' (line 560)
        call_assignment_5744_7716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_5744')
        # Assigning a type to the variable 'clone_stmt2' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'clone_stmt2', call_assignment_5744_7716)
        
        # Assigning a Call to a Name (line 560):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5743' (line 560)
        call_assignment_5743_7717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_5743', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7718 = stypy_get_value_from_tuple(call_assignment_5743_7717, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5745' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_5745', stypy_get_value_from_tuple_call_result_7718)
        
        # Assigning a Name to a Name (line 560):
        # Getting the type of 'call_assignment_5745' (line 560)
        call_assignment_5745_7719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_5745')
        # Assigning a type to the variable 'type_store_var2' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 21), 'type_store_var2', call_assignment_5745_7719)
        
        # Call to append(...): (line 561)
        # Processing the call arguments (line 561)
        # Getting the type of 'clone_stmt2' (line 561)
        clone_stmt2_7722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 29), 'clone_stmt2', False)
        # Processing the call keyword arguments (line 561)
        kwargs_7723 = {}
        # Getting the type of 'for_stmt_body' (line 561)
        for_stmt_body_7720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 561)
        append_7721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 561, 8), for_stmt_body_7720, 'append')
        # Calling append(args, kwargs) (line 561)
        append_call_result_7724 = invoke(stypy.reporting.localization.Localization(__file__, 561, 8), append_7721, *[clone_stmt2_7722], **kwargs_7723)
        
        
        # Assigning a Call to a Name (line 564):
        
        # Assigning a Call to a Name (line 564):
        
        # Call to create_set_type_store(...): (line 564)
        # Processing the call arguments (line 564)
        # Getting the type of 'type_store_var1' (line 564)
        type_store_var1_7727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 69), 'type_store_var1', False)
        # Processing the call keyword arguments (line 564)
        kwargs_7728 = {}
        # Getting the type of 'stypy_functions_copy' (line 564)
        stypy_functions_copy_7725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 564)
        create_set_type_store_7726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 26), stypy_functions_copy_7725, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 564)
        create_set_type_store_call_result_7729 = invoke(stypy.reporting.localization.Localization(__file__, 564, 26), create_set_type_store_7726, *[type_store_var1_7727], **kwargs_7728)
        
        # Assigning a type to the variable 'set_type_store1' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'set_type_store1', create_set_type_store_call_result_7729)
        
        # Call to append(...): (line 565)
        # Processing the call arguments (line 565)
        # Getting the type of 'set_type_store1' (line 565)
        set_type_store1_7732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 29), 'set_type_store1', False)
        # Processing the call keyword arguments (line 565)
        kwargs_7733 = {}
        # Getting the type of 'for_stmt_body' (line 565)
        for_stmt_body_7730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 565)
        append_7731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 8), for_stmt_body_7730, 'append')
        # Calling append(args, kwargs) (line 565)
        append_call_result_7734 = invoke(stypy.reporting.localization.Localization(__file__, 565, 8), append_7731, *[set_type_store1_7732], **kwargs_7733)
        
        
        # Call to extend(...): (line 567)
        # Processing the call arguments (line 567)
        
        # Call to __visit_instruction_body(...): (line 567)
        # Processing the call arguments (line 567)
        # Getting the type of 'node' (line 567)
        node_7739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 61), 'node', False)
        # Obtaining the member 'orelse' of a type (line 567)
        orelse_7740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 61), node_7739, 'orelse')
        # Getting the type of 'context' (line 567)
        context_7741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 74), 'context', False)
        # Processing the call keyword arguments (line 567)
        kwargs_7742 = {}
        # Getting the type of 'self' (line 567)
        self_7737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 31), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 567)
        visit_instruction_body_7738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 31), self_7737, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 567)
        visit_instruction_body_call_result_7743 = invoke(stypy.reporting.localization.Localization(__file__, 567, 31), visit_instruction_body_7738, *[orelse_7740, context_7741], **kwargs_7742)
        
        # Processing the call keyword arguments (line 567)
        kwargs_7744 = {}
        # Getting the type of 'for_stmt_orelse' (line 567)
        for_stmt_orelse_7735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'extend' of a type (line 567)
        extend_7736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 8), for_stmt_orelse_7735, 'extend')
        # Calling extend(args, kwargs) (line 567)
        extend_call_result_7745 = invoke(stypy.reporting.localization.Localization(__file__, 567, 8), extend_7736, *[visit_instruction_body_call_result_7743], **kwargs_7744)
        
        
        # Call to append(...): (line 570)
        # Processing the call arguments (line 570)
        
        # Call to create_src_comment(...): (line 570)
        # Processing the call arguments (line 570)
        str_7750 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 71), 'str', 'SSA join for a for statement')
        # Processing the call keyword arguments (line 570)
        kwargs_7751 = {}
        # Getting the type of 'stypy_functions_copy' (line 570)
        stypy_functions_copy_7748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 570)
        create_src_comment_7749 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 31), stypy_functions_copy_7748, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 570)
        create_src_comment_call_result_7752 = invoke(stypy.reporting.localization.Localization(__file__, 570, 31), create_src_comment_7749, *[str_7750], **kwargs_7751)
        
        # Processing the call keyword arguments (line 570)
        kwargs_7753 = {}
        # Getting the type of 'for_stmt_orelse' (line 570)
        for_stmt_orelse_7746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 570)
        append_7747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 8), for_stmt_orelse_7746, 'append')
        # Calling append(args, kwargs) (line 570)
        append_call_result_7754 = invoke(stypy.reporting.localization.Localization(__file__, 570, 8), append_7747, *[create_src_comment_call_result_7752], **kwargs_7753)
        
        
        # Assigning a Call to a Tuple (line 571):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 571)
        # Processing the call keyword arguments (line 571)
        kwargs_7757 = {}
        # Getting the type of 'stypy_functions_copy' (line 571)
        stypy_functions_copy_7755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 571)
        create_clone_type_store_7756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 39), stypy_functions_copy_7755, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 571)
        create_clone_type_store_call_result_7758 = invoke(stypy.reporting.localization.Localization(__file__, 571, 39), create_clone_type_store_7756, *[], **kwargs_7757)
        
        # Assigning a type to the variable 'call_assignment_5746' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_5746', create_clone_type_store_call_result_7758)
        
        # Assigning a Call to a Name (line 571):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5746' (line 571)
        call_assignment_5746_7759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_5746', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7760 = stypy_get_value_from_tuple(call_assignment_5746_7759, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5747' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_5747', stypy_get_value_from_tuple_call_result_7760)
        
        # Assigning a Name to a Name (line 571):
        # Getting the type of 'call_assignment_5747' (line 571)
        call_assignment_5747_7761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_5747')
        # Assigning a type to the variable 'clone_stmt3' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'clone_stmt3', call_assignment_5747_7761)
        
        # Assigning a Call to a Name (line 571):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5746' (line 571)
        call_assignment_5746_7762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_5746', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7763 = stypy_get_value_from_tuple(call_assignment_5746_7762, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5748' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_5748', stypy_get_value_from_tuple_call_result_7763)
        
        # Assigning a Name to a Name (line 571):
        # Getting the type of 'call_assignment_5748' (line 571)
        call_assignment_5748_7764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_5748')
        # Assigning a type to the variable 'type_store_var3' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 21), 'type_store_var3', call_assignment_5748_7764)
        
        # Call to append(...): (line 572)
        # Processing the call arguments (line 572)
        # Getting the type of 'clone_stmt3' (line 572)
        clone_stmt3_7767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 31), 'clone_stmt3', False)
        # Processing the call keyword arguments (line 572)
        kwargs_7768 = {}
        # Getting the type of 'for_stmt_orelse' (line 572)
        for_stmt_orelse_7765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 572)
        append_7766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 8), for_stmt_orelse_7765, 'append')
        # Calling append(args, kwargs) (line 572)
        append_call_result_7769 = invoke(stypy.reporting.localization.Localization(__file__, 572, 8), append_7766, *[clone_stmt3_7767], **kwargs_7768)
        
        
        # Assigning a Call to a Tuple (line 574):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 574)
        # Processing the call arguments (line 574)
        str_7772 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 82), 'str', 'ssa_join_with_else_branch')
        
        # Obtaining an instance of the builtin type 'list' (line 575)
        list_7773 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 575)
        # Adding element type (line 575)
        # Getting the type of 'type_store_var1' (line 575)
        type_store_var1_7774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 78), 'type_store_var1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 77), list_7773, type_store_var1_7774)
        # Adding element type (line 575)
        # Getting the type of 'type_store_var2' (line 575)
        type_store_var2_7775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 95), 'type_store_var2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 77), list_7773, type_store_var2_7775)
        # Adding element type (line 575)
        # Getting the type of 'type_store_var3' (line 576)
        type_store_var3_7776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 78), 'type_store_var3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 77), list_7773, type_store_var3_7776)
        
        # Processing the call keyword arguments (line 574)
        kwargs_7777 = {}
        # Getting the type of 'stypy_functions_copy' (line 574)
        stypy_functions_copy_7770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 574)
        create_join_type_store_7771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 38), stypy_functions_copy_7770, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 574)
        create_join_type_store_call_result_7778 = invoke(stypy.reporting.localization.Localization(__file__, 574, 38), create_join_type_store_7771, *[str_7772, list_7773], **kwargs_7777)
        
        # Assigning a type to the variable 'call_assignment_5749' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_5749', create_join_type_store_call_result_7778)
        
        # Assigning a Call to a Name (line 574):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5749' (line 574)
        call_assignment_5749_7779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_5749', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7780 = stypy_get_value_from_tuple(call_assignment_5749_7779, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5750' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_5750', stypy_get_value_from_tuple_call_result_7780)
        
        # Assigning a Name to a Name (line 574):
        # Getting the type of 'call_assignment_5750' (line 574)
        call_assignment_5750_7781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_5750')
        # Assigning a type to the variable 'join_stmt' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'join_stmt', call_assignment_5750_7781)
        
        # Assigning a Call to a Name (line 574):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5749' (line 574)
        call_assignment_5749_7782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_5749', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7783 = stypy_get_value_from_tuple(call_assignment_5749_7782, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5751' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_5751', stypy_get_value_from_tuple_call_result_7783)
        
        # Assigning a Name to a Name (line 574):
        # Getting the type of 'call_assignment_5751' (line 574)
        call_assignment_5751_7784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_5751')
        # Assigning a type to the variable 'final_type_store' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 19), 'final_type_store', call_assignment_5751_7784)
        
        # Call to append(...): (line 577)
        # Processing the call arguments (line 577)
        # Getting the type of 'join_stmt' (line 577)
        join_stmt_7787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 31), 'join_stmt', False)
        # Processing the call keyword arguments (line 577)
        kwargs_7788 = {}
        # Getting the type of 'for_stmt_orelse' (line 577)
        for_stmt_orelse_7785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 577)
        append_7786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 577, 8), for_stmt_orelse_7785, 'append')
        # Calling append(args, kwargs) (line 577)
        append_call_result_7789 = invoke(stypy.reporting.localization.Localization(__file__, 577, 8), append_7786, *[join_stmt_7787], **kwargs_7788)
        
        
        # Assigning a Call to a Name (line 580):
        
        # Assigning a Call to a Name (line 580):
        
        # Call to create_set_type_store(...): (line 580)
        # Processing the call arguments (line 580)
        # Getting the type of 'final_type_store' (line 580)
        final_type_store_7792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 69), 'final_type_store', False)
        # Processing the call keyword arguments (line 580)
        kwargs_7793 = {}
        # Getting the type of 'stypy_functions_copy' (line 580)
        stypy_functions_copy_7790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 580)
        create_set_type_store_7791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 26), stypy_functions_copy_7790, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 580)
        create_set_type_store_call_result_7794 = invoke(stypy.reporting.localization.Localization(__file__, 580, 26), create_set_type_store_7791, *[final_type_store_7792], **kwargs_7793)
        
        # Assigning a type to the variable 'set_type_store2' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'set_type_store2', create_set_type_store_call_result_7794)
        
        # Call to append(...): (line 581)
        # Processing the call arguments (line 581)
        # Getting the type of 'set_type_store2' (line 581)
        set_type_store2_7797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 31), 'set_type_store2', False)
        # Processing the call keyword arguments (line 581)
        kwargs_7798 = {}
        # Getting the type of 'for_stmt_orelse' (line 581)
        for_stmt_orelse_7795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 581)
        append_7796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 8), for_stmt_orelse_7795, 'append')
        # Calling append(args, kwargs) (line 581)
        append_call_result_7799 = invoke(stypy.reporting.localization.Localization(__file__, 581, 8), append_7796, *[set_type_store2_7797], **kwargs_7798)
        
        
        # Assigning a BinOp to a Name (line 583):
        
        # Assigning a BinOp to a Name (line 583):
        # Getting the type of 'for_stmt_body' (line 583)
        for_stmt_body_7800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 20), 'for_stmt_body')
        # Getting the type of 'for_stmt_orelse' (line 583)
        for_stmt_orelse_7801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 36), 'for_stmt_orelse')
        # Applying the binary operator '+' (line 583)
        result_add_7802 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 20), '+', for_stmt_body_7800, for_stmt_orelse_7801)
        
        # Assigning a type to the variable 'for_stmts' (line 583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'for_stmts', result_add_7802)
        
        # Assigning a Call to a Name (line 584):
        
        # Assigning a Call to a Name (line 584):
        
        # Call to flatten_lists(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'condition_comment' (line 584)
        condition_comment_7805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 54), 'condition_comment', False)
        # Getting the type of 'condition_call' (line 584)
        condition_call_7806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 73), 'condition_call', False)
        # Getting the type of 'for_stmts' (line 584)
        for_stmts_7807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 89), 'for_stmts', False)
        # Processing the call keyword arguments (line 584)
        kwargs_7808 = {}
        # Getting the type of 'stypy_functions_copy' (line 584)
        stypy_functions_copy_7803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 19), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 584)
        flatten_lists_7804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 19), stypy_functions_copy_7803, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 584)
        flatten_lists_call_result_7809 = invoke(stypy.reporting.localization.Localization(__file__, 584, 19), flatten_lists_7804, *[condition_comment_7805, condition_call_7806, for_stmts_7807], **kwargs_7808)
        
        # Assigning a type to the variable 'for_stmt' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'for_stmt', flatten_lists_call_result_7809)
        
        # Assigning a Call to a Name (line 586):
        
        # Assigning a Call to a Name (line 586):
        
        # Call to create_blank_line(...): (line 586)
        # Processing the call keyword arguments (line 586)
        kwargs_7812 = {}
        # Getting the type of 'stypy_functions_copy' (line 586)
        stypy_functions_copy_7810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 586)
        create_blank_line_7811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 26), stypy_functions_copy_7810, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 586)
        create_blank_line_call_result_7813 = invoke(stypy.reporting.localization.Localization(__file__, 586, 26), create_blank_line_7811, *[], **kwargs_7812)
        
        # Assigning a type to the variable 'end_for_comment' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 8), 'end_for_comment', create_blank_line_call_result_7813)
        
        # Call to flatten_lists(...): (line 588)
        # Processing the call arguments (line 588)
        # Getting the type of 'begin_for_comment' (line 588)
        begin_for_comment_7816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 50), 'begin_for_comment', False)
        # Getting the type of 'iter_stmt' (line 589)
        iter_stmt_7817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 45), 'iter_stmt', False)
        # Getting the type of 'for_stmt' (line 590)
        for_stmt_7818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 45), 'for_stmt', False)
        # Getting the type of 'end_for_comment' (line 591)
        end_for_comment_7819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 45), 'end_for_comment', False)
        # Processing the call keyword arguments (line 588)
        kwargs_7820 = {}
        # Getting the type of 'stypy_functions_copy' (line 588)
        stypy_functions_copy_7814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 588)
        flatten_lists_7815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 15), stypy_functions_copy_7814, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 588)
        flatten_lists_call_result_7821 = invoke(stypy.reporting.localization.Localization(__file__, 588, 15), flatten_lists_7815, *[begin_for_comment_7816, iter_stmt_7817, for_stmt_7818, end_for_comment_7819], **kwargs_7820)
        
        # Assigning a type to the variable 'stypy_return_type' (line 588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'stypy_return_type', flatten_lists_call_result_7821)
        
        # ################# End of 'visit_For(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_For' in the type store
        # Getting the type of 'stypy_return_type' (line 509)
        stypy_return_type_7822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_7822)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_For'
        return stypy_return_type_7822


    @norecursion
    def visit_While(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_While'
        module_type_store = module_type_store.open_function_context('visit_While', 595, 4, False)
        # Assigning a type to the variable 'self' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_While')
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_While', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_While', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_While(...)' code ##################

        
        # Assigning a List to a Name (line 598):
        
        # Assigning a List to a Name (line 598):
        
        # Obtaining an instance of the builtin type 'list' (line 598)
        list_7823 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 598)
        
        # Assigning a type to the variable 'while_stmt_body' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'while_stmt_body', list_7823)
        
        # Assigning a List to a Name (line 599):
        
        # Assigning a List to a Name (line 599):
        
        # Obtaining an instance of the builtin type 'list' (line 599)
        list_7824 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 599)
        
        # Assigning a type to the variable 'while_stmt_orelse' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 8), 'while_stmt_orelse', list_7824)
        
        # Assigning a Call to a Name (line 601):
        
        # Assigning a Call to a Name (line 601):
        
        # Call to create_blank_line(...): (line 601)
        # Processing the call keyword arguments (line 601)
        kwargs_7827 = {}
        # Getting the type of 'stypy_functions_copy' (line 601)
        stypy_functions_copy_7825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 30), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 601)
        create_blank_line_7826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 30), stypy_functions_copy_7825, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 601)
        create_blank_line_call_result_7828 = invoke(stypy.reporting.localization.Localization(__file__, 601, 30), create_blank_line_7826, *[], **kwargs_7827)
        
        # Assigning a type to the variable 'begin_while_comment' (line 601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 8), 'begin_while_comment', create_blank_line_call_result_7828)
        
        # Assigning a Call to a Tuple (line 604):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 604)
        # Processing the call arguments (line 604)
        # Getting the type of 'node' (line 604)
        node_7831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 53), 'node', False)
        # Obtaining the member 'test' of a type (line 604)
        test_7832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 53), node_7831, 'test')
        # Getting the type of 'context' (line 604)
        context_7833 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 64), 'context', False)
        # Processing the call keyword arguments (line 604)
        kwargs_7834 = {}
        # Getting the type of 'self' (line 604)
        self_7829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 42), 'self', False)
        # Obtaining the member 'visit' of a type (line 604)
        visit_7830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 42), self_7829, 'visit')
        # Calling visit(args, kwargs) (line 604)
        visit_call_result_7835 = invoke(stypy.reporting.localization.Localization(__file__, 604, 42), visit_7830, *[test_7832, context_7833], **kwargs_7834)
        
        # Assigning a type to the variable 'call_assignment_5752' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_5752', visit_call_result_7835)
        
        # Assigning a Call to a Name (line 604):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5752' (line 604)
        call_assignment_5752_7836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_5752', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7837 = stypy_get_value_from_tuple(call_assignment_5752_7836, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5753' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_5753', stypy_get_value_from_tuple_call_result_7837)
        
        # Assigning a Name to a Name (line 604):
        # Getting the type of 'call_assignment_5753' (line 604)
        call_assignment_5753_7838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_5753')
        # Assigning a type to the variable 'condition_stmt' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'condition_stmt', call_assignment_5753_7838)
        
        # Assigning a Call to a Name (line 604):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5752' (line 604)
        call_assignment_5752_7839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_5752', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7840 = stypy_get_value_from_tuple(call_assignment_5752_7839, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5754' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_5754', stypy_get_value_from_tuple_call_result_7840)
        
        # Assigning a Name to a Name (line 604):
        # Getting the type of 'call_assignment_5754' (line 604)
        call_assignment_5754_7841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_5754')
        # Assigning a type to the variable 'while_stmt_test' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 24), 'while_stmt_test', call_assignment_5754_7841)
        
        # Assigning a Call to a Name (line 607):
        
        # Assigning a Call to a Name (line 607):
        
        # Call to create_src_comment(...): (line 607)
        # Processing the call arguments (line 607)
        str_7844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 68), 'str', 'Testing the type of an if condition')
        # Getting the type of 'node' (line 607)
        node_7845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 107), 'node', False)
        # Obtaining the member 'lineno' of a type (line 607)
        lineno_7846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 107), node_7845, 'lineno')
        # Processing the call keyword arguments (line 607)
        kwargs_7847 = {}
        # Getting the type of 'stypy_functions_copy' (line 607)
        stypy_functions_copy_7842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 607)
        create_src_comment_7843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 28), stypy_functions_copy_7842, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 607)
        create_src_comment_call_result_7848 = invoke(stypy.reporting.localization.Localization(__file__, 607, 28), create_src_comment_7843, *[str_7844, lineno_7846], **kwargs_7847)
        
        # Assigning a type to the variable 'condition_comment' (line 607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 8), 'condition_comment', create_src_comment_call_result_7848)
        
        # Assigning a Call to a Name (line 608):
        
        # Assigning a Call to a Name (line 608):
        
        # Call to create_Name(...): (line 608)
        # Processing the call arguments (line 608)
        str_7851 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 51), 'str', 'is_suitable_condition')
        # Processing the call keyword arguments (line 608)
        kwargs_7852 = {}
        # Getting the type of 'core_language_copy' (line 608)
        core_language_copy_7849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 20), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 608)
        create_Name_7850 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 20), core_language_copy_7849, 'create_Name')
        # Calling create_Name(args, kwargs) (line 608)
        create_Name_call_result_7853 = invoke(stypy.reporting.localization.Localization(__file__, 608, 20), create_Name_7850, *[str_7851], **kwargs_7852)
        
        # Assigning a type to the variable 'attribute' (line 608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 8), 'attribute', create_Name_call_result_7853)
        
        # Assigning a Call to a Name (line 609):
        
        # Assigning a Call to a Name (line 609):
        
        # Call to create_localization(...): (line 609)
        # Processing the call arguments (line 609)
        # Getting the type of 'node' (line 609)
        node_7856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 609)
        lineno_7857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 64), node_7856, 'lineno')
        # Getting the type of 'node' (line 609)
        node_7858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 609)
        col_offset_7859 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 77), node_7858, 'col_offset')
        # Processing the call keyword arguments (line 609)
        kwargs_7860 = {}
        # Getting the type of 'stypy_functions_copy' (line 609)
        stypy_functions_copy_7854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 609)
        create_localization_7855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 23), stypy_functions_copy_7854, 'create_localization')
        # Calling create_localization(args, kwargs) (line 609)
        create_localization_call_result_7861 = invoke(stypy.reporting.localization.Localization(__file__, 609, 23), create_localization_7855, *[lineno_7857, col_offset_7859], **kwargs_7860)
        
        # Assigning a type to the variable 'localization' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 8), 'localization', create_localization_call_result_7861)
        
        # Assigning a Call to a Name (line 610):
        
        # Assigning a Call to a Name (line 610):
        
        # Call to create_call_expression(...): (line 610)
        # Processing the call arguments (line 610)
        # Getting the type of 'attribute' (line 610)
        attribute_7864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 63), 'attribute', False)
        
        # Obtaining an instance of the builtin type 'list' (line 610)
        list_7865 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 74), 'list')
        # Adding type elements to the builtin type 'list' instance (line 610)
        # Adding element type (line 610)
        # Getting the type of 'localization' (line 610)
        localization_7866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 75), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 74), list_7865, localization_7866)
        # Adding element type (line 610)
        # Getting the type of 'while_stmt_test' (line 610)
        while_stmt_test_7867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 89), 'while_stmt_test', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 74), list_7865, while_stmt_test_7867)
        
        # Processing the call keyword arguments (line 610)
        kwargs_7868 = {}
        # Getting the type of 'functions_copy' (line 610)
        functions_copy_7862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 25), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 610)
        create_call_expression_7863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 610, 25), functions_copy_7862, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 610)
        create_call_expression_call_result_7869 = invoke(stypy.reporting.localization.Localization(__file__, 610, 25), create_call_expression_7863, *[attribute_7864, list_7865], **kwargs_7868)
        
        # Assigning a type to the variable 'condition_call' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 8), 'condition_call', create_call_expression_call_result_7869)
        
        # Call to append(...): (line 613)
        # Processing the call arguments (line 613)
        
        # Call to create_src_comment(...): (line 613)
        # Processing the call arguments (line 613)
        str_7874 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 71), 'str', 'SSA begins for while statement')
        # Getting the type of 'node' (line 613)
        node_7875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 613)
        lineno_7876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 105), node_7875, 'lineno')
        # Processing the call keyword arguments (line 613)
        kwargs_7877 = {}
        # Getting the type of 'stypy_functions_copy' (line 613)
        stypy_functions_copy_7872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 613)
        create_src_comment_7873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 31), stypy_functions_copy_7872, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 613)
        create_src_comment_call_result_7878 = invoke(stypy.reporting.localization.Localization(__file__, 613, 31), create_src_comment_7873, *[str_7874, lineno_7876], **kwargs_7877)
        
        # Processing the call keyword arguments (line 613)
        kwargs_7879 = {}
        # Getting the type of 'while_stmt_body' (line 613)
        while_stmt_body_7870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 613)
        append_7871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 8), while_stmt_body_7870, 'append')
        # Calling append(args, kwargs) (line 613)
        append_call_result_7880 = invoke(stypy.reporting.localization.Localization(__file__, 613, 8), append_7871, *[create_src_comment_call_result_7878], **kwargs_7879)
        
        
        # Assigning a Call to a Tuple (line 614):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 614)
        # Processing the call keyword arguments (line 614)
        kwargs_7883 = {}
        # Getting the type of 'stypy_functions_copy' (line 614)
        stypy_functions_copy_7881 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 614)
        create_clone_type_store_7882 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 39), stypy_functions_copy_7881, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 614)
        create_clone_type_store_call_result_7884 = invoke(stypy.reporting.localization.Localization(__file__, 614, 39), create_clone_type_store_7882, *[], **kwargs_7883)
        
        # Assigning a type to the variable 'call_assignment_5755' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_5755', create_clone_type_store_call_result_7884)
        
        # Assigning a Call to a Name (line 614):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5755' (line 614)
        call_assignment_5755_7885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_5755', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7886 = stypy_get_value_from_tuple(call_assignment_5755_7885, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5756' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_5756', stypy_get_value_from_tuple_call_result_7886)
        
        # Assigning a Name to a Name (line 614):
        # Getting the type of 'call_assignment_5756' (line 614)
        call_assignment_5756_7887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_5756')
        # Assigning a type to the variable 'clone_stmt1' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'clone_stmt1', call_assignment_5756_7887)
        
        # Assigning a Call to a Name (line 614):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5755' (line 614)
        call_assignment_5755_7888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_5755', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7889 = stypy_get_value_from_tuple(call_assignment_5755_7888, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5757' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_5757', stypy_get_value_from_tuple_call_result_7889)
        
        # Assigning a Name to a Name (line 614):
        # Getting the type of 'call_assignment_5757' (line 614)
        call_assignment_5757_7890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_5757')
        # Assigning a type to the variable 'type_store_var1' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 21), 'type_store_var1', call_assignment_5757_7890)
        
        # Call to append(...): (line 615)
        # Processing the call arguments (line 615)
        # Getting the type of 'clone_stmt1' (line 615)
        clone_stmt1_7893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 31), 'clone_stmt1', False)
        # Processing the call keyword arguments (line 615)
        kwargs_7894 = {}
        # Getting the type of 'while_stmt_body' (line 615)
        while_stmt_body_7891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 615)
        append_7892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 8), while_stmt_body_7891, 'append')
        # Calling append(args, kwargs) (line 615)
        append_call_result_7895 = invoke(stypy.reporting.localization.Localization(__file__, 615, 8), append_7892, *[clone_stmt1_7893], **kwargs_7894)
        
        
        # Call to extend(...): (line 618)
        # Processing the call arguments (line 618)
        
        # Call to __visit_instruction_body(...): (line 618)
        # Processing the call arguments (line 618)
        # Getting the type of 'node' (line 618)
        node_7900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 61), 'node', False)
        # Obtaining the member 'body' of a type (line 618)
        body_7901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 61), node_7900, 'body')
        # Getting the type of 'context' (line 618)
        context_7902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 72), 'context', False)
        # Processing the call keyword arguments (line 618)
        kwargs_7903 = {}
        # Getting the type of 'self' (line 618)
        self_7898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 31), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 618)
        visit_instruction_body_7899 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 31), self_7898, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 618)
        visit_instruction_body_call_result_7904 = invoke(stypy.reporting.localization.Localization(__file__, 618, 31), visit_instruction_body_7899, *[body_7901, context_7902], **kwargs_7903)
        
        # Processing the call keyword arguments (line 618)
        kwargs_7905 = {}
        # Getting the type of 'while_stmt_body' (line 618)
        while_stmt_body_7896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'while_stmt_body', False)
        # Obtaining the member 'extend' of a type (line 618)
        extend_7897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 8), while_stmt_body_7896, 'extend')
        # Calling extend(args, kwargs) (line 618)
        extend_call_result_7906 = invoke(stypy.reporting.localization.Localization(__file__, 618, 8), extend_7897, *[visit_instruction_body_call_result_7904], **kwargs_7905)
        
        
        # Call to append(...): (line 621)
        # Processing the call arguments (line 621)
        
        # Call to create_src_comment(...): (line 622)
        # Processing the call arguments (line 622)
        str_7911 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 52), 'str', 'SSA branch for the else part of a while statement')
        # Getting the type of 'node' (line 622)
        node_7912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 622)
        lineno_7913 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 105), node_7912, 'lineno')
        # Processing the call keyword arguments (line 622)
        kwargs_7914 = {}
        # Getting the type of 'stypy_functions_copy' (line 622)
        stypy_functions_copy_7909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 622)
        create_src_comment_7910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 12), stypy_functions_copy_7909, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 622)
        create_src_comment_call_result_7915 = invoke(stypy.reporting.localization.Localization(__file__, 622, 12), create_src_comment_7910, *[str_7911, lineno_7913], **kwargs_7914)
        
        # Processing the call keyword arguments (line 621)
        kwargs_7916 = {}
        # Getting the type of 'while_stmt_body' (line 621)
        while_stmt_body_7907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 621)
        append_7908 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 8), while_stmt_body_7907, 'append')
        # Calling append(args, kwargs) (line 621)
        append_call_result_7917 = invoke(stypy.reporting.localization.Localization(__file__, 621, 8), append_7908, *[create_src_comment_call_result_7915], **kwargs_7916)
        
        
        # Assigning a Call to a Tuple (line 623):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 623)
        # Processing the call keyword arguments (line 623)
        kwargs_7920 = {}
        # Getting the type of 'stypy_functions_copy' (line 623)
        stypy_functions_copy_7918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 623)
        create_clone_type_store_7919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 39), stypy_functions_copy_7918, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 623)
        create_clone_type_store_call_result_7921 = invoke(stypy.reporting.localization.Localization(__file__, 623, 39), create_clone_type_store_7919, *[], **kwargs_7920)
        
        # Assigning a type to the variable 'call_assignment_5758' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_5758', create_clone_type_store_call_result_7921)
        
        # Assigning a Call to a Name (line 623):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5758' (line 623)
        call_assignment_5758_7922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_5758', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7923 = stypy_get_value_from_tuple(call_assignment_5758_7922, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5759' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_5759', stypy_get_value_from_tuple_call_result_7923)
        
        # Assigning a Name to a Name (line 623):
        # Getting the type of 'call_assignment_5759' (line 623)
        call_assignment_5759_7924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_5759')
        # Assigning a type to the variable 'clone_stmt2' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'clone_stmt2', call_assignment_5759_7924)
        
        # Assigning a Call to a Name (line 623):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5758' (line 623)
        call_assignment_5758_7925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_5758', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7926 = stypy_get_value_from_tuple(call_assignment_5758_7925, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5760' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_5760', stypy_get_value_from_tuple_call_result_7926)
        
        # Assigning a Name to a Name (line 623):
        # Getting the type of 'call_assignment_5760' (line 623)
        call_assignment_5760_7927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_5760')
        # Assigning a type to the variable 'type_store_var2' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 21), 'type_store_var2', call_assignment_5760_7927)
        
        # Call to append(...): (line 624)
        # Processing the call arguments (line 624)
        # Getting the type of 'clone_stmt2' (line 624)
        clone_stmt2_7930 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 31), 'clone_stmt2', False)
        # Processing the call keyword arguments (line 624)
        kwargs_7931 = {}
        # Getting the type of 'while_stmt_body' (line 624)
        while_stmt_body_7928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 624)
        append_7929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 8), while_stmt_body_7928, 'append')
        # Calling append(args, kwargs) (line 624)
        append_call_result_7932 = invoke(stypy.reporting.localization.Localization(__file__, 624, 8), append_7929, *[clone_stmt2_7930], **kwargs_7931)
        
        
        # Assigning a Call to a Name (line 626):
        
        # Assigning a Call to a Name (line 626):
        
        # Call to create_set_type_store(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'type_store_var1' (line 626)
        type_store_var1_7935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 69), 'type_store_var1', False)
        # Processing the call keyword arguments (line 626)
        kwargs_7936 = {}
        # Getting the type of 'stypy_functions_copy' (line 626)
        stypy_functions_copy_7933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 626)
        create_set_type_store_7934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 26), stypy_functions_copy_7933, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 626)
        create_set_type_store_call_result_7937 = invoke(stypy.reporting.localization.Localization(__file__, 626, 26), create_set_type_store_7934, *[type_store_var1_7935], **kwargs_7936)
        
        # Assigning a type to the variable 'set_type_store1' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'set_type_store1', create_set_type_store_call_result_7937)
        
        # Call to append(...): (line 627)
        # Processing the call arguments (line 627)
        # Getting the type of 'set_type_store1' (line 627)
        set_type_store1_7940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 31), 'set_type_store1', False)
        # Processing the call keyword arguments (line 627)
        kwargs_7941 = {}
        # Getting the type of 'while_stmt_body' (line 627)
        while_stmt_body_7938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 627)
        append_7939 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 8), while_stmt_body_7938, 'append')
        # Calling append(args, kwargs) (line 627)
        append_call_result_7942 = invoke(stypy.reporting.localization.Localization(__file__, 627, 8), append_7939, *[set_type_store1_7940], **kwargs_7941)
        
        
        # Call to extend(...): (line 630)
        # Processing the call arguments (line 630)
        
        # Call to __visit_instruction_body(...): (line 630)
        # Processing the call arguments (line 630)
        # Getting the type of 'node' (line 630)
        node_7947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 63), 'node', False)
        # Obtaining the member 'orelse' of a type (line 630)
        orelse_7948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 63), node_7947, 'orelse')
        # Getting the type of 'context' (line 630)
        context_7949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 76), 'context', False)
        # Processing the call keyword arguments (line 630)
        kwargs_7950 = {}
        # Getting the type of 'self' (line 630)
        self_7945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 630)
        visit_instruction_body_7946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 33), self_7945, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 630)
        visit_instruction_body_call_result_7951 = invoke(stypy.reporting.localization.Localization(__file__, 630, 33), visit_instruction_body_7946, *[orelse_7948, context_7949], **kwargs_7950)
        
        # Processing the call keyword arguments (line 630)
        kwargs_7952 = {}
        # Getting the type of 'while_stmt_orelse' (line 630)
        while_stmt_orelse_7943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'extend' of a type (line 630)
        extend_7944 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 8), while_stmt_orelse_7943, 'extend')
        # Calling extend(args, kwargs) (line 630)
        extend_call_result_7953 = invoke(stypy.reporting.localization.Localization(__file__, 630, 8), extend_7944, *[visit_instruction_body_call_result_7951], **kwargs_7952)
        
        
        # Call to append(...): (line 633)
        # Processing the call arguments (line 633)
        
        # Call to create_src_comment(...): (line 633)
        # Processing the call arguments (line 633)
        str_7958 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 73), 'str', 'SSA join for while statement')
        # Getting the type of 'node' (line 633)
        node_7959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 633)
        lineno_7960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 105), node_7959, 'lineno')
        # Processing the call keyword arguments (line 633)
        kwargs_7961 = {}
        # Getting the type of 'stypy_functions_copy' (line 633)
        stypy_functions_copy_7956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 633)
        create_src_comment_7957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 33), stypy_functions_copy_7956, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 633)
        create_src_comment_call_result_7962 = invoke(stypy.reporting.localization.Localization(__file__, 633, 33), create_src_comment_7957, *[str_7958, lineno_7960], **kwargs_7961)
        
        # Processing the call keyword arguments (line 633)
        kwargs_7963 = {}
        # Getting the type of 'while_stmt_orelse' (line 633)
        while_stmt_orelse_7954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 633)
        append_7955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 8), while_stmt_orelse_7954, 'append')
        # Calling append(args, kwargs) (line 633)
        append_call_result_7964 = invoke(stypy.reporting.localization.Localization(__file__, 633, 8), append_7955, *[create_src_comment_call_result_7962], **kwargs_7963)
        
        
        # Assigning a Call to a Tuple (line 634):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 634)
        # Processing the call keyword arguments (line 634)
        kwargs_7967 = {}
        # Getting the type of 'stypy_functions_copy' (line 634)
        stypy_functions_copy_7965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 634)
        create_clone_type_store_7966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 39), stypy_functions_copy_7965, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 634)
        create_clone_type_store_call_result_7968 = invoke(stypy.reporting.localization.Localization(__file__, 634, 39), create_clone_type_store_7966, *[], **kwargs_7967)
        
        # Assigning a type to the variable 'call_assignment_5761' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_5761', create_clone_type_store_call_result_7968)
        
        # Assigning a Call to a Name (line 634):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5761' (line 634)
        call_assignment_5761_7969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_5761', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7970 = stypy_get_value_from_tuple(call_assignment_5761_7969, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5762' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_5762', stypy_get_value_from_tuple_call_result_7970)
        
        # Assigning a Name to a Name (line 634):
        # Getting the type of 'call_assignment_5762' (line 634)
        call_assignment_5762_7971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_5762')
        # Assigning a type to the variable 'clone_stmt3' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'clone_stmt3', call_assignment_5762_7971)
        
        # Assigning a Call to a Name (line 634):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5761' (line 634)
        call_assignment_5761_7972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_5761', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7973 = stypy_get_value_from_tuple(call_assignment_5761_7972, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5763' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_5763', stypy_get_value_from_tuple_call_result_7973)
        
        # Assigning a Name to a Name (line 634):
        # Getting the type of 'call_assignment_5763' (line 634)
        call_assignment_5763_7974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_5763')
        # Assigning a type to the variable 'type_store_var3' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 21), 'type_store_var3', call_assignment_5763_7974)
        
        # Call to append(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'clone_stmt3' (line 635)
        clone_stmt3_7977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 33), 'clone_stmt3', False)
        # Processing the call keyword arguments (line 635)
        kwargs_7978 = {}
        # Getting the type of 'while_stmt_orelse' (line 635)
        while_stmt_orelse_7975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 635)
        append_7976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 8), while_stmt_orelse_7975, 'append')
        # Calling append(args, kwargs) (line 635)
        append_call_result_7979 = invoke(stypy.reporting.localization.Localization(__file__, 635, 8), append_7976, *[clone_stmt3_7977], **kwargs_7978)
        
        
        # Assigning a Call to a Tuple (line 637):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 637)
        # Processing the call arguments (line 637)
        str_7982 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 82), 'str', 'ssa_join_with_else_branch')
        
        # Obtaining an instance of the builtin type 'list' (line 638)
        list_7983 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 638)
        # Adding element type (line 638)
        # Getting the type of 'type_store_var1' (line 638)
        type_store_var1_7984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 78), 'type_store_var1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 77), list_7983, type_store_var1_7984)
        # Adding element type (line 638)
        # Getting the type of 'type_store_var2' (line 638)
        type_store_var2_7985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 95), 'type_store_var2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 77), list_7983, type_store_var2_7985)
        # Adding element type (line 638)
        # Getting the type of 'type_store_var3' (line 639)
        type_store_var3_7986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 78), 'type_store_var3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 77), list_7983, type_store_var3_7986)
        
        # Processing the call keyword arguments (line 637)
        kwargs_7987 = {}
        # Getting the type of 'stypy_functions_copy' (line 637)
        stypy_functions_copy_7980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 637)
        create_join_type_store_7981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 637, 38), stypy_functions_copy_7980, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 637)
        create_join_type_store_call_result_7988 = invoke(stypy.reporting.localization.Localization(__file__, 637, 38), create_join_type_store_7981, *[str_7982, list_7983], **kwargs_7987)
        
        # Assigning a type to the variable 'call_assignment_5764' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_5764', create_join_type_store_call_result_7988)
        
        # Assigning a Call to a Name (line 637):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5764' (line 637)
        call_assignment_5764_7989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_5764', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7990 = stypy_get_value_from_tuple(call_assignment_5764_7989, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5765' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_5765', stypy_get_value_from_tuple_call_result_7990)
        
        # Assigning a Name to a Name (line 637):
        # Getting the type of 'call_assignment_5765' (line 637)
        call_assignment_5765_7991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_5765')
        # Assigning a type to the variable 'join_stmt' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'join_stmt', call_assignment_5765_7991)
        
        # Assigning a Call to a Name (line 637):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5764' (line 637)
        call_assignment_5764_7992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_5764', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_7993 = stypy_get_value_from_tuple(call_assignment_5764_7992, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5766' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_5766', stypy_get_value_from_tuple_call_result_7993)
        
        # Assigning a Name to a Name (line 637):
        # Getting the type of 'call_assignment_5766' (line 637)
        call_assignment_5766_7994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_5766')
        # Assigning a type to the variable 'final_type_store' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 19), 'final_type_store', call_assignment_5766_7994)
        
        # Call to append(...): (line 640)
        # Processing the call arguments (line 640)
        # Getting the type of 'join_stmt' (line 640)
        join_stmt_7997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 33), 'join_stmt', False)
        # Processing the call keyword arguments (line 640)
        kwargs_7998 = {}
        # Getting the type of 'while_stmt_orelse' (line 640)
        while_stmt_orelse_7995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 640)
        append_7996 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 8), while_stmt_orelse_7995, 'append')
        # Calling append(args, kwargs) (line 640)
        append_call_result_7999 = invoke(stypy.reporting.localization.Localization(__file__, 640, 8), append_7996, *[join_stmt_7997], **kwargs_7998)
        
        
        # Assigning a Call to a Name (line 643):
        
        # Assigning a Call to a Name (line 643):
        
        # Call to create_set_type_store(...): (line 643)
        # Processing the call arguments (line 643)
        # Getting the type of 'final_type_store' (line 643)
        final_type_store_8002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 69), 'final_type_store', False)
        # Processing the call keyword arguments (line 643)
        kwargs_8003 = {}
        # Getting the type of 'stypy_functions_copy' (line 643)
        stypy_functions_copy_8000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 643)
        create_set_type_store_8001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 26), stypy_functions_copy_8000, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 643)
        create_set_type_store_call_result_8004 = invoke(stypy.reporting.localization.Localization(__file__, 643, 26), create_set_type_store_8001, *[final_type_store_8002], **kwargs_8003)
        
        # Assigning a type to the variable 'set_type_store2' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 8), 'set_type_store2', create_set_type_store_call_result_8004)
        
        # Call to append(...): (line 644)
        # Processing the call arguments (line 644)
        # Getting the type of 'set_type_store2' (line 644)
        set_type_store2_8007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 33), 'set_type_store2', False)
        # Processing the call keyword arguments (line 644)
        kwargs_8008 = {}
        # Getting the type of 'while_stmt_orelse' (line 644)
        while_stmt_orelse_8005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 644)
        append_8006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 8), while_stmt_orelse_8005, 'append')
        # Calling append(args, kwargs) (line 644)
        append_call_result_8009 = invoke(stypy.reporting.localization.Localization(__file__, 644, 8), append_8006, *[set_type_store2_8007], **kwargs_8008)
        
        
        # Assigning a BinOp to a Name (line 646):
        
        # Assigning a BinOp to a Name (line 646):
        # Getting the type of 'while_stmt_body' (line 646)
        while_stmt_body_8010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 26), 'while_stmt_body')
        # Getting the type of 'while_stmt_orelse' (line 646)
        while_stmt_orelse_8011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 44), 'while_stmt_orelse')
        # Applying the binary operator '+' (line 646)
        result_add_8012 = python_operator(stypy.reporting.localization.Localization(__file__, 646, 26), '+', while_stmt_body_8010, while_stmt_orelse_8011)
        
        # Assigning a type to the variable 'all_while_stmts' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 8), 'all_while_stmts', result_add_8012)
        
        # Assigning a Call to a Name (line 647):
        
        # Assigning a Call to a Name (line 647):
        
        # Call to flatten_lists(...): (line 647)
        # Processing the call arguments (line 647)
        # Getting the type of 'condition_comment' (line 647)
        condition_comment_8015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 56), 'condition_comment', False)
        # Getting the type of 'condition_call' (line 647)
        condition_call_8016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 75), 'condition_call', False)
        # Getting the type of 'all_while_stmts' (line 647)
        all_while_stmts_8017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 91), 'all_while_stmts', False)
        # Processing the call keyword arguments (line 647)
        kwargs_8018 = {}
        # Getting the type of 'stypy_functions_copy' (line 647)
        stypy_functions_copy_8013 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 21), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 647)
        flatten_lists_8014 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 21), stypy_functions_copy_8013, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 647)
        flatten_lists_call_result_8019 = invoke(stypy.reporting.localization.Localization(__file__, 647, 21), flatten_lists_8014, *[condition_comment_8015, condition_call_8016, all_while_stmts_8017], **kwargs_8018)
        
        # Assigning a type to the variable 'while_stmt' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 8), 'while_stmt', flatten_lists_call_result_8019)
        
        # Assigning a Call to a Name (line 649):
        
        # Assigning a Call to a Name (line 649):
        
        # Call to create_blank_line(...): (line 649)
        # Processing the call keyword arguments (line 649)
        kwargs_8022 = {}
        # Getting the type of 'stypy_functions_copy' (line 649)
        stypy_functions_copy_8020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 649)
        create_blank_line_8021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 28), stypy_functions_copy_8020, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 649)
        create_blank_line_call_result_8023 = invoke(stypy.reporting.localization.Localization(__file__, 649, 28), create_blank_line_8021, *[], **kwargs_8022)
        
        # Assigning a type to the variable 'end_while_comment' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'end_while_comment', create_blank_line_call_result_8023)
        
        # Call to flatten_lists(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'begin_while_comment' (line 650)
        begin_while_comment_8026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 50), 'begin_while_comment', False)
        # Getting the type of 'condition_stmt' (line 651)
        condition_stmt_8027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 45), 'condition_stmt', False)
        # Getting the type of 'while_stmt' (line 652)
        while_stmt_8028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 45), 'while_stmt', False)
        # Getting the type of 'end_while_comment' (line 653)
        end_while_comment_8029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 45), 'end_while_comment', False)
        # Processing the call keyword arguments (line 650)
        kwargs_8030 = {}
        # Getting the type of 'stypy_functions_copy' (line 650)
        stypy_functions_copy_8024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 650)
        flatten_lists_8025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 15), stypy_functions_copy_8024, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 650)
        flatten_lists_call_result_8031 = invoke(stypy.reporting.localization.Localization(__file__, 650, 15), flatten_lists_8025, *[begin_while_comment_8026, condition_stmt_8027, while_stmt_8028, end_while_comment_8029], **kwargs_8030)
        
        # Assigning a type to the variable 'stypy_return_type' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'stypy_return_type', flatten_lists_call_result_8031)
        
        # ################# End of 'visit_While(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_While' in the type store
        # Getting the type of 'stypy_return_type' (line 595)
        stypy_return_type_8032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8032)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_While'
        return stypy_return_type_8032


    @norecursion
    def visit_TryExcept(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_TryExcept'
        module_type_store = module_type_store.open_function_context('visit_TryExcept', 657, 4, False)
        # Assigning a type to the variable 'self' (line 658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_TryExcept')
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_TryExcept', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_TryExcept', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_TryExcept(...)' code ##################

        
        # Assigning a List to a Name (line 660):
        
        # Assigning a List to a Name (line 660):
        
        # Obtaining an instance of the builtin type 'list' (line 660)
        list_8033 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 660)
        
        # Assigning a type to the variable 'try_except_stmts' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'try_except_stmts', list_8033)
        
        # Assigning a List to a Name (line 661):
        
        # Assigning a List to a Name (line 661):
        
        # Obtaining an instance of the builtin type 'list' (line 661)
        list_8034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 661)
        
        # Assigning a type to the variable 'handler_type_stores' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 8), 'handler_type_stores', list_8034)
        
        # Assigning a Call to a Name (line 662):
        
        # Assigning a Call to a Name (line 662):
        
        # Call to create_blank_line(...): (line 662)
        # Processing the call keyword arguments (line 662)
        kwargs_8037 = {}
        # Getting the type of 'stypy_functions_copy' (line 662)
        stypy_functions_copy_8035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 662)
        create_blank_line_8036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 662, 31), stypy_functions_copy_8035, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 662)
        create_blank_line_call_result_8038 = invoke(stypy.reporting.localization.Localization(__file__, 662, 31), create_blank_line_8036, *[], **kwargs_8037)
        
        # Assigning a type to the variable 'begin_except_comment' (line 662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 662, 8), 'begin_except_comment', create_blank_line_call_result_8038)
        
        # Call to append(...): (line 665)
        # Processing the call arguments (line 665)
        
        # Call to create_src_comment(...): (line 665)
        # Processing the call arguments (line 665)
        str_8043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 72), 'str', 'SSA begins for try-except statement')
        # Getting the type of 'node' (line 665)
        node_8044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 111), 'node', False)
        # Obtaining the member 'lineno' of a type (line 665)
        lineno_8045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 111), node_8044, 'lineno')
        # Processing the call keyword arguments (line 665)
        kwargs_8046 = {}
        # Getting the type of 'stypy_functions_copy' (line 665)
        stypy_functions_copy_8041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 665)
        create_src_comment_8042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 32), stypy_functions_copy_8041, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 665)
        create_src_comment_call_result_8047 = invoke(stypy.reporting.localization.Localization(__file__, 665, 32), create_src_comment_8042, *[str_8043, lineno_8045], **kwargs_8046)
        
        # Processing the call keyword arguments (line 665)
        kwargs_8048 = {}
        # Getting the type of 'try_except_stmts' (line 665)
        try_except_stmts_8039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 665)
        append_8040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 8), try_except_stmts_8039, 'append')
        # Calling append(args, kwargs) (line 665)
        append_call_result_8049 = invoke(stypy.reporting.localization.Localization(__file__, 665, 8), append_8040, *[create_src_comment_call_result_8047], **kwargs_8048)
        
        
        # Assigning a Call to a Tuple (line 666):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 666)
        # Processing the call keyword arguments (line 666)
        kwargs_8052 = {}
        # Getting the type of 'stypy_functions_copy' (line 666)
        stypy_functions_copy_8050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 42), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 666)
        create_clone_type_store_8051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 42), stypy_functions_copy_8050, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 666)
        create_clone_type_store_call_result_8053 = invoke(stypy.reporting.localization.Localization(__file__, 666, 42), create_clone_type_store_8051, *[], **kwargs_8052)
        
        # Assigning a type to the variable 'call_assignment_5767' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_5767', create_clone_type_store_call_result_8053)
        
        # Assigning a Call to a Name (line 666):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5767' (line 666)
        call_assignment_5767_8054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_5767', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8055 = stypy_get_value_from_tuple(call_assignment_5767_8054, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5768' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_5768', stypy_get_value_from_tuple_call_result_8055)
        
        # Assigning a Name to a Name (line 666):
        # Getting the type of 'call_assignment_5768' (line 666)
        call_assignment_5768_8056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_5768')
        # Assigning a type to the variable 'clone_stmt1' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'clone_stmt1', call_assignment_5768_8056)
        
        # Assigning a Call to a Name (line 666):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5767' (line 666)
        call_assignment_5767_8057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_5767', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8058 = stypy_get_value_from_tuple(call_assignment_5767_8057, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5769' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_5769', stypy_get_value_from_tuple_call_result_8058)
        
        # Assigning a Name to a Name (line 666):
        # Getting the type of 'call_assignment_5769' (line 666)
        call_assignment_5769_8059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_5769')
        # Assigning a type to the variable 'pre_try_type_store' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 21), 'pre_try_type_store', call_assignment_5769_8059)
        
        # Call to append(...): (line 667)
        # Processing the call arguments (line 667)
        # Getting the type of 'clone_stmt1' (line 667)
        clone_stmt1_8062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 32), 'clone_stmt1', False)
        # Processing the call keyword arguments (line 667)
        kwargs_8063 = {}
        # Getting the type of 'try_except_stmts' (line 667)
        try_except_stmts_8060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 667)
        append_8061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 8), try_except_stmts_8060, 'append')
        # Calling append(args, kwargs) (line 667)
        append_call_result_8064 = invoke(stypy.reporting.localization.Localization(__file__, 667, 8), append_8061, *[clone_stmt1_8062], **kwargs_8063)
        
        
        # Call to extend(...): (line 670)
        # Processing the call arguments (line 670)
        
        # Call to __visit_instruction_body(...): (line 670)
        # Processing the call arguments (line 670)
        # Getting the type of 'node' (line 670)
        node_8069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 62), 'node', False)
        # Obtaining the member 'body' of a type (line 670)
        body_8070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 62), node_8069, 'body')
        # Getting the type of 'context' (line 670)
        context_8071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 73), 'context', False)
        # Processing the call keyword arguments (line 670)
        kwargs_8072 = {}
        # Getting the type of 'self' (line 670)
        self_8067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 32), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 670)
        visit_instruction_body_8068 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 32), self_8067, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 670)
        visit_instruction_body_call_result_8073 = invoke(stypy.reporting.localization.Localization(__file__, 670, 32), visit_instruction_body_8068, *[body_8070, context_8071], **kwargs_8072)
        
        # Processing the call keyword arguments (line 670)
        kwargs_8074 = {}
        # Getting the type of 'try_except_stmts' (line 670)
        try_except_stmts_8065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'try_except_stmts', False)
        # Obtaining the member 'extend' of a type (line 670)
        extend_8066 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 8), try_except_stmts_8065, 'extend')
        # Calling extend(args, kwargs) (line 670)
        extend_call_result_8075 = invoke(stypy.reporting.localization.Localization(__file__, 670, 8), extend_8066, *[visit_instruction_body_call_result_8073], **kwargs_8074)
        
        
        # Call to append(...): (line 672)
        # Processing the call arguments (line 672)
        
        # Call to create_src_comment(...): (line 673)
        # Processing the call arguments (line 673)
        str_8080 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 52), 'str', 'SSA branch for the except part of a try statement')
        # Getting the type of 'node' (line 673)
        node_8081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 673)
        lineno_8082 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 105), node_8081, 'lineno')
        # Processing the call keyword arguments (line 673)
        kwargs_8083 = {}
        # Getting the type of 'stypy_functions_copy' (line 673)
        stypy_functions_copy_8078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 673)
        create_src_comment_8079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 12), stypy_functions_copy_8078, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 673)
        create_src_comment_call_result_8084 = invoke(stypy.reporting.localization.Localization(__file__, 673, 12), create_src_comment_8079, *[str_8080, lineno_8082], **kwargs_8083)
        
        # Processing the call keyword arguments (line 672)
        kwargs_8085 = {}
        # Getting the type of 'try_except_stmts' (line 672)
        try_except_stmts_8076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 672)
        append_8077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 8), try_except_stmts_8076, 'append')
        # Calling append(args, kwargs) (line 672)
        append_call_result_8086 = invoke(stypy.reporting.localization.Localization(__file__, 672, 8), append_8077, *[create_src_comment_call_result_8084], **kwargs_8085)
        
        
        # Assigning a Call to a Tuple (line 674):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 674)
        # Processing the call keyword arguments (line 674)
        kwargs_8089 = {}
        # Getting the type of 'stypy_functions_copy' (line 674)
        stypy_functions_copy_8087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 43), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 674)
        create_clone_type_store_8088 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 43), stypy_functions_copy_8087, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 674)
        create_clone_type_store_call_result_8090 = invoke(stypy.reporting.localization.Localization(__file__, 674, 43), create_clone_type_store_8088, *[], **kwargs_8089)
        
        # Assigning a type to the variable 'call_assignment_5770' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_5770', create_clone_type_store_call_result_8090)
        
        # Assigning a Call to a Name (line 674):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5770' (line 674)
        call_assignment_5770_8091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_5770', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8092 = stypy_get_value_from_tuple(call_assignment_5770_8091, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5771' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_5771', stypy_get_value_from_tuple_call_result_8092)
        
        # Assigning a Name to a Name (line 674):
        # Getting the type of 'call_assignment_5771' (line 674)
        call_assignment_5771_8093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_5771')
        # Assigning a type to the variable 'clone_stmt2' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'clone_stmt2', call_assignment_5771_8093)
        
        # Assigning a Call to a Name (line 674):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5770' (line 674)
        call_assignment_5770_8094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_5770', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8095 = stypy_get_value_from_tuple(call_assignment_5770_8094, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5772' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_5772', stypy_get_value_from_tuple_call_result_8095)
        
        # Assigning a Name to a Name (line 674):
        # Getting the type of 'call_assignment_5772' (line 674)
        call_assignment_5772_8096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_5772')
        # Assigning a type to the variable 'post_try_type_store' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 21), 'post_try_type_store', call_assignment_5772_8096)
        
        # Call to append(...): (line 675)
        # Processing the call arguments (line 675)
        # Getting the type of 'clone_stmt2' (line 675)
        clone_stmt2_8099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 32), 'clone_stmt2', False)
        # Processing the call keyword arguments (line 675)
        kwargs_8100 = {}
        # Getting the type of 'try_except_stmts' (line 675)
        try_except_stmts_8097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 675)
        append_8098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 8), try_except_stmts_8097, 'append')
        # Calling append(args, kwargs) (line 675)
        append_call_result_8101 = invoke(stypy.reporting.localization.Localization(__file__, 675, 8), append_8098, *[clone_stmt2_8099], **kwargs_8100)
        
        
        # Getting the type of 'node' (line 678)
        node_8102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 23), 'node')
        # Obtaining the member 'handlers' of a type (line 678)
        handlers_8103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 23), node_8102, 'handlers')
        # Assigning a type to the variable 'handlers_8103' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'handlers_8103', handlers_8103)
        # Testing if the for loop is going to be iterated (line 678)
        # Testing the type of a for loop iterable (line 678)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 678, 8), handlers_8103)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 678, 8), handlers_8103):
            # Getting the type of the for loop variable (line 678)
            for_loop_var_8104 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 678, 8), handlers_8103)
            # Assigning a type to the variable 'handler' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'handler', for_loop_var_8104)
            # SSA begins for a for statement (line 678)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Type idiom detected: calculating its left and rigth part (line 679)
            # Getting the type of 'handler' (line 679)
            handler_8105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 15), 'handler')
            # Obtaining the member 'type' of a type (line 679)
            type_8106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 15), handler_8105, 'type')
            # Getting the type of 'None' (line 679)
            None_8107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 31), 'None')
            
            (may_be_8108, more_types_in_union_8109) = may_be_none(type_8106, None_8107)

            if may_be_8108:

                if more_types_in_union_8109:
                    # Runtime conditional SSA (line 679)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Str to a Name (line 680):
                
                # Assigning a Str to a Name (line 680):
                str_8110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 33), 'str', '<any exception>')
                # Assigning a type to the variable 'except_handler' (line 680)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 16), 'except_handler', str_8110)

                if more_types_in_union_8109:
                    # Runtime conditional SSA for else branch (line 679)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_8108) or more_types_in_union_8109):
                
                # Assigning a Attribute to a Name (line 682):
                
                # Assigning a Attribute to a Name (line 682):
                # Getting the type of 'handler' (line 682)
                handler_8111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 33), 'handler')
                # Obtaining the member 'type' of a type (line 682)
                type_8112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 33), handler_8111, 'type')
                # Obtaining the member 'id' of a type (line 682)
                id_8113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 33), type_8112, 'id')
                # Assigning a type to the variable 'except_handler' (line 682)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 16), 'except_handler', id_8113)

                if (may_be_8108 and more_types_in_union_8109):
                    # SSA join for if statement (line 679)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Call to append(...): (line 684)
            # Processing the call arguments (line 684)
            
            # Call to create_src_comment(...): (line 684)
            # Processing the call arguments (line 684)
            
            # Call to format(...): (line 685)
            # Processing the call arguments (line 685)
            # Getting the type of 'except_handler' (line 685)
            except_handler_8120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 83), 'except_handler', False)
            # Processing the call keyword arguments (line 685)
            kwargs_8121 = {}
            str_8118 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 16), 'str', "SSA branch for the except '{0}' branch of a try statement")
            # Obtaining the member 'format' of a type (line 685)
            format_8119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 16), str_8118, 'format')
            # Calling format(args, kwargs) (line 685)
            format_call_result_8122 = invoke(stypy.reporting.localization.Localization(__file__, 685, 16), format_8119, *[except_handler_8120], **kwargs_8121)
            
            # Getting the type of 'node' (line 685)
            node_8123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 100), 'node', False)
            # Obtaining the member 'lineno' of a type (line 685)
            lineno_8124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 100), node_8123, 'lineno')
            # Processing the call keyword arguments (line 684)
            kwargs_8125 = {}
            # Getting the type of 'stypy_functions_copy' (line 684)
            stypy_functions_copy_8116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 36), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 684)
            create_src_comment_8117 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 36), stypy_functions_copy_8116, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 684)
            create_src_comment_call_result_8126 = invoke(stypy.reporting.localization.Localization(__file__, 684, 36), create_src_comment_8117, *[format_call_result_8122, lineno_8124], **kwargs_8125)
            
            # Processing the call keyword arguments (line 684)
            kwargs_8127 = {}
            # Getting the type of 'try_except_stmts' (line 684)
            try_except_stmts_8114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 684)
            append_8115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 12), try_except_stmts_8114, 'append')
            # Calling append(args, kwargs) (line 684)
            append_call_result_8128 = invoke(stypy.reporting.localization.Localization(__file__, 684, 12), append_8115, *[create_src_comment_call_result_8126], **kwargs_8127)
            
            
            # Assigning a Call to a Name (line 687):
            
            # Assigning a Call to a Name (line 687):
            
            # Call to create_set_type_store(...): (line 687)
            # Processing the call arguments (line 687)
            # Getting the type of 'pre_try_type_store' (line 687)
            pre_try_type_store_8131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 80), 'pre_try_type_store', False)
            # Processing the call keyword arguments (line 687)
            kwargs_8132 = {}
            # Getting the type of 'stypy_functions_copy' (line 687)
            stypy_functions_copy_8129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 37), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_store' of a type (line 687)
            create_set_type_store_8130 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 687, 37), stypy_functions_copy_8129, 'create_set_type_store')
            # Calling create_set_type_store(args, kwargs) (line 687)
            create_set_type_store_call_result_8133 = invoke(stypy.reporting.localization.Localization(__file__, 687, 37), create_set_type_store_8130, *[pre_try_type_store_8131], **kwargs_8132)
            
            # Assigning a type to the variable 'set_type_store_handler' (line 687)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 12), 'set_type_store_handler', create_set_type_store_call_result_8133)
            
            # Call to append(...): (line 688)
            # Processing the call arguments (line 688)
            # Getting the type of 'set_type_store_handler' (line 688)
            set_type_store_handler_8136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 36), 'set_type_store_handler', False)
            # Processing the call keyword arguments (line 688)
            kwargs_8137 = {}
            # Getting the type of 'try_except_stmts' (line 688)
            try_except_stmts_8134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 688)
            append_8135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 12), try_except_stmts_8134, 'append')
            # Calling append(args, kwargs) (line 688)
            append_call_result_8138 = invoke(stypy.reporting.localization.Localization(__file__, 688, 12), append_8135, *[set_type_store_handler_8136], **kwargs_8137)
            
            
            # Evaluating a boolean operation
            
            
            # Getting the type of 'handler' (line 690)
            handler_8139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 19), 'handler')
            # Obtaining the member 'type' of a type (line 690)
            type_8140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 19), handler_8139, 'type')
            # Getting the type of 'None' (line 690)
            None_8141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 35), 'None')
            # Applying the binary operator 'is' (line 690)
            result_is__8142 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 19), 'is', type_8140, None_8141)
            
            # Applying the 'not' unary operator (line 690)
            result_not__8143 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 15), 'not', result_is__8142)
            
            
            
            # Getting the type of 'handler' (line 690)
            handler_8144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 48), 'handler')
            # Obtaining the member 'name' of a type (line 690)
            name_8145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 48), handler_8144, 'name')
            # Getting the type of 'None' (line 690)
            None_8146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 64), 'None')
            # Applying the binary operator 'is' (line 690)
            result_is__8147 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 48), 'is', name_8145, None_8146)
            
            # Applying the 'not' unary operator (line 690)
            result_not__8148 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 44), 'not', result_is__8147)
            
            # Applying the binary operator 'and' (line 690)
            result_and_keyword_8149 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 15), 'and', result_not__8143, result_not__8148)
            
            # Testing if the type of an if condition is none (line 690)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 690, 12), result_and_keyword_8149):
                pass
            else:
                
                # Testing the type of an if condition (line 690)
                if_condition_8150 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 690, 12), result_and_keyword_8149)
                # Assigning a type to the variable 'if_condition_8150' (line 690)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 12), 'if_condition_8150', if_condition_8150)
                # SSA begins for if statement (line 690)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 691)
                # Processing the call arguments (line 691)
                
                # Call to create_src_comment(...): (line 691)
                # Processing the call arguments (line 691)
                str_8155 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 80), 'str', 'Storing handler type')
                # Processing the call keyword arguments (line 691)
                kwargs_8156 = {}
                # Getting the type of 'stypy_functions_copy' (line 691)
                stypy_functions_copy_8153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 40), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 691)
                create_src_comment_8154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 40), stypy_functions_copy_8153, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 691)
                create_src_comment_call_result_8157 = invoke(stypy.reporting.localization.Localization(__file__, 691, 40), create_src_comment_8154, *[str_8155], **kwargs_8156)
                
                # Processing the call keyword arguments (line 691)
                kwargs_8158 = {}
                # Getting the type of 'try_except_stmts' (line 691)
                try_except_stmts_8151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 16), 'try_except_stmts', False)
                # Obtaining the member 'append' of a type (line 691)
                append_8152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 16), try_except_stmts_8151, 'append')
                # Calling append(args, kwargs) (line 691)
                append_call_result_8159 = invoke(stypy.reporting.localization.Localization(__file__, 691, 16), append_8152, *[create_src_comment_call_result_8157], **kwargs_8158)
                
                
                # Assigning a Call to a Tuple (line 692):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 692)
                # Processing the call arguments (line 692)
                # Getting the type of 'handler' (line 692)
                handler_8162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 65), 'handler', False)
                # Obtaining the member 'type' of a type (line 692)
                type_8163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 65), handler_8162, 'type')
                # Getting the type of 'context' (line 692)
                context_8164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 79), 'context', False)
                # Processing the call keyword arguments (line 692)
                kwargs_8165 = {}
                # Getting the type of 'self' (line 692)
                self_8160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 54), 'self', False)
                # Obtaining the member 'visit' of a type (line 692)
                visit_8161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 54), self_8160, 'visit')
                # Calling visit(args, kwargs) (line 692)
                visit_call_result_8166 = invoke(stypy.reporting.localization.Localization(__file__, 692, 54), visit_8161, *[type_8163, context_8164], **kwargs_8165)
                
                # Assigning a type to the variable 'call_assignment_5773' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_5773', visit_call_result_8166)
                
                # Assigning a Call to a Name (line 692):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5773' (line 692)
                call_assignment_5773_8167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_5773', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_8168 = stypy_get_value_from_tuple(call_assignment_5773_8167, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_5774' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_5774', stypy_get_value_from_tuple_call_result_8168)
                
                # Assigning a Name to a Name (line 692):
                # Getting the type of 'call_assignment_5774' (line 692)
                call_assignment_5774_8169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_5774')
                # Assigning a type to the variable 'handler_type_stmts' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'handler_type_stmts', call_assignment_5774_8169)
                
                # Assigning a Call to a Name (line 692):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_5773' (line 692)
                call_assignment_5773_8170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_5773', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_8171 = stypy_get_value_from_tuple(call_assignment_5773_8170, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_5775' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_5775', stypy_get_value_from_tuple_call_result_8171)
                
                # Assigning a Name to a Name (line 692):
                # Getting the type of 'call_assignment_5775' (line 692)
                call_assignment_5775_8172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_5775')
                # Assigning a type to the variable 'handle_type_var' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 36), 'handle_type_var', call_assignment_5775_8172)
                
                # Assigning a Call to a Name (line 693):
                
                # Assigning a Call to a Name (line 693):
                
                # Call to create_set_type_of(...): (line 693)
                # Processing the call arguments (line 693)
                # Getting the type of 'handler' (line 693)
                handler_8175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 78), 'handler', False)
                # Obtaining the member 'name' of a type (line 693)
                name_8176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 78), handler_8175, 'name')
                # Obtaining the member 'id' of a type (line 693)
                id_8177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 78), name_8176, 'id')
                # Getting the type of 'handle_type_var' (line 693)
                handle_type_var_8178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 95), 'handle_type_var', False)
                # Getting the type of 'handler' (line 694)
                handler_8179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 73), 'handler', False)
                # Obtaining the member 'lineno' of a type (line 694)
                lineno_8180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 73), handler_8179, 'lineno')
                # Getting the type of 'handler' (line 695)
                handler_8181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 73), 'handler', False)
                # Obtaining the member 'col_offset' of a type (line 695)
                col_offset_8182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 73), handler_8181, 'col_offset')
                # Processing the call keyword arguments (line 693)
                kwargs_8183 = {}
                # Getting the type of 'stypy_functions_copy' (line 693)
                stypy_functions_copy_8173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 38), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of' of a type (line 693)
                create_set_type_of_8174 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 38), stypy_functions_copy_8173, 'create_set_type_of')
                # Calling create_set_type_of(args, kwargs) (line 693)
                create_set_type_of_call_result_8184 = invoke(stypy.reporting.localization.Localization(__file__, 693, 38), create_set_type_of_8174, *[id_8177, handle_type_var_8178, lineno_8180, col_offset_8182], **kwargs_8183)
                
                # Assigning a type to the variable 'handler_name_assign' (line 693)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 16), 'handler_name_assign', create_set_type_of_call_result_8184)
                
                # Call to append(...): (line 696)
                # Processing the call arguments (line 696)
                # Getting the type of 'handler_type_stmts' (line 696)
                handler_type_stmts_8187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 40), 'handler_type_stmts', False)
                # Processing the call keyword arguments (line 696)
                kwargs_8188 = {}
                # Getting the type of 'try_except_stmts' (line 696)
                try_except_stmts_8185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 16), 'try_except_stmts', False)
                # Obtaining the member 'append' of a type (line 696)
                append_8186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 16), try_except_stmts_8185, 'append')
                # Calling append(args, kwargs) (line 696)
                append_call_result_8189 = invoke(stypy.reporting.localization.Localization(__file__, 696, 16), append_8186, *[handler_type_stmts_8187], **kwargs_8188)
                
                
                # Call to append(...): (line 697)
                # Processing the call arguments (line 697)
                # Getting the type of 'handler_name_assign' (line 697)
                handler_name_assign_8192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 40), 'handler_name_assign', False)
                # Processing the call keyword arguments (line 697)
                kwargs_8193 = {}
                # Getting the type of 'try_except_stmts' (line 697)
                try_except_stmts_8190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 16), 'try_except_stmts', False)
                # Obtaining the member 'append' of a type (line 697)
                append_8191 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 16), try_except_stmts_8190, 'append')
                # Calling append(args, kwargs) (line 697)
                append_call_result_8194 = invoke(stypy.reporting.localization.Localization(__file__, 697, 16), append_8191, *[handler_name_assign_8192], **kwargs_8193)
                
                # SSA join for if statement (line 690)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to extend(...): (line 700)
            # Processing the call arguments (line 700)
            
            # Call to __visit_instruction_body(...): (line 700)
            # Processing the call arguments (line 700)
            # Getting the type of 'handler' (line 700)
            handler_8199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 66), 'handler', False)
            # Obtaining the member 'body' of a type (line 700)
            body_8200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 66), handler_8199, 'body')
            # Getting the type of 'context' (line 700)
            context_8201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 80), 'context', False)
            # Processing the call keyword arguments (line 700)
            kwargs_8202 = {}
            # Getting the type of 'self' (line 700)
            self_8197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 36), 'self', False)
            # Obtaining the member '__visit_instruction_body' of a type (line 700)
            visit_instruction_body_8198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 36), self_8197, '__visit_instruction_body')
            # Calling __visit_instruction_body(args, kwargs) (line 700)
            visit_instruction_body_call_result_8203 = invoke(stypy.reporting.localization.Localization(__file__, 700, 36), visit_instruction_body_8198, *[body_8200, context_8201], **kwargs_8202)
            
            # Processing the call keyword arguments (line 700)
            kwargs_8204 = {}
            # Getting the type of 'try_except_stmts' (line 700)
            try_except_stmts_8195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 12), 'try_except_stmts', False)
            # Obtaining the member 'extend' of a type (line 700)
            extend_8196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 12), try_except_stmts_8195, 'extend')
            # Calling extend(args, kwargs) (line 700)
            extend_call_result_8205 = invoke(stypy.reporting.localization.Localization(__file__, 700, 12), extend_8196, *[visit_instruction_body_call_result_8203], **kwargs_8204)
            
            
            # Assigning a Call to a Tuple (line 702):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 702)
            # Processing the call keyword arguments (line 702)
            kwargs_8208 = {}
            # Getting the type of 'stypy_functions_copy' (line 702)
            stypy_functions_copy_8206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 60), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 702)
            create_clone_type_store_8207 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 60), stypy_functions_copy_8206, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 702)
            create_clone_type_store_call_result_8209 = invoke(stypy.reporting.localization.Localization(__file__, 702, 60), create_clone_type_store_8207, *[], **kwargs_8208)
            
            # Assigning a type to the variable 'call_assignment_5776' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_5776', create_clone_type_store_call_result_8209)
            
            # Assigning a Call to a Name (line 702):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5776' (line 702)
            call_assignment_5776_8210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_5776', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8211 = stypy_get_value_from_tuple(call_assignment_5776_8210, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5777' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_5777', stypy_get_value_from_tuple_call_result_8211)
            
            # Assigning a Name to a Name (line 702):
            # Getting the type of 'call_assignment_5777' (line 702)
            call_assignment_5777_8212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_5777')
            # Assigning a type to the variable 'clone_stmt_handler' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'clone_stmt_handler', call_assignment_5777_8212)
            
            # Assigning a Call to a Name (line 702):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5776' (line 702)
            call_assignment_5776_8213 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_5776', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8214 = stypy_get_value_from_tuple(call_assignment_5776_8213, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5778' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_5778', stypy_get_value_from_tuple_call_result_8214)
            
            # Assigning a Name to a Name (line 702):
            # Getting the type of 'call_assignment_5778' (line 702)
            call_assignment_5778_8215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_5778')
            # Assigning a type to the variable 'type_store_except_handler' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 32), 'type_store_except_handler', call_assignment_5778_8215)
            
            # Call to append(...): (line 703)
            # Processing the call arguments (line 703)
            # Getting the type of 'clone_stmt_handler' (line 703)
            clone_stmt_handler_8218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 36), 'clone_stmt_handler', False)
            # Processing the call keyword arguments (line 703)
            kwargs_8219 = {}
            # Getting the type of 'try_except_stmts' (line 703)
            try_except_stmts_8216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 703)
            append_8217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 12), try_except_stmts_8216, 'append')
            # Calling append(args, kwargs) (line 703)
            append_call_result_8220 = invoke(stypy.reporting.localization.Localization(__file__, 703, 12), append_8217, *[clone_stmt_handler_8218], **kwargs_8219)
            
            
            # Call to append(...): (line 704)
            # Processing the call arguments (line 704)
            # Getting the type of 'type_store_except_handler' (line 704)
            type_store_except_handler_8223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 39), 'type_store_except_handler', False)
            # Processing the call keyword arguments (line 704)
            kwargs_8224 = {}
            # Getting the type of 'handler_type_stores' (line 704)
            handler_type_stores_8221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 12), 'handler_type_stores', False)
            # Obtaining the member 'append' of a type (line 704)
            append_8222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 12), handler_type_stores_8221, 'append')
            # Calling append(args, kwargs) (line 704)
            append_call_result_8225 = invoke(stypy.reporting.localization.Localization(__file__, 704, 12), append_8222, *[type_store_except_handler_8223], **kwargs_8224)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to append(...): (line 707)
        # Processing the call arguments (line 707)
        
        # Call to create_src_comment(...): (line 707)
        # Processing the call arguments (line 707)
        str_8230 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 12), 'str', 'SSA branch for the else branch of a try statement')
        # Getting the type of 'node' (line 708)
        node_8231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 65), 'node', False)
        # Obtaining the member 'lineno' of a type (line 708)
        lineno_8232 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 65), node_8231, 'lineno')
        # Processing the call keyword arguments (line 707)
        kwargs_8233 = {}
        # Getting the type of 'stypy_functions_copy' (line 707)
        stypy_functions_copy_8228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 707)
        create_src_comment_8229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 32), stypy_functions_copy_8228, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 707)
        create_src_comment_call_result_8234 = invoke(stypy.reporting.localization.Localization(__file__, 707, 32), create_src_comment_8229, *[str_8230, lineno_8232], **kwargs_8233)
        
        # Processing the call keyword arguments (line 707)
        kwargs_8235 = {}
        # Getting the type of 'try_except_stmts' (line 707)
        try_except_stmts_8226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 707)
        append_8227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 8), try_except_stmts_8226, 'append')
        # Calling append(args, kwargs) (line 707)
        append_call_result_8236 = invoke(stypy.reporting.localization.Localization(__file__, 707, 8), append_8227, *[create_src_comment_call_result_8234], **kwargs_8235)
        
        
        # Assigning a Call to a Name (line 709):
        
        # Assigning a Call to a Name (line 709):
        
        # Call to create_set_type_store(...): (line 709)
        # Processing the call arguments (line 709)
        # Getting the type of 'pre_try_type_store' (line 709)
        pre_try_type_store_8239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 76), 'pre_try_type_store', False)
        # Processing the call keyword arguments (line 709)
        kwargs_8240 = {}
        # Getting the type of 'stypy_functions_copy' (line 709)
        stypy_functions_copy_8237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 709)
        create_set_type_store_8238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 33), stypy_functions_copy_8237, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 709)
        create_set_type_store_call_result_8241 = invoke(stypy.reporting.localization.Localization(__file__, 709, 33), create_set_type_store_8238, *[pre_try_type_store_8239], **kwargs_8240)
        
        # Assigning a type to the variable 'set_type_store_handler' (line 709)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 8), 'set_type_store_handler', create_set_type_store_call_result_8241)
        
        # Call to append(...): (line 710)
        # Processing the call arguments (line 710)
        # Getting the type of 'set_type_store_handler' (line 710)
        set_type_store_handler_8244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 32), 'set_type_store_handler', False)
        # Processing the call keyword arguments (line 710)
        kwargs_8245 = {}
        # Getting the type of 'try_except_stmts' (line 710)
        try_except_stmts_8242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 710)
        append_8243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 8), try_except_stmts_8242, 'append')
        # Calling append(args, kwargs) (line 710)
        append_call_result_8246 = invoke(stypy.reporting.localization.Localization(__file__, 710, 8), append_8243, *[set_type_store_handler_8244], **kwargs_8245)
        
        
        
        # Call to len(...): (line 713)
        # Processing the call arguments (line 713)
        # Getting the type of 'node' (line 713)
        node_8248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 15), 'node', False)
        # Obtaining the member 'orelse' of a type (line 713)
        orelse_8249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 15), node_8248, 'orelse')
        # Processing the call keyword arguments (line 713)
        kwargs_8250 = {}
        # Getting the type of 'len' (line 713)
        len_8247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 11), 'len', False)
        # Calling len(args, kwargs) (line 713)
        len_call_result_8251 = invoke(stypy.reporting.localization.Localization(__file__, 713, 11), len_8247, *[orelse_8249], **kwargs_8250)
        
        int_8252 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 30), 'int')
        # Applying the binary operator '>' (line 713)
        result_gt_8253 = python_operator(stypy.reporting.localization.Localization(__file__, 713, 11), '>', len_call_result_8251, int_8252)
        
        # Testing if the type of an if condition is none (line 713)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 713, 8), result_gt_8253):
            pass
        else:
            
            # Testing the type of an if condition (line 713)
            if_condition_8254 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 713, 8), result_gt_8253)
            # Assigning a type to the variable 'if_condition_8254' (line 713)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'if_condition_8254', if_condition_8254)
            # SSA begins for if statement (line 713)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to extend(...): (line 714)
            # Processing the call arguments (line 714)
            
            # Call to __visit_instruction_body(...): (line 714)
            # Processing the call arguments (line 714)
            # Getting the type of 'node' (line 714)
            node_8259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 66), 'node', False)
            # Obtaining the member 'orelse' of a type (line 714)
            orelse_8260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 66), node_8259, 'orelse')
            # Getting the type of 'context' (line 714)
            context_8261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 79), 'context', False)
            # Processing the call keyword arguments (line 714)
            kwargs_8262 = {}
            # Getting the type of 'self' (line 714)
            self_8257 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 36), 'self', False)
            # Obtaining the member '__visit_instruction_body' of a type (line 714)
            visit_instruction_body_8258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 36), self_8257, '__visit_instruction_body')
            # Calling __visit_instruction_body(args, kwargs) (line 714)
            visit_instruction_body_call_result_8263 = invoke(stypy.reporting.localization.Localization(__file__, 714, 36), visit_instruction_body_8258, *[orelse_8260, context_8261], **kwargs_8262)
            
            # Processing the call keyword arguments (line 714)
            kwargs_8264 = {}
            # Getting the type of 'try_except_stmts' (line 714)
            try_except_stmts_8255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 12), 'try_except_stmts', False)
            # Obtaining the member 'extend' of a type (line 714)
            extend_8256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 12), try_except_stmts_8255, 'extend')
            # Calling extend(args, kwargs) (line 714)
            extend_call_result_8265 = invoke(stypy.reporting.localization.Localization(__file__, 714, 12), extend_8256, *[visit_instruction_body_call_result_8263], **kwargs_8264)
            
            
            # Assigning a Call to a Tuple (line 716):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 716)
            # Processing the call keyword arguments (line 716)
            kwargs_8268 = {}
            # Getting the type of 'stypy_functions_copy' (line 716)
            stypy_functions_copy_8266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 58), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 716)
            create_clone_type_store_8267 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 716, 58), stypy_functions_copy_8266, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 716)
            create_clone_type_store_call_result_8269 = invoke(stypy.reporting.localization.Localization(__file__, 716, 58), create_clone_type_store_8267, *[], **kwargs_8268)
            
            # Assigning a type to the variable 'call_assignment_5779' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_5779', create_clone_type_store_call_result_8269)
            
            # Assigning a Call to a Name (line 716):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5779' (line 716)
            call_assignment_5779_8270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_5779', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8271 = stypy_get_value_from_tuple(call_assignment_5779_8270, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5780' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_5780', stypy_get_value_from_tuple_call_result_8271)
            
            # Assigning a Name to a Name (line 716):
            # Getting the type of 'call_assignment_5780' (line 716)
            call_assignment_5780_8272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_5780')
            # Assigning a type to the variable 'clone_stmt_handler' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'clone_stmt_handler', call_assignment_5780_8272)
            
            # Assigning a Call to a Name (line 716):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5779' (line 716)
            call_assignment_5779_8273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_5779', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8274 = stypy_get_value_from_tuple(call_assignment_5779_8273, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5781' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_5781', stypy_get_value_from_tuple_call_result_8274)
            
            # Assigning a Name to a Name (line 716):
            # Getting the type of 'call_assignment_5781' (line 716)
            call_assignment_5781_8275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_5781')
            # Assigning a type to the variable 'type_store_else_handler' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 32), 'type_store_else_handler', call_assignment_5781_8275)
            
            # Call to append(...): (line 717)
            # Processing the call arguments (line 717)
            # Getting the type of 'clone_stmt_handler' (line 717)
            clone_stmt_handler_8278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 36), 'clone_stmt_handler', False)
            # Processing the call keyword arguments (line 717)
            kwargs_8279 = {}
            # Getting the type of 'try_except_stmts' (line 717)
            try_except_stmts_8276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 717)
            append_8277 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 12), try_except_stmts_8276, 'append')
            # Calling append(args, kwargs) (line 717)
            append_call_result_8280 = invoke(stypy.reporting.localization.Localization(__file__, 717, 12), append_8277, *[clone_stmt_handler_8278], **kwargs_8279)
            
            
            # Call to append(...): (line 718)
            # Processing the call arguments (line 718)
            # Getting the type of 'type_store_else_handler' (line 718)
            type_store_else_handler_8283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 39), 'type_store_else_handler', False)
            # Processing the call keyword arguments (line 718)
            kwargs_8284 = {}
            # Getting the type of 'handler_type_stores' (line 718)
            handler_type_stores_8281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 12), 'handler_type_stores', False)
            # Obtaining the member 'append' of a type (line 718)
            append_8282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 12), handler_type_stores_8281, 'append')
            # Calling append(args, kwargs) (line 718)
            append_call_result_8285 = invoke(stypy.reporting.localization.Localization(__file__, 718, 12), append_8282, *[type_store_else_handler_8283], **kwargs_8284)
            
            # SSA join for if statement (line 713)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 721)
        # Processing the call arguments (line 721)
        
        # Call to create_src_comment(...): (line 721)
        # Processing the call arguments (line 721)
        str_8290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 72), 'str', 'SSA join for try-except statement')
        # Getting the type of 'node' (line 721)
        node_8291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 109), 'node', False)
        # Obtaining the member 'lineno' of a type (line 721)
        lineno_8292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 109), node_8291, 'lineno')
        # Processing the call keyword arguments (line 721)
        kwargs_8293 = {}
        # Getting the type of 'stypy_functions_copy' (line 721)
        stypy_functions_copy_8288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 721)
        create_src_comment_8289 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 32), stypy_functions_copy_8288, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 721)
        create_src_comment_call_result_8294 = invoke(stypy.reporting.localization.Localization(__file__, 721, 32), create_src_comment_8289, *[str_8290, lineno_8292], **kwargs_8293)
        
        # Processing the call keyword arguments (line 721)
        kwargs_8295 = {}
        # Getting the type of 'try_except_stmts' (line 721)
        try_except_stmts_8286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 721)
        append_8287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 8), try_except_stmts_8286, 'append')
        # Calling append(args, kwargs) (line 721)
        append_call_result_8296 = invoke(stypy.reporting.localization.Localization(__file__, 721, 8), append_8287, *[create_src_comment_call_result_8294], **kwargs_8295)
        
        
        # Assigning a Call to a Tuple (line 722):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 722)
        # Processing the call arguments (line 722)
        str_8299 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 82), 'str', 'join_exception_block')
        
        # Obtaining an instance of the builtin type 'list' (line 723)
        list_8300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 723)
        # Adding element type (line 723)
        # Getting the type of 'pre_try_type_store' (line 723)
        pre_try_type_store_8301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 78), 'pre_try_type_store', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 77), list_8300, pre_try_type_store_8301)
        # Adding element type (line 723)
        # Getting the type of 'post_try_type_store' (line 723)
        post_try_type_store_8302 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 98), 'post_try_type_store', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 77), list_8300, post_try_type_store_8302)
        # Adding element type (line 723)
        
        # Call to create_Name(...): (line 724)
        # Processing the call arguments (line 724)
        str_8305 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 82), 'str', 'None')
        # Processing the call keyword arguments (line 724)
        kwargs_8306 = {}
        # Getting the type of 'core_language_copy' (line 724)
        core_language_copy_8303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 78), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 724)
        create_Name_8304 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 78), core_language_copy_8303, 'create_Name')
        # Calling create_Name(args, kwargs) (line 724)
        create_Name_call_result_8307 = invoke(stypy.reporting.localization.Localization(__file__, 724, 78), create_Name_8304, *[str_8305], **kwargs_8306)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 77), list_8300, create_Name_call_result_8307)
        
        # Getting the type of 'handler_type_stores' (line 725)
        handler_type_stores_8308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 93), 'handler_type_stores', False)
        # Applying the binary operator '+' (line 723)
        result_add_8309 = python_operator(stypy.reporting.localization.Localization(__file__, 723, 77), '+', list_8300, handler_type_stores_8308)
        
        # Processing the call keyword arguments (line 722)
        kwargs_8310 = {}
        # Getting the type of 'stypy_functions_copy' (line 722)
        stypy_functions_copy_8297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 722)
        create_join_type_store_8298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 38), stypy_functions_copy_8297, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 722)
        create_join_type_store_call_result_8311 = invoke(stypy.reporting.localization.Localization(__file__, 722, 38), create_join_type_store_8298, *[str_8299, result_add_8309], **kwargs_8310)
        
        # Assigning a type to the variable 'call_assignment_5782' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_5782', create_join_type_store_call_result_8311)
        
        # Assigning a Call to a Name (line 722):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5782' (line 722)
        call_assignment_5782_8312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_5782', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8313 = stypy_get_value_from_tuple(call_assignment_5782_8312, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5783' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_5783', stypy_get_value_from_tuple_call_result_8313)
        
        # Assigning a Name to a Name (line 722):
        # Getting the type of 'call_assignment_5783' (line 722)
        call_assignment_5783_8314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_5783')
        # Assigning a type to the variable 'join_stmt' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'join_stmt', call_assignment_5783_8314)
        
        # Assigning a Call to a Name (line 722):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5782' (line 722)
        call_assignment_5782_8315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_5782', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8316 = stypy_get_value_from_tuple(call_assignment_5782_8315, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5784' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_5784', stypy_get_value_from_tuple_call_result_8316)
        
        # Assigning a Name to a Name (line 722):
        # Getting the type of 'call_assignment_5784' (line 722)
        call_assignment_5784_8317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_5784')
        # Assigning a type to the variable 'final_type_store' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 19), 'final_type_store', call_assignment_5784_8317)
        
        # Call to append(...): (line 726)
        # Processing the call arguments (line 726)
        # Getting the type of 'join_stmt' (line 726)
        join_stmt_8320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 32), 'join_stmt', False)
        # Processing the call keyword arguments (line 726)
        kwargs_8321 = {}
        # Getting the type of 'try_except_stmts' (line 726)
        try_except_stmts_8318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 726)
        append_8319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 8), try_except_stmts_8318, 'append')
        # Calling append(args, kwargs) (line 726)
        append_call_result_8322 = invoke(stypy.reporting.localization.Localization(__file__, 726, 8), append_8319, *[join_stmt_8320], **kwargs_8321)
        
        
        # Assigning a Call to a Name (line 729):
        
        # Assigning a Call to a Name (line 729):
        
        # Call to create_set_type_store(...): (line 729)
        # Processing the call arguments (line 729)
        # Getting the type of 'final_type_store' (line 729)
        final_type_store_8325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 74), 'final_type_store', False)
        # Processing the call keyword arguments (line 729)
        kwargs_8326 = {}
        # Getting the type of 'stypy_functions_copy' (line 729)
        stypy_functions_copy_8323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 729)
        create_set_type_store_8324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 31), stypy_functions_copy_8323, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 729)
        create_set_type_store_call_result_8327 = invoke(stypy.reporting.localization.Localization(__file__, 729, 31), create_set_type_store_8324, *[final_type_store_8325], **kwargs_8326)
        
        # Assigning a type to the variable 'set_type_store_final' (line 729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 729, 8), 'set_type_store_final', create_set_type_store_call_result_8327)
        
        # Call to append(...): (line 730)
        # Processing the call arguments (line 730)
        # Getting the type of 'set_type_store_final' (line 730)
        set_type_store_final_8330 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 32), 'set_type_store_final', False)
        # Processing the call keyword arguments (line 730)
        kwargs_8331 = {}
        # Getting the type of 'try_except_stmts' (line 730)
        try_except_stmts_8328 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 730)
        append_8329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 8), try_except_stmts_8328, 'append')
        # Calling append(args, kwargs) (line 730)
        append_call_result_8332 = invoke(stypy.reporting.localization.Localization(__file__, 730, 8), append_8329, *[set_type_store_final_8330], **kwargs_8331)
        
        
        # Assigning a Call to a Name (line 733):
        
        # Assigning a Call to a Name (line 733):
        
        # Call to flatten_lists(...): (line 733)
        # Processing the call arguments (line 733)
        # Getting the type of 'begin_except_comment' (line 733)
        begin_except_comment_8335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 65), 'begin_except_comment', False)
        # Getting the type of 'try_except_stmts' (line 733)
        try_except_stmts_8336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 87), 'try_except_stmts', False)
        # Processing the call keyword arguments (line 733)
        kwargs_8337 = {}
        # Getting the type of 'stypy_functions_copy' (line 733)
        stypy_functions_copy_8333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 30), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 733)
        flatten_lists_8334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 30), stypy_functions_copy_8333, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 733)
        flatten_lists_call_result_8338 = invoke(stypy.reporting.localization.Localization(__file__, 733, 30), flatten_lists_8334, *[begin_except_comment_8335, try_except_stmts_8336], **kwargs_8337)
        
        # Assigning a type to the variable 'all_try_except_stmt' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 8), 'all_try_except_stmt', flatten_lists_call_result_8338)
        
        # Assigning a Call to a Name (line 735):
        
        # Assigning a Call to a Name (line 735):
        
        # Call to create_blank_line(...): (line 735)
        # Processing the call keyword arguments (line 735)
        kwargs_8341 = {}
        # Getting the type of 'stypy_functions_copy' (line 735)
        stypy_functions_copy_8339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 29), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 735)
        create_blank_line_8340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 29), stypy_functions_copy_8339, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 735)
        create_blank_line_call_result_8342 = invoke(stypy.reporting.localization.Localization(__file__, 735, 29), create_blank_line_8340, *[], **kwargs_8341)
        
        # Assigning a type to the variable 'end_except_comment' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'end_except_comment', create_blank_line_call_result_8342)
        
        # Call to flatten_lists(...): (line 737)
        # Processing the call arguments (line 737)
        # Getting the type of 'begin_except_comment' (line 737)
        begin_except_comment_8345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 50), 'begin_except_comment', False)
        # Getting the type of 'all_try_except_stmt' (line 738)
        all_try_except_stmt_8346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 45), 'all_try_except_stmt', False)
        # Getting the type of 'end_except_comment' (line 739)
        end_except_comment_8347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 45), 'end_except_comment', False)
        # Processing the call keyword arguments (line 737)
        kwargs_8348 = {}
        # Getting the type of 'stypy_functions_copy' (line 737)
        stypy_functions_copy_8343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 737)
        flatten_lists_8344 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 15), stypy_functions_copy_8343, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 737)
        flatten_lists_call_result_8349 = invoke(stypy.reporting.localization.Localization(__file__, 737, 15), flatten_lists_8344, *[begin_except_comment_8345, all_try_except_stmt_8346, end_except_comment_8347], **kwargs_8348)
        
        # Assigning a type to the variable 'stypy_return_type' (line 737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 8), 'stypy_return_type', flatten_lists_call_result_8349)
        
        # ################# End of 'visit_TryExcept(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_TryExcept' in the type store
        # Getting the type of 'stypy_return_type' (line 657)
        stypy_return_type_8350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8350)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_TryExcept'
        return stypy_return_type_8350


    @norecursion
    def visit_TryFinally(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_TryFinally'
        module_type_store = module_type_store.open_function_context('visit_TryFinally', 741, 4, False)
        # Assigning a type to the variable 'self' (line 742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_TryFinally')
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_TryFinally', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_TryFinally', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_TryFinally(...)' code ##################

        
        # Assigning a List to a Name (line 743):
        
        # Assigning a List to a Name (line 743):
        
        # Obtaining an instance of the builtin type 'list' (line 743)
        list_8351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 743)
        
        # Assigning a type to the variable 'try_finally_stmts' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'try_finally_stmts', list_8351)
        
        # Assigning a Call to a Name (line 745):
        
        # Assigning a Call to a Name (line 745):
        
        # Call to create_src_comment(...): (line 745)
        # Processing the call arguments (line 745)
        str_8354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 66), 'str', 'Try-finally block')
        # Getting the type of 'node' (line 745)
        node_8355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 745)
        lineno_8356 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 87), node_8355, 'lineno')
        # Processing the call keyword arguments (line 745)
        kwargs_8357 = {}
        # Getting the type of 'stypy_functions_copy' (line 745)
        stypy_functions_copy_8352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 745)
        create_src_comment_8353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 26), stypy_functions_copy_8352, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 745)
        create_src_comment_call_result_8358 = invoke(stypy.reporting.localization.Localization(__file__, 745, 26), create_src_comment_8353, *[str_8354, lineno_8356], **kwargs_8357)
        
        # Assigning a type to the variable 'initial_comment' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'initial_comment', create_src_comment_call_result_8358)
        
        # Call to append(...): (line 746)
        # Processing the call arguments (line 746)
        # Getting the type of 'initial_comment' (line 746)
        initial_comment_8361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 33), 'initial_comment', False)
        # Processing the call keyword arguments (line 746)
        kwargs_8362 = {}
        # Getting the type of 'try_finally_stmts' (line 746)
        try_finally_stmts_8359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 8), 'try_finally_stmts', False)
        # Obtaining the member 'append' of a type (line 746)
        append_8360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 8), try_finally_stmts_8359, 'append')
        # Calling append(args, kwargs) (line 746)
        append_call_result_8363 = invoke(stypy.reporting.localization.Localization(__file__, 746, 8), append_8360, *[initial_comment_8361], **kwargs_8362)
        
        
        # Call to extend(...): (line 749)
        # Processing the call arguments (line 749)
        
        # Call to __visit_instruction_body(...): (line 749)
        # Processing the call arguments (line 749)
        # Getting the type of 'node' (line 749)
        node_8368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 63), 'node', False)
        # Obtaining the member 'body' of a type (line 749)
        body_8369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 63), node_8368, 'body')
        # Getting the type of 'context' (line 749)
        context_8370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 74), 'context', False)
        # Processing the call keyword arguments (line 749)
        kwargs_8371 = {}
        # Getting the type of 'self' (line 749)
        self_8366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 749)
        visit_instruction_body_8367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 33), self_8366, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 749)
        visit_instruction_body_call_result_8372 = invoke(stypy.reporting.localization.Localization(__file__, 749, 33), visit_instruction_body_8367, *[body_8369, context_8370], **kwargs_8371)
        
        # Processing the call keyword arguments (line 749)
        kwargs_8373 = {}
        # Getting the type of 'try_finally_stmts' (line 749)
        try_finally_stmts_8364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 8), 'try_finally_stmts', False)
        # Obtaining the member 'extend' of a type (line 749)
        extend_8365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 8), try_finally_stmts_8364, 'extend')
        # Calling extend(args, kwargs) (line 749)
        extend_call_result_8374 = invoke(stypy.reporting.localization.Localization(__file__, 749, 8), extend_8365, *[visit_instruction_body_call_result_8372], **kwargs_8373)
        
        
        # Call to append(...): (line 751)
        # Processing the call arguments (line 751)
        
        # Call to create_blank_line(...): (line 751)
        # Processing the call keyword arguments (line 751)
        kwargs_8379 = {}
        # Getting the type of 'stypy_functions_copy' (line 751)
        stypy_functions_copy_8377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 751)
        create_blank_line_8378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 33), stypy_functions_copy_8377, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 751)
        create_blank_line_call_result_8380 = invoke(stypy.reporting.localization.Localization(__file__, 751, 33), create_blank_line_8378, *[], **kwargs_8379)
        
        # Processing the call keyword arguments (line 751)
        kwargs_8381 = {}
        # Getting the type of 'try_finally_stmts' (line 751)
        try_finally_stmts_8375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'try_finally_stmts', False)
        # Obtaining the member 'append' of a type (line 751)
        append_8376 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 8), try_finally_stmts_8375, 'append')
        # Calling append(args, kwargs) (line 751)
        append_call_result_8382 = invoke(stypy.reporting.localization.Localization(__file__, 751, 8), append_8376, *[create_blank_line_call_result_8380], **kwargs_8381)
        
        
        # Assigning a Call to a Name (line 752):
        
        # Assigning a Call to a Name (line 752):
        
        # Call to create_src_comment(...): (line 752)
        # Processing the call arguments (line 752)
        str_8385 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 66), 'str', 'finally branch of the try-finally block')
        # Getting the type of 'node' (line 753)
        node_8386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 61), 'node', False)
        # Obtaining the member 'lineno' of a type (line 753)
        lineno_8387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 61), node_8386, 'lineno')
        # Processing the call keyword arguments (line 752)
        kwargs_8388 = {}
        # Getting the type of 'stypy_functions_copy' (line 752)
        stypy_functions_copy_8383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 752)
        create_src_comment_8384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 26), stypy_functions_copy_8383, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 752)
        create_src_comment_call_result_8389 = invoke(stypy.reporting.localization.Localization(__file__, 752, 26), create_src_comment_8384, *[str_8385, lineno_8387], **kwargs_8388)
        
        # Assigning a type to the variable 'finally_comment' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'finally_comment', create_src_comment_call_result_8389)
        
        # Call to append(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 'finally_comment' (line 754)
        finally_comment_8392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 33), 'finally_comment', False)
        # Processing the call keyword arguments (line 754)
        kwargs_8393 = {}
        # Getting the type of 'try_finally_stmts' (line 754)
        try_finally_stmts_8390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'try_finally_stmts', False)
        # Obtaining the member 'append' of a type (line 754)
        append_8391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 8), try_finally_stmts_8390, 'append')
        # Calling append(args, kwargs) (line 754)
        append_call_result_8394 = invoke(stypy.reporting.localization.Localization(__file__, 754, 8), append_8391, *[finally_comment_8392], **kwargs_8393)
        
        
        # Call to extend(...): (line 757)
        # Processing the call arguments (line 757)
        
        # Call to __visit_instruction_body(...): (line 757)
        # Processing the call arguments (line 757)
        # Getting the type of 'node' (line 757)
        node_8399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 63), 'node', False)
        # Obtaining the member 'finalbody' of a type (line 757)
        finalbody_8400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 63), node_8399, 'finalbody')
        # Getting the type of 'context' (line 757)
        context_8401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 79), 'context', False)
        # Processing the call keyword arguments (line 757)
        kwargs_8402 = {}
        # Getting the type of 'self' (line 757)
        self_8397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 757)
        visit_instruction_body_8398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 33), self_8397, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 757)
        visit_instruction_body_call_result_8403 = invoke(stypy.reporting.localization.Localization(__file__, 757, 33), visit_instruction_body_8398, *[finalbody_8400, context_8401], **kwargs_8402)
        
        # Processing the call keyword arguments (line 757)
        kwargs_8404 = {}
        # Getting the type of 'try_finally_stmts' (line 757)
        try_finally_stmts_8395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 8), 'try_finally_stmts', False)
        # Obtaining the member 'extend' of a type (line 757)
        extend_8396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 8), try_finally_stmts_8395, 'extend')
        # Calling extend(args, kwargs) (line 757)
        extend_call_result_8405 = invoke(stypy.reporting.localization.Localization(__file__, 757, 8), extend_8396, *[visit_instruction_body_call_result_8403], **kwargs_8404)
        
        
        # Call to flatten_lists(...): (line 759)
        # Processing the call arguments (line 759)
        
        # Call to create_blank_line(...): (line 759)
        # Processing the call keyword arguments (line 759)
        kwargs_8410 = {}
        # Getting the type of 'stypy_functions_copy' (line 759)
        stypy_functions_copy_8408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 759)
        create_blank_line_8409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 50), stypy_functions_copy_8408, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 759)
        create_blank_line_call_result_8411 = invoke(stypy.reporting.localization.Localization(__file__, 759, 50), create_blank_line_8409, *[], **kwargs_8410)
        
        # Getting the type of 'try_finally_stmts' (line 760)
        try_finally_stmts_8412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 45), 'try_finally_stmts', False)
        
        # Call to create_blank_line(...): (line 761)
        # Processing the call keyword arguments (line 761)
        kwargs_8415 = {}
        # Getting the type of 'stypy_functions_copy' (line 761)
        stypy_functions_copy_8413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 761)
        create_blank_line_8414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 45), stypy_functions_copy_8413, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 761)
        create_blank_line_call_result_8416 = invoke(stypy.reporting.localization.Localization(__file__, 761, 45), create_blank_line_8414, *[], **kwargs_8415)
        
        # Processing the call keyword arguments (line 759)
        kwargs_8417 = {}
        # Getting the type of 'stypy_functions_copy' (line 759)
        stypy_functions_copy_8406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 759)
        flatten_lists_8407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 15), stypy_functions_copy_8406, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 759)
        flatten_lists_call_result_8418 = invoke(stypy.reporting.localization.Localization(__file__, 759, 15), flatten_lists_8407, *[create_blank_line_call_result_8411, try_finally_stmts_8412, create_blank_line_call_result_8416], **kwargs_8417)
        
        # Assigning a type to the variable 'stypy_return_type' (line 759)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 759, 8), 'stypy_return_type', flatten_lists_call_result_8418)
        
        # ################# End of 'visit_TryFinally(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_TryFinally' in the type store
        # Getting the type of 'stypy_return_type' (line 741)
        stypy_return_type_8419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8419)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_TryFinally'
        return stypy_return_type_8419


    @norecursion
    def visit_Import(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Import'
        module_type_store = module_type_store.open_function_context('visit_Import', 765, 4, False)
        # Assigning a type to the variable 'self' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Import')
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Import', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Import', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Import(...)' code ##################

        
        # Assigning a Call to a Name (line 767):
        
        # Assigning a Call to a Name (line 767):
        
        # Call to create_localization(...): (line 767)
        # Processing the call arguments (line 767)
        # Getting the type of 'node' (line 767)
        node_8422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 767)
        lineno_8423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 64), node_8422, 'lineno')
        # Getting the type of 'node' (line 767)
        node_8424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 767)
        col_offset_8425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 77), node_8424, 'col_offset')
        # Processing the call keyword arguments (line 767)
        kwargs_8426 = {}
        # Getting the type of 'stypy_functions_copy' (line 767)
        stypy_functions_copy_8420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 767)
        create_localization_8421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 23), stypy_functions_copy_8420, 'create_localization')
        # Calling create_localization(args, kwargs) (line 767)
        create_localization_call_result_8427 = invoke(stypy.reporting.localization.Localization(__file__, 767, 23), create_localization_8421, *[lineno_8423, col_offset_8425], **kwargs_8426)
        
        # Assigning a type to the variable 'localization' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'localization', create_localization_call_result_8427)
        
        # Assigning a List to a Name (line 768):
        
        # Assigning a List to a Name (line 768):
        
        # Obtaining an instance of the builtin type 'list' (line 768)
        list_8428 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 768)
        
        # Assigning a type to the variable 'call_stmts' (line 768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'call_stmts', list_8428)
        
        # Assigning a Call to a Name (line 770):
        
        # Assigning a Call to a Name (line 770):
        
        # Call to create_Name(...): (line 770)
        # Processing the call arguments (line 770)
        str_8431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 53), 'str', 'import_elements_from_external_module')
        # Processing the call keyword arguments (line 770)
        kwargs_8432 = {}
        # Getting the type of 'core_language_copy' (line 770)
        core_language_copy_8429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 22), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 770)
        create_Name_8430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 770, 22), core_language_copy_8429, 'create_Name')
        # Calling create_Name(args, kwargs) (line 770)
        create_Name_call_result_8433 = invoke(stypy.reporting.localization.Localization(__file__, 770, 22), create_Name_8430, *[str_8431], **kwargs_8432)
        
        # Assigning a type to the variable 'import_func' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'import_func', create_Name_call_result_8433)
        
        # Assigning a Call to a Name (line 772):
        
        # Assigning a Call to a Name (line 772):
        
        # Call to dirname(...): (line 772)
        # Processing the call arguments (line 772)
        # Getting the type of 'self' (line 772)
        self_8437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 35), 'self', False)
        # Obtaining the member 'file_name' of a type (line 772)
        file_name_8438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 35), self_8437, 'file_name')
        # Processing the call keyword arguments (line 772)
        kwargs_8439 = {}
        # Getting the type of 'os' (line 772)
        os_8434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 19), 'os', False)
        # Obtaining the member 'path' of a type (line 772)
        path_8435 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 19), os_8434, 'path')
        # Obtaining the member 'dirname' of a type (line 772)
        dirname_8436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 19), path_8435, 'dirname')
        # Calling dirname(args, kwargs) (line 772)
        dirname_call_result_8440 = invoke(stypy.reporting.localization.Localization(__file__, 772, 19), dirname_8436, *[file_name_8438], **kwargs_8439)
        
        # Assigning a type to the variable 'dir_name' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'dir_name', dirname_call_result_8440)
        
        # Assigning a List to a Name (line 773):
        
        # Assigning a List to a Name (line 773):
        
        # Obtaining an instance of the builtin type 'list' (line 773)
        list_8441 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 773)
        
        # Assigning a type to the variable 'alias_stmt' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 8), 'alias_stmt', list_8441)
        
        # Getting the type of 'node' (line 774)
        node_8442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 21), 'node')
        # Obtaining the member 'names' of a type (line 774)
        names_8443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 21), node_8442, 'names')
        # Assigning a type to the variable 'names_8443' (line 774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'names_8443', names_8443)
        # Testing if the for loop is going to be iterated (line 774)
        # Testing the type of a for loop iterable (line 774)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 774, 8), names_8443)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 774, 8), names_8443):
            # Getting the type of the for loop variable (line 774)
            for_loop_var_8444 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 774, 8), names_8443)
            # Assigning a type to the variable 'alias' (line 774)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'alias', for_loop_var_8444)
            # SSA begins for a for statement (line 774)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to append(...): (line 775)
            # Processing the call arguments (line 775)
            
            # Call to create_src_comment(...): (line 776)
            # Processing the call arguments (line 776)
            
            # Call to format(...): (line 776)
            # Processing the call arguments (line 776)
            # Getting the type of 'alias' (line 776)
            alias_8451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 88), 'alias', False)
            # Obtaining the member 'name' of a type (line 776)
            name_8452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 88), alias_8451, 'name')
            # Processing the call keyword arguments (line 776)
            kwargs_8453 = {}
            str_8449 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 56), 'str', "Importing '{0}' module")
            # Obtaining the member 'format' of a type (line 776)
            format_8450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 56), str_8449, 'format')
            # Calling format(args, kwargs) (line 776)
            format_call_result_8454 = invoke(stypy.reporting.localization.Localization(__file__, 776, 56), format_8450, *[name_8452], **kwargs_8453)
            
            # Getting the type of 'node' (line 776)
            node_8455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 101), 'node', False)
            # Obtaining the member 'lineno' of a type (line 776)
            lineno_8456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 101), node_8455, 'lineno')
            # Processing the call keyword arguments (line 776)
            kwargs_8457 = {}
            # Getting the type of 'stypy_functions_copy' (line 776)
            stypy_functions_copy_8447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 776)
            create_src_comment_8448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 16), stypy_functions_copy_8447, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 776)
            create_src_comment_call_result_8458 = invoke(stypy.reporting.localization.Localization(__file__, 776, 16), create_src_comment_8448, *[format_call_result_8454, lineno_8456], **kwargs_8457)
            
            # Processing the call keyword arguments (line 775)
            kwargs_8459 = {}
            # Getting the type of 'call_stmts' (line 775)
            call_stmts_8445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 775)
            append_8446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 12), call_stmts_8445, 'append')
            # Calling append(args, kwargs) (line 775)
            append_call_result_8460 = invoke(stypy.reporting.localization.Localization(__file__, 775, 12), append_8446, *[create_src_comment_call_result_8458], **kwargs_8459)
            
            
            # Call to assign_line_and_column(...): (line 777)
            # Processing the call arguments (line 777)
            # Getting the type of 'alias' (line 777)
            alias_8463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 56), 'alias', False)
            # Getting the type of 'node' (line 777)
            node_8464 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 63), 'node', False)
            # Processing the call keyword arguments (line 777)
            kwargs_8465 = {}
            # Getting the type of 'stypy_functions_copy' (line 777)
            stypy_functions_copy_8461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 777)
            assign_line_and_column_8462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 12), stypy_functions_copy_8461, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 777)
            assign_line_and_column_call_result_8466 = invoke(stypy.reporting.localization.Localization(__file__, 777, 12), assign_line_and_column_8462, *[alias_8463, node_8464], **kwargs_8465)
            
            
            # Assigning a Call to a Tuple (line 778):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 778)
            # Processing the call arguments (line 778)
            # Getting the type of 'alias' (line 778)
            alias_8469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'alias', False)
            # Getting the type of 'context' (line 778)
            context_8470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 54), 'context', False)
            # Processing the call keyword arguments (line 778)
            kwargs_8471 = {}
            # Getting the type of 'self' (line 778)
            self_8467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 778)
            visit_8468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 36), self_8467, 'visit')
            # Calling visit(args, kwargs) (line 778)
            visit_call_result_8472 = invoke(stypy.reporting.localization.Localization(__file__, 778, 36), visit_8468, *[alias_8469, context_8470], **kwargs_8471)
            
            # Assigning a type to the variable 'call_assignment_5785' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_5785', visit_call_result_8472)
            
            # Assigning a Call to a Name (line 778):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5785' (line 778)
            call_assignment_5785_8473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_5785', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8474 = stypy_get_value_from_tuple(call_assignment_5785_8473, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5786' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_5786', stypy_get_value_from_tuple_call_result_8474)
            
            # Assigning a Name to a Name (line 778):
            # Getting the type of 'call_assignment_5786' (line 778)
            call_assignment_5786_8475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_5786')
            # Assigning a type to the variable 'alias_stmt' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'alias_stmt', call_assignment_5786_8475)
            
            # Assigning a Call to a Name (line 778):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5785' (line 778)
            call_assignment_5785_8476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_5785', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8477 = stypy_get_value_from_tuple(call_assignment_5785_8476, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5787' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_5787', stypy_get_value_from_tuple_call_result_8477)
            
            # Assigning a Name to a Name (line 778):
            # Getting the type of 'call_assignment_5787' (line 778)
            call_assignment_5787_8478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_5787')
            # Assigning a type to the variable 'alias_var' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 24), 'alias_var', call_assignment_5787_8478)
            
            # Assigning a Call to a Name (line 779):
            
            # Assigning a Call to a Name (line 779):
            
            # Call to create_call_expression(...): (line 779)
            # Processing the call arguments (line 779)
            # Getting the type of 'import_func' (line 779)
            import_func_8481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 57), 'import_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 779)
            list_8482 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 70), 'list')
            # Adding type elements to the builtin type 'list' instance (line 779)
            # Adding element type (line 779)
            # Getting the type of 'localization' (line 779)
            localization_8483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 71), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 70), list_8482, localization_8483)
            # Adding element type (line 779)
            # Getting the type of 'alias_var' (line 781)
            alias_var_8484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 66), 'alias_var', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 70), list_8482, alias_var_8484)
            # Adding element type (line 779)
            
            # Call to create_Name(...): (line 782)
            # Processing the call arguments (line 782)
            str_8487 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 97), 'str', 'type_store')
            # Processing the call keyword arguments (line 782)
            kwargs_8488 = {}
            # Getting the type of 'core_language_copy' (line 782)
            core_language_copy_8485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 66), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 782)
            create_Name_8486 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 66), core_language_copy_8485, 'create_Name')
            # Calling create_Name(args, kwargs) (line 782)
            create_Name_call_result_8489 = invoke(stypy.reporting.localization.Localization(__file__, 782, 66), create_Name_8486, *[str_8487], **kwargs_8488)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 70), list_8482, create_Name_call_result_8489)
            
            # Processing the call keyword arguments (line 779)
            kwargs_8490 = {}
            # Getting the type of 'functions_copy' (line 779)
            functions_copy_8479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 19), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 779)
            create_call_expression_8480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 19), functions_copy_8479, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 779)
            create_call_expression_call_result_8491 = invoke(stypy.reporting.localization.Localization(__file__, 779, 19), create_call_expression_8480, *[import_func_8481, list_8482], **kwargs_8490)
            
            # Assigning a type to the variable 'call' (line 779)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 12), 'call', create_call_expression_call_result_8491)
            
            # Call to append(...): (line 783)
            # Processing the call arguments (line 783)
            # Getting the type of 'call' (line 783)
            call_8494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 30), 'call', False)
            # Processing the call keyword arguments (line 783)
            kwargs_8495 = {}
            # Getting the type of 'call_stmts' (line 783)
            call_stmts_8492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 783)
            append_8493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 12), call_stmts_8492, 'append')
            # Calling append(args, kwargs) (line 783)
            append_call_result_8496 = invoke(stypy.reporting.localization.Localization(__file__, 783, 12), append_8493, *[call_8494], **kwargs_8495)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to flatten_lists(...): (line 785)
        # Processing the call arguments (line 785)
        # Getting the type of 'call_stmts' (line 785)
        call_stmts_8499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 50), 'call_stmts', False)
        # Getting the type of 'alias_stmt' (line 785)
        alias_stmt_8500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 62), 'alias_stmt', False)
        
        # Call to create_blank_line(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_8503 = {}
        # Getting the type of 'stypy_functions_copy' (line 786)
        stypy_functions_copy_8501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 786)
        create_blank_line_8502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 45), stypy_functions_copy_8501, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 786)
        create_blank_line_call_result_8504 = invoke(stypy.reporting.localization.Localization(__file__, 786, 45), create_blank_line_8502, *[], **kwargs_8503)
        
        # Processing the call keyword arguments (line 785)
        kwargs_8505 = {}
        # Getting the type of 'stypy_functions_copy' (line 785)
        stypy_functions_copy_8497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 785)
        flatten_lists_8498 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 15), stypy_functions_copy_8497, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 785)
        flatten_lists_call_result_8506 = invoke(stypy.reporting.localization.Localization(__file__, 785, 15), flatten_lists_8498, *[call_stmts_8499, alias_stmt_8500, create_blank_line_call_result_8504], **kwargs_8505)
        
        # Assigning a type to the variable 'stypy_return_type' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'stypy_return_type', flatten_lists_call_result_8506)
        
        # ################# End of 'visit_Import(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Import' in the type store
        # Getting the type of 'stypy_return_type' (line 765)
        stypy_return_type_8507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8507)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Import'
        return stypy_return_type_8507


    @norecursion
    def visit_ImportFrom(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_ImportFrom'
        module_type_store = module_type_store.open_function_context('visit_ImportFrom', 788, 4, False)
        # Assigning a type to the variable 'self' (line 789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_ImportFrom')
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_ImportFrom', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_ImportFrom', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_ImportFrom(...)' code ##################

        
        # Assigning a Call to a Name (line 790):
        
        # Assigning a Call to a Name (line 790):
        
        # Call to create_localization(...): (line 790)
        # Processing the call arguments (line 790)
        # Getting the type of 'node' (line 790)
        node_8510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 790)
        lineno_8511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 64), node_8510, 'lineno')
        # Getting the type of 'node' (line 790)
        node_8512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 790)
        col_offset_8513 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 77), node_8512, 'col_offset')
        # Processing the call keyword arguments (line 790)
        kwargs_8514 = {}
        # Getting the type of 'stypy_functions_copy' (line 790)
        stypy_functions_copy_8508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 790)
        create_localization_8509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 23), stypy_functions_copy_8508, 'create_localization')
        # Calling create_localization(args, kwargs) (line 790)
        create_localization_call_result_8515 = invoke(stypy.reporting.localization.Localization(__file__, 790, 23), create_localization_8509, *[lineno_8511, col_offset_8513], **kwargs_8514)
        
        # Assigning a type to the variable 'localization' (line 790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'localization', create_localization_call_result_8515)
        
        # Assigning a List to a Name (line 791):
        
        # Assigning a List to a Name (line 791):
        
        # Obtaining an instance of the builtin type 'list' (line 791)
        list_8516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 791)
        
        # Assigning a type to the variable 'call_stmts' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 8), 'call_stmts', list_8516)
        
        # Call to append(...): (line 793)
        # Processing the call arguments (line 793)
        
        # Call to create_src_comment(...): (line 794)
        # Processing the call arguments (line 794)
        
        # Call to format(...): (line 794)
        # Processing the call arguments (line 794)
        # Getting the type of 'node' (line 794)
        node_8523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 89), 'node', False)
        # Obtaining the member 'module' of a type (line 794)
        module_8524 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 89), node_8523, 'module')
        # Processing the call keyword arguments (line 794)
        kwargs_8525 = {}
        str_8521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 52), 'str', "Importing from '{0}' module")
        # Obtaining the member 'format' of a type (line 794)
        format_8522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 52), str_8521, 'format')
        # Calling format(args, kwargs) (line 794)
        format_call_result_8526 = invoke(stypy.reporting.localization.Localization(__file__, 794, 52), format_8522, *[module_8524], **kwargs_8525)
        
        # Getting the type of 'node' (line 794)
        node_8527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 794)
        lineno_8528 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 103), node_8527, 'lineno')
        # Processing the call keyword arguments (line 794)
        kwargs_8529 = {}
        # Getting the type of 'stypy_functions_copy' (line 794)
        stypy_functions_copy_8519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 794)
        create_src_comment_8520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 12), stypy_functions_copy_8519, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 794)
        create_src_comment_call_result_8530 = invoke(stypy.reporting.localization.Localization(__file__, 794, 12), create_src_comment_8520, *[format_call_result_8526, lineno_8528], **kwargs_8529)
        
        # Processing the call keyword arguments (line 793)
        kwargs_8531 = {}
        # Getting the type of 'call_stmts' (line 793)
        call_stmts_8517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 793)
        append_8518 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 8), call_stmts_8517, 'append')
        # Calling append(args, kwargs) (line 793)
        append_call_result_8532 = invoke(stypy.reporting.localization.Localization(__file__, 793, 8), append_8518, *[create_src_comment_call_result_8530], **kwargs_8531)
        
        
        # Assigning a Call to a Name (line 795):
        
        # Assigning a Call to a Name (line 795):
        
        # Call to create_Name(...): (line 795)
        # Processing the call arguments (line 795)
        str_8535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 53), 'str', 'import_elements_from_external_module')
        # Processing the call keyword arguments (line 795)
        kwargs_8536 = {}
        # Getting the type of 'core_language_copy' (line 795)
        core_language_copy_8533 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 22), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 795)
        create_Name_8534 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 22), core_language_copy_8533, 'create_Name')
        # Calling create_Name(args, kwargs) (line 795)
        create_Name_call_result_8537 = invoke(stypy.reporting.localization.Localization(__file__, 795, 22), create_Name_8534, *[str_8535], **kwargs_8536)
        
        # Assigning a type to the variable 'import_func' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 8), 'import_func', create_Name_call_result_8537)
        
        # Assigning a Call to a Name (line 797):
        
        # Assigning a Call to a Name (line 797):
        
        # Call to dirname(...): (line 797)
        # Processing the call arguments (line 797)
        # Getting the type of 'self' (line 797)
        self_8541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 35), 'self', False)
        # Obtaining the member 'file_name' of a type (line 797)
        file_name_8542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 35), self_8541, 'file_name')
        # Processing the call keyword arguments (line 797)
        kwargs_8543 = {}
        # Getting the type of 'os' (line 797)
        os_8538 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 19), 'os', False)
        # Obtaining the member 'path' of a type (line 797)
        path_8539 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 19), os_8538, 'path')
        # Obtaining the member 'dirname' of a type (line 797)
        dirname_8540 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 19), path_8539, 'dirname')
        # Calling dirname(args, kwargs) (line 797)
        dirname_call_result_8544 = invoke(stypy.reporting.localization.Localization(__file__, 797, 19), dirname_8540, *[file_name_8542], **kwargs_8543)
        
        # Assigning a type to the variable 'dir_name' (line 797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 8), 'dir_name', dirname_call_result_8544)
        
        # Assigning a List to a Name (line 798):
        
        # Assigning a List to a Name (line 798):
        
        # Obtaining an instance of the builtin type 'list' (line 798)
        list_8545 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 798)
        
        # Assigning a type to the variable 'elements' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'elements', list_8545)
        
        # Assigning a List to a Name (line 799):
        
        # Assigning a List to a Name (line 799):
        
        # Obtaining an instance of the builtin type 'list' (line 799)
        list_8546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 799, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 799)
        
        # Assigning a type to the variable 'alias_stmt' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'alias_stmt', list_8546)
        
        # Getting the type of 'node' (line 800)
        node_8547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 21), 'node')
        # Obtaining the member 'names' of a type (line 800)
        names_8548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 21), node_8547, 'names')
        # Assigning a type to the variable 'names_8548' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'names_8548', names_8548)
        # Testing if the for loop is going to be iterated (line 800)
        # Testing the type of a for loop iterable (line 800)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 800, 8), names_8548)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 800, 8), names_8548):
            # Getting the type of the for loop variable (line 800)
            for_loop_var_8549 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 800, 8), names_8548)
            # Assigning a type to the variable 'alias' (line 800)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'alias', for_loop_var_8549)
            # SSA begins for a for statement (line 800)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to assign_line_and_column(...): (line 801)
            # Processing the call arguments (line 801)
            # Getting the type of 'alias' (line 801)
            alias_8552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 56), 'alias', False)
            # Getting the type of 'node' (line 801)
            node_8553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 63), 'node', False)
            # Processing the call keyword arguments (line 801)
            kwargs_8554 = {}
            # Getting the type of 'stypy_functions_copy' (line 801)
            stypy_functions_copy_8550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 801)
            assign_line_and_column_8551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 12), stypy_functions_copy_8550, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 801)
            assign_line_and_column_call_result_8555 = invoke(stypy.reporting.localization.Localization(__file__, 801, 12), assign_line_and_column_8551, *[alias_8552, node_8553], **kwargs_8554)
            
            
            # Assigning a Call to a Tuple (line 802):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 802)
            # Processing the call arguments (line 802)
            # Getting the type of 'alias' (line 802)
            alias_8558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 47), 'alias', False)
            # Getting the type of 'context' (line 802)
            context_8559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 54), 'context', False)
            # Processing the call keyword arguments (line 802)
            kwargs_8560 = {}
            # Getting the type of 'self' (line 802)
            self_8556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 802)
            visit_8557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 36), self_8556, 'visit')
            # Calling visit(args, kwargs) (line 802)
            visit_call_result_8561 = invoke(stypy.reporting.localization.Localization(__file__, 802, 36), visit_8557, *[alias_8558, context_8559], **kwargs_8560)
            
            # Assigning a type to the variable 'call_assignment_5788' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_5788', visit_call_result_8561)
            
            # Assigning a Call to a Name (line 802):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5788' (line 802)
            call_assignment_5788_8562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_5788', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8563 = stypy_get_value_from_tuple(call_assignment_5788_8562, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5789' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_5789', stypy_get_value_from_tuple_call_result_8563)
            
            # Assigning a Name to a Name (line 802):
            # Getting the type of 'call_assignment_5789' (line 802)
            call_assignment_5789_8564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_5789')
            # Assigning a type to the variable 'alias_stmt' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'alias_stmt', call_assignment_5789_8564)
            
            # Assigning a Call to a Name (line 802):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5788' (line 802)
            call_assignment_5788_8565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_5788', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8566 = stypy_get_value_from_tuple(call_assignment_5788_8565, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5790' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_5790', stypy_get_value_from_tuple_call_result_8566)
            
            # Assigning a Name to a Name (line 802):
            # Getting the type of 'call_assignment_5790' (line 802)
            call_assignment_5790_8567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_5790')
            # Assigning a type to the variable 'alias_var' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 24), 'alias_var', call_assignment_5790_8567)
            
            # Call to append(...): (line 803)
            # Processing the call arguments (line 803)
            # Getting the type of 'alias_var' (line 803)
            alias_var_8570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 28), 'alias_var', False)
            # Processing the call keyword arguments (line 803)
            kwargs_8571 = {}
            # Getting the type of 'elements' (line 803)
            elements_8568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 12), 'elements', False)
            # Obtaining the member 'append' of a type (line 803)
            append_8569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 803, 12), elements_8568, 'append')
            # Calling append(args, kwargs) (line 803)
            append_call_result_8572 = invoke(stypy.reporting.localization.Localization(__file__, 803, 12), append_8569, *[alias_var_8570], **kwargs_8571)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 805):
        
        # Assigning a Call to a Name (line 805):
        
        # Call to create_list(...): (line 805)
        # Processing the call arguments (line 805)
        # Getting the type of 'elements' (line 805)
        elements_8575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 52), 'elements', False)
        # Processing the call keyword arguments (line 805)
        kwargs_8576 = {}
        # Getting the type of 'data_structures_copy' (line 805)
        data_structures_copy_8573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 19), 'data_structures_copy', False)
        # Obtaining the member 'create_list' of a type (line 805)
        create_list_8574 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 19), data_structures_copy_8573, 'create_list')
        # Calling create_list(args, kwargs) (line 805)
        create_list_call_result_8577 = invoke(stypy.reporting.localization.Localization(__file__, 805, 19), create_list_8574, *[elements_8575], **kwargs_8576)
        
        # Assigning a type to the variable 'starargs' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 8), 'starargs', create_list_call_result_8577)
        
        # Assigning a Call to a Name (line 806):
        
        # Assigning a Call to a Name (line 806):
        
        # Call to create_call_expression(...): (line 806)
        # Processing the call arguments (line 806)
        # Getting the type of 'import_func' (line 806)
        import_func_8580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 53), 'import_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 806)
        list_8581 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 66), 'list')
        # Adding type elements to the builtin type 'list' instance (line 806)
        # Adding element type (line 806)
        # Getting the type of 'localization' (line 806)
        localization_8582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 67), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 66), list_8581, localization_8582)
        # Adding element type (line 806)
        
        # Call to create_str(...): (line 808)
        # Processing the call arguments (line 808)
        # Getting the type of 'node' (line 808)
        node_8585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 92), 'node', False)
        # Obtaining the member 'module' of a type (line 808)
        module_8586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 92), node_8585, 'module')
        # Processing the call keyword arguments (line 808)
        kwargs_8587 = {}
        # Getting the type of 'core_language_copy' (line 808)
        core_language_copy_8583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 62), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 808)
        create_str_8584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 62), core_language_copy_8583, 'create_str')
        # Calling create_str(args, kwargs) (line 808)
        create_str_call_result_8588 = invoke(stypy.reporting.localization.Localization(__file__, 808, 62), create_str_8584, *[module_8586], **kwargs_8587)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 66), list_8581, create_str_call_result_8588)
        # Adding element type (line 806)
        
        # Call to create_Name(...): (line 809)
        # Processing the call arguments (line 809)
        str_8591 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 93), 'str', 'type_store')
        # Processing the call keyword arguments (line 809)
        kwargs_8592 = {}
        # Getting the type of 'core_language_copy' (line 809)
        core_language_copy_8589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 62), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 809)
        create_Name_8590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 62), core_language_copy_8589, 'create_Name')
        # Calling create_Name(args, kwargs) (line 809)
        create_Name_call_result_8593 = invoke(stypy.reporting.localization.Localization(__file__, 809, 62), create_Name_8590, *[str_8591], **kwargs_8592)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 66), list_8581, create_Name_call_result_8593)
        
        # Processing the call keyword arguments (line 806)
        # Getting the type of 'starargs' (line 810)
        starargs_8594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 57), 'starargs', False)
        keyword_8595 = starargs_8594
        kwargs_8596 = {'starargs': keyword_8595}
        # Getting the type of 'functions_copy' (line 806)
        functions_copy_8578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 15), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 806)
        create_call_expression_8579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 15), functions_copy_8578, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 806)
        create_call_expression_call_result_8597 = invoke(stypy.reporting.localization.Localization(__file__, 806, 15), create_call_expression_8579, *[import_func_8580, list_8581], **kwargs_8596)
        
        # Assigning a type to the variable 'call' (line 806)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 8), 'call', create_call_expression_call_result_8597)
        
        # Call to append(...): (line 811)
        # Processing the call arguments (line 811)
        # Getting the type of 'call' (line 811)
        call_8600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 26), 'call', False)
        # Processing the call keyword arguments (line 811)
        kwargs_8601 = {}
        # Getting the type of 'call_stmts' (line 811)
        call_stmts_8598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 811)
        append_8599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 8), call_stmts_8598, 'append')
        # Calling append(args, kwargs) (line 811)
        append_call_result_8602 = invoke(stypy.reporting.localization.Localization(__file__, 811, 8), append_8599, *[call_8600], **kwargs_8601)
        
        
        # Call to flatten_lists(...): (line 813)
        # Processing the call arguments (line 813)
        # Getting the type of 'call_stmts' (line 813)
        call_stmts_8605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 50), 'call_stmts', False)
        # Getting the type of 'alias_stmt' (line 813)
        alias_stmt_8606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 62), 'alias_stmt', False)
        
        # Call to create_blank_line(...): (line 814)
        # Processing the call keyword arguments (line 814)
        kwargs_8609 = {}
        # Getting the type of 'stypy_functions_copy' (line 814)
        stypy_functions_copy_8607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 814)
        create_blank_line_8608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 814, 45), stypy_functions_copy_8607, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 814)
        create_blank_line_call_result_8610 = invoke(stypy.reporting.localization.Localization(__file__, 814, 45), create_blank_line_8608, *[], **kwargs_8609)
        
        # Processing the call keyword arguments (line 813)
        kwargs_8611 = {}
        # Getting the type of 'stypy_functions_copy' (line 813)
        stypy_functions_copy_8603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 813)
        flatten_lists_8604 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 15), stypy_functions_copy_8603, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 813)
        flatten_lists_call_result_8612 = invoke(stypy.reporting.localization.Localization(__file__, 813, 15), flatten_lists_8604, *[call_stmts_8605, alias_stmt_8606, create_blank_line_call_result_8610], **kwargs_8611)
        
        # Assigning a type to the variable 'stypy_return_type' (line 813)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 813, 8), 'stypy_return_type', flatten_lists_call_result_8612)
        
        # ################# End of 'visit_ImportFrom(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_ImportFrom' in the type store
        # Getting the type of 'stypy_return_type' (line 788)
        stypy_return_type_8613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8613)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_ImportFrom'
        return stypy_return_type_8613


    @norecursion
    def visit_Print(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Print'
        module_type_store = module_type_store.open_function_context('visit_Print', 818, 4, False)
        # Assigning a type to the variable 'self' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Print')
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Print', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Print', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Print(...)' code ##################

        
        # Assigning a Call to a Name (line 821):
        
        # Assigning a Call to a Name (line 821):
        
        # Call to __visit_instruction_body(...): (line 821)
        # Processing the call arguments (line 821)
        # Getting the type of 'node' (line 821)
        node_8616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 52), 'node', False)
        # Obtaining the member 'values' of a type (line 821)
        values_8617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 52), node_8616, 'values')
        # Getting the type of 'context' (line 821)
        context_8618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 65), 'context', False)
        # Processing the call keyword arguments (line 821)
        kwargs_8619 = {}
        # Getting the type of 'self' (line 821)
        self_8614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 22), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 821)
        visit_instruction_body_8615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 22), self_8614, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 821)
        visit_instruction_body_call_result_8620 = invoke(stypy.reporting.localization.Localization(__file__, 821, 22), visit_instruction_body_8615, *[values_8617, context_8618], **kwargs_8619)
        
        # Assigning a type to the variable 'print_stmts' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'print_stmts', visit_instruction_body_call_result_8620)
        
        # Call to flatten_lists(...): (line 823)
        # Processing the call arguments (line 823)
        # Getting the type of 'print_stmts' (line 823)
        print_stmts_8623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 50), 'print_stmts', False)
        # Processing the call keyword arguments (line 823)
        kwargs_8624 = {}
        # Getting the type of 'stypy_functions_copy' (line 823)
        stypy_functions_copy_8621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 823)
        flatten_lists_8622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 15), stypy_functions_copy_8621, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 823)
        flatten_lists_call_result_8625 = invoke(stypy.reporting.localization.Localization(__file__, 823, 15), flatten_lists_8622, *[print_stmts_8623], **kwargs_8624)
        
        # Assigning a type to the variable 'stypy_return_type' (line 823)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 823, 8), 'stypy_return_type', flatten_lists_call_result_8625)
        
        # ################# End of 'visit_Print(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Print' in the type store
        # Getting the type of 'stypy_return_type' (line 818)
        stypy_return_type_8626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8626)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Print'
        return stypy_return_type_8626


    @norecursion
    def visit_Global(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Global'
        module_type_store = module_type_store.open_function_context('visit_Global', 827, 4, False)
        # Assigning a type to the variable 'self' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Global')
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Global', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Global', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Global(...)' code ##################

        
        # Assigning a List to a Name (line 829):
        
        # Assigning a List to a Name (line 829):
        
        # Obtaining an instance of the builtin type 'list' (line 829)
        list_8627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 829)
        # Adding element type (line 829)
        
        # Call to create_src_comment(...): (line 829)
        # Processing the call arguments (line 829)
        str_8630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 64), 'str', 'Marking variables as global')
        # Getting the type of 'node' (line 829)
        node_8631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 95), 'node', False)
        # Obtaining the member 'lineno' of a type (line 829)
        lineno_8632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 95), node_8631, 'lineno')
        # Processing the call keyword arguments (line 829)
        kwargs_8633 = {}
        # Getting the type of 'stypy_functions_copy' (line 829)
        stypy_functions_copy_8628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 24), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 829)
        create_src_comment_8629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 24), stypy_functions_copy_8628, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 829)
        create_src_comment_call_result_8634 = invoke(stypy.reporting.localization.Localization(__file__, 829, 24), create_src_comment_8629, *[str_8630, lineno_8632], **kwargs_8633)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 23), list_8627, create_src_comment_call_result_8634)
        
        # Assigning a type to the variable 'global_stmts' (line 829)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 829, 8), 'global_stmts', list_8627)
        
        # Assigning a Call to a Name (line 830):
        
        # Assigning a Call to a Name (line 830):
        
        # Call to create_attribute(...): (line 830)
        # Processing the call arguments (line 830)
        str_8637 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 60), 'str', 'type_store')
        str_8638 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 74), 'str', 'mark_as_global')
        # Getting the type of 'node' (line 830)
        node_8639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 92), 'node', False)
        # Obtaining the member 'lineno' of a type (line 830)
        lineno_8640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 92), node_8639, 'lineno')
        # Getting the type of 'node' (line 830)
        node_8641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 105), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 830)
        col_offset_8642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 105), node_8641, 'col_offset')
        # Processing the call keyword arguments (line 830)
        kwargs_8643 = {}
        # Getting the type of 'core_language_copy' (line 830)
        core_language_copy_8635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 24), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 830)
        create_attribute_8636 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 24), core_language_copy_8635, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 830)
        create_attribute_call_result_8644 = invoke(stypy.reporting.localization.Localization(__file__, 830, 24), create_attribute_8636, *[str_8637, str_8638, lineno_8640, col_offset_8642], **kwargs_8643)
        
        # Assigning a type to the variable 'mark_function' (line 830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'mark_function', create_attribute_call_result_8644)
        
        # Assigning a Call to a Name (line 831):
        
        # Assigning a Call to a Name (line 831):
        
        # Call to create_localization(...): (line 831)
        # Processing the call arguments (line 831)
        # Getting the type of 'node' (line 831)
        node_8647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 831)
        lineno_8648 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 64), node_8647, 'lineno')
        # Getting the type of 'node' (line 831)
        node_8649 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 831)
        col_offset_8650 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 77), node_8649, 'col_offset')
        # Processing the call keyword arguments (line 831)
        kwargs_8651 = {}
        # Getting the type of 'stypy_functions_copy' (line 831)
        stypy_functions_copy_8645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 831)
        create_localization_8646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 23), stypy_functions_copy_8645, 'create_localization')
        # Calling create_localization(args, kwargs) (line 831)
        create_localization_call_result_8652 = invoke(stypy.reporting.localization.Localization(__file__, 831, 23), create_localization_8646, *[lineno_8648, col_offset_8650], **kwargs_8651)
        
        # Assigning a type to the variable 'localization' (line 831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 8), 'localization', create_localization_call_result_8652)
        
        # Getting the type of 'node' (line 832)
        node_8653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 20), 'node')
        # Obtaining the member 'names' of a type (line 832)
        names_8654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), node_8653, 'names')
        # Assigning a type to the variable 'names_8654' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'names_8654', names_8654)
        # Testing if the for loop is going to be iterated (line 832)
        # Testing the type of a for loop iterable (line 832)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 832, 8), names_8654)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 832, 8), names_8654):
            # Getting the type of the for loop variable (line 832)
            for_loop_var_8655 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 832, 8), names_8654)
            # Assigning a type to the variable 'name' (line 832)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'name', for_loop_var_8655)
            # SSA begins for a for statement (line 832)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 833):
            
            # Assigning a Call to a Name (line 833):
            
            # Call to create_call_expression(...): (line 833)
            # Processing the call arguments (line 833)
            # Getting the type of 'mark_function' (line 833)
            mark_function_8658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 62), 'mark_function', False)
            
            # Obtaining an instance of the builtin type 'list' (line 833)
            list_8659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 77), 'list')
            # Adding type elements to the builtin type 'list' instance (line 833)
            # Adding element type (line 833)
            # Getting the type of 'localization' (line 833)
            localization_8660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 78), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 77), list_8659, localization_8660)
            # Adding element type (line 833)
            
            # Call to create_str(...): (line 833)
            # Processing the call arguments (line 833)
            # Getting the type of 'name' (line 833)
            name_8663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 122), 'name', False)
            # Processing the call keyword arguments (line 833)
            kwargs_8664 = {}
            # Getting the type of 'core_language_copy' (line 833)
            core_language_copy_8661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 92), 'core_language_copy', False)
            # Obtaining the member 'create_str' of a type (line 833)
            create_str_8662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 92), core_language_copy_8661, 'create_str')
            # Calling create_str(args, kwargs) (line 833)
            create_str_call_result_8665 = invoke(stypy.reporting.localization.Localization(__file__, 833, 92), create_str_8662, *[name_8663], **kwargs_8664)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 77), list_8659, create_str_call_result_8665)
            
            # Processing the call keyword arguments (line 833)
            kwargs_8666 = {}
            # Getting the type of 'functions_copy' (line 833)
            functions_copy_8656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 24), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 833)
            create_call_expression_8657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 24), functions_copy_8656, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 833)
            create_call_expression_call_result_8667 = invoke(stypy.reporting.localization.Localization(__file__, 833, 24), create_call_expression_8657, *[mark_function_8658, list_8659], **kwargs_8666)
            
            # Assigning a type to the variable 'mark_call' (line 833)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 12), 'mark_call', create_call_expression_call_result_8667)
            
            # Call to append(...): (line 834)
            # Processing the call arguments (line 834)
            # Getting the type of 'mark_call' (line 834)
            mark_call_8670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 32), 'mark_call', False)
            # Processing the call keyword arguments (line 834)
            kwargs_8671 = {}
            # Getting the type of 'global_stmts' (line 834)
            global_stmts_8668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 12), 'global_stmts', False)
            # Obtaining the member 'append' of a type (line 834)
            append_8669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 12), global_stmts_8668, 'append')
            # Calling append(args, kwargs) (line 834)
            append_call_result_8672 = invoke(stypy.reporting.localization.Localization(__file__, 834, 12), append_8669, *[mark_call_8670], **kwargs_8671)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to flatten_lists(...): (line 836)
        # Processing the call arguments (line 836)
        # Getting the type of 'global_stmts' (line 836)
        global_stmts_8675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 50), 'global_stmts', False)
        # Processing the call keyword arguments (line 836)
        kwargs_8676 = {}
        # Getting the type of 'stypy_functions_copy' (line 836)
        stypy_functions_copy_8673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 836)
        flatten_lists_8674 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 15), stypy_functions_copy_8673, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 836)
        flatten_lists_call_result_8677 = invoke(stypy.reporting.localization.Localization(__file__, 836, 15), flatten_lists_8674, *[global_stmts_8675], **kwargs_8676)
        
        # Assigning a type to the variable 'stypy_return_type' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 8), 'stypy_return_type', flatten_lists_call_result_8677)
        
        # ################# End of 'visit_Global(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Global' in the type store
        # Getting the type of 'stypy_return_type' (line 827)
        stypy_return_type_8678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8678)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Global'
        return stypy_return_type_8678


    @norecursion
    def visit_Break(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Break'
        module_type_store = module_type_store.open_function_context('visit_Break', 840, 4, False)
        # Assigning a type to the variable 'self' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Break')
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Break', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Break', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Break(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 842)
        list_8679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 842)
        
        # Assigning a type to the variable 'stypy_return_type' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 8), 'stypy_return_type', list_8679)
        
        # ################# End of 'visit_Break(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Break' in the type store
        # Getting the type of 'stypy_return_type' (line 840)
        stypy_return_type_8680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8680)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Break'
        return stypy_return_type_8680


    @norecursion
    def visit_Continue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Continue'
        module_type_store = module_type_store.open_function_context('visit_Continue', 844, 4, False)
        # Assigning a type to the variable 'self' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Continue')
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Continue', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Continue', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Continue(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 846)
        list_8681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 846)
        
        # Assigning a type to the variable 'stypy_return_type' (line 846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 8), 'stypy_return_type', list_8681)
        
        # ################# End of 'visit_Continue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Continue' in the type store
        # Getting the type of 'stypy_return_type' (line 844)
        stypy_return_type_8682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8682)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Continue'
        return stypy_return_type_8682


    @norecursion
    def visit_Delete(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Delete'
        module_type_store = module_type_store.open_function_context('visit_Delete', 850, 4, False)
        # Assigning a type to the variable 'self' (line 851)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Delete')
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Delete', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Delete', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Delete(...)' code ##################

        
        # Assigning a List to a Name (line 852):
        
        # Assigning a List to a Name (line 852):
        
        # Obtaining an instance of the builtin type 'list' (line 852)
        list_8683 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 852)
        
        # Assigning a type to the variable 'stmts' (line 852)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 8), 'stmts', list_8683)
        
        # Assigning a Call to a Name (line 854):
        
        # Assigning a Call to a Name (line 854):
        
        # Call to create_src_comment(...): (line 854)
        # Processing the call arguments (line 854)
        str_8686 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 58), 'str', 'Deleting a member')
        # Processing the call keyword arguments (line 854)
        kwargs_8687 = {}
        # Getting the type of 'stypy_functions_copy' (line 854)
        stypy_functions_copy_8684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 854)
        create_src_comment_8685 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 18), stypy_functions_copy_8684, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 854)
        create_src_comment_call_result_8688 = invoke(stypy.reporting.localization.Localization(__file__, 854, 18), create_src_comment_8685, *[str_8686], **kwargs_8687)
        
        # Assigning a type to the variable 'comment' (line 854)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 854, 8), 'comment', create_src_comment_call_result_8688)
        
        # Getting the type of 'node' (line 855)
        node_8689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 22), 'node')
        # Obtaining the member 'targets' of a type (line 855)
        targets_8690 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 22), node_8689, 'targets')
        # Assigning a type to the variable 'targets_8690' (line 855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'targets_8690', targets_8690)
        # Testing if the for loop is going to be iterated (line 855)
        # Testing the type of a for loop iterable (line 855)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 855, 8), targets_8690)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 855, 8), targets_8690):
            # Getting the type of the for loop variable (line 855)
            for_loop_var_8691 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 855, 8), targets_8690)
            # Assigning a type to the variable 'target' (line 855)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'target', for_loop_var_8691)
            # SSA begins for a for statement (line 855)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Call to type(...): (line 857)
            # Processing the call arguments (line 857)
            # Getting the type of 'target' (line 857)
            target_8693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 20), 'target', False)
            # Processing the call keyword arguments (line 857)
            kwargs_8694 = {}
            # Getting the type of 'type' (line 857)
            type_8692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 15), 'type', False)
            # Calling type(args, kwargs) (line 857)
            type_call_result_8695 = invoke(stypy.reporting.localization.Localization(__file__, 857, 15), type_8692, *[target_8693], **kwargs_8694)
            
            # Getting the type of 'ast' (line 857)
            ast_8696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 31), 'ast')
            # Obtaining the member 'Attribute' of a type (line 857)
            Attribute_8697 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 31), ast_8696, 'Attribute')
            # Applying the binary operator 'is' (line 857)
            result_is__8698 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 15), 'is', type_call_result_8695, Attribute_8697)
            
            # Testing if the type of an if condition is none (line 857)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 857, 12), result_is__8698):
                
                # Assigning a Str to a Name (line 862):
                
                # Assigning a Str to a Name (line 862):
                str_8709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 25), 'str', '__builtins__')
                # Assigning a type to the variable 'parent' (line 862)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 862, 16), 'parent', str_8709)
                
                # Assigning a Name to a Name (line 863):
                
                # Assigning a Name to a Name (line 863):
                # Getting the type of 'target' (line 863)
                target_8710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 23), 'target')
                # Assigning a type to the variable 'attr' (line 863)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'attr', target_8710)
            else:
                
                # Testing the type of an if condition (line 857)
                if_condition_8699 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 857, 12), result_is__8698)
                # Assigning a type to the variable 'if_condition_8699' (line 857)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 12), 'if_condition_8699', if_condition_8699)
                # SSA begins for if statement (line 857)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Attribute to a Name (line 858):
                
                # Assigning a Attribute to a Name (line 858):
                # Getting the type of 'target' (line 858)
                target_8700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 25), 'target')
                # Obtaining the member 'value' of a type (line 858)
                value_8701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 25), target_8700, 'value')
                # Obtaining the member 'id' of a type (line 858)
                id_8702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 25), value_8701, 'id')
                # Assigning a type to the variable 'parent' (line 858)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 858, 16), 'parent', id_8702)
                
                # Assigning a Call to a Name (line 859):
                
                # Assigning a Call to a Name (line 859):
                
                # Call to create_str(...): (line 859)
                # Processing the call arguments (line 859)
                # Getting the type of 'target' (line 859)
                target_8705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 53), 'target', False)
                # Obtaining the member 'attr' of a type (line 859)
                attr_8706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 53), target_8705, 'attr')
                # Processing the call keyword arguments (line 859)
                kwargs_8707 = {}
                # Getting the type of 'core_language_copy' (line 859)
                core_language_copy_8703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 23), 'core_language_copy', False)
                # Obtaining the member 'create_str' of a type (line 859)
                create_str_8704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 23), core_language_copy_8703, 'create_str')
                # Calling create_str(args, kwargs) (line 859)
                create_str_call_result_8708 = invoke(stypy.reporting.localization.Localization(__file__, 859, 23), create_str_8704, *[attr_8706], **kwargs_8707)
                
                # Assigning a type to the variable 'attr' (line 859)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'attr', create_str_call_result_8708)
                # SSA branch for the else part of an if statement (line 857)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Str to a Name (line 862):
                
                # Assigning a Str to a Name (line 862):
                str_8709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 25), 'str', '__builtins__')
                # Assigning a type to the variable 'parent' (line 862)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 862, 16), 'parent', str_8709)
                
                # Assigning a Name to a Name (line 863):
                
                # Assigning a Name to a Name (line 863):
                # Getting the type of 'target' (line 863)
                target_8710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 23), 'target')
                # Assigning a type to the variable 'attr' (line 863)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'attr', target_8710)
                # SSA join for if statement (line 857)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Call to a Tuple (line 865):
            
            # Assigning a Call to a Name:
            
            # Call to create_get_type_of(...): (line 865)
            # Processing the call arguments (line 865)
            # Getting the type of 'parent' (line 865)
            parent_8713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 79), 'parent', False)
            # Getting the type of 'node' (line 865)
            node_8714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 87), 'node', False)
            # Obtaining the member 'lineno' of a type (line 865)
            lineno_8715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 87), node_8714, 'lineno')
            # Getting the type of 'node' (line 865)
            node_8716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 100), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 865)
            col_offset_8717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 100), node_8716, 'col_offset')
            # Processing the call keyword arguments (line 865)
            kwargs_8718 = {}
            # Getting the type of 'stypy_functions_copy' (line 865)
            stypy_functions_copy_8711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 39), 'stypy_functions_copy', False)
            # Obtaining the member 'create_get_type_of' of a type (line 865)
            create_get_type_of_8712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 39), stypy_functions_copy_8711, 'create_get_type_of')
            # Calling create_get_type_of(args, kwargs) (line 865)
            create_get_type_of_call_result_8719 = invoke(stypy.reporting.localization.Localization(__file__, 865, 39), create_get_type_of_8712, *[parent_8713, lineno_8715, col_offset_8717], **kwargs_8718)
            
            # Assigning a type to the variable 'call_assignment_5791' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_5791', create_get_type_of_call_result_8719)
            
            # Assigning a Call to a Name (line 865):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5791' (line 865)
            call_assignment_5791_8720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_5791', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8721 = stypy_get_value_from_tuple(call_assignment_5791_8720, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_5792' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_5792', stypy_get_value_from_tuple_call_result_8721)
            
            # Assigning a Name to a Name (line 865):
            # Getting the type of 'call_assignment_5792' (line 865)
            call_assignment_5792_8722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_5792')
            # Assigning a type to the variable 'parent_stmts' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'parent_stmts', call_assignment_5792_8722)
            
            # Assigning a Call to a Name (line 865):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_5791' (line 865)
            call_assignment_5791_8723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_5791', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_8724 = stypy_get_value_from_tuple(call_assignment_5791_8723, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_5793' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_5793', stypy_get_value_from_tuple_call_result_8724)
            
            # Assigning a Name to a Name (line 865):
            # Getting the type of 'call_assignment_5793' (line 865)
            call_assignment_5793_8725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_5793')
            # Assigning a type to the variable 'parent_var' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 26), 'parent_var', call_assignment_5793_8725)
            
            # Assigning a Call to a Name (line 867):
            
            # Assigning a Call to a Name (line 867):
            
            # Call to create_attribute(...): (line 867)
            # Processing the call arguments (line 867)
            # Getting the type of 'parent_var' (line 867)
            parent_var_8728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 62), 'parent_var', False)
            str_8729 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 74), 'str', 'delete_member')
            # Processing the call keyword arguments (line 867)
            # Getting the type of 'node' (line 868)
            node_8730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 62), 'node', False)
            # Obtaining the member 'lineno' of a type (line 868)
            lineno_8731 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 62), node_8730, 'lineno')
            keyword_8732 = lineno_8731
            # Getting the type of 'node' (line 869)
            node_8733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 64), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 869)
            col_offset_8734 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 64), node_8733, 'col_offset')
            keyword_8735 = col_offset_8734
            kwargs_8736 = {'column': keyword_8735, 'line': keyword_8732}
            # Getting the type of 'core_language_copy' (line 867)
            core_language_copy_8726 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 26), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 867)
            create_attribute_8727 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 26), core_language_copy_8726, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 867)
            create_attribute_call_result_8737 = invoke(stypy.reporting.localization.Localization(__file__, 867, 26), create_attribute_8727, *[parent_var_8728, str_8729], **kwargs_8736)
            
            # Assigning a type to the variable 'delete_func' (line 867)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 12), 'delete_func', create_attribute_call_result_8737)
            
            # Assigning a Call to a Name (line 871):
            
            # Assigning a Call to a Name (line 871):
            
            # Call to create_localization(...): (line 871)
            # Processing the call arguments (line 871)
            # Getting the type of 'node' (line 871)
            node_8740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 871)
            lineno_8741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 68), node_8740, 'lineno')
            # Getting the type of 'node' (line 871)
            node_8742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 871)
            col_offset_8743 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 81), node_8742, 'col_offset')
            # Processing the call keyword arguments (line 871)
            kwargs_8744 = {}
            # Getting the type of 'stypy_functions_copy' (line 871)
            stypy_functions_copy_8738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 871)
            create_localization_8739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 27), stypy_functions_copy_8738, 'create_localization')
            # Calling create_localization(args, kwargs) (line 871)
            create_localization_call_result_8745 = invoke(stypy.reporting.localization.Localization(__file__, 871, 27), create_localization_8739, *[lineno_8741, col_offset_8743], **kwargs_8744)
            
            # Assigning a type to the variable 'localization' (line 871)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 12), 'localization', create_localization_call_result_8745)
            
            # Assigning a Call to a Name (line 872):
            
            # Assigning a Call to a Name (line 872):
            
            # Call to create_call_expression(...): (line 872)
            # Processing the call arguments (line 872)
            # Getting the type of 'delete_func' (line 872)
            delete_func_8748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 71), 'delete_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 873)
            list_8749 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 66), 'list')
            # Adding type elements to the builtin type 'list' instance (line 873)
            # Adding element type (line 873)
            # Getting the type of 'localization' (line 873)
            localization_8750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 67), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 873, 66), list_8749, localization_8750)
            # Adding element type (line 873)
            # Getting the type of 'attr' (line 873)
            attr_8751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 81), 'attr', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 873, 66), list_8749, attr_8751)
            
            # Processing the call keyword arguments (line 872)
            kwargs_8752 = {}
            # Getting the type of 'functions_copy' (line 872)
            functions_copy_8746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 33), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 872)
            create_call_expression_8747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 33), functions_copy_8746, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 872)
            create_call_expression_call_result_8753 = invoke(stypy.reporting.localization.Localization(__file__, 872, 33), create_call_expression_8747, *[delete_func_8748, list_8749], **kwargs_8752)
            
            # Assigning a type to the variable 'delete_member_call' (line 872)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'delete_member_call', create_call_expression_call_result_8753)
            
            # Getting the type of 'stmts' (line 875)
            stmts_8754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 12), 'stmts')
            
            # Call to flatten_lists(...): (line 875)
            # Processing the call arguments (line 875)
            # Getting the type of 'comment' (line 875)
            comment_8757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 56), 'comment', False)
            # Getting the type of 'parent_stmts' (line 875)
            parent_stmts_8758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 65), 'parent_stmts', False)
            # Getting the type of 'delete_member_call' (line 875)
            delete_member_call_8759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 79), 'delete_member_call', False)
            # Processing the call keyword arguments (line 875)
            kwargs_8760 = {}
            # Getting the type of 'stypy_functions_copy' (line 875)
            stypy_functions_copy_8755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 21), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 875)
            flatten_lists_8756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 21), stypy_functions_copy_8755, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 875)
            flatten_lists_call_result_8761 = invoke(stypy.reporting.localization.Localization(__file__, 875, 21), flatten_lists_8756, *[comment_8757, parent_stmts_8758, delete_member_call_8759], **kwargs_8760)
            
            # Applying the binary operator '+=' (line 875)
            result_iadd_8762 = python_operator(stypy.reporting.localization.Localization(__file__, 875, 12), '+=', stmts_8754, flatten_lists_call_result_8761)
            # Assigning a type to the variable 'stmts' (line 875)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 12), 'stmts', result_iadd_8762)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'stmts' (line 877)
        stmts_8763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 15), 'stmts')
        # Assigning a type to the variable 'stypy_return_type' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'stypy_return_type', stmts_8763)
        
        # ################# End of 'visit_Delete(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Delete' in the type store
        # Getting the type of 'stypy_return_type' (line 850)
        stypy_return_type_8764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8764)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Delete'
        return stypy_return_type_8764


    @norecursion
    def visit_Assert(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Assert'
        module_type_store = module_type_store.open_function_context('visit_Assert', 881, 4, False)
        # Assigning a type to the variable 'self' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Assert')
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Assert', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Assert', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Assert(...)' code ##################

        
        # Assigning a Call to a Name (line 882):
        
        # Assigning a Call to a Name (line 882):
        
        # Call to create_src_comment(...): (line 882)
        # Processing the call arguments (line 882)
        str_8767 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 58), 'str', 'Evaluating assert statement condition')
        # Processing the call keyword arguments (line 882)
        kwargs_8768 = {}
        # Getting the type of 'stypy_functions_copy' (line 882)
        stypy_functions_copy_8765 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 882)
        create_src_comment_8766 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 18), stypy_functions_copy_8765, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 882)
        create_src_comment_call_result_8769 = invoke(stypy.reporting.localization.Localization(__file__, 882, 18), create_src_comment_8766, *[str_8767], **kwargs_8768)
        
        # Assigning a type to the variable 'comment' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 8), 'comment', create_src_comment_call_result_8769)
        
        # Assigning a Call to a Tuple (line 883):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 883)
        # Processing the call arguments (line 883)
        # Getting the type of 'node' (line 883)
        node_8772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 32), 'node', False)
        # Obtaining the member 'test' of a type (line 883)
        test_8773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 32), node_8772, 'test')
        # Getting the type of 'context' (line 883)
        context_8774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 43), 'context', False)
        # Processing the call keyword arguments (line 883)
        kwargs_8775 = {}
        # Getting the type of 'self' (line 883)
        self_8770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 21), 'self', False)
        # Obtaining the member 'visit' of a type (line 883)
        visit_8771 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 21), self_8770, 'visit')
        # Calling visit(args, kwargs) (line 883)
        visit_call_result_8776 = invoke(stypy.reporting.localization.Localization(__file__, 883, 21), visit_8771, *[test_8773, context_8774], **kwargs_8775)
        
        # Assigning a type to the variable 'call_assignment_5794' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_5794', visit_call_result_8776)
        
        # Assigning a Call to a Name (line 883):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5794' (line 883)
        call_assignment_5794_8777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_5794', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8778 = stypy_get_value_from_tuple(call_assignment_5794_8777, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5795' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_5795', stypy_get_value_from_tuple_call_result_8778)
        
        # Assigning a Name to a Name (line 883):
        # Getting the type of 'call_assignment_5795' (line 883)
        call_assignment_5795_8779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_5795')
        # Assigning a type to the variable 'stmts' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'stmts', call_assignment_5795_8779)
        
        # Assigning a Call to a Name (line 883):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5794' (line 883)
        call_assignment_5794_8780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_5794', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8781 = stypy_get_value_from_tuple(call_assignment_5794_8780, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5796' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_5796', stypy_get_value_from_tuple_call_result_8781)
        
        # Assigning a Name to a Name (line 883):
        # Getting the type of 'call_assignment_5796' (line 883)
        call_assignment_5796_8782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_5796')
        # Assigning a type to the variable 'var' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 15), 'var', call_assignment_5796_8782)
        
        # Call to flatten_lists(...): (line 884)
        # Processing the call arguments (line 884)
        # Getting the type of 'comment' (line 884)
        comment_8785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 50), 'comment', False)
        # Getting the type of 'stmts' (line 884)
        stmts_8786 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 59), 'stmts', False)
        # Processing the call keyword arguments (line 884)
        kwargs_8787 = {}
        # Getting the type of 'stypy_functions_copy' (line 884)
        stypy_functions_copy_8783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 884)
        flatten_lists_8784 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 15), stypy_functions_copy_8783, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 884)
        flatten_lists_call_result_8788 = invoke(stypy.reporting.localization.Localization(__file__, 884, 15), flatten_lists_8784, *[comment_8785, stmts_8786], **kwargs_8787)
        
        # Assigning a type to the variable 'stypy_return_type' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 8), 'stypy_return_type', flatten_lists_call_result_8788)
        
        # ################# End of 'visit_Assert(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Assert' in the type store
        # Getting the type of 'stypy_return_type' (line 881)
        stypy_return_type_8789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8789)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Assert'
        return stypy_return_type_8789


    @norecursion
    def visit_Exec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Exec'
        module_type_store = module_type_store.open_function_context('visit_Exec', 886, 4, False)
        # Assigning a type to the variable 'self' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Exec')
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Exec', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Exec', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Exec(...)' code ##################

        
        # Assigning a Call to a Name (line 887):
        
        # Assigning a Call to a Name (line 887):
        
        # Call to create_src_comment(...): (line 887)
        # Processing the call arguments (line 887)
        str_8792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 62), 'str', 'Dynamic code evaluation using an exec statement')
        # Processing the call keyword arguments (line 887)
        kwargs_8793 = {}
        # Getting the type of 'stypy_functions_copy' (line 887)
        stypy_functions_copy_8790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 887)
        create_src_comment_8791 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 22), stypy_functions_copy_8790, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 887)
        create_src_comment_call_result_8794 = invoke(stypy.reporting.localization.Localization(__file__, 887, 22), create_src_comment_8791, *[str_8792], **kwargs_8793)
        
        # Assigning a type to the variable 'src_comment' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'src_comment', create_src_comment_call_result_8794)
        
        # Assigning a Call to a Name (line 888):
        
        # Assigning a Call to a Name (line 888):
        
        # Call to create_localization(...): (line 888)
        # Processing the call arguments (line 888)
        # Getting the type of 'node' (line 888)
        node_8797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 888)
        lineno_8798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 64), node_8797, 'lineno')
        # Getting the type of 'node' (line 888)
        node_8799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 888)
        col_offset_8800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 77), node_8799, 'col_offset')
        # Processing the call keyword arguments (line 888)
        kwargs_8801 = {}
        # Getting the type of 'stypy_functions_copy' (line 888)
        stypy_functions_copy_8795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 888)
        create_localization_8796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 23), stypy_functions_copy_8795, 'create_localization')
        # Calling create_localization(args, kwargs) (line 888)
        create_localization_call_result_8802 = invoke(stypy.reporting.localization.Localization(__file__, 888, 23), create_localization_8796, *[lineno_8798, col_offset_8800], **kwargs_8801)
        
        # Assigning a type to the variable 'localization' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 8), 'localization', create_localization_call_result_8802)
        
        # Assigning a Call to a Name (line 889):
        
        # Assigning a Call to a Name (line 889):
        
        # Call to create_Name(...): (line 889)
        # Processing the call arguments (line 889)
        str_8805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 57), 'str', 'ensure_var_of_types')
        # Processing the call keyword arguments (line 889)
        # Getting the type of 'node' (line 890)
        node_8806 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 57), 'node', False)
        # Obtaining the member 'lineno' of a type (line 890)
        lineno_8807 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 57), node_8806, 'lineno')
        keyword_8808 = lineno_8807
        # Getting the type of 'node' (line 891)
        node_8809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 59), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 891)
        col_offset_8810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 59), node_8809, 'col_offset')
        keyword_8811 = col_offset_8810
        kwargs_8812 = {'column': keyword_8811, 'line': keyword_8808}
        # Getting the type of 'core_language_copy' (line 889)
        core_language_copy_8803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 889)
        create_Name_8804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 26), core_language_copy_8803, 'create_Name')
        # Calling create_Name(args, kwargs) (line 889)
        create_Name_call_result_8813 = invoke(stypy.reporting.localization.Localization(__file__, 889, 26), create_Name_8804, *[str_8805], **kwargs_8812)
        
        # Assigning a type to the variable 'type_check_func' (line 889)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 8), 'type_check_func', create_Name_call_result_8813)
        
        # Assigning a Call to a Tuple (line 893):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 893)
        # Processing the call arguments (line 893)
        # Getting the type of 'node' (line 893)
        node_8816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 42), 'node', False)
        # Obtaining the member 'body' of a type (line 893)
        body_8817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 42), node_8816, 'body')
        # Getting the type of 'context' (line 893)
        context_8818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 53), 'context', False)
        # Processing the call keyword arguments (line 893)
        kwargs_8819 = {}
        # Getting the type of 'self' (line 893)
        self_8814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 893)
        visit_8815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 31), self_8814, 'visit')
        # Calling visit(args, kwargs) (line 893)
        visit_call_result_8820 = invoke(stypy.reporting.localization.Localization(__file__, 893, 31), visit_8815, *[body_8817, context_8818], **kwargs_8819)
        
        # Assigning a type to the variable 'call_assignment_5797' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_5797', visit_call_result_8820)
        
        # Assigning a Call to a Name (line 893):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5797' (line 893)
        call_assignment_5797_8821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_5797', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8822 = stypy_get_value_from_tuple(call_assignment_5797_8821, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5798' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_5798', stypy_get_value_from_tuple_call_result_8822)
        
        # Assigning a Name to a Name (line 893):
        # Getting the type of 'call_assignment_5798' (line 893)
        call_assignment_5798_8823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_5798')
        # Assigning a type to the variable 'body_stmts' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'body_stmts', call_assignment_5798_8823)
        
        # Assigning a Call to a Name (line 893):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5797' (line 893)
        call_assignment_5797_8824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_5797', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8825 = stypy_get_value_from_tuple(call_assignment_5797_8824, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5799' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_5799', stypy_get_value_from_tuple_call_result_8825)
        
        # Assigning a Name to a Name (line 893):
        # Getting the type of 'call_assignment_5799' (line 893)
        call_assignment_5799_8826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_5799')
        # Assigning a type to the variable 'body_var' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 20), 'body_var', call_assignment_5799_8826)
        
        # Assigning a Call to a Name (line 895):
        
        # Assigning a Call to a Name (line 895):
        
        # Call to create_str(...): (line 895)
        # Processing the call arguments (line 895)
        str_8829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 52), 'str', 'exec parameter')
        # Processing the call keyword arguments (line 895)
        kwargs_8830 = {}
        # Getting the type of 'core_language_copy' (line 895)
        core_language_copy_8827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 895)
        create_str_8828 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 22), core_language_copy_8827, 'create_str')
        # Calling create_str(args, kwargs) (line 895)
        create_str_call_result_8831 = invoke(stypy.reporting.localization.Localization(__file__, 895, 22), create_str_8828, *[str_8829], **kwargs_8830)
        
        # Assigning a type to the variable 'description' (line 895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'description', create_str_call_result_8831)
        
        # Assigning a Call to a Name (line 896):
        
        # Assigning a Call to a Name (line 896):
        
        # Call to create_str(...): (line 896)
        # Processing the call arguments (line 896)
        str_8834 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 52), 'str', 'StringType')
        # Processing the call keyword arguments (line 896)
        kwargs_8835 = {}
        # Getting the type of 'core_language_copy' (line 896)
        core_language_copy_8832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 896)
        create_str_8833 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 22), core_language_copy_8832, 'create_str')
        # Calling create_str(args, kwargs) (line 896)
        create_str_call_result_8836 = invoke(stypy.reporting.localization.Localization(__file__, 896, 22), create_str_8833, *[str_8834], **kwargs_8835)
        
        # Assigning a type to the variable 'string_type' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'string_type', create_str_call_result_8836)
        
        # Assigning a Call to a Name (line 897):
        
        # Assigning a Call to a Name (line 897):
        
        # Call to create_str(...): (line 897)
        # Processing the call arguments (line 897)
        str_8839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 50), 'str', 'FileType')
        # Processing the call keyword arguments (line 897)
        kwargs_8840 = {}
        # Getting the type of 'core_language_copy' (line 897)
        core_language_copy_8837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 20), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 897)
        create_str_8838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 897, 20), core_language_copy_8837, 'create_str')
        # Calling create_str(args, kwargs) (line 897)
        create_str_call_result_8841 = invoke(stypy.reporting.localization.Localization(__file__, 897, 20), create_str_8838, *[str_8839], **kwargs_8840)
        
        # Assigning a type to the variable 'file_type' (line 897)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 897, 8), 'file_type', create_str_call_result_8841)
        
        # Assigning a Call to a Name (line 898):
        
        # Assigning a Call to a Name (line 898):
        
        # Call to create_str(...): (line 898)
        # Processing the call arguments (line 898)
        str_8844 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 50), 'str', 'CodeType')
        # Processing the call keyword arguments (line 898)
        kwargs_8845 = {}
        # Getting the type of 'core_language_copy' (line 898)
        core_language_copy_8842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 20), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 898)
        create_str_8843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 898, 20), core_language_copy_8842, 'create_str')
        # Calling create_str(args, kwargs) (line 898)
        create_str_call_result_8846 = invoke(stypy.reporting.localization.Localization(__file__, 898, 20), create_str_8843, *[str_8844], **kwargs_8845)
        
        # Assigning a type to the variable 'code_type' (line 898)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 898, 8), 'code_type', create_str_call_result_8846)
        
        # Assigning a Call to a Name (line 899):
        
        # Assigning a Call to a Name (line 899):
        
        # Call to create_call_expression(...): (line 899)
        # Processing the call arguments (line 899)
        # Getting the type of 'type_check_func' (line 899)
        type_check_func_8849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 66), 'type_check_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 900)
        list_8850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 900)
        # Adding element type (line 900)
        # Getting the type of 'localization' (line 900)
        localization_8851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 62), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_8850, localization_8851)
        # Adding element type (line 900)
        # Getting the type of 'body_var' (line 900)
        body_var_8852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 76), 'body_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_8850, body_var_8852)
        # Adding element type (line 900)
        # Getting the type of 'description' (line 900)
        description_8853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 86), 'description', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_8850, description_8853)
        # Adding element type (line 900)
        # Getting the type of 'string_type' (line 901)
        string_type_8854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 62), 'string_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_8850, string_type_8854)
        # Adding element type (line 900)
        # Getting the type of 'file_type' (line 902)
        file_type_8855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 62), 'file_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_8850, file_type_8855)
        # Adding element type (line 900)
        # Getting the type of 'code_type' (line 903)
        code_type_8856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 62), 'code_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_8850, code_type_8856)
        
        # Processing the call keyword arguments (line 899)
        kwargs_8857 = {}
        # Getting the type of 'functions_copy' (line 899)
        functions_copy_8847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 28), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 899)
        create_call_expression_8848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 899, 28), functions_copy_8847, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 899)
        create_call_expression_call_result_8858 = invoke(stypy.reporting.localization.Localization(__file__, 899, 28), create_call_expression_8848, *[type_check_func_8849, list_8850], **kwargs_8857)
        
        # Assigning a type to the variable 'check_params_call' (line 899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 8), 'check_params_call', create_call_expression_call_result_8858)
        
        # Assigning a Call to a Name (line 905):
        
        # Assigning a Call to a Name (line 905):
        
        # Call to create_unsupported_feature_call(...): (line 905)
        # Processing the call arguments (line 905)
        # Getting the type of 'localization' (line 905)
        localization_8861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 88), 'localization', False)
        str_8862 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 102), 'str', 'exec')
        str_8863 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 83), 'str', 'Dynamic code evaluation using exec is not yet supported by stypy')
        # Getting the type of 'node' (line 907)
        node_8864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 83), 'node', False)
        # Obtaining the member 'lineno' of a type (line 907)
        lineno_8865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 83), node_8864, 'lineno')
        # Getting the type of 'node' (line 907)
        node_8866 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 96), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 907)
        col_offset_8867 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 96), node_8866, 'col_offset')
        # Processing the call keyword arguments (line 905)
        kwargs_8868 = {}
        # Getting the type of 'stypy_functions_copy' (line 905)
        stypy_functions_copy_8859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 35), 'stypy_functions_copy', False)
        # Obtaining the member 'create_unsupported_feature_call' of a type (line 905)
        create_unsupported_feature_call_8860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 905, 35), stypy_functions_copy_8859, 'create_unsupported_feature_call')
        # Calling create_unsupported_feature_call(args, kwargs) (line 905)
        create_unsupported_feature_call_call_result_8869 = invoke(stypy.reporting.localization.Localization(__file__, 905, 35), create_unsupported_feature_call_8860, *[localization_8861, str_8862, str_8863, lineno_8865, col_offset_8867], **kwargs_8868)
        
        # Assigning a type to the variable 'unsupported_feature_call' (line 905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 8), 'unsupported_feature_call', create_unsupported_feature_call_call_result_8869)
        
        # Call to flatten_lists(...): (line 909)
        # Processing the call arguments (line 909)
        # Getting the type of 'src_comment' (line 909)
        src_comment_8872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 50), 'src_comment', False)
        # Getting the type of 'body_stmts' (line 909)
        body_stmts_8873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 63), 'body_stmts', False)
        # Getting the type of 'check_params_call' (line 909)
        check_params_call_8874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 75), 'check_params_call', False)
        # Getting the type of 'unsupported_feature_call' (line 909)
        unsupported_feature_call_8875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 94), 'unsupported_feature_call', False)
        # Processing the call keyword arguments (line 909)
        kwargs_8876 = {}
        # Getting the type of 'stypy_functions_copy' (line 909)
        stypy_functions_copy_8870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 909)
        flatten_lists_8871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 15), stypy_functions_copy_8870, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 909)
        flatten_lists_call_result_8877 = invoke(stypy.reporting.localization.Localization(__file__, 909, 15), flatten_lists_8871, *[src_comment_8872, body_stmts_8873, check_params_call_8874, unsupported_feature_call_8875], **kwargs_8876)
        
        # Assigning a type to the variable 'stypy_return_type' (line 909)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 909, 8), 'stypy_return_type', flatten_lists_call_result_8877)
        
        # ################# End of 'visit_Exec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Exec' in the type store
        # Getting the type of 'stypy_return_type' (line 886)
        stypy_return_type_8878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8878)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Exec'
        return stypy_return_type_8878


    @norecursion
    def visit_Yield(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Yield'
        module_type_store = module_type_store.open_function_context('visit_Yield', 911, 4, False)
        # Assigning a type to the variable 'self' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Yield')
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Yield', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Yield', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Yield(...)' code ##################

        
        # Assigning a Call to a Name (line 912):
        
        # Assigning a Call to a Name (line 912):
        
        # Call to create_src_comment(...): (line 912)
        # Processing the call arguments (line 912)
        str_8881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 62), 'str', 'Creating a generator')
        # Processing the call keyword arguments (line 912)
        kwargs_8882 = {}
        # Getting the type of 'stypy_functions_copy' (line 912)
        stypy_functions_copy_8879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 912)
        create_src_comment_8880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 22), stypy_functions_copy_8879, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 912)
        create_src_comment_call_result_8883 = invoke(stypy.reporting.localization.Localization(__file__, 912, 22), create_src_comment_8880, *[str_8881], **kwargs_8882)
        
        # Assigning a type to the variable 'src_comment' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'src_comment', create_src_comment_call_result_8883)
        
        # Assigning a Call to a Name (line 913):
        
        # Assigning a Call to a Name (line 913):
        
        # Call to create_localization(...): (line 913)
        # Processing the call arguments (line 913)
        # Getting the type of 'node' (line 913)
        node_8886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 913)
        lineno_8887 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 64), node_8886, 'lineno')
        # Getting the type of 'node' (line 913)
        node_8888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 913)
        col_offset_8889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 77), node_8888, 'col_offset')
        # Processing the call keyword arguments (line 913)
        kwargs_8890 = {}
        # Getting the type of 'stypy_functions_copy' (line 913)
        stypy_functions_copy_8884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 913)
        create_localization_8885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 23), stypy_functions_copy_8884, 'create_localization')
        # Calling create_localization(args, kwargs) (line 913)
        create_localization_call_result_8891 = invoke(stypy.reporting.localization.Localization(__file__, 913, 23), create_localization_8885, *[lineno_8887, col_offset_8889], **kwargs_8890)
        
        # Assigning a type to the variable 'localization' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 8), 'localization', create_localization_call_result_8891)
        
        # Assigning a Call to a Tuple (line 914):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 914)
        # Processing the call arguments (line 914)
        # Getting the type of 'node' (line 914)
        node_8894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 76), 'node', False)
        # Obtaining the member 'value' of a type (line 914)
        value_8895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 914, 76), node_8894, 'value')
        # Getting the type of 'context' (line 914)
        context_8896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 88), 'context', False)
        # Processing the call keyword arguments (line 914)
        kwargs_8897 = {}
        # Getting the type of 'self' (line 914)
        self_8892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 65), 'self', False)
        # Obtaining the member 'visit' of a type (line 914)
        visit_8893 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 914, 65), self_8892, 'visit')
        # Calling visit(args, kwargs) (line 914)
        visit_call_result_8898 = invoke(stypy.reporting.localization.Localization(__file__, 914, 65), visit_8893, *[value_8895, context_8896], **kwargs_8897)
        
        # Assigning a type to the variable 'call_assignment_5800' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_5800', visit_call_result_8898)
        
        # Assigning a Call to a Name (line 914):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5800' (line 914)
        call_assignment_5800_8899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_5800', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8900 = stypy_get_value_from_tuple(call_assignment_5800_8899, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5801' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_5801', stypy_get_value_from_tuple_call_result_8900)
        
        # Assigning a Name to a Name (line 914):
        # Getting the type of 'call_assignment_5801' (line 914)
        call_assignment_5801_8901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_5801')
        # Assigning a type to the variable 'generator_stored_type_stmts' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'generator_stored_type_stmts', call_assignment_5801_8901)
        
        # Assigning a Call to a Name (line 914):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5800' (line 914)
        call_assignment_5800_8902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_5800', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8903 = stypy_get_value_from_tuple(call_assignment_5800_8902, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5802' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_5802', stypy_get_value_from_tuple_call_result_8903)
        
        # Assigning a Name to a Name (line 914):
        # Getting the type of 'call_assignment_5802' (line 914)
        call_assignment_5802_8904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_5802')
        # Assigning a type to the variable 'generator_stored_type_var' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 37), 'generator_stored_type_var', call_assignment_5802_8904)
        
        # Assigning a Call to a Name (line 916):
        
        # Assigning a Call to a Name (line 916):
        
        # Call to create_str(...): (line 916)
        # Processing the call arguments (line 916)
        str_8907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 53), 'str', 'types')
        # Processing the call keyword arguments (line 916)
        kwargs_8908 = {}
        # Getting the type of 'core_language_copy' (line 916)
        core_language_copy_8905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 23), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 916)
        create_str_8906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 23), core_language_copy_8905, 'create_str')
        # Calling create_str(args, kwargs) (line 916)
        create_str_call_result_8909 = invoke(stypy.reporting.localization.Localization(__file__, 916, 23), create_str_8906, *[str_8907], **kwargs_8908)
        
        # Assigning a type to the variable 'types_module' (line 916)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 8), 'types_module', create_str_call_result_8909)
        
        # Assigning a Call to a Name (line 917):
        
        # Assigning a Call to a Name (line 917):
        
        # Call to create_str(...): (line 917)
        # Processing the call arguments (line 917)
        str_8912 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 55), 'str', 'GeneratorType')
        # Processing the call keyword arguments (line 917)
        kwargs_8913 = {}
        # Getting the type of 'core_language_copy' (line 917)
        core_language_copy_8910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 25), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 917)
        create_str_8911 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 25), core_language_copy_8910, 'create_str')
        # Calling create_str(args, kwargs) (line 917)
        create_str_call_result_8914 = invoke(stypy.reporting.localization.Localization(__file__, 917, 25), create_str_8911, *[str_8912], **kwargs_8913)
        
        # Assigning a type to the variable 'generator_type' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 8), 'generator_type', create_str_call_result_8914)
        
        # Assigning a Call to a Name (line 918):
        
        # Assigning a Call to a Name (line 918):
        
        # Call to create_Name(...): (line 918)
        # Processing the call arguments (line 918)
        str_8917 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 55), 'str', 'get_python_api_type')
        # Processing the call keyword arguments (line 918)
        kwargs_8918 = {}
        # Getting the type of 'core_language_copy' (line 918)
        core_language_copy_8915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 918)
        create_Name_8916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 24), core_language_copy_8915, 'create_Name')
        # Calling create_Name(args, kwargs) (line 918)
        create_Name_call_result_8919 = invoke(stypy.reporting.localization.Localization(__file__, 918, 24), create_Name_8916, *[str_8917], **kwargs_8918)
        
        # Assigning a type to the variable 'get_type_func' (line 918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'get_type_func', create_Name_call_result_8919)
        
        # Assigning a Call to a Name (line 919):
        
        # Assigning a Call to a Name (line 919):
        
        # Call to create_call(...): (line 919)
        # Processing the call arguments (line 919)
        # Getting the type of 'get_type_func' (line 919)
        get_type_func_8922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 56), 'get_type_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 920)
        list_8923 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 920, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 920)
        # Adding element type (line 920)
        # Getting the type of 'localization' (line 920)
        localization_8924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 52), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 51), list_8923, localization_8924)
        # Adding element type (line 920)
        # Getting the type of 'types_module' (line 920)
        types_module_8925 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 66), 'types_module', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 51), list_8923, types_module_8925)
        # Adding element type (line 920)
        # Getting the type of 'generator_type' (line 920)
        generator_type_8926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 80), 'generator_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 51), list_8923, generator_type_8926)
        
        # Processing the call keyword arguments (line 919)
        kwargs_8927 = {}
        # Getting the type of 'functions_copy' (line 919)
        functions_copy_8920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 29), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 919)
        create_call_8921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 29), functions_copy_8920, 'create_call')
        # Calling create_call(args, kwargs) (line 919)
        create_call_call_result_8928 = invoke(stypy.reporting.localization.Localization(__file__, 919, 29), create_call_8921, *[get_type_func_8922, list_8923], **kwargs_8927)
        
        # Assigning a type to the variable 'get_generator_call' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 8), 'get_generator_call', create_call_call_result_8928)
        
        # Assigning a Call to a Tuple (line 922):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 922)
        # Processing the call arguments (line 922)
        # Getting the type of 'get_generator_call' (line 922)
        get_generator_call_8931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 86), 'get_generator_call', False)
        # Getting the type of 'node' (line 922)
        node_8932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 106), 'node', False)
        # Obtaining the member 'lineno' of a type (line 922)
        lineno_8933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 106), node_8932, 'lineno')
        # Getting the type of 'node' (line 923)
        node_8934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 81), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 923)
        col_offset_8935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 923, 81), node_8934, 'col_offset')
        # Processing the call keyword arguments (line 922)
        kwargs_8936 = {}
        # Getting the type of 'stypy_functions_copy' (line 922)
        stypy_functions_copy_8929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 46), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 922)
        create_temp_Assign_8930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 46), stypy_functions_copy_8929, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 922)
        create_temp_Assign_call_result_8937 = invoke(stypy.reporting.localization.Localization(__file__, 922, 46), create_temp_Assign_8930, *[get_generator_call_8931, lineno_8933, col_offset_8935], **kwargs_8936)
        
        # Assigning a type to the variable 'call_assignment_5803' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_5803', create_temp_Assign_call_result_8937)
        
        # Assigning a Call to a Name (line 922):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5803' (line 922)
        call_assignment_5803_8938 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_5803', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8939 = stypy_get_value_from_tuple(call_assignment_5803_8938, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5804' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_5804', stypy_get_value_from_tuple_call_result_8939)
        
        # Assigning a Name to a Name (line 922):
        # Getting the type of 'call_assignment_5804' (line 922)
        call_assignment_5804_8940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_5804')
        # Assigning a type to the variable 'generator_stmts' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'generator_stmts', call_assignment_5804_8940)
        
        # Assigning a Call to a Name (line 922):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5803' (line 922)
        call_assignment_5803_8941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_5803', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8942 = stypy_get_value_from_tuple(call_assignment_5803_8941, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5805' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_5805', stypy_get_value_from_tuple_call_result_8942)
        
        # Assigning a Name to a Name (line 922):
        # Getting the type of 'call_assignment_5805' (line 922)
        call_assignment_5805_8943 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_5805')
        # Assigning a type to the variable 'generator_type_var' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 25), 'generator_type_var', call_assignment_5805_8943)
        
        # Assigning a Call to a Name (line 926):
        
        # Assigning a Call to a Name (line 926):
        
        # Call to create_attribute(...): (line 926)
        # Processing the call arguments (line 926)
        # Getting the type of 'generator_type_var' (line 926)
        generator_type_var_8946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 62), 'generator_type_var', False)
        str_8947 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 82), 'str', 'set_elements_type')
        # Processing the call keyword arguments (line 926)
        # Getting the type of 'node' (line 927)
        node_8948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 62), 'node', False)
        # Obtaining the member 'lineno' of a type (line 927)
        lineno_8949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 62), node_8948, 'lineno')
        keyword_8950 = lineno_8949
        # Getting the type of 'node' (line 928)
        node_8951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 64), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 928)
        col_offset_8952 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 64), node_8951, 'col_offset')
        keyword_8953 = col_offset_8952
        kwargs_8954 = {'column': keyword_8953, 'line': keyword_8950}
        # Getting the type of 'core_language_copy' (line 926)
        core_language_copy_8944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 26), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 926)
        create_attribute_8945 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 26), core_language_copy_8944, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 926)
        create_attribute_call_result_8955 = invoke(stypy.reporting.localization.Localization(__file__, 926, 26), create_attribute_8945, *[generator_type_var_8946, str_8947], **kwargs_8954)
        
        # Assigning a type to the variable 'store_type_func' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 8), 'store_type_func', create_attribute_call_result_8955)
        
        # Assigning a Call to a Name (line 930):
        
        # Assigning a Call to a Name (line 930):
        
        # Call to create_call_expression(...): (line 930)
        # Processing the call arguments (line 930)
        # Getting the type of 'store_type_func' (line 930)
        store_type_func_8958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 64), 'store_type_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 930)
        list_8959 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 81), 'list')
        # Adding type elements to the builtin type 'list' instance (line 930)
        # Adding element type (line 930)
        # Getting the type of 'localization' (line 930)
        localization_8960 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 82), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 81), list_8959, localization_8960)
        # Adding element type (line 930)
        # Getting the type of 'generator_stored_type_var' (line 930)
        generator_stored_type_var_8961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 96), 'generator_stored_type_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 81), list_8959, generator_stored_type_var_8961)
        
        # Processing the call keyword arguments (line 930)
        kwargs_8962 = {}
        # Getting the type of 'functions_copy' (line 930)
        functions_copy_8956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 26), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 930)
        create_call_expression_8957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 930, 26), functions_copy_8956, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 930)
        create_call_expression_call_result_8963 = invoke(stypy.reporting.localization.Localization(__file__, 930, 26), create_call_expression_8957, *[store_type_func_8958, list_8959], **kwargs_8962)
        
        # Assigning a type to the variable 'store_type_call' (line 930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 8), 'store_type_call', create_call_expression_call_result_8963)
        
        # Assigning a Call to a Name (line 932):
        
        # Assigning a Call to a Name (line 932):
        
        # Call to assign_as_return_type(...): (line 932)
        # Processing the call arguments (line 932)
        # Getting the type of 'generator_type_var' (line 932)
        generator_type_var_8966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 64), 'generator_type_var', False)
        # Processing the call keyword arguments (line 932)
        kwargs_8967 = {}
        # Getting the type of 'stypy_functions_copy' (line 932)
        stypy_functions_copy_8964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 21), 'stypy_functions_copy', False)
        # Obtaining the member 'assign_as_return_type' of a type (line 932)
        assign_as_return_type_8965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 932, 21), stypy_functions_copy_8964, 'assign_as_return_type')
        # Calling assign_as_return_type(args, kwargs) (line 932)
        assign_as_return_type_call_result_8968 = invoke(stypy.reporting.localization.Localization(__file__, 932, 21), assign_as_return_type_8965, *[generator_type_var_8966], **kwargs_8967)
        
        # Assigning a type to the variable 'ret_assign' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'ret_assign', assign_as_return_type_call_result_8968)
        
        # Call to flatten_lists(...): (line 934)
        # Processing the call arguments (line 934)
        # Getting the type of 'src_comment' (line 934)
        src_comment_8971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 50), 'src_comment', False)
        # Getting the type of 'generator_stored_type_stmts' (line 934)
        generator_stored_type_stmts_8972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 63), 'generator_stored_type_stmts', False)
        # Getting the type of 'generator_stmts' (line 934)
        generator_stmts_8973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 92), 'generator_stmts', False)
        # Getting the type of 'store_type_call' (line 934)
        store_type_call_8974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 109), 'store_type_call', False)
        # Getting the type of 'ret_assign' (line 935)
        ret_assign_8975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 45), 'ret_assign', False)
        # Processing the call keyword arguments (line 934)
        kwargs_8976 = {}
        # Getting the type of 'stypy_functions_copy' (line 934)
        stypy_functions_copy_8969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 934)
        flatten_lists_8970 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 15), stypy_functions_copy_8969, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 934)
        flatten_lists_call_result_8977 = invoke(stypy.reporting.localization.Localization(__file__, 934, 15), flatten_lists_8970, *[src_comment_8971, generator_stored_type_stmts_8972, generator_stmts_8973, store_type_call_8974, ret_assign_8975], **kwargs_8976)
        
        # Assigning a type to the variable 'stypy_return_type' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'stypy_return_type', flatten_lists_call_result_8977)
        
        # ################# End of 'visit_Yield(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Yield' in the type store
        # Getting the type of 'stypy_return_type' (line 911)
        stypy_return_type_8978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_8978)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Yield'
        return stypy_return_type_8978


    @norecursion
    def visit_Raise(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Raise'
        module_type_store = module_type_store.open_function_context('visit_Raise', 937, 4, False)
        # Assigning a type to the variable 'self' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Raise')
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Raise', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Raise', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Raise(...)' code ##################

        
        # Assigning a Call to a Name (line 938):
        
        # Assigning a Call to a Name (line 938):
        
        # Call to create_localization(...): (line 938)
        # Processing the call arguments (line 938)
        # Getting the type of 'node' (line 938)
        node_8981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 938)
        lineno_8982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 64), node_8981, 'lineno')
        # Getting the type of 'node' (line 938)
        node_8983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 938)
        col_offset_8984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 77), node_8983, 'col_offset')
        # Processing the call keyword arguments (line 938)
        kwargs_8985 = {}
        # Getting the type of 'stypy_functions_copy' (line 938)
        stypy_functions_copy_8979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 938)
        create_localization_8980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 23), stypy_functions_copy_8979, 'create_localization')
        # Calling create_localization(args, kwargs) (line 938)
        create_localization_call_result_8986 = invoke(stypy.reporting.localization.Localization(__file__, 938, 23), create_localization_8980, *[lineno_8982, col_offset_8984], **kwargs_8985)
        
        # Assigning a type to the variable 'localization' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'localization', create_localization_call_result_8986)
        
        # Assigning a Call to a Tuple (line 940):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 940)
        # Processing the call arguments (line 940)
        # Getting the type of 'node' (line 940)
        node_8989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 42), 'node', False)
        # Obtaining the member 'type' of a type (line 940)
        type_8990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 940, 42), node_8989, 'type')
        # Getting the type of 'context' (line 940)
        context_8991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 53), 'context', False)
        # Processing the call keyword arguments (line 940)
        kwargs_8992 = {}
        # Getting the type of 'self' (line 940)
        self_8987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 940)
        visit_8988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 940, 31), self_8987, 'visit')
        # Calling visit(args, kwargs) (line 940)
        visit_call_result_8993 = invoke(stypy.reporting.localization.Localization(__file__, 940, 31), visit_8988, *[type_8990, context_8991], **kwargs_8992)
        
        # Assigning a type to the variable 'call_assignment_5806' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_5806', visit_call_result_8993)
        
        # Assigning a Call to a Name (line 940):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5806' (line 940)
        call_assignment_5806_8994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_5806', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8995 = stypy_get_value_from_tuple(call_assignment_5806_8994, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5807' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_5807', stypy_get_value_from_tuple_call_result_8995)
        
        # Assigning a Name to a Name (line 940):
        # Getting the type of 'call_assignment_5807' (line 940)
        call_assignment_5807_8996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_5807')
        # Assigning a type to the variable 'type_stmts' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'type_stmts', call_assignment_5807_8996)
        
        # Assigning a Call to a Name (line 940):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5806' (line 940)
        call_assignment_5806_8997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_5806', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_8998 = stypy_get_value_from_tuple(call_assignment_5806_8997, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5808' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_5808', stypy_get_value_from_tuple_call_result_8998)
        
        # Assigning a Name to a Name (line 940):
        # Getting the type of 'call_assignment_5808' (line 940)
        call_assignment_5808_8999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_5808')
        # Assigning a type to the variable 'type_var' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 20), 'type_var', call_assignment_5808_8999)
        
        # Assigning a Call to a Name (line 942):
        
        # Assigning a Call to a Name (line 942):
        
        # Call to create_Name(...): (line 942)
        # Processing the call arguments (line 942)
        str_9002 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 57), 'str', 'ensure_var_of_types')
        # Processing the call keyword arguments (line 942)
        # Getting the type of 'node' (line 943)
        node_9003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 57), 'node', False)
        # Obtaining the member 'lineno' of a type (line 943)
        lineno_9004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 943, 57), node_9003, 'lineno')
        keyword_9005 = lineno_9004
        # Getting the type of 'node' (line 944)
        node_9006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 59), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 944)
        col_offset_9007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 59), node_9006, 'col_offset')
        keyword_9008 = col_offset_9007
        kwargs_9009 = {'column': keyword_9008, 'line': keyword_9005}
        # Getting the type of 'core_language_copy' (line 942)
        core_language_copy_9000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 942)
        create_Name_9001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 26), core_language_copy_9000, 'create_Name')
        # Calling create_Name(args, kwargs) (line 942)
        create_Name_call_result_9010 = invoke(stypy.reporting.localization.Localization(__file__, 942, 26), create_Name_9001, *[str_9002], **kwargs_9009)
        
        # Assigning a type to the variable 'type_check_func' (line 942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'type_check_func', create_Name_call_result_9010)
        
        # Assigning a Call to a Name (line 946):
        
        # Assigning a Call to a Name (line 946):
        
        # Call to create_str(...): (line 946)
        # Processing the call arguments (line 946)
        str_9013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 52), 'str', 'raise parameter')
        # Processing the call keyword arguments (line 946)
        kwargs_9014 = {}
        # Getting the type of 'core_language_copy' (line 946)
        core_language_copy_9011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 946)
        create_str_9012 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 22), core_language_copy_9011, 'create_str')
        # Calling create_str(args, kwargs) (line 946)
        create_str_call_result_9015 = invoke(stypy.reporting.localization.Localization(__file__, 946, 22), create_str_9012, *[str_9013], **kwargs_9014)
        
        # Assigning a type to the variable 'description' (line 946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'description', create_str_call_result_9015)
        
        # Assigning a Call to a Name (line 947):
        
        # Assigning a Call to a Name (line 947):
        
        # Call to create_Name(...): (line 947)
        # Processing the call arguments (line 947)
        str_9018 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 55), 'str', 'Exception')
        # Processing the call keyword arguments (line 947)
        kwargs_9019 = {}
        # Getting the type of 'core_language_copy' (line 947)
        core_language_copy_9016 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 947)
        create_Name_9017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 24), core_language_copy_9016, 'create_Name')
        # Calling create_Name(args, kwargs) (line 947)
        create_Name_call_result_9020 = invoke(stypy.reporting.localization.Localization(__file__, 947, 24), create_Name_9017, *[str_9018], **kwargs_9019)
        
        # Assigning a type to the variable 'admitted_type' (line 947)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 8), 'admitted_type', create_Name_call_result_9020)
        
        # Assigning a Call to a Name (line 949):
        
        # Assigning a Call to a Name (line 949):
        
        # Call to create_call_expression(...): (line 949)
        # Processing the call arguments (line 949)
        # Getting the type of 'type_check_func' (line 949)
        type_check_func_9023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 66), 'type_check_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 950)
        list_9024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 950)
        # Adding element type (line 950)
        # Getting the type of 'localization' (line 950)
        localization_9025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 62), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_9024, localization_9025)
        # Adding element type (line 950)
        # Getting the type of 'type_var' (line 950)
        type_var_9026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 76), 'type_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_9024, type_var_9026)
        # Adding element type (line 950)
        # Getting the type of 'description' (line 950)
        description_9027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 86), 'description', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_9024, description_9027)
        # Adding element type (line 950)
        # Getting the type of 'admitted_type' (line 951)
        admitted_type_9028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 62), 'admitted_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_9024, admitted_type_9028)
        
        # Processing the call keyword arguments (line 949)
        kwargs_9029 = {}
        # Getting the type of 'functions_copy' (line 949)
        functions_copy_9021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 28), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 949)
        create_call_expression_9022 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 28), functions_copy_9021, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 949)
        create_call_expression_call_result_9030 = invoke(stypy.reporting.localization.Localization(__file__, 949, 28), create_call_expression_9022, *[type_check_func_9023, list_9024], **kwargs_9029)
        
        # Assigning a type to the variable 'check_params_call' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'check_params_call', create_call_expression_call_result_9030)
        
        # Call to flatten_lists(...): (line 953)
        # Processing the call arguments (line 953)
        # Getting the type of 'type_stmts' (line 953)
        type_stmts_9033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 50), 'type_stmts', False)
        # Getting the type of 'check_params_call' (line 953)
        check_params_call_9034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 62), 'check_params_call', False)
        # Processing the call keyword arguments (line 953)
        kwargs_9035 = {}
        # Getting the type of 'stypy_functions_copy' (line 953)
        stypy_functions_copy_9031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 953)
        flatten_lists_9032 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 15), stypy_functions_copy_9031, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 953)
        flatten_lists_call_result_9036 = invoke(stypy.reporting.localization.Localization(__file__, 953, 15), flatten_lists_9032, *[type_stmts_9033, check_params_call_9034], **kwargs_9035)
        
        # Assigning a type to the variable 'stypy_return_type' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'stypy_return_type', flatten_lists_call_result_9036)
        
        # ################# End of 'visit_Raise(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Raise' in the type store
        # Getting the type of 'stypy_return_type' (line 937)
        stypy_return_type_9037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9037)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Raise'
        return stypy_return_type_9037


    @norecursion
    def visit_With(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_With'
        module_type_store = module_type_store.open_function_context('visit_With', 955, 4, False)
        # Assigning a type to the variable 'self' (line 956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_With')
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_With', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_With', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_With(...)' code ##################

        
        # Assigning a Call to a Name (line 956):
        
        # Assigning a Call to a Name (line 956):
        
        # Call to create_localization(...): (line 956)
        # Processing the call arguments (line 956)
        # Getting the type of 'node' (line 956)
        node_9040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 956)
        lineno_9041 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 64), node_9040, 'lineno')
        # Getting the type of 'node' (line 956)
        node_9042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 956)
        col_offset_9043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 77), node_9042, 'col_offset')
        # Processing the call keyword arguments (line 956)
        kwargs_9044 = {}
        # Getting the type of 'stypy_functions_copy' (line 956)
        stypy_functions_copy_9038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 956)
        create_localization_9039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 23), stypy_functions_copy_9038, 'create_localization')
        # Calling create_localization(args, kwargs) (line 956)
        create_localization_call_result_9045 = invoke(stypy.reporting.localization.Localization(__file__, 956, 23), create_localization_9039, *[lineno_9041, col_offset_9043], **kwargs_9044)
        
        # Assigning a type to the variable 'localization' (line 956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 8), 'localization', create_localization_call_result_9045)
        
        # Assigning a Call to a Name (line 957):
        
        # Assigning a Call to a Name (line 957):
        
        # Call to create_Name(...): (line 957)
        # Processing the call arguments (line 957)
        str_9048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 57), 'str', 'ensure_var_has_members')
        # Processing the call keyword arguments (line 957)
        # Getting the type of 'node' (line 958)
        node_9049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 57), 'node', False)
        # Obtaining the member 'lineno' of a type (line 958)
        lineno_9050 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 57), node_9049, 'lineno')
        keyword_9051 = lineno_9050
        # Getting the type of 'node' (line 959)
        node_9052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 59), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 959)
        col_offset_9053 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 959, 59), node_9052, 'col_offset')
        keyword_9054 = col_offset_9053
        kwargs_9055 = {'column': keyword_9054, 'line': keyword_9051}
        # Getting the type of 'core_language_copy' (line 957)
        core_language_copy_9046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 957)
        create_Name_9047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 26), core_language_copy_9046, 'create_Name')
        # Calling create_Name(args, kwargs) (line 957)
        create_Name_call_result_9056 = invoke(stypy.reporting.localization.Localization(__file__, 957, 26), create_Name_9047, *[str_9048], **kwargs_9055)
        
        # Assigning a type to the variable 'type_check_func' (line 957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 957, 8), 'type_check_func', create_Name_call_result_9056)
        
        # Assigning a Call to a Tuple (line 961):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 961)
        # Processing the call arguments (line 961)
        # Getting the type of 'node' (line 961)
        node_9059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 48), 'node', False)
        # Obtaining the member 'context_expr' of a type (line 961)
        context_expr_9060 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 48), node_9059, 'context_expr')
        # Getting the type of 'context' (line 961)
        context_9061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 67), 'context', False)
        # Processing the call keyword arguments (line 961)
        kwargs_9062 = {}
        # Getting the type of 'self' (line 961)
        self_9057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 37), 'self', False)
        # Obtaining the member 'visit' of a type (line 961)
        visit_9058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 37), self_9057, 'visit')
        # Calling visit(args, kwargs) (line 961)
        visit_call_result_9063 = invoke(stypy.reporting.localization.Localization(__file__, 961, 37), visit_9058, *[context_expr_9060, context_9061], **kwargs_9062)
        
        # Assigning a type to the variable 'call_assignment_5809' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_5809', visit_call_result_9063)
        
        # Assigning a Call to a Name (line 961):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5809' (line 961)
        call_assignment_5809_9064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_5809', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9065 = stypy_get_value_from_tuple(call_assignment_5809_9064, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5810' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_5810', stypy_get_value_from_tuple_call_result_9065)
        
        # Assigning a Name to a Name (line 961):
        # Getting the type of 'call_assignment_5810' (line 961)
        call_assignment_5810_9066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_5810')
        # Assigning a type to the variable 'context_stmts' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'context_stmts', call_assignment_5810_9066)
        
        # Assigning a Call to a Name (line 961):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5809' (line 961)
        call_assignment_5809_9067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_5809', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9068 = stypy_get_value_from_tuple(call_assignment_5809_9067, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5811' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_5811', stypy_get_value_from_tuple_call_result_9068)
        
        # Assigning a Name to a Name (line 961):
        # Getting the type of 'call_assignment_5811' (line 961)
        call_assignment_5811_9069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_5811')
        # Assigning a type to the variable 'context_var' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 23), 'context_var', call_assignment_5811_9069)
        
        # Assigning a Call to a Name (line 963):
        
        # Assigning a Call to a Name (line 963):
        
        # Call to create_str(...): (line 963)
        # Processing the call arguments (line 963)
        str_9072 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 52), 'str', 'with parameter')
        # Processing the call keyword arguments (line 963)
        kwargs_9073 = {}
        # Getting the type of 'core_language_copy' (line 963)
        core_language_copy_9070 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 963)
        create_str_9071 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 22), core_language_copy_9070, 'create_str')
        # Calling create_str(args, kwargs) (line 963)
        create_str_call_result_9074 = invoke(stypy.reporting.localization.Localization(__file__, 963, 22), create_str_9071, *[str_9072], **kwargs_9073)
        
        # Assigning a type to the variable 'description' (line 963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 8), 'description', create_str_call_result_9074)
        
        # Assigning a Call to a Name (line 965):
        
        # Assigning a Call to a Name (line 965):
        
        # Call to create_str(...): (line 965)
        # Processing the call arguments (line 965)
        str_9077 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 46), 'str', '__enter__')
        # Processing the call keyword arguments (line 965)
        kwargs_9078 = {}
        # Getting the type of 'core_language_copy' (line 965)
        core_language_copy_9075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 16), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 965)
        create_str_9076 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 965, 16), core_language_copy_9075, 'create_str')
        # Calling create_str(args, kwargs) (line 965)
        create_str_call_result_9079 = invoke(stypy.reporting.localization.Localization(__file__, 965, 16), create_str_9076, *[str_9077], **kwargs_9078)
        
        # Assigning a type to the variable 'enter' (line 965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 8), 'enter', create_str_call_result_9079)
        
        # Assigning a Call to a Name (line 966):
        
        # Assigning a Call to a Name (line 966):
        
        # Call to create_str(...): (line 966)
        # Processing the call arguments (line 966)
        str_9082 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 45), 'str', '__exit__')
        # Processing the call keyword arguments (line 966)
        kwargs_9083 = {}
        # Getting the type of 'core_language_copy' (line 966)
        core_language_copy_9080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 15), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 966)
        create_str_9081 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 966, 15), core_language_copy_9080, 'create_str')
        # Calling create_str(args, kwargs) (line 966)
        create_str_call_result_9084 = invoke(stypy.reporting.localization.Localization(__file__, 966, 15), create_str_9081, *[str_9082], **kwargs_9083)
        
        # Assigning a type to the variable 'exit' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'exit', create_str_call_result_9084)
        
        # Assigning a Call to a Name (line 967):
        
        # Assigning a Call to a Name (line 967):
        
        # Call to create_call(...): (line 967)
        # Processing the call arguments (line 967)
        # Getting the type of 'type_check_func' (line 967)
        type_check_func_9087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 55), 'type_check_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 968)
        list_9088 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 968)
        # Adding element type (line 968)
        # Getting the type of 'localization' (line 968)
        localization_9089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 51), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_9088, localization_9089)
        # Adding element type (line 968)
        # Getting the type of 'context_var' (line 968)
        context_var_9090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 65), 'context_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_9088, context_var_9090)
        # Adding element type (line 968)
        # Getting the type of 'description' (line 968)
        description_9091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 78), 'description', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_9088, description_9091)
        # Adding element type (line 968)
        # Getting the type of 'enter' (line 969)
        enter_9092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 51), 'enter', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_9088, enter_9092)
        # Adding element type (line 968)
        # Getting the type of 'exit' (line 970)
        exit_9093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 51), 'exit', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_9088, exit_9093)
        
        # Processing the call keyword arguments (line 967)
        kwargs_9094 = {}
        # Getting the type of 'functions_copy' (line 967)
        functions_copy_9085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 28), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 967)
        create_call_9086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 967, 28), functions_copy_9085, 'create_call')
        # Calling create_call(args, kwargs) (line 967)
        create_call_call_result_9095 = invoke(stypy.reporting.localization.Localization(__file__, 967, 28), create_call_9086, *[type_check_func_9087, list_9088], **kwargs_9094)
        
        # Assigning a type to the variable 'check_params_call' (line 967)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 967, 8), 'check_params_call', create_call_call_result_9095)
        
        # Assigning a Call to a Tuple (line 973):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 973)
        # Processing the call arguments (line 973)
        # Getting the type of 'check_params_call' (line 973)
        check_params_call_9098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 81), 'check_params_call', False)
        # Processing the call keyword arguments (line 973)
        # Getting the type of 'node' (line 973)
        node_9099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 973)
        lineno_9100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 105), node_9099, 'lineno')
        keyword_9101 = lineno_9100
        # Getting the type of 'node' (line 974)
        node_9102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 83), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 974)
        col_offset_9103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 974, 83), node_9102, 'col_offset')
        keyword_9104 = col_offset_9103
        kwargs_9105 = {'column': keyword_9104, 'line': keyword_9101}
        # Getting the type of 'stypy_functions_copy' (line 973)
        stypy_functions_copy_9096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 41), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 973)
        create_temp_Assign_9097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 41), stypy_functions_copy_9096, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 973)
        create_temp_Assign_call_result_9106 = invoke(stypy.reporting.localization.Localization(__file__, 973, 41), create_temp_Assign_9097, *[check_params_call_9098], **kwargs_9105)
        
        # Assigning a type to the variable 'call_assignment_5812' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_5812', create_temp_Assign_call_result_9106)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5812' (line 973)
        call_assignment_5812_9107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_5812', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9108 = stypy_get_value_from_tuple(call_assignment_5812_9107, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5813' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_5813', stypy_get_value_from_tuple_call_result_9108)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_5813' (line 973)
        call_assignment_5813_9109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_5813')
        # Assigning a type to the variable 'call_test_stmts' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_test_stmts', call_assignment_5813_9109)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5812' (line 973)
        call_assignment_5812_9110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_5812', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9111 = stypy_get_value_from_tuple(call_assignment_5812_9110, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5814' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_5814', stypy_get_value_from_tuple_call_result_9111)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_5814' (line 973)
        call_assignment_5814_9112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_5814')
        # Assigning a type to the variable 'call_test_var' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 25), 'call_test_var', call_assignment_5814_9112)
        
        # Assigning a Call to a Name (line 976):
        
        # Assigning a Call to a Name (line 976):
        
        # Call to create_src_comment(...): (line 976)
        # Processing the call arguments (line 976)
        str_9115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 64), 'str', 'Calling the __enter__ method to initiate a with section')
        # Processing the call keyword arguments (line 976)
        kwargs_9116 = {}
        # Getting the type of 'stypy_functions_copy' (line 976)
        stypy_functions_copy_9113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 24), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 976)
        create_src_comment_9114 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 976, 24), stypy_functions_copy_9113, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 976)
        create_src_comment_call_result_9117 = invoke(stypy.reporting.localization.Localization(__file__, 976, 24), create_src_comment_9114, *[str_9115], **kwargs_9116)
        
        # Assigning a type to the variable 'enter_comment' (line 976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 976, 8), 'enter_comment', create_src_comment_call_result_9117)
        
        # Assigning a Call to a Tuple (line 977):
        
        # Assigning a Call to a Name:
        
        # Call to create_get_type_of_member(...): (line 977)
        # Processing the call arguments (line 977)
        # Getting the type of 'context_var' (line 977)
        context_var_9120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 81), 'context_var', False)
        str_9121 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 94), 'str', '__enter__')
        # Getting the type of 'node' (line 977)
        node_9122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 107), 'node', False)
        # Obtaining the member 'lineno' of a type (line 977)
        lineno_9123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 107), node_9122, 'lineno')
        # Getting the type of 'node' (line 978)
        node_9124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 76), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 978)
        col_offset_9125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 76), node_9124, 'col_offset')
        # Processing the call keyword arguments (line 977)
        kwargs_9126 = {}
        # Getting the type of 'stypy_functions_copy' (line 977)
        stypy_functions_copy_9118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 34), 'stypy_functions_copy', False)
        # Obtaining the member 'create_get_type_of_member' of a type (line 977)
        create_get_type_of_member_9119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 34), stypy_functions_copy_9118, 'create_get_type_of_member')
        # Calling create_get_type_of_member(args, kwargs) (line 977)
        create_get_type_of_member_call_result_9127 = invoke(stypy.reporting.localization.Localization(__file__, 977, 34), create_get_type_of_member_9119, *[context_var_9120, str_9121, lineno_9123, col_offset_9125], **kwargs_9126)
        
        # Assigning a type to the variable 'call_assignment_5815' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_5815', create_get_type_of_member_call_result_9127)
        
        # Assigning a Call to a Name (line 977):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5815' (line 977)
        call_assignment_5815_9128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_5815', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9129 = stypy_get_value_from_tuple(call_assignment_5815_9128, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5816' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_5816', stypy_get_value_from_tuple_call_result_9129)
        
        # Assigning a Name to a Name (line 977):
        # Getting the type of 'call_assignment_5816' (line 977)
        call_assignment_5816_9130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_5816')
        # Assigning a type to the variable 'enter_method' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'enter_method', call_assignment_5816_9130)
        
        # Assigning a Call to a Name (line 977):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5815' (line 977)
        call_assignment_5815_9131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_5815', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9132 = stypy_get_value_from_tuple(call_assignment_5815_9131, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5817' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_5817', stypy_get_value_from_tuple_call_result_9132)
        
        # Assigning a Name to a Name (line 977):
        # Getting the type of 'call_assignment_5817' (line 977)
        call_assignment_5817_9133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_5817')
        # Assigning a type to the variable 'enter_var' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 22), 'enter_var', call_assignment_5817_9133)
        
        # Assigning a Call to a Name (line 979):
        
        # Assigning a Call to a Name (line 979):
        
        # Call to create_attribute(...): (line 979)
        # Processing the call arguments (line 979)
        # Getting the type of 'enter_var' (line 979)
        enter_var_9136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 66), 'enter_var', False)
        str_9137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 77), 'str', 'invoke')
        # Getting the type of 'node' (line 979)
        node_9138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 979)
        lineno_9139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 87), node_9138, 'lineno')
        # Getting the type of 'node' (line 979)
        node_9140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 979)
        col_offset_9141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 100), node_9140, 'col_offset')
        # Processing the call keyword arguments (line 979)
        kwargs_9142 = {}
        # Getting the type of 'core_language_copy' (line 979)
        core_language_copy_9134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 30), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 979)
        create_attribute_9135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 30), core_language_copy_9134, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 979)
        create_attribute_call_result_9143 = invoke(stypy.reporting.localization.Localization(__file__, 979, 30), create_attribute_9135, *[enter_var_9136, str_9137, lineno_9139, col_offset_9141], **kwargs_9142)
        
        # Assigning a type to the variable 'enter_method_invoke' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'enter_method_invoke', create_attribute_call_result_9143)
        
        # Assigning a Call to a Tuple (line 980):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 980)
        # Processing the call arguments (line 980)
        
        # Call to create_call(...): (line 981)
        # Processing the call arguments (line 981)
        # Getting the type of 'enter_method_invoke' (line 981)
        enter_method_invoke_9148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 39), 'enter_method_invoke', False)
        
        # Obtaining an instance of the builtin type 'list' (line 981)
        list_9149 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 981)
        # Adding element type (line 981)
        # Getting the type of 'localization' (line 981)
        localization_9150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 61), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 60), list_9149, localization_9150)
        
        # Processing the call keyword arguments (line 981)
        kwargs_9151 = {}
        # Getting the type of 'functions_copy' (line 981)
        functions_copy_9146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 12), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 981)
        create_call_9147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 12), functions_copy_9146, 'create_call')
        # Calling create_call(args, kwargs) (line 981)
        create_call_call_result_9152 = invoke(stypy.reporting.localization.Localization(__file__, 981, 12), create_call_9147, *[enter_method_invoke_9148, list_9149], **kwargs_9151)
        
        # Getting the type of 'node' (line 981)
        node_9153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 77), 'node', False)
        # Obtaining the member 'lineno' of a type (line 981)
        lineno_9154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 77), node_9153, 'lineno')
        # Getting the type of 'node' (line 981)
        node_9155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 90), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 981)
        col_offset_9156 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 90), node_9155, 'col_offset')
        # Processing the call keyword arguments (line 980)
        kwargs_9157 = {}
        # Getting the type of 'stypy_functions_copy' (line 980)
        stypy_functions_copy_9144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 980)
        create_temp_Assign_9145 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 38), stypy_functions_copy_9144, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 980)
        create_temp_Assign_call_result_9158 = invoke(stypy.reporting.localization.Localization(__file__, 980, 38), create_temp_Assign_9145, *[create_call_call_result_9152, lineno_9154, col_offset_9156], **kwargs_9157)
        
        # Assigning a type to the variable 'call_assignment_5818' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_5818', create_temp_Assign_call_result_9158)
        
        # Assigning a Call to a Name (line 980):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5818' (line 980)
        call_assignment_5818_9159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_5818', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9160 = stypy_get_value_from_tuple(call_assignment_5818_9159, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5819' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_5819', stypy_get_value_from_tuple_call_result_9160)
        
        # Assigning a Name to a Name (line 980):
        # Getting the type of 'call_assignment_5819' (line 980)
        call_assignment_5819_9161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_5819')
        # Assigning a type to the variable 'enter_method_call' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'enter_method_call', call_assignment_5819_9161)
        
        # Assigning a Call to a Name (line 980):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5818' (line 980)
        call_assignment_5818_9162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_5818', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9163 = stypy_get_value_from_tuple(call_assignment_5818_9162, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5820' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_5820', stypy_get_value_from_tuple_call_result_9163)
        
        # Assigning a Name to a Name (line 980):
        # Getting the type of 'call_assignment_5820' (line 980)
        call_assignment_5820_9164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_5820')
        # Assigning a type to the variable 'call_var' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 27), 'call_var', call_assignment_5820_9164)
        
        # Assigning a List to a Name (line 982):
        
        # Assigning a List to a Name (line 982):
        
        # Obtaining an instance of the builtin type 'list' (line 982)
        list_9165 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 982)
        # Adding element type (line 982)
        # Getting the type of 'enter_comment' (line 982)
        enter_comment_9166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 22), 'enter_comment')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 21), list_9165, enter_comment_9166)
        # Adding element type (line 982)
        # Getting the type of 'enter_method' (line 982)
        enter_method_9167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 37), 'enter_method')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 21), list_9165, enter_method_9167)
        # Adding element type (line 982)
        # Getting the type of 'enter_method_call' (line 982)
        enter_method_call_9168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 51), 'enter_method_call')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 21), list_9165, enter_method_call_9168)
        
        # Assigning a type to the variable 'body_stmts' (line 982)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 982, 8), 'body_stmts', list_9165)
        
        # Getting the type of 'node' (line 983)
        node_9169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 11), 'node')
        # Obtaining the member 'optional_vars' of a type (line 983)
        optional_vars_9170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 11), node_9169, 'optional_vars')
        # Getting the type of 'None' (line 983)
        None_9171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 37), 'None')
        # Applying the binary operator 'isnot' (line 983)
        result_is_not_9172 = python_operator(stypy.reporting.localization.Localization(__file__, 983, 11), 'isnot', optional_vars_9170, None_9171)
        
        # Testing if the type of an if condition is none (line 983)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 983, 8), result_is_not_9172):
            pass
        else:
            
            # Testing the type of an if condition (line 983)
            if_condition_9173 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 983, 8), result_is_not_9172)
            # Assigning a type to the variable 'if_condition_9173' (line 983)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'if_condition_9173', if_condition_9173)
            # SSA begins for if statement (line 983)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 984):
            
            # Assigning a Call to a Name (line 984):
            
            # Call to create_set_type_of(...): (line 984)
            # Processing the call arguments (line 984)
            # Getting the type of 'node' (line 984)
            node_9176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 68), 'node', False)
            # Obtaining the member 'optional_vars' of a type (line 984)
            optional_vars_9177 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 68), node_9176, 'optional_vars')
            # Obtaining the member 'id' of a type (line 984)
            id_9178 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 68), optional_vars_9177, 'id')
            # Getting the type of 'call_var' (line 984)
            call_var_9179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 91), 'call_var', False)
            # Getting the type of 'node' (line 984)
            node_9180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 101), 'node', False)
            # Obtaining the member 'lineno' of a type (line 984)
            lineno_9181 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 101), node_9180, 'lineno')
            # Getting the type of 'node' (line 985)
            node_9182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 63), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 985)
            col_offset_9183 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 63), node_9182, 'col_offset')
            # Processing the call keyword arguments (line 984)
            kwargs_9184 = {}
            # Getting the type of 'stypy_functions_copy' (line 984)
            stypy_functions_copy_9174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 28), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 984)
            create_set_type_of_9175 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 28), stypy_functions_copy_9174, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 984)
            create_set_type_of_call_result_9185 = invoke(stypy.reporting.localization.Localization(__file__, 984, 28), create_set_type_of_9175, *[id_9178, call_var_9179, lineno_9181, col_offset_9183], **kwargs_9184)
            
            # Assigning a type to the variable 'assing_to_var' (line 984)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'assing_to_var', create_set_type_of_call_result_9185)
            
            # Getting the type of 'body_stmts' (line 986)
            body_stmts_9186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 12), 'body_stmts')
            
            # Obtaining an instance of the builtin type 'list' (line 986)
            list_9187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 26), 'list')
            # Adding type elements to the builtin type 'list' instance (line 986)
            # Adding element type (line 986)
            # Getting the type of 'assing_to_var' (line 986)
            assing_to_var_9188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 27), 'assing_to_var')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 986, 26), list_9187, assing_to_var_9188)
            
            # Applying the binary operator '+=' (line 986)
            result_iadd_9189 = python_operator(stypy.reporting.localization.Localization(__file__, 986, 12), '+=', body_stmts_9186, list_9187)
            # Assigning a type to the variable 'body_stmts' (line 986)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 12), 'body_stmts', result_iadd_9189)
            
            # SSA join for if statement (line 983)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Getting the type of 'body_stmts' (line 988)
        body_stmts_9190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'body_stmts')
        
        # Call to __visit_instruction_body(...): (line 988)
        # Processing the call arguments (line 988)
        # Getting the type of 'node' (line 988)
        node_9193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 52), 'node', False)
        # Obtaining the member 'body' of a type (line 988)
        body_9194 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 52), node_9193, 'body')
        # Getting the type of 'context' (line 988)
        context_9195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 63), 'context', False)
        # Processing the call keyword arguments (line 988)
        kwargs_9196 = {}
        # Getting the type of 'self' (line 988)
        self_9191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 22), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 988)
        visit_instruction_body_9192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 22), self_9191, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 988)
        visit_instruction_body_call_result_9197 = invoke(stypy.reporting.localization.Localization(__file__, 988, 22), visit_instruction_body_9192, *[body_9194, context_9195], **kwargs_9196)
        
        # Applying the binary operator '+=' (line 988)
        result_iadd_9198 = python_operator(stypy.reporting.localization.Localization(__file__, 988, 8), '+=', body_stmts_9190, visit_instruction_body_call_result_9197)
        # Assigning a type to the variable 'body_stmts' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'body_stmts', result_iadd_9198)
        
        
        # Assigning a Call to a Name (line 991):
        
        # Assigning a Call to a Name (line 991):
        
        # Call to create_src_comment(...): (line 991)
        # Processing the call arguments (line 991)
        str_9201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 63), 'str', 'Calling the __exit__ method to finish a with section')
        # Processing the call keyword arguments (line 991)
        kwargs_9202 = {}
        # Getting the type of 'stypy_functions_copy' (line 991)
        stypy_functions_copy_9199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 991)
        create_src_comment_9200 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 23), stypy_functions_copy_9199, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 991)
        create_src_comment_call_result_9203 = invoke(stypy.reporting.localization.Localization(__file__, 991, 23), create_src_comment_9200, *[str_9201], **kwargs_9202)
        
        # Assigning a type to the variable 'exit_comment' (line 991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 991, 8), 'exit_comment', create_src_comment_call_result_9203)
        
        # Assigning a Call to a Tuple (line 992):
        
        # Assigning a Call to a Name:
        
        # Call to create_get_type_of_member(...): (line 992)
        # Processing the call arguments (line 992)
        # Getting the type of 'context_var' (line 992)
        context_var_9206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 79), 'context_var', False)
        str_9207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 92), 'str', '__exit__')
        # Getting the type of 'node' (line 992)
        node_9208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 104), 'node', False)
        # Obtaining the member 'lineno' of a type (line 992)
        lineno_9209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 104), node_9208, 'lineno')
        # Getting the type of 'node' (line 993)
        node_9210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 74), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 993)
        col_offset_9211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 74), node_9210, 'col_offset')
        # Processing the call keyword arguments (line 992)
        kwargs_9212 = {}
        # Getting the type of 'stypy_functions_copy' (line 992)
        stypy_functions_copy_9204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_get_type_of_member' of a type (line 992)
        create_get_type_of_member_9205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 32), stypy_functions_copy_9204, 'create_get_type_of_member')
        # Calling create_get_type_of_member(args, kwargs) (line 992)
        create_get_type_of_member_call_result_9213 = invoke(stypy.reporting.localization.Localization(__file__, 992, 32), create_get_type_of_member_9205, *[context_var_9206, str_9207, lineno_9209, col_offset_9211], **kwargs_9212)
        
        # Assigning a type to the variable 'call_assignment_5821' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_5821', create_get_type_of_member_call_result_9213)
        
        # Assigning a Call to a Name (line 992):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5821' (line 992)
        call_assignment_5821_9214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_5821', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9215 = stypy_get_value_from_tuple(call_assignment_5821_9214, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5822' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_5822', stypy_get_value_from_tuple_call_result_9215)
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'call_assignment_5822' (line 992)
        call_assignment_5822_9216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_5822')
        # Assigning a type to the variable 'exit_method' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'exit_method', call_assignment_5822_9216)
        
        # Assigning a Call to a Name (line 992):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5821' (line 992)
        call_assignment_5821_9217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_5821', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9218 = stypy_get_value_from_tuple(call_assignment_5821_9217, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5823' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_5823', stypy_get_value_from_tuple_call_result_9218)
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'call_assignment_5823' (line 992)
        call_assignment_5823_9219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_5823')
        # Assigning a type to the variable 'exit_var' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 21), 'exit_var', call_assignment_5823_9219)
        
        # Assigning a Call to a Name (line 994):
        
        # Assigning a Call to a Name (line 994):
        
        # Call to create_attribute(...): (line 994)
        # Processing the call arguments (line 994)
        # Getting the type of 'exit_var' (line 994)
        exit_var_9222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 65), 'exit_var', False)
        str_9223 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 75), 'str', 'invoke')
        # Getting the type of 'node' (line 994)
        node_9224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 85), 'node', False)
        # Obtaining the member 'lineno' of a type (line 994)
        lineno_9225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 85), node_9224, 'lineno')
        # Getting the type of 'node' (line 994)
        node_9226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 98), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 994)
        col_offset_9227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 98), node_9226, 'col_offset')
        # Processing the call keyword arguments (line 994)
        kwargs_9228 = {}
        # Getting the type of 'core_language_copy' (line 994)
        core_language_copy_9220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 29), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 994)
        create_attribute_9221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 29), core_language_copy_9220, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 994)
        create_attribute_call_result_9229 = invoke(stypy.reporting.localization.Localization(__file__, 994, 29), create_attribute_9221, *[exit_var_9222, str_9223, lineno_9225, col_offset_9227], **kwargs_9228)
        
        # Assigning a type to the variable 'exit_method_invoke' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), 'exit_method_invoke', create_attribute_call_result_9229)
        
        # Assigning a Call to a Name (line 995):
        
        # Assigning a Call to a Name (line 995):
        
        # Call to create_Name(...): (line 995)
        # Processing the call arguments (line 995)
        str_9232 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 51), 'str', 'None')
        # Processing the call keyword arguments (line 995)
        kwargs_9233 = {}
        # Getting the type of 'core_language_copy' (line 995)
        core_language_copy_9230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 20), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 995)
        create_Name_9231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 20), core_language_copy_9230, 'create_Name')
        # Calling create_Name(args, kwargs) (line 995)
        create_Name_call_result_9234 = invoke(stypy.reporting.localization.Localization(__file__, 995, 20), create_Name_9231, *[str_9232], **kwargs_9233)
        
        # Assigning a type to the variable 'none_type' (line 995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 8), 'none_type', create_Name_call_result_9234)
        
        # Assigning a Call to a Tuple (line 996):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 996)
        # Processing the call arguments (line 996)
        
        # Call to create_call(...): (line 996)
        # Processing the call arguments (line 996)
        # Getting the type of 'exit_method_invoke' (line 996)
        exit_method_invoke_9239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 104), 'exit_method_invoke', False)
        
        # Obtaining an instance of the builtin type 'list' (line 997)
        list_9240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 94), 'list')
        # Adding type elements to the builtin type 'list' instance (line 997)
        # Adding element type (line 997)
        # Getting the type of 'localization' (line 997)
        localization_9241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 95), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_9240, localization_9241)
        # Adding element type (line 997)
        # Getting the type of 'none_type' (line 998)
        none_type_9242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 95), 'none_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_9240, none_type_9242)
        # Adding element type (line 997)
        # Getting the type of 'none_type' (line 999)
        none_type_9243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 95), 'none_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_9240, none_type_9243)
        # Adding element type (line 997)
        # Getting the type of 'none_type' (line 1000)
        none_type_9244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 95), 'none_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_9240, none_type_9244)
        
        # Processing the call keyword arguments (line 996)
        kwargs_9245 = {}
        # Getting the type of 'functions_copy' (line 996)
        functions_copy_9237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 77), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 996)
        create_call_9238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 77), functions_copy_9237, 'create_call')
        # Calling create_call(args, kwargs) (line 996)
        create_call_call_result_9246 = invoke(stypy.reporting.localization.Localization(__file__, 996, 77), create_call_9238, *[exit_method_invoke_9239, list_9240], **kwargs_9245)
        
        # Getting the type of 'node' (line 1001)
        node_9247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 72), 'node', False)
        # Obtaining the member 'lineno' of a type (line 1001)
        lineno_9248 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1001, 72), node_9247, 'lineno')
        # Getting the type of 'node' (line 1001)
        node_9249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 85), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 1001)
        col_offset_9250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1001, 85), node_9249, 'col_offset')
        # Processing the call keyword arguments (line 996)
        kwargs_9251 = {}
        # Getting the type of 'stypy_functions_copy' (line 996)
        stypy_functions_copy_9235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 37), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 996)
        create_temp_Assign_9236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 37), stypy_functions_copy_9235, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 996)
        create_temp_Assign_call_result_9252 = invoke(stypy.reporting.localization.Localization(__file__, 996, 37), create_temp_Assign_9236, *[create_call_call_result_9246, lineno_9248, col_offset_9250], **kwargs_9251)
        
        # Assigning a type to the variable 'call_assignment_5824' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_5824', create_temp_Assign_call_result_9252)
        
        # Assigning a Call to a Name (line 996):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5824' (line 996)
        call_assignment_5824_9253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_5824', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9254 = stypy_get_value_from_tuple(call_assignment_5824_9253, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_5825' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_5825', stypy_get_value_from_tuple_call_result_9254)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'call_assignment_5825' (line 996)
        call_assignment_5825_9255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_5825')
        # Assigning a type to the variable 'exit_method_call' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'exit_method_call', call_assignment_5825_9255)
        
        # Assigning a Call to a Name (line 996):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_5824' (line 996)
        call_assignment_5824_9256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_5824', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_9257 = stypy_get_value_from_tuple(call_assignment_5824_9256, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_5826' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_5826', stypy_get_value_from_tuple_call_result_9257)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'call_assignment_5826' (line 996)
        call_assignment_5826_9258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_5826')
        # Assigning a type to the variable 'call_var' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 26), 'call_var', call_assignment_5826_9258)
        
        # Getting the type of 'body_stmts' (line 1003)
        body_stmts_9259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'body_stmts')
        
        # Obtaining an instance of the builtin type 'list' (line 1003)
        list_9260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1003)
        # Adding element type (line 1003)
        # Getting the type of 'exit_comment' (line 1003)
        exit_comment_9261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 23), 'exit_comment')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 22), list_9260, exit_comment_9261)
        # Adding element type (line 1003)
        # Getting the type of 'exit_method' (line 1003)
        exit_method_9262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 37), 'exit_method')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 22), list_9260, exit_method_9262)
        # Adding element type (line 1003)
        # Getting the type of 'exit_method_call' (line 1003)
        exit_method_call_9263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 50), 'exit_method_call')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 22), list_9260, exit_method_call_9263)
        
        # Applying the binary operator '+=' (line 1003)
        result_iadd_9264 = python_operator(stypy.reporting.localization.Localization(__file__, 1003, 8), '+=', body_stmts_9259, list_9260)
        # Assigning a type to the variable 'body_stmts' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'body_stmts', result_iadd_9264)
        
        
        # Assigning a Call to a Name (line 1005):
        
        # Assigning a Call to a Name (line 1005):
        
        # Call to create_if(...): (line 1005)
        # Processing the call arguments (line 1005)
        # Getting the type of 'call_test_var' (line 1005)
        call_test_var_9267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 56), 'call_test_var', False)
        # Getting the type of 'body_stmts' (line 1005)
        body_stmts_9268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 71), 'body_stmts', False)
        # Processing the call keyword arguments (line 1005)
        kwargs_9269 = {}
        # Getting the type of 'conditional_statements_copy' (line 1005)
        conditional_statements_copy_9265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 18), 'conditional_statements_copy', False)
        # Obtaining the member 'create_if' of a type (line 1005)
        create_if_9266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 18), conditional_statements_copy_9265, 'create_if')
        # Calling create_if(args, kwargs) (line 1005)
        create_if_call_result_9270 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 18), create_if_9266, *[call_test_var_9267, body_stmts_9268], **kwargs_9269)
        
        # Assigning a type to the variable 'with_if' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'with_if', create_if_call_result_9270)
        
        # Call to flatten_lists(...): (line 1007)
        # Processing the call arguments (line 1007)
        # Getting the type of 'context_stmts' (line 1007)
        context_stmts_9273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 50), 'context_stmts', False)
        # Getting the type of 'call_test_stmts' (line 1007)
        call_test_stmts_9274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 65), 'call_test_stmts', False)
        # Getting the type of 'with_if' (line 1007)
        with_if_9275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 82), 'with_if', False)
        # Processing the call keyword arguments (line 1007)
        kwargs_9276 = {}
        # Getting the type of 'stypy_functions_copy' (line 1007)
        stypy_functions_copy_9271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 1007)
        flatten_lists_9272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 15), stypy_functions_copy_9271, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 1007)
        flatten_lists_call_result_9277 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 15), flatten_lists_9272, *[context_stmts_9273, call_test_stmts_9274, with_if_9275], **kwargs_9276)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 8), 'stypy_return_type', flatten_lists_call_result_9277)
        
        # ################# End of 'visit_With(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_With' in the type store
        # Getting the type of 'stypy_return_type' (line 955)
        stypy_return_type_9278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9278)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_With'
        return stypy_return_type_9278


    @norecursion
    def visit_arguments(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_arguments'
        module_type_store = module_type_store.open_function_context('visit_arguments', 1010, 4, False)
        # Assigning a type to the variable 'self' (line 1011)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_arguments')
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_arguments', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_arguments', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_arguments(...)' code ##################

        # Getting the type of 'node' (line 1011)
        node_9279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 15), 'node')
        # Assigning a type to the variable 'stypy_return_type' (line 1011)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 8), 'stypy_return_type', node_9279)
        
        # ################# End of 'visit_arguments(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_arguments' in the type store
        # Getting the type of 'stypy_return_type' (line 1010)
        stypy_return_type_9280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_9280)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_arguments'
        return stypy_return_type_9280


# Assigning a type to the variable 'StatementVisitor' (line 9)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'StatementVisitor', StatementVisitor)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
