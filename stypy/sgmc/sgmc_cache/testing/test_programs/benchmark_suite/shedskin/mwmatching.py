
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: '''Weighted maximum matching in general graphs.
2: 
3: The algorithm is taken from "Efficient Algorithms for Finding Maximum
4: Matching in Graphs" by Zvi Galil, ACM Computing Surveys, 1986.
5: It is based on the "blossom" method for finding augmenting paths and
6: the "primal-dual" method for finding a matching of maximum weight, both
7: due to Jack Edmonds.
8: Some ideas came from "Implementation of algorithms for maximum matching
9: on non-bipartite graphs" by H.J. Gabow, Standford Ph.D. thesis, 1973.
10: 
11: A C program for maximum weight matching by Ed Rothberg was used extensively
12: to validate this new code.
13: 
14: Copyright 2009 Joris van Rantwijk, license GPL2 or later
15: 
16: '''
17: 
18: # If assigned, DEBUG(str) is called with lots of debug messages.
19: from sys import stderr
20: import os
21: 
22: 
23: def Relative(path):
24:     return os.path.join(os.path.dirname(__file__), path)
25: 
26: 
27: def debug(s):
28:     pass  # print >>stderr, 'DEBUG:', s
29: 
30: 
31: DEBUG = debug
32: DEBUG = None
33: 
34: # Check delta2/delta3 computation after every substage;
35: # only works on integer weights, slows down the algorithm to O(n^4).
36: CHECK_DELTA = False
37: 
38: # Check optimality of solution before returning; only works on integer weights.
39: CHECK_OPTIMUM = True
40: 
41: # read input
42: input = file(Relative('testdata/bench_mwmatching_2039_250_a.gr'))
43: s = input.next().split()
44: # s = raw_input().split()
45: assert s[0] == 'p' and s[1] == 'edge'
46: edges = []
47: for i in xrange(int(s[3])):
48:     # s = raw_input().split()
49:     s = input.next().split()
50:     assert len(s) == 4 and s[0] == 'e'
51:     edges.append((int(s[1]), int(s[2]), int(s[3])))
52: maxcardinality = True
53: 
54: '''Compute a maximum-weighted matching in the general undirected
55: weighted graph given by "edges".  If "maxcardinality" is true,
56: only maximum-cardinality matchings are considered as solutions.
57: 
58: Edges is a sequence of tuples (i, j, wt) describing an undirected
59: edge between vertex i and vertex j with weight wt.  There is at most
60: one edge between any two vertices; no vertex has an edge to itself.
61: Vertices are identified by consecutive, non-negative integers.
62: 
63: Return a list "mate", such that mate[i] == j if vertex i is
64: matched to vertex j, and mate[i] == -1 if vertex i is not matched.
65: 
66: This function takes time O(n ** 3).'''
67: 
68: #
69: # Vertices are numbered 0 .. (nvertex-1).
70: # Non-trivial blossoms are numbered nvertex .. (2*nvertex-1)
71: #
72: # Edges are numbered 0 .. (nedge-1).
73: # Edge endpoints are numbered 0 .. (2*nedge-1), such that endpoints
74: # (2*k) and (2*k+1) both belong to edge k.
75: #
76: # Many terms used in the comments (sub-blossom, T-vertex) come from
77: # the paper by Galil; read the paper before reading this code.
78: #
79: 
80: # Count vertices.
81: nedge = len(edges)
82: nvertex = 0
83: for (i, j, w) in edges:
84:     assert i >= 0 and j >= 0 and i != j
85:     if i >= nvertex:
86:         nvertex = i + 1
87:     if j >= nvertex:
88:         nvertex = j + 1
89: 
90: # Find the maximum edge weight.
91: maxweight = max(0, max([wt for (i, j, wt) in edges]))
92: 
93: # If p is an edge endpoint,
94: # endpoint[p] is the vertex to which endpoint p is attached.
95: # Not modified by the algorithm.
96: endpoint = [edges[p // 2][p % 2] for p in xrange(2 * nedge)]
97: 
98: # If v is a vertex,
99: # neighbend[v] is the list of remote endpoints of the edges attached to v.
100: # Not modified by the algorithm.
101: neighbend = [[] for i in xrange(nvertex)]
102: for k in xrange(len(edges)):
103:     (i, j, w) = edges[k]
104:     neighbend[i].append(2 * k + 1)
105:     neighbend[j].append(2 * k)
106: 
107: # If v is a vertex,
108: # mate[v] is the remote endpoint of its matched edge, or -1 if it is single
109: # (i.e. endpoint[mate[v]] is v's partner vertex).
110: # Initially all vertices are single; updated during augmentation.
111: mate = nvertex * [-1]
112: 
113: # If b is a top-level blossom,
114: # label[b] is 0 if b is unlabeled (free);
115: #             1 if b is an S-vertex/blossom;
116: #             2 if b is a T-vertex/blossom.
117: # The label of a vertex is found by looking at the label of its
118: # top-level containing blossom.
119: # If v is a vertex inside a T-blossom,
120: # label[v] is 2 iff v is reachable from an S-vertex outside the blossom.
121: # Labels are assigned during a stage and reset after each augmentation.
122: label = (2 * nvertex) * [0]
123: 
124: # If b is a labeled top-level blossom,
125: # labelend[b] is the remote endpoint of the edge through which b obtained
126: # its label, or -1 if b's base vertex is single.
127: # If v is a vertex inside a T-blossom and label[v] == 2,
128: # labelend[v] is the remote endpoint of the edge through which v is
129: # reachable from outside the blossom.
130: labelend = (2 * nvertex) * [-1]
131: 
132: # If v is a vertex,
133: # inblossom[v] is the top-level blossom to which v belongs.
134: # If v is a top-level vertex, v is itself a blossom (a trivial blossom)
135: # and inblossom[v] == v.
136: # Initially all vertices are top-level trivial blossoms.
137: inblossom = range(nvertex)
138: 
139: # If b is a sub-blossom,
140: # blossomparent[b] is its immediate parent (sub-)blossom.
141: # If b is a top-level blossom, blossomparent[b] is -1.
142: blossomparent = (2 * nvertex) * [-1]
143: 
144: # If b is a non-trivial (sub-)blossom,
145: # blossomchilds[b] is an ordered list of its sub-blossoms, starting with
146: # the base and going round the blossom.
147: blossomchilds = (2 * nvertex) * [None]
148: 
149: # If b is a (sub-)blossom,
150: # blossombase[b] is its base VERTEX (i.e. recursive sub-blossom).
151: blossombase = range(nvertex) + nvertex * [-1]
152: 
153: # If b is a non-trivial (sub-)blossom,
154: # blossomendps[b] is a list of endpoints on its connecting edges,
155: # such that blossomendps[b][i] is the local endpoint of blossomchilds[b][i]
156: # on the edge that connects it to blossomchilds[b][wrap(i+1)].
157: blossomendps = (2 * nvertex) * [None]
158: 
159: # If v is a free vertex (or an unreached vertex inside a T-blossom),
160: # bestedge[v] is the edge to an S-vertex with least slack,
161: # or -1 if there is no such edge.
162: # If b is a (possibly trivial) top-level S-blossom,
163: # bestedge[b] is the least-slack edge to a different S-blossom,
164: # or -1 if there is no such edge.
165: # This is used for efficient computation of delta2 and delta3.
166: bestedge = (2 * nvertex) * [-1]
167: 
168: # If b is a non-trivial top-level S-blossom,
169: # blossombestedges[b] is a list of least-slack edges to neighbouring
170: # S-blossoms, or None if no such list has been computed yet.
171: # This is used for efficient computation of delta3.
172: blossombestedges = (2 * nvertex) * [None]
173: 
174: # List of currently unused blossom numbers.
175: unusedblossoms = range(nvertex, 2 * nvertex)
176: 
177: # If v is a vertex,
178: # dualvar[v] = 2 * u(v) where u(v) is the v's variable in the dual
179: # optimization problem (multiplication by two ensures integer values
180: # throughout the algorithm if all edge weights are integers).
181: # If b is a non-trivial blossom,
182: # dualvar[b] = z(b) where z(b) is b's variable in the dual optimization
183: # problem.
184: dualvar = nvertex * [maxweight] + nvertex * [0]
185: 
186: # If allowedge[k] is true, edge k has zero slack in the optimization
187: # problem; if allowedge[k] is false, the edge's slack may or may not
188: # be zero.
189: allowedge = nedge * [False]
190: 
191: # Queue of newly discovered S-vertices.
192: queue = []
193: 
194: 
195: # Return 2 * slack of edge k (does not work inside blossoms).
196: def slack(k):
197:     (i, j, wt) = edges[k]
198:     return dualvar[i] + dualvar[j] - 2 * wt
199: 
200: 
201: # Generate the leaf vertices of a blossom.
202: def blossomLeaves(b):
203:     if b < nvertex:
204:         yield b
205:     else:
206:         for t in blossomchilds[b]:
207:             if t < nvertex:
208:                 yield t
209:             else:
210:                 for v in blossomLeaves(t):
211:                     yield v
212: 
213: 
214: # Assign label t to the top-level blossom containing vertex w
215: # and record the fact that w was reached through the edge with
216: # remote endpoint p.
217: def assignLabel(w, t, p):
218:     if DEBUG: DEBUG('assignLabel(%d,%d,%d)' % (w, t, p))
219:     b = inblossom[w]
220:     assert label[w] == 0 and label[b] == 0
221:     label[w] = label[b] = t
222:     labelend[w] = labelend[b] = p
223:     bestedge[w] = bestedge[b] = -1
224:     if t == 1:
225:         # b became an S-vertex/blossom; add it(s vertices) to the queue.
226:         queue.extend(blossomLeaves(b))
227:         if DEBUG: DEBUG('PUSH ' + str(list(blossomLeaves(b))))
228:     elif t == 2:
229:         # b became a T-vertex/blossom; assign label S to its mate.
230:         # (If b is a non-trivial blossom, its base is the only vertex
231:         # with an external mate.)
232:         base = blossombase[b]
233:         assert mate[base] >= 0
234:         assignLabel(endpoint[mate[base]], 1, mate[base] ^ 1)
235: 
236: 
237: # Trace back from vertices v and w to discover either a new blossom
238: # or an augmenting path. Return the base vertex of the new blossom or -1.
239: def scanBlossom(v, w):
240:     if DEBUG: DEBUG('scanBlossom(%d,%d)' % (v, w))
241:     # Trace back from v and w, placing breadcrumbs as we go.
242:     path = []
243:     base = -1
244:     while v != -1 or w != -1:
245:         # Look for a breadcrumb in v's blossom or put a new breadcrumb.
246:         b = inblossom[v]
247:         if label[b] & 4:
248:             base = blossombase[b]
249:             break
250:         assert label[b] == 1
251:         path.append(b)
252:         label[b] = 5
253:         # Trace one step back.
254:         assert labelend[b] == mate[blossombase[b]]
255:         if labelend[b] == -1:
256:             # The base of blossom b is single; stop tracing this path.
257:             v = -1
258:         else:
259:             v = endpoint[labelend[b]]
260:             b = inblossom[v]
261:             assert label[b] == 2
262:             # b is a T-blossom; trace one more step back.
263:             assert labelend[b] >= 0
264:             v = endpoint[labelend[b]]
265:         # Swap v and w so that we alternate between both paths.
266:         if w != -1:
267:             v, w = w, v
268:     # Remove breadcrumbs.
269:     for b in path:
270:         label[b] = 1
271:     # Return base vertex, if we found one.
272:     return base
273: 
274: 
275: # Construct a new blossom with given base, containing edge k which
276: # connects a pair of S vertices. Label the new blossom as S; set its dual
277: # variable to zero; relabel its T-vertices to S and add them to the queue.
278: def addBlossom(base, k):
279:     (v, w, wt) = edges[k]
280:     bb = inblossom[base]
281:     bv = inblossom[v]
282:     bw = inblossom[w]
283:     # Create blossom.
284:     b = unusedblossoms.pop()
285:     if DEBUG: DEBUG('addBlossom(%d,%d) (v=%d w=%d) -> %d' % (base, k, v, w, b))
286:     blossombase[b] = base
287:     blossomparent[b] = -1
288:     blossomparent[bb] = b
289:     # Make list of sub-blossoms and their interconnecting edge endpoints.
290:     blossomchilds[b] = path = []
291:     blossomendps[b] = endps = []
292:     # Trace back from v to base.
293:     while bv != bb:
294:         # Add bv to the new blossom.
295:         blossomparent[bv] = b
296:         path.append(bv)
297:         endps.append(labelend[bv])
298:         assert (label[bv] == 2 or
299:                 (label[bv] == 1 and labelend[bv] == mate[blossombase[bv]]))
300:         # Trace one step back.
301:         assert labelend[bv] >= 0
302:         v = endpoint[labelend[bv]]
303:         bv = inblossom[v]
304:     # Reverse lists, add endpoint that connects the pair of S vertices.
305:     path.append(bb)
306:     path.reverse()
307:     endps.reverse()
308:     endps.append(2 * k)
309:     # Trace back from w to base.
310:     while bw != bb:
311:         # Add bw to the new blossom.
312:         blossomparent[bw] = b
313:         path.append(bw)
314:         endps.append(labelend[bw] ^ 1)
315:         assert (label[bw] == 2 or
316:                 (label[bw] == 1 and labelend[bw] == mate[blossombase[bw]]))
317:         # Trace one step back.
318:         assert labelend[bw] >= 0
319:         w = endpoint[labelend[bw]]
320:         bw = inblossom[w]
321:     # Set label to S.
322:     assert label[bb] == 1
323:     label[b] = 1
324:     labelend[b] = labelend[bb]
325:     # Set dual variable to zero.
326:     dualvar[b] = 0
327:     # Relabel vertices.
328:     for v in blossomLeaves(b):
329:         if label[inblossom[v]] == 2:
330:             # This T-vertex now turns into an S-vertex because it becomes
331:             # part of an S-blossom; add it to the queue.
332:             queue.append(v)
333:         inblossom[v] = b
334:     # Compute blossombestedges[b].
335:     bestedgeto = (2 * nvertex) * [-1]
336:     for bv in path:
337:         if blossombestedges[bv] is None:
338:             # This subblossom does not have a list of least-slack edges;
339:             # get the information from the vertices.
340:             nblists = [[p // 2 for p in neighbend[v]]
341:                        for v in blossomLeaves(bv)]
342:         else:
343:             # Walk this subblossom's least-slack edges.
344:             nblists = [blossombestedges[bv]]
345:         for nblist in nblists:
346:             for k in nblist:
347:                 (i, j, wt) = edges[k]
348:                 if inblossom[j] == b:
349:                     i, j = j, i
350:                 bj = inblossom[j]
351:                 if (bj != b and label[bj] == 1 and
352:                         (bestedgeto[bj] == -1 or
353:                          slack(k) < slack(bestedgeto[bj]))):
354:                     bestedgeto[bj] = k
355:         # Forget about least-slack edges of the subblossom.
356:         blossombestedges[bv] = None
357:         bestedge[bv] = -1
358:     blossombestedges[b] = [k for k in bestedgeto if k != -1]
359:     # Select bestedge[b].
360:     bestedge[b] = -1
361:     for k in blossombestedges[b]:
362:         if bestedge[b] == -1 or slack(k) < slack(bestedge[b]):
363:             bestedge[b] = k
364:     if DEBUG: DEBUG('blossomchilds[%d]=' % b + repr(blossomchilds[b]))
365: 
366: 
367: # Expand the given top-level blossom.
368: def expandBlossom(b, endstage):
369:     if DEBUG: DEBUG('expandBlossom(%d,%d) %s' % (b, endstage, repr(blossomchilds[b])))
370:     # Convert sub-blossoms into top-level blossoms.
371:     for s in blossomchilds[b]:
372:         blossomparent[s] = -1
373:         if s < nvertex:
374:             inblossom[s] = s
375:         elif endstage and dualvar[s] == 0:
376:             # Recursively expand this sub-blossom.
377:             expandBlossom(s, endstage)
378:         else:
379:             for v in blossomLeaves(s):
380:                 inblossom[v] = s
381:     # If we expand a T-blossom during a stage, its sub-blossoms must be
382:     # relabeled.
383:     if (not endstage) and label[b] == 2:
384:         # Start at the sub-blossom through which the expanding
385:         # blossom obtained its label, and relabel sub-blossoms untili
386:         # we reach the base.
387:         # Figure out through which sub-blossom the expanding blossom
388:         # obtained its label initially.
389:         assert labelend[b] >= 0
390:         entrychild = inblossom[endpoint[labelend[b] ^ 1]]
391:         # Decide in which direction we will go round the blossom.
392:         j = blossomchilds[b].index(entrychild)
393:         if j & 1:
394:             # Start index is odd; go forward and wrap.
395:             j -= len(blossomchilds[b])
396:             jstep = 1
397:             endptrick = 0
398:         else:
399:             # Start index is even; go backward.
400:             jstep = -1
401:             endptrick = 1
402:         # Move along the blossom until we get to the base.
403:         p = labelend[b]
404:         while j != 0:
405:             # Relabel the T-sub-blossom.
406:             label[endpoint[p ^ 1]] = 0
407:             label[endpoint[blossomendps[b][j - endptrick] ^ endptrick ^ 1]] = 0
408:             assignLabel(endpoint[p ^ 1], 2, p)
409:             # Step to the next S-sub-blossom and note its forward endpoint.
410:             allowedge[blossomendps[b][j - endptrick] // 2] = True
411:             j += jstep
412:             p = blossomendps[b][j - endptrick] ^ endptrick
413:             # Step to the next T-sub-blossom.
414:             allowedge[p // 2] = True
415:             j += jstep
416:         # Relabel the base T-sub-blossom WITHOUT stepping through to
417:         # its mate (so don't call assignLabel).
418:         bv = blossomchilds[b][j]
419:         label[endpoint[p ^ 1]] = label[bv] = 2
420:         labelend[endpoint[p ^ 1]] = labelend[bv] = p
421:         bestedge[bv] = -1
422:         # Continue along the blossom until we get back to entrychild.
423:         j += jstep
424:         while blossomchilds[b][j] != entrychild:
425:             # Examine the vertices of the sub-blossom to see whether
426:             # it is reachable from a neighbouring S-vertex outside the
427:             # expanding blossom.
428:             bv = blossomchilds[b][j]
429:             if label[bv] == 1:
430:                 # This sub-blossom just got label S through one of its
431:                 # neighbours; leave it.
432:                 j += jstep
433:                 continue
434:             for v in blossomLeaves(bv):
435:                 if label[v] != 0:
436:                     break
437:             # If the sub-blossom contains a reachable vertex, assign
438:             # label T to the sub-blossom.
439:             if label[v] != 0:
440:                 assert label[v] == 2
441:                 assert inblossom[v] == bv
442:                 label[v] = 0
443:                 label[endpoint[mate[blossombase[bv]]]] = 0
444:                 assignLabel(v, 2, labelend[v])
445:             j += jstep
446:     # Recycle the blossom number.
447:     label[b] = labelend[b] = -1
448:     blossomchilds[b] = blossomendps[b] = None
449:     blossombase[b] = -1
450:     blossombestedges[b] = None
451:     bestedge[b] = -1
452:     unusedblossoms.append(b)
453: 
454: 
455: # Swap matched/unmatched edges over an alternating path through blossom b
456: # between vertex v and the base vertex. Keep blossom bookkeeping consistent.
457: def augmentBlossom(b, v):
458:     if DEBUG: DEBUG('augmentBlossom(%d,%d)' % (b, v))
459:     # Bubble up through the blossom tree from vertex v to an immediate
460:     # sub-blossom of b.
461:     t = v
462:     while blossomparent[t] != b:
463:         t = blossomparent[t]
464:     # Recursively deal with the first sub-blossom.
465:     if t >= nvertex:
466:         augmentBlossom(t, v)
467:     # Decide in which direction we will go round the blossom.
468:     i = j = blossomchilds[b].index(t)
469:     if i & 1:
470:         # Start index is odd; go forward and wrap.
471:         j -= len(blossomchilds[b])
472:         jstep = 1
473:         endptrick = 0
474:     else:
475:         # Start index is even; go backward.
476:         jstep = -1
477:         endptrick = 1
478:     # Move along the blossom until we get to the base.
479:     while j != 0:
480:         # Step to the next sub-blossom and augment it recursively.
481:         j += jstep
482:         t = blossomchilds[b][j]
483:         p = blossomendps[b][j - endptrick] ^ endptrick
484:         if t >= nvertex:
485:             augmentBlossom(t, endpoint[p])
486:         # Step to the next sub-blossom and augment it recursively.
487:         j += jstep
488:         t = blossomchilds[b][j]
489:         if t >= nvertex:
490:             augmentBlossom(t, endpoint[p ^ 1])
491:         # Match the edge connecting those sub-blossoms.
492:         mate[endpoint[p]] = p ^ 1
493:         mate[endpoint[p ^ 1]] = p
494:         if DEBUG: DEBUG('PAIR %d %d (k=%d)' % (endpoint[p], endpoint[p ^ 1], p // 2))
495:     # Rotate the list of sub-blossoms to put the new base at the front.
496:     blossomchilds[b] = blossomchilds[b][i:] + blossomchilds[b][:i]
497:     blossomendps[b] = blossomendps[b][i:] + blossomendps[b][:i]
498:     blossombase[b] = blossombase[blossomchilds[b][0]]
499:     assert blossombase[b] == v
500: 
501: 
502: # Swap matched/unmatched edges over an alternating path between two
503: # single vertices. The augmenting path runs through edge k, which
504: # connects a pair of S vertices.
505: def augmentMatching(k):
506:     (v, w, wt) = edges[k]
507:     if DEBUG: DEBUG('augmentMatching(%d) (v=%d w=%d)' % (k, v, w))
508:     if DEBUG: DEBUG('PAIR %d %d (k=%d)' % (v, w, k))
509:     for (s, p) in ((v, 2 * k + 1), (w, 2 * k)):
510:         # Match vertex s to remote endpoint p. Then trace back from s
511:         # until we find a single vertex, swapping matched and unmatched
512:         # edges as we go.
513:         while 1:
514:             bs = inblossom[s]
515:             assert label[bs] == 1
516:             assert labelend[bs] == mate[blossombase[bs]]
517:             # Augment through the S-blossom from s to base.
518:             if bs >= nvertex:
519:                 augmentBlossom(bs, s)
520:             # Update mate[s]
521:             mate[s] = p
522:             # Trace one step back.
523:             if labelend[bs] == -1:
524:                 # Reached single vertex; stop.
525:                 break
526:             t = endpoint[labelend[bs]]
527:             bt = inblossom[t]
528:             assert label[bt] == 2
529:             # Trace one step back.
530:             assert labelend[bt] >= 0
531:             s = endpoint[labelend[bt]]
532:             j = endpoint[labelend[bt] ^ 1]
533:             # Augment through the T-blossom from j to base.
534:             assert blossombase[bt] == t
535:             if bt >= nvertex:
536:                 augmentBlossom(bt, j)
537:             # Update mate[j]
538:             mate[j] = labelend[bt]
539:             # Keep the opposite endpoint;
540:             # it will be assigned to mate[s] in the next step.
541:             p = labelend[bt] ^ 1
542:             if DEBUG: DEBUG('PAIR %d %d (k=%d)' % (s, t, p // 2))
543: 
544: 
545: # Verify that the optimum solution has been reached.
546: def verifyOptimum():
547:     if maxcardinality:
548:         # Vertices may have negative dual;
549:         # find a constant non-negative number to add to all vertex duals.
550:         vdualoffset = max(0, -min(dualvar[:nvertex]))
551:     else:
552:         vdualoffset = 0
553:     # 0. all dual variables are non-negative
554:     assert min(dualvar[:nvertex]) + vdualoffset >= 0
555:     assert min(dualvar[nvertex:]) >= 0
556:     # 0. all edges have non-negative slack and
557:     # 1. all matched edges have zero slack;
558:     for k in xrange(nedge):
559:         (i, j, wt) = edges[k]
560:         s = dualvar[i] + dualvar[j] - 2 * wt
561:         iblossoms = [i]
562:         jblossoms = [j]
563:         while blossomparent[iblossoms[-1]] != -1:
564:             iblossoms.append(blossomparent[iblossoms[-1]])
565:         while blossomparent[jblossoms[-1]] != -1:
566:             jblossoms.append(blossomparent[jblossoms[-1]])
567:         iblossoms.reverse()
568:         jblossoms.reverse()
569:         for (bi, bj) in zip(iblossoms, jblossoms):
570:             if bi != bj:
571:                 break
572:             s += 2 * dualvar[bi]
573:         assert s >= 0
574:         if mate[i] // 2 == k or mate[j] // 2 == k:
575:             assert mate[i] // 2 == k and mate[j] // 2 == k
576:             assert s == 0
577:     # 2. all single vertices have zero dual value;
578:     for v in xrange(nvertex):
579:         assert mate[v] >= 0 or dualvar[v] + vdualoffset == 0
580:     # 3. all blossoms with positive dual value are full.
581:     for b in xrange(nvertex, 2 * nvertex):
582:         if blossombase[b] >= 0 and dualvar[b] > 0:
583:             assert len(blossomendps[b]) % 2 == 1
584:             for p in blossomendps[b][1::2]:
585:                 assert mate[endpoint[p]] == p ^ 1
586:                 assert mate[endpoint[p ^ 1]] == p
587:     # Ok.
588: 
589: 
590: # Check optimized delta2 against a trivial computation.
591: def checkDelta2():
592:     for v in xrange(nvertex):
593:         if label[inblossom[v]] == 0:
594:             # bd = None
595:             bk = -1
596:             for p in neighbend[v]:
597:                 k = p // 2
598:                 w = endpoint[p]
599:                 if label[inblossom[w]] == 1:
600:                     d = slack(k)
601:                     if bk == -1 or d < bd:
602:                         bk = k
603:                         bd = d
604:             if DEBUG and (bestedge[v] != -1 or bk != -1) and (bestedge[v] == -1 or bd != slack(bestedge[v])):
605:                 DEBUG('v=' + str(v) + ' bk=' + str(bk) + ' bd=' + str(bd) + ' bestedge=' + str(
606:                     bestedge[v]) + ' slack=' + str(slack(bestedge[v])))
607:             assert (bk == -1 and bestedge[v] == -1) or (bestedge[v] != -1 and bd == slack(bestedge[v]))
608: 
609: 
610: # Check optimized delta3 against a trivial computation.
611: def checkDelta3():
612:     bk = -1
613:     #    bd = None
614:     tbk = -1
615:     #    tbd = None
616:     for b in xrange(2 * nvertex):
617:         if blossomparent[b] == -1 and label[b] == 1:
618:             for v in blossomLeaves(b):
619:                 for p in neighbend[v]:
620:                     k = p // 2
621:                     w = endpoint[p]
622:                     if inblossom[w] != b and label[inblossom[w]] == 1:
623:                         d = slack(k)
624:                         if bk == -1 or d < bd:
625:                             bk = k
626:                             bd = d
627:             if bestedge[b] != -1:
628:                 (i, j, wt) = edges[bestedge[b]]
629:                 assert inblossom[i] == b or inblossom[j] == b
630:                 assert inblossom[i] != b or inblossom[j] != b
631:                 assert label[inblossom[i]] == 1 and label[inblossom[j]] == 1
632:                 if tbk == -1 or slack(bestedge[b]) < tbd:
633:                     tbk = bestedge[b]
634:                     tbd = slack(bestedge[b])
635:     if DEBUG and bd != tbd:
636:         DEBUG('bk=%d tbk=%d bd=%s tbd=%s' % (bk, tbk, repr(bd), repr(tbd)))
637:     assert bd == tbd
638: 
639: 
640: class MWMatchingRun:
641: 
642:     def run(self):
643:         # Main loop: continue until no further improvement is possible.
644:         for t in xrange(nvertex):
645: 
646:             # Each iteration of this loop is a "stage".
647:             # A stage finds an augmenting path and uses that to improve
648:             # the matching.
649:             if DEBUG: DEBUG('STAGE %d' % t)
650: 
651:             # Remove labels from top-level blossoms/vertices.
652:             label[:] = (2 * nvertex) * [0]
653: 
654:             # Forget all about least-slack edges.
655:             bestedge[:] = (2 * nvertex) * [-1]
656:             blossombestedges[nvertex:] = nvertex * [None]
657: 
658:             # Loss of labeling means that we can not be sure that currently
659:             # allowable edges remain allowable througout this stage.
660:             allowedge[:] = nedge * [False]
661: 
662:             # Make queue empty.
663:             queue[:] = []
664: 
665:             # Label single blossoms/vertices with S and put them in the queue.
666:             for v in xrange(nvertex):
667:                 if mate[v] == -1 and label[inblossom[v]] == 0:
668:                     assignLabel(v, 1, -1)
669: 
670:             # Loop until we succeed in augmenting the matching.
671:             augmented = 0
672:             while 1:
673: 
674:                 # Each iteration of this loop is a "substage".
675:                 # A substage tries to find an augmenting path;
676:                 # if found, the path is used to improve the matching and
677:                 # the stage ends. If there is no augmenting path, the
678:                 # primal-dual method is used to pump some slack out of
679:                 # the dual variables.
680:                 if DEBUG: DEBUG('SUBSTAGE')
681: 
682:                 # Continue labeling until all vertices which are reachable
683:                 # through an alternating path have got a label.
684:                 while queue and not augmented:
685: 
686:                     # Take an S vertex from the queue.
687:                     v = queue.pop()
688:                     if DEBUG: DEBUG('POP v=%d' % v)
689:                     assert label[inblossom[v]] == 1
690: 
691:                     # Scan its neighbours:
692:                     for p in neighbend[v]:
693:                         k = p // 2
694:                         w = endpoint[p]
695:                         # w is a neighbour to v
696:                         if inblossom[v] == inblossom[w]:
697:                             # this edge is internal to a blossom; ignore it
698:                             continue
699:                         if not allowedge[k]:
700:                             kslack = slack(k)
701:                             if kslack <= 0:
702:                                 # edge k has zero slack => it is allowable
703:                                 allowedge[k] = True
704:                         if allowedge[k]:
705:                             if label[inblossom[w]] == 0:
706:                                 # (C1) w is a free vertex;
707:                                 # label w with T and label its mate with S (R12).
708:                                 assignLabel(w, 2, p ^ 1)
709:                             elif label[inblossom[w]] == 1:
710:                                 # (C2) w is an S-vertex (not in the same blossom);
711:                                 # follow back-links to discover either an
712:                                 # augmenting path or a new blossom.
713:                                 base = scanBlossom(v, w)
714:                                 if base >= 0:
715:                                     # Found a new blossom; add it to the blossom
716:                                     # bookkeeping and turn it into an S-blossom.
717:                                     addBlossom(base, k)
718:                                 else:
719:                                     # Found an augmenting path; augment the
720:                                     # matching and end this stage.
721:                                     augmentMatching(k)
722:                                     augmented = 1
723:                                     break
724:                             elif label[w] == 0:
725:                                 # w is inside a T-blossom, but w itself has not
726:                                 # yet been reached from outside the blossom;
727:                                 # mark it as reached (we need this to relabel
728:                                 # during T-blossom expansion).
729:                                 assert label[inblossom[w]] == 2
730:                                 label[w] = 2
731:                                 labelend[w] = p ^ 1
732:                         elif label[inblossom[w]] == 1:
733:                             # keep track of the least-slack non-allowable edge to
734:                             # a different S-blossom.
735:                             b = inblossom[v]
736:                             if bestedge[b] == -1 or kslack < slack(bestedge[b]):
737:                                 bestedge[b] = k
738:                         elif label[w] == 0:
739:                             # w is a free vertex (or an unreached vertex inside
740:                             # a T-blossom) but we can not reach it yet;
741:                             # keep track of the least-slack edge that reaches w.
742:                             if bestedge[w] == -1 or kslack < slack(bestedge[w]):
743:                                 bestedge[w] = k
744: 
745:                 if augmented:
746:                     break
747: 
748:                 # There is no augmenting path under these constraints;
749:                 # compute delta and reduce slack in the optimization problem.
750:                 # (Note that our vertex dual variables, edge slacks and delta's
751:                 # are pre-multiplied by two.)
752:                 deltatype = -1
753:                 # delta = deltaedge = deltablossom = None # XXX shedskin: int/None mixing
754: 
755:                 # Verify data structures for delta2/delta3 computation.
756:                 if CHECK_DELTA:
757:                     checkDelta2()
758:                     checkDelta3()
759: 
760:                 # Compute delta1: the minumum value of any vertex dual.
761:                 if not maxcardinality:
762:                     deltatype = 1
763:                     delta = min(dualvar[:nvertex])
764: 
765:                 # Compute delta2: the minimum slack on any edge between
766:                 # an S-vertex and a free vertex.
767:                 for v in xrange(nvertex):
768:                     if label[inblossom[v]] == 0 and bestedge[v] != -1:
769:                         d = slack(bestedge[v])
770:                         if deltatype == -1 or d < delta:
771:                             delta = d
772:                             deltatype = 2
773:                             deltaedge = bestedge[v]
774: 
775:                 # Compute delta3: half the minimum slack on any edge between
776:                 # a pair of S-blossoms.
777:                 for b in xrange(2 * nvertex):
778:                     if (blossomparent[b] == -1 and label[b] == 1 and
779:                             bestedge[b] != -1):
780:                         kslack = slack(bestedge[b])
781:                         # if type(kslack) in (int, long):
782:                         assert (kslack % 2) == 0  # XXX shedskin
783:                         d = kslack // 2
784:                         # else:
785:                         #    d = kslack / 2
786:                         if deltatype == -1 or d < delta:
787:                             delta = d
788:                             deltatype = 3
789:                             deltaedge = bestedge[b]
790: 
791:                 # Compute delta4: minimum z variable of any T-blossom.
792:                 for b in xrange(nvertex, 2 * nvertex):
793:                     if (blossombase[b] >= 0 and blossomparent[b] == -1 and
794:                             label[b] == 2 and
795:                             (deltatype == -1 or dualvar[b] < delta)):
796:                         delta = dualvar[b]
797:                         deltatype = 4
798:                         deltablossom = b
799: 
800:                 if deltatype == -1:
801:                     # No further improvement possible; max-cardinality optimum
802:                     # reached. Do a final delta update to make the optimum
803:                     # verifyable.
804:                     assert maxcardinality
805:                     deltatype = 1
806:                     delta = max(0, min(dualvar[:nvertex]))
807: 
808:                 # Update dual variables according to delta.
809:                 for v in xrange(nvertex):
810:                     if label[inblossom[v]] == 1:
811:                         # S-vertex: 2*u = 2*u - 2*delta
812:                         dualvar[v] -= delta
813:                     elif label[inblossom[v]] == 2:
814:                         # T-vertex: 2*u = 2*u + 2*delta
815:                         dualvar[v] += delta
816:                 for b in xrange(nvertex, 2 * nvertex):
817:                     if blossombase[b] >= 0 and blossomparent[b] == -1:
818:                         if label[b] == 1:
819:                             # top-level S-blossom: z = z + 2*delta
820:                             dualvar[b] += delta
821:                         elif label[b] == 2:
822:                             # top-level T-blossom: z = z - 2*delta
823:                             dualvar[b] -= delta
824: 
825:                 # Take action at the point where minimum delta occurred.
826:                 if DEBUG: DEBUG('delta%d=%f' % (deltatype, delta))
827:                 if deltatype == 1:
828:                     # No further improvement possible; optimum reached.
829:                     break
830:                 elif deltatype == 2:
831:                     # Use the least-slack edge to continue the search.
832:                     allowedge[deltaedge] = True
833:                     (i, j, wt) = edges[deltaedge]
834:                     if label[inblossom[i]] == 0:
835:                         i, j = j, i
836:                     assert label[inblossom[i]] == 1
837:                     queue.append(i)
838:                 elif deltatype == 3:
839:                     # Use the least-slack edge to continue the search.
840:                     allowedge[deltaedge] = True
841:                     (i, j, wt) = edges[deltaedge]
842:                     assert label[inblossom[i]] == 1
843:                     queue.append(i)
844:                 elif deltatype == 4:
845:                     # Expand the least-z blossom.
846:                     expandBlossom(deltablossom, False)
847: 
848:                 # End of a this substage.
849: 
850:             # Stop when no more augmenting path can be found.
851:             if not augmented:
852:                 break
853: 
854:             # End of a stage; expand all S-blossoms which have dualvar = 0.
855:             for b in xrange(nvertex, 2 * nvertex):
856:                 if (blossomparent[b] == -1 and blossombase[b] >= 0 and
857:                         label[b] == 1 and dualvar[b] == 0):
858:                     expandBlossom(b, True)
859: 
860:         # Verify that we reached the optimum solution.
861:         if CHECK_OPTIMUM:
862:             verifyOptimum()
863: 
864:         # Transform mate[] such that mate[v] is the vertex to which v is paired.
865:         for v in xrange(nvertex):
866:             if mate[v] >= 0:
867:                 mate[v] = endpoint[mate[v]]
868:         for v in xrange(nvertex):
869:             assert mate[v] == -1 or mate[mate[v]] == v
870: 
871:         # print mate
872:         return True
873: 
874: 
875: def run():
876:     m = MWMatchingRun()
877:     m.run()
878: 
879: 
880: run()
881: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

str_34 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 16, (-1)), 'str', 'Weighted maximum matching in general graphs.\n\nThe algorithm is taken from "Efficient Algorithms for Finding Maximum\nMatching in Graphs" by Zvi Galil, ACM Computing Surveys, 1986.\nIt is based on the "blossom" method for finding augmenting paths and\nthe "primal-dual" method for finding a matching of maximum weight, both\ndue to Jack Edmonds.\nSome ideas came from "Implementation of algorithms for maximum matching\non non-bipartite graphs" by H.J. Gabow, Standford Ph.D. thesis, 1973.\n\nA C program for maximum weight matching by Ed Rothberg was used extensively\nto validate this new code.\n\nCopyright 2009 Joris van Rantwijk, license GPL2 or later\n\n')
stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 19, 0))

# 'from sys import stderr' statement (line 19)
try:
    from sys import stderr

except:
    stderr = UndefinedType
import_from_module(stypy.reporting.localization.Localization(__file__, 19, 0), 'sys', None, module_type_store, ['stderr'], [stderr])

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 20, 0))

# 'import os' statement (line 20)
import os

import_module(stypy.reporting.localization.Localization(__file__, 20, 0), 'os', os, module_type_store)


@norecursion
def Relative(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'Relative'
    module_type_store = module_type_store.open_function_context('Relative', 23, 0, False)
    
    # Passed parameters checking function
    Relative.stypy_localization = localization
    Relative.stypy_type_of_self = None
    Relative.stypy_type_store = module_type_store
    Relative.stypy_function_name = 'Relative'
    Relative.stypy_param_names_list = ['path']
    Relative.stypy_varargs_param_name = None
    Relative.stypy_kwargs_param_name = None
    Relative.stypy_call_defaults = defaults
    Relative.stypy_call_varargs = varargs
    Relative.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'Relative', ['path'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'Relative', localization, ['path'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'Relative(...)' code ##################

    
    # Call to join(...): (line 24)
    # Processing the call arguments (line 24)
    
    # Call to dirname(...): (line 24)
    # Processing the call arguments (line 24)
    # Getting the type of '__file__' (line 24)
    file___41 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 40), '__file__', False)
    # Processing the call keyword arguments (line 24)
    kwargs_42 = {}
    # Getting the type of 'os' (line 24)
    os_38 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 24), 'os', False)
    # Obtaining the member 'path' of a type (line 24)
    path_39 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 24), os_38, 'path')
    # Obtaining the member 'dirname' of a type (line 24)
    dirname_40 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 24), path_39, 'dirname')
    # Calling dirname(args, kwargs) (line 24)
    dirname_call_result_43 = invoke(stypy.reporting.localization.Localization(__file__, 24, 24), dirname_40, *[file___41], **kwargs_42)
    
    # Getting the type of 'path' (line 24)
    path_44 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 51), 'path', False)
    # Processing the call keyword arguments (line 24)
    kwargs_45 = {}
    # Getting the type of 'os' (line 24)
    os_35 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 11), 'os', False)
    # Obtaining the member 'path' of a type (line 24)
    path_36 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 11), os_35, 'path')
    # Obtaining the member 'join' of a type (line 24)
    join_37 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 24, 11), path_36, 'join')
    # Calling join(args, kwargs) (line 24)
    join_call_result_46 = invoke(stypy.reporting.localization.Localization(__file__, 24, 11), join_37, *[dirname_call_result_43, path_44], **kwargs_45)
    
    # Assigning a type to the variable 'stypy_return_type' (line 24)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 4), 'stypy_return_type', join_call_result_46)
    
    # ################# End of 'Relative(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'Relative' in the type store
    # Getting the type of 'stypy_return_type' (line 23)
    stypy_return_type_47 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_47)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'Relative'
    return stypy_return_type_47

# Assigning a type to the variable 'Relative' (line 23)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 0), 'Relative', Relative)

@norecursion
def debug(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'debug'
    module_type_store = module_type_store.open_function_context('debug', 27, 0, False)
    
    # Passed parameters checking function
    debug.stypy_localization = localization
    debug.stypy_type_of_self = None
    debug.stypy_type_store = module_type_store
    debug.stypy_function_name = 'debug'
    debug.stypy_param_names_list = ['s']
    debug.stypy_varargs_param_name = None
    debug.stypy_kwargs_param_name = None
    debug.stypy_call_defaults = defaults
    debug.stypy_call_varargs = varargs
    debug.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'debug', ['s'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'debug', localization, ['s'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'debug(...)' code ##################

    pass
    
    # ################# End of 'debug(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'debug' in the type store
    # Getting the type of 'stypy_return_type' (line 27)
    stypy_return_type_48 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_48)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'debug'
    return stypy_return_type_48

# Assigning a type to the variable 'debug' (line 27)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 0), 'debug', debug)

# Assigning a Name to a Name (line 31):

# Assigning a Name to a Name (line 31):
# Getting the type of 'debug' (line 31)
debug_49 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 31, 8), 'debug')
# Assigning a type to the variable 'DEBUG' (line 31)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 31, 0), 'DEBUG', debug_49)

# Assigning a Name to a Name (line 32):

# Assigning a Name to a Name (line 32):
# Getting the type of 'None' (line 32)
None_50 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 8), 'None')
# Assigning a type to the variable 'DEBUG' (line 32)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 32, 0), 'DEBUG', None_50)

# Assigning a Name to a Name (line 36):

# Assigning a Name to a Name (line 36):
# Getting the type of 'False' (line 36)
False_51 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 14), 'False')
# Assigning a type to the variable 'CHECK_DELTA' (line 36)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 0), 'CHECK_DELTA', False_51)

# Assigning a Name to a Name (line 39):

# Assigning a Name to a Name (line 39):
# Getting the type of 'True' (line 39)
True_52 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 16), 'True')
# Assigning a type to the variable 'CHECK_OPTIMUM' (line 39)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 0), 'CHECK_OPTIMUM', True_52)

# Assigning a Call to a Name (line 42):

# Assigning a Call to a Name (line 42):

# Call to file(...): (line 42)
# Processing the call arguments (line 42)

# Call to Relative(...): (line 42)
# Processing the call arguments (line 42)
str_55 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 42, 22), 'str', 'testdata/bench_mwmatching_2039_250_a.gr')
# Processing the call keyword arguments (line 42)
kwargs_56 = {}
# Getting the type of 'Relative' (line 42)
Relative_54 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 13), 'Relative', False)
# Calling Relative(args, kwargs) (line 42)
Relative_call_result_57 = invoke(stypy.reporting.localization.Localization(__file__, 42, 13), Relative_54, *[str_55], **kwargs_56)

# Processing the call keyword arguments (line 42)
kwargs_58 = {}
# Getting the type of 'file' (line 42)
file_53 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 8), 'file', False)
# Calling file(args, kwargs) (line 42)
file_call_result_59 = invoke(stypy.reporting.localization.Localization(__file__, 42, 8), file_53, *[Relative_call_result_57], **kwargs_58)

# Assigning a type to the variable 'input' (line 42)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 42, 0), 'input', file_call_result_59)

# Assigning a Call to a Name (line 43):

# Assigning a Call to a Name (line 43):

# Call to split(...): (line 43)
# Processing the call keyword arguments (line 43)
kwargs_65 = {}

# Call to next(...): (line 43)
# Processing the call keyword arguments (line 43)
kwargs_62 = {}
# Getting the type of 'input' (line 43)
input_60 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 43, 4), 'input', False)
# Obtaining the member 'next' of a type (line 43)
next_61 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 43, 4), input_60, 'next')
# Calling next(args, kwargs) (line 43)
next_call_result_63 = invoke(stypy.reporting.localization.Localization(__file__, 43, 4), next_61, *[], **kwargs_62)

# Obtaining the member 'split' of a type (line 43)
split_64 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 43, 4), next_call_result_63, 'split')
# Calling split(args, kwargs) (line 43)
split_call_result_66 = invoke(stypy.reporting.localization.Localization(__file__, 43, 4), split_64, *[], **kwargs_65)

# Assigning a type to the variable 's' (line 43)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 43, 0), 's', split_call_result_66)
# Evaluating assert statement condition

# Evaluating a boolean operation


# Obtaining the type of the subscript
int_67 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 9), 'int')
# Getting the type of 's' (line 45)
s_68 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 7), 's')
# Obtaining the member '__getitem__' of a type (line 45)
getitem___69 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 7), s_68, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 45)
subscript_call_result_70 = invoke(stypy.reporting.localization.Localization(__file__, 45, 7), getitem___69, int_67)

str_71 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 15), 'str', 'p')
# Applying the binary operator '==' (line 45)
result_eq_72 = python_operator(stypy.reporting.localization.Localization(__file__, 45, 7), '==', subscript_call_result_70, str_71)



# Obtaining the type of the subscript
int_73 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 25), 'int')
# Getting the type of 's' (line 45)
s_74 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 23), 's')
# Obtaining the member '__getitem__' of a type (line 45)
getitem___75 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 45, 23), s_74, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 45)
subscript_call_result_76 = invoke(stypy.reporting.localization.Localization(__file__, 45, 23), getitem___75, int_73)

str_77 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 45, 31), 'str', 'edge')
# Applying the binary operator '==' (line 45)
result_eq_78 = python_operator(stypy.reporting.localization.Localization(__file__, 45, 23), '==', subscript_call_result_76, str_77)

# Applying the binary operator 'and' (line 45)
result_and_keyword_79 = python_operator(stypy.reporting.localization.Localization(__file__, 45, 7), 'and', result_eq_72, result_eq_78)


# Assigning a List to a Name (line 46):

# Assigning a List to a Name (line 46):

# Obtaining an instance of the builtin type 'list' (line 46)
list_80 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 46, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 46)

# Assigning a type to the variable 'edges' (line 46)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 46, 0), 'edges', list_80)


# Call to xrange(...): (line 47)
# Processing the call arguments (line 47)

# Call to int(...): (line 47)
# Processing the call arguments (line 47)

# Obtaining the type of the subscript
int_83 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 47, 22), 'int')
# Getting the type of 's' (line 47)
s_84 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 20), 's', False)
# Obtaining the member '__getitem__' of a type (line 47)
getitem___85 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 47, 20), s_84, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 47)
subscript_call_result_86 = invoke(stypy.reporting.localization.Localization(__file__, 47, 20), getitem___85, int_83)

# Processing the call keyword arguments (line 47)
kwargs_87 = {}
# Getting the type of 'int' (line 47)
int_82 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 16), 'int', False)
# Calling int(args, kwargs) (line 47)
int_call_result_88 = invoke(stypy.reporting.localization.Localization(__file__, 47, 16), int_82, *[subscript_call_result_86], **kwargs_87)

# Processing the call keyword arguments (line 47)
kwargs_89 = {}
# Getting the type of 'xrange' (line 47)
xrange_81 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 9), 'xrange', False)
# Calling xrange(args, kwargs) (line 47)
xrange_call_result_90 = invoke(stypy.reporting.localization.Localization(__file__, 47, 9), xrange_81, *[int_call_result_88], **kwargs_89)

# Testing if the for loop is going to be iterated (line 47)
# Testing the type of a for loop iterable (line 47)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 47, 0), xrange_call_result_90)

if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 47, 0), xrange_call_result_90):
    # Getting the type of the for loop variable (line 47)
    for_loop_var_91 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 47, 0), xrange_call_result_90)
    # Assigning a type to the variable 'i' (line 47)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 47, 0), 'i', for_loop_var_91)
    # SSA begins for a for statement (line 47)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Call to a Name (line 49):
    
    # Assigning a Call to a Name (line 49):
    
    # Call to split(...): (line 49)
    # Processing the call keyword arguments (line 49)
    kwargs_97 = {}
    
    # Call to next(...): (line 49)
    # Processing the call keyword arguments (line 49)
    kwargs_94 = {}
    # Getting the type of 'input' (line 49)
    input_92 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 49, 8), 'input', False)
    # Obtaining the member 'next' of a type (line 49)
    next_93 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 49, 8), input_92, 'next')
    # Calling next(args, kwargs) (line 49)
    next_call_result_95 = invoke(stypy.reporting.localization.Localization(__file__, 49, 8), next_93, *[], **kwargs_94)
    
    # Obtaining the member 'split' of a type (line 49)
    split_96 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 49, 8), next_call_result_95, 'split')
    # Calling split(args, kwargs) (line 49)
    split_call_result_98 = invoke(stypy.reporting.localization.Localization(__file__, 49, 8), split_96, *[], **kwargs_97)
    
    # Assigning a type to the variable 's' (line 49)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 49, 4), 's', split_call_result_98)
    # Evaluating assert statement condition
    
    # Evaluating a boolean operation
    
    
    # Call to len(...): (line 50)
    # Processing the call arguments (line 50)
    # Getting the type of 's' (line 50)
    s_100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 15), 's', False)
    # Processing the call keyword arguments (line 50)
    kwargs_101 = {}
    # Getting the type of 'len' (line 50)
    len_99 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 11), 'len', False)
    # Calling len(args, kwargs) (line 50)
    len_call_result_102 = invoke(stypy.reporting.localization.Localization(__file__, 50, 11), len_99, *[s_100], **kwargs_101)
    
    int_103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 21), 'int')
    # Applying the binary operator '==' (line 50)
    result_eq_104 = python_operator(stypy.reporting.localization.Localization(__file__, 50, 11), '==', len_call_result_102, int_103)
    
    
    
    # Obtaining the type of the subscript
    int_105 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 29), 'int')
    # Getting the type of 's' (line 50)
    s_106 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 27), 's')
    # Obtaining the member '__getitem__' of a type (line 50)
    getitem___107 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 27), s_106, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 50)
    subscript_call_result_108 = invoke(stypy.reporting.localization.Localization(__file__, 50, 27), getitem___107, int_105)
    
    str_109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 50, 35), 'str', 'e')
    # Applying the binary operator '==' (line 50)
    result_eq_110 = python_operator(stypy.reporting.localization.Localization(__file__, 50, 27), '==', subscript_call_result_108, str_109)
    
    # Applying the binary operator 'and' (line 50)
    result_and_keyword_111 = python_operator(stypy.reporting.localization.Localization(__file__, 50, 11), 'and', result_eq_104, result_eq_110)
    
    
    # Call to append(...): (line 51)
    # Processing the call arguments (line 51)
    
    # Obtaining an instance of the builtin type 'tuple' (line 51)
    tuple_114 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 18), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 51)
    # Adding element type (line 51)
    
    # Call to int(...): (line 51)
    # Processing the call arguments (line 51)
    
    # Obtaining the type of the subscript
    int_116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 24), 'int')
    # Getting the type of 's' (line 51)
    s_117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 22), 's', False)
    # Obtaining the member '__getitem__' of a type (line 51)
    getitem___118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 22), s_117, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 51)
    subscript_call_result_119 = invoke(stypy.reporting.localization.Localization(__file__, 51, 22), getitem___118, int_116)
    
    # Processing the call keyword arguments (line 51)
    kwargs_120 = {}
    # Getting the type of 'int' (line 51)
    int_115 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 18), 'int', False)
    # Calling int(args, kwargs) (line 51)
    int_call_result_121 = invoke(stypy.reporting.localization.Localization(__file__, 51, 18), int_115, *[subscript_call_result_119], **kwargs_120)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 51, 18), tuple_114, int_call_result_121)
    # Adding element type (line 51)
    
    # Call to int(...): (line 51)
    # Processing the call arguments (line 51)
    
    # Obtaining the type of the subscript
    int_123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 35), 'int')
    # Getting the type of 's' (line 51)
    s_124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 33), 's', False)
    # Obtaining the member '__getitem__' of a type (line 51)
    getitem___125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 33), s_124, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 51)
    subscript_call_result_126 = invoke(stypy.reporting.localization.Localization(__file__, 51, 33), getitem___125, int_123)
    
    # Processing the call keyword arguments (line 51)
    kwargs_127 = {}
    # Getting the type of 'int' (line 51)
    int_122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 29), 'int', False)
    # Calling int(args, kwargs) (line 51)
    int_call_result_128 = invoke(stypy.reporting.localization.Localization(__file__, 51, 29), int_122, *[subscript_call_result_126], **kwargs_127)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 51, 18), tuple_114, int_call_result_128)
    # Adding element type (line 51)
    
    # Call to int(...): (line 51)
    # Processing the call arguments (line 51)
    
    # Obtaining the type of the subscript
    int_130 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 51, 46), 'int')
    # Getting the type of 's' (line 51)
    s_131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 44), 's', False)
    # Obtaining the member '__getitem__' of a type (line 51)
    getitem___132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 44), s_131, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 51)
    subscript_call_result_133 = invoke(stypy.reporting.localization.Localization(__file__, 51, 44), getitem___132, int_130)
    
    # Processing the call keyword arguments (line 51)
    kwargs_134 = {}
    # Getting the type of 'int' (line 51)
    int_129 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 40), 'int', False)
    # Calling int(args, kwargs) (line 51)
    int_call_result_135 = invoke(stypy.reporting.localization.Localization(__file__, 51, 40), int_129, *[subscript_call_result_133], **kwargs_134)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 51, 18), tuple_114, int_call_result_135)
    
    # Processing the call keyword arguments (line 51)
    kwargs_136 = {}
    # Getting the type of 'edges' (line 51)
    edges_112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 51, 4), 'edges', False)
    # Obtaining the member 'append' of a type (line 51)
    append_113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 51, 4), edges_112, 'append')
    # Calling append(args, kwargs) (line 51)
    append_call_result_137 = invoke(stypy.reporting.localization.Localization(__file__, 51, 4), append_113, *[tuple_114], **kwargs_136)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()



# Assigning a Name to a Name (line 52):

# Assigning a Name to a Name (line 52):
# Getting the type of 'True' (line 52)
True_138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 17), 'True')
# Assigning a type to the variable 'maxcardinality' (line 52)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 0), 'maxcardinality', True_138)
str_139 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 66, (-1)), 'str', 'Compute a maximum-weighted matching in the general undirected\nweighted graph given by "edges".  If "maxcardinality" is true,\nonly maximum-cardinality matchings are considered as solutions.\n\nEdges is a sequence of tuples (i, j, wt) describing an undirected\nedge between vertex i and vertex j with weight wt.  There is at most\none edge between any two vertices; no vertex has an edge to itself.\nVertices are identified by consecutive, non-negative integers.\n\nReturn a list "mate", such that mate[i] == j if vertex i is\nmatched to vertex j, and mate[i] == -1 if vertex i is not matched.\n\nThis function takes time O(n ** 3).')

# Assigning a Call to a Name (line 81):

# Assigning a Call to a Name (line 81):

# Call to len(...): (line 81)
# Processing the call arguments (line 81)
# Getting the type of 'edges' (line 81)
edges_141 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 12), 'edges', False)
# Processing the call keyword arguments (line 81)
kwargs_142 = {}
# Getting the type of 'len' (line 81)
len_140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 8), 'len', False)
# Calling len(args, kwargs) (line 81)
len_call_result_143 = invoke(stypy.reporting.localization.Localization(__file__, 81, 8), len_140, *[edges_141], **kwargs_142)

# Assigning a type to the variable 'nedge' (line 81)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 0), 'nedge', len_call_result_143)

# Assigning a Num to a Name (line 82):

# Assigning a Num to a Name (line 82):
int_144 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 82, 10), 'int')
# Assigning a type to the variable 'nvertex' (line 82)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 82, 0), 'nvertex', int_144)

# Getting the type of 'edges' (line 83)
edges_145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 83, 17), 'edges')
# Testing if the for loop is going to be iterated (line 83)
# Testing the type of a for loop iterable (line 83)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 83, 0), edges_145)

if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 83, 0), edges_145):
    # Getting the type of the for loop variable (line 83)
    for_loop_var_146 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 83, 0), edges_145)
    # Assigning a type to the variable 'i' (line 83)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 0), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 83, 0), for_loop_var_146))
    # Assigning a type to the variable 'j' (line 83)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 0), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 83, 0), for_loop_var_146))
    # Assigning a type to the variable 'w' (line 83)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 83, 0), 'w', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 83, 0), for_loop_var_146))
    # SSA begins for a for statement (line 83)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    # Evaluating assert statement condition
    
    # Evaluating a boolean operation
    
    # Getting the type of 'i' (line 84)
    i_147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 11), 'i')
    int_148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 16), 'int')
    # Applying the binary operator '>=' (line 84)
    result_ge_149 = python_operator(stypy.reporting.localization.Localization(__file__, 84, 11), '>=', i_147, int_148)
    
    
    # Getting the type of 'j' (line 84)
    j_150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 22), 'j')
    int_151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 84, 27), 'int')
    # Applying the binary operator '>=' (line 84)
    result_ge_152 = python_operator(stypy.reporting.localization.Localization(__file__, 84, 22), '>=', j_150, int_151)
    
    # Applying the binary operator 'and' (line 84)
    result_and_keyword_153 = python_operator(stypy.reporting.localization.Localization(__file__, 84, 11), 'and', result_ge_149, result_ge_152)
    
    # Getting the type of 'i' (line 84)
    i_154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 33), 'i')
    # Getting the type of 'j' (line 84)
    j_155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 84, 38), 'j')
    # Applying the binary operator '!=' (line 84)
    result_ne_156 = python_operator(stypy.reporting.localization.Localization(__file__, 84, 33), '!=', i_154, j_155)
    
    # Applying the binary operator 'and' (line 84)
    result_and_keyword_157 = python_operator(stypy.reporting.localization.Localization(__file__, 84, 11), 'and', result_and_keyword_153, result_ne_156)
    
    
    # Getting the type of 'i' (line 85)
    i_158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 7), 'i')
    # Getting the type of 'nvertex' (line 85)
    nvertex_159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 85, 12), 'nvertex')
    # Applying the binary operator '>=' (line 85)
    result_ge_160 = python_operator(stypy.reporting.localization.Localization(__file__, 85, 7), '>=', i_158, nvertex_159)
    
    # Testing if the type of an if condition is none (line 85)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 85, 4), result_ge_160):
        pass
    else:
        
        # Testing the type of an if condition (line 85)
        if_condition_161 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 85, 4), result_ge_160)
        # Assigning a type to the variable 'if_condition_161' (line 85)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 85, 4), 'if_condition_161', if_condition_161)
        # SSA begins for if statement (line 85)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 86):
        
        # Assigning a BinOp to a Name (line 86):
        # Getting the type of 'i' (line 86)
        i_162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 18), 'i')
        int_163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 22), 'int')
        # Applying the binary operator '+' (line 86)
        result_add_164 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 18), '+', i_162, int_163)
        
        # Assigning a type to the variable 'nvertex' (line 86)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 'nvertex', result_add_164)
        # SSA join for if statement (line 85)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Getting the type of 'j' (line 87)
    j_165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 7), 'j')
    # Getting the type of 'nvertex' (line 87)
    nvertex_166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 87, 12), 'nvertex')
    # Applying the binary operator '>=' (line 87)
    result_ge_167 = python_operator(stypy.reporting.localization.Localization(__file__, 87, 7), '>=', j_165, nvertex_166)
    
    # Testing if the type of an if condition is none (line 87)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 87, 4), result_ge_167):
        pass
    else:
        
        # Testing the type of an if condition (line 87)
        if_condition_168 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 87, 4), result_ge_167)
        # Assigning a type to the variable 'if_condition_168' (line 87)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 87, 4), 'if_condition_168', if_condition_168)
        # SSA begins for if statement (line 87)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a BinOp to a Name (line 88):
        
        # Assigning a BinOp to a Name (line 88):
        # Getting the type of 'j' (line 88)
        j_169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 88, 18), 'j')
        int_170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 22), 'int')
        # Applying the binary operator '+' (line 88)
        result_add_171 = python_operator(stypy.reporting.localization.Localization(__file__, 88, 18), '+', j_169, int_170)
        
        # Assigning a type to the variable 'nvertex' (line 88)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 8), 'nvertex', result_add_171)
        # SSA join for if statement (line 87)
        module_type_store = module_type_store.join_ssa_context()
        

    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()



# Assigning a Call to a Name (line 91):

# Assigning a Call to a Name (line 91):

# Call to max(...): (line 91)
# Processing the call arguments (line 91)
int_173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 16), 'int')

# Call to max(...): (line 91)
# Processing the call arguments (line 91)
# Calculating list comprehension
# Calculating comprehension expression
# Getting the type of 'edges' (line 91)
edges_176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 45), 'edges', False)
comprehension_177 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 24), edges_176)
# Assigning a type to the variable 'i' (line 91)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 24), 'i', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 24), comprehension_177))
# Assigning a type to the variable 'j' (line 91)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 24), 'j', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 24), comprehension_177))
# Assigning a type to the variable 'wt' (line 91)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 24), 'wt', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 24), comprehension_177))
# Getting the type of 'wt' (line 91)
wt_175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 24), 'wt', False)
list_178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 91, 24), 'list')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 91, 24), list_178, wt_175)
# Processing the call keyword arguments (line 91)
kwargs_179 = {}
# Getting the type of 'max' (line 91)
max_174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 19), 'max', False)
# Calling max(args, kwargs) (line 91)
max_call_result_180 = invoke(stypy.reporting.localization.Localization(__file__, 91, 19), max_174, *[list_178], **kwargs_179)

# Processing the call keyword arguments (line 91)
kwargs_181 = {}
# Getting the type of 'max' (line 91)
max_172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 12), 'max', False)
# Calling max(args, kwargs) (line 91)
max_call_result_182 = invoke(stypy.reporting.localization.Localization(__file__, 91, 12), max_172, *[int_173, max_call_result_180], **kwargs_181)

# Assigning a type to the variable 'maxweight' (line 91)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 0), 'maxweight', max_call_result_182)

# Assigning a ListComp to a Name (line 96):

# Assigning a ListComp to a Name (line 96):
# Calculating list comprehension
# Calculating comprehension expression

# Call to xrange(...): (line 96)
# Processing the call arguments (line 96)
int_195 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 49), 'int')
# Getting the type of 'nedge' (line 96)
nedge_196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 53), 'nedge', False)
# Applying the binary operator '*' (line 96)
result_mul_197 = python_operator(stypy.reporting.localization.Localization(__file__, 96, 49), '*', int_195, nedge_196)

# Processing the call keyword arguments (line 96)
kwargs_198 = {}
# Getting the type of 'xrange' (line 96)
xrange_194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 42), 'xrange', False)
# Calling xrange(args, kwargs) (line 96)
xrange_call_result_199 = invoke(stypy.reporting.localization.Localization(__file__, 96, 42), xrange_194, *[result_mul_197], **kwargs_198)

comprehension_200 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 12), xrange_call_result_199)
# Assigning a type to the variable 'p' (line 96)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 12), 'p', comprehension_200)

# Obtaining the type of the subscript
# Getting the type of 'p' (line 96)
p_183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 26), 'p')
int_184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 30), 'int')
# Applying the binary operator '%' (line 96)
result_mod_185 = python_operator(stypy.reporting.localization.Localization(__file__, 96, 26), '%', p_183, int_184)


# Obtaining the type of the subscript
# Getting the type of 'p' (line 96)
p_186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 18), 'p')
int_187 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 23), 'int')
# Applying the binary operator '//' (line 96)
result_floordiv_188 = python_operator(stypy.reporting.localization.Localization(__file__, 96, 18), '//', p_186, int_187)

# Getting the type of 'edges' (line 96)
edges_189 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 96, 12), 'edges')
# Obtaining the member '__getitem__' of a type (line 96)
getitem___190 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 96, 12), edges_189, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 96)
subscript_call_result_191 = invoke(stypy.reporting.localization.Localization(__file__, 96, 12), getitem___190, result_floordiv_188)

# Obtaining the member '__getitem__' of a type (line 96)
getitem___192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 96, 12), subscript_call_result_191, '__getitem__')
# Calling the subscript (__getitem__) to obtain the elements type (line 96)
subscript_call_result_193 = invoke(stypy.reporting.localization.Localization(__file__, 96, 12), getitem___192, result_mod_185)

list_201 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 96, 12), 'list')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 96, 12), list_201, subscript_call_result_193)
# Assigning a type to the variable 'endpoint' (line 96)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 96, 0), 'endpoint', list_201)

# Assigning a ListComp to a Name (line 101):

# Assigning a ListComp to a Name (line 101):
# Calculating list comprehension
# Calculating comprehension expression

# Call to xrange(...): (line 101)
# Processing the call arguments (line 101)
# Getting the type of 'nvertex' (line 101)
nvertex_204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 32), 'nvertex', False)
# Processing the call keyword arguments (line 101)
kwargs_205 = {}
# Getting the type of 'xrange' (line 101)
xrange_203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 25), 'xrange', False)
# Calling xrange(args, kwargs) (line 101)
xrange_call_result_206 = invoke(stypy.reporting.localization.Localization(__file__, 101, 25), xrange_203, *[nvertex_204], **kwargs_205)

comprehension_207 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 101, 13), xrange_call_result_206)
# Assigning a type to the variable 'i' (line 101)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 13), 'i', comprehension_207)

# Obtaining an instance of the builtin type 'list' (line 101)
list_202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 101, 13), 'list')
# Adding type elements to the builtin type 'list' instance (line 101)

list_208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 101, 13), 'list')
set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 101, 13), list_208, list_202)
# Assigning a type to the variable 'neighbend' (line 101)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 101, 0), 'neighbend', list_208)


# Call to xrange(...): (line 102)
# Processing the call arguments (line 102)

# Call to len(...): (line 102)
# Processing the call arguments (line 102)
# Getting the type of 'edges' (line 102)
edges_211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 20), 'edges', False)
# Processing the call keyword arguments (line 102)
kwargs_212 = {}
# Getting the type of 'len' (line 102)
len_210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 16), 'len', False)
# Calling len(args, kwargs) (line 102)
len_call_result_213 = invoke(stypy.reporting.localization.Localization(__file__, 102, 16), len_210, *[edges_211], **kwargs_212)

# Processing the call keyword arguments (line 102)
kwargs_214 = {}
# Getting the type of 'xrange' (line 102)
xrange_209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 9), 'xrange', False)
# Calling xrange(args, kwargs) (line 102)
xrange_call_result_215 = invoke(stypy.reporting.localization.Localization(__file__, 102, 9), xrange_209, *[len_call_result_213], **kwargs_214)

# Testing if the for loop is going to be iterated (line 102)
# Testing the type of a for loop iterable (line 102)
is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 102, 0), xrange_call_result_215)

if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 102, 0), xrange_call_result_215):
    # Getting the type of the for loop variable (line 102)
    for_loop_var_216 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 102, 0), xrange_call_result_215)
    # Assigning a type to the variable 'k' (line 102)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 102, 0), 'k', for_loop_var_216)
    # SSA begins for a for statement (line 102)
    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
    
    # Assigning a Subscript to a Tuple (line 103):
    
    # Assigning a Subscript to a Name (line 103):
    
    # Obtaining the type of the subscript
    int_217 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 103)
    k_218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 22), 'k')
    # Getting the type of 'edges' (line 103)
    edges_219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 16), 'edges')
    # Obtaining the member '__getitem__' of a type (line 103)
    getitem___220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 103, 16), edges_219, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 103)
    subscript_call_result_221 = invoke(stypy.reporting.localization.Localization(__file__, 103, 16), getitem___220, k_218)
    
    # Obtaining the member '__getitem__' of a type (line 103)
    getitem___222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 103, 4), subscript_call_result_221, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 103)
    subscript_call_result_223 = invoke(stypy.reporting.localization.Localization(__file__, 103, 4), getitem___222, int_217)
    
    # Assigning a type to the variable 'tuple_var_assignment_1' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'tuple_var_assignment_1', subscript_call_result_223)
    
    # Assigning a Subscript to a Name (line 103):
    
    # Obtaining the type of the subscript
    int_224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 103)
    k_225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 22), 'k')
    # Getting the type of 'edges' (line 103)
    edges_226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 16), 'edges')
    # Obtaining the member '__getitem__' of a type (line 103)
    getitem___227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 103, 16), edges_226, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 103)
    subscript_call_result_228 = invoke(stypy.reporting.localization.Localization(__file__, 103, 16), getitem___227, k_225)
    
    # Obtaining the member '__getitem__' of a type (line 103)
    getitem___229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 103, 4), subscript_call_result_228, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 103)
    subscript_call_result_230 = invoke(stypy.reporting.localization.Localization(__file__, 103, 4), getitem___229, int_224)
    
    # Assigning a type to the variable 'tuple_var_assignment_2' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'tuple_var_assignment_2', subscript_call_result_230)
    
    # Assigning a Subscript to a Name (line 103):
    
    # Obtaining the type of the subscript
    int_231 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 103, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 103)
    k_232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 22), 'k')
    # Getting the type of 'edges' (line 103)
    edges_233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 16), 'edges')
    # Obtaining the member '__getitem__' of a type (line 103)
    getitem___234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 103, 16), edges_233, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 103)
    subscript_call_result_235 = invoke(stypy.reporting.localization.Localization(__file__, 103, 16), getitem___234, k_232)
    
    # Obtaining the member '__getitem__' of a type (line 103)
    getitem___236 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 103, 4), subscript_call_result_235, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 103)
    subscript_call_result_237 = invoke(stypy.reporting.localization.Localization(__file__, 103, 4), getitem___236, int_231)
    
    # Assigning a type to the variable 'tuple_var_assignment_3' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'tuple_var_assignment_3', subscript_call_result_237)
    
    # Assigning a Name to a Name (line 103):
    # Getting the type of 'tuple_var_assignment_1' (line 103)
    tuple_var_assignment_1_238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'tuple_var_assignment_1')
    # Assigning a type to the variable 'i' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 5), 'i', tuple_var_assignment_1_238)
    
    # Assigning a Name to a Name (line 103):
    # Getting the type of 'tuple_var_assignment_2' (line 103)
    tuple_var_assignment_2_239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'tuple_var_assignment_2')
    # Assigning a type to the variable 'j' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 8), 'j', tuple_var_assignment_2_239)
    
    # Assigning a Name to a Name (line 103):
    # Getting the type of 'tuple_var_assignment_3' (line 103)
    tuple_var_assignment_3_240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 103, 4), 'tuple_var_assignment_3')
    # Assigning a type to the variable 'w' (line 103)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 103, 11), 'w', tuple_var_assignment_3_240)
    
    # Call to append(...): (line 104)
    # Processing the call arguments (line 104)
    int_246 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 24), 'int')
    # Getting the type of 'k' (line 104)
    k_247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 28), 'k', False)
    # Applying the binary operator '*' (line 104)
    result_mul_248 = python_operator(stypy.reporting.localization.Localization(__file__, 104, 24), '*', int_246, k_247)
    
    int_249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 104, 32), 'int')
    # Applying the binary operator '+' (line 104)
    result_add_250 = python_operator(stypy.reporting.localization.Localization(__file__, 104, 24), '+', result_mul_248, int_249)
    
    # Processing the call keyword arguments (line 104)
    kwargs_251 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 104)
    i_241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 14), 'i', False)
    # Getting the type of 'neighbend' (line 104)
    neighbend_242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 104, 4), 'neighbend', False)
    # Obtaining the member '__getitem__' of a type (line 104)
    getitem___243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 4), neighbend_242, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 104)
    subscript_call_result_244 = invoke(stypy.reporting.localization.Localization(__file__, 104, 4), getitem___243, i_241)
    
    # Obtaining the member 'append' of a type (line 104)
    append_245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 104, 4), subscript_call_result_244, 'append')
    # Calling append(args, kwargs) (line 104)
    append_call_result_252 = invoke(stypy.reporting.localization.Localization(__file__, 104, 4), append_245, *[result_add_250], **kwargs_251)
    
    
    # Call to append(...): (line 105)
    # Processing the call arguments (line 105)
    int_258 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 24), 'int')
    # Getting the type of 'k' (line 105)
    k_259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 28), 'k', False)
    # Applying the binary operator '*' (line 105)
    result_mul_260 = python_operator(stypy.reporting.localization.Localization(__file__, 105, 24), '*', int_258, k_259)
    
    # Processing the call keyword arguments (line 105)
    kwargs_261 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 105)
    j_253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 14), 'j', False)
    # Getting the type of 'neighbend' (line 105)
    neighbend_254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 4), 'neighbend', False)
    # Obtaining the member '__getitem__' of a type (line 105)
    getitem___255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 4), neighbend_254, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 105)
    subscript_call_result_256 = invoke(stypy.reporting.localization.Localization(__file__, 105, 4), getitem___255, j_253)
    
    # Obtaining the member 'append' of a type (line 105)
    append_257 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 4), subscript_call_result_256, 'append')
    # Calling append(args, kwargs) (line 105)
    append_call_result_262 = invoke(stypy.reporting.localization.Localization(__file__, 105, 4), append_257, *[result_mul_260], **kwargs_261)
    
    # SSA join for a for statement
    module_type_store = module_type_store.join_ssa_context()



# Assigning a BinOp to a Name (line 111):

# Assigning a BinOp to a Name (line 111):
# Getting the type of 'nvertex' (line 111)
nvertex_263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 111, 7), 'nvertex')

# Obtaining an instance of the builtin type 'list' (line 111)
list_264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 17), 'list')
# Adding type elements to the builtin type 'list' instance (line 111)
# Adding element type (line 111)
int_265 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 111, 18), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 111, 17), list_264, int_265)

# Applying the binary operator '*' (line 111)
result_mul_266 = python_operator(stypy.reporting.localization.Localization(__file__, 111, 7), '*', nvertex_263, list_264)

# Assigning a type to the variable 'mate' (line 111)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 111, 0), 'mate', result_mul_266)

# Assigning a BinOp to a Name (line 122):

# Assigning a BinOp to a Name (line 122):
int_267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 9), 'int')
# Getting the type of 'nvertex' (line 122)
nvertex_268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 13), 'nvertex')
# Applying the binary operator '*' (line 122)
result_mul_269 = python_operator(stypy.reporting.localization.Localization(__file__, 122, 9), '*', int_267, nvertex_268)


# Obtaining an instance of the builtin type 'list' (line 122)
list_270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 24), 'list')
# Adding type elements to the builtin type 'list' instance (line 122)
# Adding element type (line 122)
int_271 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 122, 25), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 122, 24), list_270, int_271)

# Applying the binary operator '*' (line 122)
result_mul_272 = python_operator(stypy.reporting.localization.Localization(__file__, 122, 8), '*', result_mul_269, list_270)

# Assigning a type to the variable 'label' (line 122)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 122, 0), 'label', result_mul_272)

# Assigning a BinOp to a Name (line 130):

# Assigning a BinOp to a Name (line 130):
int_273 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 12), 'int')
# Getting the type of 'nvertex' (line 130)
nvertex_274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 16), 'nvertex')
# Applying the binary operator '*' (line 130)
result_mul_275 = python_operator(stypy.reporting.localization.Localization(__file__, 130, 12), '*', int_273, nvertex_274)


# Obtaining an instance of the builtin type 'list' (line 130)
list_276 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 130)
# Adding element type (line 130)
int_277 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 130, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 130, 27), list_276, int_277)

# Applying the binary operator '*' (line 130)
result_mul_278 = python_operator(stypy.reporting.localization.Localization(__file__, 130, 11), '*', result_mul_275, list_276)

# Assigning a type to the variable 'labelend' (line 130)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 130, 0), 'labelend', result_mul_278)

# Assigning a Call to a Name (line 137):

# Assigning a Call to a Name (line 137):

# Call to range(...): (line 137)
# Processing the call arguments (line 137)
# Getting the type of 'nvertex' (line 137)
nvertex_280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 18), 'nvertex', False)
# Processing the call keyword arguments (line 137)
kwargs_281 = {}
# Getting the type of 'range' (line 137)
range_279 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 137, 12), 'range', False)
# Calling range(args, kwargs) (line 137)
range_call_result_282 = invoke(stypy.reporting.localization.Localization(__file__, 137, 12), range_279, *[nvertex_280], **kwargs_281)

# Assigning a type to the variable 'inblossom' (line 137)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 137, 0), 'inblossom', range_call_result_282)

# Assigning a BinOp to a Name (line 142):

# Assigning a BinOp to a Name (line 142):
int_283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 17), 'int')
# Getting the type of 'nvertex' (line 142)
nvertex_284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 21), 'nvertex')
# Applying the binary operator '*' (line 142)
result_mul_285 = python_operator(stypy.reporting.localization.Localization(__file__, 142, 17), '*', int_283, nvertex_284)


# Obtaining an instance of the builtin type 'list' (line 142)
list_286 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 142)
# Adding element type (line 142)
int_287 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 142, 33), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 142, 32), list_286, int_287)

# Applying the binary operator '*' (line 142)
result_mul_288 = python_operator(stypy.reporting.localization.Localization(__file__, 142, 16), '*', result_mul_285, list_286)

# Assigning a type to the variable 'blossomparent' (line 142)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 142, 0), 'blossomparent', result_mul_288)

# Assigning a BinOp to a Name (line 147):

# Assigning a BinOp to a Name (line 147):
int_289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 17), 'int')
# Getting the type of 'nvertex' (line 147)
nvertex_290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 21), 'nvertex')
# Applying the binary operator '*' (line 147)
result_mul_291 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 17), '*', int_289, nvertex_290)


# Obtaining an instance of the builtin type 'list' (line 147)
list_292 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 147, 32), 'list')
# Adding type elements to the builtin type 'list' instance (line 147)
# Adding element type (line 147)
# Getting the type of 'None' (line 147)
None_293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 147, 33), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 147, 32), list_292, None_293)

# Applying the binary operator '*' (line 147)
result_mul_294 = python_operator(stypy.reporting.localization.Localization(__file__, 147, 16), '*', result_mul_291, list_292)

# Assigning a type to the variable 'blossomchilds' (line 147)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 147, 0), 'blossomchilds', result_mul_294)

# Assigning a BinOp to a Name (line 151):

# Assigning a BinOp to a Name (line 151):

# Call to range(...): (line 151)
# Processing the call arguments (line 151)
# Getting the type of 'nvertex' (line 151)
nvertex_296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 20), 'nvertex', False)
# Processing the call keyword arguments (line 151)
kwargs_297 = {}
# Getting the type of 'range' (line 151)
range_295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 14), 'range', False)
# Calling range(args, kwargs) (line 151)
range_call_result_298 = invoke(stypy.reporting.localization.Localization(__file__, 151, 14), range_295, *[nvertex_296], **kwargs_297)

# Getting the type of 'nvertex' (line 151)
nvertex_299 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 31), 'nvertex')

# Obtaining an instance of the builtin type 'list' (line 151)
list_300 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 41), 'list')
# Adding type elements to the builtin type 'list' instance (line 151)
# Adding element type (line 151)
int_301 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 151, 42), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 151, 41), list_300, int_301)

# Applying the binary operator '*' (line 151)
result_mul_302 = python_operator(stypy.reporting.localization.Localization(__file__, 151, 31), '*', nvertex_299, list_300)

# Applying the binary operator '+' (line 151)
result_add_303 = python_operator(stypy.reporting.localization.Localization(__file__, 151, 14), '+', range_call_result_298, result_mul_302)

# Assigning a type to the variable 'blossombase' (line 151)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 151, 0), 'blossombase', result_add_303)

# Assigning a BinOp to a Name (line 157):

# Assigning a BinOp to a Name (line 157):
int_304 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 16), 'int')
# Getting the type of 'nvertex' (line 157)
nvertex_305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 20), 'nvertex')
# Applying the binary operator '*' (line 157)
result_mul_306 = python_operator(stypy.reporting.localization.Localization(__file__, 157, 16), '*', int_304, nvertex_305)


# Obtaining an instance of the builtin type 'list' (line 157)
list_307 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 31), 'list')
# Adding type elements to the builtin type 'list' instance (line 157)
# Adding element type (line 157)
# Getting the type of 'None' (line 157)
None_308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 32), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 157, 31), list_307, None_308)

# Applying the binary operator '*' (line 157)
result_mul_309 = python_operator(stypy.reporting.localization.Localization(__file__, 157, 15), '*', result_mul_306, list_307)

# Assigning a type to the variable 'blossomendps' (line 157)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 157, 0), 'blossomendps', result_mul_309)

# Assigning a BinOp to a Name (line 166):

# Assigning a BinOp to a Name (line 166):
int_310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 12), 'int')
# Getting the type of 'nvertex' (line 166)
nvertex_311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 16), 'nvertex')
# Applying the binary operator '*' (line 166)
result_mul_312 = python_operator(stypy.reporting.localization.Localization(__file__, 166, 12), '*', int_310, nvertex_311)


# Obtaining an instance of the builtin type 'list' (line 166)
list_313 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 27), 'list')
# Adding type elements to the builtin type 'list' instance (line 166)
# Adding element type (line 166)
int_314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 166, 28), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 166, 27), list_313, int_314)

# Applying the binary operator '*' (line 166)
result_mul_315 = python_operator(stypy.reporting.localization.Localization(__file__, 166, 11), '*', result_mul_312, list_313)

# Assigning a type to the variable 'bestedge' (line 166)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 0), 'bestedge', result_mul_315)

# Assigning a BinOp to a Name (line 172):

# Assigning a BinOp to a Name (line 172):
int_316 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 20), 'int')
# Getting the type of 'nvertex' (line 172)
nvertex_317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 24), 'nvertex')
# Applying the binary operator '*' (line 172)
result_mul_318 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 20), '*', int_316, nvertex_317)


# Obtaining an instance of the builtin type 'list' (line 172)
list_319 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 35), 'list')
# Adding type elements to the builtin type 'list' instance (line 172)
# Adding element type (line 172)
# Getting the type of 'None' (line 172)
None_320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 36), 'None')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 172, 35), list_319, None_320)

# Applying the binary operator '*' (line 172)
result_mul_321 = python_operator(stypy.reporting.localization.Localization(__file__, 172, 19), '*', result_mul_318, list_319)

# Assigning a type to the variable 'blossombestedges' (line 172)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 172, 0), 'blossombestedges', result_mul_321)

# Assigning a Call to a Name (line 175):

# Assigning a Call to a Name (line 175):

# Call to range(...): (line 175)
# Processing the call arguments (line 175)
# Getting the type of 'nvertex' (line 175)
nvertex_323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 23), 'nvertex', False)
int_324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 175, 32), 'int')
# Getting the type of 'nvertex' (line 175)
nvertex_325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 36), 'nvertex', False)
# Applying the binary operator '*' (line 175)
result_mul_326 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 32), '*', int_324, nvertex_325)

# Processing the call keyword arguments (line 175)
kwargs_327 = {}
# Getting the type of 'range' (line 175)
range_322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 17), 'range', False)
# Calling range(args, kwargs) (line 175)
range_call_result_328 = invoke(stypy.reporting.localization.Localization(__file__, 175, 17), range_322, *[nvertex_323, result_mul_326], **kwargs_327)

# Assigning a type to the variable 'unusedblossoms' (line 175)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 0), 'unusedblossoms', range_call_result_328)

# Assigning a BinOp to a Name (line 184):

# Assigning a BinOp to a Name (line 184):
# Getting the type of 'nvertex' (line 184)
nvertex_329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 10), 'nvertex')

# Obtaining an instance of the builtin type 'list' (line 184)
list_330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 184)
# Adding element type (line 184)
# Getting the type of 'maxweight' (line 184)
maxweight_331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 21), 'maxweight')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 20), list_330, maxweight_331)

# Applying the binary operator '*' (line 184)
result_mul_332 = python_operator(stypy.reporting.localization.Localization(__file__, 184, 10), '*', nvertex_329, list_330)

# Getting the type of 'nvertex' (line 184)
nvertex_333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 34), 'nvertex')

# Obtaining an instance of the builtin type 'list' (line 184)
list_334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 44), 'list')
# Adding type elements to the builtin type 'list' instance (line 184)
# Adding element type (line 184)
int_335 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 184, 45), 'int')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 184, 44), list_334, int_335)

# Applying the binary operator '*' (line 184)
result_mul_336 = python_operator(stypy.reporting.localization.Localization(__file__, 184, 34), '*', nvertex_333, list_334)

# Applying the binary operator '+' (line 184)
result_add_337 = python_operator(stypy.reporting.localization.Localization(__file__, 184, 10), '+', result_mul_332, result_mul_336)

# Assigning a type to the variable 'dualvar' (line 184)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 184, 0), 'dualvar', result_add_337)

# Assigning a BinOp to a Name (line 189):

# Assigning a BinOp to a Name (line 189):
# Getting the type of 'nedge' (line 189)
nedge_338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 12), 'nedge')

# Obtaining an instance of the builtin type 'list' (line 189)
list_339 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 189, 20), 'list')
# Adding type elements to the builtin type 'list' instance (line 189)
# Adding element type (line 189)
# Getting the type of 'False' (line 189)
False_340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 21), 'False')
add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 189, 20), list_339, False_340)

# Applying the binary operator '*' (line 189)
result_mul_341 = python_operator(stypy.reporting.localization.Localization(__file__, 189, 12), '*', nedge_338, list_339)

# Assigning a type to the variable 'allowedge' (line 189)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 0), 'allowedge', result_mul_341)

# Assigning a List to a Name (line 192):

# Assigning a List to a Name (line 192):

# Obtaining an instance of the builtin type 'list' (line 192)
list_342 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 192, 8), 'list')
# Adding type elements to the builtin type 'list' instance (line 192)

# Assigning a type to the variable 'queue' (line 192)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 192, 0), 'queue', list_342)

@norecursion
def slack(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'slack'
    module_type_store = module_type_store.open_function_context('slack', 196, 0, False)
    
    # Passed parameters checking function
    slack.stypy_localization = localization
    slack.stypy_type_of_self = None
    slack.stypy_type_store = module_type_store
    slack.stypy_function_name = 'slack'
    slack.stypy_param_names_list = ['k']
    slack.stypy_varargs_param_name = None
    slack.stypy_kwargs_param_name = None
    slack.stypy_call_defaults = defaults
    slack.stypy_call_varargs = varargs
    slack.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'slack', ['k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'slack', localization, ['k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'slack(...)' code ##################

    
    # Assigning a Subscript to a Tuple (line 197):
    
    # Assigning a Subscript to a Name (line 197):
    
    # Obtaining the type of the subscript
    int_343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 197)
    k_344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 23), 'k')
    # Getting the type of 'edges' (line 197)
    edges_345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 197)
    getitem___346 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 17), edges_345, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 197)
    subscript_call_result_347 = invoke(stypy.reporting.localization.Localization(__file__, 197, 17), getitem___346, k_344)
    
    # Obtaining the member '__getitem__' of a type (line 197)
    getitem___348 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 4), subscript_call_result_347, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 197)
    subscript_call_result_349 = invoke(stypy.reporting.localization.Localization(__file__, 197, 4), getitem___348, int_343)
    
    # Assigning a type to the variable 'tuple_var_assignment_4' (line 197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'tuple_var_assignment_4', subscript_call_result_349)
    
    # Assigning a Subscript to a Name (line 197):
    
    # Obtaining the type of the subscript
    int_350 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 197)
    k_351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 23), 'k')
    # Getting the type of 'edges' (line 197)
    edges_352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 197)
    getitem___353 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 17), edges_352, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 197)
    subscript_call_result_354 = invoke(stypy.reporting.localization.Localization(__file__, 197, 17), getitem___353, k_351)
    
    # Obtaining the member '__getitem__' of a type (line 197)
    getitem___355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 4), subscript_call_result_354, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 197)
    subscript_call_result_356 = invoke(stypy.reporting.localization.Localization(__file__, 197, 4), getitem___355, int_350)
    
    # Assigning a type to the variable 'tuple_var_assignment_5' (line 197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'tuple_var_assignment_5', subscript_call_result_356)
    
    # Assigning a Subscript to a Name (line 197):
    
    # Obtaining the type of the subscript
    int_357 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 197, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 197)
    k_358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 23), 'k')
    # Getting the type of 'edges' (line 197)
    edges_359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 197)
    getitem___360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 17), edges_359, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 197)
    subscript_call_result_361 = invoke(stypy.reporting.localization.Localization(__file__, 197, 17), getitem___360, k_358)
    
    # Obtaining the member '__getitem__' of a type (line 197)
    getitem___362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 197, 4), subscript_call_result_361, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 197)
    subscript_call_result_363 = invoke(stypy.reporting.localization.Localization(__file__, 197, 4), getitem___362, int_357)
    
    # Assigning a type to the variable 'tuple_var_assignment_6' (line 197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'tuple_var_assignment_6', subscript_call_result_363)
    
    # Assigning a Name to a Name (line 197):
    # Getting the type of 'tuple_var_assignment_4' (line 197)
    tuple_var_assignment_4_364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'tuple_var_assignment_4')
    # Assigning a type to the variable 'i' (line 197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 5), 'i', tuple_var_assignment_4_364)
    
    # Assigning a Name to a Name (line 197):
    # Getting the type of 'tuple_var_assignment_5' (line 197)
    tuple_var_assignment_5_365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'tuple_var_assignment_5')
    # Assigning a type to the variable 'j' (line 197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 8), 'j', tuple_var_assignment_5_365)
    
    # Assigning a Name to a Name (line 197):
    # Getting the type of 'tuple_var_assignment_6' (line 197)
    tuple_var_assignment_6_366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 197, 4), 'tuple_var_assignment_6')
    # Assigning a type to the variable 'wt' (line 197)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 197, 11), 'wt', tuple_var_assignment_6_366)
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 198)
    i_367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 19), 'i')
    # Getting the type of 'dualvar' (line 198)
    dualvar_368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 11), 'dualvar')
    # Obtaining the member '__getitem__' of a type (line 198)
    getitem___369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 11), dualvar_368, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 198)
    subscript_call_result_370 = invoke(stypy.reporting.localization.Localization(__file__, 198, 11), getitem___369, i_367)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'j' (line 198)
    j_371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 32), 'j')
    # Getting the type of 'dualvar' (line 198)
    dualvar_372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 24), 'dualvar')
    # Obtaining the member '__getitem__' of a type (line 198)
    getitem___373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 198, 24), dualvar_372, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 198)
    subscript_call_result_374 = invoke(stypy.reporting.localization.Localization(__file__, 198, 24), getitem___373, j_371)
    
    # Applying the binary operator '+' (line 198)
    result_add_375 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 11), '+', subscript_call_result_370, subscript_call_result_374)
    
    int_376 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 198, 37), 'int')
    # Getting the type of 'wt' (line 198)
    wt_377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 198, 41), 'wt')
    # Applying the binary operator '*' (line 198)
    result_mul_378 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 37), '*', int_376, wt_377)
    
    # Applying the binary operator '-' (line 198)
    result_sub_379 = python_operator(stypy.reporting.localization.Localization(__file__, 198, 35), '-', result_add_375, result_mul_378)
    
    # Assigning a type to the variable 'stypy_return_type' (line 198)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 198, 4), 'stypy_return_type', result_sub_379)
    
    # ################# End of 'slack(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'slack' in the type store
    # Getting the type of 'stypy_return_type' (line 196)
    stypy_return_type_380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 196, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_380)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'slack'
    return stypy_return_type_380

# Assigning a type to the variable 'slack' (line 196)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 196, 0), 'slack', slack)

@norecursion
def blossomLeaves(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'blossomLeaves'
    module_type_store = module_type_store.open_function_context('blossomLeaves', 202, 0, False)
    
    # Passed parameters checking function
    blossomLeaves.stypy_localization = localization
    blossomLeaves.stypy_type_of_self = None
    blossomLeaves.stypy_type_store = module_type_store
    blossomLeaves.stypy_function_name = 'blossomLeaves'
    blossomLeaves.stypy_param_names_list = ['b']
    blossomLeaves.stypy_varargs_param_name = None
    blossomLeaves.stypy_kwargs_param_name = None
    blossomLeaves.stypy_call_defaults = defaults
    blossomLeaves.stypy_call_varargs = varargs
    blossomLeaves.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'blossomLeaves', ['b'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'blossomLeaves', localization, ['b'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'blossomLeaves(...)' code ##################

    
    # Getting the type of 'b' (line 203)
    b_381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 7), 'b')
    # Getting the type of 'nvertex' (line 203)
    nvertex_382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 203, 11), 'nvertex')
    # Applying the binary operator '<' (line 203)
    result_lt_383 = python_operator(stypy.reporting.localization.Localization(__file__, 203, 7), '<', b_381, nvertex_382)
    
    # Testing if the type of an if condition is none (line 203)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 203, 4), result_lt_383):
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 206)
        b_387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 31), 'b')
        # Getting the type of 'blossomchilds' (line 206)
        blossomchilds_388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 17), 'blossomchilds')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 17), blossomchilds_388, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_390 = invoke(stypy.reporting.localization.Localization(__file__, 206, 17), getitem___389, b_387)
        
        # Testing if the for loop is going to be iterated (line 206)
        # Testing the type of a for loop iterable (line 206)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 206, 8), subscript_call_result_390)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 206, 8), subscript_call_result_390):
            # Getting the type of the for loop variable (line 206)
            for_loop_var_391 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 206, 8), subscript_call_result_390)
            # Assigning a type to the variable 't' (line 206)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 't', for_loop_var_391)
            # SSA begins for a for statement (line 206)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Getting the type of 't' (line 207)
            t_392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 15), 't')
            # Getting the type of 'nvertex' (line 207)
            nvertex_393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 19), 'nvertex')
            # Applying the binary operator '<' (line 207)
            result_lt_394 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 15), '<', t_392, nvertex_393)
            
            # Testing if the type of an if condition is none (line 207)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 207, 12), result_lt_394):
                
                
                # Call to blossomLeaves(...): (line 210)
                # Processing the call arguments (line 210)
                # Getting the type of 't' (line 210)
                t_399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 39), 't', False)
                # Processing the call keyword arguments (line 210)
                kwargs_400 = {}
                # Getting the type of 'blossomLeaves' (line 210)
                blossomLeaves_398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 25), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 210)
                blossomLeaves_call_result_401 = invoke(stypy.reporting.localization.Localization(__file__, 210, 25), blossomLeaves_398, *[t_399], **kwargs_400)
                
                # Testing if the for loop is going to be iterated (line 210)
                # Testing the type of a for loop iterable (line 210)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401):
                    # Getting the type of the for loop variable (line 210)
                    for_loop_var_402 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)
                    # Assigning a type to the variable 'v' (line 210)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'v', for_loop_var_402)
                    # SSA begins for a for statement (line 210)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    # Creating a generator
                    # Getting the type of 'v' (line 211)
                    v_403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 26), 'v')
                    GeneratorType_404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 20), 'GeneratorType')
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 20), GeneratorType_404, v_403)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 20), 'stypy_return_type', GeneratorType_404)
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
            else:
                
                # Testing the type of an if condition (line 207)
                if_condition_395 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 207, 12), result_lt_394)
                # Assigning a type to the variable 'if_condition_395' (line 207)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 207, 12), 'if_condition_395', if_condition_395)
                # SSA begins for if statement (line 207)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # Creating a generator
                # Getting the type of 't' (line 208)
                t_396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 22), 't')
                GeneratorType_397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 16), 'GeneratorType')
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 16), GeneratorType_397, t_396)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 16), 'stypy_return_type', GeneratorType_397)
                # SSA branch for the else part of an if statement (line 207)
                module_type_store.open_ssa_branch('else')
                
                
                # Call to blossomLeaves(...): (line 210)
                # Processing the call arguments (line 210)
                # Getting the type of 't' (line 210)
                t_399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 39), 't', False)
                # Processing the call keyword arguments (line 210)
                kwargs_400 = {}
                # Getting the type of 'blossomLeaves' (line 210)
                blossomLeaves_398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 25), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 210)
                blossomLeaves_call_result_401 = invoke(stypy.reporting.localization.Localization(__file__, 210, 25), blossomLeaves_398, *[t_399], **kwargs_400)
                
                # Testing if the for loop is going to be iterated (line 210)
                # Testing the type of a for loop iterable (line 210)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401):
                    # Getting the type of the for loop variable (line 210)
                    for_loop_var_402 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)
                    # Assigning a type to the variable 'v' (line 210)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'v', for_loop_var_402)
                    # SSA begins for a for statement (line 210)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    # Creating a generator
                    # Getting the type of 'v' (line 211)
                    v_403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 26), 'v')
                    GeneratorType_404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 20), 'GeneratorType')
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 20), GeneratorType_404, v_403)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 20), 'stypy_return_type', GeneratorType_404)
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                # SSA join for if statement (line 207)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
    else:
        
        # Testing the type of an if condition (line 203)
        if_condition_384 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 203, 4), result_lt_383)
        # Assigning a type to the variable 'if_condition_384' (line 203)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 203, 4), 'if_condition_384', if_condition_384)
        # SSA begins for if statement (line 203)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Creating a generator
        # Getting the type of 'b' (line 204)
        b_385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 14), 'b')
        GeneratorType_386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 204, 8), 'GeneratorType')
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 204, 8), GeneratorType_386, b_385)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 204, 8), 'stypy_return_type', GeneratorType_386)
        # SSA branch for the else part of an if statement (line 203)
        module_type_store.open_ssa_branch('else')
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 206)
        b_387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 31), 'b')
        # Getting the type of 'blossomchilds' (line 206)
        blossomchilds_388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 206, 17), 'blossomchilds')
        # Obtaining the member '__getitem__' of a type (line 206)
        getitem___389 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 206, 17), blossomchilds_388, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 206)
        subscript_call_result_390 = invoke(stypy.reporting.localization.Localization(__file__, 206, 17), getitem___389, b_387)
        
        # Testing if the for loop is going to be iterated (line 206)
        # Testing the type of a for loop iterable (line 206)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 206, 8), subscript_call_result_390)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 206, 8), subscript_call_result_390):
            # Getting the type of the for loop variable (line 206)
            for_loop_var_391 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 206, 8), subscript_call_result_390)
            # Assigning a type to the variable 't' (line 206)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 206, 8), 't', for_loop_var_391)
            # SSA begins for a for statement (line 206)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Getting the type of 't' (line 207)
            t_392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 15), 't')
            # Getting the type of 'nvertex' (line 207)
            nvertex_393 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 19), 'nvertex')
            # Applying the binary operator '<' (line 207)
            result_lt_394 = python_operator(stypy.reporting.localization.Localization(__file__, 207, 15), '<', t_392, nvertex_393)
            
            # Testing if the type of an if condition is none (line 207)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 207, 12), result_lt_394):
                
                
                # Call to blossomLeaves(...): (line 210)
                # Processing the call arguments (line 210)
                # Getting the type of 't' (line 210)
                t_399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 39), 't', False)
                # Processing the call keyword arguments (line 210)
                kwargs_400 = {}
                # Getting the type of 'blossomLeaves' (line 210)
                blossomLeaves_398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 25), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 210)
                blossomLeaves_call_result_401 = invoke(stypy.reporting.localization.Localization(__file__, 210, 25), blossomLeaves_398, *[t_399], **kwargs_400)
                
                # Testing if the for loop is going to be iterated (line 210)
                # Testing the type of a for loop iterable (line 210)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401):
                    # Getting the type of the for loop variable (line 210)
                    for_loop_var_402 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)
                    # Assigning a type to the variable 'v' (line 210)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'v', for_loop_var_402)
                    # SSA begins for a for statement (line 210)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    # Creating a generator
                    # Getting the type of 'v' (line 211)
                    v_403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 26), 'v')
                    GeneratorType_404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 20), 'GeneratorType')
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 20), GeneratorType_404, v_403)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 20), 'stypy_return_type', GeneratorType_404)
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
            else:
                
                # Testing the type of an if condition (line 207)
                if_condition_395 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 207, 12), result_lt_394)
                # Assigning a type to the variable 'if_condition_395' (line 207)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 207, 12), 'if_condition_395', if_condition_395)
                # SSA begins for if statement (line 207)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # Creating a generator
                # Getting the type of 't' (line 208)
                t_396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 208, 22), 't')
                GeneratorType_397 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 208, 16), 'GeneratorType')
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 208, 16), GeneratorType_397, t_396)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 208, 16), 'stypy_return_type', GeneratorType_397)
                # SSA branch for the else part of an if statement (line 207)
                module_type_store.open_ssa_branch('else')
                
                
                # Call to blossomLeaves(...): (line 210)
                # Processing the call arguments (line 210)
                # Getting the type of 't' (line 210)
                t_399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 39), 't', False)
                # Processing the call keyword arguments (line 210)
                kwargs_400 = {}
                # Getting the type of 'blossomLeaves' (line 210)
                blossomLeaves_398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 25), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 210)
                blossomLeaves_call_result_401 = invoke(stypy.reporting.localization.Localization(__file__, 210, 25), blossomLeaves_398, *[t_399], **kwargs_400)
                
                # Testing if the for loop is going to be iterated (line 210)
                # Testing the type of a for loop iterable (line 210)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401):
                    # Getting the type of the for loop variable (line 210)
                    for_loop_var_402 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 210, 16), blossomLeaves_call_result_401)
                    # Assigning a type to the variable 'v' (line 210)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 16), 'v', for_loop_var_402)
                    # SSA begins for a for statement (line 210)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    # Creating a generator
                    # Getting the type of 'v' (line 211)
                    v_403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 211, 26), 'v')
                    GeneratorType_404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 211, 20), 'GeneratorType')
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 211, 20), GeneratorType_404, v_403)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 211, 20), 'stypy_return_type', GeneratorType_404)
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                # SSA join for if statement (line 207)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # SSA join for if statement (line 203)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # ################# End of 'blossomLeaves(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'blossomLeaves' in the type store
    # Getting the type of 'stypy_return_type' (line 202)
    stypy_return_type_405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 202, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_405)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'blossomLeaves'
    return stypy_return_type_405

# Assigning a type to the variable 'blossomLeaves' (line 202)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 202, 0), 'blossomLeaves', blossomLeaves)

@norecursion
def assignLabel(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'assignLabel'
    module_type_store = module_type_store.open_function_context('assignLabel', 217, 0, False)
    
    # Passed parameters checking function
    assignLabel.stypy_localization = localization
    assignLabel.stypy_type_of_self = None
    assignLabel.stypy_type_store = module_type_store
    assignLabel.stypy_function_name = 'assignLabel'
    assignLabel.stypy_param_names_list = ['w', 't', 'p']
    assignLabel.stypy_varargs_param_name = None
    assignLabel.stypy_kwargs_param_name = None
    assignLabel.stypy_call_defaults = defaults
    assignLabel.stypy_call_varargs = varargs
    assignLabel.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'assignLabel', ['w', 't', 'p'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'assignLabel', localization, ['w', 't', 'p'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'assignLabel(...)' code ##################

    # Getting the type of 'DEBUG' (line 218)
    DEBUG_406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 218)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 218, 4), DEBUG_406):
        pass
    else:
        
        # Testing the type of an if condition (line 218)
        if_condition_407 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 218, 4), DEBUG_406)
        # Assigning a type to the variable 'if_condition_407' (line 218)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 218, 4), 'if_condition_407', if_condition_407)
        # SSA begins for if statement (line 218)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 218)
        # Processing the call arguments (line 218)
        str_409 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 20), 'str', 'assignLabel(%d,%d,%d)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 218)
        tuple_410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 218, 47), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 218)
        # Adding element type (line 218)
        # Getting the type of 'w' (line 218)
        w_411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 47), 'w', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 218, 47), tuple_410, w_411)
        # Adding element type (line 218)
        # Getting the type of 't' (line 218)
        t_412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 50), 't', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 218, 47), tuple_410, t_412)
        # Adding element type (line 218)
        # Getting the type of 'p' (line 218)
        p_413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 53), 'p', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 218, 47), tuple_410, p_413)
        
        # Applying the binary operator '%' (line 218)
        result_mod_414 = python_operator(stypy.reporting.localization.Localization(__file__, 218, 20), '%', str_409, tuple_410)
        
        # Processing the call keyword arguments (line 218)
        kwargs_415 = {}
        # Getting the type of 'DEBUG' (line 218)
        DEBUG_408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 218, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 218)
        DEBUG_call_result_416 = invoke(stypy.reporting.localization.Localization(__file__, 218, 14), DEBUG_408, *[result_mod_414], **kwargs_415)
        
        # SSA join for if statement (line 218)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a Subscript to a Name (line 219):
    
    # Assigning a Subscript to a Name (line 219):
    
    # Obtaining the type of the subscript
    # Getting the type of 'w' (line 219)
    w_417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 18), 'w')
    # Getting the type of 'inblossom' (line 219)
    inblossom_418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 219, 8), 'inblossom')
    # Obtaining the member '__getitem__' of a type (line 219)
    getitem___419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 219, 8), inblossom_418, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 219)
    subscript_call_result_420 = invoke(stypy.reporting.localization.Localization(__file__, 219, 8), getitem___419, w_417)
    
    # Assigning a type to the variable 'b' (line 219)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 219, 4), 'b', subscript_call_result_420)
    # Evaluating assert statement condition
    
    # Evaluating a boolean operation
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'w' (line 220)
    w_421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 17), 'w')
    # Getting the type of 'label' (line 220)
    label_422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 11), 'label')
    # Obtaining the member '__getitem__' of a type (line 220)
    getitem___423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 11), label_422, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 220)
    subscript_call_result_424 = invoke(stypy.reporting.localization.Localization(__file__, 220, 11), getitem___423, w_421)
    
    int_425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 23), 'int')
    # Applying the binary operator '==' (line 220)
    result_eq_426 = python_operator(stypy.reporting.localization.Localization(__file__, 220, 11), '==', subscript_call_result_424, int_425)
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 220)
    b_427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 35), 'b')
    # Getting the type of 'label' (line 220)
    label_428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 220, 29), 'label')
    # Obtaining the member '__getitem__' of a type (line 220)
    getitem___429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 220, 29), label_428, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 220)
    subscript_call_result_430 = invoke(stypy.reporting.localization.Localization(__file__, 220, 29), getitem___429, b_427)
    
    int_431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 220, 41), 'int')
    # Applying the binary operator '==' (line 220)
    result_eq_432 = python_operator(stypy.reporting.localization.Localization(__file__, 220, 29), '==', subscript_call_result_430, int_431)
    
    # Applying the binary operator 'and' (line 220)
    result_and_keyword_433 = python_operator(stypy.reporting.localization.Localization(__file__, 220, 11), 'and', result_eq_426, result_eq_432)
    
    
    # Multiple assignment of 2 elements.
    
    # Assigning a Name to a Subscript (line 221):
    # Getting the type of 't' (line 221)
    t_434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 26), 't')
    # Getting the type of 'label' (line 221)
    label_435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 15), 'label')
    # Getting the type of 'b' (line 221)
    b_436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 21), 'b')
    # Storing an element on a container (line 221)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 15), label_435, (b_436, t_434))
    
    # Assigning a Subscript to a Subscript (line 221):
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 221)
    b_437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 21), 'b')
    # Getting the type of 'label' (line 221)
    label_438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 15), 'label')
    # Obtaining the member '__getitem__' of a type (line 221)
    getitem___439 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 221, 15), label_438, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 221)
    subscript_call_result_440 = invoke(stypy.reporting.localization.Localization(__file__, 221, 15), getitem___439, b_437)
    
    # Getting the type of 'label' (line 221)
    label_441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 4), 'label')
    # Getting the type of 'w' (line 221)
    w_442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 221, 10), 'w')
    # Storing an element on a container (line 221)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 221, 4), label_441, (w_442, subscript_call_result_440))
    
    # Multiple assignment of 2 elements.
    
    # Assigning a Name to a Subscript (line 222):
    # Getting the type of 'p' (line 222)
    p_443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 32), 'p')
    # Getting the type of 'labelend' (line 222)
    labelend_444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 18), 'labelend')
    # Getting the type of 'b' (line 222)
    b_445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 27), 'b')
    # Storing an element on a container (line 222)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 18), labelend_444, (b_445, p_443))
    
    # Assigning a Subscript to a Subscript (line 222):
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 222)
    b_446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 27), 'b')
    # Getting the type of 'labelend' (line 222)
    labelend_447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 18), 'labelend')
    # Obtaining the member '__getitem__' of a type (line 222)
    getitem___448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 18), labelend_447, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 222)
    subscript_call_result_449 = invoke(stypy.reporting.localization.Localization(__file__, 222, 18), getitem___448, b_446)
    
    # Getting the type of 'labelend' (line 222)
    labelend_450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 4), 'labelend')
    # Getting the type of 'w' (line 222)
    w_451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 13), 'w')
    # Storing an element on a container (line 222)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 222, 4), labelend_450, (w_451, subscript_call_result_449))
    
    # Multiple assignment of 2 elements.
    
    # Assigning a Num to a Subscript (line 223):
    int_452 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 223, 32), 'int')
    # Getting the type of 'bestedge' (line 223)
    bestedge_453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 18), 'bestedge')
    # Getting the type of 'b' (line 223)
    b_454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 27), 'b')
    # Storing an element on a container (line 223)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 223, 18), bestedge_453, (b_454, int_452))
    
    # Assigning a Subscript to a Subscript (line 223):
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 223)
    b_455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 27), 'b')
    # Getting the type of 'bestedge' (line 223)
    bestedge_456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 18), 'bestedge')
    # Obtaining the member '__getitem__' of a type (line 223)
    getitem___457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 18), bestedge_456, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 223)
    subscript_call_result_458 = invoke(stypy.reporting.localization.Localization(__file__, 223, 18), getitem___457, b_455)
    
    # Getting the type of 'bestedge' (line 223)
    bestedge_459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 4), 'bestedge')
    # Getting the type of 'w' (line 223)
    w_460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 13), 'w')
    # Storing an element on a container (line 223)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 223, 4), bestedge_459, (w_460, subscript_call_result_458))
    
    # Getting the type of 't' (line 224)
    t_461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 224, 7), 't')
    int_462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 224, 12), 'int')
    # Applying the binary operator '==' (line 224)
    result_eq_463 = python_operator(stypy.reporting.localization.Localization(__file__, 224, 7), '==', t_461, int_462)
    
    # Testing if the type of an if condition is none (line 224)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 224, 4), result_eq_463):
        
        # Getting the type of 't' (line 228)
        t_490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 9), 't')
        int_491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 14), 'int')
        # Applying the binary operator '==' (line 228)
        result_eq_492 = python_operator(stypy.reporting.localization.Localization(__file__, 228, 9), '==', t_490, int_491)
        
        # Testing if the type of an if condition is none (line 228)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 228, 9), result_eq_492):
            pass
        else:
            
            # Testing the type of an if condition (line 228)
            if_condition_493 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 228, 9), result_eq_492)
            # Assigning a type to the variable 'if_condition_493' (line 228)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 9), 'if_condition_493', if_condition_493)
            # SSA begins for if statement (line 228)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 232):
            
            # Assigning a Subscript to a Name (line 232):
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 232)
            b_494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 27), 'b')
            # Getting the type of 'blossombase' (line 232)
            blossombase_495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 15), 'blossombase')
            # Obtaining the member '__getitem__' of a type (line 232)
            getitem___496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 15), blossombase_495, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 232)
            subscript_call_result_497 = invoke(stypy.reporting.localization.Localization(__file__, 232, 15), getitem___496, b_494)
            
            # Assigning a type to the variable 'base' (line 232)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'base', subscript_call_result_497)
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'base' (line 233)
            base_498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 20), 'base')
            # Getting the type of 'mate' (line 233)
            mate_499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 15), 'mate')
            # Obtaining the member '__getitem__' of a type (line 233)
            getitem___500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 15), mate_499, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 233)
            subscript_call_result_501 = invoke(stypy.reporting.localization.Localization(__file__, 233, 15), getitem___500, base_498)
            
            int_502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 29), 'int')
            # Applying the binary operator '>=' (line 233)
            result_ge_503 = python_operator(stypy.reporting.localization.Localization(__file__, 233, 15), '>=', subscript_call_result_501, int_502)
            
            
            # Call to assignLabel(...): (line 234)
            # Processing the call arguments (line 234)
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'base' (line 234)
            base_505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 34), 'base', False)
            # Getting the type of 'mate' (line 234)
            mate_506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 29), 'mate', False)
            # Obtaining the member '__getitem__' of a type (line 234)
            getitem___507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 29), mate_506, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 234)
            subscript_call_result_508 = invoke(stypy.reporting.localization.Localization(__file__, 234, 29), getitem___507, base_505)
            
            # Getting the type of 'endpoint' (line 234)
            endpoint_509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 20), 'endpoint', False)
            # Obtaining the member '__getitem__' of a type (line 234)
            getitem___510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 20), endpoint_509, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 234)
            subscript_call_result_511 = invoke(stypy.reporting.localization.Localization(__file__, 234, 20), getitem___510, subscript_call_result_508)
            
            int_512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 42), 'int')
            
            # Obtaining the type of the subscript
            # Getting the type of 'base' (line 234)
            base_513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 50), 'base', False)
            # Getting the type of 'mate' (line 234)
            mate_514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 45), 'mate', False)
            # Obtaining the member '__getitem__' of a type (line 234)
            getitem___515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 45), mate_514, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 234)
            subscript_call_result_516 = invoke(stypy.reporting.localization.Localization(__file__, 234, 45), getitem___515, base_513)
            
            int_517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 58), 'int')
            # Applying the binary operator '^' (line 234)
            result_xor_518 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 45), '^', subscript_call_result_516, int_517)
            
            # Processing the call keyword arguments (line 234)
            kwargs_519 = {}
            # Getting the type of 'assignLabel' (line 234)
            assignLabel_504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'assignLabel', False)
            # Calling assignLabel(args, kwargs) (line 234)
            assignLabel_call_result_520 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), assignLabel_504, *[subscript_call_result_511, int_512, result_xor_518], **kwargs_519)
            
            # SSA join for if statement (line 228)
            module_type_store = module_type_store.join_ssa_context()
            

    else:
        
        # Testing the type of an if condition (line 224)
        if_condition_464 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 224, 4), result_eq_463)
        # Assigning a type to the variable 'if_condition_464' (line 224)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 224, 4), 'if_condition_464', if_condition_464)
        # SSA begins for if statement (line 224)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to extend(...): (line 226)
        # Processing the call arguments (line 226)
        
        # Call to blossomLeaves(...): (line 226)
        # Processing the call arguments (line 226)
        # Getting the type of 'b' (line 226)
        b_468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 35), 'b', False)
        # Processing the call keyword arguments (line 226)
        kwargs_469 = {}
        # Getting the type of 'blossomLeaves' (line 226)
        blossomLeaves_467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 21), 'blossomLeaves', False)
        # Calling blossomLeaves(args, kwargs) (line 226)
        blossomLeaves_call_result_470 = invoke(stypy.reporting.localization.Localization(__file__, 226, 21), blossomLeaves_467, *[b_468], **kwargs_469)
        
        # Processing the call keyword arguments (line 226)
        kwargs_471 = {}
        # Getting the type of 'queue' (line 226)
        queue_465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 226, 8), 'queue', False)
        # Obtaining the member 'extend' of a type (line 226)
        extend_466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 226, 8), queue_465, 'extend')
        # Calling extend(args, kwargs) (line 226)
        extend_call_result_472 = invoke(stypy.reporting.localization.Localization(__file__, 226, 8), extend_466, *[blossomLeaves_call_result_470], **kwargs_471)
        
        # Getting the type of 'DEBUG' (line 227)
        DEBUG_473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 11), 'DEBUG')
        # Testing if the type of an if condition is none (line 227)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 227, 8), DEBUG_473):
            pass
        else:
            
            # Testing the type of an if condition (line 227)
            if_condition_474 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 227, 8), DEBUG_473)
            # Assigning a type to the variable 'if_condition_474' (line 227)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 227, 8), 'if_condition_474', if_condition_474)
            # SSA begins for if statement (line 227)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to DEBUG(...): (line 227)
            # Processing the call arguments (line 227)
            str_476 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 227, 24), 'str', 'PUSH ')
            
            # Call to str(...): (line 227)
            # Processing the call arguments (line 227)
            
            # Call to list(...): (line 227)
            # Processing the call arguments (line 227)
            
            # Call to blossomLeaves(...): (line 227)
            # Processing the call arguments (line 227)
            # Getting the type of 'b' (line 227)
            b_480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 57), 'b', False)
            # Processing the call keyword arguments (line 227)
            kwargs_481 = {}
            # Getting the type of 'blossomLeaves' (line 227)
            blossomLeaves_479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 43), 'blossomLeaves', False)
            # Calling blossomLeaves(args, kwargs) (line 227)
            blossomLeaves_call_result_482 = invoke(stypy.reporting.localization.Localization(__file__, 227, 43), blossomLeaves_479, *[b_480], **kwargs_481)
            
            # Processing the call keyword arguments (line 227)
            kwargs_483 = {}
            # Getting the type of 'list' (line 227)
            list_478 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 38), 'list', False)
            # Calling list(args, kwargs) (line 227)
            list_call_result_484 = invoke(stypy.reporting.localization.Localization(__file__, 227, 38), list_478, *[blossomLeaves_call_result_482], **kwargs_483)
            
            # Processing the call keyword arguments (line 227)
            kwargs_485 = {}
            # Getting the type of 'str' (line 227)
            str_477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 34), 'str', False)
            # Calling str(args, kwargs) (line 227)
            str_call_result_486 = invoke(stypy.reporting.localization.Localization(__file__, 227, 34), str_477, *[list_call_result_484], **kwargs_485)
            
            # Applying the binary operator '+' (line 227)
            result_add_487 = python_operator(stypy.reporting.localization.Localization(__file__, 227, 24), '+', str_476, str_call_result_486)
            
            # Processing the call keyword arguments (line 227)
            kwargs_488 = {}
            # Getting the type of 'DEBUG' (line 227)
            DEBUG_475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 227, 18), 'DEBUG', False)
            # Calling DEBUG(args, kwargs) (line 227)
            DEBUG_call_result_489 = invoke(stypy.reporting.localization.Localization(__file__, 227, 18), DEBUG_475, *[result_add_487], **kwargs_488)
            
            # SSA join for if statement (line 227)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA branch for the else part of an if statement (line 224)
        module_type_store.open_ssa_branch('else')
        
        # Getting the type of 't' (line 228)
        t_490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 9), 't')
        int_491 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 14), 'int')
        # Applying the binary operator '==' (line 228)
        result_eq_492 = python_operator(stypy.reporting.localization.Localization(__file__, 228, 9), '==', t_490, int_491)
        
        # Testing if the type of an if condition is none (line 228)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 228, 9), result_eq_492):
            pass
        else:
            
            # Testing the type of an if condition (line 228)
            if_condition_493 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 228, 9), result_eq_492)
            # Assigning a type to the variable 'if_condition_493' (line 228)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 228, 9), 'if_condition_493', if_condition_493)
            # SSA begins for if statement (line 228)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 232):
            
            # Assigning a Subscript to a Name (line 232):
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 232)
            b_494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 27), 'b')
            # Getting the type of 'blossombase' (line 232)
            blossombase_495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 15), 'blossombase')
            # Obtaining the member '__getitem__' of a type (line 232)
            getitem___496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 15), blossombase_495, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 232)
            subscript_call_result_497 = invoke(stypy.reporting.localization.Localization(__file__, 232, 15), getitem___496, b_494)
            
            # Assigning a type to the variable 'base' (line 232)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'base', subscript_call_result_497)
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'base' (line 233)
            base_498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 20), 'base')
            # Getting the type of 'mate' (line 233)
            mate_499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 233, 15), 'mate')
            # Obtaining the member '__getitem__' of a type (line 233)
            getitem___500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 233, 15), mate_499, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 233)
            subscript_call_result_501 = invoke(stypy.reporting.localization.Localization(__file__, 233, 15), getitem___500, base_498)
            
            int_502 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 233, 29), 'int')
            # Applying the binary operator '>=' (line 233)
            result_ge_503 = python_operator(stypy.reporting.localization.Localization(__file__, 233, 15), '>=', subscript_call_result_501, int_502)
            
            
            # Call to assignLabel(...): (line 234)
            # Processing the call arguments (line 234)
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'base' (line 234)
            base_505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 34), 'base', False)
            # Getting the type of 'mate' (line 234)
            mate_506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 29), 'mate', False)
            # Obtaining the member '__getitem__' of a type (line 234)
            getitem___507 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 29), mate_506, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 234)
            subscript_call_result_508 = invoke(stypy.reporting.localization.Localization(__file__, 234, 29), getitem___507, base_505)
            
            # Getting the type of 'endpoint' (line 234)
            endpoint_509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 20), 'endpoint', False)
            # Obtaining the member '__getitem__' of a type (line 234)
            getitem___510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 20), endpoint_509, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 234)
            subscript_call_result_511 = invoke(stypy.reporting.localization.Localization(__file__, 234, 20), getitem___510, subscript_call_result_508)
            
            int_512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 42), 'int')
            
            # Obtaining the type of the subscript
            # Getting the type of 'base' (line 234)
            base_513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 50), 'base', False)
            # Getting the type of 'mate' (line 234)
            mate_514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 45), 'mate', False)
            # Obtaining the member '__getitem__' of a type (line 234)
            getitem___515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 45), mate_514, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 234)
            subscript_call_result_516 = invoke(stypy.reporting.localization.Localization(__file__, 234, 45), getitem___515, base_513)
            
            int_517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 234, 58), 'int')
            # Applying the binary operator '^' (line 234)
            result_xor_518 = python_operator(stypy.reporting.localization.Localization(__file__, 234, 45), '^', subscript_call_result_516, int_517)
            
            # Processing the call keyword arguments (line 234)
            kwargs_519 = {}
            # Getting the type of 'assignLabel' (line 234)
            assignLabel_504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'assignLabel', False)
            # Calling assignLabel(args, kwargs) (line 234)
            assignLabel_call_result_520 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), assignLabel_504, *[subscript_call_result_511, int_512, result_xor_518], **kwargs_519)
            
            # SSA join for if statement (line 228)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for if statement (line 224)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # ################# End of 'assignLabel(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'assignLabel' in the type store
    # Getting the type of 'stypy_return_type' (line 217)
    stypy_return_type_521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_521)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'assignLabel'
    return stypy_return_type_521

# Assigning a type to the variable 'assignLabel' (line 217)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 217, 0), 'assignLabel', assignLabel)

@norecursion
def scanBlossom(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'scanBlossom'
    module_type_store = module_type_store.open_function_context('scanBlossom', 239, 0, False)
    
    # Passed parameters checking function
    scanBlossom.stypy_localization = localization
    scanBlossom.stypy_type_of_self = None
    scanBlossom.stypy_type_store = module_type_store
    scanBlossom.stypy_function_name = 'scanBlossom'
    scanBlossom.stypy_param_names_list = ['v', 'w']
    scanBlossom.stypy_varargs_param_name = None
    scanBlossom.stypy_kwargs_param_name = None
    scanBlossom.stypy_call_defaults = defaults
    scanBlossom.stypy_call_varargs = varargs
    scanBlossom.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'scanBlossom', ['v', 'w'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'scanBlossom', localization, ['v', 'w'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'scanBlossom(...)' code ##################

    # Getting the type of 'DEBUG' (line 240)
    DEBUG_522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 240)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 240, 4), DEBUG_522):
        pass
    else:
        
        # Testing the type of an if condition (line 240)
        if_condition_523 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 240, 4), DEBUG_522)
        # Assigning a type to the variable 'if_condition_523' (line 240)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 4), 'if_condition_523', if_condition_523)
        # SSA begins for if statement (line 240)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 240)
        # Processing the call arguments (line 240)
        str_525 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 20), 'str', 'scanBlossom(%d,%d)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 240)
        tuple_526 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 44), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 240)
        # Adding element type (line 240)
        # Getting the type of 'v' (line 240)
        v_527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 44), 'v', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 44), tuple_526, v_527)
        # Adding element type (line 240)
        # Getting the type of 'w' (line 240)
        w_528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 47), 'w', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 240, 44), tuple_526, w_528)
        
        # Applying the binary operator '%' (line 240)
        result_mod_529 = python_operator(stypy.reporting.localization.Localization(__file__, 240, 20), '%', str_525, tuple_526)
        
        # Processing the call keyword arguments (line 240)
        kwargs_530 = {}
        # Getting the type of 'DEBUG' (line 240)
        DEBUG_524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 240)
        DEBUG_call_result_531 = invoke(stypy.reporting.localization.Localization(__file__, 240, 14), DEBUG_524, *[result_mod_529], **kwargs_530)
        
        # SSA join for if statement (line 240)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a List to a Name (line 242):
    
    # Assigning a List to a Name (line 242):
    
    # Obtaining an instance of the builtin type 'list' (line 242)
    list_532 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 242, 11), 'list')
    # Adding type elements to the builtin type 'list' instance (line 242)
    
    # Assigning a type to the variable 'path' (line 242)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 242, 4), 'path', list_532)
    
    # Assigning a Num to a Name (line 243):
    
    # Assigning a Num to a Name (line 243):
    int_533 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 11), 'int')
    # Assigning a type to the variable 'base' (line 243)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 4), 'base', int_533)
    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'v' (line 244)
    v_534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 10), 'v')
    int_535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 15), 'int')
    # Applying the binary operator '!=' (line 244)
    result_ne_536 = python_operator(stypy.reporting.localization.Localization(__file__, 244, 10), '!=', v_534, int_535)
    
    
    # Getting the type of 'w' (line 244)
    w_537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 21), 'w')
    int_538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 244, 26), 'int')
    # Applying the binary operator '!=' (line 244)
    result_ne_539 = python_operator(stypy.reporting.localization.Localization(__file__, 244, 21), '!=', w_537, int_538)
    
    # Applying the binary operator 'or' (line 244)
    result_or_keyword_540 = python_operator(stypy.reporting.localization.Localization(__file__, 244, 10), 'or', result_ne_536, result_ne_539)
    
    # Testing if the while is going to be iterated (line 244)
    # Testing the type of an if condition (line 244)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 244, 4), result_or_keyword_540)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 244, 4), result_or_keyword_540):
        # SSA begins for while statement (line 244)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Subscript to a Name (line 246):
        
        # Assigning a Subscript to a Name (line 246):
        
        # Obtaining the type of the subscript
        # Getting the type of 'v' (line 246)
        v_541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 22), 'v')
        # Getting the type of 'inblossom' (line 246)
        inblossom_542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'inblossom')
        # Obtaining the member '__getitem__' of a type (line 246)
        getitem___543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 12), inblossom_542, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 246)
        subscript_call_result_544 = invoke(stypy.reporting.localization.Localization(__file__, 246, 12), getitem___543, v_541)
        
        # Assigning a type to the variable 'b' (line 246)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 8), 'b', subscript_call_result_544)
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 247)
        b_545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 17), 'b')
        # Getting the type of 'label' (line 247)
        label_546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 11), 'label')
        # Obtaining the member '__getitem__' of a type (line 247)
        getitem___547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 247, 11), label_546, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 247)
        subscript_call_result_548 = invoke(stypy.reporting.localization.Localization(__file__, 247, 11), getitem___547, b_545)
        
        int_549 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 22), 'int')
        # Applying the binary operator '&' (line 247)
        result_and__550 = python_operator(stypy.reporting.localization.Localization(__file__, 247, 11), '&', subscript_call_result_548, int_549)
        
        # Testing if the type of an if condition is none (line 247)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 247, 8), result_and__550):
            pass
        else:
            
            # Testing the type of an if condition (line 247)
            if_condition_551 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 247, 8), result_and__550)
            # Assigning a type to the variable 'if_condition_551' (line 247)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 8), 'if_condition_551', if_condition_551)
            # SSA begins for if statement (line 247)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 248):
            
            # Assigning a Subscript to a Name (line 248):
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 248)
            b_552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 31), 'b')
            # Getting the type of 'blossombase' (line 248)
            blossombase_553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 248, 19), 'blossombase')
            # Obtaining the member '__getitem__' of a type (line 248)
            getitem___554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 248, 19), blossombase_553, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 248)
            subscript_call_result_555 = invoke(stypy.reporting.localization.Localization(__file__, 248, 19), getitem___554, b_552)
            
            # Assigning a type to the variable 'base' (line 248)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 248, 12), 'base', subscript_call_result_555)
            # SSA join for if statement (line 247)
            module_type_store = module_type_store.join_ssa_context()
            

        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 250)
        b_556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 21), 'b')
        # Getting the type of 'label' (line 250)
        label_557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 250, 15), 'label')
        # Obtaining the member '__getitem__' of a type (line 250)
        getitem___558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 250, 15), label_557, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 250)
        subscript_call_result_559 = invoke(stypy.reporting.localization.Localization(__file__, 250, 15), getitem___558, b_556)
        
        int_560 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 250, 27), 'int')
        # Applying the binary operator '==' (line 250)
        result_eq_561 = python_operator(stypy.reporting.localization.Localization(__file__, 250, 15), '==', subscript_call_result_559, int_560)
        
        
        # Call to append(...): (line 251)
        # Processing the call arguments (line 251)
        # Getting the type of 'b' (line 251)
        b_564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 20), 'b', False)
        # Processing the call keyword arguments (line 251)
        kwargs_565 = {}
        # Getting the type of 'path' (line 251)
        path_562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 8), 'path', False)
        # Obtaining the member 'append' of a type (line 251)
        append_563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 8), path_562, 'append')
        # Calling append(args, kwargs) (line 251)
        append_call_result_566 = invoke(stypy.reporting.localization.Localization(__file__, 251, 8), append_563, *[b_564], **kwargs_565)
        
        
        # Assigning a Num to a Subscript (line 252):
        
        # Assigning a Num to a Subscript (line 252):
        int_567 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 252, 19), 'int')
        # Getting the type of 'label' (line 252)
        label_568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 8), 'label')
        # Getting the type of 'b' (line 252)
        b_569 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 14), 'b')
        # Storing an element on a container (line 252)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 252, 8), label_568, (b_569, int_567))
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 254)
        b_570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 24), 'b')
        # Getting the type of 'labelend' (line 254)
        labelend_571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 15), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 254)
        getitem___572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 15), labelend_571, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 254)
        subscript_call_result_573 = invoke(stypy.reporting.localization.Localization(__file__, 254, 15), getitem___572, b_570)
        
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 254)
        b_574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 47), 'b')
        # Getting the type of 'blossombase' (line 254)
        blossombase_575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 35), 'blossombase')
        # Obtaining the member '__getitem__' of a type (line 254)
        getitem___576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 35), blossombase_575, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 254)
        subscript_call_result_577 = invoke(stypy.reporting.localization.Localization(__file__, 254, 35), getitem___576, b_574)
        
        # Getting the type of 'mate' (line 254)
        mate_578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 254, 30), 'mate')
        # Obtaining the member '__getitem__' of a type (line 254)
        getitem___579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 254, 30), mate_578, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 254)
        subscript_call_result_580 = invoke(stypy.reporting.localization.Localization(__file__, 254, 30), getitem___579, subscript_call_result_577)
        
        # Applying the binary operator '==' (line 254)
        result_eq_581 = python_operator(stypy.reporting.localization.Localization(__file__, 254, 15), '==', subscript_call_result_573, subscript_call_result_580)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 255)
        b_582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 20), 'b')
        # Getting the type of 'labelend' (line 255)
        labelend_583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 255, 11), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 255)
        getitem___584 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 255, 11), labelend_583, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 255)
        subscript_call_result_585 = invoke(stypy.reporting.localization.Localization(__file__, 255, 11), getitem___584, b_582)
        
        int_586 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 255, 26), 'int')
        # Applying the binary operator '==' (line 255)
        result_eq_587 = python_operator(stypy.reporting.localization.Localization(__file__, 255, 11), '==', subscript_call_result_585, int_586)
        
        # Testing if the type of an if condition is none (line 255)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 255, 8), result_eq_587):
            
            # Assigning a Subscript to a Name (line 259):
            
            # Assigning a Subscript to a Name (line 259):
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 259)
            b_590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 34), 'b')
            # Getting the type of 'labelend' (line 259)
            labelend_591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 25), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 259)
            getitem___592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 25), labelend_591, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 259)
            subscript_call_result_593 = invoke(stypy.reporting.localization.Localization(__file__, 259, 25), getitem___592, b_590)
            
            # Getting the type of 'endpoint' (line 259)
            endpoint_594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 16), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 259)
            getitem___595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 16), endpoint_594, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 259)
            subscript_call_result_596 = invoke(stypy.reporting.localization.Localization(__file__, 259, 16), getitem___595, subscript_call_result_593)
            
            # Assigning a type to the variable 'v' (line 259)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 12), 'v', subscript_call_result_596)
            
            # Assigning a Subscript to a Name (line 260):
            
            # Assigning a Subscript to a Name (line 260):
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 260)
            v_597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 26), 'v')
            # Getting the type of 'inblossom' (line 260)
            inblossom_598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 16), 'inblossom')
            # Obtaining the member '__getitem__' of a type (line 260)
            getitem___599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 16), inblossom_598, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 260)
            subscript_call_result_600 = invoke(stypy.reporting.localization.Localization(__file__, 260, 16), getitem___599, v_597)
            
            # Assigning a type to the variable 'b' (line 260)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'b', subscript_call_result_600)
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 261)
            b_601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 25), 'b')
            # Getting the type of 'label' (line 261)
            label_602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 19), 'label')
            # Obtaining the member '__getitem__' of a type (line 261)
            getitem___603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 19), label_602, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 261)
            subscript_call_result_604 = invoke(stypy.reporting.localization.Localization(__file__, 261, 19), getitem___603, b_601)
            
            int_605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 31), 'int')
            # Applying the binary operator '==' (line 261)
            result_eq_606 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 19), '==', subscript_call_result_604, int_605)
            
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 263)
            b_607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 28), 'b')
            # Getting the type of 'labelend' (line 263)
            labelend_608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 19), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 263)
            getitem___609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 19), labelend_608, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 263)
            subscript_call_result_610 = invoke(stypy.reporting.localization.Localization(__file__, 263, 19), getitem___609, b_607)
            
            int_611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 34), 'int')
            # Applying the binary operator '>=' (line 263)
            result_ge_612 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 19), '>=', subscript_call_result_610, int_611)
            
            
            # Assigning a Subscript to a Name (line 264):
            
            # Assigning a Subscript to a Name (line 264):
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 264)
            b_613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 34), 'b')
            # Getting the type of 'labelend' (line 264)
            labelend_614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 25), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 264)
            getitem___615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 25), labelend_614, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 264)
            subscript_call_result_616 = invoke(stypy.reporting.localization.Localization(__file__, 264, 25), getitem___615, b_613)
            
            # Getting the type of 'endpoint' (line 264)
            endpoint_617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 16), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 264)
            getitem___618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 16), endpoint_617, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 264)
            subscript_call_result_619 = invoke(stypy.reporting.localization.Localization(__file__, 264, 16), getitem___618, subscript_call_result_616)
            
            # Assigning a type to the variable 'v' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'v', subscript_call_result_619)
        else:
            
            # Testing the type of an if condition (line 255)
            if_condition_588 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 255, 8), result_eq_587)
            # Assigning a type to the variable 'if_condition_588' (line 255)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 255, 8), 'if_condition_588', if_condition_588)
            # SSA begins for if statement (line 255)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Num to a Name (line 257):
            
            # Assigning a Num to a Name (line 257):
            int_589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 257, 16), 'int')
            # Assigning a type to the variable 'v' (line 257)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 12), 'v', int_589)
            # SSA branch for the else part of an if statement (line 255)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Subscript to a Name (line 259):
            
            # Assigning a Subscript to a Name (line 259):
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 259)
            b_590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 34), 'b')
            # Getting the type of 'labelend' (line 259)
            labelend_591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 25), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 259)
            getitem___592 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 25), labelend_591, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 259)
            subscript_call_result_593 = invoke(stypy.reporting.localization.Localization(__file__, 259, 25), getitem___592, b_590)
            
            # Getting the type of 'endpoint' (line 259)
            endpoint_594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 16), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 259)
            getitem___595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 16), endpoint_594, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 259)
            subscript_call_result_596 = invoke(stypy.reporting.localization.Localization(__file__, 259, 16), getitem___595, subscript_call_result_593)
            
            # Assigning a type to the variable 'v' (line 259)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 12), 'v', subscript_call_result_596)
            
            # Assigning a Subscript to a Name (line 260):
            
            # Assigning a Subscript to a Name (line 260):
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 260)
            v_597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 26), 'v')
            # Getting the type of 'inblossom' (line 260)
            inblossom_598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 260, 16), 'inblossom')
            # Obtaining the member '__getitem__' of a type (line 260)
            getitem___599 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 260, 16), inblossom_598, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 260)
            subscript_call_result_600 = invoke(stypy.reporting.localization.Localization(__file__, 260, 16), getitem___599, v_597)
            
            # Assigning a type to the variable 'b' (line 260)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 260, 12), 'b', subscript_call_result_600)
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 261)
            b_601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 25), 'b')
            # Getting the type of 'label' (line 261)
            label_602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 19), 'label')
            # Obtaining the member '__getitem__' of a type (line 261)
            getitem___603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 19), label_602, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 261)
            subscript_call_result_604 = invoke(stypy.reporting.localization.Localization(__file__, 261, 19), getitem___603, b_601)
            
            int_605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 261, 31), 'int')
            # Applying the binary operator '==' (line 261)
            result_eq_606 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 19), '==', subscript_call_result_604, int_605)
            
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 263)
            b_607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 28), 'b')
            # Getting the type of 'labelend' (line 263)
            labelend_608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 263, 19), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 263)
            getitem___609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 263, 19), labelend_608, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 263)
            subscript_call_result_610 = invoke(stypy.reporting.localization.Localization(__file__, 263, 19), getitem___609, b_607)
            
            int_611 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 263, 34), 'int')
            # Applying the binary operator '>=' (line 263)
            result_ge_612 = python_operator(stypy.reporting.localization.Localization(__file__, 263, 19), '>=', subscript_call_result_610, int_611)
            
            
            # Assigning a Subscript to a Name (line 264):
            
            # Assigning a Subscript to a Name (line 264):
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 264)
            b_613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 34), 'b')
            # Getting the type of 'labelend' (line 264)
            labelend_614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 25), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 264)
            getitem___615 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 25), labelend_614, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 264)
            subscript_call_result_616 = invoke(stypy.reporting.localization.Localization(__file__, 264, 25), getitem___615, b_613)
            
            # Getting the type of 'endpoint' (line 264)
            endpoint_617 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 16), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 264)
            getitem___618 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 16), endpoint_617, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 264)
            subscript_call_result_619 = invoke(stypy.reporting.localization.Localization(__file__, 264, 16), getitem___618, subscript_call_result_616)
            
            # Assigning a type to the variable 'v' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 12), 'v', subscript_call_result_619)
            # SSA join for if statement (line 255)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Getting the type of 'w' (line 266)
        w_620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 11), 'w')
        int_621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 266, 16), 'int')
        # Applying the binary operator '!=' (line 266)
        result_ne_622 = python_operator(stypy.reporting.localization.Localization(__file__, 266, 11), '!=', w_620, int_621)
        
        # Testing if the type of an if condition is none (line 266)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 266, 8), result_ne_622):
            pass
        else:
            
            # Testing the type of an if condition (line 266)
            if_condition_623 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 266, 8), result_ne_622)
            # Assigning a type to the variable 'if_condition_623' (line 266)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 266, 8), 'if_condition_623', if_condition_623)
            # SSA begins for if statement (line 266)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Tuple to a Tuple (line 267):
            
            # Assigning a Name to a Name (line 267):
            # Getting the type of 'w' (line 267)
            w_624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 19), 'w')
            # Assigning a type to the variable 'tuple_assignment_7' (line 267)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'tuple_assignment_7', w_624)
            
            # Assigning a Name to a Name (line 267):
            # Getting the type of 'v' (line 267)
            v_625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 22), 'v')
            # Assigning a type to the variable 'tuple_assignment_8' (line 267)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'tuple_assignment_8', v_625)
            
            # Assigning a Name to a Name (line 267):
            # Getting the type of 'tuple_assignment_7' (line 267)
            tuple_assignment_7_626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'tuple_assignment_7')
            # Assigning a type to the variable 'v' (line 267)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'v', tuple_assignment_7_626)
            
            # Assigning a Name to a Name (line 267):
            # Getting the type of 'tuple_assignment_8' (line 267)
            tuple_assignment_8_627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 12), 'tuple_assignment_8')
            # Assigning a type to the variable 'w' (line 267)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 267, 15), 'w', tuple_assignment_8_627)
            # SSA join for if statement (line 266)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for while statement (line 244)
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Getting the type of 'path' (line 269)
    path_628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 13), 'path')
    # Testing if the for loop is going to be iterated (line 269)
    # Testing the type of a for loop iterable (line 269)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 269, 4), path_628)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 269, 4), path_628):
        # Getting the type of the for loop variable (line 269)
        for_loop_var_629 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 269, 4), path_628)
        # Assigning a type to the variable 'b' (line 269)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 4), 'b', for_loop_var_629)
        # SSA begins for a for statement (line 269)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Subscript (line 270):
        
        # Assigning a Num to a Subscript (line 270):
        int_630 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 270, 19), 'int')
        # Getting the type of 'label' (line 270)
        label_631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 8), 'label')
        # Getting the type of 'b' (line 270)
        b_632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 14), 'b')
        # Storing an element on a container (line 270)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 270, 8), label_631, (b_632, int_630))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    # Getting the type of 'base' (line 272)
    base_633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 272, 11), 'base')
    # Assigning a type to the variable 'stypy_return_type' (line 272)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 272, 4), 'stypy_return_type', base_633)
    
    # ################# End of 'scanBlossom(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'scanBlossom' in the type store
    # Getting the type of 'stypy_return_type' (line 239)
    stypy_return_type_634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 239, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_634)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'scanBlossom'
    return stypy_return_type_634

# Assigning a type to the variable 'scanBlossom' (line 239)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 239, 0), 'scanBlossom', scanBlossom)

@norecursion
def addBlossom(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'addBlossom'
    module_type_store = module_type_store.open_function_context('addBlossom', 278, 0, False)
    
    # Passed parameters checking function
    addBlossom.stypy_localization = localization
    addBlossom.stypy_type_of_self = None
    addBlossom.stypy_type_store = module_type_store
    addBlossom.stypy_function_name = 'addBlossom'
    addBlossom.stypy_param_names_list = ['base', 'k']
    addBlossom.stypy_varargs_param_name = None
    addBlossom.stypy_kwargs_param_name = None
    addBlossom.stypy_call_defaults = defaults
    addBlossom.stypy_call_varargs = varargs
    addBlossom.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'addBlossom', ['base', 'k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'addBlossom', localization, ['base', 'k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'addBlossom(...)' code ##################

    
    # Assigning a Subscript to a Tuple (line 279):
    
    # Assigning a Subscript to a Name (line 279):
    
    # Obtaining the type of the subscript
    int_635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 279)
    k_636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 23), 'k')
    # Getting the type of 'edges' (line 279)
    edges_637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 279)
    getitem___638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 17), edges_637, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 279)
    subscript_call_result_639 = invoke(stypy.reporting.localization.Localization(__file__, 279, 17), getitem___638, k_636)
    
    # Obtaining the member '__getitem__' of a type (line 279)
    getitem___640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 4), subscript_call_result_639, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 279)
    subscript_call_result_641 = invoke(stypy.reporting.localization.Localization(__file__, 279, 4), getitem___640, int_635)
    
    # Assigning a type to the variable 'tuple_var_assignment_9' (line 279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 4), 'tuple_var_assignment_9', subscript_call_result_641)
    
    # Assigning a Subscript to a Name (line 279):
    
    # Obtaining the type of the subscript
    int_642 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 279)
    k_643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 23), 'k')
    # Getting the type of 'edges' (line 279)
    edges_644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 279)
    getitem___645 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 17), edges_644, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 279)
    subscript_call_result_646 = invoke(stypy.reporting.localization.Localization(__file__, 279, 17), getitem___645, k_643)
    
    # Obtaining the member '__getitem__' of a type (line 279)
    getitem___647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 4), subscript_call_result_646, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 279)
    subscript_call_result_648 = invoke(stypy.reporting.localization.Localization(__file__, 279, 4), getitem___647, int_642)
    
    # Assigning a type to the variable 'tuple_var_assignment_10' (line 279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 4), 'tuple_var_assignment_10', subscript_call_result_648)
    
    # Assigning a Subscript to a Name (line 279):
    
    # Obtaining the type of the subscript
    int_649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 279)
    k_650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 23), 'k')
    # Getting the type of 'edges' (line 279)
    edges_651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 279)
    getitem___652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 17), edges_651, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 279)
    subscript_call_result_653 = invoke(stypy.reporting.localization.Localization(__file__, 279, 17), getitem___652, k_650)
    
    # Obtaining the member '__getitem__' of a type (line 279)
    getitem___654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 4), subscript_call_result_653, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 279)
    subscript_call_result_655 = invoke(stypy.reporting.localization.Localization(__file__, 279, 4), getitem___654, int_649)
    
    # Assigning a type to the variable 'tuple_var_assignment_11' (line 279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 4), 'tuple_var_assignment_11', subscript_call_result_655)
    
    # Assigning a Name to a Name (line 279):
    # Getting the type of 'tuple_var_assignment_9' (line 279)
    tuple_var_assignment_9_656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 4), 'tuple_var_assignment_9')
    # Assigning a type to the variable 'v' (line 279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 5), 'v', tuple_var_assignment_9_656)
    
    # Assigning a Name to a Name (line 279):
    # Getting the type of 'tuple_var_assignment_10' (line 279)
    tuple_var_assignment_10_657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 4), 'tuple_var_assignment_10')
    # Assigning a type to the variable 'w' (line 279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 8), 'w', tuple_var_assignment_10_657)
    
    # Assigning a Name to a Name (line 279):
    # Getting the type of 'tuple_var_assignment_11' (line 279)
    tuple_var_assignment_11_658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 4), 'tuple_var_assignment_11')
    # Assigning a type to the variable 'wt' (line 279)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 279, 11), 'wt', tuple_var_assignment_11_658)
    
    # Assigning a Subscript to a Name (line 280):
    
    # Assigning a Subscript to a Name (line 280):
    
    # Obtaining the type of the subscript
    # Getting the type of 'base' (line 280)
    base_659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 19), 'base')
    # Getting the type of 'inblossom' (line 280)
    inblossom_660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 9), 'inblossom')
    # Obtaining the member '__getitem__' of a type (line 280)
    getitem___661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 9), inblossom_660, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 280)
    subscript_call_result_662 = invoke(stypy.reporting.localization.Localization(__file__, 280, 9), getitem___661, base_659)
    
    # Assigning a type to the variable 'bb' (line 280)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 280, 4), 'bb', subscript_call_result_662)
    
    # Assigning a Subscript to a Name (line 281):
    
    # Assigning a Subscript to a Name (line 281):
    
    # Obtaining the type of the subscript
    # Getting the type of 'v' (line 281)
    v_663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 19), 'v')
    # Getting the type of 'inblossom' (line 281)
    inblossom_664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 9), 'inblossom')
    # Obtaining the member '__getitem__' of a type (line 281)
    getitem___665 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 9), inblossom_664, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 281)
    subscript_call_result_666 = invoke(stypy.reporting.localization.Localization(__file__, 281, 9), getitem___665, v_663)
    
    # Assigning a type to the variable 'bv' (line 281)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 4), 'bv', subscript_call_result_666)
    
    # Assigning a Subscript to a Name (line 282):
    
    # Assigning a Subscript to a Name (line 282):
    
    # Obtaining the type of the subscript
    # Getting the type of 'w' (line 282)
    w_667 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 19), 'w')
    # Getting the type of 'inblossom' (line 282)
    inblossom_668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 282, 9), 'inblossom')
    # Obtaining the member '__getitem__' of a type (line 282)
    getitem___669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 282, 9), inblossom_668, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 282)
    subscript_call_result_670 = invoke(stypy.reporting.localization.Localization(__file__, 282, 9), getitem___669, w_667)
    
    # Assigning a type to the variable 'bw' (line 282)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 282, 4), 'bw', subscript_call_result_670)
    
    # Assigning a Call to a Name (line 284):
    
    # Assigning a Call to a Name (line 284):
    
    # Call to pop(...): (line 284)
    # Processing the call keyword arguments (line 284)
    kwargs_673 = {}
    # Getting the type of 'unusedblossoms' (line 284)
    unusedblossoms_671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 8), 'unusedblossoms', False)
    # Obtaining the member 'pop' of a type (line 284)
    pop_672 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 8), unusedblossoms_671, 'pop')
    # Calling pop(args, kwargs) (line 284)
    pop_call_result_674 = invoke(stypy.reporting.localization.Localization(__file__, 284, 8), pop_672, *[], **kwargs_673)
    
    # Assigning a type to the variable 'b' (line 284)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 4), 'b', pop_call_result_674)
    # Getting the type of 'DEBUG' (line 285)
    DEBUG_675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 285)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 285, 4), DEBUG_675):
        pass
    else:
        
        # Testing the type of an if condition (line 285)
        if_condition_676 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 285, 4), DEBUG_675)
        # Assigning a type to the variable 'if_condition_676' (line 285)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 285, 4), 'if_condition_676', if_condition_676)
        # SSA begins for if statement (line 285)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 285)
        # Processing the call arguments (line 285)
        str_678 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 285, 20), 'str', 'addBlossom(%d,%d) (v=%d w=%d) -> %d')
        
        # Obtaining an instance of the builtin type 'tuple' (line 285)
        tuple_679 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 285, 61), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 285)
        # Adding element type (line 285)
        # Getting the type of 'base' (line 285)
        base_680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 61), 'base', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 285, 61), tuple_679, base_680)
        # Adding element type (line 285)
        # Getting the type of 'k' (line 285)
        k_681 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 67), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 285, 61), tuple_679, k_681)
        # Adding element type (line 285)
        # Getting the type of 'v' (line 285)
        v_682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 70), 'v', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 285, 61), tuple_679, v_682)
        # Adding element type (line 285)
        # Getting the type of 'w' (line 285)
        w_683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 73), 'w', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 285, 61), tuple_679, w_683)
        # Adding element type (line 285)
        # Getting the type of 'b' (line 285)
        b_684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 76), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 285, 61), tuple_679, b_684)
        
        # Applying the binary operator '%' (line 285)
        result_mod_685 = python_operator(stypy.reporting.localization.Localization(__file__, 285, 20), '%', str_678, tuple_679)
        
        # Processing the call keyword arguments (line 285)
        kwargs_686 = {}
        # Getting the type of 'DEBUG' (line 285)
        DEBUG_677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 285)
        DEBUG_call_result_687 = invoke(stypy.reporting.localization.Localization(__file__, 285, 14), DEBUG_677, *[result_mod_685], **kwargs_686)
        
        # SSA join for if statement (line 285)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a Name to a Subscript (line 286):
    
    # Assigning a Name to a Subscript (line 286):
    # Getting the type of 'base' (line 286)
    base_688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 21), 'base')
    # Getting the type of 'blossombase' (line 286)
    blossombase_689 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 4), 'blossombase')
    # Getting the type of 'b' (line 286)
    b_690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 16), 'b')
    # Storing an element on a container (line 286)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 286, 4), blossombase_689, (b_690, base_688))
    
    # Assigning a Num to a Subscript (line 287):
    
    # Assigning a Num to a Subscript (line 287):
    int_691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 23), 'int')
    # Getting the type of 'blossomparent' (line 287)
    blossomparent_692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 4), 'blossomparent')
    # Getting the type of 'b' (line 287)
    b_693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 18), 'b')
    # Storing an element on a container (line 287)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 287, 4), blossomparent_692, (b_693, int_691))
    
    # Assigning a Name to a Subscript (line 288):
    
    # Assigning a Name to a Subscript (line 288):
    # Getting the type of 'b' (line 288)
    b_694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 24), 'b')
    # Getting the type of 'blossomparent' (line 288)
    blossomparent_695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 4), 'blossomparent')
    # Getting the type of 'bb' (line 288)
    bb_696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 288, 18), 'bb')
    # Storing an element on a container (line 288)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 288, 4), blossomparent_695, (bb_696, b_694))
    
    # Multiple assignment of 2 elements.
    
    # Assigning a List to a Name (line 290):
    
    # Obtaining an instance of the builtin type 'list' (line 290)
    list_697 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 290, 30), 'list')
    # Adding type elements to the builtin type 'list' instance (line 290)
    
    # Assigning a type to the variable 'path' (line 290)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 290, 23), 'path', list_697)
    
    # Assigning a Name to a Subscript (line 290):
    # Getting the type of 'path' (line 290)
    path_698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 23), 'path')
    # Getting the type of 'blossomchilds' (line 290)
    blossomchilds_699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 4), 'blossomchilds')
    # Getting the type of 'b' (line 290)
    b_700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 290, 18), 'b')
    # Storing an element on a container (line 290)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 290, 4), blossomchilds_699, (b_700, path_698))
    
    # Multiple assignment of 2 elements.
    
    # Assigning a List to a Name (line 291):
    
    # Obtaining an instance of the builtin type 'list' (line 291)
    list_701 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 291, 30), 'list')
    # Adding type elements to the builtin type 'list' instance (line 291)
    
    # Assigning a type to the variable 'endps' (line 291)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 22), 'endps', list_701)
    
    # Assigning a Name to a Subscript (line 291):
    # Getting the type of 'endps' (line 291)
    endps_702 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 22), 'endps')
    # Getting the type of 'blossomendps' (line 291)
    blossomendps_703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 4), 'blossomendps')
    # Getting the type of 'b' (line 291)
    b_704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 17), 'b')
    # Storing an element on a container (line 291)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 291, 4), blossomendps_703, (b_704, endps_702))
    
    
    # Getting the type of 'bv' (line 293)
    bv_705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 10), 'bv')
    # Getting the type of 'bb' (line 293)
    bb_706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 293, 16), 'bb')
    # Applying the binary operator '!=' (line 293)
    result_ne_707 = python_operator(stypy.reporting.localization.Localization(__file__, 293, 10), '!=', bv_705, bb_706)
    
    # Testing if the while is going to be iterated (line 293)
    # Testing the type of an if condition (line 293)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 293, 4), result_ne_707)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 293, 4), result_ne_707):
        # SSA begins for while statement (line 293)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Name to a Subscript (line 295):
        
        # Assigning a Name to a Subscript (line 295):
        # Getting the type of 'b' (line 295)
        b_708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 28), 'b')
        # Getting the type of 'blossomparent' (line 295)
        blossomparent_709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 8), 'blossomparent')
        # Getting the type of 'bv' (line 295)
        bv_710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 22), 'bv')
        # Storing an element on a container (line 295)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 295, 8), blossomparent_709, (bv_710, b_708))
        
        # Call to append(...): (line 296)
        # Processing the call arguments (line 296)
        # Getting the type of 'bv' (line 296)
        bv_713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 20), 'bv', False)
        # Processing the call keyword arguments (line 296)
        kwargs_714 = {}
        # Getting the type of 'path' (line 296)
        path_711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'path', False)
        # Obtaining the member 'append' of a type (line 296)
        append_712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 296, 8), path_711, 'append')
        # Calling append(args, kwargs) (line 296)
        append_call_result_715 = invoke(stypy.reporting.localization.Localization(__file__, 296, 8), append_712, *[bv_713], **kwargs_714)
        
        
        # Call to append(...): (line 297)
        # Processing the call arguments (line 297)
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 297)
        bv_718 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 30), 'bv', False)
        # Getting the type of 'labelend' (line 297)
        labelend_719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 21), 'labelend', False)
        # Obtaining the member '__getitem__' of a type (line 297)
        getitem___720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 21), labelend_719, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 297)
        subscript_call_result_721 = invoke(stypy.reporting.localization.Localization(__file__, 297, 21), getitem___720, bv_718)
        
        # Processing the call keyword arguments (line 297)
        kwargs_722 = {}
        # Getting the type of 'endps' (line 297)
        endps_716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 297, 8), 'endps', False)
        # Obtaining the member 'append' of a type (line 297)
        append_717 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 297, 8), endps_716, 'append')
        # Calling append(args, kwargs) (line 297)
        append_call_result_723 = invoke(stypy.reporting.localization.Localization(__file__, 297, 8), append_717, *[subscript_call_result_721], **kwargs_722)
        
        # Evaluating assert statement condition
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 298)
        bv_724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 22), 'bv')
        # Getting the type of 'label' (line 298)
        label_725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 298, 16), 'label')
        # Obtaining the member '__getitem__' of a type (line 298)
        getitem___726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 298, 16), label_725, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 298)
        subscript_call_result_727 = invoke(stypy.reporting.localization.Localization(__file__, 298, 16), getitem___726, bv_724)
        
        int_728 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 298, 29), 'int')
        # Applying the binary operator '==' (line 298)
        result_eq_729 = python_operator(stypy.reporting.localization.Localization(__file__, 298, 16), '==', subscript_call_result_727, int_728)
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 299)
        bv_730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 23), 'bv')
        # Getting the type of 'label' (line 299)
        label_731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 17), 'label')
        # Obtaining the member '__getitem__' of a type (line 299)
        getitem___732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 17), label_731, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 299)
        subscript_call_result_733 = invoke(stypy.reporting.localization.Localization(__file__, 299, 17), getitem___732, bv_730)
        
        int_734 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 299, 30), 'int')
        # Applying the binary operator '==' (line 299)
        result_eq_735 = python_operator(stypy.reporting.localization.Localization(__file__, 299, 17), '==', subscript_call_result_733, int_734)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 299)
        bv_736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 45), 'bv')
        # Getting the type of 'labelend' (line 299)
        labelend_737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 36), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 299)
        getitem___738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 36), labelend_737, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 299)
        subscript_call_result_739 = invoke(stypy.reporting.localization.Localization(__file__, 299, 36), getitem___738, bv_736)
        
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 299)
        bv_740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 69), 'bv')
        # Getting the type of 'blossombase' (line 299)
        blossombase_741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 57), 'blossombase')
        # Obtaining the member '__getitem__' of a type (line 299)
        getitem___742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 57), blossombase_741, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 299)
        subscript_call_result_743 = invoke(stypy.reporting.localization.Localization(__file__, 299, 57), getitem___742, bv_740)
        
        # Getting the type of 'mate' (line 299)
        mate_744 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 299, 52), 'mate')
        # Obtaining the member '__getitem__' of a type (line 299)
        getitem___745 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 299, 52), mate_744, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 299)
        subscript_call_result_746 = invoke(stypy.reporting.localization.Localization(__file__, 299, 52), getitem___745, subscript_call_result_743)
        
        # Applying the binary operator '==' (line 299)
        result_eq_747 = python_operator(stypy.reporting.localization.Localization(__file__, 299, 36), '==', subscript_call_result_739, subscript_call_result_746)
        
        # Applying the binary operator 'and' (line 299)
        result_and_keyword_748 = python_operator(stypy.reporting.localization.Localization(__file__, 299, 17), 'and', result_eq_735, result_eq_747)
        
        # Applying the binary operator 'or' (line 298)
        result_or_keyword_749 = python_operator(stypy.reporting.localization.Localization(__file__, 298, 16), 'or', result_eq_729, result_and_keyword_748)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 301)
        bv_750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 24), 'bv')
        # Getting the type of 'labelend' (line 301)
        labelend_751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 301, 15), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 301)
        getitem___752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 301, 15), labelend_751, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 301)
        subscript_call_result_753 = invoke(stypy.reporting.localization.Localization(__file__, 301, 15), getitem___752, bv_750)
        
        int_754 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 301, 31), 'int')
        # Applying the binary operator '>=' (line 301)
        result_ge_755 = python_operator(stypy.reporting.localization.Localization(__file__, 301, 15), '>=', subscript_call_result_753, int_754)
        
        
        # Assigning a Subscript to a Name (line 302):
        
        # Assigning a Subscript to a Name (line 302):
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 302)
        bv_756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 30), 'bv')
        # Getting the type of 'labelend' (line 302)
        labelend_757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 21), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 302)
        getitem___758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 21), labelend_757, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 302)
        subscript_call_result_759 = invoke(stypy.reporting.localization.Localization(__file__, 302, 21), getitem___758, bv_756)
        
        # Getting the type of 'endpoint' (line 302)
        endpoint_760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 302, 12), 'endpoint')
        # Obtaining the member '__getitem__' of a type (line 302)
        getitem___761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 302, 12), endpoint_760, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 302)
        subscript_call_result_762 = invoke(stypy.reporting.localization.Localization(__file__, 302, 12), getitem___761, subscript_call_result_759)
        
        # Assigning a type to the variable 'v' (line 302)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 302, 8), 'v', subscript_call_result_762)
        
        # Assigning a Subscript to a Name (line 303):
        
        # Assigning a Subscript to a Name (line 303):
        
        # Obtaining the type of the subscript
        # Getting the type of 'v' (line 303)
        v_763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 23), 'v')
        # Getting the type of 'inblossom' (line 303)
        inblossom_764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 303, 13), 'inblossom')
        # Obtaining the member '__getitem__' of a type (line 303)
        getitem___765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 303, 13), inblossom_764, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 303)
        subscript_call_result_766 = invoke(stypy.reporting.localization.Localization(__file__, 303, 13), getitem___765, v_763)
        
        # Assigning a type to the variable 'bv' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'bv', subscript_call_result_766)
        # SSA join for while statement (line 293)
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Call to append(...): (line 305)
    # Processing the call arguments (line 305)
    # Getting the type of 'bb' (line 305)
    bb_769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 16), 'bb', False)
    # Processing the call keyword arguments (line 305)
    kwargs_770 = {}
    # Getting the type of 'path' (line 305)
    path_767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 305, 4), 'path', False)
    # Obtaining the member 'append' of a type (line 305)
    append_768 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 305, 4), path_767, 'append')
    # Calling append(args, kwargs) (line 305)
    append_call_result_771 = invoke(stypy.reporting.localization.Localization(__file__, 305, 4), append_768, *[bb_769], **kwargs_770)
    
    
    # Call to reverse(...): (line 306)
    # Processing the call keyword arguments (line 306)
    kwargs_774 = {}
    # Getting the type of 'path' (line 306)
    path_772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 4), 'path', False)
    # Obtaining the member 'reverse' of a type (line 306)
    reverse_773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 4), path_772, 'reverse')
    # Calling reverse(args, kwargs) (line 306)
    reverse_call_result_775 = invoke(stypy.reporting.localization.Localization(__file__, 306, 4), reverse_773, *[], **kwargs_774)
    
    
    # Call to reverse(...): (line 307)
    # Processing the call keyword arguments (line 307)
    kwargs_778 = {}
    # Getting the type of 'endps' (line 307)
    endps_776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 307, 4), 'endps', False)
    # Obtaining the member 'reverse' of a type (line 307)
    reverse_777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 307, 4), endps_776, 'reverse')
    # Calling reverse(args, kwargs) (line 307)
    reverse_call_result_779 = invoke(stypy.reporting.localization.Localization(__file__, 307, 4), reverse_777, *[], **kwargs_778)
    
    
    # Call to append(...): (line 308)
    # Processing the call arguments (line 308)
    int_782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 308, 17), 'int')
    # Getting the type of 'k' (line 308)
    k_783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 21), 'k', False)
    # Applying the binary operator '*' (line 308)
    result_mul_784 = python_operator(stypy.reporting.localization.Localization(__file__, 308, 17), '*', int_782, k_783)
    
    # Processing the call keyword arguments (line 308)
    kwargs_785 = {}
    # Getting the type of 'endps' (line 308)
    endps_780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 4), 'endps', False)
    # Obtaining the member 'append' of a type (line 308)
    append_781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 4), endps_780, 'append')
    # Calling append(args, kwargs) (line 308)
    append_call_result_786 = invoke(stypy.reporting.localization.Localization(__file__, 308, 4), append_781, *[result_mul_784], **kwargs_785)
    
    
    
    # Getting the type of 'bw' (line 310)
    bw_787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 10), 'bw')
    # Getting the type of 'bb' (line 310)
    bb_788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 310, 16), 'bb')
    # Applying the binary operator '!=' (line 310)
    result_ne_789 = python_operator(stypy.reporting.localization.Localization(__file__, 310, 10), '!=', bw_787, bb_788)
    
    # Testing if the while is going to be iterated (line 310)
    # Testing the type of an if condition (line 310)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 310, 4), result_ne_789)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 310, 4), result_ne_789):
        # SSA begins for while statement (line 310)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Name to a Subscript (line 312):
        
        # Assigning a Name to a Subscript (line 312):
        # Getting the type of 'b' (line 312)
        b_790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 28), 'b')
        # Getting the type of 'blossomparent' (line 312)
        blossomparent_791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 8), 'blossomparent')
        # Getting the type of 'bw' (line 312)
        bw_792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 22), 'bw')
        # Storing an element on a container (line 312)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 312, 8), blossomparent_791, (bw_792, b_790))
        
        # Call to append(...): (line 313)
        # Processing the call arguments (line 313)
        # Getting the type of 'bw' (line 313)
        bw_795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 20), 'bw', False)
        # Processing the call keyword arguments (line 313)
        kwargs_796 = {}
        # Getting the type of 'path' (line 313)
        path_793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 8), 'path', False)
        # Obtaining the member 'append' of a type (line 313)
        append_794 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 8), path_793, 'append')
        # Calling append(args, kwargs) (line 313)
        append_call_result_797 = invoke(stypy.reporting.localization.Localization(__file__, 313, 8), append_794, *[bw_795], **kwargs_796)
        
        
        # Call to append(...): (line 314)
        # Processing the call arguments (line 314)
        
        # Obtaining the type of the subscript
        # Getting the type of 'bw' (line 314)
        bw_800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 30), 'bw', False)
        # Getting the type of 'labelend' (line 314)
        labelend_801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 21), 'labelend', False)
        # Obtaining the member '__getitem__' of a type (line 314)
        getitem___802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 21), labelend_801, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 314)
        subscript_call_result_803 = invoke(stypy.reporting.localization.Localization(__file__, 314, 21), getitem___802, bw_800)
        
        int_804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 314, 36), 'int')
        # Applying the binary operator '^' (line 314)
        result_xor_805 = python_operator(stypy.reporting.localization.Localization(__file__, 314, 21), '^', subscript_call_result_803, int_804)
        
        # Processing the call keyword arguments (line 314)
        kwargs_806 = {}
        # Getting the type of 'endps' (line 314)
        endps_798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 314, 8), 'endps', False)
        # Obtaining the member 'append' of a type (line 314)
        append_799 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 314, 8), endps_798, 'append')
        # Calling append(args, kwargs) (line 314)
        append_call_result_807 = invoke(stypy.reporting.localization.Localization(__file__, 314, 8), append_799, *[result_xor_805], **kwargs_806)
        
        # Evaluating assert statement condition
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bw' (line 315)
        bw_808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 22), 'bw')
        # Getting the type of 'label' (line 315)
        label_809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 16), 'label')
        # Obtaining the member '__getitem__' of a type (line 315)
        getitem___810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 16), label_809, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 315)
        subscript_call_result_811 = invoke(stypy.reporting.localization.Localization(__file__, 315, 16), getitem___810, bw_808)
        
        int_812 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 29), 'int')
        # Applying the binary operator '==' (line 315)
        result_eq_813 = python_operator(stypy.reporting.localization.Localization(__file__, 315, 16), '==', subscript_call_result_811, int_812)
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bw' (line 316)
        bw_814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 23), 'bw')
        # Getting the type of 'label' (line 316)
        label_815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 17), 'label')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___816 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 17), label_815, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_817 = invoke(stypy.reporting.localization.Localization(__file__, 316, 17), getitem___816, bw_814)
        
        int_818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 316, 30), 'int')
        # Applying the binary operator '==' (line 316)
        result_eq_819 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 17), '==', subscript_call_result_817, int_818)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bw' (line 316)
        bw_820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 45), 'bw')
        # Getting the type of 'labelend' (line 316)
        labelend_821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 36), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 36), labelend_821, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_823 = invoke(stypy.reporting.localization.Localization(__file__, 316, 36), getitem___822, bw_820)
        
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'bw' (line 316)
        bw_824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 69), 'bw')
        # Getting the type of 'blossombase' (line 316)
        blossombase_825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 57), 'blossombase')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___826 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 57), blossombase_825, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_827 = invoke(stypy.reporting.localization.Localization(__file__, 316, 57), getitem___826, bw_824)
        
        # Getting the type of 'mate' (line 316)
        mate_828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 316, 52), 'mate')
        # Obtaining the member '__getitem__' of a type (line 316)
        getitem___829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 316, 52), mate_828, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 316)
        subscript_call_result_830 = invoke(stypy.reporting.localization.Localization(__file__, 316, 52), getitem___829, subscript_call_result_827)
        
        # Applying the binary operator '==' (line 316)
        result_eq_831 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 36), '==', subscript_call_result_823, subscript_call_result_830)
        
        # Applying the binary operator 'and' (line 316)
        result_and_keyword_832 = python_operator(stypy.reporting.localization.Localization(__file__, 316, 17), 'and', result_eq_819, result_eq_831)
        
        # Applying the binary operator 'or' (line 315)
        result_or_keyword_833 = python_operator(stypy.reporting.localization.Localization(__file__, 315, 16), 'or', result_eq_813, result_and_keyword_832)
        
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'bw' (line 318)
        bw_834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 24), 'bw')
        # Getting the type of 'labelend' (line 318)
        labelend_835 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 318, 15), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 318)
        getitem___836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 318, 15), labelend_835, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 318)
        subscript_call_result_837 = invoke(stypy.reporting.localization.Localization(__file__, 318, 15), getitem___836, bw_834)
        
        int_838 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 318, 31), 'int')
        # Applying the binary operator '>=' (line 318)
        result_ge_839 = python_operator(stypy.reporting.localization.Localization(__file__, 318, 15), '>=', subscript_call_result_837, int_838)
        
        
        # Assigning a Subscript to a Name (line 319):
        
        # Assigning a Subscript to a Name (line 319):
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'bw' (line 319)
        bw_840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 30), 'bw')
        # Getting the type of 'labelend' (line 319)
        labelend_841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 21), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 319)
        getitem___842 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 21), labelend_841, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 319)
        subscript_call_result_843 = invoke(stypy.reporting.localization.Localization(__file__, 319, 21), getitem___842, bw_840)
        
        # Getting the type of 'endpoint' (line 319)
        endpoint_844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 319, 12), 'endpoint')
        # Obtaining the member '__getitem__' of a type (line 319)
        getitem___845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 319, 12), endpoint_844, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 319)
        subscript_call_result_846 = invoke(stypy.reporting.localization.Localization(__file__, 319, 12), getitem___845, subscript_call_result_843)
        
        # Assigning a type to the variable 'w' (line 319)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 8), 'w', subscript_call_result_846)
        
        # Assigning a Subscript to a Name (line 320):
        
        # Assigning a Subscript to a Name (line 320):
        
        # Obtaining the type of the subscript
        # Getting the type of 'w' (line 320)
        w_847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 23), 'w')
        # Getting the type of 'inblossom' (line 320)
        inblossom_848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 320, 13), 'inblossom')
        # Obtaining the member '__getitem__' of a type (line 320)
        getitem___849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 320, 13), inblossom_848, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 320)
        subscript_call_result_850 = invoke(stypy.reporting.localization.Localization(__file__, 320, 13), getitem___849, w_847)
        
        # Assigning a type to the variable 'bw' (line 320)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 8), 'bw', subscript_call_result_850)
        # SSA join for while statement (line 310)
        module_type_store = module_type_store.join_ssa_context()

    
    # Evaluating assert statement condition
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'bb' (line 322)
    bb_851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 17), 'bb')
    # Getting the type of 'label' (line 322)
    label_852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 322, 11), 'label')
    # Obtaining the member '__getitem__' of a type (line 322)
    getitem___853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 322, 11), label_852, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 322)
    subscript_call_result_854 = invoke(stypy.reporting.localization.Localization(__file__, 322, 11), getitem___853, bb_851)
    
    int_855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 322, 24), 'int')
    # Applying the binary operator '==' (line 322)
    result_eq_856 = python_operator(stypy.reporting.localization.Localization(__file__, 322, 11), '==', subscript_call_result_854, int_855)
    
    
    # Assigning a Num to a Subscript (line 323):
    
    # Assigning a Num to a Subscript (line 323):
    int_857 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 323, 15), 'int')
    # Getting the type of 'label' (line 323)
    label_858 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 4), 'label')
    # Getting the type of 'b' (line 323)
    b_859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 323, 10), 'b')
    # Storing an element on a container (line 323)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 323, 4), label_858, (b_859, int_857))
    
    # Assigning a Subscript to a Subscript (line 324):
    
    # Assigning a Subscript to a Subscript (line 324):
    
    # Obtaining the type of the subscript
    # Getting the type of 'bb' (line 324)
    bb_860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 27), 'bb')
    # Getting the type of 'labelend' (line 324)
    labelend_861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 18), 'labelend')
    # Obtaining the member '__getitem__' of a type (line 324)
    getitem___862 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 18), labelend_861, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 324)
    subscript_call_result_863 = invoke(stypy.reporting.localization.Localization(__file__, 324, 18), getitem___862, bb_860)
    
    # Getting the type of 'labelend' (line 324)
    labelend_864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 4), 'labelend')
    # Getting the type of 'b' (line 324)
    b_865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 13), 'b')
    # Storing an element on a container (line 324)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 324, 4), labelend_864, (b_865, subscript_call_result_863))
    
    # Assigning a Num to a Subscript (line 326):
    
    # Assigning a Num to a Subscript (line 326):
    int_866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 326, 17), 'int')
    # Getting the type of 'dualvar' (line 326)
    dualvar_867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 4), 'dualvar')
    # Getting the type of 'b' (line 326)
    b_868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 326, 12), 'b')
    # Storing an element on a container (line 326)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 326, 4), dualvar_867, (b_868, int_866))
    
    
    # Call to blossomLeaves(...): (line 328)
    # Processing the call arguments (line 328)
    # Getting the type of 'b' (line 328)
    b_870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 27), 'b', False)
    # Processing the call keyword arguments (line 328)
    kwargs_871 = {}
    # Getting the type of 'blossomLeaves' (line 328)
    blossomLeaves_869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 13), 'blossomLeaves', False)
    # Calling blossomLeaves(args, kwargs) (line 328)
    blossomLeaves_call_result_872 = invoke(stypy.reporting.localization.Localization(__file__, 328, 13), blossomLeaves_869, *[b_870], **kwargs_871)
    
    # Testing if the for loop is going to be iterated (line 328)
    # Testing the type of a for loop iterable (line 328)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 328, 4), blossomLeaves_call_result_872)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 328, 4), blossomLeaves_call_result_872):
        # Getting the type of the for loop variable (line 328)
        for_loop_var_873 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 328, 4), blossomLeaves_call_result_872)
        # Assigning a type to the variable 'v' (line 328)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 4), 'v', for_loop_var_873)
        # SSA begins for a for statement (line 328)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'v' (line 329)
        v_874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 27), 'v')
        # Getting the type of 'inblossom' (line 329)
        inblossom_875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 17), 'inblossom')
        # Obtaining the member '__getitem__' of a type (line 329)
        getitem___876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 17), inblossom_875, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 329)
        subscript_call_result_877 = invoke(stypy.reporting.localization.Localization(__file__, 329, 17), getitem___876, v_874)
        
        # Getting the type of 'label' (line 329)
        label_878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 11), 'label')
        # Obtaining the member '__getitem__' of a type (line 329)
        getitem___879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 11), label_878, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 329)
        subscript_call_result_880 = invoke(stypy.reporting.localization.Localization(__file__, 329, 11), getitem___879, subscript_call_result_877)
        
        int_881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 329, 34), 'int')
        # Applying the binary operator '==' (line 329)
        result_eq_882 = python_operator(stypy.reporting.localization.Localization(__file__, 329, 11), '==', subscript_call_result_880, int_881)
        
        # Testing if the type of an if condition is none (line 329)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 329, 8), result_eq_882):
            pass
        else:
            
            # Testing the type of an if condition (line 329)
            if_condition_883 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 329, 8), result_eq_882)
            # Assigning a type to the variable 'if_condition_883' (line 329)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 8), 'if_condition_883', if_condition_883)
            # SSA begins for if statement (line 329)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 332)
            # Processing the call arguments (line 332)
            # Getting the type of 'v' (line 332)
            v_886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 25), 'v', False)
            # Processing the call keyword arguments (line 332)
            kwargs_887 = {}
            # Getting the type of 'queue' (line 332)
            queue_884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 12), 'queue', False)
            # Obtaining the member 'append' of a type (line 332)
            append_885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 332, 12), queue_884, 'append')
            # Calling append(args, kwargs) (line 332)
            append_call_result_888 = invoke(stypy.reporting.localization.Localization(__file__, 332, 12), append_885, *[v_886], **kwargs_887)
            
            # SSA join for if statement (line 329)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Name to a Subscript (line 333):
        
        # Assigning a Name to a Subscript (line 333):
        # Getting the type of 'b' (line 333)
        b_889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 23), 'b')
        # Getting the type of 'inblossom' (line 333)
        inblossom_890 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'inblossom')
        # Getting the type of 'v' (line 333)
        v_891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 18), 'v')
        # Storing an element on a container (line 333)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 333, 8), inblossom_890, (v_891, b_889))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Assigning a BinOp to a Name (line 335):
    
    # Assigning a BinOp to a Name (line 335):
    int_892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 18), 'int')
    # Getting the type of 'nvertex' (line 335)
    nvertex_893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 22), 'nvertex')
    # Applying the binary operator '*' (line 335)
    result_mul_894 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 18), '*', int_892, nvertex_893)
    
    
    # Obtaining an instance of the builtin type 'list' (line 335)
    list_895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 33), 'list')
    # Adding type elements to the builtin type 'list' instance (line 335)
    # Adding element type (line 335)
    int_896 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 335, 34), 'int')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 335, 33), list_895, int_896)
    
    # Applying the binary operator '*' (line 335)
    result_mul_897 = python_operator(stypy.reporting.localization.Localization(__file__, 335, 17), '*', result_mul_894, list_895)
    
    # Assigning a type to the variable 'bestedgeto' (line 335)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 335, 4), 'bestedgeto', result_mul_897)
    
    # Getting the type of 'path' (line 336)
    path_898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 14), 'path')
    # Testing if the for loop is going to be iterated (line 336)
    # Testing the type of a for loop iterable (line 336)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 336, 4), path_898)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 336, 4), path_898):
        # Getting the type of the for loop variable (line 336)
        for_loop_var_899 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 336, 4), path_898)
        # Assigning a type to the variable 'bv' (line 336)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 4), 'bv', for_loop_var_899)
        # SSA begins for a for statement (line 336)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Type idiom detected: calculating its left and rigth part (line 337)
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 337)
        bv_900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 28), 'bv')
        # Getting the type of 'blossombestedges' (line 337)
        blossombestedges_901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 11), 'blossombestedges')
        # Obtaining the member '__getitem__' of a type (line 337)
        getitem___902 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 337, 11), blossombestedges_901, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 337)
        subscript_call_result_903 = invoke(stypy.reporting.localization.Localization(__file__, 337, 11), getitem___902, bv_900)
        
        # Getting the type of 'None' (line 337)
        None_904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 337, 35), 'None')
        
        (may_be_905, more_types_in_union_906) = may_be_none(subscript_call_result_903, None_904)

        if may_be_905:

            if more_types_in_union_906:
                # Runtime conditional SSA (line 337)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
            else:
                module_type_store = module_type_store

            
            # Assigning a ListComp to a Name (line 340):
            
            # Assigning a ListComp to a Name (line 340):
            # Calculating list comprehension
            # Calculating comprehension expression
            
            # Call to blossomLeaves(...): (line 341)
            # Processing the call arguments (line 341)
            # Getting the type of 'bv' (line 341)
            bv_917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 46), 'bv', False)
            # Processing the call keyword arguments (line 341)
            kwargs_918 = {}
            # Getting the type of 'blossomLeaves' (line 341)
            blossomLeaves_916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 32), 'blossomLeaves', False)
            # Calling blossomLeaves(args, kwargs) (line 341)
            blossomLeaves_call_result_919 = invoke(stypy.reporting.localization.Localization(__file__, 341, 32), blossomLeaves_916, *[bv_917], **kwargs_918)
            
            comprehension_920 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 23), blossomLeaves_call_result_919)
            # Assigning a type to the variable 'v' (line 340)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 23), 'v', comprehension_920)
            # Calculating list comprehension
            # Calculating comprehension expression
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 340)
            v_910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 50), 'v')
            # Getting the type of 'neighbend' (line 340)
            neighbend_911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 40), 'neighbend')
            # Obtaining the member '__getitem__' of a type (line 340)
            getitem___912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 40), neighbend_911, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 340)
            subscript_call_result_913 = invoke(stypy.reporting.localization.Localization(__file__, 340, 40), getitem___912, v_910)
            
            comprehension_914 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 24), subscript_call_result_913)
            # Assigning a type to the variable 'p' (line 340)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 24), 'p', comprehension_914)
            # Getting the type of 'p' (line 340)
            p_907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 24), 'p')
            int_908 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 29), 'int')
            # Applying the binary operator '//' (line 340)
            result_floordiv_909 = python_operator(stypy.reporting.localization.Localization(__file__, 340, 24), '//', p_907, int_908)
            
            list_915 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 24), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 24), list_915, result_floordiv_909)
            list_921 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 340, 23), 'list')
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 340, 23), list_921, list_915)
            # Assigning a type to the variable 'nblists' (line 340)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 12), 'nblists', list_921)

            if more_types_in_union_906:
                # Runtime conditional SSA for else branch (line 337)
                module_type_store.open_ssa_branch('idiom else')



        if ((not may_be_905) or more_types_in_union_906):
            
            # Assigning a List to a Name (line 344):
            
            # Assigning a List to a Name (line 344):
            
            # Obtaining an instance of the builtin type 'list' (line 344)
            list_922 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 344, 22), 'list')
            # Adding type elements to the builtin type 'list' instance (line 344)
            # Adding element type (line 344)
            
            # Obtaining the type of the subscript
            # Getting the type of 'bv' (line 344)
            bv_923 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 40), 'bv')
            # Getting the type of 'blossombestedges' (line 344)
            blossombestedges_924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 23), 'blossombestedges')
            # Obtaining the member '__getitem__' of a type (line 344)
            getitem___925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 23), blossombestedges_924, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 344)
            subscript_call_result_926 = invoke(stypy.reporting.localization.Localization(__file__, 344, 23), getitem___925, bv_923)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 344, 22), list_922, subscript_call_result_926)
            
            # Assigning a type to the variable 'nblists' (line 344)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 344, 12), 'nblists', list_922)

            if (may_be_905 and more_types_in_union_906):
                # SSA join for if statement (line 337)
                module_type_store = module_type_store.join_ssa_context()


        
        
        # Getting the type of 'nblists' (line 345)
        nblists_927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 345, 22), 'nblists')
        # Testing if the for loop is going to be iterated (line 345)
        # Testing the type of a for loop iterable (line 345)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 345, 8), nblists_927)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 345, 8), nblists_927):
            # Getting the type of the for loop variable (line 345)
            for_loop_var_928 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 345, 8), nblists_927)
            # Assigning a type to the variable 'nblist' (line 345)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 345, 8), 'nblist', for_loop_var_928)
            # SSA begins for a for statement (line 345)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Getting the type of 'nblist' (line 346)
            nblist_929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 346, 21), 'nblist')
            # Testing if the for loop is going to be iterated (line 346)
            # Testing the type of a for loop iterable (line 346)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 346, 12), nblist_929)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 346, 12), nblist_929):
                # Getting the type of the for loop variable (line 346)
                for_loop_var_930 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 346, 12), nblist_929)
                # Assigning a type to the variable 'k' (line 346)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 346, 12), 'k', for_loop_var_930)
                # SSA begins for a for statement (line 346)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Assigning a Subscript to a Tuple (line 347):
                
                # Assigning a Subscript to a Name (line 347):
                
                # Obtaining the type of the subscript
                int_931 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 16), 'int')
                
                # Obtaining the type of the subscript
                # Getting the type of 'k' (line 347)
                k_932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 35), 'k')
                # Getting the type of 'edges' (line 347)
                edges_933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 29), 'edges')
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 29), edges_933, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_935 = invoke(stypy.reporting.localization.Localization(__file__, 347, 29), getitem___934, k_932)
                
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 16), subscript_call_result_935, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_937 = invoke(stypy.reporting.localization.Localization(__file__, 347, 16), getitem___936, int_931)
                
                # Assigning a type to the variable 'tuple_var_assignment_12' (line 347)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 16), 'tuple_var_assignment_12', subscript_call_result_937)
                
                # Assigning a Subscript to a Name (line 347):
                
                # Obtaining the type of the subscript
                int_938 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 16), 'int')
                
                # Obtaining the type of the subscript
                # Getting the type of 'k' (line 347)
                k_939 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 35), 'k')
                # Getting the type of 'edges' (line 347)
                edges_940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 29), 'edges')
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 29), edges_940, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_942 = invoke(stypy.reporting.localization.Localization(__file__, 347, 29), getitem___941, k_939)
                
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___943 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 16), subscript_call_result_942, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_944 = invoke(stypy.reporting.localization.Localization(__file__, 347, 16), getitem___943, int_938)
                
                # Assigning a type to the variable 'tuple_var_assignment_13' (line 347)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 16), 'tuple_var_assignment_13', subscript_call_result_944)
                
                # Assigning a Subscript to a Name (line 347):
                
                # Obtaining the type of the subscript
                int_945 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 16), 'int')
                
                # Obtaining the type of the subscript
                # Getting the type of 'k' (line 347)
                k_946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 35), 'k')
                # Getting the type of 'edges' (line 347)
                edges_947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 29), 'edges')
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 29), edges_947, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_949 = invoke(stypy.reporting.localization.Localization(__file__, 347, 29), getitem___948, k_946)
                
                # Obtaining the member '__getitem__' of a type (line 347)
                getitem___950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 347, 16), subscript_call_result_949, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 347)
                subscript_call_result_951 = invoke(stypy.reporting.localization.Localization(__file__, 347, 16), getitem___950, int_945)
                
                # Assigning a type to the variable 'tuple_var_assignment_14' (line 347)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 16), 'tuple_var_assignment_14', subscript_call_result_951)
                
                # Assigning a Name to a Name (line 347):
                # Getting the type of 'tuple_var_assignment_12' (line 347)
                tuple_var_assignment_12_952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 16), 'tuple_var_assignment_12')
                # Assigning a type to the variable 'i' (line 347)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 17), 'i', tuple_var_assignment_12_952)
                
                # Assigning a Name to a Name (line 347):
                # Getting the type of 'tuple_var_assignment_13' (line 347)
                tuple_var_assignment_13_953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 16), 'tuple_var_assignment_13')
                # Assigning a type to the variable 'j' (line 347)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 20), 'j', tuple_var_assignment_13_953)
                
                # Assigning a Name to a Name (line 347):
                # Getting the type of 'tuple_var_assignment_14' (line 347)
                tuple_var_assignment_14_954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 347, 16), 'tuple_var_assignment_14')
                # Assigning a type to the variable 'wt' (line 347)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 23), 'wt', tuple_var_assignment_14_954)
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'j' (line 348)
                j_955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 29), 'j')
                # Getting the type of 'inblossom' (line 348)
                inblossom_956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 19), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 348)
                getitem___957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 19), inblossom_956, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 348)
                subscript_call_result_958 = invoke(stypy.reporting.localization.Localization(__file__, 348, 19), getitem___957, j_955)
                
                # Getting the type of 'b' (line 348)
                b_959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 35), 'b')
                # Applying the binary operator '==' (line 348)
                result_eq_960 = python_operator(stypy.reporting.localization.Localization(__file__, 348, 19), '==', subscript_call_result_958, b_959)
                
                # Testing if the type of an if condition is none (line 348)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 348, 16), result_eq_960):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 348)
                    if_condition_961 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 348, 16), result_eq_960)
                    # Assigning a type to the variable 'if_condition_961' (line 348)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 16), 'if_condition_961', if_condition_961)
                    # SSA begins for if statement (line 348)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a Tuple to a Tuple (line 349):
                    
                    # Assigning a Name to a Name (line 349):
                    # Getting the type of 'j' (line 349)
                    j_962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 27), 'j')
                    # Assigning a type to the variable 'tuple_assignment_15' (line 349)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 20), 'tuple_assignment_15', j_962)
                    
                    # Assigning a Name to a Name (line 349):
                    # Getting the type of 'i' (line 349)
                    i_963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 30), 'i')
                    # Assigning a type to the variable 'tuple_assignment_16' (line 349)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 20), 'tuple_assignment_16', i_963)
                    
                    # Assigning a Name to a Name (line 349):
                    # Getting the type of 'tuple_assignment_15' (line 349)
                    tuple_assignment_15_964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 20), 'tuple_assignment_15')
                    # Assigning a type to the variable 'i' (line 349)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 20), 'i', tuple_assignment_15_964)
                    
                    # Assigning a Name to a Name (line 349):
                    # Getting the type of 'tuple_assignment_16' (line 349)
                    tuple_assignment_16_965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 20), 'tuple_assignment_16')
                    # Assigning a type to the variable 'j' (line 349)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 349, 23), 'j', tuple_assignment_16_965)
                    # SSA join for if statement (line 348)
                    module_type_store = module_type_store.join_ssa_context()
                    

                
                # Assigning a Subscript to a Name (line 350):
                
                # Assigning a Subscript to a Name (line 350):
                
                # Obtaining the type of the subscript
                # Getting the type of 'j' (line 350)
                j_966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 31), 'j')
                # Getting the type of 'inblossom' (line 350)
                inblossom_967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 350, 21), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 350)
                getitem___968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 350, 21), inblossom_967, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 350)
                subscript_call_result_969 = invoke(stypy.reporting.localization.Localization(__file__, 350, 21), getitem___968, j_966)
                
                # Assigning a type to the variable 'bj' (line 350)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 350, 16), 'bj', subscript_call_result_969)
                
                # Evaluating a boolean operation
                
                # Getting the type of 'bj' (line 351)
                bj_970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 20), 'bj')
                # Getting the type of 'b' (line 351)
                b_971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 26), 'b')
                # Applying the binary operator '!=' (line 351)
                result_ne_972 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 20), '!=', bj_970, b_971)
                
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'bj' (line 351)
                bj_973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 38), 'bj')
                # Getting the type of 'label' (line 351)
                label_974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 351, 32), 'label')
                # Obtaining the member '__getitem__' of a type (line 351)
                getitem___975 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 351, 32), label_974, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 351)
                subscript_call_result_976 = invoke(stypy.reporting.localization.Localization(__file__, 351, 32), getitem___975, bj_973)
                
                int_977 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 351, 45), 'int')
                # Applying the binary operator '==' (line 351)
                result_eq_978 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 32), '==', subscript_call_result_976, int_977)
                
                # Applying the binary operator 'and' (line 351)
                result_and_keyword_979 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 20), 'and', result_ne_972, result_eq_978)
                
                # Evaluating a boolean operation
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'bj' (line 352)
                bj_980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 36), 'bj')
                # Getting the type of 'bestedgeto' (line 352)
                bestedgeto_981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 352, 25), 'bestedgeto')
                # Obtaining the member '__getitem__' of a type (line 352)
                getitem___982 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 352, 25), bestedgeto_981, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 352)
                subscript_call_result_983 = invoke(stypy.reporting.localization.Localization(__file__, 352, 25), getitem___982, bj_980)
                
                int_984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 43), 'int')
                # Applying the binary operator '==' (line 352)
                result_eq_985 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 25), '==', subscript_call_result_983, int_984)
                
                
                
                # Call to slack(...): (line 353)
                # Processing the call arguments (line 353)
                # Getting the type of 'k' (line 353)
                k_987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 31), 'k', False)
                # Processing the call keyword arguments (line 353)
                kwargs_988 = {}
                # Getting the type of 'slack' (line 353)
                slack_986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 25), 'slack', False)
                # Calling slack(args, kwargs) (line 353)
                slack_call_result_989 = invoke(stypy.reporting.localization.Localization(__file__, 353, 25), slack_986, *[k_987], **kwargs_988)
                
                
                # Call to slack(...): (line 353)
                # Processing the call arguments (line 353)
                
                # Obtaining the type of the subscript
                # Getting the type of 'bj' (line 353)
                bj_991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 53), 'bj', False)
                # Getting the type of 'bestedgeto' (line 353)
                bestedgeto_992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 42), 'bestedgeto', False)
                # Obtaining the member '__getitem__' of a type (line 353)
                getitem___993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 42), bestedgeto_992, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 353)
                subscript_call_result_994 = invoke(stypy.reporting.localization.Localization(__file__, 353, 42), getitem___993, bj_991)
                
                # Processing the call keyword arguments (line 353)
                kwargs_995 = {}
                # Getting the type of 'slack' (line 353)
                slack_990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 36), 'slack', False)
                # Calling slack(args, kwargs) (line 353)
                slack_call_result_996 = invoke(stypy.reporting.localization.Localization(__file__, 353, 36), slack_990, *[subscript_call_result_994], **kwargs_995)
                
                # Applying the binary operator '<' (line 353)
                result_lt_997 = python_operator(stypy.reporting.localization.Localization(__file__, 353, 25), '<', slack_call_result_989, slack_call_result_996)
                
                # Applying the binary operator 'or' (line 352)
                result_or_keyword_998 = python_operator(stypy.reporting.localization.Localization(__file__, 352, 25), 'or', result_eq_985, result_lt_997)
                
                # Applying the binary operator 'and' (line 351)
                result_and_keyword_999 = python_operator(stypy.reporting.localization.Localization(__file__, 351, 20), 'and', result_and_keyword_979, result_or_keyword_998)
                
                # Testing if the type of an if condition is none (line 351)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 351, 16), result_and_keyword_999):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 351)
                    if_condition_1000 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 351, 16), result_and_keyword_999)
                    # Assigning a type to the variable 'if_condition_1000' (line 351)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 351, 16), 'if_condition_1000', if_condition_1000)
                    # SSA begins for if statement (line 351)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a Name to a Subscript (line 354):
                    
                    # Assigning a Name to a Subscript (line 354):
                    # Getting the type of 'k' (line 354)
                    k_1001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 37), 'k')
                    # Getting the type of 'bestedgeto' (line 354)
                    bestedgeto_1002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 20), 'bestedgeto')
                    # Getting the type of 'bj' (line 354)
                    bj_1003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 354, 31), 'bj')
                    # Storing an element on a container (line 354)
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 354, 20), bestedgeto_1002, (bj_1003, k_1001))
                    # SSA join for if statement (line 351)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Name to a Subscript (line 356):
        
        # Assigning a Name to a Subscript (line 356):
        # Getting the type of 'None' (line 356)
        None_1004 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 31), 'None')
        # Getting the type of 'blossombestedges' (line 356)
        blossombestedges_1005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 8), 'blossombestedges')
        # Getting the type of 'bv' (line 356)
        bv_1006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 25), 'bv')
        # Storing an element on a container (line 356)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 356, 8), blossombestedges_1005, (bv_1006, None_1004))
        
        # Assigning a Num to a Subscript (line 357):
        
        # Assigning a Num to a Subscript (line 357):
        int_1007 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 357, 23), 'int')
        # Getting the type of 'bestedge' (line 357)
        bestedge_1008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 8), 'bestedge')
        # Getting the type of 'bv' (line 357)
        bv_1009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 17), 'bv')
        # Storing an element on a container (line 357)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 357, 8), bestedge_1008, (bv_1009, int_1007))
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Assigning a ListComp to a Subscript (line 358):
    
    # Assigning a ListComp to a Subscript (line 358):
    # Calculating list comprehension
    # Calculating comprehension expression
    # Getting the type of 'bestedgeto' (line 358)
    bestedgeto_1014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 38), 'bestedgeto')
    comprehension_1015 = get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 27), bestedgeto_1014)
    # Assigning a type to the variable 'k' (line 358)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 358, 27), 'k', comprehension_1015)
    
    # Getting the type of 'k' (line 358)
    k_1011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 52), 'k')
    int_1012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 57), 'int')
    # Applying the binary operator '!=' (line 358)
    result_ne_1013 = python_operator(stypy.reporting.localization.Localization(__file__, 358, 52), '!=', k_1011, int_1012)
    
    # Getting the type of 'k' (line 358)
    k_1010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 27), 'k')
    list_1016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 358, 27), 'list')
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 27), list_1016, k_1010)
    # Getting the type of 'blossombestedges' (line 358)
    blossombestedges_1017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 4), 'blossombestedges')
    # Getting the type of 'b' (line 358)
    b_1018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 21), 'b')
    # Storing an element on a container (line 358)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 358, 4), blossombestedges_1017, (b_1018, list_1016))
    
    # Assigning a Num to a Subscript (line 360):
    
    # Assigning a Num to a Subscript (line 360):
    int_1019 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 360, 18), 'int')
    # Getting the type of 'bestedge' (line 360)
    bestedge_1020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 4), 'bestedge')
    # Getting the type of 'b' (line 360)
    b_1021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 360, 13), 'b')
    # Storing an element on a container (line 360)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 360, 4), bestedge_1020, (b_1021, int_1019))
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 361)
    b_1022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 30), 'b')
    # Getting the type of 'blossombestedges' (line 361)
    blossombestedges_1023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 361, 13), 'blossombestedges')
    # Obtaining the member '__getitem__' of a type (line 361)
    getitem___1024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 361, 13), blossombestedges_1023, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 361)
    subscript_call_result_1025 = invoke(stypy.reporting.localization.Localization(__file__, 361, 13), getitem___1024, b_1022)
    
    # Testing if the for loop is going to be iterated (line 361)
    # Testing the type of a for loop iterable (line 361)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 361, 4), subscript_call_result_1025)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 361, 4), subscript_call_result_1025):
        # Getting the type of the for loop variable (line 361)
        for_loop_var_1026 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 361, 4), subscript_call_result_1025)
        # Assigning a type to the variable 'k' (line 361)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 361, 4), 'k', for_loop_var_1026)
        # SSA begins for a for statement (line 361)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 362)
        b_1027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 20), 'b')
        # Getting the type of 'bestedge' (line 362)
        bestedge_1028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 11), 'bestedge')
        # Obtaining the member '__getitem__' of a type (line 362)
        getitem___1029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 11), bestedge_1028, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 362)
        subscript_call_result_1030 = invoke(stypy.reporting.localization.Localization(__file__, 362, 11), getitem___1029, b_1027)
        
        int_1031 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 362, 26), 'int')
        # Applying the binary operator '==' (line 362)
        result_eq_1032 = python_operator(stypy.reporting.localization.Localization(__file__, 362, 11), '==', subscript_call_result_1030, int_1031)
        
        
        
        # Call to slack(...): (line 362)
        # Processing the call arguments (line 362)
        # Getting the type of 'k' (line 362)
        k_1034 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 38), 'k', False)
        # Processing the call keyword arguments (line 362)
        kwargs_1035 = {}
        # Getting the type of 'slack' (line 362)
        slack_1033 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 32), 'slack', False)
        # Calling slack(args, kwargs) (line 362)
        slack_call_result_1036 = invoke(stypy.reporting.localization.Localization(__file__, 362, 32), slack_1033, *[k_1034], **kwargs_1035)
        
        
        # Call to slack(...): (line 362)
        # Processing the call arguments (line 362)
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 362)
        b_1038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 58), 'b', False)
        # Getting the type of 'bestedge' (line 362)
        bestedge_1039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 49), 'bestedge', False)
        # Obtaining the member '__getitem__' of a type (line 362)
        getitem___1040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 49), bestedge_1039, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 362)
        subscript_call_result_1041 = invoke(stypy.reporting.localization.Localization(__file__, 362, 49), getitem___1040, b_1038)
        
        # Processing the call keyword arguments (line 362)
        kwargs_1042 = {}
        # Getting the type of 'slack' (line 362)
        slack_1037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 43), 'slack', False)
        # Calling slack(args, kwargs) (line 362)
        slack_call_result_1043 = invoke(stypy.reporting.localization.Localization(__file__, 362, 43), slack_1037, *[subscript_call_result_1041], **kwargs_1042)
        
        # Applying the binary operator '<' (line 362)
        result_lt_1044 = python_operator(stypy.reporting.localization.Localization(__file__, 362, 32), '<', slack_call_result_1036, slack_call_result_1043)
        
        # Applying the binary operator 'or' (line 362)
        result_or_keyword_1045 = python_operator(stypy.reporting.localization.Localization(__file__, 362, 11), 'or', result_eq_1032, result_lt_1044)
        
        # Testing if the type of an if condition is none (line 362)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 362, 8), result_or_keyword_1045):
            pass
        else:
            
            # Testing the type of an if condition (line 362)
            if_condition_1046 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 362, 8), result_or_keyword_1045)
            # Assigning a type to the variable 'if_condition_1046' (line 362)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 8), 'if_condition_1046', if_condition_1046)
            # SSA begins for if statement (line 362)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a Subscript (line 363):
            
            # Assigning a Name to a Subscript (line 363):
            # Getting the type of 'k' (line 363)
            k_1047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 26), 'k')
            # Getting the type of 'bestedge' (line 363)
            bestedge_1048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 12), 'bestedge')
            # Getting the type of 'b' (line 363)
            b_1049 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 21), 'b')
            # Storing an element on a container (line 363)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 363, 12), bestedge_1048, (b_1049, k_1047))
            # SSA join for if statement (line 362)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    # Getting the type of 'DEBUG' (line 364)
    DEBUG_1050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 364)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 364, 4), DEBUG_1050):
        pass
    else:
        
        # Testing the type of an if condition (line 364)
        if_condition_1051 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 364, 4), DEBUG_1050)
        # Assigning a type to the variable 'if_condition_1051' (line 364)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 364, 4), 'if_condition_1051', if_condition_1051)
        # SSA begins for if statement (line 364)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 364)
        # Processing the call arguments (line 364)
        str_1053 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 20), 'str', 'blossomchilds[%d]=')
        # Getting the type of 'b' (line 364)
        b_1054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 43), 'b', False)
        # Applying the binary operator '%' (line 364)
        result_mod_1055 = python_operator(stypy.reporting.localization.Localization(__file__, 364, 20), '%', str_1053, b_1054)
        
        
        # Call to repr(...): (line 364)
        # Processing the call arguments (line 364)
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 364)
        b_1057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 66), 'b', False)
        # Getting the type of 'blossomchilds' (line 364)
        blossomchilds_1058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 52), 'blossomchilds', False)
        # Obtaining the member '__getitem__' of a type (line 364)
        getitem___1059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 52), blossomchilds_1058, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 364)
        subscript_call_result_1060 = invoke(stypy.reporting.localization.Localization(__file__, 364, 52), getitem___1059, b_1057)
        
        # Processing the call keyword arguments (line 364)
        kwargs_1061 = {}
        # Getting the type of 'repr' (line 364)
        repr_1056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 47), 'repr', False)
        # Calling repr(args, kwargs) (line 364)
        repr_call_result_1062 = invoke(stypy.reporting.localization.Localization(__file__, 364, 47), repr_1056, *[subscript_call_result_1060], **kwargs_1061)
        
        # Applying the binary operator '+' (line 364)
        result_add_1063 = python_operator(stypy.reporting.localization.Localization(__file__, 364, 20), '+', result_mod_1055, repr_call_result_1062)
        
        # Processing the call keyword arguments (line 364)
        kwargs_1064 = {}
        # Getting the type of 'DEBUG' (line 364)
        DEBUG_1052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 364)
        DEBUG_call_result_1065 = invoke(stypy.reporting.localization.Localization(__file__, 364, 14), DEBUG_1052, *[result_add_1063], **kwargs_1064)
        
        # SSA join for if statement (line 364)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # ################# End of 'addBlossom(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'addBlossom' in the type store
    # Getting the type of 'stypy_return_type' (line 278)
    stypy_return_type_1066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_1066)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'addBlossom'
    return stypy_return_type_1066

# Assigning a type to the variable 'addBlossom' (line 278)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 0), 'addBlossom', addBlossom)

@norecursion
def expandBlossom(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'expandBlossom'
    module_type_store = module_type_store.open_function_context('expandBlossom', 368, 0, False)
    
    # Passed parameters checking function
    expandBlossom.stypy_localization = localization
    expandBlossom.stypy_type_of_self = None
    expandBlossom.stypy_type_store = module_type_store
    expandBlossom.stypy_function_name = 'expandBlossom'
    expandBlossom.stypy_param_names_list = ['b', 'endstage']
    expandBlossom.stypy_varargs_param_name = None
    expandBlossom.stypy_kwargs_param_name = None
    expandBlossom.stypy_call_defaults = defaults
    expandBlossom.stypy_call_varargs = varargs
    expandBlossom.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'expandBlossom', ['b', 'endstage'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'expandBlossom', localization, ['b', 'endstage'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'expandBlossom(...)' code ##################

    # Getting the type of 'DEBUG' (line 369)
    DEBUG_1067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 369)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 369, 4), DEBUG_1067):
        pass
    else:
        
        # Testing the type of an if condition (line 369)
        if_condition_1068 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 369, 4), DEBUG_1067)
        # Assigning a type to the variable 'if_condition_1068' (line 369)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 369, 4), 'if_condition_1068', if_condition_1068)
        # SSA begins for if statement (line 369)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 369)
        # Processing the call arguments (line 369)
        str_1070 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 369, 20), 'str', 'expandBlossom(%d,%d) %s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 369)
        tuple_1071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 369, 49), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 369)
        # Adding element type (line 369)
        # Getting the type of 'b' (line 369)
        b_1072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 49), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 49), tuple_1071, b_1072)
        # Adding element type (line 369)
        # Getting the type of 'endstage' (line 369)
        endstage_1073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 52), 'endstage', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 49), tuple_1071, endstage_1073)
        # Adding element type (line 369)
        
        # Call to repr(...): (line 369)
        # Processing the call arguments (line 369)
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 369)
        b_1075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 81), 'b', False)
        # Getting the type of 'blossomchilds' (line 369)
        blossomchilds_1076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 67), 'blossomchilds', False)
        # Obtaining the member '__getitem__' of a type (line 369)
        getitem___1077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 369, 67), blossomchilds_1076, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 369)
        subscript_call_result_1078 = invoke(stypy.reporting.localization.Localization(__file__, 369, 67), getitem___1077, b_1075)
        
        # Processing the call keyword arguments (line 369)
        kwargs_1079 = {}
        # Getting the type of 'repr' (line 369)
        repr_1074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 62), 'repr', False)
        # Calling repr(args, kwargs) (line 369)
        repr_call_result_1080 = invoke(stypy.reporting.localization.Localization(__file__, 369, 62), repr_1074, *[subscript_call_result_1078], **kwargs_1079)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 369, 49), tuple_1071, repr_call_result_1080)
        
        # Applying the binary operator '%' (line 369)
        result_mod_1081 = python_operator(stypy.reporting.localization.Localization(__file__, 369, 20), '%', str_1070, tuple_1071)
        
        # Processing the call keyword arguments (line 369)
        kwargs_1082 = {}
        # Getting the type of 'DEBUG' (line 369)
        DEBUG_1069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 369, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 369)
        DEBUG_call_result_1083 = invoke(stypy.reporting.localization.Localization(__file__, 369, 14), DEBUG_1069, *[result_mod_1081], **kwargs_1082)
        
        # SSA join for if statement (line 369)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 371)
    b_1084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 27), 'b')
    # Getting the type of 'blossomchilds' (line 371)
    blossomchilds_1085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 13), 'blossomchilds')
    # Obtaining the member '__getitem__' of a type (line 371)
    getitem___1086 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 371, 13), blossomchilds_1085, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 371)
    subscript_call_result_1087 = invoke(stypy.reporting.localization.Localization(__file__, 371, 13), getitem___1086, b_1084)
    
    # Testing if the for loop is going to be iterated (line 371)
    # Testing the type of a for loop iterable (line 371)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 371, 4), subscript_call_result_1087)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 371, 4), subscript_call_result_1087):
        # Getting the type of the for loop variable (line 371)
        for_loop_var_1088 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 371, 4), subscript_call_result_1087)
        # Assigning a type to the variable 's' (line 371)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 371, 4), 's', for_loop_var_1088)
        # SSA begins for a for statement (line 371)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Num to a Subscript (line 372):
        
        # Assigning a Num to a Subscript (line 372):
        int_1089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 27), 'int')
        # Getting the type of 'blossomparent' (line 372)
        blossomparent_1090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 8), 'blossomparent')
        # Getting the type of 's' (line 372)
        s_1091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 22), 's')
        # Storing an element on a container (line 372)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 372, 8), blossomparent_1090, (s_1091, int_1089))
        
        # Getting the type of 's' (line 373)
        s_1092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 11), 's')
        # Getting the type of 'nvertex' (line 373)
        nvertex_1093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 15), 'nvertex')
        # Applying the binary operator '<' (line 373)
        result_lt_1094 = python_operator(stypy.reporting.localization.Localization(__file__, 373, 11), '<', s_1092, nvertex_1093)
        
        # Testing if the type of an if condition is none (line 373)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 373, 8), result_lt_1094):
            
            # Evaluating a boolean operation
            # Getting the type of 'endstage' (line 375)
            endstage_1099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 13), 'endstage')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 's' (line 375)
            s_1100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 's')
            # Getting the type of 'dualvar' (line 375)
            dualvar_1101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 26), 'dualvar')
            # Obtaining the member '__getitem__' of a type (line 375)
            getitem___1102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 26), dualvar_1101, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 375)
            subscript_call_result_1103 = invoke(stypy.reporting.localization.Localization(__file__, 375, 26), getitem___1102, s_1100)
            
            int_1104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 40), 'int')
            # Applying the binary operator '==' (line 375)
            result_eq_1105 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 26), '==', subscript_call_result_1103, int_1104)
            
            # Applying the binary operator 'and' (line 375)
            result_and_keyword_1106 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 13), 'and', endstage_1099, result_eq_1105)
            
            # Testing if the type of an if condition is none (line 375)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 375, 13), result_and_keyword_1106):
                
                
                # Call to blossomLeaves(...): (line 379)
                # Processing the call arguments (line 379)
                # Getting the type of 's' (line 379)
                s_1114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 35), 's', False)
                # Processing the call keyword arguments (line 379)
                kwargs_1115 = {}
                # Getting the type of 'blossomLeaves' (line 379)
                blossomLeaves_1113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 21), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 379)
                blossomLeaves_call_result_1116 = invoke(stypy.reporting.localization.Localization(__file__, 379, 21), blossomLeaves_1113, *[s_1114], **kwargs_1115)
                
                # Testing if the for loop is going to be iterated (line 379)
                # Testing the type of a for loop iterable (line 379)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116):
                    # Getting the type of the for loop variable (line 379)
                    for_loop_var_1117 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)
                    # Assigning a type to the variable 'v' (line 379)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'v', for_loop_var_1117)
                    # SSA begins for a for statement (line 379)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Assigning a Name to a Subscript (line 380):
                    
                    # Assigning a Name to a Subscript (line 380):
                    # Getting the type of 's' (line 380)
                    s_1118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 31), 's')
                    # Getting the type of 'inblossom' (line 380)
                    inblossom_1119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 16), 'inblossom')
                    # Getting the type of 'v' (line 380)
                    v_1120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 26), 'v')
                    # Storing an element on a container (line 380)
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 380, 16), inblossom_1119, (v_1120, s_1118))
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
            else:
                
                # Testing the type of an if condition (line 375)
                if_condition_1107 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 375, 13), result_and_keyword_1106)
                # Assigning a type to the variable 'if_condition_1107' (line 375)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 13), 'if_condition_1107', if_condition_1107)
                # SSA begins for if statement (line 375)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to expandBlossom(...): (line 377)
                # Processing the call arguments (line 377)
                # Getting the type of 's' (line 377)
                s_1109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 26), 's', False)
                # Getting the type of 'endstage' (line 377)
                endstage_1110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 29), 'endstage', False)
                # Processing the call keyword arguments (line 377)
                kwargs_1111 = {}
                # Getting the type of 'expandBlossom' (line 377)
                expandBlossom_1108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'expandBlossom', False)
                # Calling expandBlossom(args, kwargs) (line 377)
                expandBlossom_call_result_1112 = invoke(stypy.reporting.localization.Localization(__file__, 377, 12), expandBlossom_1108, *[s_1109, endstage_1110], **kwargs_1111)
                
                # SSA branch for the else part of an if statement (line 375)
                module_type_store.open_ssa_branch('else')
                
                
                # Call to blossomLeaves(...): (line 379)
                # Processing the call arguments (line 379)
                # Getting the type of 's' (line 379)
                s_1114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 35), 's', False)
                # Processing the call keyword arguments (line 379)
                kwargs_1115 = {}
                # Getting the type of 'blossomLeaves' (line 379)
                blossomLeaves_1113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 21), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 379)
                blossomLeaves_call_result_1116 = invoke(stypy.reporting.localization.Localization(__file__, 379, 21), blossomLeaves_1113, *[s_1114], **kwargs_1115)
                
                # Testing if the for loop is going to be iterated (line 379)
                # Testing the type of a for loop iterable (line 379)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116):
                    # Getting the type of the for loop variable (line 379)
                    for_loop_var_1117 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)
                    # Assigning a type to the variable 'v' (line 379)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'v', for_loop_var_1117)
                    # SSA begins for a for statement (line 379)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Assigning a Name to a Subscript (line 380):
                    
                    # Assigning a Name to a Subscript (line 380):
                    # Getting the type of 's' (line 380)
                    s_1118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 31), 's')
                    # Getting the type of 'inblossom' (line 380)
                    inblossom_1119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 16), 'inblossom')
                    # Getting the type of 'v' (line 380)
                    v_1120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 26), 'v')
                    # Storing an element on a container (line 380)
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 380, 16), inblossom_1119, (v_1120, s_1118))
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                # SSA join for if statement (line 375)
                module_type_store = module_type_store.join_ssa_context()
                

        else:
            
            # Testing the type of an if condition (line 373)
            if_condition_1095 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 373, 8), result_lt_1094)
            # Assigning a type to the variable 'if_condition_1095' (line 373)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 373, 8), 'if_condition_1095', if_condition_1095)
            # SSA begins for if statement (line 373)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Name to a Subscript (line 374):
            
            # Assigning a Name to a Subscript (line 374):
            # Getting the type of 's' (line 374)
            s_1096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 27), 's')
            # Getting the type of 'inblossom' (line 374)
            inblossom_1097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 12), 'inblossom')
            # Getting the type of 's' (line 374)
            s_1098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 374, 22), 's')
            # Storing an element on a container (line 374)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 374, 12), inblossom_1097, (s_1098, s_1096))
            # SSA branch for the else part of an if statement (line 373)
            module_type_store.open_ssa_branch('else')
            
            # Evaluating a boolean operation
            # Getting the type of 'endstage' (line 375)
            endstage_1099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 13), 'endstage')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 's' (line 375)
            s_1100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 's')
            # Getting the type of 'dualvar' (line 375)
            dualvar_1101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 26), 'dualvar')
            # Obtaining the member '__getitem__' of a type (line 375)
            getitem___1102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 375, 26), dualvar_1101, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 375)
            subscript_call_result_1103 = invoke(stypy.reporting.localization.Localization(__file__, 375, 26), getitem___1102, s_1100)
            
            int_1104 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 375, 40), 'int')
            # Applying the binary operator '==' (line 375)
            result_eq_1105 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 26), '==', subscript_call_result_1103, int_1104)
            
            # Applying the binary operator 'and' (line 375)
            result_and_keyword_1106 = python_operator(stypy.reporting.localization.Localization(__file__, 375, 13), 'and', endstage_1099, result_eq_1105)
            
            # Testing if the type of an if condition is none (line 375)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 375, 13), result_and_keyword_1106):
                
                
                # Call to blossomLeaves(...): (line 379)
                # Processing the call arguments (line 379)
                # Getting the type of 's' (line 379)
                s_1114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 35), 's', False)
                # Processing the call keyword arguments (line 379)
                kwargs_1115 = {}
                # Getting the type of 'blossomLeaves' (line 379)
                blossomLeaves_1113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 21), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 379)
                blossomLeaves_call_result_1116 = invoke(stypy.reporting.localization.Localization(__file__, 379, 21), blossomLeaves_1113, *[s_1114], **kwargs_1115)
                
                # Testing if the for loop is going to be iterated (line 379)
                # Testing the type of a for loop iterable (line 379)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116):
                    # Getting the type of the for loop variable (line 379)
                    for_loop_var_1117 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)
                    # Assigning a type to the variable 'v' (line 379)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'v', for_loop_var_1117)
                    # SSA begins for a for statement (line 379)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Assigning a Name to a Subscript (line 380):
                    
                    # Assigning a Name to a Subscript (line 380):
                    # Getting the type of 's' (line 380)
                    s_1118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 31), 's')
                    # Getting the type of 'inblossom' (line 380)
                    inblossom_1119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 16), 'inblossom')
                    # Getting the type of 'v' (line 380)
                    v_1120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 26), 'v')
                    # Storing an element on a container (line 380)
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 380, 16), inblossom_1119, (v_1120, s_1118))
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
            else:
                
                # Testing the type of an if condition (line 375)
                if_condition_1107 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 375, 13), result_and_keyword_1106)
                # Assigning a type to the variable 'if_condition_1107' (line 375)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 13), 'if_condition_1107', if_condition_1107)
                # SSA begins for if statement (line 375)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to expandBlossom(...): (line 377)
                # Processing the call arguments (line 377)
                # Getting the type of 's' (line 377)
                s_1109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 26), 's', False)
                # Getting the type of 'endstage' (line 377)
                endstage_1110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 29), 'endstage', False)
                # Processing the call keyword arguments (line 377)
                kwargs_1111 = {}
                # Getting the type of 'expandBlossom' (line 377)
                expandBlossom_1108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 377, 12), 'expandBlossom', False)
                # Calling expandBlossom(args, kwargs) (line 377)
                expandBlossom_call_result_1112 = invoke(stypy.reporting.localization.Localization(__file__, 377, 12), expandBlossom_1108, *[s_1109, endstage_1110], **kwargs_1111)
                
                # SSA branch for the else part of an if statement (line 375)
                module_type_store.open_ssa_branch('else')
                
                
                # Call to blossomLeaves(...): (line 379)
                # Processing the call arguments (line 379)
                # Getting the type of 's' (line 379)
                s_1114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 35), 's', False)
                # Processing the call keyword arguments (line 379)
                kwargs_1115 = {}
                # Getting the type of 'blossomLeaves' (line 379)
                blossomLeaves_1113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 21), 'blossomLeaves', False)
                # Calling blossomLeaves(args, kwargs) (line 379)
                blossomLeaves_call_result_1116 = invoke(stypy.reporting.localization.Localization(__file__, 379, 21), blossomLeaves_1113, *[s_1114], **kwargs_1115)
                
                # Testing if the for loop is going to be iterated (line 379)
                # Testing the type of a for loop iterable (line 379)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116):
                    # Getting the type of the for loop variable (line 379)
                    for_loop_var_1117 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 379, 12), blossomLeaves_call_result_1116)
                    # Assigning a type to the variable 'v' (line 379)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'v', for_loop_var_1117)
                    # SSA begins for a for statement (line 379)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Assigning a Name to a Subscript (line 380):
                    
                    # Assigning a Name to a Subscript (line 380):
                    # Getting the type of 's' (line 380)
                    s_1118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 31), 's')
                    # Getting the type of 'inblossom' (line 380)
                    inblossom_1119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 16), 'inblossom')
                    # Getting the type of 'v' (line 380)
                    v_1120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 26), 'v')
                    # Storing an element on a container (line 380)
                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 380, 16), inblossom_1119, (v_1120, s_1118))
                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                # SSA join for if statement (line 375)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for if statement (line 373)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Evaluating a boolean operation
    
    # Getting the type of 'endstage' (line 383)
    endstage_1121 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 12), 'endstage')
    # Applying the 'not' unary operator (line 383)
    result_not__1122 = python_operator(stypy.reporting.localization.Localization(__file__, 383, 8), 'not', endstage_1121)
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 383)
    b_1123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 32), 'b')
    # Getting the type of 'label' (line 383)
    label_1124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 383, 26), 'label')
    # Obtaining the member '__getitem__' of a type (line 383)
    getitem___1125 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 383, 26), label_1124, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 383)
    subscript_call_result_1126 = invoke(stypy.reporting.localization.Localization(__file__, 383, 26), getitem___1125, b_1123)
    
    int_1127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 383, 38), 'int')
    # Applying the binary operator '==' (line 383)
    result_eq_1128 = python_operator(stypy.reporting.localization.Localization(__file__, 383, 26), '==', subscript_call_result_1126, int_1127)
    
    # Applying the binary operator 'and' (line 383)
    result_and_keyword_1129 = python_operator(stypy.reporting.localization.Localization(__file__, 383, 7), 'and', result_not__1122, result_eq_1128)
    
    # Testing if the type of an if condition is none (line 383)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 383, 4), result_and_keyword_1129):
        pass
    else:
        
        # Testing the type of an if condition (line 383)
        if_condition_1130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 383, 4), result_and_keyword_1129)
        # Assigning a type to the variable 'if_condition_1130' (line 383)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 383, 4), 'if_condition_1130', if_condition_1130)
        # SSA begins for if statement (line 383)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        # Evaluating assert statement condition
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 389)
        b_1131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 24), 'b')
        # Getting the type of 'labelend' (line 389)
        labelend_1132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 389, 15), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 389)
        getitem___1133 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 389, 15), labelend_1132, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 389)
        subscript_call_result_1134 = invoke(stypy.reporting.localization.Localization(__file__, 389, 15), getitem___1133, b_1131)
        
        int_1135 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 30), 'int')
        # Applying the binary operator '>=' (line 389)
        result_ge_1136 = python_operator(stypy.reporting.localization.Localization(__file__, 389, 15), '>=', subscript_call_result_1134, int_1135)
        
        
        # Assigning a Subscript to a Name (line 390):
        
        # Assigning a Subscript to a Name (line 390):
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 390)
        b_1137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 49), 'b')
        # Getting the type of 'labelend' (line 390)
        labelend_1138 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 40), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 390)
        getitem___1139 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 40), labelend_1138, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 390)
        subscript_call_result_1140 = invoke(stypy.reporting.localization.Localization(__file__, 390, 40), getitem___1139, b_1137)
        
        int_1141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 390, 54), 'int')
        # Applying the binary operator '^' (line 390)
        result_xor_1142 = python_operator(stypy.reporting.localization.Localization(__file__, 390, 40), '^', subscript_call_result_1140, int_1141)
        
        # Getting the type of 'endpoint' (line 390)
        endpoint_1143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 31), 'endpoint')
        # Obtaining the member '__getitem__' of a type (line 390)
        getitem___1144 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 31), endpoint_1143, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 390)
        subscript_call_result_1145 = invoke(stypy.reporting.localization.Localization(__file__, 390, 31), getitem___1144, result_xor_1142)
        
        # Getting the type of 'inblossom' (line 390)
        inblossom_1146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 21), 'inblossom')
        # Obtaining the member '__getitem__' of a type (line 390)
        getitem___1147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 21), inblossom_1146, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 390)
        subscript_call_result_1148 = invoke(stypy.reporting.localization.Localization(__file__, 390, 21), getitem___1147, subscript_call_result_1145)
        
        # Assigning a type to the variable 'entrychild' (line 390)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 8), 'entrychild', subscript_call_result_1148)
        
        # Assigning a Call to a Name (line 392):
        
        # Assigning a Call to a Name (line 392):
        
        # Call to index(...): (line 392)
        # Processing the call arguments (line 392)
        # Getting the type of 'entrychild' (line 392)
        entrychild_1154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 35), 'entrychild', False)
        # Processing the call keyword arguments (line 392)
        kwargs_1155 = {}
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 392)
        b_1149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 26), 'b', False)
        # Getting the type of 'blossomchilds' (line 392)
        blossomchilds_1150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 12), 'blossomchilds', False)
        # Obtaining the member '__getitem__' of a type (line 392)
        getitem___1151 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 12), blossomchilds_1150, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 392)
        subscript_call_result_1152 = invoke(stypy.reporting.localization.Localization(__file__, 392, 12), getitem___1151, b_1149)
        
        # Obtaining the member 'index' of a type (line 392)
        index_1153 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 12), subscript_call_result_1152, 'index')
        # Calling index(args, kwargs) (line 392)
        index_call_result_1156 = invoke(stypy.reporting.localization.Localization(__file__, 392, 12), index_1153, *[entrychild_1154], **kwargs_1155)
        
        # Assigning a type to the variable 'j' (line 392)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 392, 8), 'j', index_call_result_1156)
        # Getting the type of 'j' (line 393)
        j_1157 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 11), 'j')
        int_1158 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 15), 'int')
        # Applying the binary operator '&' (line 393)
        result_and__1159 = python_operator(stypy.reporting.localization.Localization(__file__, 393, 11), '&', j_1157, int_1158)
        
        # Testing if the type of an if condition is none (line 393)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 393, 8), result_and__1159):
            
            # Assigning a Num to a Name (line 400):
            
            # Assigning a Num to a Name (line 400):
            int_1172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 20), 'int')
            # Assigning a type to the variable 'jstep' (line 400)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 12), 'jstep', int_1172)
            
            # Assigning a Num to a Name (line 401):
            
            # Assigning a Num to a Name (line 401):
            int_1173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 24), 'int')
            # Assigning a type to the variable 'endptrick' (line 401)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 12), 'endptrick', int_1173)
        else:
            
            # Testing the type of an if condition (line 393)
            if_condition_1160 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 393, 8), result_and__1159)
            # Assigning a type to the variable 'if_condition_1160' (line 393)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 393, 8), 'if_condition_1160', if_condition_1160)
            # SSA begins for if statement (line 393)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'j' (line 395)
            j_1161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 12), 'j')
            
            # Call to len(...): (line 395)
            # Processing the call arguments (line 395)
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 395)
            b_1163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 35), 'b', False)
            # Getting the type of 'blossomchilds' (line 395)
            blossomchilds_1164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 21), 'blossomchilds', False)
            # Obtaining the member '__getitem__' of a type (line 395)
            getitem___1165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 21), blossomchilds_1164, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 395)
            subscript_call_result_1166 = invoke(stypy.reporting.localization.Localization(__file__, 395, 21), getitem___1165, b_1163)
            
            # Processing the call keyword arguments (line 395)
            kwargs_1167 = {}
            # Getting the type of 'len' (line 395)
            len_1162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 17), 'len', False)
            # Calling len(args, kwargs) (line 395)
            len_call_result_1168 = invoke(stypy.reporting.localization.Localization(__file__, 395, 17), len_1162, *[subscript_call_result_1166], **kwargs_1167)
            
            # Applying the binary operator '-=' (line 395)
            result_isub_1169 = python_operator(stypy.reporting.localization.Localization(__file__, 395, 12), '-=', j_1161, len_call_result_1168)
            # Assigning a type to the variable 'j' (line 395)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 395, 12), 'j', result_isub_1169)
            
            
            # Assigning a Num to a Name (line 396):
            
            # Assigning a Num to a Name (line 396):
            int_1170 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 396, 20), 'int')
            # Assigning a type to the variable 'jstep' (line 396)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 396, 12), 'jstep', int_1170)
            
            # Assigning a Num to a Name (line 397):
            
            # Assigning a Num to a Name (line 397):
            int_1171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 397, 24), 'int')
            # Assigning a type to the variable 'endptrick' (line 397)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 12), 'endptrick', int_1171)
            # SSA branch for the else part of an if statement (line 393)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Num to a Name (line 400):
            
            # Assigning a Num to a Name (line 400):
            int_1172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 400, 20), 'int')
            # Assigning a type to the variable 'jstep' (line 400)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 400, 12), 'jstep', int_1172)
            
            # Assigning a Num to a Name (line 401):
            
            # Assigning a Num to a Name (line 401):
            int_1173 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 24), 'int')
            # Assigning a type to the variable 'endptrick' (line 401)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 12), 'endptrick', int_1173)
            # SSA join for if statement (line 393)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Subscript to a Name (line 403):
        
        # Assigning a Subscript to a Name (line 403):
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 403)
        b_1174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 21), 'b')
        # Getting the type of 'labelend' (line 403)
        labelend_1175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 12), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 403)
        getitem___1176 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 12), labelend_1175, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 403)
        subscript_call_result_1177 = invoke(stypy.reporting.localization.Localization(__file__, 403, 12), getitem___1176, b_1174)
        
        # Assigning a type to the variable 'p' (line 403)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 8), 'p', subscript_call_result_1177)
        
        
        # Getting the type of 'j' (line 404)
        j_1178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 14), 'j')
        int_1179 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 404, 19), 'int')
        # Applying the binary operator '!=' (line 404)
        result_ne_1180 = python_operator(stypy.reporting.localization.Localization(__file__, 404, 14), '!=', j_1178, int_1179)
        
        # Testing if the while is going to be iterated (line 404)
        # Testing the type of an if condition (line 404)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 404, 8), result_ne_1180)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 404, 8), result_ne_1180):
            # SSA begins for while statement (line 404)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Assigning a Num to a Subscript (line 406):
            
            # Assigning a Num to a Subscript (line 406):
            int_1181 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 406, 37), 'int')
            # Getting the type of 'label' (line 406)
            label_1182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 12), 'label')
            
            # Obtaining the type of the subscript
            # Getting the type of 'p' (line 406)
            p_1183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 27), 'p')
            int_1184 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 406, 31), 'int')
            # Applying the binary operator '^' (line 406)
            result_xor_1185 = python_operator(stypy.reporting.localization.Localization(__file__, 406, 27), '^', p_1183, int_1184)
            
            # Getting the type of 'endpoint' (line 406)
            endpoint_1186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 18), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 406)
            getitem___1187 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 18), endpoint_1186, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 406)
            subscript_call_result_1188 = invoke(stypy.reporting.localization.Localization(__file__, 406, 18), getitem___1187, result_xor_1185)
            
            # Storing an element on a container (line 406)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 406, 12), label_1182, (subscript_call_result_1188, int_1181))
            
            # Assigning a Num to a Subscript (line 407):
            
            # Assigning a Num to a Subscript (line 407):
            int_1189 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 78), 'int')
            # Getting the type of 'label' (line 407)
            label_1190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 12), 'label')
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'j' (line 407)
            j_1191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 43), 'j')
            # Getting the type of 'endptrick' (line 407)
            endptrick_1192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 47), 'endptrick')
            # Applying the binary operator '-' (line 407)
            result_sub_1193 = python_operator(stypy.reporting.localization.Localization(__file__, 407, 43), '-', j_1191, endptrick_1192)
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 407)
            b_1194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 40), 'b')
            # Getting the type of 'blossomendps' (line 407)
            blossomendps_1195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 27), 'blossomendps')
            # Obtaining the member '__getitem__' of a type (line 407)
            getitem___1196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 27), blossomendps_1195, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 407)
            subscript_call_result_1197 = invoke(stypy.reporting.localization.Localization(__file__, 407, 27), getitem___1196, b_1194)
            
            # Obtaining the member '__getitem__' of a type (line 407)
            getitem___1198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 27), subscript_call_result_1197, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 407)
            subscript_call_result_1199 = invoke(stypy.reporting.localization.Localization(__file__, 407, 27), getitem___1198, result_sub_1193)
            
            # Getting the type of 'endptrick' (line 407)
            endptrick_1200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 60), 'endptrick')
            # Applying the binary operator '^' (line 407)
            result_xor_1201 = python_operator(stypy.reporting.localization.Localization(__file__, 407, 27), '^', subscript_call_result_1199, endptrick_1200)
            
            int_1202 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 407, 72), 'int')
            # Applying the binary operator '^' (line 407)
            result_xor_1203 = python_operator(stypy.reporting.localization.Localization(__file__, 407, 70), '^', result_xor_1201, int_1202)
            
            # Getting the type of 'endpoint' (line 407)
            endpoint_1204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 18), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 407)
            getitem___1205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 18), endpoint_1204, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 407)
            subscript_call_result_1206 = invoke(stypy.reporting.localization.Localization(__file__, 407, 18), getitem___1205, result_xor_1203)
            
            # Storing an element on a container (line 407)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 407, 12), label_1190, (subscript_call_result_1206, int_1189))
            
            # Call to assignLabel(...): (line 408)
            # Processing the call arguments (line 408)
            
            # Obtaining the type of the subscript
            # Getting the type of 'p' (line 408)
            p_1208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 33), 'p', False)
            int_1209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 37), 'int')
            # Applying the binary operator '^' (line 408)
            result_xor_1210 = python_operator(stypy.reporting.localization.Localization(__file__, 408, 33), '^', p_1208, int_1209)
            
            # Getting the type of 'endpoint' (line 408)
            endpoint_1211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 24), 'endpoint', False)
            # Obtaining the member '__getitem__' of a type (line 408)
            getitem___1212 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 24), endpoint_1211, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 408)
            subscript_call_result_1213 = invoke(stypy.reporting.localization.Localization(__file__, 408, 24), getitem___1212, result_xor_1210)
            
            int_1214 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 41), 'int')
            # Getting the type of 'p' (line 408)
            p_1215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 44), 'p', False)
            # Processing the call keyword arguments (line 408)
            kwargs_1216 = {}
            # Getting the type of 'assignLabel' (line 408)
            assignLabel_1207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 12), 'assignLabel', False)
            # Calling assignLabel(args, kwargs) (line 408)
            assignLabel_call_result_1217 = invoke(stypy.reporting.localization.Localization(__file__, 408, 12), assignLabel_1207, *[subscript_call_result_1213, int_1214, p_1215], **kwargs_1216)
            
            
            # Assigning a Name to a Subscript (line 410):
            
            # Assigning a Name to a Subscript (line 410):
            # Getting the type of 'True' (line 410)
            True_1218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 61), 'True')
            # Getting the type of 'allowedge' (line 410)
            allowedge_1219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 12), 'allowedge')
            
            # Obtaining the type of the subscript
            # Getting the type of 'j' (line 410)
            j_1220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 38), 'j')
            # Getting the type of 'endptrick' (line 410)
            endptrick_1221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 42), 'endptrick')
            # Applying the binary operator '-' (line 410)
            result_sub_1222 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 38), '-', j_1220, endptrick_1221)
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 410)
            b_1223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 35), 'b')
            # Getting the type of 'blossomendps' (line 410)
            blossomendps_1224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 22), 'blossomendps')
            # Obtaining the member '__getitem__' of a type (line 410)
            getitem___1225 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 22), blossomendps_1224, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 410)
            subscript_call_result_1226 = invoke(stypy.reporting.localization.Localization(__file__, 410, 22), getitem___1225, b_1223)
            
            # Obtaining the member '__getitem__' of a type (line 410)
            getitem___1227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 22), subscript_call_result_1226, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 410)
            subscript_call_result_1228 = invoke(stypy.reporting.localization.Localization(__file__, 410, 22), getitem___1227, result_sub_1222)
            
            int_1229 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 410, 56), 'int')
            # Applying the binary operator '//' (line 410)
            result_floordiv_1230 = python_operator(stypy.reporting.localization.Localization(__file__, 410, 22), '//', subscript_call_result_1228, int_1229)
            
            # Storing an element on a container (line 410)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 410, 12), allowedge_1219, (result_floordiv_1230, True_1218))
            
            # Getting the type of 'j' (line 411)
            j_1231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 12), 'j')
            # Getting the type of 'jstep' (line 411)
            jstep_1232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 17), 'jstep')
            # Applying the binary operator '+=' (line 411)
            result_iadd_1233 = python_operator(stypy.reporting.localization.Localization(__file__, 411, 12), '+=', j_1231, jstep_1232)
            # Assigning a type to the variable 'j' (line 411)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 411, 12), 'j', result_iadd_1233)
            
            
            # Assigning a BinOp to a Name (line 412):
            
            # Assigning a BinOp to a Name (line 412):
            
            # Obtaining the type of the subscript
            # Getting the type of 'j' (line 412)
            j_1234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 32), 'j')
            # Getting the type of 'endptrick' (line 412)
            endptrick_1235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 36), 'endptrick')
            # Applying the binary operator '-' (line 412)
            result_sub_1236 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 32), '-', j_1234, endptrick_1235)
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 412)
            b_1237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 29), 'b')
            # Getting the type of 'blossomendps' (line 412)
            blossomendps_1238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 16), 'blossomendps')
            # Obtaining the member '__getitem__' of a type (line 412)
            getitem___1239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 16), blossomendps_1238, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 412)
            subscript_call_result_1240 = invoke(stypy.reporting.localization.Localization(__file__, 412, 16), getitem___1239, b_1237)
            
            # Obtaining the member '__getitem__' of a type (line 412)
            getitem___1241 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 412, 16), subscript_call_result_1240, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 412)
            subscript_call_result_1242 = invoke(stypy.reporting.localization.Localization(__file__, 412, 16), getitem___1241, result_sub_1236)
            
            # Getting the type of 'endptrick' (line 412)
            endptrick_1243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 412, 49), 'endptrick')
            # Applying the binary operator '^' (line 412)
            result_xor_1244 = python_operator(stypy.reporting.localization.Localization(__file__, 412, 16), '^', subscript_call_result_1242, endptrick_1243)
            
            # Assigning a type to the variable 'p' (line 412)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 412, 12), 'p', result_xor_1244)
            
            # Assigning a Name to a Subscript (line 414):
            
            # Assigning a Name to a Subscript (line 414):
            # Getting the type of 'True' (line 414)
            True_1245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 32), 'True')
            # Getting the type of 'allowedge' (line 414)
            allowedge_1246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 12), 'allowedge')
            # Getting the type of 'p' (line 414)
            p_1247 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 414, 22), 'p')
            int_1248 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 27), 'int')
            # Applying the binary operator '//' (line 414)
            result_floordiv_1249 = python_operator(stypy.reporting.localization.Localization(__file__, 414, 22), '//', p_1247, int_1248)
            
            # Storing an element on a container (line 414)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 414, 12), allowedge_1246, (result_floordiv_1249, True_1245))
            
            # Getting the type of 'j' (line 415)
            j_1250 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 12), 'j')
            # Getting the type of 'jstep' (line 415)
            jstep_1251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 415, 17), 'jstep')
            # Applying the binary operator '+=' (line 415)
            result_iadd_1252 = python_operator(stypy.reporting.localization.Localization(__file__, 415, 12), '+=', j_1250, jstep_1251)
            # Assigning a type to the variable 'j' (line 415)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 415, 12), 'j', result_iadd_1252)
            
            # SSA join for while statement (line 404)
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Subscript to a Name (line 418):
        
        # Assigning a Subscript to a Name (line 418):
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 418)
        j_1253 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 30), 'j')
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 418)
        b_1254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 27), 'b')
        # Getting the type of 'blossomchilds' (line 418)
        blossomchilds_1255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 13), 'blossomchilds')
        # Obtaining the member '__getitem__' of a type (line 418)
        getitem___1256 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 13), blossomchilds_1255, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 418)
        subscript_call_result_1257 = invoke(stypy.reporting.localization.Localization(__file__, 418, 13), getitem___1256, b_1254)
        
        # Obtaining the member '__getitem__' of a type (line 418)
        getitem___1258 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 13), subscript_call_result_1257, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 418)
        subscript_call_result_1259 = invoke(stypy.reporting.localization.Localization(__file__, 418, 13), getitem___1258, j_1253)
        
        # Assigning a type to the variable 'bv' (line 418)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 418, 8), 'bv', subscript_call_result_1259)
        
        # Multiple assignment of 2 elements.
        
        # Assigning a Num to a Subscript (line 419):
        int_1260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 45), 'int')
        # Getting the type of 'label' (line 419)
        label_1261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 33), 'label')
        # Getting the type of 'bv' (line 419)
        bv_1262 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 39), 'bv')
        # Storing an element on a container (line 419)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 33), label_1261, (bv_1262, int_1260))
        
        # Assigning a Subscript to a Subscript (line 419):
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 419)
        bv_1263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 39), 'bv')
        # Getting the type of 'label' (line 419)
        label_1264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 33), 'label')
        # Obtaining the member '__getitem__' of a type (line 419)
        getitem___1265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 33), label_1264, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 419)
        subscript_call_result_1266 = invoke(stypy.reporting.localization.Localization(__file__, 419, 33), getitem___1265, bv_1263)
        
        # Getting the type of 'label' (line 419)
        label_1267 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 8), 'label')
        
        # Obtaining the type of the subscript
        # Getting the type of 'p' (line 419)
        p_1268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 23), 'p')
        int_1269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 419, 27), 'int')
        # Applying the binary operator '^' (line 419)
        result_xor_1270 = python_operator(stypy.reporting.localization.Localization(__file__, 419, 23), '^', p_1268, int_1269)
        
        # Getting the type of 'endpoint' (line 419)
        endpoint_1271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 419, 14), 'endpoint')
        # Obtaining the member '__getitem__' of a type (line 419)
        getitem___1272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 419, 14), endpoint_1271, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 419)
        subscript_call_result_1273 = invoke(stypy.reporting.localization.Localization(__file__, 419, 14), getitem___1272, result_xor_1270)
        
        # Storing an element on a container (line 419)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 419, 8), label_1267, (subscript_call_result_1273, subscript_call_result_1266))
        
        # Multiple assignment of 2 elements.
        
        # Assigning a Name to a Subscript (line 420):
        # Getting the type of 'p' (line 420)
        p_1274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 51), 'p')
        # Getting the type of 'labelend' (line 420)
        labelend_1275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 36), 'labelend')
        # Getting the type of 'bv' (line 420)
        bv_1276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 45), 'bv')
        # Storing an element on a container (line 420)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 36), labelend_1275, (bv_1276, p_1274))
        
        # Assigning a Subscript to a Subscript (line 420):
        
        # Obtaining the type of the subscript
        # Getting the type of 'bv' (line 420)
        bv_1277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 45), 'bv')
        # Getting the type of 'labelend' (line 420)
        labelend_1278 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 36), 'labelend')
        # Obtaining the member '__getitem__' of a type (line 420)
        getitem___1279 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 36), labelend_1278, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 420)
        subscript_call_result_1280 = invoke(stypy.reporting.localization.Localization(__file__, 420, 36), getitem___1279, bv_1277)
        
        # Getting the type of 'labelend' (line 420)
        labelend_1281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 8), 'labelend')
        
        # Obtaining the type of the subscript
        # Getting the type of 'p' (line 420)
        p_1282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 26), 'p')
        int_1283 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 420, 30), 'int')
        # Applying the binary operator '^' (line 420)
        result_xor_1284 = python_operator(stypy.reporting.localization.Localization(__file__, 420, 26), '^', p_1282, int_1283)
        
        # Getting the type of 'endpoint' (line 420)
        endpoint_1285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 17), 'endpoint')
        # Obtaining the member '__getitem__' of a type (line 420)
        getitem___1286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 17), endpoint_1285, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 420)
        subscript_call_result_1287 = invoke(stypy.reporting.localization.Localization(__file__, 420, 17), getitem___1286, result_xor_1284)
        
        # Storing an element on a container (line 420)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 420, 8), labelend_1281, (subscript_call_result_1287, subscript_call_result_1280))
        
        # Assigning a Num to a Subscript (line 421):
        
        # Assigning a Num to a Subscript (line 421):
        int_1288 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 421, 23), 'int')
        # Getting the type of 'bestedge' (line 421)
        bestedge_1289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 8), 'bestedge')
        # Getting the type of 'bv' (line 421)
        bv_1290 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 421, 17), 'bv')
        # Storing an element on a container (line 421)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 421, 8), bestedge_1289, (bv_1290, int_1288))
        
        # Getting the type of 'j' (line 423)
        j_1291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 8), 'j')
        # Getting the type of 'jstep' (line 423)
        jstep_1292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 13), 'jstep')
        # Applying the binary operator '+=' (line 423)
        result_iadd_1293 = python_operator(stypy.reporting.localization.Localization(__file__, 423, 8), '+=', j_1291, jstep_1292)
        # Assigning a type to the variable 'j' (line 423)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 423, 8), 'j', result_iadd_1293)
        
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 424)
        j_1294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 31), 'j')
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 424)
        b_1295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 28), 'b')
        # Getting the type of 'blossomchilds' (line 424)
        blossomchilds_1296 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 14), 'blossomchilds')
        # Obtaining the member '__getitem__' of a type (line 424)
        getitem___1297 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 14), blossomchilds_1296, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 424)
        subscript_call_result_1298 = invoke(stypy.reporting.localization.Localization(__file__, 424, 14), getitem___1297, b_1295)
        
        # Obtaining the member '__getitem__' of a type (line 424)
        getitem___1299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 14), subscript_call_result_1298, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 424)
        subscript_call_result_1300 = invoke(stypy.reporting.localization.Localization(__file__, 424, 14), getitem___1299, j_1294)
        
        # Getting the type of 'entrychild' (line 424)
        entrychild_1301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 37), 'entrychild')
        # Applying the binary operator '!=' (line 424)
        result_ne_1302 = python_operator(stypy.reporting.localization.Localization(__file__, 424, 14), '!=', subscript_call_result_1300, entrychild_1301)
        
        # Testing if the while is going to be iterated (line 424)
        # Testing the type of an if condition (line 424)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 424, 8), result_ne_1302)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 424, 8), result_ne_1302):
            # SSA begins for while statement (line 424)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Assigning a Subscript to a Name (line 428):
            
            # Assigning a Subscript to a Name (line 428):
            
            # Obtaining the type of the subscript
            # Getting the type of 'j' (line 428)
            j_1303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 34), 'j')
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 428)
            b_1304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 31), 'b')
            # Getting the type of 'blossomchilds' (line 428)
            blossomchilds_1305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 428, 17), 'blossomchilds')
            # Obtaining the member '__getitem__' of a type (line 428)
            getitem___1306 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 17), blossomchilds_1305, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 428)
            subscript_call_result_1307 = invoke(stypy.reporting.localization.Localization(__file__, 428, 17), getitem___1306, b_1304)
            
            # Obtaining the member '__getitem__' of a type (line 428)
            getitem___1308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 428, 17), subscript_call_result_1307, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 428)
            subscript_call_result_1309 = invoke(stypy.reporting.localization.Localization(__file__, 428, 17), getitem___1308, j_1303)
            
            # Assigning a type to the variable 'bv' (line 428)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 428, 12), 'bv', subscript_call_result_1309)
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'bv' (line 429)
            bv_1310 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 21), 'bv')
            # Getting the type of 'label' (line 429)
            label_1311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 429, 15), 'label')
            # Obtaining the member '__getitem__' of a type (line 429)
            getitem___1312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 429, 15), label_1311, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 429)
            subscript_call_result_1313 = invoke(stypy.reporting.localization.Localization(__file__, 429, 15), getitem___1312, bv_1310)
            
            int_1314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 429, 28), 'int')
            # Applying the binary operator '==' (line 429)
            result_eq_1315 = python_operator(stypy.reporting.localization.Localization(__file__, 429, 15), '==', subscript_call_result_1313, int_1314)
            
            # Testing if the type of an if condition is none (line 429)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 429, 12), result_eq_1315):
                pass
            else:
                
                # Testing the type of an if condition (line 429)
                if_condition_1316 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 429, 12), result_eq_1315)
                # Assigning a type to the variable 'if_condition_1316' (line 429)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 429, 12), 'if_condition_1316', if_condition_1316)
                # SSA begins for if statement (line 429)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Getting the type of 'j' (line 432)
                j_1317 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 16), 'j')
                # Getting the type of 'jstep' (line 432)
                jstep_1318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 21), 'jstep')
                # Applying the binary operator '+=' (line 432)
                result_iadd_1319 = python_operator(stypy.reporting.localization.Localization(__file__, 432, 16), '+=', j_1317, jstep_1318)
                # Assigning a type to the variable 'j' (line 432)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 432, 16), 'j', result_iadd_1319)
                
                # SSA join for if statement (line 429)
                module_type_store = module_type_store.join_ssa_context()
                

            
            
            # Call to blossomLeaves(...): (line 434)
            # Processing the call arguments (line 434)
            # Getting the type of 'bv' (line 434)
            bv_1321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 35), 'bv', False)
            # Processing the call keyword arguments (line 434)
            kwargs_1322 = {}
            # Getting the type of 'blossomLeaves' (line 434)
            blossomLeaves_1320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 21), 'blossomLeaves', False)
            # Calling blossomLeaves(args, kwargs) (line 434)
            blossomLeaves_call_result_1323 = invoke(stypy.reporting.localization.Localization(__file__, 434, 21), blossomLeaves_1320, *[bv_1321], **kwargs_1322)
            
            # Testing if the for loop is going to be iterated (line 434)
            # Testing the type of a for loop iterable (line 434)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 434, 12), blossomLeaves_call_result_1323)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 434, 12), blossomLeaves_call_result_1323):
                # Getting the type of the for loop variable (line 434)
                for_loop_var_1324 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 434, 12), blossomLeaves_call_result_1323)
                # Assigning a type to the variable 'v' (line 434)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 434, 12), 'v', for_loop_var_1324)
                # SSA begins for a for statement (line 434)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 435)
                v_1325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 25), 'v')
                # Getting the type of 'label' (line 435)
                label_1326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 19), 'label')
                # Obtaining the member '__getitem__' of a type (line 435)
                getitem___1327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 435, 19), label_1326, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 435)
                subscript_call_result_1328 = invoke(stypy.reporting.localization.Localization(__file__, 435, 19), getitem___1327, v_1325)
                
                int_1329 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 435, 31), 'int')
                # Applying the binary operator '!=' (line 435)
                result_ne_1330 = python_operator(stypy.reporting.localization.Localization(__file__, 435, 19), '!=', subscript_call_result_1328, int_1329)
                
                # Testing if the type of an if condition is none (line 435)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 435, 16), result_ne_1330):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 435)
                    if_condition_1331 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 435, 16), result_ne_1330)
                    # Assigning a type to the variable 'if_condition_1331' (line 435)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 16), 'if_condition_1331', if_condition_1331)
                    # SSA begins for if statement (line 435)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    # SSA join for if statement (line 435)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 439)
            v_1332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 21), 'v')
            # Getting the type of 'label' (line 439)
            label_1333 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 15), 'label')
            # Obtaining the member '__getitem__' of a type (line 439)
            getitem___1334 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 15), label_1333, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 439)
            subscript_call_result_1335 = invoke(stypy.reporting.localization.Localization(__file__, 439, 15), getitem___1334, v_1332)
            
            int_1336 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 439, 27), 'int')
            # Applying the binary operator '!=' (line 439)
            result_ne_1337 = python_operator(stypy.reporting.localization.Localization(__file__, 439, 15), '!=', subscript_call_result_1335, int_1336)
            
            # Testing if the type of an if condition is none (line 439)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 439, 12), result_ne_1337):
                pass
            else:
                
                # Testing the type of an if condition (line 439)
                if_condition_1338 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 439, 12), result_ne_1337)
                # Assigning a type to the variable 'if_condition_1338' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 12), 'if_condition_1338', if_condition_1338)
                # SSA begins for if statement (line 439)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # Evaluating assert statement condition
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 440)
                v_1339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 29), 'v')
                # Getting the type of 'label' (line 440)
                label_1340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 23), 'label')
                # Obtaining the member '__getitem__' of a type (line 440)
                getitem___1341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 23), label_1340, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 440)
                subscript_call_result_1342 = invoke(stypy.reporting.localization.Localization(__file__, 440, 23), getitem___1341, v_1339)
                
                int_1343 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 440, 35), 'int')
                # Applying the binary operator '==' (line 440)
                result_eq_1344 = python_operator(stypy.reporting.localization.Localization(__file__, 440, 23), '==', subscript_call_result_1342, int_1343)
                
                # Evaluating assert statement condition
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 441)
                v_1345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 33), 'v')
                # Getting the type of 'inblossom' (line 441)
                inblossom_1346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 23), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 441)
                getitem___1347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 441, 23), inblossom_1346, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 441)
                subscript_call_result_1348 = invoke(stypy.reporting.localization.Localization(__file__, 441, 23), getitem___1347, v_1345)
                
                # Getting the type of 'bv' (line 441)
                bv_1349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 441, 39), 'bv')
                # Applying the binary operator '==' (line 441)
                result_eq_1350 = python_operator(stypy.reporting.localization.Localization(__file__, 441, 23), '==', subscript_call_result_1348, bv_1349)
                
                
                # Assigning a Num to a Subscript (line 442):
                
                # Assigning a Num to a Subscript (line 442):
                int_1351 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 442, 27), 'int')
                # Getting the type of 'label' (line 442)
                label_1352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'label')
                # Getting the type of 'v' (line 442)
                v_1353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 22), 'v')
                # Storing an element on a container (line 442)
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 442, 16), label_1352, (v_1353, int_1351))
                
                # Assigning a Num to a Subscript (line 443):
                
                # Assigning a Num to a Subscript (line 443):
                int_1354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 443, 57), 'int')
                # Getting the type of 'label' (line 443)
                label_1355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 16), 'label')
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'bv' (line 443)
                bv_1356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 48), 'bv')
                # Getting the type of 'blossombase' (line 443)
                blossombase_1357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 36), 'blossombase')
                # Obtaining the member '__getitem__' of a type (line 443)
                getitem___1358 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 36), blossombase_1357, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 443)
                subscript_call_result_1359 = invoke(stypy.reporting.localization.Localization(__file__, 443, 36), getitem___1358, bv_1356)
                
                # Getting the type of 'mate' (line 443)
                mate_1360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 31), 'mate')
                # Obtaining the member '__getitem__' of a type (line 443)
                getitem___1361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 31), mate_1360, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 443)
                subscript_call_result_1362 = invoke(stypy.reporting.localization.Localization(__file__, 443, 31), getitem___1361, subscript_call_result_1359)
                
                # Getting the type of 'endpoint' (line 443)
                endpoint_1363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 22), 'endpoint')
                # Obtaining the member '__getitem__' of a type (line 443)
                getitem___1364 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 22), endpoint_1363, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 443)
                subscript_call_result_1365 = invoke(stypy.reporting.localization.Localization(__file__, 443, 22), getitem___1364, subscript_call_result_1362)
                
                # Storing an element on a container (line 443)
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 443, 16), label_1355, (subscript_call_result_1365, int_1354))
                
                # Call to assignLabel(...): (line 444)
                # Processing the call arguments (line 444)
                # Getting the type of 'v' (line 444)
                v_1367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 28), 'v', False)
                int_1368 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 444, 31), 'int')
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 444)
                v_1369 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 43), 'v', False)
                # Getting the type of 'labelend' (line 444)
                labelend_1370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 34), 'labelend', False)
                # Obtaining the member '__getitem__' of a type (line 444)
                getitem___1371 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 444, 34), labelend_1370, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 444)
                subscript_call_result_1372 = invoke(stypy.reporting.localization.Localization(__file__, 444, 34), getitem___1371, v_1369)
                
                # Processing the call keyword arguments (line 444)
                kwargs_1373 = {}
                # Getting the type of 'assignLabel' (line 444)
                assignLabel_1366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'assignLabel', False)
                # Calling assignLabel(args, kwargs) (line 444)
                assignLabel_call_result_1374 = invoke(stypy.reporting.localization.Localization(__file__, 444, 16), assignLabel_1366, *[v_1367, int_1368, subscript_call_result_1372], **kwargs_1373)
                
                # SSA join for if statement (line 439)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Getting the type of 'j' (line 445)
            j_1375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 12), 'j')
            # Getting the type of 'jstep' (line 445)
            jstep_1376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 445, 17), 'jstep')
            # Applying the binary operator '+=' (line 445)
            result_iadd_1377 = python_operator(stypy.reporting.localization.Localization(__file__, 445, 12), '+=', j_1375, jstep_1376)
            # Assigning a type to the variable 'j' (line 445)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 445, 12), 'j', result_iadd_1377)
            
            # SSA join for while statement (line 424)
            module_type_store = module_type_store.join_ssa_context()

        
        # SSA join for if statement (line 383)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Multiple assignment of 2 elements.
    
    # Assigning a Num to a Subscript (line 447):
    int_1378 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 447, 29), 'int')
    # Getting the type of 'labelend' (line 447)
    labelend_1379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 15), 'labelend')
    # Getting the type of 'b' (line 447)
    b_1380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 24), 'b')
    # Storing an element on a container (line 447)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 447, 15), labelend_1379, (b_1380, int_1378))
    
    # Assigning a Subscript to a Subscript (line 447):
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 447)
    b_1381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 24), 'b')
    # Getting the type of 'labelend' (line 447)
    labelend_1382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 15), 'labelend')
    # Obtaining the member '__getitem__' of a type (line 447)
    getitem___1383 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 15), labelend_1382, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 447)
    subscript_call_result_1384 = invoke(stypy.reporting.localization.Localization(__file__, 447, 15), getitem___1383, b_1381)
    
    # Getting the type of 'label' (line 447)
    label_1385 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 4), 'label')
    # Getting the type of 'b' (line 447)
    b_1386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 10), 'b')
    # Storing an element on a container (line 447)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 447, 4), label_1385, (b_1386, subscript_call_result_1384))
    
    # Multiple assignment of 2 elements.
    
    # Assigning a Name to a Subscript (line 448):
    # Getting the type of 'None' (line 448)
    None_1387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 41), 'None')
    # Getting the type of 'blossomendps' (line 448)
    blossomendps_1388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 23), 'blossomendps')
    # Getting the type of 'b' (line 448)
    b_1389 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 36), 'b')
    # Storing an element on a container (line 448)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 23), blossomendps_1388, (b_1389, None_1387))
    
    # Assigning a Subscript to a Subscript (line 448):
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 448)
    b_1390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 36), 'b')
    # Getting the type of 'blossomendps' (line 448)
    blossomendps_1391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 23), 'blossomendps')
    # Obtaining the member '__getitem__' of a type (line 448)
    getitem___1392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 448, 23), blossomendps_1391, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 448)
    subscript_call_result_1393 = invoke(stypy.reporting.localization.Localization(__file__, 448, 23), getitem___1392, b_1390)
    
    # Getting the type of 'blossomchilds' (line 448)
    blossomchilds_1394 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 4), 'blossomchilds')
    # Getting the type of 'b' (line 448)
    b_1395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 448, 18), 'b')
    # Storing an element on a container (line 448)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 448, 4), blossomchilds_1394, (b_1395, subscript_call_result_1393))
    
    # Assigning a Num to a Subscript (line 449):
    
    # Assigning a Num to a Subscript (line 449):
    int_1396 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 449, 21), 'int')
    # Getting the type of 'blossombase' (line 449)
    blossombase_1397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 4), 'blossombase')
    # Getting the type of 'b' (line 449)
    b_1398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 449, 16), 'b')
    # Storing an element on a container (line 449)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 449, 4), blossombase_1397, (b_1398, int_1396))
    
    # Assigning a Name to a Subscript (line 450):
    
    # Assigning a Name to a Subscript (line 450):
    # Getting the type of 'None' (line 450)
    None_1399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 26), 'None')
    # Getting the type of 'blossombestedges' (line 450)
    blossombestedges_1400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 4), 'blossombestedges')
    # Getting the type of 'b' (line 450)
    b_1401 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 21), 'b')
    # Storing an element on a container (line 450)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 450, 4), blossombestedges_1400, (b_1401, None_1399))
    
    # Assigning a Num to a Subscript (line 451):
    
    # Assigning a Num to a Subscript (line 451):
    int_1402 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 451, 18), 'int')
    # Getting the type of 'bestedge' (line 451)
    bestedge_1403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 4), 'bestedge')
    # Getting the type of 'b' (line 451)
    b_1404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 13), 'b')
    # Storing an element on a container (line 451)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 451, 4), bestedge_1403, (b_1404, int_1402))
    
    # Call to append(...): (line 452)
    # Processing the call arguments (line 452)
    # Getting the type of 'b' (line 452)
    b_1407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 26), 'b', False)
    # Processing the call keyword arguments (line 452)
    kwargs_1408 = {}
    # Getting the type of 'unusedblossoms' (line 452)
    unusedblossoms_1405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 452, 4), 'unusedblossoms', False)
    # Obtaining the member 'append' of a type (line 452)
    append_1406 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 452, 4), unusedblossoms_1405, 'append')
    # Calling append(args, kwargs) (line 452)
    append_call_result_1409 = invoke(stypy.reporting.localization.Localization(__file__, 452, 4), append_1406, *[b_1407], **kwargs_1408)
    
    
    # ################# End of 'expandBlossom(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'expandBlossom' in the type store
    # Getting the type of 'stypy_return_type' (line 368)
    stypy_return_type_1410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 368, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_1410)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'expandBlossom'
    return stypy_return_type_1410

# Assigning a type to the variable 'expandBlossom' (line 368)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 368, 0), 'expandBlossom', expandBlossom)

@norecursion
def augmentBlossom(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'augmentBlossom'
    module_type_store = module_type_store.open_function_context('augmentBlossom', 457, 0, False)
    
    # Passed parameters checking function
    augmentBlossom.stypy_localization = localization
    augmentBlossom.stypy_type_of_self = None
    augmentBlossom.stypy_type_store = module_type_store
    augmentBlossom.stypy_function_name = 'augmentBlossom'
    augmentBlossom.stypy_param_names_list = ['b', 'v']
    augmentBlossom.stypy_varargs_param_name = None
    augmentBlossom.stypy_kwargs_param_name = None
    augmentBlossom.stypy_call_defaults = defaults
    augmentBlossom.stypy_call_varargs = varargs
    augmentBlossom.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'augmentBlossom', ['b', 'v'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'augmentBlossom', localization, ['b', 'v'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'augmentBlossom(...)' code ##################

    # Getting the type of 'DEBUG' (line 458)
    DEBUG_1411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 458)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 458, 4), DEBUG_1411):
        pass
    else:
        
        # Testing the type of an if condition (line 458)
        if_condition_1412 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 458, 4), DEBUG_1411)
        # Assigning a type to the variable 'if_condition_1412' (line 458)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 4), 'if_condition_1412', if_condition_1412)
        # SSA begins for if statement (line 458)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 458)
        # Processing the call arguments (line 458)
        str_1414 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 20), 'str', 'augmentBlossom(%d,%d)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 458)
        tuple_1415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 47), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 458)
        # Adding element type (line 458)
        # Getting the type of 'b' (line 458)
        b_1416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 47), 'b', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 458, 47), tuple_1415, b_1416)
        # Adding element type (line 458)
        # Getting the type of 'v' (line 458)
        v_1417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 50), 'v', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 458, 47), tuple_1415, v_1417)
        
        # Applying the binary operator '%' (line 458)
        result_mod_1418 = python_operator(stypy.reporting.localization.Localization(__file__, 458, 20), '%', str_1414, tuple_1415)
        
        # Processing the call keyword arguments (line 458)
        kwargs_1419 = {}
        # Getting the type of 'DEBUG' (line 458)
        DEBUG_1413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 458)
        DEBUG_call_result_1420 = invoke(stypy.reporting.localization.Localization(__file__, 458, 14), DEBUG_1413, *[result_mod_1418], **kwargs_1419)
        
        # SSA join for if statement (line 458)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Assigning a Name to a Name (line 461):
    
    # Assigning a Name to a Name (line 461):
    # Getting the type of 'v' (line 461)
    v_1421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 8), 'v')
    # Assigning a type to the variable 't' (line 461)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 461, 4), 't', v_1421)
    
    
    
    # Obtaining the type of the subscript
    # Getting the type of 't' (line 462)
    t_1422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 24), 't')
    # Getting the type of 'blossomparent' (line 462)
    blossomparent_1423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 10), 'blossomparent')
    # Obtaining the member '__getitem__' of a type (line 462)
    getitem___1424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 462, 10), blossomparent_1423, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 462)
    subscript_call_result_1425 = invoke(stypy.reporting.localization.Localization(__file__, 462, 10), getitem___1424, t_1422)
    
    # Getting the type of 'b' (line 462)
    b_1426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 30), 'b')
    # Applying the binary operator '!=' (line 462)
    result_ne_1427 = python_operator(stypy.reporting.localization.Localization(__file__, 462, 10), '!=', subscript_call_result_1425, b_1426)
    
    # Testing if the while is going to be iterated (line 462)
    # Testing the type of an if condition (line 462)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 462, 4), result_ne_1427)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 462, 4), result_ne_1427):
        # SSA begins for while statement (line 462)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Assigning a Subscript to a Name (line 463):
        
        # Assigning a Subscript to a Name (line 463):
        
        # Obtaining the type of the subscript
        # Getting the type of 't' (line 463)
        t_1428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 26), 't')
        # Getting the type of 'blossomparent' (line 463)
        blossomparent_1429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 463, 12), 'blossomparent')
        # Obtaining the member '__getitem__' of a type (line 463)
        getitem___1430 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 463, 12), blossomparent_1429, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 463)
        subscript_call_result_1431 = invoke(stypy.reporting.localization.Localization(__file__, 463, 12), getitem___1430, t_1428)
        
        # Assigning a type to the variable 't' (line 463)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 463, 8), 't', subscript_call_result_1431)
        # SSA join for while statement (line 462)
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Getting the type of 't' (line 465)
    t_1432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 7), 't')
    # Getting the type of 'nvertex' (line 465)
    nvertex_1433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 465, 12), 'nvertex')
    # Applying the binary operator '>=' (line 465)
    result_ge_1434 = python_operator(stypy.reporting.localization.Localization(__file__, 465, 7), '>=', t_1432, nvertex_1433)
    
    # Testing if the type of an if condition is none (line 465)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 465, 4), result_ge_1434):
        pass
    else:
        
        # Testing the type of an if condition (line 465)
        if_condition_1435 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 465, 4), result_ge_1434)
        # Assigning a type to the variable 'if_condition_1435' (line 465)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 465, 4), 'if_condition_1435', if_condition_1435)
        # SSA begins for if statement (line 465)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to augmentBlossom(...): (line 466)
        # Processing the call arguments (line 466)
        # Getting the type of 't' (line 466)
        t_1437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 23), 't', False)
        # Getting the type of 'v' (line 466)
        v_1438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 26), 'v', False)
        # Processing the call keyword arguments (line 466)
        kwargs_1439 = {}
        # Getting the type of 'augmentBlossom' (line 466)
        augmentBlossom_1436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 8), 'augmentBlossom', False)
        # Calling augmentBlossom(args, kwargs) (line 466)
        augmentBlossom_call_result_1440 = invoke(stypy.reporting.localization.Localization(__file__, 466, 8), augmentBlossom_1436, *[t_1437, v_1438], **kwargs_1439)
        
        # SSA join for if statement (line 465)
        module_type_store = module_type_store.join_ssa_context()
        

    
    # Multiple assignment of 2 elements.
    
    # Assigning a Call to a Name (line 468):
    
    # Call to index(...): (line 468)
    # Processing the call arguments (line 468)
    # Getting the type of 't' (line 468)
    t_1446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 35), 't', False)
    # Processing the call keyword arguments (line 468)
    kwargs_1447 = {}
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 468)
    b_1441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 26), 'b', False)
    # Getting the type of 'blossomchilds' (line 468)
    blossomchilds_1442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 12), 'blossomchilds', False)
    # Obtaining the member '__getitem__' of a type (line 468)
    getitem___1443 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 12), blossomchilds_1442, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 468)
    subscript_call_result_1444 = invoke(stypy.reporting.localization.Localization(__file__, 468, 12), getitem___1443, b_1441)
    
    # Obtaining the member 'index' of a type (line 468)
    index_1445 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 12), subscript_call_result_1444, 'index')
    # Calling index(args, kwargs) (line 468)
    index_call_result_1448 = invoke(stypy.reporting.localization.Localization(__file__, 468, 12), index_1445, *[t_1446], **kwargs_1447)
    
    # Assigning a type to the variable 'j' (line 468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'j', index_call_result_1448)
    
    # Assigning a Name to a Name (line 468):
    # Getting the type of 'j' (line 468)
    j_1449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 8), 'j')
    # Assigning a type to the variable 'i' (line 468)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 468, 4), 'i', j_1449)
    # Getting the type of 'i' (line 469)
    i_1450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 469, 7), 'i')
    int_1451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 469, 11), 'int')
    # Applying the binary operator '&' (line 469)
    result_and__1452 = python_operator(stypy.reporting.localization.Localization(__file__, 469, 7), '&', i_1450, int_1451)
    
    # Testing if the type of an if condition is none (line 469)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 469, 4), result_and__1452):
        
        # Assigning a Num to a Name (line 476):
        
        # Assigning a Num to a Name (line 476):
        int_1465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 16), 'int')
        # Assigning a type to the variable 'jstep' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 8), 'jstep', int_1465)
        
        # Assigning a Num to a Name (line 477):
        
        # Assigning a Num to a Name (line 477):
        int_1466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 20), 'int')
        # Assigning a type to the variable 'endptrick' (line 477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 8), 'endptrick', int_1466)
    else:
        
        # Testing the type of an if condition (line 469)
        if_condition_1453 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 469, 4), result_and__1452)
        # Assigning a type to the variable 'if_condition_1453' (line 469)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 469, 4), 'if_condition_1453', if_condition_1453)
        # SSA begins for if statement (line 469)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Getting the type of 'j' (line 471)
        j_1454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'j')
        
        # Call to len(...): (line 471)
        # Processing the call arguments (line 471)
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 471)
        b_1456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 31), 'b', False)
        # Getting the type of 'blossomchilds' (line 471)
        blossomchilds_1457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 17), 'blossomchilds', False)
        # Obtaining the member '__getitem__' of a type (line 471)
        getitem___1458 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 17), blossomchilds_1457, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 471)
        subscript_call_result_1459 = invoke(stypy.reporting.localization.Localization(__file__, 471, 17), getitem___1458, b_1456)
        
        # Processing the call keyword arguments (line 471)
        kwargs_1460 = {}
        # Getting the type of 'len' (line 471)
        len_1455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 13), 'len', False)
        # Calling len(args, kwargs) (line 471)
        len_call_result_1461 = invoke(stypy.reporting.localization.Localization(__file__, 471, 13), len_1455, *[subscript_call_result_1459], **kwargs_1460)
        
        # Applying the binary operator '-=' (line 471)
        result_isub_1462 = python_operator(stypy.reporting.localization.Localization(__file__, 471, 8), '-=', j_1454, len_call_result_1461)
        # Assigning a type to the variable 'j' (line 471)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 471, 8), 'j', result_isub_1462)
        
        
        # Assigning a Num to a Name (line 472):
        
        # Assigning a Num to a Name (line 472):
        int_1463 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 472, 16), 'int')
        # Assigning a type to the variable 'jstep' (line 472)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 8), 'jstep', int_1463)
        
        # Assigning a Num to a Name (line 473):
        
        # Assigning a Num to a Name (line 473):
        int_1464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 473, 20), 'int')
        # Assigning a type to the variable 'endptrick' (line 473)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 473, 8), 'endptrick', int_1464)
        # SSA branch for the else part of an if statement (line 469)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 476):
        
        # Assigning a Num to a Name (line 476):
        int_1465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 476, 16), 'int')
        # Assigning a type to the variable 'jstep' (line 476)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 476, 8), 'jstep', int_1465)
        
        # Assigning a Num to a Name (line 477):
        
        # Assigning a Num to a Name (line 477):
        int_1466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 20), 'int')
        # Assigning a type to the variable 'endptrick' (line 477)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 8), 'endptrick', int_1466)
        # SSA join for if statement (line 469)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Getting the type of 'j' (line 479)
    j_1467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 10), 'j')
    int_1468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 479, 15), 'int')
    # Applying the binary operator '!=' (line 479)
    result_ne_1469 = python_operator(stypy.reporting.localization.Localization(__file__, 479, 10), '!=', j_1467, int_1468)
    
    # Testing if the while is going to be iterated (line 479)
    # Testing the type of an if condition (line 479)
    is_suitable_condition(stypy.reporting.localization.Localization(__file__, 479, 4), result_ne_1469)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 479, 4), result_ne_1469):
        # SSA begins for while statement (line 479)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
        
        # Getting the type of 'j' (line 481)
        j_1470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'j')
        # Getting the type of 'jstep' (line 481)
        jstep_1471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 481, 13), 'jstep')
        # Applying the binary operator '+=' (line 481)
        result_iadd_1472 = python_operator(stypy.reporting.localization.Localization(__file__, 481, 8), '+=', j_1470, jstep_1471)
        # Assigning a type to the variable 'j' (line 481)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 481, 8), 'j', result_iadd_1472)
        
        
        # Assigning a Subscript to a Name (line 482):
        
        # Assigning a Subscript to a Name (line 482):
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 482)
        j_1473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 29), 'j')
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 482)
        b_1474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 26), 'b')
        # Getting the type of 'blossomchilds' (line 482)
        blossomchilds_1475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 482, 12), 'blossomchilds')
        # Obtaining the member '__getitem__' of a type (line 482)
        getitem___1476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 482, 12), blossomchilds_1475, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 482)
        subscript_call_result_1477 = invoke(stypy.reporting.localization.Localization(__file__, 482, 12), getitem___1476, b_1474)
        
        # Obtaining the member '__getitem__' of a type (line 482)
        getitem___1478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 482, 12), subscript_call_result_1477, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 482)
        subscript_call_result_1479 = invoke(stypy.reporting.localization.Localization(__file__, 482, 12), getitem___1478, j_1473)
        
        # Assigning a type to the variable 't' (line 482)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 482, 8), 't', subscript_call_result_1479)
        
        # Assigning a BinOp to a Name (line 483):
        
        # Assigning a BinOp to a Name (line 483):
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 483)
        j_1480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 28), 'j')
        # Getting the type of 'endptrick' (line 483)
        endptrick_1481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 32), 'endptrick')
        # Applying the binary operator '-' (line 483)
        result_sub_1482 = python_operator(stypy.reporting.localization.Localization(__file__, 483, 28), '-', j_1480, endptrick_1481)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 483)
        b_1483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 25), 'b')
        # Getting the type of 'blossomendps' (line 483)
        blossomendps_1484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 12), 'blossomendps')
        # Obtaining the member '__getitem__' of a type (line 483)
        getitem___1485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 12), blossomendps_1484, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 483)
        subscript_call_result_1486 = invoke(stypy.reporting.localization.Localization(__file__, 483, 12), getitem___1485, b_1483)
        
        # Obtaining the member '__getitem__' of a type (line 483)
        getitem___1487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 483, 12), subscript_call_result_1486, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 483)
        subscript_call_result_1488 = invoke(stypy.reporting.localization.Localization(__file__, 483, 12), getitem___1487, result_sub_1482)
        
        # Getting the type of 'endptrick' (line 483)
        endptrick_1489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 483, 45), 'endptrick')
        # Applying the binary operator '^' (line 483)
        result_xor_1490 = python_operator(stypy.reporting.localization.Localization(__file__, 483, 12), '^', subscript_call_result_1488, endptrick_1489)
        
        # Assigning a type to the variable 'p' (line 483)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 483, 8), 'p', result_xor_1490)
        
        # Getting the type of 't' (line 484)
        t_1491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 11), 't')
        # Getting the type of 'nvertex' (line 484)
        nvertex_1492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 16), 'nvertex')
        # Applying the binary operator '>=' (line 484)
        result_ge_1493 = python_operator(stypy.reporting.localization.Localization(__file__, 484, 11), '>=', t_1491, nvertex_1492)
        
        # Testing if the type of an if condition is none (line 484)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 484, 8), result_ge_1493):
            pass
        else:
            
            # Testing the type of an if condition (line 484)
            if_condition_1494 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 484, 8), result_ge_1493)
            # Assigning a type to the variable 'if_condition_1494' (line 484)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 484, 8), 'if_condition_1494', if_condition_1494)
            # SSA begins for if statement (line 484)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to augmentBlossom(...): (line 485)
            # Processing the call arguments (line 485)
            # Getting the type of 't' (line 485)
            t_1496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 27), 't', False)
            
            # Obtaining the type of the subscript
            # Getting the type of 'p' (line 485)
            p_1497 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 39), 'p', False)
            # Getting the type of 'endpoint' (line 485)
            endpoint_1498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 30), 'endpoint', False)
            # Obtaining the member '__getitem__' of a type (line 485)
            getitem___1499 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 30), endpoint_1498, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 485)
            subscript_call_result_1500 = invoke(stypy.reporting.localization.Localization(__file__, 485, 30), getitem___1499, p_1497)
            
            # Processing the call keyword arguments (line 485)
            kwargs_1501 = {}
            # Getting the type of 'augmentBlossom' (line 485)
            augmentBlossom_1495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 12), 'augmentBlossom', False)
            # Calling augmentBlossom(args, kwargs) (line 485)
            augmentBlossom_call_result_1502 = invoke(stypy.reporting.localization.Localization(__file__, 485, 12), augmentBlossom_1495, *[t_1496, subscript_call_result_1500], **kwargs_1501)
            
            # SSA join for if statement (line 484)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Getting the type of 'j' (line 487)
        j_1503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'j')
        # Getting the type of 'jstep' (line 487)
        jstep_1504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 13), 'jstep')
        # Applying the binary operator '+=' (line 487)
        result_iadd_1505 = python_operator(stypy.reporting.localization.Localization(__file__, 487, 8), '+=', j_1503, jstep_1504)
        # Assigning a type to the variable 'j' (line 487)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 487, 8), 'j', result_iadd_1505)
        
        
        # Assigning a Subscript to a Name (line 488):
        
        # Assigning a Subscript to a Name (line 488):
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 488)
        j_1506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 29), 'j')
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 488)
        b_1507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 26), 'b')
        # Getting the type of 'blossomchilds' (line 488)
        blossomchilds_1508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 12), 'blossomchilds')
        # Obtaining the member '__getitem__' of a type (line 488)
        getitem___1509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 12), blossomchilds_1508, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 488)
        subscript_call_result_1510 = invoke(stypy.reporting.localization.Localization(__file__, 488, 12), getitem___1509, b_1507)
        
        # Obtaining the member '__getitem__' of a type (line 488)
        getitem___1511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 12), subscript_call_result_1510, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 488)
        subscript_call_result_1512 = invoke(stypy.reporting.localization.Localization(__file__, 488, 12), getitem___1511, j_1506)
        
        # Assigning a type to the variable 't' (line 488)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 't', subscript_call_result_1512)
        
        # Getting the type of 't' (line 489)
        t_1513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 11), 't')
        # Getting the type of 'nvertex' (line 489)
        nvertex_1514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 489, 16), 'nvertex')
        # Applying the binary operator '>=' (line 489)
        result_ge_1515 = python_operator(stypy.reporting.localization.Localization(__file__, 489, 11), '>=', t_1513, nvertex_1514)
        
        # Testing if the type of an if condition is none (line 489)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 489, 8), result_ge_1515):
            pass
        else:
            
            # Testing the type of an if condition (line 489)
            if_condition_1516 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 489, 8), result_ge_1515)
            # Assigning a type to the variable 'if_condition_1516' (line 489)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 489, 8), 'if_condition_1516', if_condition_1516)
            # SSA begins for if statement (line 489)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to augmentBlossom(...): (line 490)
            # Processing the call arguments (line 490)
            # Getting the type of 't' (line 490)
            t_1518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 27), 't', False)
            
            # Obtaining the type of the subscript
            # Getting the type of 'p' (line 490)
            p_1519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 39), 'p', False)
            int_1520 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 490, 43), 'int')
            # Applying the binary operator '^' (line 490)
            result_xor_1521 = python_operator(stypy.reporting.localization.Localization(__file__, 490, 39), '^', p_1519, int_1520)
            
            # Getting the type of 'endpoint' (line 490)
            endpoint_1522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 30), 'endpoint', False)
            # Obtaining the member '__getitem__' of a type (line 490)
            getitem___1523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 490, 30), endpoint_1522, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 490)
            subscript_call_result_1524 = invoke(stypy.reporting.localization.Localization(__file__, 490, 30), getitem___1523, result_xor_1521)
            
            # Processing the call keyword arguments (line 490)
            kwargs_1525 = {}
            # Getting the type of 'augmentBlossom' (line 490)
            augmentBlossom_1517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 490, 12), 'augmentBlossom', False)
            # Calling augmentBlossom(args, kwargs) (line 490)
            augmentBlossom_call_result_1526 = invoke(stypy.reporting.localization.Localization(__file__, 490, 12), augmentBlossom_1517, *[t_1518, subscript_call_result_1524], **kwargs_1525)
            
            # SSA join for if statement (line 489)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a BinOp to a Subscript (line 492):
        
        # Assigning a BinOp to a Subscript (line 492):
        # Getting the type of 'p' (line 492)
        p_1527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 28), 'p')
        int_1528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 492, 32), 'int')
        # Applying the binary operator '^' (line 492)
        result_xor_1529 = python_operator(stypy.reporting.localization.Localization(__file__, 492, 28), '^', p_1527, int_1528)
        
        # Getting the type of 'mate' (line 492)
        mate_1530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 8), 'mate')
        
        # Obtaining the type of the subscript
        # Getting the type of 'p' (line 492)
        p_1531 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 22), 'p')
        # Getting the type of 'endpoint' (line 492)
        endpoint_1532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 13), 'endpoint')
        # Obtaining the member '__getitem__' of a type (line 492)
        getitem___1533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 13), endpoint_1532, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 492)
        subscript_call_result_1534 = invoke(stypy.reporting.localization.Localization(__file__, 492, 13), getitem___1533, p_1531)
        
        # Storing an element on a container (line 492)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 492, 8), mate_1530, (subscript_call_result_1534, result_xor_1529))
        
        # Assigning a Name to a Subscript (line 493):
        
        # Assigning a Name to a Subscript (line 493):
        # Getting the type of 'p' (line 493)
        p_1535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 32), 'p')
        # Getting the type of 'mate' (line 493)
        mate_1536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 8), 'mate')
        
        # Obtaining the type of the subscript
        # Getting the type of 'p' (line 493)
        p_1537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 22), 'p')
        int_1538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 493, 26), 'int')
        # Applying the binary operator '^' (line 493)
        result_xor_1539 = python_operator(stypy.reporting.localization.Localization(__file__, 493, 22), '^', p_1537, int_1538)
        
        # Getting the type of 'endpoint' (line 493)
        endpoint_1540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 493, 13), 'endpoint')
        # Obtaining the member '__getitem__' of a type (line 493)
        getitem___1541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 493, 13), endpoint_1540, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 493)
        subscript_call_result_1542 = invoke(stypy.reporting.localization.Localization(__file__, 493, 13), getitem___1541, result_xor_1539)
        
        # Storing an element on a container (line 493)
        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 493, 8), mate_1536, (subscript_call_result_1542, p_1535))
        # Getting the type of 'DEBUG' (line 494)
        DEBUG_1543 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 11), 'DEBUG')
        # Testing if the type of an if condition is none (line 494)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 494, 8), DEBUG_1543):
            pass
        else:
            
            # Testing the type of an if condition (line 494)
            if_condition_1544 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 494, 8), DEBUG_1543)
            # Assigning a type to the variable 'if_condition_1544' (line 494)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 494, 8), 'if_condition_1544', if_condition_1544)
            # SSA begins for if statement (line 494)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to DEBUG(...): (line 494)
            # Processing the call arguments (line 494)
            str_1546 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 24), 'str', 'PAIR %d %d (k=%d)')
            
            # Obtaining an instance of the builtin type 'tuple' (line 494)
            tuple_1547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 47), 'tuple')
            # Adding type elements to the builtin type 'tuple' instance (line 494)
            # Adding element type (line 494)
            
            # Obtaining the type of the subscript
            # Getting the type of 'p' (line 494)
            p_1548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 56), 'p', False)
            # Getting the type of 'endpoint' (line 494)
            endpoint_1549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 47), 'endpoint', False)
            # Obtaining the member '__getitem__' of a type (line 494)
            getitem___1550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 47), endpoint_1549, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 494)
            subscript_call_result_1551 = invoke(stypy.reporting.localization.Localization(__file__, 494, 47), getitem___1550, p_1548)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 47), tuple_1547, subscript_call_result_1551)
            # Adding element type (line 494)
            
            # Obtaining the type of the subscript
            # Getting the type of 'p' (line 494)
            p_1552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 69), 'p', False)
            int_1553 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 73), 'int')
            # Applying the binary operator '^' (line 494)
            result_xor_1554 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 69), '^', p_1552, int_1553)
            
            # Getting the type of 'endpoint' (line 494)
            endpoint_1555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 60), 'endpoint', False)
            # Obtaining the member '__getitem__' of a type (line 494)
            getitem___1556 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 494, 60), endpoint_1555, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 494)
            subscript_call_result_1557 = invoke(stypy.reporting.localization.Localization(__file__, 494, 60), getitem___1556, result_xor_1554)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 47), tuple_1547, subscript_call_result_1557)
            # Adding element type (line 494)
            # Getting the type of 'p' (line 494)
            p_1558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 77), 'p', False)
            int_1559 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 494, 82), 'int')
            # Applying the binary operator '//' (line 494)
            result_floordiv_1560 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 77), '//', p_1558, int_1559)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 494, 47), tuple_1547, result_floordiv_1560)
            
            # Applying the binary operator '%' (line 494)
            result_mod_1561 = python_operator(stypy.reporting.localization.Localization(__file__, 494, 24), '%', str_1546, tuple_1547)
            
            # Processing the call keyword arguments (line 494)
            kwargs_1562 = {}
            # Getting the type of 'DEBUG' (line 494)
            DEBUG_1545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 494, 18), 'DEBUG', False)
            # Calling DEBUG(args, kwargs) (line 494)
            DEBUG_call_result_1563 = invoke(stypy.reporting.localization.Localization(__file__, 494, 18), DEBUG_1545, *[result_mod_1561], **kwargs_1562)
            
            # SSA join for if statement (line 494)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for while statement (line 479)
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Assigning a BinOp to a Subscript (line 496):
    
    # Assigning a BinOp to a Subscript (line 496):
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 496)
    i_1564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 40), 'i')
    slice_1565 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 496, 23), i_1564, None, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 496)
    b_1566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 37), 'b')
    # Getting the type of 'blossomchilds' (line 496)
    blossomchilds_1567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 23), 'blossomchilds')
    # Obtaining the member '__getitem__' of a type (line 496)
    getitem___1568 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 23), blossomchilds_1567, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 496)
    subscript_call_result_1569 = invoke(stypy.reporting.localization.Localization(__file__, 496, 23), getitem___1568, b_1566)
    
    # Obtaining the member '__getitem__' of a type (line 496)
    getitem___1570 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 23), subscript_call_result_1569, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 496)
    subscript_call_result_1571 = invoke(stypy.reporting.localization.Localization(__file__, 496, 23), getitem___1570, slice_1565)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 496)
    i_1572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 64), 'i')
    slice_1573 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 496, 46), None, i_1572, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 496)
    b_1574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 60), 'b')
    # Getting the type of 'blossomchilds' (line 496)
    blossomchilds_1575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 46), 'blossomchilds')
    # Obtaining the member '__getitem__' of a type (line 496)
    getitem___1576 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 46), blossomchilds_1575, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 496)
    subscript_call_result_1577 = invoke(stypy.reporting.localization.Localization(__file__, 496, 46), getitem___1576, b_1574)
    
    # Obtaining the member '__getitem__' of a type (line 496)
    getitem___1578 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 496, 46), subscript_call_result_1577, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 496)
    subscript_call_result_1579 = invoke(stypy.reporting.localization.Localization(__file__, 496, 46), getitem___1578, slice_1573)
    
    # Applying the binary operator '+' (line 496)
    result_add_1580 = python_operator(stypy.reporting.localization.Localization(__file__, 496, 23), '+', subscript_call_result_1571, subscript_call_result_1579)
    
    # Getting the type of 'blossomchilds' (line 496)
    blossomchilds_1581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 4), 'blossomchilds')
    # Getting the type of 'b' (line 496)
    b_1582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 496, 18), 'b')
    # Storing an element on a container (line 496)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 496, 4), blossomchilds_1581, (b_1582, result_add_1580))
    
    # Assigning a BinOp to a Subscript (line 497):
    
    # Assigning a BinOp to a Subscript (line 497):
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 497)
    i_1583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 38), 'i')
    slice_1584 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 497, 22), i_1583, None, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 497)
    b_1585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 35), 'b')
    # Getting the type of 'blossomendps' (line 497)
    blossomendps_1586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 22), 'blossomendps')
    # Obtaining the member '__getitem__' of a type (line 497)
    getitem___1587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 22), blossomendps_1586, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 497)
    subscript_call_result_1588 = invoke(stypy.reporting.localization.Localization(__file__, 497, 22), getitem___1587, b_1585)
    
    # Obtaining the member '__getitem__' of a type (line 497)
    getitem___1589 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 22), subscript_call_result_1588, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 497)
    subscript_call_result_1590 = invoke(stypy.reporting.localization.Localization(__file__, 497, 22), getitem___1589, slice_1584)
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'i' (line 497)
    i_1591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 61), 'i')
    slice_1592 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 497, 44), None, i_1591, None)
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 497)
    b_1593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 57), 'b')
    # Getting the type of 'blossomendps' (line 497)
    blossomendps_1594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 44), 'blossomendps')
    # Obtaining the member '__getitem__' of a type (line 497)
    getitem___1595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 44), blossomendps_1594, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 497)
    subscript_call_result_1596 = invoke(stypy.reporting.localization.Localization(__file__, 497, 44), getitem___1595, b_1593)
    
    # Obtaining the member '__getitem__' of a type (line 497)
    getitem___1597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 497, 44), subscript_call_result_1596, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 497)
    subscript_call_result_1598 = invoke(stypy.reporting.localization.Localization(__file__, 497, 44), getitem___1597, slice_1592)
    
    # Applying the binary operator '+' (line 497)
    result_add_1599 = python_operator(stypy.reporting.localization.Localization(__file__, 497, 22), '+', subscript_call_result_1590, subscript_call_result_1598)
    
    # Getting the type of 'blossomendps' (line 497)
    blossomendps_1600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 4), 'blossomendps')
    # Getting the type of 'b' (line 497)
    b_1601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 497, 17), 'b')
    # Storing an element on a container (line 497)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 497, 4), blossomendps_1600, (b_1601, result_add_1599))
    
    # Assigning a Subscript to a Subscript (line 498):
    
    # Assigning a Subscript to a Subscript (line 498):
    
    # Obtaining the type of the subscript
    
    # Obtaining the type of the subscript
    int_1602 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 498, 50), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 498)
    b_1603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 47), 'b')
    # Getting the type of 'blossomchilds' (line 498)
    blossomchilds_1604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 33), 'blossomchilds')
    # Obtaining the member '__getitem__' of a type (line 498)
    getitem___1605 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 33), blossomchilds_1604, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 498)
    subscript_call_result_1606 = invoke(stypy.reporting.localization.Localization(__file__, 498, 33), getitem___1605, b_1603)
    
    # Obtaining the member '__getitem__' of a type (line 498)
    getitem___1607 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 33), subscript_call_result_1606, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 498)
    subscript_call_result_1608 = invoke(stypy.reporting.localization.Localization(__file__, 498, 33), getitem___1607, int_1602)
    
    # Getting the type of 'blossombase' (line 498)
    blossombase_1609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 21), 'blossombase')
    # Obtaining the member '__getitem__' of a type (line 498)
    getitem___1610 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 21), blossombase_1609, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 498)
    subscript_call_result_1611 = invoke(stypy.reporting.localization.Localization(__file__, 498, 21), getitem___1610, subscript_call_result_1608)
    
    # Getting the type of 'blossombase' (line 498)
    blossombase_1612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 4), 'blossombase')
    # Getting the type of 'b' (line 498)
    b_1613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 16), 'b')
    # Storing an element on a container (line 498)
    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 498, 4), blossombase_1612, (b_1613, subscript_call_result_1611))
    # Evaluating assert statement condition
    
    
    # Obtaining the type of the subscript
    # Getting the type of 'b' (line 499)
    b_1614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 23), 'b')
    # Getting the type of 'blossombase' (line 499)
    blossombase_1615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 11), 'blossombase')
    # Obtaining the member '__getitem__' of a type (line 499)
    getitem___1616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 499, 11), blossombase_1615, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 499)
    subscript_call_result_1617 = invoke(stypy.reporting.localization.Localization(__file__, 499, 11), getitem___1616, b_1614)
    
    # Getting the type of 'v' (line 499)
    v_1618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 499, 29), 'v')
    # Applying the binary operator '==' (line 499)
    result_eq_1619 = python_operator(stypy.reporting.localization.Localization(__file__, 499, 11), '==', subscript_call_result_1617, v_1618)
    
    
    # ################# End of 'augmentBlossom(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'augmentBlossom' in the type store
    # Getting the type of 'stypy_return_type' (line 457)
    stypy_return_type_1620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_1620)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'augmentBlossom'
    return stypy_return_type_1620

# Assigning a type to the variable 'augmentBlossom' (line 457)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 0), 'augmentBlossom', augmentBlossom)

@norecursion
def augmentMatching(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'augmentMatching'
    module_type_store = module_type_store.open_function_context('augmentMatching', 505, 0, False)
    
    # Passed parameters checking function
    augmentMatching.stypy_localization = localization
    augmentMatching.stypy_type_of_self = None
    augmentMatching.stypy_type_store = module_type_store
    augmentMatching.stypy_function_name = 'augmentMatching'
    augmentMatching.stypy_param_names_list = ['k']
    augmentMatching.stypy_varargs_param_name = None
    augmentMatching.stypy_kwargs_param_name = None
    augmentMatching.stypy_call_defaults = defaults
    augmentMatching.stypy_call_varargs = varargs
    augmentMatching.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'augmentMatching', ['k'], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'augmentMatching', localization, ['k'], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'augmentMatching(...)' code ##################

    
    # Assigning a Subscript to a Tuple (line 506):
    
    # Assigning a Subscript to a Name (line 506):
    
    # Obtaining the type of the subscript
    int_1621 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 506)
    k_1622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 23), 'k')
    # Getting the type of 'edges' (line 506)
    edges_1623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 506)
    getitem___1624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 17), edges_1623, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 506)
    subscript_call_result_1625 = invoke(stypy.reporting.localization.Localization(__file__, 506, 17), getitem___1624, k_1622)
    
    # Obtaining the member '__getitem__' of a type (line 506)
    getitem___1626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 4), subscript_call_result_1625, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 506)
    subscript_call_result_1627 = invoke(stypy.reporting.localization.Localization(__file__, 506, 4), getitem___1626, int_1621)
    
    # Assigning a type to the variable 'tuple_var_assignment_17' (line 506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 4), 'tuple_var_assignment_17', subscript_call_result_1627)
    
    # Assigning a Subscript to a Name (line 506):
    
    # Obtaining the type of the subscript
    int_1628 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 506)
    k_1629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 23), 'k')
    # Getting the type of 'edges' (line 506)
    edges_1630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 506)
    getitem___1631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 17), edges_1630, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 506)
    subscript_call_result_1632 = invoke(stypy.reporting.localization.Localization(__file__, 506, 17), getitem___1631, k_1629)
    
    # Obtaining the member '__getitem__' of a type (line 506)
    getitem___1633 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 4), subscript_call_result_1632, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 506)
    subscript_call_result_1634 = invoke(stypy.reporting.localization.Localization(__file__, 506, 4), getitem___1633, int_1628)
    
    # Assigning a type to the variable 'tuple_var_assignment_18' (line 506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 4), 'tuple_var_assignment_18', subscript_call_result_1634)
    
    # Assigning a Subscript to a Name (line 506):
    
    # Obtaining the type of the subscript
    int_1635 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 506, 4), 'int')
    
    # Obtaining the type of the subscript
    # Getting the type of 'k' (line 506)
    k_1636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 23), 'k')
    # Getting the type of 'edges' (line 506)
    edges_1637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 17), 'edges')
    # Obtaining the member '__getitem__' of a type (line 506)
    getitem___1638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 17), edges_1637, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 506)
    subscript_call_result_1639 = invoke(stypy.reporting.localization.Localization(__file__, 506, 17), getitem___1638, k_1636)
    
    # Obtaining the member '__getitem__' of a type (line 506)
    getitem___1640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 506, 4), subscript_call_result_1639, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 506)
    subscript_call_result_1641 = invoke(stypy.reporting.localization.Localization(__file__, 506, 4), getitem___1640, int_1635)
    
    # Assigning a type to the variable 'tuple_var_assignment_19' (line 506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 4), 'tuple_var_assignment_19', subscript_call_result_1641)
    
    # Assigning a Name to a Name (line 506):
    # Getting the type of 'tuple_var_assignment_17' (line 506)
    tuple_var_assignment_17_1642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 4), 'tuple_var_assignment_17')
    # Assigning a type to the variable 'v' (line 506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 5), 'v', tuple_var_assignment_17_1642)
    
    # Assigning a Name to a Name (line 506):
    # Getting the type of 'tuple_var_assignment_18' (line 506)
    tuple_var_assignment_18_1643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 4), 'tuple_var_assignment_18')
    # Assigning a type to the variable 'w' (line 506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 8), 'w', tuple_var_assignment_18_1643)
    
    # Assigning a Name to a Name (line 506):
    # Getting the type of 'tuple_var_assignment_19' (line 506)
    tuple_var_assignment_19_1644 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 506, 4), 'tuple_var_assignment_19')
    # Assigning a type to the variable 'wt' (line 506)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 506, 11), 'wt', tuple_var_assignment_19_1644)
    # Getting the type of 'DEBUG' (line 507)
    DEBUG_1645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 507)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 507, 4), DEBUG_1645):
        pass
    else:
        
        # Testing the type of an if condition (line 507)
        if_condition_1646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 507, 4), DEBUG_1645)
        # Assigning a type to the variable 'if_condition_1646' (line 507)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 507, 4), 'if_condition_1646', if_condition_1646)
        # SSA begins for if statement (line 507)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 507)
        # Processing the call arguments (line 507)
        str_1648 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 20), 'str', 'augmentMatching(%d) (v=%d w=%d)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 507)
        tuple_1649 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 507, 57), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 507)
        # Adding element type (line 507)
        # Getting the type of 'k' (line 507)
        k_1650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 57), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 57), tuple_1649, k_1650)
        # Adding element type (line 507)
        # Getting the type of 'v' (line 507)
        v_1651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 60), 'v', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 57), tuple_1649, v_1651)
        # Adding element type (line 507)
        # Getting the type of 'w' (line 507)
        w_1652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 63), 'w', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 507, 57), tuple_1649, w_1652)
        
        # Applying the binary operator '%' (line 507)
        result_mod_1653 = python_operator(stypy.reporting.localization.Localization(__file__, 507, 20), '%', str_1648, tuple_1649)
        
        # Processing the call keyword arguments (line 507)
        kwargs_1654 = {}
        # Getting the type of 'DEBUG' (line 507)
        DEBUG_1647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 507, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 507)
        DEBUG_call_result_1655 = invoke(stypy.reporting.localization.Localization(__file__, 507, 14), DEBUG_1647, *[result_mod_1653], **kwargs_1654)
        
        # SSA join for if statement (line 507)
        module_type_store = module_type_store.join_ssa_context()
        

    # Getting the type of 'DEBUG' (line 508)
    DEBUG_1656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 7), 'DEBUG')
    # Testing if the type of an if condition is none (line 508)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 508, 4), DEBUG_1656):
        pass
    else:
        
        # Testing the type of an if condition (line 508)
        if_condition_1657 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 508, 4), DEBUG_1656)
        # Assigning a type to the variable 'if_condition_1657' (line 508)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 508, 4), 'if_condition_1657', if_condition_1657)
        # SSA begins for if statement (line 508)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 508)
        # Processing the call arguments (line 508)
        str_1659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 20), 'str', 'PAIR %d %d (k=%d)')
        
        # Obtaining an instance of the builtin type 'tuple' (line 508)
        tuple_1660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 508, 43), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 508)
        # Adding element type (line 508)
        # Getting the type of 'v' (line 508)
        v_1661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 43), 'v', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 508, 43), tuple_1660, v_1661)
        # Adding element type (line 508)
        # Getting the type of 'w' (line 508)
        w_1662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 46), 'w', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 508, 43), tuple_1660, w_1662)
        # Adding element type (line 508)
        # Getting the type of 'k' (line 508)
        k_1663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 49), 'k', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 508, 43), tuple_1660, k_1663)
        
        # Applying the binary operator '%' (line 508)
        result_mod_1664 = python_operator(stypy.reporting.localization.Localization(__file__, 508, 20), '%', str_1659, tuple_1660)
        
        # Processing the call keyword arguments (line 508)
        kwargs_1665 = {}
        # Getting the type of 'DEBUG' (line 508)
        DEBUG_1658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 508, 14), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 508)
        DEBUG_call_result_1666 = invoke(stypy.reporting.localization.Localization(__file__, 508, 14), DEBUG_1658, *[result_mod_1664], **kwargs_1665)
        
        # SSA join for if statement (line 508)
        module_type_store = module_type_store.join_ssa_context()
        

    
    
    # Obtaining an instance of the builtin type 'tuple' (line 509)
    tuple_1667 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 19), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 509)
    # Adding element type (line 509)
    
    # Obtaining an instance of the builtin type 'tuple' (line 509)
    tuple_1668 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 20), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 509)
    # Adding element type (line 509)
    # Getting the type of 'v' (line 509)
    v_1669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 20), 'v')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 20), tuple_1668, v_1669)
    # Adding element type (line 509)
    int_1670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 23), 'int')
    # Getting the type of 'k' (line 509)
    k_1671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 27), 'k')
    # Applying the binary operator '*' (line 509)
    result_mul_1672 = python_operator(stypy.reporting.localization.Localization(__file__, 509, 23), '*', int_1670, k_1671)
    
    int_1673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 31), 'int')
    # Applying the binary operator '+' (line 509)
    result_add_1674 = python_operator(stypy.reporting.localization.Localization(__file__, 509, 23), '+', result_mul_1672, int_1673)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 20), tuple_1668, result_add_1674)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 19), tuple_1667, tuple_1668)
    # Adding element type (line 509)
    
    # Obtaining an instance of the builtin type 'tuple' (line 509)
    tuple_1675 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 36), 'tuple')
    # Adding type elements to the builtin type 'tuple' instance (line 509)
    # Adding element type (line 509)
    # Getting the type of 'w' (line 509)
    w_1676 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 36), 'w')
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 36), tuple_1675, w_1676)
    # Adding element type (line 509)
    int_1677 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 509, 39), 'int')
    # Getting the type of 'k' (line 509)
    k_1678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 43), 'k')
    # Applying the binary operator '*' (line 509)
    result_mul_1679 = python_operator(stypy.reporting.localization.Localization(__file__, 509, 39), '*', int_1677, k_1678)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 36), tuple_1675, result_mul_1679)
    
    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 19), tuple_1667, tuple_1675)
    
    # Testing if the for loop is going to be iterated (line 509)
    # Testing the type of a for loop iterable (line 509)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 509, 4), tuple_1667)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 509, 4), tuple_1667):
        # Getting the type of the for loop variable (line 509)
        for_loop_var_1680 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 509, 4), tuple_1667)
        # Assigning a type to the variable 's' (line 509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 509, 4), 's', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 4), for_loop_var_1680))
        # Assigning a type to the variable 'p' (line 509)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 509, 4), 'p', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 509, 4), for_loop_var_1680))
        # SSA begins for a for statement (line 509)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        int_1681 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 14), 'int')
        # Testing if the while is going to be iterated (line 513)
        # Testing the type of an if condition (line 513)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 513, 8), int_1681)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 513, 8), int_1681):
            # SSA begins for while statement (line 513)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Assigning a Subscript to a Name (line 514):
            
            # Assigning a Subscript to a Name (line 514):
            
            # Obtaining the type of the subscript
            # Getting the type of 's' (line 514)
            s_1682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 27), 's')
            # Getting the type of 'inblossom' (line 514)
            inblossom_1683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 514, 17), 'inblossom')
            # Obtaining the member '__getitem__' of a type (line 514)
            getitem___1684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 514, 17), inblossom_1683, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 514)
            subscript_call_result_1685 = invoke(stypy.reporting.localization.Localization(__file__, 514, 17), getitem___1684, s_1682)
            
            # Assigning a type to the variable 'bs' (line 514)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 514, 12), 'bs', subscript_call_result_1685)
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'bs' (line 515)
            bs_1686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 25), 'bs')
            # Getting the type of 'label' (line 515)
            label_1687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 19), 'label')
            # Obtaining the member '__getitem__' of a type (line 515)
            getitem___1688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 19), label_1687, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 515)
            subscript_call_result_1689 = invoke(stypy.reporting.localization.Localization(__file__, 515, 19), getitem___1688, bs_1686)
            
            int_1690 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 515, 32), 'int')
            # Applying the binary operator '==' (line 515)
            result_eq_1691 = python_operator(stypy.reporting.localization.Localization(__file__, 515, 19), '==', subscript_call_result_1689, int_1690)
            
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'bs' (line 516)
            bs_1692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 28), 'bs')
            # Getting the type of 'labelend' (line 516)
            labelend_1693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 19), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 516)
            getitem___1694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 19), labelend_1693, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 516)
            subscript_call_result_1695 = invoke(stypy.reporting.localization.Localization(__file__, 516, 19), getitem___1694, bs_1692)
            
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'bs' (line 516)
            bs_1696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 52), 'bs')
            # Getting the type of 'blossombase' (line 516)
            blossombase_1697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 40), 'blossombase')
            # Obtaining the member '__getitem__' of a type (line 516)
            getitem___1698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 40), blossombase_1697, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 516)
            subscript_call_result_1699 = invoke(stypy.reporting.localization.Localization(__file__, 516, 40), getitem___1698, bs_1696)
            
            # Getting the type of 'mate' (line 516)
            mate_1700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 516, 35), 'mate')
            # Obtaining the member '__getitem__' of a type (line 516)
            getitem___1701 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 516, 35), mate_1700, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 516)
            subscript_call_result_1702 = invoke(stypy.reporting.localization.Localization(__file__, 516, 35), getitem___1701, subscript_call_result_1699)
            
            # Applying the binary operator '==' (line 516)
            result_eq_1703 = python_operator(stypy.reporting.localization.Localization(__file__, 516, 19), '==', subscript_call_result_1695, subscript_call_result_1702)
            
            
            # Getting the type of 'bs' (line 518)
            bs_1704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 15), 'bs')
            # Getting the type of 'nvertex' (line 518)
            nvertex_1705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 21), 'nvertex')
            # Applying the binary operator '>=' (line 518)
            result_ge_1706 = python_operator(stypy.reporting.localization.Localization(__file__, 518, 15), '>=', bs_1704, nvertex_1705)
            
            # Testing if the type of an if condition is none (line 518)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 518, 12), result_ge_1706):
                pass
            else:
                
                # Testing the type of an if condition (line 518)
                if_condition_1707 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 518, 12), result_ge_1706)
                # Assigning a type to the variable 'if_condition_1707' (line 518)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 12), 'if_condition_1707', if_condition_1707)
                # SSA begins for if statement (line 518)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to augmentBlossom(...): (line 519)
                # Processing the call arguments (line 519)
                # Getting the type of 'bs' (line 519)
                bs_1709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 31), 'bs', False)
                # Getting the type of 's' (line 519)
                s_1710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 35), 's', False)
                # Processing the call keyword arguments (line 519)
                kwargs_1711 = {}
                # Getting the type of 'augmentBlossom' (line 519)
                augmentBlossom_1708 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 519, 16), 'augmentBlossom', False)
                # Calling augmentBlossom(args, kwargs) (line 519)
                augmentBlossom_call_result_1712 = invoke(stypy.reporting.localization.Localization(__file__, 519, 16), augmentBlossom_1708, *[bs_1709, s_1710], **kwargs_1711)
                
                # SSA join for if statement (line 518)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Subscript (line 521):
            
            # Assigning a Name to a Subscript (line 521):
            # Getting the type of 'p' (line 521)
            p_1713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 22), 'p')
            # Getting the type of 'mate' (line 521)
            mate_1714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 12), 'mate')
            # Getting the type of 's' (line 521)
            s_1715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 17), 's')
            # Storing an element on a container (line 521)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 521, 12), mate_1714, (s_1715, p_1713))
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'bs' (line 523)
            bs_1716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 24), 'bs')
            # Getting the type of 'labelend' (line 523)
            labelend_1717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 15), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 523)
            getitem___1718 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 15), labelend_1717, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 523)
            subscript_call_result_1719 = invoke(stypy.reporting.localization.Localization(__file__, 523, 15), getitem___1718, bs_1716)
            
            int_1720 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 523, 31), 'int')
            # Applying the binary operator '==' (line 523)
            result_eq_1721 = python_operator(stypy.reporting.localization.Localization(__file__, 523, 15), '==', subscript_call_result_1719, int_1720)
            
            # Testing if the type of an if condition is none (line 523)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 523, 12), result_eq_1721):
                pass
            else:
                
                # Testing the type of an if condition (line 523)
                if_condition_1722 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 523, 12), result_eq_1721)
                # Assigning a type to the variable 'if_condition_1722' (line 523)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 12), 'if_condition_1722', if_condition_1722)
                # SSA begins for if statement (line 523)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # SSA join for if statement (line 523)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Subscript to a Name (line 526):
            
            # Assigning a Subscript to a Name (line 526):
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'bs' (line 526)
            bs_1723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 34), 'bs')
            # Getting the type of 'labelend' (line 526)
            labelend_1724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 25), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 526)
            getitem___1725 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 25), labelend_1724, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 526)
            subscript_call_result_1726 = invoke(stypy.reporting.localization.Localization(__file__, 526, 25), getitem___1725, bs_1723)
            
            # Getting the type of 'endpoint' (line 526)
            endpoint_1727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 526, 16), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 526)
            getitem___1728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 526, 16), endpoint_1727, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 526)
            subscript_call_result_1729 = invoke(stypy.reporting.localization.Localization(__file__, 526, 16), getitem___1728, subscript_call_result_1726)
            
            # Assigning a type to the variable 't' (line 526)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 526, 12), 't', subscript_call_result_1729)
            
            # Assigning a Subscript to a Name (line 527):
            
            # Assigning a Subscript to a Name (line 527):
            
            # Obtaining the type of the subscript
            # Getting the type of 't' (line 527)
            t_1730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 27), 't')
            # Getting the type of 'inblossom' (line 527)
            inblossom_1731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 17), 'inblossom')
            # Obtaining the member '__getitem__' of a type (line 527)
            getitem___1732 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 17), inblossom_1731, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 527)
            subscript_call_result_1733 = invoke(stypy.reporting.localization.Localization(__file__, 527, 17), getitem___1732, t_1730)
            
            # Assigning a type to the variable 'bt' (line 527)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 12), 'bt', subscript_call_result_1733)
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'bt' (line 528)
            bt_1734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 25), 'bt')
            # Getting the type of 'label' (line 528)
            label_1735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 19), 'label')
            # Obtaining the member '__getitem__' of a type (line 528)
            getitem___1736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 19), label_1735, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 528)
            subscript_call_result_1737 = invoke(stypy.reporting.localization.Localization(__file__, 528, 19), getitem___1736, bt_1734)
            
            int_1738 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 528, 32), 'int')
            # Applying the binary operator '==' (line 528)
            result_eq_1739 = python_operator(stypy.reporting.localization.Localization(__file__, 528, 19), '==', subscript_call_result_1737, int_1738)
            
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'bt' (line 530)
            bt_1740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 28), 'bt')
            # Getting the type of 'labelend' (line 530)
            labelend_1741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 19), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 530)
            getitem___1742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 19), labelend_1741, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 530)
            subscript_call_result_1743 = invoke(stypy.reporting.localization.Localization(__file__, 530, 19), getitem___1742, bt_1740)
            
            int_1744 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 35), 'int')
            # Applying the binary operator '>=' (line 530)
            result_ge_1745 = python_operator(stypy.reporting.localization.Localization(__file__, 530, 19), '>=', subscript_call_result_1743, int_1744)
            
            
            # Assigning a Subscript to a Name (line 531):
            
            # Assigning a Subscript to a Name (line 531):
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'bt' (line 531)
            bt_1746 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 34), 'bt')
            # Getting the type of 'labelend' (line 531)
            labelend_1747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 25), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 531)
            getitem___1748 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 25), labelend_1747, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 531)
            subscript_call_result_1749 = invoke(stypy.reporting.localization.Localization(__file__, 531, 25), getitem___1748, bt_1746)
            
            # Getting the type of 'endpoint' (line 531)
            endpoint_1750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 16), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 531)
            getitem___1751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 16), endpoint_1750, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 531)
            subscript_call_result_1752 = invoke(stypy.reporting.localization.Localization(__file__, 531, 16), getitem___1751, subscript_call_result_1749)
            
            # Assigning a type to the variable 's' (line 531)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 12), 's', subscript_call_result_1752)
            
            # Assigning a Subscript to a Name (line 532):
            
            # Assigning a Subscript to a Name (line 532):
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'bt' (line 532)
            bt_1753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 34), 'bt')
            # Getting the type of 'labelend' (line 532)
            labelend_1754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 25), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 532)
            getitem___1755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 25), labelend_1754, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 532)
            subscript_call_result_1756 = invoke(stypy.reporting.localization.Localization(__file__, 532, 25), getitem___1755, bt_1753)
            
            int_1757 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 532, 40), 'int')
            # Applying the binary operator '^' (line 532)
            result_xor_1758 = python_operator(stypy.reporting.localization.Localization(__file__, 532, 25), '^', subscript_call_result_1756, int_1757)
            
            # Getting the type of 'endpoint' (line 532)
            endpoint_1759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 16), 'endpoint')
            # Obtaining the member '__getitem__' of a type (line 532)
            getitem___1760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 16), endpoint_1759, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 532)
            subscript_call_result_1761 = invoke(stypy.reporting.localization.Localization(__file__, 532, 16), getitem___1760, result_xor_1758)
            
            # Assigning a type to the variable 'j' (line 532)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 12), 'j', subscript_call_result_1761)
            # Evaluating assert statement condition
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'bt' (line 534)
            bt_1762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 31), 'bt')
            # Getting the type of 'blossombase' (line 534)
            blossombase_1763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 19), 'blossombase')
            # Obtaining the member '__getitem__' of a type (line 534)
            getitem___1764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 19), blossombase_1763, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 534)
            subscript_call_result_1765 = invoke(stypy.reporting.localization.Localization(__file__, 534, 19), getitem___1764, bt_1762)
            
            # Getting the type of 't' (line 534)
            t_1766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 38), 't')
            # Applying the binary operator '==' (line 534)
            result_eq_1767 = python_operator(stypy.reporting.localization.Localization(__file__, 534, 19), '==', subscript_call_result_1765, t_1766)
            
            
            # Getting the type of 'bt' (line 535)
            bt_1768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 15), 'bt')
            # Getting the type of 'nvertex' (line 535)
            nvertex_1769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 535, 21), 'nvertex')
            # Applying the binary operator '>=' (line 535)
            result_ge_1770 = python_operator(stypy.reporting.localization.Localization(__file__, 535, 15), '>=', bt_1768, nvertex_1769)
            
            # Testing if the type of an if condition is none (line 535)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 535, 12), result_ge_1770):
                pass
            else:
                
                # Testing the type of an if condition (line 535)
                if_condition_1771 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 535, 12), result_ge_1770)
                # Assigning a type to the variable 'if_condition_1771' (line 535)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 535, 12), 'if_condition_1771', if_condition_1771)
                # SSA begins for if statement (line 535)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to augmentBlossom(...): (line 536)
                # Processing the call arguments (line 536)
                # Getting the type of 'bt' (line 536)
                bt_1773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 31), 'bt', False)
                # Getting the type of 'j' (line 536)
                j_1774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 35), 'j', False)
                # Processing the call keyword arguments (line 536)
                kwargs_1775 = {}
                # Getting the type of 'augmentBlossom' (line 536)
                augmentBlossom_1772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 16), 'augmentBlossom', False)
                # Calling augmentBlossom(args, kwargs) (line 536)
                augmentBlossom_call_result_1776 = invoke(stypy.reporting.localization.Localization(__file__, 536, 16), augmentBlossom_1772, *[bt_1773, j_1774], **kwargs_1775)
                
                # SSA join for if statement (line 535)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Subscript to a Subscript (line 538):
            
            # Assigning a Subscript to a Subscript (line 538):
            
            # Obtaining the type of the subscript
            # Getting the type of 'bt' (line 538)
            bt_1777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 31), 'bt')
            # Getting the type of 'labelend' (line 538)
            labelend_1778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 22), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 538)
            getitem___1779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 538, 22), labelend_1778, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 538)
            subscript_call_result_1780 = invoke(stypy.reporting.localization.Localization(__file__, 538, 22), getitem___1779, bt_1777)
            
            # Getting the type of 'mate' (line 538)
            mate_1781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'mate')
            # Getting the type of 'j' (line 538)
            j_1782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 538, 17), 'j')
            # Storing an element on a container (line 538)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 538, 12), mate_1781, (j_1782, subscript_call_result_1780))
            
            # Assigning a BinOp to a Name (line 541):
            
            # Assigning a BinOp to a Name (line 541):
            
            # Obtaining the type of the subscript
            # Getting the type of 'bt' (line 541)
            bt_1783 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 25), 'bt')
            # Getting the type of 'labelend' (line 541)
            labelend_1784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 16), 'labelend')
            # Obtaining the member '__getitem__' of a type (line 541)
            getitem___1785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 16), labelend_1784, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 541)
            subscript_call_result_1786 = invoke(stypy.reporting.localization.Localization(__file__, 541, 16), getitem___1785, bt_1783)
            
            int_1787 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 541, 31), 'int')
            # Applying the binary operator '^' (line 541)
            result_xor_1788 = python_operator(stypy.reporting.localization.Localization(__file__, 541, 16), '^', subscript_call_result_1786, int_1787)
            
            # Assigning a type to the variable 'p' (line 541)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 12), 'p', result_xor_1788)
            # Getting the type of 'DEBUG' (line 542)
            DEBUG_1789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 15), 'DEBUG')
            # Testing if the type of an if condition is none (line 542)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 542, 12), DEBUG_1789):
                pass
            else:
                
                # Testing the type of an if condition (line 542)
                if_condition_1790 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 542, 12), DEBUG_1789)
                # Assigning a type to the variable 'if_condition_1790' (line 542)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 542, 12), 'if_condition_1790', if_condition_1790)
                # SSA begins for if statement (line 542)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to DEBUG(...): (line 542)
                # Processing the call arguments (line 542)
                str_1792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 28), 'str', 'PAIR %d %d (k=%d)')
                
                # Obtaining an instance of the builtin type 'tuple' (line 542)
                tuple_1793 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 51), 'tuple')
                # Adding type elements to the builtin type 'tuple' instance (line 542)
                # Adding element type (line 542)
                # Getting the type of 's' (line 542)
                s_1794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 51), 's', False)
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 51), tuple_1793, s_1794)
                # Adding element type (line 542)
                # Getting the type of 't' (line 542)
                t_1795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 54), 't', False)
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 51), tuple_1793, t_1795)
                # Adding element type (line 542)
                # Getting the type of 'p' (line 542)
                p_1796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 57), 'p', False)
                int_1797 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 542, 62), 'int')
                # Applying the binary operator '//' (line 542)
                result_floordiv_1798 = python_operator(stypy.reporting.localization.Localization(__file__, 542, 57), '//', p_1796, int_1797)
                
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 542, 51), tuple_1793, result_floordiv_1798)
                
                # Applying the binary operator '%' (line 542)
                result_mod_1799 = python_operator(stypy.reporting.localization.Localization(__file__, 542, 28), '%', str_1792, tuple_1793)
                
                # Processing the call keyword arguments (line 542)
                kwargs_1800 = {}
                # Getting the type of 'DEBUG' (line 542)
                DEBUG_1791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 22), 'DEBUG', False)
                # Calling DEBUG(args, kwargs) (line 542)
                DEBUG_call_result_1801 = invoke(stypy.reporting.localization.Localization(__file__, 542, 22), DEBUG_1791, *[result_mod_1799], **kwargs_1800)
                
                # SSA join for if statement (line 542)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for while statement (line 513)
            module_type_store = module_type_store.join_ssa_context()

        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    # ################# End of 'augmentMatching(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'augmentMatching' in the type store
    # Getting the type of 'stypy_return_type' (line 505)
    stypy_return_type_1802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_1802)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'augmentMatching'
    return stypy_return_type_1802

# Assigning a type to the variable 'augmentMatching' (line 505)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 505, 0), 'augmentMatching', augmentMatching)

@norecursion
def verifyOptimum(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'verifyOptimum'
    module_type_store = module_type_store.open_function_context('verifyOptimum', 546, 0, False)
    
    # Passed parameters checking function
    verifyOptimum.stypy_localization = localization
    verifyOptimum.stypy_type_of_self = None
    verifyOptimum.stypy_type_store = module_type_store
    verifyOptimum.stypy_function_name = 'verifyOptimum'
    verifyOptimum.stypy_param_names_list = []
    verifyOptimum.stypy_varargs_param_name = None
    verifyOptimum.stypy_kwargs_param_name = None
    verifyOptimum.stypy_call_defaults = defaults
    verifyOptimum.stypy_call_varargs = varargs
    verifyOptimum.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'verifyOptimum', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'verifyOptimum', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'verifyOptimum(...)' code ##################

    # Getting the type of 'maxcardinality' (line 547)
    maxcardinality_1803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 547, 7), 'maxcardinality')
    # Testing if the type of an if condition is none (line 547)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 547, 4), maxcardinality_1803):
        
        # Assigning a Num to a Name (line 552):
        
        # Assigning a Num to a Name (line 552):
        int_1818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 22), 'int')
        # Assigning a type to the variable 'vdualoffset' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'vdualoffset', int_1818)
    else:
        
        # Testing the type of an if condition (line 547)
        if_condition_1804 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 547, 4), maxcardinality_1803)
        # Assigning a type to the variable 'if_condition_1804' (line 547)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 547, 4), 'if_condition_1804', if_condition_1804)
        # SSA begins for if statement (line 547)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Assigning a Call to a Name (line 550):
        
        # Assigning a Call to a Name (line 550):
        
        # Call to max(...): (line 550)
        # Processing the call arguments (line 550)
        int_1806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 550, 26), 'int')
        
        
        # Call to min(...): (line 550)
        # Processing the call arguments (line 550)
        
        # Obtaining the type of the subscript
        # Getting the type of 'nvertex' (line 550)
        nvertex_1808 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 43), 'nvertex', False)
        slice_1809 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 550, 34), None, nvertex_1808, None)
        # Getting the type of 'dualvar' (line 550)
        dualvar_1810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 34), 'dualvar', False)
        # Obtaining the member '__getitem__' of a type (line 550)
        getitem___1811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 550, 34), dualvar_1810, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 550)
        subscript_call_result_1812 = invoke(stypy.reporting.localization.Localization(__file__, 550, 34), getitem___1811, slice_1809)
        
        # Processing the call keyword arguments (line 550)
        kwargs_1813 = {}
        # Getting the type of 'min' (line 550)
        min_1807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 30), 'min', False)
        # Calling min(args, kwargs) (line 550)
        min_call_result_1814 = invoke(stypy.reporting.localization.Localization(__file__, 550, 30), min_1807, *[subscript_call_result_1812], **kwargs_1813)
        
        # Applying the 'usub' unary operator (line 550)
        result___neg___1815 = python_operator(stypy.reporting.localization.Localization(__file__, 550, 29), 'usub', min_call_result_1814)
        
        # Processing the call keyword arguments (line 550)
        kwargs_1816 = {}
        # Getting the type of 'max' (line 550)
        max_1805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 550, 22), 'max', False)
        # Calling max(args, kwargs) (line 550)
        max_call_result_1817 = invoke(stypy.reporting.localization.Localization(__file__, 550, 22), max_1805, *[int_1806, result___neg___1815], **kwargs_1816)
        
        # Assigning a type to the variable 'vdualoffset' (line 550)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 550, 8), 'vdualoffset', max_call_result_1817)
        # SSA branch for the else part of an if statement (line 547)
        module_type_store.open_ssa_branch('else')
        
        # Assigning a Num to a Name (line 552):
        
        # Assigning a Num to a Name (line 552):
        int_1818 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 552, 22), 'int')
        # Assigning a type to the variable 'vdualoffset' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'vdualoffset', int_1818)
        # SSA join for if statement (line 547)
        module_type_store = module_type_store.join_ssa_context()
        

    # Evaluating assert statement condition
    
    
    # Call to min(...): (line 554)
    # Processing the call arguments (line 554)
    
    # Obtaining the type of the subscript
    # Getting the type of 'nvertex' (line 554)
    nvertex_1820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 24), 'nvertex', False)
    slice_1821 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 554, 15), None, nvertex_1820, None)
    # Getting the type of 'dualvar' (line 554)
    dualvar_1822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 15), 'dualvar', False)
    # Obtaining the member '__getitem__' of a type (line 554)
    getitem___1823 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 554, 15), dualvar_1822, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 554)
    subscript_call_result_1824 = invoke(stypy.reporting.localization.Localization(__file__, 554, 15), getitem___1823, slice_1821)
    
    # Processing the call keyword arguments (line 554)
    kwargs_1825 = {}
    # Getting the type of 'min' (line 554)
    min_1819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 11), 'min', False)
    # Calling min(args, kwargs) (line 554)
    min_call_result_1826 = invoke(stypy.reporting.localization.Localization(__file__, 554, 11), min_1819, *[subscript_call_result_1824], **kwargs_1825)
    
    # Getting the type of 'vdualoffset' (line 554)
    vdualoffset_1827 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 554, 36), 'vdualoffset')
    # Applying the binary operator '+' (line 554)
    result_add_1828 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 11), '+', min_call_result_1826, vdualoffset_1827)
    
    int_1829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 554, 51), 'int')
    # Applying the binary operator '>=' (line 554)
    result_ge_1830 = python_operator(stypy.reporting.localization.Localization(__file__, 554, 11), '>=', result_add_1828, int_1829)
    
    # Evaluating assert statement condition
    
    
    # Call to min(...): (line 555)
    # Processing the call arguments (line 555)
    
    # Obtaining the type of the subscript
    # Getting the type of 'nvertex' (line 555)
    nvertex_1832 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 23), 'nvertex', False)
    slice_1833 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 555, 15), nvertex_1832, None, None)
    # Getting the type of 'dualvar' (line 555)
    dualvar_1834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 15), 'dualvar', False)
    # Obtaining the member '__getitem__' of a type (line 555)
    getitem___1835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 555, 15), dualvar_1834, '__getitem__')
    # Calling the subscript (__getitem__) to obtain the elements type (line 555)
    subscript_call_result_1836 = invoke(stypy.reporting.localization.Localization(__file__, 555, 15), getitem___1835, slice_1833)
    
    # Processing the call keyword arguments (line 555)
    kwargs_1837 = {}
    # Getting the type of 'min' (line 555)
    min_1831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 555, 11), 'min', False)
    # Calling min(args, kwargs) (line 555)
    min_call_result_1838 = invoke(stypy.reporting.localization.Localization(__file__, 555, 11), min_1831, *[subscript_call_result_1836], **kwargs_1837)
    
    int_1839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 555, 37), 'int')
    # Applying the binary operator '>=' (line 555)
    result_ge_1840 = python_operator(stypy.reporting.localization.Localization(__file__, 555, 11), '>=', min_call_result_1838, int_1839)
    
    
    
    # Call to xrange(...): (line 558)
    # Processing the call arguments (line 558)
    # Getting the type of 'nedge' (line 558)
    nedge_1842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 20), 'nedge', False)
    # Processing the call keyword arguments (line 558)
    kwargs_1843 = {}
    # Getting the type of 'xrange' (line 558)
    xrange_1841 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 13), 'xrange', False)
    # Calling xrange(args, kwargs) (line 558)
    xrange_call_result_1844 = invoke(stypy.reporting.localization.Localization(__file__, 558, 13), xrange_1841, *[nedge_1842], **kwargs_1843)
    
    # Testing if the for loop is going to be iterated (line 558)
    # Testing the type of a for loop iterable (line 558)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 558, 4), xrange_call_result_1844)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 558, 4), xrange_call_result_1844):
        # Getting the type of the for loop variable (line 558)
        for_loop_var_1845 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 558, 4), xrange_call_result_1844)
        # Assigning a type to the variable 'k' (line 558)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 558, 4), 'k', for_loop_var_1845)
        # SSA begins for a for statement (line 558)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Assigning a Subscript to a Tuple (line 559):
        
        # Assigning a Subscript to a Name (line 559):
        
        # Obtaining the type of the subscript
        int_1846 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 8), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 559)
        k_1847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 27), 'k')
        # Getting the type of 'edges' (line 559)
        edges_1848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 21), 'edges')
        # Obtaining the member '__getitem__' of a type (line 559)
        getitem___1849 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 21), edges_1848, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 559)
        subscript_call_result_1850 = invoke(stypy.reporting.localization.Localization(__file__, 559, 21), getitem___1849, k_1847)
        
        # Obtaining the member '__getitem__' of a type (line 559)
        getitem___1851 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 8), subscript_call_result_1850, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 559)
        subscript_call_result_1852 = invoke(stypy.reporting.localization.Localization(__file__, 559, 8), getitem___1851, int_1846)
        
        # Assigning a type to the variable 'tuple_var_assignment_20' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'tuple_var_assignment_20', subscript_call_result_1852)
        
        # Assigning a Subscript to a Name (line 559):
        
        # Obtaining the type of the subscript
        int_1853 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 8), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 559)
        k_1854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 27), 'k')
        # Getting the type of 'edges' (line 559)
        edges_1855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 21), 'edges')
        # Obtaining the member '__getitem__' of a type (line 559)
        getitem___1856 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 21), edges_1855, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 559)
        subscript_call_result_1857 = invoke(stypy.reporting.localization.Localization(__file__, 559, 21), getitem___1856, k_1854)
        
        # Obtaining the member '__getitem__' of a type (line 559)
        getitem___1858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 8), subscript_call_result_1857, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 559)
        subscript_call_result_1859 = invoke(stypy.reporting.localization.Localization(__file__, 559, 8), getitem___1858, int_1853)
        
        # Assigning a type to the variable 'tuple_var_assignment_21' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'tuple_var_assignment_21', subscript_call_result_1859)
        
        # Assigning a Subscript to a Name (line 559):
        
        # Obtaining the type of the subscript
        int_1860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 8), 'int')
        
        # Obtaining the type of the subscript
        # Getting the type of 'k' (line 559)
        k_1861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 27), 'k')
        # Getting the type of 'edges' (line 559)
        edges_1862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 21), 'edges')
        # Obtaining the member '__getitem__' of a type (line 559)
        getitem___1863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 21), edges_1862, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 559)
        subscript_call_result_1864 = invoke(stypy.reporting.localization.Localization(__file__, 559, 21), getitem___1863, k_1861)
        
        # Obtaining the member '__getitem__' of a type (line 559)
        getitem___1865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 8), subscript_call_result_1864, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 559)
        subscript_call_result_1866 = invoke(stypy.reporting.localization.Localization(__file__, 559, 8), getitem___1865, int_1860)
        
        # Assigning a type to the variable 'tuple_var_assignment_22' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'tuple_var_assignment_22', subscript_call_result_1866)
        
        # Assigning a Name to a Name (line 559):
        # Getting the type of 'tuple_var_assignment_20' (line 559)
        tuple_var_assignment_20_1867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'tuple_var_assignment_20')
        # Assigning a type to the variable 'i' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 9), 'i', tuple_var_assignment_20_1867)
        
        # Assigning a Name to a Name (line 559):
        # Getting the type of 'tuple_var_assignment_21' (line 559)
        tuple_var_assignment_21_1868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'tuple_var_assignment_21')
        # Assigning a type to the variable 'j' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 12), 'j', tuple_var_assignment_21_1868)
        
        # Assigning a Name to a Name (line 559):
        # Getting the type of 'tuple_var_assignment_22' (line 559)
        tuple_var_assignment_22_1869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 8), 'tuple_var_assignment_22')
        # Assigning a type to the variable 'wt' (line 559)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 559, 15), 'wt', tuple_var_assignment_22_1869)
        
        # Assigning a BinOp to a Name (line 560):
        
        # Assigning a BinOp to a Name (line 560):
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 560)
        i_1870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 20), 'i')
        # Getting the type of 'dualvar' (line 560)
        dualvar_1871 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 12), 'dualvar')
        # Obtaining the member '__getitem__' of a type (line 560)
        getitem___1872 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 12), dualvar_1871, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 560)
        subscript_call_result_1873 = invoke(stypy.reporting.localization.Localization(__file__, 560, 12), getitem___1872, i_1870)
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 560)
        j_1874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 33), 'j')
        # Getting the type of 'dualvar' (line 560)
        dualvar_1875 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 25), 'dualvar')
        # Obtaining the member '__getitem__' of a type (line 560)
        getitem___1876 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 25), dualvar_1875, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 560)
        subscript_call_result_1877 = invoke(stypy.reporting.localization.Localization(__file__, 560, 25), getitem___1876, j_1874)
        
        # Applying the binary operator '+' (line 560)
        result_add_1878 = python_operator(stypy.reporting.localization.Localization(__file__, 560, 12), '+', subscript_call_result_1873, subscript_call_result_1877)
        
        int_1879 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 560, 38), 'int')
        # Getting the type of 'wt' (line 560)
        wt_1880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 42), 'wt')
        # Applying the binary operator '*' (line 560)
        result_mul_1881 = python_operator(stypy.reporting.localization.Localization(__file__, 560, 38), '*', int_1879, wt_1880)
        
        # Applying the binary operator '-' (line 560)
        result_sub_1882 = python_operator(stypy.reporting.localization.Localization(__file__, 560, 36), '-', result_add_1878, result_mul_1881)
        
        # Assigning a type to the variable 's' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 's', result_sub_1882)
        
        # Assigning a List to a Name (line 561):
        
        # Assigning a List to a Name (line 561):
        
        # Obtaining an instance of the builtin type 'list' (line 561)
        list_1883 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 561, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 561)
        # Adding element type (line 561)
        # Getting the type of 'i' (line 561)
        i_1884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 21), 'i')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 561, 20), list_1883, i_1884)
        
        # Assigning a type to the variable 'iblossoms' (line 561)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 561, 8), 'iblossoms', list_1883)
        
        # Assigning a List to a Name (line 562):
        
        # Assigning a List to a Name (line 562):
        
        # Obtaining an instance of the builtin type 'list' (line 562)
        list_1885 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 562, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 562)
        # Adding element type (line 562)
        # Getting the type of 'j' (line 562)
        j_1886 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 562, 21), 'j')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 562, 20), list_1885, j_1886)
        
        # Assigning a type to the variable 'jblossoms' (line 562)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 562, 8), 'jblossoms', list_1885)
        
        
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        int_1887 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 38), 'int')
        # Getting the type of 'iblossoms' (line 563)
        iblossoms_1888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 28), 'iblossoms')
        # Obtaining the member '__getitem__' of a type (line 563)
        getitem___1889 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 28), iblossoms_1888, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 563)
        subscript_call_result_1890 = invoke(stypy.reporting.localization.Localization(__file__, 563, 28), getitem___1889, int_1887)
        
        # Getting the type of 'blossomparent' (line 563)
        blossomparent_1891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 563, 14), 'blossomparent')
        # Obtaining the member '__getitem__' of a type (line 563)
        getitem___1892 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 563, 14), blossomparent_1891, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 563)
        subscript_call_result_1893 = invoke(stypy.reporting.localization.Localization(__file__, 563, 14), getitem___1892, subscript_call_result_1890)
        
        int_1894 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 563, 46), 'int')
        # Applying the binary operator '!=' (line 563)
        result_ne_1895 = python_operator(stypy.reporting.localization.Localization(__file__, 563, 14), '!=', subscript_call_result_1893, int_1894)
        
        # Testing if the while is going to be iterated (line 563)
        # Testing the type of an if condition (line 563)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 563, 8), result_ne_1895)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 563, 8), result_ne_1895):
            # SSA begins for while statement (line 563)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Call to append(...): (line 564)
            # Processing the call arguments (line 564)
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            int_1898 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 564, 53), 'int')
            # Getting the type of 'iblossoms' (line 564)
            iblossoms_1899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 43), 'iblossoms', False)
            # Obtaining the member '__getitem__' of a type (line 564)
            getitem___1900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 43), iblossoms_1899, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 564)
            subscript_call_result_1901 = invoke(stypy.reporting.localization.Localization(__file__, 564, 43), getitem___1900, int_1898)
            
            # Getting the type of 'blossomparent' (line 564)
            blossomparent_1902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 29), 'blossomparent', False)
            # Obtaining the member '__getitem__' of a type (line 564)
            getitem___1903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 29), blossomparent_1902, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 564)
            subscript_call_result_1904 = invoke(stypy.reporting.localization.Localization(__file__, 564, 29), getitem___1903, subscript_call_result_1901)
            
            # Processing the call keyword arguments (line 564)
            kwargs_1905 = {}
            # Getting the type of 'iblossoms' (line 564)
            iblossoms_1896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 12), 'iblossoms', False)
            # Obtaining the member 'append' of a type (line 564)
            append_1897 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 12), iblossoms_1896, 'append')
            # Calling append(args, kwargs) (line 564)
            append_call_result_1906 = invoke(stypy.reporting.localization.Localization(__file__, 564, 12), append_1897, *[subscript_call_result_1904], **kwargs_1905)
            
            # SSA join for while statement (line 563)
            module_type_store = module_type_store.join_ssa_context()

        
        
        
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        int_1907 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 38), 'int')
        # Getting the type of 'jblossoms' (line 565)
        jblossoms_1908 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 28), 'jblossoms')
        # Obtaining the member '__getitem__' of a type (line 565)
        getitem___1909 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 28), jblossoms_1908, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 565)
        subscript_call_result_1910 = invoke(stypy.reporting.localization.Localization(__file__, 565, 28), getitem___1909, int_1907)
        
        # Getting the type of 'blossomparent' (line 565)
        blossomparent_1911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 14), 'blossomparent')
        # Obtaining the member '__getitem__' of a type (line 565)
        getitem___1912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 14), blossomparent_1911, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 565)
        subscript_call_result_1913 = invoke(stypy.reporting.localization.Localization(__file__, 565, 14), getitem___1912, subscript_call_result_1910)
        
        int_1914 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 565, 46), 'int')
        # Applying the binary operator '!=' (line 565)
        result_ne_1915 = python_operator(stypy.reporting.localization.Localization(__file__, 565, 14), '!=', subscript_call_result_1913, int_1914)
        
        # Testing if the while is going to be iterated (line 565)
        # Testing the type of an if condition (line 565)
        is_suitable_condition(stypy.reporting.localization.Localization(__file__, 565, 8), result_ne_1915)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 565, 8), result_ne_1915):
            # SSA begins for while statement (line 565)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
            
            # Call to append(...): (line 566)
            # Processing the call arguments (line 566)
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            int_1918 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 566, 53), 'int')
            # Getting the type of 'jblossoms' (line 566)
            jblossoms_1919 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 43), 'jblossoms', False)
            # Obtaining the member '__getitem__' of a type (line 566)
            getitem___1920 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 43), jblossoms_1919, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 566)
            subscript_call_result_1921 = invoke(stypy.reporting.localization.Localization(__file__, 566, 43), getitem___1920, int_1918)
            
            # Getting the type of 'blossomparent' (line 566)
            blossomparent_1922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 29), 'blossomparent', False)
            # Obtaining the member '__getitem__' of a type (line 566)
            getitem___1923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 29), blossomparent_1922, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 566)
            subscript_call_result_1924 = invoke(stypy.reporting.localization.Localization(__file__, 566, 29), getitem___1923, subscript_call_result_1921)
            
            # Processing the call keyword arguments (line 566)
            kwargs_1925 = {}
            # Getting the type of 'jblossoms' (line 566)
            jblossoms_1916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 566, 12), 'jblossoms', False)
            # Obtaining the member 'append' of a type (line 566)
            append_1917 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 566, 12), jblossoms_1916, 'append')
            # Calling append(args, kwargs) (line 566)
            append_call_result_1926 = invoke(stypy.reporting.localization.Localization(__file__, 566, 12), append_1917, *[subscript_call_result_1924], **kwargs_1925)
            
            # SSA join for while statement (line 565)
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to reverse(...): (line 567)
        # Processing the call keyword arguments (line 567)
        kwargs_1929 = {}
        # Getting the type of 'iblossoms' (line 567)
        iblossoms_1927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'iblossoms', False)
        # Obtaining the member 'reverse' of a type (line 567)
        reverse_1928 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 8), iblossoms_1927, 'reverse')
        # Calling reverse(args, kwargs) (line 567)
        reverse_call_result_1930 = invoke(stypy.reporting.localization.Localization(__file__, 567, 8), reverse_1928, *[], **kwargs_1929)
        
        
        # Call to reverse(...): (line 568)
        # Processing the call keyword arguments (line 568)
        kwargs_1933 = {}
        # Getting the type of 'jblossoms' (line 568)
        jblossoms_1931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 568, 8), 'jblossoms', False)
        # Obtaining the member 'reverse' of a type (line 568)
        reverse_1932 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 568, 8), jblossoms_1931, 'reverse')
        # Calling reverse(args, kwargs) (line 568)
        reverse_call_result_1934 = invoke(stypy.reporting.localization.Localization(__file__, 568, 8), reverse_1932, *[], **kwargs_1933)
        
        
        
        # Call to zip(...): (line 569)
        # Processing the call arguments (line 569)
        # Getting the type of 'iblossoms' (line 569)
        iblossoms_1936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 28), 'iblossoms', False)
        # Getting the type of 'jblossoms' (line 569)
        jblossoms_1937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 39), 'jblossoms', False)
        # Processing the call keyword arguments (line 569)
        kwargs_1938 = {}
        # Getting the type of 'zip' (line 569)
        zip_1935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 569, 24), 'zip', False)
        # Calling zip(args, kwargs) (line 569)
        zip_call_result_1939 = invoke(stypy.reporting.localization.Localization(__file__, 569, 24), zip_1935, *[iblossoms_1936, jblossoms_1937], **kwargs_1938)
        
        # Testing if the for loop is going to be iterated (line 569)
        # Testing the type of a for loop iterable (line 569)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 569, 8), zip_call_result_1939)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 569, 8), zip_call_result_1939):
            # Getting the type of the for loop variable (line 569)
            for_loop_var_1940 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 569, 8), zip_call_result_1939)
            # Assigning a type to the variable 'bi' (line 569)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'bi', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 8), for_loop_var_1940))
            # Assigning a type to the variable 'bj' (line 569)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 569, 8), 'bj', get_contained_elements_type(stypy.reporting.localization.Localization(__file__, 569, 8), for_loop_var_1940))
            # SSA begins for a for statement (line 569)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Getting the type of 'bi' (line 570)
            bi_1941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 15), 'bi')
            # Getting the type of 'bj' (line 570)
            bj_1942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 21), 'bj')
            # Applying the binary operator '!=' (line 570)
            result_ne_1943 = python_operator(stypy.reporting.localization.Localization(__file__, 570, 15), '!=', bi_1941, bj_1942)
            
            # Testing if the type of an if condition is none (line 570)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 570, 12), result_ne_1943):
                pass
            else:
                
                # Testing the type of an if condition (line 570)
                if_condition_1944 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 570, 12), result_ne_1943)
                # Assigning a type to the variable 'if_condition_1944' (line 570)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 570, 12), 'if_condition_1944', if_condition_1944)
                # SSA begins for if statement (line 570)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # SSA join for if statement (line 570)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Getting the type of 's' (line 572)
            s_1945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 12), 's')
            int_1946 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 572, 17), 'int')
            
            # Obtaining the type of the subscript
            # Getting the type of 'bi' (line 572)
            bi_1947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 29), 'bi')
            # Getting the type of 'dualvar' (line 572)
            dualvar_1948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 21), 'dualvar')
            # Obtaining the member '__getitem__' of a type (line 572)
            getitem___1949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 21), dualvar_1948, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 572)
            subscript_call_result_1950 = invoke(stypy.reporting.localization.Localization(__file__, 572, 21), getitem___1949, bi_1947)
            
            # Applying the binary operator '*' (line 572)
            result_mul_1951 = python_operator(stypy.reporting.localization.Localization(__file__, 572, 17), '*', int_1946, subscript_call_result_1950)
            
            # Applying the binary operator '+=' (line 572)
            result_iadd_1952 = python_operator(stypy.reporting.localization.Localization(__file__, 572, 12), '+=', s_1945, result_mul_1951)
            # Assigning a type to the variable 's' (line 572)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 572, 12), 's', result_iadd_1952)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Evaluating assert statement condition
        
        # Getting the type of 's' (line 573)
        s_1953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 573, 15), 's')
        int_1954 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 573, 20), 'int')
        # Applying the binary operator '>=' (line 573)
        result_ge_1955 = python_operator(stypy.reporting.localization.Localization(__file__, 573, 15), '>=', s_1953, int_1954)
        
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'i' (line 574)
        i_1956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 16), 'i')
        # Getting the type of 'mate' (line 574)
        mate_1957 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 11), 'mate')
        # Obtaining the member '__getitem__' of a type (line 574)
        getitem___1958 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 11), mate_1957, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 574)
        subscript_call_result_1959 = invoke(stypy.reporting.localization.Localization(__file__, 574, 11), getitem___1958, i_1956)
        
        int_1960 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 22), 'int')
        # Applying the binary operator '//' (line 574)
        result_floordiv_1961 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 11), '//', subscript_call_result_1959, int_1960)
        
        # Getting the type of 'k' (line 574)
        k_1962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 27), 'k')
        # Applying the binary operator '==' (line 574)
        result_eq_1963 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 11), '==', result_floordiv_1961, k_1962)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'j' (line 574)
        j_1964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 37), 'j')
        # Getting the type of 'mate' (line 574)
        mate_1965 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 32), 'mate')
        # Obtaining the member '__getitem__' of a type (line 574)
        getitem___1966 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 32), mate_1965, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 574)
        subscript_call_result_1967 = invoke(stypy.reporting.localization.Localization(__file__, 574, 32), getitem___1966, j_1964)
        
        int_1968 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 43), 'int')
        # Applying the binary operator '//' (line 574)
        result_floordiv_1969 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 32), '//', subscript_call_result_1967, int_1968)
        
        # Getting the type of 'k' (line 574)
        k_1970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 48), 'k')
        # Applying the binary operator '==' (line 574)
        result_eq_1971 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 32), '==', result_floordiv_1969, k_1970)
        
        # Applying the binary operator 'or' (line 574)
        result_or_keyword_1972 = python_operator(stypy.reporting.localization.Localization(__file__, 574, 11), 'or', result_eq_1963, result_eq_1971)
        
        # Testing if the type of an if condition is none (line 574)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 574, 8), result_or_keyword_1972):
            pass
        else:
            
            # Testing the type of an if condition (line 574)
            if_condition_1973 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 574, 8), result_or_keyword_1972)
            # Assigning a type to the variable 'if_condition_1973' (line 574)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'if_condition_1973', if_condition_1973)
            # SSA begins for if statement (line 574)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Evaluating assert statement condition
            
            # Evaluating a boolean operation
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'i' (line 575)
            i_1974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 24), 'i')
            # Getting the type of 'mate' (line 575)
            mate_1975 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 19), 'mate')
            # Obtaining the member '__getitem__' of a type (line 575)
            getitem___1976 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 19), mate_1975, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 575)
            subscript_call_result_1977 = invoke(stypy.reporting.localization.Localization(__file__, 575, 19), getitem___1976, i_1974)
            
            int_1978 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 30), 'int')
            # Applying the binary operator '//' (line 575)
            result_floordiv_1979 = python_operator(stypy.reporting.localization.Localization(__file__, 575, 19), '//', subscript_call_result_1977, int_1978)
            
            # Getting the type of 'k' (line 575)
            k_1980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 35), 'k')
            # Applying the binary operator '==' (line 575)
            result_eq_1981 = python_operator(stypy.reporting.localization.Localization(__file__, 575, 19), '==', result_floordiv_1979, k_1980)
            
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'j' (line 575)
            j_1982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 46), 'j')
            # Getting the type of 'mate' (line 575)
            mate_1983 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 41), 'mate')
            # Obtaining the member '__getitem__' of a type (line 575)
            getitem___1984 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 575, 41), mate_1983, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 575)
            subscript_call_result_1985 = invoke(stypy.reporting.localization.Localization(__file__, 575, 41), getitem___1984, j_1982)
            
            int_1986 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 52), 'int')
            # Applying the binary operator '//' (line 575)
            result_floordiv_1987 = python_operator(stypy.reporting.localization.Localization(__file__, 575, 41), '//', subscript_call_result_1985, int_1986)
            
            # Getting the type of 'k' (line 575)
            k_1988 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 57), 'k')
            # Applying the binary operator '==' (line 575)
            result_eq_1989 = python_operator(stypy.reporting.localization.Localization(__file__, 575, 41), '==', result_floordiv_1987, k_1988)
            
            # Applying the binary operator 'and' (line 575)
            result_and_keyword_1990 = python_operator(stypy.reporting.localization.Localization(__file__, 575, 19), 'and', result_eq_1981, result_eq_1989)
            
            # Evaluating assert statement condition
            
            # Getting the type of 's' (line 576)
            s_1991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 19), 's')
            int_1992 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 576, 24), 'int')
            # Applying the binary operator '==' (line 576)
            result_eq_1993 = python_operator(stypy.reporting.localization.Localization(__file__, 576, 19), '==', s_1991, int_1992)
            
            # SSA join for if statement (line 574)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    
    # Call to xrange(...): (line 578)
    # Processing the call arguments (line 578)
    # Getting the type of 'nvertex' (line 578)
    nvertex_1995 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 20), 'nvertex', False)
    # Processing the call keyword arguments (line 578)
    kwargs_1996 = {}
    # Getting the type of 'xrange' (line 578)
    xrange_1994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 578, 13), 'xrange', False)
    # Calling xrange(args, kwargs) (line 578)
    xrange_call_result_1997 = invoke(stypy.reporting.localization.Localization(__file__, 578, 13), xrange_1994, *[nvertex_1995], **kwargs_1996)
    
    # Testing if the for loop is going to be iterated (line 578)
    # Testing the type of a for loop iterable (line 578)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 578, 4), xrange_call_result_1997)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 578, 4), xrange_call_result_1997):
        # Getting the type of the for loop variable (line 578)
        for_loop_var_1998 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 578, 4), xrange_call_result_1997)
        # Assigning a type to the variable 'v' (line 578)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 578, 4), 'v', for_loop_var_1998)
        # SSA begins for a for statement (line 578)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        # Evaluating assert statement condition
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'v' (line 579)
        v_1999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 20), 'v')
        # Getting the type of 'mate' (line 579)
        mate_2000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 15), 'mate')
        # Obtaining the member '__getitem__' of a type (line 579)
        getitem___2001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 15), mate_2000, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 579)
        subscript_call_result_2002 = invoke(stypy.reporting.localization.Localization(__file__, 579, 15), getitem___2001, v_1999)
        
        int_2003 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 26), 'int')
        # Applying the binary operator '>=' (line 579)
        result_ge_2004 = python_operator(stypy.reporting.localization.Localization(__file__, 579, 15), '>=', subscript_call_result_2002, int_2003)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'v' (line 579)
        v_2005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 39), 'v')
        # Getting the type of 'dualvar' (line 579)
        dualvar_2006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 31), 'dualvar')
        # Obtaining the member '__getitem__' of a type (line 579)
        getitem___2007 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 579, 31), dualvar_2006, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 579)
        subscript_call_result_2008 = invoke(stypy.reporting.localization.Localization(__file__, 579, 31), getitem___2007, v_2005)
        
        # Getting the type of 'vdualoffset' (line 579)
        vdualoffset_2009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 579, 44), 'vdualoffset')
        # Applying the binary operator '+' (line 579)
        result_add_2010 = python_operator(stypy.reporting.localization.Localization(__file__, 579, 31), '+', subscript_call_result_2008, vdualoffset_2009)
        
        int_2011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 579, 59), 'int')
        # Applying the binary operator '==' (line 579)
        result_eq_2012 = python_operator(stypy.reporting.localization.Localization(__file__, 579, 31), '==', result_add_2010, int_2011)
        
        # Applying the binary operator 'or' (line 579)
        result_or_keyword_2013 = python_operator(stypy.reporting.localization.Localization(__file__, 579, 15), 'or', result_ge_2004, result_eq_2012)
        
        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    
    # Call to xrange(...): (line 581)
    # Processing the call arguments (line 581)
    # Getting the type of 'nvertex' (line 581)
    nvertex_2015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 20), 'nvertex', False)
    int_2016 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 581, 29), 'int')
    # Getting the type of 'nvertex' (line 581)
    nvertex_2017 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 33), 'nvertex', False)
    # Applying the binary operator '*' (line 581)
    result_mul_2018 = python_operator(stypy.reporting.localization.Localization(__file__, 581, 29), '*', int_2016, nvertex_2017)
    
    # Processing the call keyword arguments (line 581)
    kwargs_2019 = {}
    # Getting the type of 'xrange' (line 581)
    xrange_2014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 13), 'xrange', False)
    # Calling xrange(args, kwargs) (line 581)
    xrange_call_result_2020 = invoke(stypy.reporting.localization.Localization(__file__, 581, 13), xrange_2014, *[nvertex_2015, result_mul_2018], **kwargs_2019)
    
    # Testing if the for loop is going to be iterated (line 581)
    # Testing the type of a for loop iterable (line 581)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 581, 4), xrange_call_result_2020)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 581, 4), xrange_call_result_2020):
        # Getting the type of the for loop variable (line 581)
        for_loop_var_2021 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 581, 4), xrange_call_result_2020)
        # Assigning a type to the variable 'b' (line 581)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 581, 4), 'b', for_loop_var_2021)
        # SSA begins for a for statement (line 581)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 582)
        b_2022 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 23), 'b')
        # Getting the type of 'blossombase' (line 582)
        blossombase_2023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 11), 'blossombase')
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___2024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 11), blossombase_2023, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_2025 = invoke(stypy.reporting.localization.Localization(__file__, 582, 11), getitem___2024, b_2022)
        
        int_2026 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 29), 'int')
        # Applying the binary operator '>=' (line 582)
        result_ge_2027 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 11), '>=', subscript_call_result_2025, int_2026)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 582)
        b_2028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 43), 'b')
        # Getting the type of 'dualvar' (line 582)
        dualvar_2029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 582, 35), 'dualvar')
        # Obtaining the member '__getitem__' of a type (line 582)
        getitem___2030 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 582, 35), dualvar_2029, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 582)
        subscript_call_result_2031 = invoke(stypy.reporting.localization.Localization(__file__, 582, 35), getitem___2030, b_2028)
        
        int_2032 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 582, 48), 'int')
        # Applying the binary operator '>' (line 582)
        result_gt_2033 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 35), '>', subscript_call_result_2031, int_2032)
        
        # Applying the binary operator 'and' (line 582)
        result_and_keyword_2034 = python_operator(stypy.reporting.localization.Localization(__file__, 582, 11), 'and', result_ge_2027, result_gt_2033)
        
        # Testing if the type of an if condition is none (line 582)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 582, 8), result_and_keyword_2034):
            pass
        else:
            
            # Testing the type of an if condition (line 582)
            if_condition_2035 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 582, 8), result_and_keyword_2034)
            # Assigning a type to the variable 'if_condition_2035' (line 582)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 582, 8), 'if_condition_2035', if_condition_2035)
            # SSA begins for if statement (line 582)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Evaluating assert statement condition
            
            
            # Call to len(...): (line 583)
            # Processing the call arguments (line 583)
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 583)
            b_2037 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 36), 'b', False)
            # Getting the type of 'blossomendps' (line 583)
            blossomendps_2038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 23), 'blossomendps', False)
            # Obtaining the member '__getitem__' of a type (line 583)
            getitem___2039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 583, 23), blossomendps_2038, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 583)
            subscript_call_result_2040 = invoke(stypy.reporting.localization.Localization(__file__, 583, 23), getitem___2039, b_2037)
            
            # Processing the call keyword arguments (line 583)
            kwargs_2041 = {}
            # Getting the type of 'len' (line 583)
            len_2036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 19), 'len', False)
            # Calling len(args, kwargs) (line 583)
            len_call_result_2042 = invoke(stypy.reporting.localization.Localization(__file__, 583, 19), len_2036, *[subscript_call_result_2040], **kwargs_2041)
            
            int_2043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 42), 'int')
            # Applying the binary operator '%' (line 583)
            result_mod_2044 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 19), '%', len_call_result_2042, int_2043)
            
            int_2045 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 583, 47), 'int')
            # Applying the binary operator '==' (line 583)
            result_eq_2046 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 19), '==', result_mod_2044, int_2045)
            
            
            
            # Obtaining the type of the subscript
            int_2047 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 37), 'int')
            int_2048 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 584, 40), 'int')
            slice_2049 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 584, 21), int_2047, None, int_2048)
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 584)
            b_2050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 34), 'b')
            # Getting the type of 'blossomendps' (line 584)
            blossomendps_2051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 21), 'blossomendps')
            # Obtaining the member '__getitem__' of a type (line 584)
            getitem___2052 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 21), blossomendps_2051, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 584)
            subscript_call_result_2053 = invoke(stypy.reporting.localization.Localization(__file__, 584, 21), getitem___2052, b_2050)
            
            # Obtaining the member '__getitem__' of a type (line 584)
            getitem___2054 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 21), subscript_call_result_2053, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 584)
            subscript_call_result_2055 = invoke(stypy.reporting.localization.Localization(__file__, 584, 21), getitem___2054, slice_2049)
            
            # Testing if the for loop is going to be iterated (line 584)
            # Testing the type of a for loop iterable (line 584)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 584, 12), subscript_call_result_2055)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 584, 12), subscript_call_result_2055):
                # Getting the type of the for loop variable (line 584)
                for_loop_var_2056 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 584, 12), subscript_call_result_2055)
                # Assigning a type to the variable 'p' (line 584)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 12), 'p', for_loop_var_2056)
                # SSA begins for a for statement (line 584)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                # Evaluating assert statement condition
                
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'p' (line 585)
                p_2057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 37), 'p')
                # Getting the type of 'endpoint' (line 585)
                endpoint_2058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 28), 'endpoint')
                # Obtaining the member '__getitem__' of a type (line 585)
                getitem___2059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 28), endpoint_2058, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 585)
                subscript_call_result_2060 = invoke(stypy.reporting.localization.Localization(__file__, 585, 28), getitem___2059, p_2057)
                
                # Getting the type of 'mate' (line 585)
                mate_2061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 23), 'mate')
                # Obtaining the member '__getitem__' of a type (line 585)
                getitem___2062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 585, 23), mate_2061, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 585)
                subscript_call_result_2063 = invoke(stypy.reporting.localization.Localization(__file__, 585, 23), getitem___2062, subscript_call_result_2060)
                
                # Getting the type of 'p' (line 585)
                p_2064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 585, 44), 'p')
                int_2065 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 585, 48), 'int')
                # Applying the binary operator '^' (line 585)
                result_xor_2066 = python_operator(stypy.reporting.localization.Localization(__file__, 585, 44), '^', p_2064, int_2065)
                
                # Applying the binary operator '==' (line 585)
                result_eq_2067 = python_operator(stypy.reporting.localization.Localization(__file__, 585, 23), '==', subscript_call_result_2063, result_xor_2066)
                
                # Evaluating assert statement condition
                
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'p' (line 586)
                p_2068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 37), 'p')
                int_2069 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 586, 41), 'int')
                # Applying the binary operator '^' (line 586)
                result_xor_2070 = python_operator(stypy.reporting.localization.Localization(__file__, 586, 37), '^', p_2068, int_2069)
                
                # Getting the type of 'endpoint' (line 586)
                endpoint_2071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 28), 'endpoint')
                # Obtaining the member '__getitem__' of a type (line 586)
                getitem___2072 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 28), endpoint_2071, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 586)
                subscript_call_result_2073 = invoke(stypy.reporting.localization.Localization(__file__, 586, 28), getitem___2072, result_xor_2070)
                
                # Getting the type of 'mate' (line 586)
                mate_2074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 23), 'mate')
                # Obtaining the member '__getitem__' of a type (line 586)
                getitem___2075 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 23), mate_2074, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 586)
                subscript_call_result_2076 = invoke(stypy.reporting.localization.Localization(__file__, 586, 23), getitem___2075, subscript_call_result_2073)
                
                # Getting the type of 'p' (line 586)
                p_2077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 48), 'p')
                # Applying the binary operator '==' (line 586)
                result_eq_2078 = python_operator(stypy.reporting.localization.Localization(__file__, 586, 23), '==', subscript_call_result_2076, p_2077)
                
                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            # SSA join for if statement (line 582)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    # ################# End of 'verifyOptimum(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'verifyOptimum' in the type store
    # Getting the type of 'stypy_return_type' (line 546)
    stypy_return_type_2079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_2079)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'verifyOptimum'
    return stypy_return_type_2079

# Assigning a type to the variable 'verifyOptimum' (line 546)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 546, 0), 'verifyOptimum', verifyOptimum)

@norecursion
def checkDelta2(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'checkDelta2'
    module_type_store = module_type_store.open_function_context('checkDelta2', 591, 0, False)
    
    # Passed parameters checking function
    checkDelta2.stypy_localization = localization
    checkDelta2.stypy_type_of_self = None
    checkDelta2.stypy_type_store = module_type_store
    checkDelta2.stypy_function_name = 'checkDelta2'
    checkDelta2.stypy_param_names_list = []
    checkDelta2.stypy_varargs_param_name = None
    checkDelta2.stypy_kwargs_param_name = None
    checkDelta2.stypy_call_defaults = defaults
    checkDelta2.stypy_call_varargs = varargs
    checkDelta2.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'checkDelta2', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'checkDelta2', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'checkDelta2(...)' code ##################

    
    
    # Call to xrange(...): (line 592)
    # Processing the call arguments (line 592)
    # Getting the type of 'nvertex' (line 592)
    nvertex_2081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 20), 'nvertex', False)
    # Processing the call keyword arguments (line 592)
    kwargs_2082 = {}
    # Getting the type of 'xrange' (line 592)
    xrange_2080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 592, 13), 'xrange', False)
    # Calling xrange(args, kwargs) (line 592)
    xrange_call_result_2083 = invoke(stypy.reporting.localization.Localization(__file__, 592, 13), xrange_2080, *[nvertex_2081], **kwargs_2082)
    
    # Testing if the for loop is going to be iterated (line 592)
    # Testing the type of a for loop iterable (line 592)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 592, 4), xrange_call_result_2083)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 592, 4), xrange_call_result_2083):
        # Getting the type of the for loop variable (line 592)
        for_loop_var_2084 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 592, 4), xrange_call_result_2083)
        # Assigning a type to the variable 'v' (line 592)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 592, 4), 'v', for_loop_var_2084)
        # SSA begins for a for statement (line 592)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        
        # Obtaining the type of the subscript
        
        # Obtaining the type of the subscript
        # Getting the type of 'v' (line 593)
        v_2085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 27), 'v')
        # Getting the type of 'inblossom' (line 593)
        inblossom_2086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 17), 'inblossom')
        # Obtaining the member '__getitem__' of a type (line 593)
        getitem___2087 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 17), inblossom_2086, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 593)
        subscript_call_result_2088 = invoke(stypy.reporting.localization.Localization(__file__, 593, 17), getitem___2087, v_2085)
        
        # Getting the type of 'label' (line 593)
        label_2089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 593, 11), 'label')
        # Obtaining the member '__getitem__' of a type (line 593)
        getitem___2090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 593, 11), label_2089, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 593)
        subscript_call_result_2091 = invoke(stypy.reporting.localization.Localization(__file__, 593, 11), getitem___2090, subscript_call_result_2088)
        
        int_2092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 593, 34), 'int')
        # Applying the binary operator '==' (line 593)
        result_eq_2093 = python_operator(stypy.reporting.localization.Localization(__file__, 593, 11), '==', subscript_call_result_2091, int_2092)
        
        # Testing if the type of an if condition is none (line 593)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 593, 8), result_eq_2093):
            pass
        else:
            
            # Testing the type of an if condition (line 593)
            if_condition_2094 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 593, 8), result_eq_2093)
            # Assigning a type to the variable 'if_condition_2094' (line 593)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 593, 8), 'if_condition_2094', if_condition_2094)
            # SSA begins for if statement (line 593)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Num to a Name (line 595):
            
            # Assigning a Num to a Name (line 595):
            int_2095 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 595, 17), 'int')
            # Assigning a type to the variable 'bk' (line 595)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 595, 12), 'bk', int_2095)
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 596)
            v_2096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 31), 'v')
            # Getting the type of 'neighbend' (line 596)
            neighbend_2097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 596, 21), 'neighbend')
            # Obtaining the member '__getitem__' of a type (line 596)
            getitem___2098 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 596, 21), neighbend_2097, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 596)
            subscript_call_result_2099 = invoke(stypy.reporting.localization.Localization(__file__, 596, 21), getitem___2098, v_2096)
            
            # Testing if the for loop is going to be iterated (line 596)
            # Testing the type of a for loop iterable (line 596)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 596, 12), subscript_call_result_2099)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 596, 12), subscript_call_result_2099):
                # Getting the type of the for loop variable (line 596)
                for_loop_var_2100 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 596, 12), subscript_call_result_2099)
                # Assigning a type to the variable 'p' (line 596)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 12), 'p', for_loop_var_2100)
                # SSA begins for a for statement (line 596)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Assigning a BinOp to a Name (line 597):
                
                # Assigning a BinOp to a Name (line 597):
                # Getting the type of 'p' (line 597)
                p_2101 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 597, 20), 'p')
                int_2102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 597, 25), 'int')
                # Applying the binary operator '//' (line 597)
                result_floordiv_2103 = python_operator(stypy.reporting.localization.Localization(__file__, 597, 20), '//', p_2101, int_2102)
                
                # Assigning a type to the variable 'k' (line 597)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 597, 16), 'k', result_floordiv_2103)
                
                # Assigning a Subscript to a Name (line 598):
                
                # Assigning a Subscript to a Name (line 598):
                
                # Obtaining the type of the subscript
                # Getting the type of 'p' (line 598)
                p_2104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 29), 'p')
                # Getting the type of 'endpoint' (line 598)
                endpoint_2105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 598, 20), 'endpoint')
                # Obtaining the member '__getitem__' of a type (line 598)
                getitem___2106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 598, 20), endpoint_2105, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 598)
                subscript_call_result_2107 = invoke(stypy.reporting.localization.Localization(__file__, 598, 20), getitem___2106, p_2104)
                
                # Assigning a type to the variable 'w' (line 598)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 16), 'w', subscript_call_result_2107)
                
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'w' (line 599)
                w_2108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 35), 'w')
                # Getting the type of 'inblossom' (line 599)
                inblossom_2109 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 25), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 599)
                getitem___2110 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 25), inblossom_2109, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 599)
                subscript_call_result_2111 = invoke(stypy.reporting.localization.Localization(__file__, 599, 25), getitem___2110, w_2108)
                
                # Getting the type of 'label' (line 599)
                label_2112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 599, 19), 'label')
                # Obtaining the member '__getitem__' of a type (line 599)
                getitem___2113 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 599, 19), label_2112, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 599)
                subscript_call_result_2114 = invoke(stypy.reporting.localization.Localization(__file__, 599, 19), getitem___2113, subscript_call_result_2111)
                
                int_2115 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 42), 'int')
                # Applying the binary operator '==' (line 599)
                result_eq_2116 = python_operator(stypy.reporting.localization.Localization(__file__, 599, 19), '==', subscript_call_result_2114, int_2115)
                
                # Testing if the type of an if condition is none (line 599)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 599, 16), result_eq_2116):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 599)
                    if_condition_2117 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 599, 16), result_eq_2116)
                    # Assigning a type to the variable 'if_condition_2117' (line 599)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 16), 'if_condition_2117', if_condition_2117)
                    # SSA begins for if statement (line 599)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a Call to a Name (line 600):
                    
                    # Assigning a Call to a Name (line 600):
                    
                    # Call to slack(...): (line 600)
                    # Processing the call arguments (line 600)
                    # Getting the type of 'k' (line 600)
                    k_2119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 30), 'k', False)
                    # Processing the call keyword arguments (line 600)
                    kwargs_2120 = {}
                    # Getting the type of 'slack' (line 600)
                    slack_2118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 600, 24), 'slack', False)
                    # Calling slack(args, kwargs) (line 600)
                    slack_call_result_2121 = invoke(stypy.reporting.localization.Localization(__file__, 600, 24), slack_2118, *[k_2119], **kwargs_2120)
                    
                    # Assigning a type to the variable 'd' (line 600)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 600, 20), 'd', slack_call_result_2121)
                    
                    # Evaluating a boolean operation
                    
                    # Getting the type of 'bk' (line 601)
                    bk_2122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 23), 'bk')
                    int_2123 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 601, 29), 'int')
                    # Applying the binary operator '==' (line 601)
                    result_eq_2124 = python_operator(stypy.reporting.localization.Localization(__file__, 601, 23), '==', bk_2122, int_2123)
                    
                    
                    # Getting the type of 'd' (line 601)
                    d_2125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 35), 'd')
                    # Getting the type of 'bd' (line 601)
                    bd_2126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 39), 'bd')
                    # Applying the binary operator '<' (line 601)
                    result_lt_2127 = python_operator(stypy.reporting.localization.Localization(__file__, 601, 35), '<', d_2125, bd_2126)
                    
                    # Applying the binary operator 'or' (line 601)
                    result_or_keyword_2128 = python_operator(stypy.reporting.localization.Localization(__file__, 601, 23), 'or', result_eq_2124, result_lt_2127)
                    
                    # Testing if the type of an if condition is none (line 601)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 601, 20), result_or_keyword_2128):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 601)
                        if_condition_2129 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 601, 20), result_or_keyword_2128)
                        # Assigning a type to the variable 'if_condition_2129' (line 601)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 20), 'if_condition_2129', if_condition_2129)
                        # SSA begins for if statement (line 601)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Name to a Name (line 602):
                        
                        # Assigning a Name to a Name (line 602):
                        # Getting the type of 'k' (line 602)
                        k_2130 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 602, 29), 'k')
                        # Assigning a type to the variable 'bk' (line 602)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 602, 24), 'bk', k_2130)
                        
                        # Assigning a Name to a Name (line 603):
                        
                        # Assigning a Name to a Name (line 603):
                        # Getting the type of 'd' (line 603)
                        d_2131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 603, 29), 'd')
                        # Assigning a type to the variable 'bd' (line 603)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 603, 24), 'bd', d_2131)
                        # SSA join for if statement (line 601)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 599)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            
            # Evaluating a boolean operation
            # Getting the type of 'DEBUG' (line 604)
            DEBUG_2132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 15), 'DEBUG')
            
            # Evaluating a boolean operation
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 604)
            v_2133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 35), 'v')
            # Getting the type of 'bestedge' (line 604)
            bestedge_2134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 26), 'bestedge')
            # Obtaining the member '__getitem__' of a type (line 604)
            getitem___2135 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 26), bestedge_2134, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 604)
            subscript_call_result_2136 = invoke(stypy.reporting.localization.Localization(__file__, 604, 26), getitem___2135, v_2133)
            
            int_2137 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 41), 'int')
            # Applying the binary operator '!=' (line 604)
            result_ne_2138 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 26), '!=', subscript_call_result_2136, int_2137)
            
            
            # Getting the type of 'bk' (line 604)
            bk_2139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 47), 'bk')
            int_2140 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 53), 'int')
            # Applying the binary operator '!=' (line 604)
            result_ne_2141 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 47), '!=', bk_2139, int_2140)
            
            # Applying the binary operator 'or' (line 604)
            result_or_keyword_2142 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 26), 'or', result_ne_2138, result_ne_2141)
            
            # Applying the binary operator 'and' (line 604)
            result_and_keyword_2143 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 15), 'and', DEBUG_2132, result_or_keyword_2142)
            
            # Evaluating a boolean operation
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 604)
            v_2144 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 71), 'v')
            # Getting the type of 'bestedge' (line 604)
            bestedge_2145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 62), 'bestedge')
            # Obtaining the member '__getitem__' of a type (line 604)
            getitem___2146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 62), bestedge_2145, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 604)
            subscript_call_result_2147 = invoke(stypy.reporting.localization.Localization(__file__, 604, 62), getitem___2146, v_2144)
            
            int_2148 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 604, 77), 'int')
            # Applying the binary operator '==' (line 604)
            result_eq_2149 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 62), '==', subscript_call_result_2147, int_2148)
            
            
            # Getting the type of 'bd' (line 604)
            bd_2150 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 83), 'bd')
            
            # Call to slack(...): (line 604)
            # Processing the call arguments (line 604)
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 604)
            v_2152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 104), 'v', False)
            # Getting the type of 'bestedge' (line 604)
            bestedge_2153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 95), 'bestedge', False)
            # Obtaining the member '__getitem__' of a type (line 604)
            getitem___2154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 95), bestedge_2153, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 604)
            subscript_call_result_2155 = invoke(stypy.reporting.localization.Localization(__file__, 604, 95), getitem___2154, v_2152)
            
            # Processing the call keyword arguments (line 604)
            kwargs_2156 = {}
            # Getting the type of 'slack' (line 604)
            slack_2151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 89), 'slack', False)
            # Calling slack(args, kwargs) (line 604)
            slack_call_result_2157 = invoke(stypy.reporting.localization.Localization(__file__, 604, 89), slack_2151, *[subscript_call_result_2155], **kwargs_2156)
            
            # Applying the binary operator '!=' (line 604)
            result_ne_2158 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 83), '!=', bd_2150, slack_call_result_2157)
            
            # Applying the binary operator 'or' (line 604)
            result_or_keyword_2159 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 62), 'or', result_eq_2149, result_ne_2158)
            
            # Applying the binary operator 'and' (line 604)
            result_and_keyword_2160 = python_operator(stypy.reporting.localization.Localization(__file__, 604, 15), 'and', result_and_keyword_2143, result_or_keyword_2159)
            
            # Testing if the type of an if condition is none (line 604)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 604, 12), result_and_keyword_2160):
                pass
            else:
                
                # Testing the type of an if condition (line 604)
                if_condition_2161 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 604, 12), result_and_keyword_2160)
                # Assigning a type to the variable 'if_condition_2161' (line 604)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 12), 'if_condition_2161', if_condition_2161)
                # SSA begins for if statement (line 604)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to DEBUG(...): (line 605)
                # Processing the call arguments (line 605)
                str_2163 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 22), 'str', 'v=')
                
                # Call to str(...): (line 605)
                # Processing the call arguments (line 605)
                # Getting the type of 'v' (line 605)
                v_2165 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 33), 'v', False)
                # Processing the call keyword arguments (line 605)
                kwargs_2166 = {}
                # Getting the type of 'str' (line 605)
                str_2164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 29), 'str', False)
                # Calling str(args, kwargs) (line 605)
                str_call_result_2167 = invoke(stypy.reporting.localization.Localization(__file__, 605, 29), str_2164, *[v_2165], **kwargs_2166)
                
                # Applying the binary operator '+' (line 605)
                result_add_2168 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 22), '+', str_2163, str_call_result_2167)
                
                str_2169 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 38), 'str', ' bk=')
                # Applying the binary operator '+' (line 605)
                result_add_2170 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 36), '+', result_add_2168, str_2169)
                
                
                # Call to str(...): (line 605)
                # Processing the call arguments (line 605)
                # Getting the type of 'bk' (line 605)
                bk_2172 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 51), 'bk', False)
                # Processing the call keyword arguments (line 605)
                kwargs_2173 = {}
                # Getting the type of 'str' (line 605)
                str_2171 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 47), 'str', False)
                # Calling str(args, kwargs) (line 605)
                str_call_result_2174 = invoke(stypy.reporting.localization.Localization(__file__, 605, 47), str_2171, *[bk_2172], **kwargs_2173)
                
                # Applying the binary operator '+' (line 605)
                result_add_2175 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 45), '+', result_add_2170, str_call_result_2174)
                
                str_2176 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 57), 'str', ' bd=')
                # Applying the binary operator '+' (line 605)
                result_add_2177 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 55), '+', result_add_2175, str_2176)
                
                
                # Call to str(...): (line 605)
                # Processing the call arguments (line 605)
                # Getting the type of 'bd' (line 605)
                bd_2179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 70), 'bd', False)
                # Processing the call keyword arguments (line 605)
                kwargs_2180 = {}
                # Getting the type of 'str' (line 605)
                str_2178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 66), 'str', False)
                # Calling str(args, kwargs) (line 605)
                str_call_result_2181 = invoke(stypy.reporting.localization.Localization(__file__, 605, 66), str_2178, *[bd_2179], **kwargs_2180)
                
                # Applying the binary operator '+' (line 605)
                result_add_2182 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 64), '+', result_add_2177, str_call_result_2181)
                
                str_2183 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 605, 76), 'str', ' bestedge=')
                # Applying the binary operator '+' (line 605)
                result_add_2184 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 74), '+', result_add_2182, str_2183)
                
                
                # Call to str(...): (line 605)
                # Processing the call arguments (line 605)
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 606)
                v_2186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 29), 'v', False)
                # Getting the type of 'bestedge' (line 606)
                bestedge_2187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 20), 'bestedge', False)
                # Obtaining the member '__getitem__' of a type (line 606)
                getitem___2188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 20), bestedge_2187, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 606)
                subscript_call_result_2189 = invoke(stypy.reporting.localization.Localization(__file__, 606, 20), getitem___2188, v_2186)
                
                # Processing the call keyword arguments (line 605)
                kwargs_2190 = {}
                # Getting the type of 'str' (line 605)
                str_2185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 91), 'str', False)
                # Calling str(args, kwargs) (line 605)
                str_call_result_2191 = invoke(stypy.reporting.localization.Localization(__file__, 605, 91), str_2185, *[subscript_call_result_2189], **kwargs_2190)
                
                # Applying the binary operator '+' (line 605)
                result_add_2192 = python_operator(stypy.reporting.localization.Localization(__file__, 605, 89), '+', result_add_2184, str_call_result_2191)
                
                str_2193 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 606, 35), 'str', ' slack=')
                # Applying the binary operator '+' (line 606)
                result_add_2194 = python_operator(stypy.reporting.localization.Localization(__file__, 606, 33), '+', result_add_2192, str_2193)
                
                
                # Call to str(...): (line 606)
                # Processing the call arguments (line 606)
                
                # Call to slack(...): (line 606)
                # Processing the call arguments (line 606)
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 606)
                v_2197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 66), 'v', False)
                # Getting the type of 'bestedge' (line 606)
                bestedge_2198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 57), 'bestedge', False)
                # Obtaining the member '__getitem__' of a type (line 606)
                getitem___2199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 606, 57), bestedge_2198, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 606)
                subscript_call_result_2200 = invoke(stypy.reporting.localization.Localization(__file__, 606, 57), getitem___2199, v_2197)
                
                # Processing the call keyword arguments (line 606)
                kwargs_2201 = {}
                # Getting the type of 'slack' (line 606)
                slack_2196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 51), 'slack', False)
                # Calling slack(args, kwargs) (line 606)
                slack_call_result_2202 = invoke(stypy.reporting.localization.Localization(__file__, 606, 51), slack_2196, *[subscript_call_result_2200], **kwargs_2201)
                
                # Processing the call keyword arguments (line 606)
                kwargs_2203 = {}
                # Getting the type of 'str' (line 606)
                str_2195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 606, 47), 'str', False)
                # Calling str(args, kwargs) (line 606)
                str_call_result_2204 = invoke(stypy.reporting.localization.Localization(__file__, 606, 47), str_2195, *[slack_call_result_2202], **kwargs_2203)
                
                # Applying the binary operator '+' (line 606)
                result_add_2205 = python_operator(stypy.reporting.localization.Localization(__file__, 606, 45), '+', result_add_2194, str_call_result_2204)
                
                # Processing the call keyword arguments (line 605)
                kwargs_2206 = {}
                # Getting the type of 'DEBUG' (line 605)
                DEBUG_2162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 605, 16), 'DEBUG', False)
                # Calling DEBUG(args, kwargs) (line 605)
                DEBUG_call_result_2207 = invoke(stypy.reporting.localization.Localization(__file__, 605, 16), DEBUG_2162, *[result_add_2205], **kwargs_2206)
                
                # SSA join for if statement (line 604)
                module_type_store = module_type_store.join_ssa_context()
                

            # Evaluating assert statement condition
            
            # Evaluating a boolean operation
            
            # Evaluating a boolean operation
            
            # Getting the type of 'bk' (line 607)
            bk_2208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 20), 'bk')
            int_2209 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 26), 'int')
            # Applying the binary operator '==' (line 607)
            result_eq_2210 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 20), '==', bk_2208, int_2209)
            
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 607)
            v_2211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 42), 'v')
            # Getting the type of 'bestedge' (line 607)
            bestedge_2212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 33), 'bestedge')
            # Obtaining the member '__getitem__' of a type (line 607)
            getitem___2213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 33), bestedge_2212, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 607)
            subscript_call_result_2214 = invoke(stypy.reporting.localization.Localization(__file__, 607, 33), getitem___2213, v_2211)
            
            int_2215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 48), 'int')
            # Applying the binary operator '==' (line 607)
            result_eq_2216 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 33), '==', subscript_call_result_2214, int_2215)
            
            # Applying the binary operator 'and' (line 607)
            result_and_keyword_2217 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 20), 'and', result_eq_2210, result_eq_2216)
            
            
            # Evaluating a boolean operation
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 607)
            v_2218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 65), 'v')
            # Getting the type of 'bestedge' (line 607)
            bestedge_2219 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 56), 'bestedge')
            # Obtaining the member '__getitem__' of a type (line 607)
            getitem___2220 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 56), bestedge_2219, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 607)
            subscript_call_result_2221 = invoke(stypy.reporting.localization.Localization(__file__, 607, 56), getitem___2220, v_2218)
            
            int_2222 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 71), 'int')
            # Applying the binary operator '!=' (line 607)
            result_ne_2223 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 56), '!=', subscript_call_result_2221, int_2222)
            
            
            # Getting the type of 'bd' (line 607)
            bd_2224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 78), 'bd')
            
            # Call to slack(...): (line 607)
            # Processing the call arguments (line 607)
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 607)
            v_2226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 99), 'v', False)
            # Getting the type of 'bestedge' (line 607)
            bestedge_2227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 90), 'bestedge', False)
            # Obtaining the member '__getitem__' of a type (line 607)
            getitem___2228 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 90), bestedge_2227, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 607)
            subscript_call_result_2229 = invoke(stypy.reporting.localization.Localization(__file__, 607, 90), getitem___2228, v_2226)
            
            # Processing the call keyword arguments (line 607)
            kwargs_2230 = {}
            # Getting the type of 'slack' (line 607)
            slack_2225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 84), 'slack', False)
            # Calling slack(args, kwargs) (line 607)
            slack_call_result_2231 = invoke(stypy.reporting.localization.Localization(__file__, 607, 84), slack_2225, *[subscript_call_result_2229], **kwargs_2230)
            
            # Applying the binary operator '==' (line 607)
            result_eq_2232 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 78), '==', bd_2224, slack_call_result_2231)
            
            # Applying the binary operator 'and' (line 607)
            result_and_keyword_2233 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 56), 'and', result_ne_2223, result_eq_2232)
            
            # Applying the binary operator 'or' (line 607)
            result_or_keyword_2234 = python_operator(stypy.reporting.localization.Localization(__file__, 607, 19), 'or', result_and_keyword_2217, result_and_keyword_2233)
            
            # SSA join for if statement (line 593)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    # ################# End of 'checkDelta2(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'checkDelta2' in the type store
    # Getting the type of 'stypy_return_type' (line 591)
    stypy_return_type_2235 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_2235)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'checkDelta2'
    return stypy_return_type_2235

# Assigning a type to the variable 'checkDelta2' (line 591)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 591, 0), 'checkDelta2', checkDelta2)

@norecursion
def checkDelta3(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'checkDelta3'
    module_type_store = module_type_store.open_function_context('checkDelta3', 611, 0, False)
    
    # Passed parameters checking function
    checkDelta3.stypy_localization = localization
    checkDelta3.stypy_type_of_self = None
    checkDelta3.stypy_type_store = module_type_store
    checkDelta3.stypy_function_name = 'checkDelta3'
    checkDelta3.stypy_param_names_list = []
    checkDelta3.stypy_varargs_param_name = None
    checkDelta3.stypy_kwargs_param_name = None
    checkDelta3.stypy_call_defaults = defaults
    checkDelta3.stypy_call_varargs = varargs
    checkDelta3.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'checkDelta3', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'checkDelta3', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'checkDelta3(...)' code ##################

    
    # Assigning a Num to a Name (line 612):
    
    # Assigning a Num to a Name (line 612):
    int_2236 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 612, 9), 'int')
    # Assigning a type to the variable 'bk' (line 612)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 612, 4), 'bk', int_2236)
    
    # Assigning a Num to a Name (line 614):
    
    # Assigning a Num to a Name (line 614):
    int_2237 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 614, 10), 'int')
    # Assigning a type to the variable 'tbk' (line 614)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 4), 'tbk', int_2237)
    
    
    # Call to xrange(...): (line 616)
    # Processing the call arguments (line 616)
    int_2239 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 616, 20), 'int')
    # Getting the type of 'nvertex' (line 616)
    nvertex_2240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 24), 'nvertex', False)
    # Applying the binary operator '*' (line 616)
    result_mul_2241 = python_operator(stypy.reporting.localization.Localization(__file__, 616, 20), '*', int_2239, nvertex_2240)
    
    # Processing the call keyword arguments (line 616)
    kwargs_2242 = {}
    # Getting the type of 'xrange' (line 616)
    xrange_2238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 616, 13), 'xrange', False)
    # Calling xrange(args, kwargs) (line 616)
    xrange_call_result_2243 = invoke(stypy.reporting.localization.Localization(__file__, 616, 13), xrange_2238, *[result_mul_2241], **kwargs_2242)
    
    # Testing if the for loop is going to be iterated (line 616)
    # Testing the type of a for loop iterable (line 616)
    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 616, 4), xrange_call_result_2243)

    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 616, 4), xrange_call_result_2243):
        # Getting the type of the for loop variable (line 616)
        for_loop_var_2244 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 616, 4), xrange_call_result_2243)
        # Assigning a type to the variable 'b' (line 616)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 616, 4), 'b', for_loop_var_2244)
        # SSA begins for a for statement (line 616)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
        
        # Evaluating a boolean operation
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 617)
        b_2245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 25), 'b')
        # Getting the type of 'blossomparent' (line 617)
        blossomparent_2246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 11), 'blossomparent')
        # Obtaining the member '__getitem__' of a type (line 617)
        getitem___2247 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 11), blossomparent_2246, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 617)
        subscript_call_result_2248 = invoke(stypy.reporting.localization.Localization(__file__, 617, 11), getitem___2247, b_2245)
        
        int_2249 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 31), 'int')
        # Applying the binary operator '==' (line 617)
        result_eq_2250 = python_operator(stypy.reporting.localization.Localization(__file__, 617, 11), '==', subscript_call_result_2248, int_2249)
        
        
        
        # Obtaining the type of the subscript
        # Getting the type of 'b' (line 617)
        b_2251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 44), 'b')
        # Getting the type of 'label' (line 617)
        label_2252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 617, 38), 'label')
        # Obtaining the member '__getitem__' of a type (line 617)
        getitem___2253 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 617, 38), label_2252, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 617)
        subscript_call_result_2254 = invoke(stypy.reporting.localization.Localization(__file__, 617, 38), getitem___2253, b_2251)
        
        int_2255 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 617, 50), 'int')
        # Applying the binary operator '==' (line 617)
        result_eq_2256 = python_operator(stypy.reporting.localization.Localization(__file__, 617, 38), '==', subscript_call_result_2254, int_2255)
        
        # Applying the binary operator 'and' (line 617)
        result_and_keyword_2257 = python_operator(stypy.reporting.localization.Localization(__file__, 617, 11), 'and', result_eq_2250, result_eq_2256)
        
        # Testing if the type of an if condition is none (line 617)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 617, 8), result_and_keyword_2257):
            pass
        else:
            
            # Testing the type of an if condition (line 617)
            if_condition_2258 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 617, 8), result_and_keyword_2257)
            # Assigning a type to the variable 'if_condition_2258' (line 617)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 617, 8), 'if_condition_2258', if_condition_2258)
            # SSA begins for if statement (line 617)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # Call to blossomLeaves(...): (line 618)
            # Processing the call arguments (line 618)
            # Getting the type of 'b' (line 618)
            b_2260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 35), 'b', False)
            # Processing the call keyword arguments (line 618)
            kwargs_2261 = {}
            # Getting the type of 'blossomLeaves' (line 618)
            blossomLeaves_2259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 21), 'blossomLeaves', False)
            # Calling blossomLeaves(args, kwargs) (line 618)
            blossomLeaves_call_result_2262 = invoke(stypy.reporting.localization.Localization(__file__, 618, 21), blossomLeaves_2259, *[b_2260], **kwargs_2261)
            
            # Testing if the for loop is going to be iterated (line 618)
            # Testing the type of a for loop iterable (line 618)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 618, 12), blossomLeaves_call_result_2262)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 618, 12), blossomLeaves_call_result_2262):
                # Getting the type of the for loop variable (line 618)
                for_loop_var_2263 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 618, 12), blossomLeaves_call_result_2262)
                # Assigning a type to the variable 'v' (line 618)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 618, 12), 'v', for_loop_var_2263)
                # SSA begins for a for statement (line 618)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 619)
                v_2264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 35), 'v')
                # Getting the type of 'neighbend' (line 619)
                neighbend_2265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 619, 25), 'neighbend')
                # Obtaining the member '__getitem__' of a type (line 619)
                getitem___2266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 619, 25), neighbend_2265, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 619)
                subscript_call_result_2267 = invoke(stypy.reporting.localization.Localization(__file__, 619, 25), getitem___2266, v_2264)
                
                # Testing if the for loop is going to be iterated (line 619)
                # Testing the type of a for loop iterable (line 619)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 619, 16), subscript_call_result_2267)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 619, 16), subscript_call_result_2267):
                    # Getting the type of the for loop variable (line 619)
                    for_loop_var_2268 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 619, 16), subscript_call_result_2267)
                    # Assigning a type to the variable 'p' (line 619)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 619, 16), 'p', for_loop_var_2268)
                    # SSA begins for a for statement (line 619)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Assigning a BinOp to a Name (line 620):
                    
                    # Assigning a BinOp to a Name (line 620):
                    # Getting the type of 'p' (line 620)
                    p_2269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 620, 24), 'p')
                    int_2270 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 620, 29), 'int')
                    # Applying the binary operator '//' (line 620)
                    result_floordiv_2271 = python_operator(stypy.reporting.localization.Localization(__file__, 620, 24), '//', p_2269, int_2270)
                    
                    # Assigning a type to the variable 'k' (line 620)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 620, 20), 'k', result_floordiv_2271)
                    
                    # Assigning a Subscript to a Name (line 621):
                    
                    # Assigning a Subscript to a Name (line 621):
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'p' (line 621)
                    p_2272 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 33), 'p')
                    # Getting the type of 'endpoint' (line 621)
                    endpoint_2273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 24), 'endpoint')
                    # Obtaining the member '__getitem__' of a type (line 621)
                    getitem___2274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 24), endpoint_2273, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 621)
                    subscript_call_result_2275 = invoke(stypy.reporting.localization.Localization(__file__, 621, 24), getitem___2274, p_2272)
                    
                    # Assigning a type to the variable 'w' (line 621)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 621, 20), 'w', subscript_call_result_2275)
                    
                    # Evaluating a boolean operation
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'w' (line 622)
                    w_2276 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 33), 'w')
                    # Getting the type of 'inblossom' (line 622)
                    inblossom_2277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 23), 'inblossom')
                    # Obtaining the member '__getitem__' of a type (line 622)
                    getitem___2278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 23), inblossom_2277, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 622)
                    subscript_call_result_2279 = invoke(stypy.reporting.localization.Localization(__file__, 622, 23), getitem___2278, w_2276)
                    
                    # Getting the type of 'b' (line 622)
                    b_2280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 39), 'b')
                    # Applying the binary operator '!=' (line 622)
                    result_ne_2281 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 23), '!=', subscript_call_result_2279, b_2280)
                    
                    
                    
                    # Obtaining the type of the subscript
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'w' (line 622)
                    w_2282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 61), 'w')
                    # Getting the type of 'inblossom' (line 622)
                    inblossom_2283 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 51), 'inblossom')
                    # Obtaining the member '__getitem__' of a type (line 622)
                    getitem___2284 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 51), inblossom_2283, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 622)
                    subscript_call_result_2285 = invoke(stypy.reporting.localization.Localization(__file__, 622, 51), getitem___2284, w_2282)
                    
                    # Getting the type of 'label' (line 622)
                    label_2286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 45), 'label')
                    # Obtaining the member '__getitem__' of a type (line 622)
                    getitem___2287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 45), label_2286, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 622)
                    subscript_call_result_2288 = invoke(stypy.reporting.localization.Localization(__file__, 622, 45), getitem___2287, subscript_call_result_2285)
                    
                    int_2289 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 68), 'int')
                    # Applying the binary operator '==' (line 622)
                    result_eq_2290 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 45), '==', subscript_call_result_2288, int_2289)
                    
                    # Applying the binary operator 'and' (line 622)
                    result_and_keyword_2291 = python_operator(stypy.reporting.localization.Localization(__file__, 622, 23), 'and', result_ne_2281, result_eq_2290)
                    
                    # Testing if the type of an if condition is none (line 622)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 622, 20), result_and_keyword_2291):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 622)
                        if_condition_2292 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 622, 20), result_and_keyword_2291)
                        # Assigning a type to the variable 'if_condition_2292' (line 622)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 622, 20), 'if_condition_2292', if_condition_2292)
                        # SSA begins for if statement (line 622)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 623):
                        
                        # Assigning a Call to a Name (line 623):
                        
                        # Call to slack(...): (line 623)
                        # Processing the call arguments (line 623)
                        # Getting the type of 'k' (line 623)
                        k_2294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 34), 'k', False)
                        # Processing the call keyword arguments (line 623)
                        kwargs_2295 = {}
                        # Getting the type of 'slack' (line 623)
                        slack_2293 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 28), 'slack', False)
                        # Calling slack(args, kwargs) (line 623)
                        slack_call_result_2296 = invoke(stypy.reporting.localization.Localization(__file__, 623, 28), slack_2293, *[k_2294], **kwargs_2295)
                        
                        # Assigning a type to the variable 'd' (line 623)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 24), 'd', slack_call_result_2296)
                        
                        # Evaluating a boolean operation
                        
                        # Getting the type of 'bk' (line 624)
                        bk_2297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 27), 'bk')
                        int_2298 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 624, 33), 'int')
                        # Applying the binary operator '==' (line 624)
                        result_eq_2299 = python_operator(stypy.reporting.localization.Localization(__file__, 624, 27), '==', bk_2297, int_2298)
                        
                        
                        # Getting the type of 'd' (line 624)
                        d_2300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 39), 'd')
                        # Getting the type of 'bd' (line 624)
                        bd_2301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 43), 'bd')
                        # Applying the binary operator '<' (line 624)
                        result_lt_2302 = python_operator(stypy.reporting.localization.Localization(__file__, 624, 39), '<', d_2300, bd_2301)
                        
                        # Applying the binary operator 'or' (line 624)
                        result_or_keyword_2303 = python_operator(stypy.reporting.localization.Localization(__file__, 624, 27), 'or', result_eq_2299, result_lt_2302)
                        
                        # Testing if the type of an if condition is none (line 624)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 624, 24), result_or_keyword_2303):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 624)
                            if_condition_2304 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 624, 24), result_or_keyword_2303)
                            # Assigning a type to the variable 'if_condition_2304' (line 624)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 624, 24), 'if_condition_2304', if_condition_2304)
                            # SSA begins for if statement (line 624)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 625):
                            
                            # Assigning a Name to a Name (line 625):
                            # Getting the type of 'k' (line 625)
                            k_2305 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 625, 33), 'k')
                            # Assigning a type to the variable 'bk' (line 625)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 625, 28), 'bk', k_2305)
                            
                            # Assigning a Name to a Name (line 626):
                            
                            # Assigning a Name to a Name (line 626):
                            # Getting the type of 'd' (line 626)
                            d_2306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 33), 'd')
                            # Assigning a type to the variable 'bd' (line 626)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 28), 'bd', d_2306)
                            # SSA join for if statement (line 624)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 622)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'b' (line 627)
            b_2307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 24), 'b')
            # Getting the type of 'bestedge' (line 627)
            bestedge_2308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 15), 'bestedge')
            # Obtaining the member '__getitem__' of a type (line 627)
            getitem___2309 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 15), bestedge_2308, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 627)
            subscript_call_result_2310 = invoke(stypy.reporting.localization.Localization(__file__, 627, 15), getitem___2309, b_2307)
            
            int_2311 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 627, 30), 'int')
            # Applying the binary operator '!=' (line 627)
            result_ne_2312 = python_operator(stypy.reporting.localization.Localization(__file__, 627, 15), '!=', subscript_call_result_2310, int_2311)
            
            # Testing if the type of an if condition is none (line 627)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 627, 12), result_ne_2312):
                pass
            else:
                
                # Testing the type of an if condition (line 627)
                if_condition_2313 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 627, 12), result_ne_2312)
                # Assigning a type to the variable 'if_condition_2313' (line 627)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 627, 12), 'if_condition_2313', if_condition_2313)
                # SSA begins for if statement (line 627)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Tuple (line 628):
                
                # Assigning a Subscript to a Name (line 628):
                
                # Obtaining the type of the subscript
                int_2314 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 16), 'int')
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 628)
                b_2315 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 44), 'b')
                # Getting the type of 'bestedge' (line 628)
                bestedge_2316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 35), 'bestedge')
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 35), bestedge_2316, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2318 = invoke(stypy.reporting.localization.Localization(__file__, 628, 35), getitem___2317, b_2315)
                
                # Getting the type of 'edges' (line 628)
                edges_2319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 29), 'edges')
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 29), edges_2319, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2321 = invoke(stypy.reporting.localization.Localization(__file__, 628, 29), getitem___2320, subscript_call_result_2318)
                
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 16), subscript_call_result_2321, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2323 = invoke(stypy.reporting.localization.Localization(__file__, 628, 16), getitem___2322, int_2314)
                
                # Assigning a type to the variable 'tuple_var_assignment_23' (line 628)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 16), 'tuple_var_assignment_23', subscript_call_result_2323)
                
                # Assigning a Subscript to a Name (line 628):
                
                # Obtaining the type of the subscript
                int_2324 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 16), 'int')
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 628)
                b_2325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 44), 'b')
                # Getting the type of 'bestedge' (line 628)
                bestedge_2326 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 35), 'bestedge')
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2327 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 35), bestedge_2326, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2328 = invoke(stypy.reporting.localization.Localization(__file__, 628, 35), getitem___2327, b_2325)
                
                # Getting the type of 'edges' (line 628)
                edges_2329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 29), 'edges')
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 29), edges_2329, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2331 = invoke(stypy.reporting.localization.Localization(__file__, 628, 29), getitem___2330, subscript_call_result_2328)
                
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 16), subscript_call_result_2331, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2333 = invoke(stypy.reporting.localization.Localization(__file__, 628, 16), getitem___2332, int_2324)
                
                # Assigning a type to the variable 'tuple_var_assignment_24' (line 628)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 16), 'tuple_var_assignment_24', subscript_call_result_2333)
                
                # Assigning a Subscript to a Name (line 628):
                
                # Obtaining the type of the subscript
                int_2334 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 628, 16), 'int')
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 628)
                b_2335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 44), 'b')
                # Getting the type of 'bestedge' (line 628)
                bestedge_2336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 35), 'bestedge')
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 35), bestedge_2336, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2338 = invoke(stypy.reporting.localization.Localization(__file__, 628, 35), getitem___2337, b_2335)
                
                # Getting the type of 'edges' (line 628)
                edges_2339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 29), 'edges')
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 29), edges_2339, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2341 = invoke(stypy.reporting.localization.Localization(__file__, 628, 29), getitem___2340, subscript_call_result_2338)
                
                # Obtaining the member '__getitem__' of a type (line 628)
                getitem___2342 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 628, 16), subscript_call_result_2341, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 628)
                subscript_call_result_2343 = invoke(stypy.reporting.localization.Localization(__file__, 628, 16), getitem___2342, int_2334)
                
                # Assigning a type to the variable 'tuple_var_assignment_25' (line 628)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 16), 'tuple_var_assignment_25', subscript_call_result_2343)
                
                # Assigning a Name to a Name (line 628):
                # Getting the type of 'tuple_var_assignment_23' (line 628)
                tuple_var_assignment_23_2344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 16), 'tuple_var_assignment_23')
                # Assigning a type to the variable 'i' (line 628)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 17), 'i', tuple_var_assignment_23_2344)
                
                # Assigning a Name to a Name (line 628):
                # Getting the type of 'tuple_var_assignment_24' (line 628)
                tuple_var_assignment_24_2345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 16), 'tuple_var_assignment_24')
                # Assigning a type to the variable 'j' (line 628)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 20), 'j', tuple_var_assignment_24_2345)
                
                # Assigning a Name to a Name (line 628):
                # Getting the type of 'tuple_var_assignment_25' (line 628)
                tuple_var_assignment_25_2346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 628, 16), 'tuple_var_assignment_25')
                # Assigning a type to the variable 'wt' (line 628)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 628, 23), 'wt', tuple_var_assignment_25_2346)
                # Evaluating assert statement condition
                
                # Evaluating a boolean operation
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'i' (line 629)
                i_2347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 33), 'i')
                # Getting the type of 'inblossom' (line 629)
                inblossom_2348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 23), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 629)
                getitem___2349 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 23), inblossom_2348, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 629)
                subscript_call_result_2350 = invoke(stypy.reporting.localization.Localization(__file__, 629, 23), getitem___2349, i_2347)
                
                # Getting the type of 'b' (line 629)
                b_2351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 39), 'b')
                # Applying the binary operator '==' (line 629)
                result_eq_2352 = python_operator(stypy.reporting.localization.Localization(__file__, 629, 23), '==', subscript_call_result_2350, b_2351)
                
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'j' (line 629)
                j_2353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 54), 'j')
                # Getting the type of 'inblossom' (line 629)
                inblossom_2354 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 44), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 629)
                getitem___2355 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 629, 44), inblossom_2354, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 629)
                subscript_call_result_2356 = invoke(stypy.reporting.localization.Localization(__file__, 629, 44), getitem___2355, j_2353)
                
                # Getting the type of 'b' (line 629)
                b_2357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 629, 60), 'b')
                # Applying the binary operator '==' (line 629)
                result_eq_2358 = python_operator(stypy.reporting.localization.Localization(__file__, 629, 44), '==', subscript_call_result_2356, b_2357)
                
                # Applying the binary operator 'or' (line 629)
                result_or_keyword_2359 = python_operator(stypy.reporting.localization.Localization(__file__, 629, 23), 'or', result_eq_2352, result_eq_2358)
                
                # Evaluating assert statement condition
                
                # Evaluating a boolean operation
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'i' (line 630)
                i_2360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 33), 'i')
                # Getting the type of 'inblossom' (line 630)
                inblossom_2361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 23), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 630)
                getitem___2362 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 23), inblossom_2361, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 630)
                subscript_call_result_2363 = invoke(stypy.reporting.localization.Localization(__file__, 630, 23), getitem___2362, i_2360)
                
                # Getting the type of 'b' (line 630)
                b_2364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 39), 'b')
                # Applying the binary operator '!=' (line 630)
                result_ne_2365 = python_operator(stypy.reporting.localization.Localization(__file__, 630, 23), '!=', subscript_call_result_2363, b_2364)
                
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'j' (line 630)
                j_2366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 54), 'j')
                # Getting the type of 'inblossom' (line 630)
                inblossom_2367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 44), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 630)
                getitem___2368 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 44), inblossom_2367, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 630)
                subscript_call_result_2369 = invoke(stypy.reporting.localization.Localization(__file__, 630, 44), getitem___2368, j_2366)
                
                # Getting the type of 'b' (line 630)
                b_2370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 60), 'b')
                # Applying the binary operator '!=' (line 630)
                result_ne_2371 = python_operator(stypy.reporting.localization.Localization(__file__, 630, 44), '!=', subscript_call_result_2369, b_2370)
                
                # Applying the binary operator 'or' (line 630)
                result_or_keyword_2372 = python_operator(stypy.reporting.localization.Localization(__file__, 630, 23), 'or', result_ne_2365, result_ne_2371)
                
                # Evaluating assert statement condition
                
                # Evaluating a boolean operation
                
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'i' (line 631)
                i_2373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 39), 'i')
                # Getting the type of 'inblossom' (line 631)
                inblossom_2374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 29), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 631)
                getitem___2375 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 29), inblossom_2374, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 631)
                subscript_call_result_2376 = invoke(stypy.reporting.localization.Localization(__file__, 631, 29), getitem___2375, i_2373)
                
                # Getting the type of 'label' (line 631)
                label_2377 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 23), 'label')
                # Obtaining the member '__getitem__' of a type (line 631)
                getitem___2378 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 23), label_2377, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 631)
                subscript_call_result_2379 = invoke(stypy.reporting.localization.Localization(__file__, 631, 23), getitem___2378, subscript_call_result_2376)
                
                int_2380 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 46), 'int')
                # Applying the binary operator '==' (line 631)
                result_eq_2381 = python_operator(stypy.reporting.localization.Localization(__file__, 631, 23), '==', subscript_call_result_2379, int_2380)
                
                
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'j' (line 631)
                j_2382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 68), 'j')
                # Getting the type of 'inblossom' (line 631)
                inblossom_2383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 58), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 631)
                getitem___2384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 58), inblossom_2383, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 631)
                subscript_call_result_2385 = invoke(stypy.reporting.localization.Localization(__file__, 631, 58), getitem___2384, j_2382)
                
                # Getting the type of 'label' (line 631)
                label_2386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 631, 52), 'label')
                # Obtaining the member '__getitem__' of a type (line 631)
                getitem___2387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 631, 52), label_2386, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 631)
                subscript_call_result_2388 = invoke(stypy.reporting.localization.Localization(__file__, 631, 52), getitem___2387, subscript_call_result_2385)
                
                int_2389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 631, 75), 'int')
                # Applying the binary operator '==' (line 631)
                result_eq_2390 = python_operator(stypy.reporting.localization.Localization(__file__, 631, 52), '==', subscript_call_result_2388, int_2389)
                
                # Applying the binary operator 'and' (line 631)
                result_and_keyword_2391 = python_operator(stypy.reporting.localization.Localization(__file__, 631, 23), 'and', result_eq_2381, result_eq_2390)
                
                
                # Evaluating a boolean operation
                
                # Getting the type of 'tbk' (line 632)
                tbk_2392 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 19), 'tbk')
                int_2393 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 632, 26), 'int')
                # Applying the binary operator '==' (line 632)
                result_eq_2394 = python_operator(stypy.reporting.localization.Localization(__file__, 632, 19), '==', tbk_2392, int_2393)
                
                
                
                # Call to slack(...): (line 632)
                # Processing the call arguments (line 632)
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 632)
                b_2396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 47), 'b', False)
                # Getting the type of 'bestedge' (line 632)
                bestedge_2397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 38), 'bestedge', False)
                # Obtaining the member '__getitem__' of a type (line 632)
                getitem___2398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 632, 38), bestedge_2397, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 632)
                subscript_call_result_2399 = invoke(stypy.reporting.localization.Localization(__file__, 632, 38), getitem___2398, b_2396)
                
                # Processing the call keyword arguments (line 632)
                kwargs_2400 = {}
                # Getting the type of 'slack' (line 632)
                slack_2395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 32), 'slack', False)
                # Calling slack(args, kwargs) (line 632)
                slack_call_result_2401 = invoke(stypy.reporting.localization.Localization(__file__, 632, 32), slack_2395, *[subscript_call_result_2399], **kwargs_2400)
                
                # Getting the type of 'tbd' (line 632)
                tbd_2402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 632, 53), 'tbd')
                # Applying the binary operator '<' (line 632)
                result_lt_2403 = python_operator(stypy.reporting.localization.Localization(__file__, 632, 32), '<', slack_call_result_2401, tbd_2402)
                
                # Applying the binary operator 'or' (line 632)
                result_or_keyword_2404 = python_operator(stypy.reporting.localization.Localization(__file__, 632, 19), 'or', result_eq_2394, result_lt_2403)
                
                # Testing if the type of an if condition is none (line 632)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 632, 16), result_or_keyword_2404):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 632)
                    if_condition_2405 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 632, 16), result_or_keyword_2404)
                    # Assigning a type to the variable 'if_condition_2405' (line 632)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 632, 16), 'if_condition_2405', if_condition_2405)
                    # SSA begins for if statement (line 632)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a Subscript to a Name (line 633):
                    
                    # Assigning a Subscript to a Name (line 633):
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 633)
                    b_2406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 35), 'b')
                    # Getting the type of 'bestedge' (line 633)
                    bestedge_2407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 26), 'bestedge')
                    # Obtaining the member '__getitem__' of a type (line 633)
                    getitem___2408 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 26), bestedge_2407, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 633)
                    subscript_call_result_2409 = invoke(stypy.reporting.localization.Localization(__file__, 633, 26), getitem___2408, b_2406)
                    
                    # Assigning a type to the variable 'tbk' (line 633)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 633, 20), 'tbk', subscript_call_result_2409)
                    
                    # Assigning a Call to a Name (line 634):
                    
                    # Assigning a Call to a Name (line 634):
                    
                    # Call to slack(...): (line 634)
                    # Processing the call arguments (line 634)
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 634)
                    b_2411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 41), 'b', False)
                    # Getting the type of 'bestedge' (line 634)
                    bestedge_2412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 32), 'bestedge', False)
                    # Obtaining the member '__getitem__' of a type (line 634)
                    getitem___2413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 32), bestedge_2412, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 634)
                    subscript_call_result_2414 = invoke(stypy.reporting.localization.Localization(__file__, 634, 32), getitem___2413, b_2411)
                    
                    # Processing the call keyword arguments (line 634)
                    kwargs_2415 = {}
                    # Getting the type of 'slack' (line 634)
                    slack_2410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 26), 'slack', False)
                    # Calling slack(args, kwargs) (line 634)
                    slack_call_result_2416 = invoke(stypy.reporting.localization.Localization(__file__, 634, 26), slack_2410, *[subscript_call_result_2414], **kwargs_2415)
                    
                    # Assigning a type to the variable 'tbd' (line 634)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 20), 'tbd', slack_call_result_2416)
                    # SSA join for if statement (line 632)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for if statement (line 627)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for if statement (line 617)
            module_type_store = module_type_store.join_ssa_context()
            

        # SSA join for a for statement
        module_type_store = module_type_store.join_ssa_context()

    
    
    # Evaluating a boolean operation
    # Getting the type of 'DEBUG' (line 635)
    DEBUG_2417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 7), 'DEBUG')
    
    # Getting the type of 'bd' (line 635)
    bd_2418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 17), 'bd')
    # Getting the type of 'tbd' (line 635)
    tbd_2419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 23), 'tbd')
    # Applying the binary operator '!=' (line 635)
    result_ne_2420 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 17), '!=', bd_2418, tbd_2419)
    
    # Applying the binary operator 'and' (line 635)
    result_and_keyword_2421 = python_operator(stypy.reporting.localization.Localization(__file__, 635, 7), 'and', DEBUG_2417, result_ne_2420)
    
    # Testing if the type of an if condition is none (line 635)

    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 635, 4), result_and_keyword_2421):
        pass
    else:
        
        # Testing the type of an if condition (line 635)
        if_condition_2422 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 635, 4), result_and_keyword_2421)
        # Assigning a type to the variable 'if_condition_2422' (line 635)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 635, 4), 'if_condition_2422', if_condition_2422)
        # SSA begins for if statement (line 635)
        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
        
        # Call to DEBUG(...): (line 636)
        # Processing the call arguments (line 636)
        str_2424 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 14), 'str', 'bk=%d tbk=%d bd=%s tbd=%s')
        
        # Obtaining an instance of the builtin type 'tuple' (line 636)
        tuple_2425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 636, 45), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 636)
        # Adding element type (line 636)
        # Getting the type of 'bk' (line 636)
        bk_2426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 45), 'bk', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 45), tuple_2425, bk_2426)
        # Adding element type (line 636)
        # Getting the type of 'tbk' (line 636)
        tbk_2427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 49), 'tbk', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 45), tuple_2425, tbk_2427)
        # Adding element type (line 636)
        
        # Call to repr(...): (line 636)
        # Processing the call arguments (line 636)
        # Getting the type of 'bd' (line 636)
        bd_2429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 59), 'bd', False)
        # Processing the call keyword arguments (line 636)
        kwargs_2430 = {}
        # Getting the type of 'repr' (line 636)
        repr_2428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 54), 'repr', False)
        # Calling repr(args, kwargs) (line 636)
        repr_call_result_2431 = invoke(stypy.reporting.localization.Localization(__file__, 636, 54), repr_2428, *[bd_2429], **kwargs_2430)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 45), tuple_2425, repr_call_result_2431)
        # Adding element type (line 636)
        
        # Call to repr(...): (line 636)
        # Processing the call arguments (line 636)
        # Getting the type of 'tbd' (line 636)
        tbd_2433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 69), 'tbd', False)
        # Processing the call keyword arguments (line 636)
        kwargs_2434 = {}
        # Getting the type of 'repr' (line 636)
        repr_2432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 64), 'repr', False)
        # Calling repr(args, kwargs) (line 636)
        repr_call_result_2435 = invoke(stypy.reporting.localization.Localization(__file__, 636, 64), repr_2432, *[tbd_2433], **kwargs_2434)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 636, 45), tuple_2425, repr_call_result_2435)
        
        # Applying the binary operator '%' (line 636)
        result_mod_2436 = python_operator(stypy.reporting.localization.Localization(__file__, 636, 14), '%', str_2424, tuple_2425)
        
        # Processing the call keyword arguments (line 636)
        kwargs_2437 = {}
        # Getting the type of 'DEBUG' (line 636)
        DEBUG_2423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 636, 8), 'DEBUG', False)
        # Calling DEBUG(args, kwargs) (line 636)
        DEBUG_call_result_2438 = invoke(stypy.reporting.localization.Localization(__file__, 636, 8), DEBUG_2423, *[result_mod_2436], **kwargs_2437)
        
        # SSA join for if statement (line 635)
        module_type_store = module_type_store.join_ssa_context()
        

    # Evaluating assert statement condition
    
    # Getting the type of 'bd' (line 637)
    bd_2439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 11), 'bd')
    # Getting the type of 'tbd' (line 637)
    tbd_2440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 17), 'tbd')
    # Applying the binary operator '==' (line 637)
    result_eq_2441 = python_operator(stypy.reporting.localization.Localization(__file__, 637, 11), '==', bd_2439, tbd_2440)
    
    
    # ################# End of 'checkDelta3(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'checkDelta3' in the type store
    # Getting the type of 'stypy_return_type' (line 611)
    stypy_return_type_2442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 611, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_2442)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'checkDelta3'
    return stypy_return_type_2442

# Assigning a type to the variable 'checkDelta3' (line 611)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 611, 0), 'checkDelta3', checkDelta3)
# Declaration of the 'MWMatchingRun' class

class MWMatchingRun:

    @norecursion
    def run(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'run'
        module_type_store = module_type_store.open_function_context('run', 642, 4, False)
        # Assigning a type to the variable 'self' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        MWMatchingRun.run.__dict__.__setitem__('stypy_localization', localization)
        MWMatchingRun.run.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        MWMatchingRun.run.__dict__.__setitem__('stypy_type_store', module_type_store)
        MWMatchingRun.run.__dict__.__setitem__('stypy_function_name', 'MWMatchingRun.run')
        MWMatchingRun.run.__dict__.__setitem__('stypy_param_names_list', [])
        MWMatchingRun.run.__dict__.__setitem__('stypy_varargs_param_name', None)
        MWMatchingRun.run.__dict__.__setitem__('stypy_kwargs_param_name', None)
        MWMatchingRun.run.__dict__.__setitem__('stypy_call_defaults', defaults)
        MWMatchingRun.run.__dict__.__setitem__('stypy_call_varargs', varargs)
        MWMatchingRun.run.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        MWMatchingRun.run.__dict__.__setitem__('stypy_declared_arg_number', 1)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MWMatchingRun.run', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'run', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'run(...)' code ##################

        
        
        # Call to xrange(...): (line 644)
        # Processing the call arguments (line 644)
        # Getting the type of 'nvertex' (line 644)
        nvertex_2444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 24), 'nvertex', False)
        # Processing the call keyword arguments (line 644)
        kwargs_2445 = {}
        # Getting the type of 'xrange' (line 644)
        xrange_2443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 644)
        xrange_call_result_2446 = invoke(stypy.reporting.localization.Localization(__file__, 644, 17), xrange_2443, *[nvertex_2444], **kwargs_2445)
        
        # Testing if the for loop is going to be iterated (line 644)
        # Testing the type of a for loop iterable (line 644)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 644, 8), xrange_call_result_2446)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 644, 8), xrange_call_result_2446):
            # Getting the type of the for loop variable (line 644)
            for_loop_var_2447 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 644, 8), xrange_call_result_2446)
            # Assigning a type to the variable 't' (line 644)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 644, 8), 't', for_loop_var_2447)
            # SSA begins for a for statement (line 644)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            # Getting the type of 'DEBUG' (line 649)
            DEBUG_2448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 15), 'DEBUG')
            # Testing if the type of an if condition is none (line 649)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 649, 12), DEBUG_2448):
                pass
            else:
                
                # Testing the type of an if condition (line 649)
                if_condition_2449 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 649, 12), DEBUG_2448)
                # Assigning a type to the variable 'if_condition_2449' (line 649)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 12), 'if_condition_2449', if_condition_2449)
                # SSA begins for if statement (line 649)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to DEBUG(...): (line 649)
                # Processing the call arguments (line 649)
                str_2451 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 649, 28), 'str', 'STAGE %d')
                # Getting the type of 't' (line 649)
                t_2452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 41), 't', False)
                # Applying the binary operator '%' (line 649)
                result_mod_2453 = python_operator(stypy.reporting.localization.Localization(__file__, 649, 28), '%', str_2451, t_2452)
                
                # Processing the call keyword arguments (line 649)
                kwargs_2454 = {}
                # Getting the type of 'DEBUG' (line 649)
                DEBUG_2450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 22), 'DEBUG', False)
                # Calling DEBUG(args, kwargs) (line 649)
                DEBUG_call_result_2455 = invoke(stypy.reporting.localization.Localization(__file__, 649, 22), DEBUG_2450, *[result_mod_2453], **kwargs_2454)
                
                # SSA join for if statement (line 649)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a BinOp to a Subscript (line 652):
            
            # Assigning a BinOp to a Subscript (line 652):
            int_2456 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 24), 'int')
            # Getting the type of 'nvertex' (line 652)
            nvertex_2457 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 28), 'nvertex')
            # Applying the binary operator '*' (line 652)
            result_mul_2458 = python_operator(stypy.reporting.localization.Localization(__file__, 652, 24), '*', int_2456, nvertex_2457)
            
            
            # Obtaining an instance of the builtin type 'list' (line 652)
            list_2459 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 39), 'list')
            # Adding type elements to the builtin type 'list' instance (line 652)
            # Adding element type (line 652)
            int_2460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 652, 40), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 39), list_2459, int_2460)
            
            # Applying the binary operator '*' (line 652)
            result_mul_2461 = python_operator(stypy.reporting.localization.Localization(__file__, 652, 23), '*', result_mul_2458, list_2459)
            
            # Getting the type of 'label' (line 652)
            label_2462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 12), 'label')
            slice_2463 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 652, 12), None, None, None)
            # Storing an element on a container (line 652)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 652, 12), label_2462, (slice_2463, result_mul_2461))
            
            # Assigning a BinOp to a Subscript (line 655):
            
            # Assigning a BinOp to a Subscript (line 655):
            int_2464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 27), 'int')
            # Getting the type of 'nvertex' (line 655)
            nvertex_2465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 31), 'nvertex')
            # Applying the binary operator '*' (line 655)
            result_mul_2466 = python_operator(stypy.reporting.localization.Localization(__file__, 655, 27), '*', int_2464, nvertex_2465)
            
            
            # Obtaining an instance of the builtin type 'list' (line 655)
            list_2467 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 42), 'list')
            # Adding type elements to the builtin type 'list' instance (line 655)
            # Adding element type (line 655)
            int_2468 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 655, 43), 'int')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 655, 42), list_2467, int_2468)
            
            # Applying the binary operator '*' (line 655)
            result_mul_2469 = python_operator(stypy.reporting.localization.Localization(__file__, 655, 26), '*', result_mul_2466, list_2467)
            
            # Getting the type of 'bestedge' (line 655)
            bestedge_2470 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 655, 12), 'bestedge')
            slice_2471 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 655, 12), None, None, None)
            # Storing an element on a container (line 655)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 655, 12), bestedge_2470, (slice_2471, result_mul_2469))
            
            # Assigning a BinOp to a Subscript (line 656):
            
            # Assigning a BinOp to a Subscript (line 656):
            # Getting the type of 'nvertex' (line 656)
            nvertex_2472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 41), 'nvertex')
            
            # Obtaining an instance of the builtin type 'list' (line 656)
            list_2473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 656, 51), 'list')
            # Adding type elements to the builtin type 'list' instance (line 656)
            # Adding element type (line 656)
            # Getting the type of 'None' (line 656)
            None_2474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 52), 'None')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 51), list_2473, None_2474)
            
            # Applying the binary operator '*' (line 656)
            result_mul_2475 = python_operator(stypy.reporting.localization.Localization(__file__, 656, 41), '*', nvertex_2472, list_2473)
            
            # Getting the type of 'blossombestedges' (line 656)
            blossombestedges_2476 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 12), 'blossombestedges')
            # Getting the type of 'nvertex' (line 656)
            nvertex_2477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 656, 29), 'nvertex')
            slice_2478 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 656, 12), nvertex_2477, None, None)
            # Storing an element on a container (line 656)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 656, 12), blossombestedges_2476, (slice_2478, result_mul_2475))
            
            # Assigning a BinOp to a Subscript (line 660):
            
            # Assigning a BinOp to a Subscript (line 660):
            # Getting the type of 'nedge' (line 660)
            nedge_2479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 27), 'nedge')
            
            # Obtaining an instance of the builtin type 'list' (line 660)
            list_2480 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 35), 'list')
            # Adding type elements to the builtin type 'list' instance (line 660)
            # Adding element type (line 660)
            # Getting the type of 'False' (line 660)
            False_2481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 36), 'False')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 35), list_2480, False_2481)
            
            # Applying the binary operator '*' (line 660)
            result_mul_2482 = python_operator(stypy.reporting.localization.Localization(__file__, 660, 27), '*', nedge_2479, list_2480)
            
            # Getting the type of 'allowedge' (line 660)
            allowedge_2483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 660, 12), 'allowedge')
            slice_2484 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 660, 12), None, None, None)
            # Storing an element on a container (line 660)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 660, 12), allowedge_2483, (slice_2484, result_mul_2482))
            
            # Assigning a List to a Subscript (line 663):
            
            # Assigning a List to a Subscript (line 663):
            
            # Obtaining an instance of the builtin type 'list' (line 663)
            list_2485 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 663, 23), 'list')
            # Adding type elements to the builtin type 'list' instance (line 663)
            
            # Getting the type of 'queue' (line 663)
            queue_2486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 663, 12), 'queue')
            slice_2487 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 663, 12), None, None, None)
            # Storing an element on a container (line 663)
            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 663, 12), queue_2486, (slice_2487, list_2485))
            
            
            # Call to xrange(...): (line 666)
            # Processing the call arguments (line 666)
            # Getting the type of 'nvertex' (line 666)
            nvertex_2489 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 28), 'nvertex', False)
            # Processing the call keyword arguments (line 666)
            kwargs_2490 = {}
            # Getting the type of 'xrange' (line 666)
            xrange_2488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 21), 'xrange', False)
            # Calling xrange(args, kwargs) (line 666)
            xrange_call_result_2491 = invoke(stypy.reporting.localization.Localization(__file__, 666, 21), xrange_2488, *[nvertex_2489], **kwargs_2490)
            
            # Testing if the for loop is going to be iterated (line 666)
            # Testing the type of a for loop iterable (line 666)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 666, 12), xrange_call_result_2491)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 666, 12), xrange_call_result_2491):
                # Getting the type of the for loop variable (line 666)
                for_loop_var_2492 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 666, 12), xrange_call_result_2491)
                # Assigning a type to the variable 'v' (line 666)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 12), 'v', for_loop_var_2492)
                # SSA begins for a for statement (line 666)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Evaluating a boolean operation
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 667)
                v_2493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 24), 'v')
                # Getting the type of 'mate' (line 667)
                mate_2494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 19), 'mate')
                # Obtaining the member '__getitem__' of a type (line 667)
                getitem___2495 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 19), mate_2494, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 667)
                subscript_call_result_2496 = invoke(stypy.reporting.localization.Localization(__file__, 667, 19), getitem___2495, v_2493)
                
                int_2497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 30), 'int')
                # Applying the binary operator '==' (line 667)
                result_eq_2498 = python_operator(stypy.reporting.localization.Localization(__file__, 667, 19), '==', subscript_call_result_2496, int_2497)
                
                
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 667)
                v_2499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 53), 'v')
                # Getting the type of 'inblossom' (line 667)
                inblossom_2500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 43), 'inblossom')
                # Obtaining the member '__getitem__' of a type (line 667)
                getitem___2501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 43), inblossom_2500, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 667)
                subscript_call_result_2502 = invoke(stypy.reporting.localization.Localization(__file__, 667, 43), getitem___2501, v_2499)
                
                # Getting the type of 'label' (line 667)
                label_2503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 37), 'label')
                # Obtaining the member '__getitem__' of a type (line 667)
                getitem___2504 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 37), label_2503, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 667)
                subscript_call_result_2505 = invoke(stypy.reporting.localization.Localization(__file__, 667, 37), getitem___2504, subscript_call_result_2502)
                
                int_2506 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 667, 60), 'int')
                # Applying the binary operator '==' (line 667)
                result_eq_2507 = python_operator(stypy.reporting.localization.Localization(__file__, 667, 37), '==', subscript_call_result_2505, int_2506)
                
                # Applying the binary operator 'and' (line 667)
                result_and_keyword_2508 = python_operator(stypy.reporting.localization.Localization(__file__, 667, 19), 'and', result_eq_2498, result_eq_2507)
                
                # Testing if the type of an if condition is none (line 667)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 667, 16), result_and_keyword_2508):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 667)
                    if_condition_2509 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 667, 16), result_and_keyword_2508)
                    # Assigning a type to the variable 'if_condition_2509' (line 667)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 667, 16), 'if_condition_2509', if_condition_2509)
                    # SSA begins for if statement (line 667)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to assignLabel(...): (line 668)
                    # Processing the call arguments (line 668)
                    # Getting the type of 'v' (line 668)
                    v_2511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 32), 'v', False)
                    int_2512 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 35), 'int')
                    int_2513 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 668, 38), 'int')
                    # Processing the call keyword arguments (line 668)
                    kwargs_2514 = {}
                    # Getting the type of 'assignLabel' (line 668)
                    assignLabel_2510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 668, 20), 'assignLabel', False)
                    # Calling assignLabel(args, kwargs) (line 668)
                    assignLabel_call_result_2515 = invoke(stypy.reporting.localization.Localization(__file__, 668, 20), assignLabel_2510, *[v_2511, int_2512, int_2513], **kwargs_2514)
                    
                    # SSA join for if statement (line 667)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            
            # Assigning a Num to a Name (line 671):
            
            # Assigning a Num to a Name (line 671):
            int_2516 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 671, 24), 'int')
            # Assigning a type to the variable 'augmented' (line 671)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 671, 12), 'augmented', int_2516)
            
            int_2517 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 672, 18), 'int')
            # Testing if the while is going to be iterated (line 672)
            # Testing the type of an if condition (line 672)
            is_suitable_condition(stypy.reporting.localization.Localization(__file__, 672, 12), int_2517)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 672, 12), int_2517):
                # SSA begins for while statement (line 672)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
                # Getting the type of 'DEBUG' (line 680)
                DEBUG_2518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 19), 'DEBUG')
                # Testing if the type of an if condition is none (line 680)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 680, 16), DEBUG_2518):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 680)
                    if_condition_2519 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 680, 16), DEBUG_2518)
                    # Assigning a type to the variable 'if_condition_2519' (line 680)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 16), 'if_condition_2519', if_condition_2519)
                    # SSA begins for if statement (line 680)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to DEBUG(...): (line 680)
                    # Processing the call arguments (line 680)
                    str_2521 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 32), 'str', 'SUBSTAGE')
                    # Processing the call keyword arguments (line 680)
                    kwargs_2522 = {}
                    # Getting the type of 'DEBUG' (line 680)
                    DEBUG_2520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 680, 26), 'DEBUG', False)
                    # Calling DEBUG(args, kwargs) (line 680)
                    DEBUG_call_result_2523 = invoke(stypy.reporting.localization.Localization(__file__, 680, 26), DEBUG_2520, *[str_2521], **kwargs_2522)
                    
                    # SSA join for if statement (line 680)
                    module_type_store = module_type_store.join_ssa_context()
                    

                
                
                # Evaluating a boolean operation
                # Getting the type of 'queue' (line 684)
                queue_2524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 22), 'queue')
                
                # Getting the type of 'augmented' (line 684)
                augmented_2525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 36), 'augmented')
                # Applying the 'not' unary operator (line 684)
                result_not__2526 = python_operator(stypy.reporting.localization.Localization(__file__, 684, 32), 'not', augmented_2525)
                
                # Applying the binary operator 'and' (line 684)
                result_and_keyword_2527 = python_operator(stypy.reporting.localization.Localization(__file__, 684, 22), 'and', queue_2524, result_not__2526)
                
                # Testing if the while is going to be iterated (line 684)
                # Testing the type of an if condition (line 684)
                is_suitable_condition(stypy.reporting.localization.Localization(__file__, 684, 16), result_and_keyword_2527)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 684, 16), result_and_keyword_2527):
                    # SSA begins for while statement (line 684)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'while loop')
                    
                    # Assigning a Call to a Name (line 687):
                    
                    # Assigning a Call to a Name (line 687):
                    
                    # Call to pop(...): (line 687)
                    # Processing the call keyword arguments (line 687)
                    kwargs_2530 = {}
                    # Getting the type of 'queue' (line 687)
                    queue_2528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 24), 'queue', False)
                    # Obtaining the member 'pop' of a type (line 687)
                    pop_2529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 687, 24), queue_2528, 'pop')
                    # Calling pop(args, kwargs) (line 687)
                    pop_call_result_2531 = invoke(stypy.reporting.localization.Localization(__file__, 687, 24), pop_2529, *[], **kwargs_2530)
                    
                    # Assigning a type to the variable 'v' (line 687)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 20), 'v', pop_call_result_2531)
                    # Getting the type of 'DEBUG' (line 688)
                    DEBUG_2532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 23), 'DEBUG')
                    # Testing if the type of an if condition is none (line 688)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 688, 20), DEBUG_2532):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 688)
                        if_condition_2533 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 688, 20), DEBUG_2532)
                        # Assigning a type to the variable 'if_condition_2533' (line 688)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 688, 20), 'if_condition_2533', if_condition_2533)
                        # SSA begins for if statement (line 688)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to DEBUG(...): (line 688)
                        # Processing the call arguments (line 688)
                        str_2535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 688, 36), 'str', 'POP v=%d')
                        # Getting the type of 'v' (line 688)
                        v_2536 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 49), 'v', False)
                        # Applying the binary operator '%' (line 688)
                        result_mod_2537 = python_operator(stypy.reporting.localization.Localization(__file__, 688, 36), '%', str_2535, v_2536)
                        
                        # Processing the call keyword arguments (line 688)
                        kwargs_2538 = {}
                        # Getting the type of 'DEBUG' (line 688)
                        DEBUG_2534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 30), 'DEBUG', False)
                        # Calling DEBUG(args, kwargs) (line 688)
                        DEBUG_call_result_2539 = invoke(stypy.reporting.localization.Localization(__file__, 688, 30), DEBUG_2534, *[result_mod_2537], **kwargs_2538)
                        
                        # SSA join for if statement (line 688)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # Evaluating assert statement condition
                    
                    
                    # Obtaining the type of the subscript
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'v' (line 689)
                    v_2540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 43), 'v')
                    # Getting the type of 'inblossom' (line 689)
                    inblossom_2541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 33), 'inblossom')
                    # Obtaining the member '__getitem__' of a type (line 689)
                    getitem___2542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 33), inblossom_2541, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 689)
                    subscript_call_result_2543 = invoke(stypy.reporting.localization.Localization(__file__, 689, 33), getitem___2542, v_2540)
                    
                    # Getting the type of 'label' (line 689)
                    label_2544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 689, 27), 'label')
                    # Obtaining the member '__getitem__' of a type (line 689)
                    getitem___2545 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 689, 27), label_2544, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 689)
                    subscript_call_result_2546 = invoke(stypy.reporting.localization.Localization(__file__, 689, 27), getitem___2545, subscript_call_result_2543)
                    
                    int_2547 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 689, 50), 'int')
                    # Applying the binary operator '==' (line 689)
                    result_eq_2548 = python_operator(stypy.reporting.localization.Localization(__file__, 689, 27), '==', subscript_call_result_2546, int_2547)
                    
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'v' (line 692)
                    v_2549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 39), 'v')
                    # Getting the type of 'neighbend' (line 692)
                    neighbend_2550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 29), 'neighbend')
                    # Obtaining the member '__getitem__' of a type (line 692)
                    getitem___2551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 29), neighbend_2550, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 692)
                    subscript_call_result_2552 = invoke(stypy.reporting.localization.Localization(__file__, 692, 29), getitem___2551, v_2549)
                    
                    # Testing if the for loop is going to be iterated (line 692)
                    # Testing the type of a for loop iterable (line 692)
                    is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 692, 20), subscript_call_result_2552)

                    if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 692, 20), subscript_call_result_2552):
                        # Getting the type of the for loop variable (line 692)
                        for_loop_var_2553 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 692, 20), subscript_call_result_2552)
                        # Assigning a type to the variable 'p' (line 692)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 20), 'p', for_loop_var_2553)
                        # SSA begins for a for statement (line 692)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                        
                        # Assigning a BinOp to a Name (line 693):
                        
                        # Assigning a BinOp to a Name (line 693):
                        # Getting the type of 'p' (line 693)
                        p_2554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 28), 'p')
                        int_2555 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 693, 33), 'int')
                        # Applying the binary operator '//' (line 693)
                        result_floordiv_2556 = python_operator(stypy.reporting.localization.Localization(__file__, 693, 28), '//', p_2554, int_2555)
                        
                        # Assigning a type to the variable 'k' (line 693)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 24), 'k', result_floordiv_2556)
                        
                        # Assigning a Subscript to a Name (line 694):
                        
                        # Assigning a Subscript to a Name (line 694):
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'p' (line 694)
                        p_2557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 37), 'p')
                        # Getting the type of 'endpoint' (line 694)
                        endpoint_2558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 28), 'endpoint')
                        # Obtaining the member '__getitem__' of a type (line 694)
                        getitem___2559 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 28), endpoint_2558, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 694)
                        subscript_call_result_2560 = invoke(stypy.reporting.localization.Localization(__file__, 694, 28), getitem___2559, p_2557)
                        
                        # Assigning a type to the variable 'w' (line 694)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 694, 24), 'w', subscript_call_result_2560)
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'v' (line 696)
                        v_2561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 37), 'v')
                        # Getting the type of 'inblossom' (line 696)
                        inblossom_2562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 27), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 696)
                        getitem___2563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 27), inblossom_2562, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 696)
                        subscript_call_result_2564 = invoke(stypy.reporting.localization.Localization(__file__, 696, 27), getitem___2563, v_2561)
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'w' (line 696)
                        w_2565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 53), 'w')
                        # Getting the type of 'inblossom' (line 696)
                        inblossom_2566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 43), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 696)
                        getitem___2567 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 43), inblossom_2566, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 696)
                        subscript_call_result_2568 = invoke(stypy.reporting.localization.Localization(__file__, 696, 43), getitem___2567, w_2565)
                        
                        # Applying the binary operator '==' (line 696)
                        result_eq_2569 = python_operator(stypy.reporting.localization.Localization(__file__, 696, 27), '==', subscript_call_result_2564, subscript_call_result_2568)
                        
                        # Testing if the type of an if condition is none (line 696)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 696, 24), result_eq_2569):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 696)
                            if_condition_2570 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 696, 24), result_eq_2569)
                            # Assigning a type to the variable 'if_condition_2570' (line 696)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 696, 24), 'if_condition_2570', if_condition_2570)
                            # SSA begins for if statement (line 696)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            # SSA join for if statement (line 696)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'k' (line 699)
                        k_2571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 41), 'k')
                        # Getting the type of 'allowedge' (line 699)
                        allowedge_2572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 699, 31), 'allowedge')
                        # Obtaining the member '__getitem__' of a type (line 699)
                        getitem___2573 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 699, 31), allowedge_2572, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 699)
                        subscript_call_result_2574 = invoke(stypy.reporting.localization.Localization(__file__, 699, 31), getitem___2573, k_2571)
                        
                        # Applying the 'not' unary operator (line 699)
                        result_not__2575 = python_operator(stypy.reporting.localization.Localization(__file__, 699, 27), 'not', subscript_call_result_2574)
                        
                        # Testing if the type of an if condition is none (line 699)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 699, 24), result_not__2575):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 699)
                            if_condition_2576 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 699, 24), result_not__2575)
                            # Assigning a type to the variable 'if_condition_2576' (line 699)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 699, 24), 'if_condition_2576', if_condition_2576)
                            # SSA begins for if statement (line 699)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Call to a Name (line 700):
                            
                            # Assigning a Call to a Name (line 700):
                            
                            # Call to slack(...): (line 700)
                            # Processing the call arguments (line 700)
                            # Getting the type of 'k' (line 700)
                            k_2578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 43), 'k', False)
                            # Processing the call keyword arguments (line 700)
                            kwargs_2579 = {}
                            # Getting the type of 'slack' (line 700)
                            slack_2577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 37), 'slack', False)
                            # Calling slack(args, kwargs) (line 700)
                            slack_call_result_2580 = invoke(stypy.reporting.localization.Localization(__file__, 700, 37), slack_2577, *[k_2578], **kwargs_2579)
                            
                            # Assigning a type to the variable 'kslack' (line 700)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 700, 28), 'kslack', slack_call_result_2580)
                            
                            # Getting the type of 'kslack' (line 701)
                            kslack_2581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 701, 31), 'kslack')
                            int_2582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 701, 41), 'int')
                            # Applying the binary operator '<=' (line 701)
                            result_le_2583 = python_operator(stypy.reporting.localization.Localization(__file__, 701, 31), '<=', kslack_2581, int_2582)
                            
                            # Testing if the type of an if condition is none (line 701)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 701, 28), result_le_2583):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 701)
                                if_condition_2584 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 701, 28), result_le_2583)
                                # Assigning a type to the variable 'if_condition_2584' (line 701)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 701, 28), 'if_condition_2584', if_condition_2584)
                                # SSA begins for if statement (line 701)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Assigning a Name to a Subscript (line 703):
                                
                                # Assigning a Name to a Subscript (line 703):
                                # Getting the type of 'True' (line 703)
                                True_2585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 47), 'True')
                                # Getting the type of 'allowedge' (line 703)
                                allowedge_2586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 32), 'allowedge')
                                # Getting the type of 'k' (line 703)
                                k_2587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 42), 'k')
                                # Storing an element on a container (line 703)
                                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 703, 32), allowedge_2586, (k_2587, True_2585))
                                # SSA join for if statement (line 701)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 699)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'k' (line 704)
                        k_2588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 37), 'k')
                        # Getting the type of 'allowedge' (line 704)
                        allowedge_2589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 27), 'allowedge')
                        # Obtaining the member '__getitem__' of a type (line 704)
                        getitem___2590 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 27), allowedge_2589, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 704)
                        subscript_call_result_2591 = invoke(stypy.reporting.localization.Localization(__file__, 704, 27), getitem___2590, k_2588)
                        
                        # Testing if the type of an if condition is none (line 704)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 704, 24), subscript_call_result_2591):
                            
                            
                            # Obtaining the type of the subscript
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'w' (line 732)
                            w_2664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 45), 'w')
                            # Getting the type of 'inblossom' (line 732)
                            inblossom_2665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 35), 'inblossom')
                            # Obtaining the member '__getitem__' of a type (line 732)
                            getitem___2666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 35), inblossom_2665, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 732)
                            subscript_call_result_2667 = invoke(stypy.reporting.localization.Localization(__file__, 732, 35), getitem___2666, w_2664)
                            
                            # Getting the type of 'label' (line 732)
                            label_2668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 29), 'label')
                            # Obtaining the member '__getitem__' of a type (line 732)
                            getitem___2669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 29), label_2668, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 732)
                            subscript_call_result_2670 = invoke(stypy.reporting.localization.Localization(__file__, 732, 29), getitem___2669, subscript_call_result_2667)
                            
                            int_2671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 52), 'int')
                            # Applying the binary operator '==' (line 732)
                            result_eq_2672 = python_operator(stypy.reporting.localization.Localization(__file__, 732, 29), '==', subscript_call_result_2670, int_2671)
                            
                            # Testing if the type of an if condition is none (line 732)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 732, 29), result_eq_2672):
                                
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'w' (line 738)
                                w_2698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 35), 'w')
                                # Getting the type of 'label' (line 738)
                                label_2699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'label')
                                # Obtaining the member '__getitem__' of a type (line 738)
                                getitem___2700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 29), label_2699, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 738)
                                subscript_call_result_2701 = invoke(stypy.reporting.localization.Localization(__file__, 738, 29), getitem___2700, w_2698)
                                
                                int_2702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 41), 'int')
                                # Applying the binary operator '==' (line 738)
                                result_eq_2703 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 29), '==', subscript_call_result_2701, int_2702)
                                
                                # Testing if the type of an if condition is none (line 738)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703):
                                    pass
                                else:
                                    
                                    # Testing the type of an if condition (line 738)
                                    if_condition_2704 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703)
                                    # Assigning a type to the variable 'if_condition_2704' (line 738)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'if_condition_2704', if_condition_2704)
                                    # SSA begins for if statement (line 738)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Evaluating a boolean operation
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 40), 'w')
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 31), 'bestedge')
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 31), bestedge_2706, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2708 = invoke(stypy.reporting.localization.Localization(__file__, 742, 31), getitem___2707, w_2705)
                                    
                                    int_2709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 46), 'int')
                                    # Applying the binary operator '==' (line 742)
                                    result_eq_2710 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), '==', subscript_call_result_2708, int_2709)
                                    
                                    
                                    # Getting the type of 'kslack' (line 742)
                                    kslack_2711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 52), 'kslack')
                                    
                                    # Call to slack(...): (line 742)
                                    # Processing the call arguments (line 742)
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 76), 'w', False)
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 67), 'bestedge', False)
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 67), bestedge_2714, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2716 = invoke(stypy.reporting.localization.Localization(__file__, 742, 67), getitem___2715, w_2713)
                                    
                                    # Processing the call keyword arguments (line 742)
                                    kwargs_2717 = {}
                                    # Getting the type of 'slack' (line 742)
                                    slack_2712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 61), 'slack', False)
                                    # Calling slack(args, kwargs) (line 742)
                                    slack_call_result_2718 = invoke(stypy.reporting.localization.Localization(__file__, 742, 61), slack_2712, *[subscript_call_result_2716], **kwargs_2717)
                                    
                                    # Applying the binary operator '<' (line 742)
                                    result_lt_2719 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 52), '<', kslack_2711, slack_call_result_2718)
                                    
                                    # Applying the binary operator 'or' (line 742)
                                    result_or_keyword_2720 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), 'or', result_eq_2710, result_lt_2719)
                                    
                                    # Testing if the type of an if condition is none (line 742)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 742)
                                        if_condition_2721 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720)
                                        # Assigning a type to the variable 'if_condition_2721' (line 742)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 28), 'if_condition_2721', if_condition_2721)
                                        # SSA begins for if statement (line 742)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        # Getting the type of 'k' (line 743)
                                        k_2722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 46), 'k')
                                        # Getting the type of 'bestedge' (line 743)
                                        bestedge_2723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 32), 'bestedge')
                                        # Getting the type of 'w' (line 743)
                                        w_2724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 41), 'w')
                                        # Storing an element on a container (line 743)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 32), bestedge_2723, (w_2724, k_2722))
                                        # SSA join for if statement (line 742)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA join for if statement (line 738)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                            else:
                                
                                # Testing the type of an if condition (line 732)
                                if_condition_2673 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 732, 29), result_eq_2672)
                                # Assigning a type to the variable 'if_condition_2673' (line 732)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 29), 'if_condition_2673', if_condition_2673)
                                # SSA begins for if statement (line 732)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Assigning a Subscript to a Name (line 735):
                                
                                # Assigning a Subscript to a Name (line 735):
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'v' (line 735)
                                v_2674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 42), 'v')
                                # Getting the type of 'inblossom' (line 735)
                                inblossom_2675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 32), 'inblossom')
                                # Obtaining the member '__getitem__' of a type (line 735)
                                getitem___2676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 32), inblossom_2675, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 735)
                                subscript_call_result_2677 = invoke(stypy.reporting.localization.Localization(__file__, 735, 32), getitem___2676, v_2674)
                                
                                # Assigning a type to the variable 'b' (line 735)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 28), 'b', subscript_call_result_2677)
                                
                                # Evaluating a boolean operation
                                
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'b' (line 736)
                                b_2678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 40), 'b')
                                # Getting the type of 'bestedge' (line 736)
                                bestedge_2679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 31), 'bestedge')
                                # Obtaining the member '__getitem__' of a type (line 736)
                                getitem___2680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 31), bestedge_2679, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 736)
                                subscript_call_result_2681 = invoke(stypy.reporting.localization.Localization(__file__, 736, 31), getitem___2680, b_2678)
                                
                                int_2682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 46), 'int')
                                # Applying the binary operator '==' (line 736)
                                result_eq_2683 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 31), '==', subscript_call_result_2681, int_2682)
                                
                                
                                # Getting the type of 'kslack' (line 736)
                                kslack_2684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 52), 'kslack')
                                
                                # Call to slack(...): (line 736)
                                # Processing the call arguments (line 736)
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'b' (line 736)
                                b_2686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 76), 'b', False)
                                # Getting the type of 'bestedge' (line 736)
                                bestedge_2687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 67), 'bestedge', False)
                                # Obtaining the member '__getitem__' of a type (line 736)
                                getitem___2688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 67), bestedge_2687, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 736)
                                subscript_call_result_2689 = invoke(stypy.reporting.localization.Localization(__file__, 736, 67), getitem___2688, b_2686)
                                
                                # Processing the call keyword arguments (line 736)
                                kwargs_2690 = {}
                                # Getting the type of 'slack' (line 736)
                                slack_2685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 61), 'slack', False)
                                # Calling slack(args, kwargs) (line 736)
                                slack_call_result_2691 = invoke(stypy.reporting.localization.Localization(__file__, 736, 61), slack_2685, *[subscript_call_result_2689], **kwargs_2690)
                                
                                # Applying the binary operator '<' (line 736)
                                result_lt_2692 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 52), '<', kslack_2684, slack_call_result_2691)
                                
                                # Applying the binary operator 'or' (line 736)
                                result_or_keyword_2693 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 31), 'or', result_eq_2683, result_lt_2692)
                                
                                # Testing if the type of an if condition is none (line 736)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 736, 28), result_or_keyword_2693):
                                    pass
                                else:
                                    
                                    # Testing the type of an if condition (line 736)
                                    if_condition_2694 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 736, 28), result_or_keyword_2693)
                                    # Assigning a type to the variable 'if_condition_2694' (line 736)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 28), 'if_condition_2694', if_condition_2694)
                                    # SSA begins for if statement (line 736)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Assigning a Name to a Subscript (line 737):
                                    
                                    # Assigning a Name to a Subscript (line 737):
                                    # Getting the type of 'k' (line 737)
                                    k_2695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 46), 'k')
                                    # Getting the type of 'bestedge' (line 737)
                                    bestedge_2696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 32), 'bestedge')
                                    # Getting the type of 'b' (line 737)
                                    b_2697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 41), 'b')
                                    # Storing an element on a container (line 737)
                                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 737, 32), bestedge_2696, (b_2697, k_2695))
                                    # SSA join for if statement (line 736)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                                # SSA branch for the else part of an if statement (line 732)
                                module_type_store.open_ssa_branch('else')
                                
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'w' (line 738)
                                w_2698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 35), 'w')
                                # Getting the type of 'label' (line 738)
                                label_2699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'label')
                                # Obtaining the member '__getitem__' of a type (line 738)
                                getitem___2700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 29), label_2699, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 738)
                                subscript_call_result_2701 = invoke(stypy.reporting.localization.Localization(__file__, 738, 29), getitem___2700, w_2698)
                                
                                int_2702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 41), 'int')
                                # Applying the binary operator '==' (line 738)
                                result_eq_2703 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 29), '==', subscript_call_result_2701, int_2702)
                                
                                # Testing if the type of an if condition is none (line 738)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703):
                                    pass
                                else:
                                    
                                    # Testing the type of an if condition (line 738)
                                    if_condition_2704 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703)
                                    # Assigning a type to the variable 'if_condition_2704' (line 738)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'if_condition_2704', if_condition_2704)
                                    # SSA begins for if statement (line 738)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Evaluating a boolean operation
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 40), 'w')
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 31), 'bestedge')
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 31), bestedge_2706, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2708 = invoke(stypy.reporting.localization.Localization(__file__, 742, 31), getitem___2707, w_2705)
                                    
                                    int_2709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 46), 'int')
                                    # Applying the binary operator '==' (line 742)
                                    result_eq_2710 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), '==', subscript_call_result_2708, int_2709)
                                    
                                    
                                    # Getting the type of 'kslack' (line 742)
                                    kslack_2711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 52), 'kslack')
                                    
                                    # Call to slack(...): (line 742)
                                    # Processing the call arguments (line 742)
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 76), 'w', False)
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 67), 'bestedge', False)
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 67), bestedge_2714, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2716 = invoke(stypy.reporting.localization.Localization(__file__, 742, 67), getitem___2715, w_2713)
                                    
                                    # Processing the call keyword arguments (line 742)
                                    kwargs_2717 = {}
                                    # Getting the type of 'slack' (line 742)
                                    slack_2712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 61), 'slack', False)
                                    # Calling slack(args, kwargs) (line 742)
                                    slack_call_result_2718 = invoke(stypy.reporting.localization.Localization(__file__, 742, 61), slack_2712, *[subscript_call_result_2716], **kwargs_2717)
                                    
                                    # Applying the binary operator '<' (line 742)
                                    result_lt_2719 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 52), '<', kslack_2711, slack_call_result_2718)
                                    
                                    # Applying the binary operator 'or' (line 742)
                                    result_or_keyword_2720 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), 'or', result_eq_2710, result_lt_2719)
                                    
                                    # Testing if the type of an if condition is none (line 742)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 742)
                                        if_condition_2721 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720)
                                        # Assigning a type to the variable 'if_condition_2721' (line 742)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 28), 'if_condition_2721', if_condition_2721)
                                        # SSA begins for if statement (line 742)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        # Getting the type of 'k' (line 743)
                                        k_2722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 46), 'k')
                                        # Getting the type of 'bestedge' (line 743)
                                        bestedge_2723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 32), 'bestedge')
                                        # Getting the type of 'w' (line 743)
                                        w_2724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 41), 'w')
                                        # Storing an element on a container (line 743)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 32), bestedge_2723, (w_2724, k_2722))
                                        # SSA join for if statement (line 742)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA join for if statement (line 738)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                                # SSA join for if statement (line 732)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 704)
                            if_condition_2592 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 704, 24), subscript_call_result_2591)
                            # Assigning a type to the variable 'if_condition_2592' (line 704)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 704, 24), 'if_condition_2592', if_condition_2592)
                            # SSA begins for if statement (line 704)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            
                            # Obtaining the type of the subscript
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'w' (line 705)
                            w_2593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 47), 'w')
                            # Getting the type of 'inblossom' (line 705)
                            inblossom_2594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 37), 'inblossom')
                            # Obtaining the member '__getitem__' of a type (line 705)
                            getitem___2595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 37), inblossom_2594, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 705)
                            subscript_call_result_2596 = invoke(stypy.reporting.localization.Localization(__file__, 705, 37), getitem___2595, w_2593)
                            
                            # Getting the type of 'label' (line 705)
                            label_2597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 705, 31), 'label')
                            # Obtaining the member '__getitem__' of a type (line 705)
                            getitem___2598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 705, 31), label_2597, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 705)
                            subscript_call_result_2599 = invoke(stypy.reporting.localization.Localization(__file__, 705, 31), getitem___2598, subscript_call_result_2596)
                            
                            int_2600 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 705, 54), 'int')
                            # Applying the binary operator '==' (line 705)
                            result_eq_2601 = python_operator(stypy.reporting.localization.Localization(__file__, 705, 31), '==', subscript_call_result_2599, int_2600)
                            
                            # Testing if the type of an if condition is none (line 705)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 705, 28), result_eq_2601):
                                
                                
                                # Obtaining the type of the subscript
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'w' (line 709)
                                w_2611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 49), 'w')
                                # Getting the type of 'inblossom' (line 709)
                                inblossom_2612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 39), 'inblossom')
                                # Obtaining the member '__getitem__' of a type (line 709)
                                getitem___2613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 39), inblossom_2612, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 709)
                                subscript_call_result_2614 = invoke(stypy.reporting.localization.Localization(__file__, 709, 39), getitem___2613, w_2611)
                                
                                # Getting the type of 'label' (line 709)
                                label_2615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 33), 'label')
                                # Obtaining the member '__getitem__' of a type (line 709)
                                getitem___2616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 33), label_2615, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 709)
                                subscript_call_result_2617 = invoke(stypy.reporting.localization.Localization(__file__, 709, 33), getitem___2616, subscript_call_result_2614)
                                
                                int_2618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 56), 'int')
                                # Applying the binary operator '==' (line 709)
                                result_eq_2619 = python_operator(stypy.reporting.localization.Localization(__file__, 709, 33), '==', subscript_call_result_2617, int_2618)
                                
                                # Testing if the type of an if condition is none (line 709)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 709, 33), result_eq_2619):
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 724)
                                    w_2640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 39), 'w')
                                    # Getting the type of 'label' (line 724)
                                    label_2641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'label')
                                    # Obtaining the member '__getitem__' of a type (line 724)
                                    getitem___2642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 33), label_2641, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 724)
                                    subscript_call_result_2643 = invoke(stypy.reporting.localization.Localization(__file__, 724, 33), getitem___2642, w_2640)
                                    
                                    int_2644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 45), 'int')
                                    # Applying the binary operator '==' (line 724)
                                    result_eq_2645 = python_operator(stypy.reporting.localization.Localization(__file__, 724, 33), '==', subscript_call_result_2643, int_2644)
                                    
                                    # Testing if the type of an if condition is none (line 724)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 724)
                                        if_condition_2646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645)
                                        # Assigning a type to the variable 'if_condition_2646' (line 724)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'if_condition_2646', if_condition_2646)
                                        # SSA begins for if statement (line 724)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        # Evaluating assert statement condition
                                        
                                        
                                        # Obtaining the type of the subscript
                                        
                                        # Obtaining the type of the subscript
                                        # Getting the type of 'w' (line 729)
                                        w_2647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 55), 'w')
                                        # Getting the type of 'inblossom' (line 729)
                                        inblossom_2648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 45), 'inblossom')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 45), inblossom_2648, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2650 = invoke(stypy.reporting.localization.Localization(__file__, 729, 45), getitem___2649, w_2647)
                                        
                                        # Getting the type of 'label' (line 729)
                                        label_2651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 39), 'label')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 39), label_2651, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2653 = invoke(stypy.reporting.localization.Localization(__file__, 729, 39), getitem___2652, subscript_call_result_2650)
                                        
                                        int_2654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 62), 'int')
                                        # Applying the binary operator '==' (line 729)
                                        result_eq_2655 = python_operator(stypy.reporting.localization.Localization(__file__, 729, 39), '==', subscript_call_result_2653, int_2654)
                                        
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        int_2656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 43), 'int')
                                        # Getting the type of 'label' (line 730)
                                        label_2657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 32), 'label')
                                        # Getting the type of 'w' (line 730)
                                        w_2658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 38), 'w')
                                        # Storing an element on a container (line 730)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 32), label_2657, (w_2658, int_2656))
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        # Getting the type of 'p' (line 731)
                                        p_2659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 46), 'p')
                                        int_2660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 50), 'int')
                                        # Applying the binary operator '^' (line 731)
                                        result_xor_2661 = python_operator(stypy.reporting.localization.Localization(__file__, 731, 46), '^', p_2659, int_2660)
                                        
                                        # Getting the type of 'labelend' (line 731)
                                        labelend_2662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 32), 'labelend')
                                        # Getting the type of 'w' (line 731)
                                        w_2663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 41), 'w')
                                        # Storing an element on a container (line 731)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 32), labelend_2662, (w_2663, result_xor_2661))
                                        # SSA join for if statement (line 724)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                else:
                                    
                                    # Testing the type of an if condition (line 709)
                                    if_condition_2620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 709, 33), result_eq_2619)
                                    # Assigning a type to the variable 'if_condition_2620' (line 709)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 33), 'if_condition_2620', if_condition_2620)
                                    # SSA begins for if statement (line 709)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Assigning a Call to a Name (line 713):
                                    
                                    # Assigning a Call to a Name (line 713):
                                    
                                    # Call to scanBlossom(...): (line 713)
                                    # Processing the call arguments (line 713)
                                    # Getting the type of 'v' (line 713)
                                    v_2622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 51), 'v', False)
                                    # Getting the type of 'w' (line 713)
                                    w_2623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 54), 'w', False)
                                    # Processing the call keyword arguments (line 713)
                                    kwargs_2624 = {}
                                    # Getting the type of 'scanBlossom' (line 713)
                                    scanBlossom_2621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 39), 'scanBlossom', False)
                                    # Calling scanBlossom(args, kwargs) (line 713)
                                    scanBlossom_call_result_2625 = invoke(stypy.reporting.localization.Localization(__file__, 713, 39), scanBlossom_2621, *[v_2622, w_2623], **kwargs_2624)
                                    
                                    # Assigning a type to the variable 'base' (line 713)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 32), 'base', scanBlossom_call_result_2625)
                                    
                                    # Getting the type of 'base' (line 714)
                                    base_2626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 35), 'base')
                                    int_2627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 43), 'int')
                                    # Applying the binary operator '>=' (line 714)
                                    result_ge_2628 = python_operator(stypy.reporting.localization.Localization(__file__, 714, 35), '>=', base_2626, int_2627)
                                    
                                    # Testing if the type of an if condition is none (line 714)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 714, 32), result_ge_2628):
                                        
                                        # Call to augmentMatching(...): (line 721)
                                        # Processing the call arguments (line 721)
                                        # Getting the type of 'k' (line 721)
                                        k_2636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 52), 'k', False)
                                        # Processing the call keyword arguments (line 721)
                                        kwargs_2637 = {}
                                        # Getting the type of 'augmentMatching' (line 721)
                                        augmentMatching_2635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 36), 'augmentMatching', False)
                                        # Calling augmentMatching(args, kwargs) (line 721)
                                        augmentMatching_call_result_2638 = invoke(stypy.reporting.localization.Localization(__file__, 721, 36), augmentMatching_2635, *[k_2636], **kwargs_2637)
                                        
                                        
                                        # Assigning a Num to a Name (line 722):
                                        
                                        # Assigning a Num to a Name (line 722):
                                        int_2639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 48), 'int')
                                        # Assigning a type to the variable 'augmented' (line 722)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'augmented', int_2639)
                                    else:
                                        
                                        # Testing the type of an if condition (line 714)
                                        if_condition_2629 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 714, 32), result_ge_2628)
                                        # Assigning a type to the variable 'if_condition_2629' (line 714)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 32), 'if_condition_2629', if_condition_2629)
                                        # SSA begins for if statement (line 714)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        
                                        # Call to addBlossom(...): (line 717)
                                        # Processing the call arguments (line 717)
                                        # Getting the type of 'base' (line 717)
                                        base_2631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 47), 'base', False)
                                        # Getting the type of 'k' (line 717)
                                        k_2632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 53), 'k', False)
                                        # Processing the call keyword arguments (line 717)
                                        kwargs_2633 = {}
                                        # Getting the type of 'addBlossom' (line 717)
                                        addBlossom_2630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 36), 'addBlossom', False)
                                        # Calling addBlossom(args, kwargs) (line 717)
                                        addBlossom_call_result_2634 = invoke(stypy.reporting.localization.Localization(__file__, 717, 36), addBlossom_2630, *[base_2631, k_2632], **kwargs_2633)
                                        
                                        # SSA branch for the else part of an if statement (line 714)
                                        module_type_store.open_ssa_branch('else')
                                        
                                        # Call to augmentMatching(...): (line 721)
                                        # Processing the call arguments (line 721)
                                        # Getting the type of 'k' (line 721)
                                        k_2636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 52), 'k', False)
                                        # Processing the call keyword arguments (line 721)
                                        kwargs_2637 = {}
                                        # Getting the type of 'augmentMatching' (line 721)
                                        augmentMatching_2635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 36), 'augmentMatching', False)
                                        # Calling augmentMatching(args, kwargs) (line 721)
                                        augmentMatching_call_result_2638 = invoke(stypy.reporting.localization.Localization(__file__, 721, 36), augmentMatching_2635, *[k_2636], **kwargs_2637)
                                        
                                        
                                        # Assigning a Num to a Name (line 722):
                                        
                                        # Assigning a Num to a Name (line 722):
                                        int_2639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 48), 'int')
                                        # Assigning a type to the variable 'augmented' (line 722)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'augmented', int_2639)
                                        # SSA join for if statement (line 714)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA branch for the else part of an if statement (line 709)
                                    module_type_store.open_ssa_branch('else')
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 724)
                                    w_2640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 39), 'w')
                                    # Getting the type of 'label' (line 724)
                                    label_2641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'label')
                                    # Obtaining the member '__getitem__' of a type (line 724)
                                    getitem___2642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 33), label_2641, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 724)
                                    subscript_call_result_2643 = invoke(stypy.reporting.localization.Localization(__file__, 724, 33), getitem___2642, w_2640)
                                    
                                    int_2644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 45), 'int')
                                    # Applying the binary operator '==' (line 724)
                                    result_eq_2645 = python_operator(stypy.reporting.localization.Localization(__file__, 724, 33), '==', subscript_call_result_2643, int_2644)
                                    
                                    # Testing if the type of an if condition is none (line 724)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 724)
                                        if_condition_2646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645)
                                        # Assigning a type to the variable 'if_condition_2646' (line 724)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'if_condition_2646', if_condition_2646)
                                        # SSA begins for if statement (line 724)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        # Evaluating assert statement condition
                                        
                                        
                                        # Obtaining the type of the subscript
                                        
                                        # Obtaining the type of the subscript
                                        # Getting the type of 'w' (line 729)
                                        w_2647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 55), 'w')
                                        # Getting the type of 'inblossom' (line 729)
                                        inblossom_2648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 45), 'inblossom')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 45), inblossom_2648, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2650 = invoke(stypy.reporting.localization.Localization(__file__, 729, 45), getitem___2649, w_2647)
                                        
                                        # Getting the type of 'label' (line 729)
                                        label_2651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 39), 'label')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 39), label_2651, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2653 = invoke(stypy.reporting.localization.Localization(__file__, 729, 39), getitem___2652, subscript_call_result_2650)
                                        
                                        int_2654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 62), 'int')
                                        # Applying the binary operator '==' (line 729)
                                        result_eq_2655 = python_operator(stypy.reporting.localization.Localization(__file__, 729, 39), '==', subscript_call_result_2653, int_2654)
                                        
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        int_2656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 43), 'int')
                                        # Getting the type of 'label' (line 730)
                                        label_2657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 32), 'label')
                                        # Getting the type of 'w' (line 730)
                                        w_2658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 38), 'w')
                                        # Storing an element on a container (line 730)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 32), label_2657, (w_2658, int_2656))
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        # Getting the type of 'p' (line 731)
                                        p_2659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 46), 'p')
                                        int_2660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 50), 'int')
                                        # Applying the binary operator '^' (line 731)
                                        result_xor_2661 = python_operator(stypy.reporting.localization.Localization(__file__, 731, 46), '^', p_2659, int_2660)
                                        
                                        # Getting the type of 'labelend' (line 731)
                                        labelend_2662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 32), 'labelend')
                                        # Getting the type of 'w' (line 731)
                                        w_2663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 41), 'w')
                                        # Storing an element on a container (line 731)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 32), labelend_2662, (w_2663, result_xor_2661))
                                        # SSA join for if statement (line 724)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA join for if statement (line 709)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                            else:
                                
                                # Testing the type of an if condition (line 705)
                                if_condition_2602 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 705, 28), result_eq_2601)
                                # Assigning a type to the variable 'if_condition_2602' (line 705)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 705, 28), 'if_condition_2602', if_condition_2602)
                                # SSA begins for if statement (line 705)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to assignLabel(...): (line 708)
                                # Processing the call arguments (line 708)
                                # Getting the type of 'w' (line 708)
                                w_2604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 44), 'w', False)
                                int_2605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 47), 'int')
                                # Getting the type of 'p' (line 708)
                                p_2606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 50), 'p', False)
                                int_2607 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 54), 'int')
                                # Applying the binary operator '^' (line 708)
                                result_xor_2608 = python_operator(stypy.reporting.localization.Localization(__file__, 708, 50), '^', p_2606, int_2607)
                                
                                # Processing the call keyword arguments (line 708)
                                kwargs_2609 = {}
                                # Getting the type of 'assignLabel' (line 708)
                                assignLabel_2603 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 32), 'assignLabel', False)
                                # Calling assignLabel(args, kwargs) (line 708)
                                assignLabel_call_result_2610 = invoke(stypy.reporting.localization.Localization(__file__, 708, 32), assignLabel_2603, *[w_2604, int_2605, result_xor_2608], **kwargs_2609)
                                
                                # SSA branch for the else part of an if statement (line 705)
                                module_type_store.open_ssa_branch('else')
                                
                                
                                # Obtaining the type of the subscript
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'w' (line 709)
                                w_2611 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 49), 'w')
                                # Getting the type of 'inblossom' (line 709)
                                inblossom_2612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 39), 'inblossom')
                                # Obtaining the member '__getitem__' of a type (line 709)
                                getitem___2613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 39), inblossom_2612, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 709)
                                subscript_call_result_2614 = invoke(stypy.reporting.localization.Localization(__file__, 709, 39), getitem___2613, w_2611)
                                
                                # Getting the type of 'label' (line 709)
                                label_2615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 33), 'label')
                                # Obtaining the member '__getitem__' of a type (line 709)
                                getitem___2616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 33), label_2615, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 709)
                                subscript_call_result_2617 = invoke(stypy.reporting.localization.Localization(__file__, 709, 33), getitem___2616, subscript_call_result_2614)
                                
                                int_2618 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 709, 56), 'int')
                                # Applying the binary operator '==' (line 709)
                                result_eq_2619 = python_operator(stypy.reporting.localization.Localization(__file__, 709, 33), '==', subscript_call_result_2617, int_2618)
                                
                                # Testing if the type of an if condition is none (line 709)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 709, 33), result_eq_2619):
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 724)
                                    w_2640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 39), 'w')
                                    # Getting the type of 'label' (line 724)
                                    label_2641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'label')
                                    # Obtaining the member '__getitem__' of a type (line 724)
                                    getitem___2642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 33), label_2641, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 724)
                                    subscript_call_result_2643 = invoke(stypy.reporting.localization.Localization(__file__, 724, 33), getitem___2642, w_2640)
                                    
                                    int_2644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 45), 'int')
                                    # Applying the binary operator '==' (line 724)
                                    result_eq_2645 = python_operator(stypy.reporting.localization.Localization(__file__, 724, 33), '==', subscript_call_result_2643, int_2644)
                                    
                                    # Testing if the type of an if condition is none (line 724)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 724)
                                        if_condition_2646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645)
                                        # Assigning a type to the variable 'if_condition_2646' (line 724)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'if_condition_2646', if_condition_2646)
                                        # SSA begins for if statement (line 724)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        # Evaluating assert statement condition
                                        
                                        
                                        # Obtaining the type of the subscript
                                        
                                        # Obtaining the type of the subscript
                                        # Getting the type of 'w' (line 729)
                                        w_2647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 55), 'w')
                                        # Getting the type of 'inblossom' (line 729)
                                        inblossom_2648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 45), 'inblossom')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 45), inblossom_2648, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2650 = invoke(stypy.reporting.localization.Localization(__file__, 729, 45), getitem___2649, w_2647)
                                        
                                        # Getting the type of 'label' (line 729)
                                        label_2651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 39), 'label')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 39), label_2651, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2653 = invoke(stypy.reporting.localization.Localization(__file__, 729, 39), getitem___2652, subscript_call_result_2650)
                                        
                                        int_2654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 62), 'int')
                                        # Applying the binary operator '==' (line 729)
                                        result_eq_2655 = python_operator(stypy.reporting.localization.Localization(__file__, 729, 39), '==', subscript_call_result_2653, int_2654)
                                        
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        int_2656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 43), 'int')
                                        # Getting the type of 'label' (line 730)
                                        label_2657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 32), 'label')
                                        # Getting the type of 'w' (line 730)
                                        w_2658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 38), 'w')
                                        # Storing an element on a container (line 730)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 32), label_2657, (w_2658, int_2656))
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        # Getting the type of 'p' (line 731)
                                        p_2659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 46), 'p')
                                        int_2660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 50), 'int')
                                        # Applying the binary operator '^' (line 731)
                                        result_xor_2661 = python_operator(stypy.reporting.localization.Localization(__file__, 731, 46), '^', p_2659, int_2660)
                                        
                                        # Getting the type of 'labelend' (line 731)
                                        labelend_2662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 32), 'labelend')
                                        # Getting the type of 'w' (line 731)
                                        w_2663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 41), 'w')
                                        # Storing an element on a container (line 731)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 32), labelend_2662, (w_2663, result_xor_2661))
                                        # SSA join for if statement (line 724)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                else:
                                    
                                    # Testing the type of an if condition (line 709)
                                    if_condition_2620 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 709, 33), result_eq_2619)
                                    # Assigning a type to the variable 'if_condition_2620' (line 709)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 33), 'if_condition_2620', if_condition_2620)
                                    # SSA begins for if statement (line 709)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Assigning a Call to a Name (line 713):
                                    
                                    # Assigning a Call to a Name (line 713):
                                    
                                    # Call to scanBlossom(...): (line 713)
                                    # Processing the call arguments (line 713)
                                    # Getting the type of 'v' (line 713)
                                    v_2622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 51), 'v', False)
                                    # Getting the type of 'w' (line 713)
                                    w_2623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 54), 'w', False)
                                    # Processing the call keyword arguments (line 713)
                                    kwargs_2624 = {}
                                    # Getting the type of 'scanBlossom' (line 713)
                                    scanBlossom_2621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 39), 'scanBlossom', False)
                                    # Calling scanBlossom(args, kwargs) (line 713)
                                    scanBlossom_call_result_2625 = invoke(stypy.reporting.localization.Localization(__file__, 713, 39), scanBlossom_2621, *[v_2622, w_2623], **kwargs_2624)
                                    
                                    # Assigning a type to the variable 'base' (line 713)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 32), 'base', scanBlossom_call_result_2625)
                                    
                                    # Getting the type of 'base' (line 714)
                                    base_2626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 35), 'base')
                                    int_2627 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 714, 43), 'int')
                                    # Applying the binary operator '>=' (line 714)
                                    result_ge_2628 = python_operator(stypy.reporting.localization.Localization(__file__, 714, 35), '>=', base_2626, int_2627)
                                    
                                    # Testing if the type of an if condition is none (line 714)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 714, 32), result_ge_2628):
                                        
                                        # Call to augmentMatching(...): (line 721)
                                        # Processing the call arguments (line 721)
                                        # Getting the type of 'k' (line 721)
                                        k_2636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 52), 'k', False)
                                        # Processing the call keyword arguments (line 721)
                                        kwargs_2637 = {}
                                        # Getting the type of 'augmentMatching' (line 721)
                                        augmentMatching_2635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 36), 'augmentMatching', False)
                                        # Calling augmentMatching(args, kwargs) (line 721)
                                        augmentMatching_call_result_2638 = invoke(stypy.reporting.localization.Localization(__file__, 721, 36), augmentMatching_2635, *[k_2636], **kwargs_2637)
                                        
                                        
                                        # Assigning a Num to a Name (line 722):
                                        
                                        # Assigning a Num to a Name (line 722):
                                        int_2639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 48), 'int')
                                        # Assigning a type to the variable 'augmented' (line 722)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'augmented', int_2639)
                                    else:
                                        
                                        # Testing the type of an if condition (line 714)
                                        if_condition_2629 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 714, 32), result_ge_2628)
                                        # Assigning a type to the variable 'if_condition_2629' (line 714)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 714, 32), 'if_condition_2629', if_condition_2629)
                                        # SSA begins for if statement (line 714)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        
                                        # Call to addBlossom(...): (line 717)
                                        # Processing the call arguments (line 717)
                                        # Getting the type of 'base' (line 717)
                                        base_2631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 47), 'base', False)
                                        # Getting the type of 'k' (line 717)
                                        k_2632 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 53), 'k', False)
                                        # Processing the call keyword arguments (line 717)
                                        kwargs_2633 = {}
                                        # Getting the type of 'addBlossom' (line 717)
                                        addBlossom_2630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 36), 'addBlossom', False)
                                        # Calling addBlossom(args, kwargs) (line 717)
                                        addBlossom_call_result_2634 = invoke(stypy.reporting.localization.Localization(__file__, 717, 36), addBlossom_2630, *[base_2631, k_2632], **kwargs_2633)
                                        
                                        # SSA branch for the else part of an if statement (line 714)
                                        module_type_store.open_ssa_branch('else')
                                        
                                        # Call to augmentMatching(...): (line 721)
                                        # Processing the call arguments (line 721)
                                        # Getting the type of 'k' (line 721)
                                        k_2636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 52), 'k', False)
                                        # Processing the call keyword arguments (line 721)
                                        kwargs_2637 = {}
                                        # Getting the type of 'augmentMatching' (line 721)
                                        augmentMatching_2635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 36), 'augmentMatching', False)
                                        # Calling augmentMatching(args, kwargs) (line 721)
                                        augmentMatching_call_result_2638 = invoke(stypy.reporting.localization.Localization(__file__, 721, 36), augmentMatching_2635, *[k_2636], **kwargs_2637)
                                        
                                        
                                        # Assigning a Num to a Name (line 722):
                                        
                                        # Assigning a Num to a Name (line 722):
                                        int_2639 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 48), 'int')
                                        # Assigning a type to the variable 'augmented' (line 722)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 36), 'augmented', int_2639)
                                        # SSA join for if statement (line 714)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA branch for the else part of an if statement (line 709)
                                    module_type_store.open_ssa_branch('else')
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 724)
                                    w_2640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 39), 'w')
                                    # Getting the type of 'label' (line 724)
                                    label_2641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'label')
                                    # Obtaining the member '__getitem__' of a type (line 724)
                                    getitem___2642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 33), label_2641, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 724)
                                    subscript_call_result_2643 = invoke(stypy.reporting.localization.Localization(__file__, 724, 33), getitem___2642, w_2640)
                                    
                                    int_2644 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 724, 45), 'int')
                                    # Applying the binary operator '==' (line 724)
                                    result_eq_2645 = python_operator(stypy.reporting.localization.Localization(__file__, 724, 33), '==', subscript_call_result_2643, int_2644)
                                    
                                    # Testing if the type of an if condition is none (line 724)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 724)
                                        if_condition_2646 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 724, 33), result_eq_2645)
                                        # Assigning a type to the variable 'if_condition_2646' (line 724)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 724, 33), 'if_condition_2646', if_condition_2646)
                                        # SSA begins for if statement (line 724)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        # Evaluating assert statement condition
                                        
                                        
                                        # Obtaining the type of the subscript
                                        
                                        # Obtaining the type of the subscript
                                        # Getting the type of 'w' (line 729)
                                        w_2647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 55), 'w')
                                        # Getting the type of 'inblossom' (line 729)
                                        inblossom_2648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 45), 'inblossom')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 45), inblossom_2648, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2650 = invoke(stypy.reporting.localization.Localization(__file__, 729, 45), getitem___2649, w_2647)
                                        
                                        # Getting the type of 'label' (line 729)
                                        label_2651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 39), 'label')
                                        # Obtaining the member '__getitem__' of a type (line 729)
                                        getitem___2652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 39), label_2651, '__getitem__')
                                        # Calling the subscript (__getitem__) to obtain the elements type (line 729)
                                        subscript_call_result_2653 = invoke(stypy.reporting.localization.Localization(__file__, 729, 39), getitem___2652, subscript_call_result_2650)
                                        
                                        int_2654 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 729, 62), 'int')
                                        # Applying the binary operator '==' (line 729)
                                        result_eq_2655 = python_operator(stypy.reporting.localization.Localization(__file__, 729, 39), '==', subscript_call_result_2653, int_2654)
                                        
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        
                                        # Assigning a Num to a Subscript (line 730):
                                        int_2656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 730, 43), 'int')
                                        # Getting the type of 'label' (line 730)
                                        label_2657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 32), 'label')
                                        # Getting the type of 'w' (line 730)
                                        w_2658 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 38), 'w')
                                        # Storing an element on a container (line 730)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 730, 32), label_2657, (w_2658, int_2656))
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        
                                        # Assigning a BinOp to a Subscript (line 731):
                                        # Getting the type of 'p' (line 731)
                                        p_2659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 46), 'p')
                                        int_2660 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 731, 50), 'int')
                                        # Applying the binary operator '^' (line 731)
                                        result_xor_2661 = python_operator(stypy.reporting.localization.Localization(__file__, 731, 46), '^', p_2659, int_2660)
                                        
                                        # Getting the type of 'labelend' (line 731)
                                        labelend_2662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 32), 'labelend')
                                        # Getting the type of 'w' (line 731)
                                        w_2663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 731, 41), 'w')
                                        # Storing an element on a container (line 731)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 731, 32), labelend_2662, (w_2663, result_xor_2661))
                                        # SSA join for if statement (line 724)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA join for if statement (line 709)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                                # SSA join for if statement (line 705)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA branch for the else part of an if statement (line 704)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'w' (line 732)
                            w_2664 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 45), 'w')
                            # Getting the type of 'inblossom' (line 732)
                            inblossom_2665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 35), 'inblossom')
                            # Obtaining the member '__getitem__' of a type (line 732)
                            getitem___2666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 35), inblossom_2665, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 732)
                            subscript_call_result_2667 = invoke(stypy.reporting.localization.Localization(__file__, 732, 35), getitem___2666, w_2664)
                            
                            # Getting the type of 'label' (line 732)
                            label_2668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 732, 29), 'label')
                            # Obtaining the member '__getitem__' of a type (line 732)
                            getitem___2669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 732, 29), label_2668, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 732)
                            subscript_call_result_2670 = invoke(stypy.reporting.localization.Localization(__file__, 732, 29), getitem___2669, subscript_call_result_2667)
                            
                            int_2671 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 732, 52), 'int')
                            # Applying the binary operator '==' (line 732)
                            result_eq_2672 = python_operator(stypy.reporting.localization.Localization(__file__, 732, 29), '==', subscript_call_result_2670, int_2671)
                            
                            # Testing if the type of an if condition is none (line 732)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 732, 29), result_eq_2672):
                                
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'w' (line 738)
                                w_2698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 35), 'w')
                                # Getting the type of 'label' (line 738)
                                label_2699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'label')
                                # Obtaining the member '__getitem__' of a type (line 738)
                                getitem___2700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 29), label_2699, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 738)
                                subscript_call_result_2701 = invoke(stypy.reporting.localization.Localization(__file__, 738, 29), getitem___2700, w_2698)
                                
                                int_2702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 41), 'int')
                                # Applying the binary operator '==' (line 738)
                                result_eq_2703 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 29), '==', subscript_call_result_2701, int_2702)
                                
                                # Testing if the type of an if condition is none (line 738)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703):
                                    pass
                                else:
                                    
                                    # Testing the type of an if condition (line 738)
                                    if_condition_2704 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703)
                                    # Assigning a type to the variable 'if_condition_2704' (line 738)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'if_condition_2704', if_condition_2704)
                                    # SSA begins for if statement (line 738)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Evaluating a boolean operation
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 40), 'w')
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 31), 'bestedge')
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 31), bestedge_2706, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2708 = invoke(stypy.reporting.localization.Localization(__file__, 742, 31), getitem___2707, w_2705)
                                    
                                    int_2709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 46), 'int')
                                    # Applying the binary operator '==' (line 742)
                                    result_eq_2710 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), '==', subscript_call_result_2708, int_2709)
                                    
                                    
                                    # Getting the type of 'kslack' (line 742)
                                    kslack_2711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 52), 'kslack')
                                    
                                    # Call to slack(...): (line 742)
                                    # Processing the call arguments (line 742)
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 76), 'w', False)
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 67), 'bestedge', False)
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 67), bestedge_2714, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2716 = invoke(stypy.reporting.localization.Localization(__file__, 742, 67), getitem___2715, w_2713)
                                    
                                    # Processing the call keyword arguments (line 742)
                                    kwargs_2717 = {}
                                    # Getting the type of 'slack' (line 742)
                                    slack_2712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 61), 'slack', False)
                                    # Calling slack(args, kwargs) (line 742)
                                    slack_call_result_2718 = invoke(stypy.reporting.localization.Localization(__file__, 742, 61), slack_2712, *[subscript_call_result_2716], **kwargs_2717)
                                    
                                    # Applying the binary operator '<' (line 742)
                                    result_lt_2719 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 52), '<', kslack_2711, slack_call_result_2718)
                                    
                                    # Applying the binary operator 'or' (line 742)
                                    result_or_keyword_2720 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), 'or', result_eq_2710, result_lt_2719)
                                    
                                    # Testing if the type of an if condition is none (line 742)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 742)
                                        if_condition_2721 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720)
                                        # Assigning a type to the variable 'if_condition_2721' (line 742)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 28), 'if_condition_2721', if_condition_2721)
                                        # SSA begins for if statement (line 742)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        # Getting the type of 'k' (line 743)
                                        k_2722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 46), 'k')
                                        # Getting the type of 'bestedge' (line 743)
                                        bestedge_2723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 32), 'bestedge')
                                        # Getting the type of 'w' (line 743)
                                        w_2724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 41), 'w')
                                        # Storing an element on a container (line 743)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 32), bestedge_2723, (w_2724, k_2722))
                                        # SSA join for if statement (line 742)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA join for if statement (line 738)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                            else:
                                
                                # Testing the type of an if condition (line 732)
                                if_condition_2673 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 732, 29), result_eq_2672)
                                # Assigning a type to the variable 'if_condition_2673' (line 732)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 732, 29), 'if_condition_2673', if_condition_2673)
                                # SSA begins for if statement (line 732)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Assigning a Subscript to a Name (line 735):
                                
                                # Assigning a Subscript to a Name (line 735):
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'v' (line 735)
                                v_2674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 42), 'v')
                                # Getting the type of 'inblossom' (line 735)
                                inblossom_2675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 32), 'inblossom')
                                # Obtaining the member '__getitem__' of a type (line 735)
                                getitem___2676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 32), inblossom_2675, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 735)
                                subscript_call_result_2677 = invoke(stypy.reporting.localization.Localization(__file__, 735, 32), getitem___2676, v_2674)
                                
                                # Assigning a type to the variable 'b' (line 735)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 28), 'b', subscript_call_result_2677)
                                
                                # Evaluating a boolean operation
                                
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'b' (line 736)
                                b_2678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 40), 'b')
                                # Getting the type of 'bestedge' (line 736)
                                bestedge_2679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 31), 'bestedge')
                                # Obtaining the member '__getitem__' of a type (line 736)
                                getitem___2680 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 31), bestedge_2679, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 736)
                                subscript_call_result_2681 = invoke(stypy.reporting.localization.Localization(__file__, 736, 31), getitem___2680, b_2678)
                                
                                int_2682 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 736, 46), 'int')
                                # Applying the binary operator '==' (line 736)
                                result_eq_2683 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 31), '==', subscript_call_result_2681, int_2682)
                                
                                
                                # Getting the type of 'kslack' (line 736)
                                kslack_2684 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 52), 'kslack')
                                
                                # Call to slack(...): (line 736)
                                # Processing the call arguments (line 736)
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'b' (line 736)
                                b_2686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 76), 'b', False)
                                # Getting the type of 'bestedge' (line 736)
                                bestedge_2687 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 67), 'bestedge', False)
                                # Obtaining the member '__getitem__' of a type (line 736)
                                getitem___2688 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 736, 67), bestedge_2687, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 736)
                                subscript_call_result_2689 = invoke(stypy.reporting.localization.Localization(__file__, 736, 67), getitem___2688, b_2686)
                                
                                # Processing the call keyword arguments (line 736)
                                kwargs_2690 = {}
                                # Getting the type of 'slack' (line 736)
                                slack_2685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 736, 61), 'slack', False)
                                # Calling slack(args, kwargs) (line 736)
                                slack_call_result_2691 = invoke(stypy.reporting.localization.Localization(__file__, 736, 61), slack_2685, *[subscript_call_result_2689], **kwargs_2690)
                                
                                # Applying the binary operator '<' (line 736)
                                result_lt_2692 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 52), '<', kslack_2684, slack_call_result_2691)
                                
                                # Applying the binary operator 'or' (line 736)
                                result_or_keyword_2693 = python_operator(stypy.reporting.localization.Localization(__file__, 736, 31), 'or', result_eq_2683, result_lt_2692)
                                
                                # Testing if the type of an if condition is none (line 736)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 736, 28), result_or_keyword_2693):
                                    pass
                                else:
                                    
                                    # Testing the type of an if condition (line 736)
                                    if_condition_2694 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 736, 28), result_or_keyword_2693)
                                    # Assigning a type to the variable 'if_condition_2694' (line 736)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 736, 28), 'if_condition_2694', if_condition_2694)
                                    # SSA begins for if statement (line 736)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Assigning a Name to a Subscript (line 737):
                                    
                                    # Assigning a Name to a Subscript (line 737):
                                    # Getting the type of 'k' (line 737)
                                    k_2695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 46), 'k')
                                    # Getting the type of 'bestedge' (line 737)
                                    bestedge_2696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 32), 'bestedge')
                                    # Getting the type of 'b' (line 737)
                                    b_2697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 41), 'b')
                                    # Storing an element on a container (line 737)
                                    set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 737, 32), bestedge_2696, (b_2697, k_2695))
                                    # SSA join for if statement (line 736)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                                # SSA branch for the else part of an if statement (line 732)
                                module_type_store.open_ssa_branch('else')
                                
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'w' (line 738)
                                w_2698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 35), 'w')
                                # Getting the type of 'label' (line 738)
                                label_2699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'label')
                                # Obtaining the member '__getitem__' of a type (line 738)
                                getitem___2700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 738, 29), label_2699, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 738)
                                subscript_call_result_2701 = invoke(stypy.reporting.localization.Localization(__file__, 738, 29), getitem___2700, w_2698)
                                
                                int_2702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 738, 41), 'int')
                                # Applying the binary operator '==' (line 738)
                                result_eq_2703 = python_operator(stypy.reporting.localization.Localization(__file__, 738, 29), '==', subscript_call_result_2701, int_2702)
                                
                                # Testing if the type of an if condition is none (line 738)

                                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703):
                                    pass
                                else:
                                    
                                    # Testing the type of an if condition (line 738)
                                    if_condition_2704 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 738, 29), result_eq_2703)
                                    # Assigning a type to the variable 'if_condition_2704' (line 738)
                                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 738, 29), 'if_condition_2704', if_condition_2704)
                                    # SSA begins for if statement (line 738)
                                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                    
                                    # Evaluating a boolean operation
                                    
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 40), 'w')
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 31), 'bestedge')
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 31), bestedge_2706, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2708 = invoke(stypy.reporting.localization.Localization(__file__, 742, 31), getitem___2707, w_2705)
                                    
                                    int_2709 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 742, 46), 'int')
                                    # Applying the binary operator '==' (line 742)
                                    result_eq_2710 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), '==', subscript_call_result_2708, int_2709)
                                    
                                    
                                    # Getting the type of 'kslack' (line 742)
                                    kslack_2711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 52), 'kslack')
                                    
                                    # Call to slack(...): (line 742)
                                    # Processing the call arguments (line 742)
                                    
                                    # Obtaining the type of the subscript
                                    # Getting the type of 'w' (line 742)
                                    w_2713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 76), 'w', False)
                                    # Getting the type of 'bestedge' (line 742)
                                    bestedge_2714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 67), 'bestedge', False)
                                    # Obtaining the member '__getitem__' of a type (line 742)
                                    getitem___2715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 742, 67), bestedge_2714, '__getitem__')
                                    # Calling the subscript (__getitem__) to obtain the elements type (line 742)
                                    subscript_call_result_2716 = invoke(stypy.reporting.localization.Localization(__file__, 742, 67), getitem___2715, w_2713)
                                    
                                    # Processing the call keyword arguments (line 742)
                                    kwargs_2717 = {}
                                    # Getting the type of 'slack' (line 742)
                                    slack_2712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 742, 61), 'slack', False)
                                    # Calling slack(args, kwargs) (line 742)
                                    slack_call_result_2718 = invoke(stypy.reporting.localization.Localization(__file__, 742, 61), slack_2712, *[subscript_call_result_2716], **kwargs_2717)
                                    
                                    # Applying the binary operator '<' (line 742)
                                    result_lt_2719 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 52), '<', kslack_2711, slack_call_result_2718)
                                    
                                    # Applying the binary operator 'or' (line 742)
                                    result_or_keyword_2720 = python_operator(stypy.reporting.localization.Localization(__file__, 742, 31), 'or', result_eq_2710, result_lt_2719)
                                    
                                    # Testing if the type of an if condition is none (line 742)

                                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720):
                                        pass
                                    else:
                                        
                                        # Testing the type of an if condition (line 742)
                                        if_condition_2721 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 742, 28), result_or_keyword_2720)
                                        # Assigning a type to the variable 'if_condition_2721' (line 742)
                                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 28), 'if_condition_2721', if_condition_2721)
                                        # SSA begins for if statement (line 742)
                                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        
                                        # Assigning a Name to a Subscript (line 743):
                                        # Getting the type of 'k' (line 743)
                                        k_2722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 46), 'k')
                                        # Getting the type of 'bestedge' (line 743)
                                        bestedge_2723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 32), 'bestedge')
                                        # Getting the type of 'w' (line 743)
                                        w_2724 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 743, 41), 'w')
                                        # Storing an element on a container (line 743)
                                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 743, 32), bestedge_2723, (w_2724, k_2722))
                                        # SSA join for if statement (line 742)
                                        module_type_store = module_type_store.join_ssa_context()
                                        

                                    # SSA join for if statement (line 738)
                                    module_type_store = module_type_store.join_ssa_context()
                                    

                                # SSA join for if statement (line 732)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 704)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for a for statement
                        module_type_store = module_type_store.join_ssa_context()

                    
                    # SSA join for while statement (line 684)
                    module_type_store = module_type_store.join_ssa_context()

                
                # Getting the type of 'augmented' (line 745)
                augmented_2725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 19), 'augmented')
                # Testing if the type of an if condition is none (line 745)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 745, 16), augmented_2725):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 745)
                    if_condition_2726 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 745, 16), augmented_2725)
                    # Assigning a type to the variable 'if_condition_2726' (line 745)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 16), 'if_condition_2726', if_condition_2726)
                    # SSA begins for if statement (line 745)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    # SSA join for if statement (line 745)
                    module_type_store = module_type_store.join_ssa_context()
                    

                
                # Assigning a Num to a Name (line 752):
                
                # Assigning a Num to a Name (line 752):
                int_2727 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 28), 'int')
                # Assigning a type to the variable 'deltatype' (line 752)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 16), 'deltatype', int_2727)
                # Getting the type of 'CHECK_DELTA' (line 756)
                CHECK_DELTA_2728 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 756, 19), 'CHECK_DELTA')
                # Testing if the type of an if condition is none (line 756)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 756, 16), CHECK_DELTA_2728):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 756)
                    if_condition_2729 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 756, 16), CHECK_DELTA_2728)
                    # Assigning a type to the variable 'if_condition_2729' (line 756)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 756, 16), 'if_condition_2729', if_condition_2729)
                    # SSA begins for if statement (line 756)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to checkDelta2(...): (line 757)
                    # Processing the call keyword arguments (line 757)
                    kwargs_2731 = {}
                    # Getting the type of 'checkDelta2' (line 757)
                    checkDelta2_2730 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 20), 'checkDelta2', False)
                    # Calling checkDelta2(args, kwargs) (line 757)
                    checkDelta2_call_result_2732 = invoke(stypy.reporting.localization.Localization(__file__, 757, 20), checkDelta2_2730, *[], **kwargs_2731)
                    
                    
                    # Call to checkDelta3(...): (line 758)
                    # Processing the call keyword arguments (line 758)
                    kwargs_2734 = {}
                    # Getting the type of 'checkDelta3' (line 758)
                    checkDelta3_2733 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 758, 20), 'checkDelta3', False)
                    # Calling checkDelta3(args, kwargs) (line 758)
                    checkDelta3_call_result_2735 = invoke(stypy.reporting.localization.Localization(__file__, 758, 20), checkDelta3_2733, *[], **kwargs_2734)
                    
                    # SSA join for if statement (line 756)
                    module_type_store = module_type_store.join_ssa_context()
                    

                
                # Getting the type of 'maxcardinality' (line 761)
                maxcardinality_2736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 23), 'maxcardinality')
                # Applying the 'not' unary operator (line 761)
                result_not__2737 = python_operator(stypy.reporting.localization.Localization(__file__, 761, 19), 'not', maxcardinality_2736)
                
                # Testing if the type of an if condition is none (line 761)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 761, 16), result_not__2737):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 761)
                    if_condition_2738 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 761, 16), result_not__2737)
                    # Assigning a type to the variable 'if_condition_2738' (line 761)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 761, 16), 'if_condition_2738', if_condition_2738)
                    # SSA begins for if statement (line 761)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Assigning a Num to a Name (line 762):
                    
                    # Assigning a Num to a Name (line 762):
                    int_2739 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 762, 32), 'int')
                    # Assigning a type to the variable 'deltatype' (line 762)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 762, 20), 'deltatype', int_2739)
                    
                    # Assigning a Call to a Name (line 763):
                    
                    # Assigning a Call to a Name (line 763):
                    
                    # Call to min(...): (line 763)
                    # Processing the call arguments (line 763)
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'nvertex' (line 763)
                    nvertex_2741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 41), 'nvertex', False)
                    slice_2742 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 763, 32), None, nvertex_2741, None)
                    # Getting the type of 'dualvar' (line 763)
                    dualvar_2743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 32), 'dualvar', False)
                    # Obtaining the member '__getitem__' of a type (line 763)
                    getitem___2744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 763, 32), dualvar_2743, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 763)
                    subscript_call_result_2745 = invoke(stypy.reporting.localization.Localization(__file__, 763, 32), getitem___2744, slice_2742)
                    
                    # Processing the call keyword arguments (line 763)
                    kwargs_2746 = {}
                    # Getting the type of 'min' (line 763)
                    min_2740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 763, 28), 'min', False)
                    # Calling min(args, kwargs) (line 763)
                    min_call_result_2747 = invoke(stypy.reporting.localization.Localization(__file__, 763, 28), min_2740, *[subscript_call_result_2745], **kwargs_2746)
                    
                    # Assigning a type to the variable 'delta' (line 763)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 763, 20), 'delta', min_call_result_2747)
                    # SSA join for if statement (line 761)
                    module_type_store = module_type_store.join_ssa_context()
                    

                
                
                # Call to xrange(...): (line 767)
                # Processing the call arguments (line 767)
                # Getting the type of 'nvertex' (line 767)
                nvertex_2749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 32), 'nvertex', False)
                # Processing the call keyword arguments (line 767)
                kwargs_2750 = {}
                # Getting the type of 'xrange' (line 767)
                xrange_2748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 25), 'xrange', False)
                # Calling xrange(args, kwargs) (line 767)
                xrange_call_result_2751 = invoke(stypy.reporting.localization.Localization(__file__, 767, 25), xrange_2748, *[nvertex_2749], **kwargs_2750)
                
                # Testing if the for loop is going to be iterated (line 767)
                # Testing the type of a for loop iterable (line 767)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 767, 16), xrange_call_result_2751)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 767, 16), xrange_call_result_2751):
                    # Getting the type of the for loop variable (line 767)
                    for_loop_var_2752 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 767, 16), xrange_call_result_2751)
                    # Assigning a type to the variable 'v' (line 767)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 16), 'v', for_loop_var_2752)
                    # SSA begins for a for statement (line 767)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Evaluating a boolean operation
                    
                    
                    # Obtaining the type of the subscript
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'v' (line 768)
                    v_2753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 39), 'v')
                    # Getting the type of 'inblossom' (line 768)
                    inblossom_2754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 29), 'inblossom')
                    # Obtaining the member '__getitem__' of a type (line 768)
                    getitem___2755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 29), inblossom_2754, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 768)
                    subscript_call_result_2756 = invoke(stypy.reporting.localization.Localization(__file__, 768, 29), getitem___2755, v_2753)
                    
                    # Getting the type of 'label' (line 768)
                    label_2757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 23), 'label')
                    # Obtaining the member '__getitem__' of a type (line 768)
                    getitem___2758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 23), label_2757, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 768)
                    subscript_call_result_2759 = invoke(stypy.reporting.localization.Localization(__file__, 768, 23), getitem___2758, subscript_call_result_2756)
                    
                    int_2760 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 46), 'int')
                    # Applying the binary operator '==' (line 768)
                    result_eq_2761 = python_operator(stypy.reporting.localization.Localization(__file__, 768, 23), '==', subscript_call_result_2759, int_2760)
                    
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'v' (line 768)
                    v_2762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 61), 'v')
                    # Getting the type of 'bestedge' (line 768)
                    bestedge_2763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 768, 52), 'bestedge')
                    # Obtaining the member '__getitem__' of a type (line 768)
                    getitem___2764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 768, 52), bestedge_2763, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 768)
                    subscript_call_result_2765 = invoke(stypy.reporting.localization.Localization(__file__, 768, 52), getitem___2764, v_2762)
                    
                    int_2766 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 67), 'int')
                    # Applying the binary operator '!=' (line 768)
                    result_ne_2767 = python_operator(stypy.reporting.localization.Localization(__file__, 768, 52), '!=', subscript_call_result_2765, int_2766)
                    
                    # Applying the binary operator 'and' (line 768)
                    result_and_keyword_2768 = python_operator(stypy.reporting.localization.Localization(__file__, 768, 23), 'and', result_eq_2761, result_ne_2767)
                    
                    # Testing if the type of an if condition is none (line 768)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 768, 20), result_and_keyword_2768):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 768)
                        if_condition_2769 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 768, 20), result_and_keyword_2768)
                        # Assigning a type to the variable 'if_condition_2769' (line 768)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 20), 'if_condition_2769', if_condition_2769)
                        # SSA begins for if statement (line 768)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 769):
                        
                        # Assigning a Call to a Name (line 769):
                        
                        # Call to slack(...): (line 769)
                        # Processing the call arguments (line 769)
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'v' (line 769)
                        v_2771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 43), 'v', False)
                        # Getting the type of 'bestedge' (line 769)
                        bestedge_2772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 34), 'bestedge', False)
                        # Obtaining the member '__getitem__' of a type (line 769)
                        getitem___2773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 769, 34), bestedge_2772, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 769)
                        subscript_call_result_2774 = invoke(stypy.reporting.localization.Localization(__file__, 769, 34), getitem___2773, v_2771)
                        
                        # Processing the call keyword arguments (line 769)
                        kwargs_2775 = {}
                        # Getting the type of 'slack' (line 769)
                        slack_2770 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 769, 28), 'slack', False)
                        # Calling slack(args, kwargs) (line 769)
                        slack_call_result_2776 = invoke(stypy.reporting.localization.Localization(__file__, 769, 28), slack_2770, *[subscript_call_result_2774], **kwargs_2775)
                        
                        # Assigning a type to the variable 'd' (line 769)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 769, 24), 'd', slack_call_result_2776)
                        
                        # Evaluating a boolean operation
                        
                        # Getting the type of 'deltatype' (line 770)
                        deltatype_2777 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 27), 'deltatype')
                        int_2778 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 40), 'int')
                        # Applying the binary operator '==' (line 770)
                        result_eq_2779 = python_operator(stypy.reporting.localization.Localization(__file__, 770, 27), '==', deltatype_2777, int_2778)
                        
                        
                        # Getting the type of 'd' (line 770)
                        d_2780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 46), 'd')
                        # Getting the type of 'delta' (line 770)
                        delta_2781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 50), 'delta')
                        # Applying the binary operator '<' (line 770)
                        result_lt_2782 = python_operator(stypy.reporting.localization.Localization(__file__, 770, 46), '<', d_2780, delta_2781)
                        
                        # Applying the binary operator 'or' (line 770)
                        result_or_keyword_2783 = python_operator(stypy.reporting.localization.Localization(__file__, 770, 27), 'or', result_eq_2779, result_lt_2782)
                        
                        # Testing if the type of an if condition is none (line 770)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 770, 24), result_or_keyword_2783):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 770)
                            if_condition_2784 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 770, 24), result_or_keyword_2783)
                            # Assigning a type to the variable 'if_condition_2784' (line 770)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 24), 'if_condition_2784', if_condition_2784)
                            # SSA begins for if statement (line 770)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 771):
                            
                            # Assigning a Name to a Name (line 771):
                            # Getting the type of 'd' (line 771)
                            d_2785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 771, 36), 'd')
                            # Assigning a type to the variable 'delta' (line 771)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 771, 28), 'delta', d_2785)
                            
                            # Assigning a Num to a Name (line 772):
                            
                            # Assigning a Num to a Name (line 772):
                            int_2786 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 772, 40), 'int')
                            # Assigning a type to the variable 'deltatype' (line 772)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 28), 'deltatype', int_2786)
                            
                            # Assigning a Subscript to a Name (line 773):
                            
                            # Assigning a Subscript to a Name (line 773):
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'v' (line 773)
                            v_2787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 49), 'v')
                            # Getting the type of 'bestedge' (line 773)
                            bestedge_2788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 773, 40), 'bestedge')
                            # Obtaining the member '__getitem__' of a type (line 773)
                            getitem___2789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 773, 40), bestedge_2788, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 773)
                            subscript_call_result_2790 = invoke(stypy.reporting.localization.Localization(__file__, 773, 40), getitem___2789, v_2787)
                            
                            # Assigning a type to the variable 'deltaedge' (line 773)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 28), 'deltaedge', subscript_call_result_2790)
                            # SSA join for if statement (line 770)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 768)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                
                
                # Call to xrange(...): (line 777)
                # Processing the call arguments (line 777)
                int_2792 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 777, 32), 'int')
                # Getting the type of 'nvertex' (line 777)
                nvertex_2793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 36), 'nvertex', False)
                # Applying the binary operator '*' (line 777)
                result_mul_2794 = python_operator(stypy.reporting.localization.Localization(__file__, 777, 32), '*', int_2792, nvertex_2793)
                
                # Processing the call keyword arguments (line 777)
                kwargs_2795 = {}
                # Getting the type of 'xrange' (line 777)
                xrange_2791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 25), 'xrange', False)
                # Calling xrange(args, kwargs) (line 777)
                xrange_call_result_2796 = invoke(stypy.reporting.localization.Localization(__file__, 777, 25), xrange_2791, *[result_mul_2794], **kwargs_2795)
                
                # Testing if the for loop is going to be iterated (line 777)
                # Testing the type of a for loop iterable (line 777)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 777, 16), xrange_call_result_2796)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 777, 16), xrange_call_result_2796):
                    # Getting the type of the for loop variable (line 777)
                    for_loop_var_2797 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 777, 16), xrange_call_result_2796)
                    # Assigning a type to the variable 'b' (line 777)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 777, 16), 'b', for_loop_var_2797)
                    # SSA begins for a for statement (line 777)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Evaluating a boolean operation
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 778)
                    b_2798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 38), 'b')
                    # Getting the type of 'blossomparent' (line 778)
                    blossomparent_2799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 24), 'blossomparent')
                    # Obtaining the member '__getitem__' of a type (line 778)
                    getitem___2800 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 24), blossomparent_2799, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 778)
                    subscript_call_result_2801 = invoke(stypy.reporting.localization.Localization(__file__, 778, 24), getitem___2800, b_2798)
                    
                    int_2802 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, 44), 'int')
                    # Applying the binary operator '==' (line 778)
                    result_eq_2803 = python_operator(stypy.reporting.localization.Localization(__file__, 778, 24), '==', subscript_call_result_2801, int_2802)
                    
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 778)
                    b_2804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 57), 'b')
                    # Getting the type of 'label' (line 778)
                    label_2805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 51), 'label')
                    # Obtaining the member '__getitem__' of a type (line 778)
                    getitem___2806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 51), label_2805, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 778)
                    subscript_call_result_2807 = invoke(stypy.reporting.localization.Localization(__file__, 778, 51), getitem___2806, b_2804)
                    
                    int_2808 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 778, 63), 'int')
                    # Applying the binary operator '==' (line 778)
                    result_eq_2809 = python_operator(stypy.reporting.localization.Localization(__file__, 778, 51), '==', subscript_call_result_2807, int_2808)
                    
                    # Applying the binary operator 'and' (line 778)
                    result_and_keyword_2810 = python_operator(stypy.reporting.localization.Localization(__file__, 778, 24), 'and', result_eq_2803, result_eq_2809)
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 779)
                    b_2811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 37), 'b')
                    # Getting the type of 'bestedge' (line 779)
                    bestedge_2812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 28), 'bestedge')
                    # Obtaining the member '__getitem__' of a type (line 779)
                    getitem___2813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 28), bestedge_2812, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 779)
                    subscript_call_result_2814 = invoke(stypy.reporting.localization.Localization(__file__, 779, 28), getitem___2813, b_2811)
                    
                    int_2815 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 43), 'int')
                    # Applying the binary operator '!=' (line 779)
                    result_ne_2816 = python_operator(stypy.reporting.localization.Localization(__file__, 779, 28), '!=', subscript_call_result_2814, int_2815)
                    
                    # Applying the binary operator 'and' (line 778)
                    result_and_keyword_2817 = python_operator(stypy.reporting.localization.Localization(__file__, 778, 24), 'and', result_and_keyword_2810, result_ne_2816)
                    
                    # Testing if the type of an if condition is none (line 778)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 778, 20), result_and_keyword_2817):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 778)
                        if_condition_2818 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 778, 20), result_and_keyword_2817)
                        # Assigning a type to the variable 'if_condition_2818' (line 778)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 20), 'if_condition_2818', if_condition_2818)
                        # SSA begins for if statement (line 778)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Call to a Name (line 780):
                        
                        # Assigning a Call to a Name (line 780):
                        
                        # Call to slack(...): (line 780)
                        # Processing the call arguments (line 780)
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'b' (line 780)
                        b_2820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 48), 'b', False)
                        # Getting the type of 'bestedge' (line 780)
                        bestedge_2821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 39), 'bestedge', False)
                        # Obtaining the member '__getitem__' of a type (line 780)
                        getitem___2822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 780, 39), bestedge_2821, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 780)
                        subscript_call_result_2823 = invoke(stypy.reporting.localization.Localization(__file__, 780, 39), getitem___2822, b_2820)
                        
                        # Processing the call keyword arguments (line 780)
                        kwargs_2824 = {}
                        # Getting the type of 'slack' (line 780)
                        slack_2819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 780, 33), 'slack', False)
                        # Calling slack(args, kwargs) (line 780)
                        slack_call_result_2825 = invoke(stypy.reporting.localization.Localization(__file__, 780, 33), slack_2819, *[subscript_call_result_2823], **kwargs_2824)
                        
                        # Assigning a type to the variable 'kslack' (line 780)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 780, 24), 'kslack', slack_call_result_2825)
                        # Evaluating assert statement condition
                        
                        # Getting the type of 'kslack' (line 782)
                        kslack_2826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 32), 'kslack')
                        int_2827 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 41), 'int')
                        # Applying the binary operator '%' (line 782)
                        result_mod_2828 = python_operator(stypy.reporting.localization.Localization(__file__, 782, 32), '%', kslack_2826, int_2827)
                        
                        int_2829 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 47), 'int')
                        # Applying the binary operator '==' (line 782)
                        result_eq_2830 = python_operator(stypy.reporting.localization.Localization(__file__, 782, 31), '==', result_mod_2828, int_2829)
                        
                        
                        # Assigning a BinOp to a Name (line 783):
                        
                        # Assigning a BinOp to a Name (line 783):
                        # Getting the type of 'kslack' (line 783)
                        kslack_2831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 28), 'kslack')
                        int_2832 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 783, 38), 'int')
                        # Applying the binary operator '//' (line 783)
                        result_floordiv_2833 = python_operator(stypy.reporting.localization.Localization(__file__, 783, 28), '//', kslack_2831, int_2832)
                        
                        # Assigning a type to the variable 'd' (line 783)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 783, 24), 'd', result_floordiv_2833)
                        
                        # Evaluating a boolean operation
                        
                        # Getting the type of 'deltatype' (line 786)
                        deltatype_2834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 27), 'deltatype')
                        int_2835 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 786, 40), 'int')
                        # Applying the binary operator '==' (line 786)
                        result_eq_2836 = python_operator(stypy.reporting.localization.Localization(__file__, 786, 27), '==', deltatype_2834, int_2835)
                        
                        
                        # Getting the type of 'd' (line 786)
                        d_2837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 46), 'd')
                        # Getting the type of 'delta' (line 786)
                        delta_2838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 50), 'delta')
                        # Applying the binary operator '<' (line 786)
                        result_lt_2839 = python_operator(stypy.reporting.localization.Localization(__file__, 786, 46), '<', d_2837, delta_2838)
                        
                        # Applying the binary operator 'or' (line 786)
                        result_or_keyword_2840 = python_operator(stypy.reporting.localization.Localization(__file__, 786, 27), 'or', result_eq_2836, result_lt_2839)
                        
                        # Testing if the type of an if condition is none (line 786)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 786, 24), result_or_keyword_2840):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 786)
                            if_condition_2841 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 786, 24), result_or_keyword_2840)
                            # Assigning a type to the variable 'if_condition_2841' (line 786)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 786, 24), 'if_condition_2841', if_condition_2841)
                            # SSA begins for if statement (line 786)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Name (line 787):
                            
                            # Assigning a Name to a Name (line 787):
                            # Getting the type of 'd' (line 787)
                            d_2842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 787, 36), 'd')
                            # Assigning a type to the variable 'delta' (line 787)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 787, 28), 'delta', d_2842)
                            
                            # Assigning a Num to a Name (line 788):
                            
                            # Assigning a Num to a Name (line 788):
                            int_2843 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 788, 40), 'int')
                            # Assigning a type to the variable 'deltatype' (line 788)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 788, 28), 'deltatype', int_2843)
                            
                            # Assigning a Subscript to a Name (line 789):
                            
                            # Assigning a Subscript to a Name (line 789):
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'b' (line 789)
                            b_2844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 49), 'b')
                            # Getting the type of 'bestedge' (line 789)
                            bestedge_2845 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 789, 40), 'bestedge')
                            # Obtaining the member '__getitem__' of a type (line 789)
                            getitem___2846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 789, 40), bestedge_2845, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 789)
                            subscript_call_result_2847 = invoke(stypy.reporting.localization.Localization(__file__, 789, 40), getitem___2846, b_2844)
                            
                            # Assigning a type to the variable 'deltaedge' (line 789)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 28), 'deltaedge', subscript_call_result_2847)
                            # SSA join for if statement (line 786)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 778)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                
                
                # Call to xrange(...): (line 792)
                # Processing the call arguments (line 792)
                # Getting the type of 'nvertex' (line 792)
                nvertex_2849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 32), 'nvertex', False)
                int_2850 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 792, 41), 'int')
                # Getting the type of 'nvertex' (line 792)
                nvertex_2851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 45), 'nvertex', False)
                # Applying the binary operator '*' (line 792)
                result_mul_2852 = python_operator(stypy.reporting.localization.Localization(__file__, 792, 41), '*', int_2850, nvertex_2851)
                
                # Processing the call keyword arguments (line 792)
                kwargs_2853 = {}
                # Getting the type of 'xrange' (line 792)
                xrange_2848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 792, 25), 'xrange', False)
                # Calling xrange(args, kwargs) (line 792)
                xrange_call_result_2854 = invoke(stypy.reporting.localization.Localization(__file__, 792, 25), xrange_2848, *[nvertex_2849, result_mul_2852], **kwargs_2853)
                
                # Testing if the for loop is going to be iterated (line 792)
                # Testing the type of a for loop iterable (line 792)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 792, 16), xrange_call_result_2854)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 792, 16), xrange_call_result_2854):
                    # Getting the type of the for loop variable (line 792)
                    for_loop_var_2855 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 792, 16), xrange_call_result_2854)
                    # Assigning a type to the variable 'b' (line 792)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 792, 16), 'b', for_loop_var_2855)
                    # SSA begins for a for statement (line 792)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Evaluating a boolean operation
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 793)
                    b_2856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 36), 'b')
                    # Getting the type of 'blossombase' (line 793)
                    blossombase_2857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 24), 'blossombase')
                    # Obtaining the member '__getitem__' of a type (line 793)
                    getitem___2858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 24), blossombase_2857, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 793)
                    subscript_call_result_2859 = invoke(stypy.reporting.localization.Localization(__file__, 793, 24), getitem___2858, b_2856)
                    
                    int_2860 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 42), 'int')
                    # Applying the binary operator '>=' (line 793)
                    result_ge_2861 = python_operator(stypy.reporting.localization.Localization(__file__, 793, 24), '>=', subscript_call_result_2859, int_2860)
                    
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 793)
                    b_2862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 62), 'b')
                    # Getting the type of 'blossomparent' (line 793)
                    blossomparent_2863 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 48), 'blossomparent')
                    # Obtaining the member '__getitem__' of a type (line 793)
                    getitem___2864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 48), blossomparent_2863, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 793)
                    subscript_call_result_2865 = invoke(stypy.reporting.localization.Localization(__file__, 793, 48), getitem___2864, b_2862)
                    
                    int_2866 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 793, 68), 'int')
                    # Applying the binary operator '==' (line 793)
                    result_eq_2867 = python_operator(stypy.reporting.localization.Localization(__file__, 793, 48), '==', subscript_call_result_2865, int_2866)
                    
                    # Applying the binary operator 'and' (line 793)
                    result_and_keyword_2868 = python_operator(stypy.reporting.localization.Localization(__file__, 793, 24), 'and', result_ge_2861, result_eq_2867)
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 794)
                    b_2869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 34), 'b')
                    # Getting the type of 'label' (line 794)
                    label_2870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 28), 'label')
                    # Obtaining the member '__getitem__' of a type (line 794)
                    getitem___2871 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 28), label_2870, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 794)
                    subscript_call_result_2872 = invoke(stypy.reporting.localization.Localization(__file__, 794, 28), getitem___2871, b_2869)
                    
                    int_2873 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 40), 'int')
                    # Applying the binary operator '==' (line 794)
                    result_eq_2874 = python_operator(stypy.reporting.localization.Localization(__file__, 794, 28), '==', subscript_call_result_2872, int_2873)
                    
                    # Applying the binary operator 'and' (line 793)
                    result_and_keyword_2875 = python_operator(stypy.reporting.localization.Localization(__file__, 793, 24), 'and', result_and_keyword_2868, result_eq_2874)
                    
                    # Evaluating a boolean operation
                    
                    # Getting the type of 'deltatype' (line 795)
                    deltatype_2876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 29), 'deltatype')
                    int_2877 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 42), 'int')
                    # Applying the binary operator '==' (line 795)
                    result_eq_2878 = python_operator(stypy.reporting.localization.Localization(__file__, 795, 29), '==', deltatype_2876, int_2877)
                    
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 795)
                    b_2879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 56), 'b')
                    # Getting the type of 'dualvar' (line 795)
                    dualvar_2880 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 48), 'dualvar')
                    # Obtaining the member '__getitem__' of a type (line 795)
                    getitem___2881 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 48), dualvar_2880, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 795)
                    subscript_call_result_2882 = invoke(stypy.reporting.localization.Localization(__file__, 795, 48), getitem___2881, b_2879)
                    
                    # Getting the type of 'delta' (line 795)
                    delta_2883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 61), 'delta')
                    # Applying the binary operator '<' (line 795)
                    result_lt_2884 = python_operator(stypy.reporting.localization.Localization(__file__, 795, 48), '<', subscript_call_result_2882, delta_2883)
                    
                    # Applying the binary operator 'or' (line 795)
                    result_or_keyword_2885 = python_operator(stypy.reporting.localization.Localization(__file__, 795, 29), 'or', result_eq_2878, result_lt_2884)
                    
                    # Applying the binary operator 'and' (line 793)
                    result_and_keyword_2886 = python_operator(stypy.reporting.localization.Localization(__file__, 793, 24), 'and', result_and_keyword_2875, result_or_keyword_2885)
                    
                    # Testing if the type of an if condition is none (line 793)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 793, 20), result_and_keyword_2886):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 793)
                        if_condition_2887 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 793, 20), result_and_keyword_2886)
                        # Assigning a type to the variable 'if_condition_2887' (line 793)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 793, 20), 'if_condition_2887', if_condition_2887)
                        # SSA begins for if statement (line 793)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Subscript to a Name (line 796):
                        
                        # Assigning a Subscript to a Name (line 796):
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'b' (line 796)
                        b_2888 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 40), 'b')
                        # Getting the type of 'dualvar' (line 796)
                        dualvar_2889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 796, 32), 'dualvar')
                        # Obtaining the member '__getitem__' of a type (line 796)
                        getitem___2890 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 796, 32), dualvar_2889, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 796)
                        subscript_call_result_2891 = invoke(stypy.reporting.localization.Localization(__file__, 796, 32), getitem___2890, b_2888)
                        
                        # Assigning a type to the variable 'delta' (line 796)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 796, 24), 'delta', subscript_call_result_2891)
                        
                        # Assigning a Num to a Name (line 797):
                        
                        # Assigning a Num to a Name (line 797):
                        int_2892 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 797, 36), 'int')
                        # Assigning a type to the variable 'deltatype' (line 797)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 24), 'deltatype', int_2892)
                        
                        # Assigning a Name to a Name (line 798):
                        
                        # Assigning a Name to a Name (line 798):
                        # Getting the type of 'b' (line 798)
                        b_2893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 798, 39), 'b')
                        # Assigning a type to the variable 'deltablossom' (line 798)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 24), 'deltablossom', b_2893)
                        # SSA join for if statement (line 793)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                
                # Getting the type of 'deltatype' (line 800)
                deltatype_2894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 19), 'deltatype')
                int_2895 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 800, 32), 'int')
                # Applying the binary operator '==' (line 800)
                result_eq_2896 = python_operator(stypy.reporting.localization.Localization(__file__, 800, 19), '==', deltatype_2894, int_2895)
                
                # Testing if the type of an if condition is none (line 800)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 800, 16), result_eq_2896):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 800)
                    if_condition_2897 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 800, 16), result_eq_2896)
                    # Assigning a type to the variable 'if_condition_2897' (line 800)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 16), 'if_condition_2897', if_condition_2897)
                    # SSA begins for if statement (line 800)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    # Evaluating assert statement condition
                    # Getting the type of 'maxcardinality' (line 804)
                    maxcardinality_2898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 804, 27), 'maxcardinality')
                    
                    # Assigning a Num to a Name (line 805):
                    
                    # Assigning a Num to a Name (line 805):
                    int_2899 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 805, 32), 'int')
                    # Assigning a type to the variable 'deltatype' (line 805)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 20), 'deltatype', int_2899)
                    
                    # Assigning a Call to a Name (line 806):
                    
                    # Assigning a Call to a Name (line 806):
                    
                    # Call to max(...): (line 806)
                    # Processing the call arguments (line 806)
                    int_2901 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 32), 'int')
                    
                    # Call to min(...): (line 806)
                    # Processing the call arguments (line 806)
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'nvertex' (line 806)
                    nvertex_2903 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 48), 'nvertex', False)
                    slice_2904 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 806, 39), None, nvertex_2903, None)
                    # Getting the type of 'dualvar' (line 806)
                    dualvar_2905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 39), 'dualvar', False)
                    # Obtaining the member '__getitem__' of a type (line 806)
                    getitem___2906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 39), dualvar_2905, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 806)
                    subscript_call_result_2907 = invoke(stypy.reporting.localization.Localization(__file__, 806, 39), getitem___2906, slice_2904)
                    
                    # Processing the call keyword arguments (line 806)
                    kwargs_2908 = {}
                    # Getting the type of 'min' (line 806)
                    min_2902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 35), 'min', False)
                    # Calling min(args, kwargs) (line 806)
                    min_call_result_2909 = invoke(stypy.reporting.localization.Localization(__file__, 806, 35), min_2902, *[subscript_call_result_2907], **kwargs_2908)
                    
                    # Processing the call keyword arguments (line 806)
                    kwargs_2910 = {}
                    # Getting the type of 'max' (line 806)
                    max_2900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 28), 'max', False)
                    # Calling max(args, kwargs) (line 806)
                    max_call_result_2911 = invoke(stypy.reporting.localization.Localization(__file__, 806, 28), max_2900, *[int_2901, min_call_result_2909], **kwargs_2910)
                    
                    # Assigning a type to the variable 'delta' (line 806)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 20), 'delta', max_call_result_2911)
                    # SSA join for if statement (line 800)
                    module_type_store = module_type_store.join_ssa_context()
                    

                
                
                # Call to xrange(...): (line 809)
                # Processing the call arguments (line 809)
                # Getting the type of 'nvertex' (line 809)
                nvertex_2913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 32), 'nvertex', False)
                # Processing the call keyword arguments (line 809)
                kwargs_2914 = {}
                # Getting the type of 'xrange' (line 809)
                xrange_2912 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 25), 'xrange', False)
                # Calling xrange(args, kwargs) (line 809)
                xrange_call_result_2915 = invoke(stypy.reporting.localization.Localization(__file__, 809, 25), xrange_2912, *[nvertex_2913], **kwargs_2914)
                
                # Testing if the for loop is going to be iterated (line 809)
                # Testing the type of a for loop iterable (line 809)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 809, 16), xrange_call_result_2915)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 809, 16), xrange_call_result_2915):
                    # Getting the type of the for loop variable (line 809)
                    for_loop_var_2916 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 809, 16), xrange_call_result_2915)
                    # Assigning a type to the variable 'v' (line 809)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 809, 16), 'v', for_loop_var_2916)
                    # SSA begins for a for statement (line 809)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    
                    # Obtaining the type of the subscript
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'v' (line 810)
                    v_2917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 39), 'v')
                    # Getting the type of 'inblossom' (line 810)
                    inblossom_2918 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 29), 'inblossom')
                    # Obtaining the member '__getitem__' of a type (line 810)
                    getitem___2919 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 29), inblossom_2918, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 810)
                    subscript_call_result_2920 = invoke(stypy.reporting.localization.Localization(__file__, 810, 29), getitem___2919, v_2917)
                    
                    # Getting the type of 'label' (line 810)
                    label_2921 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 23), 'label')
                    # Obtaining the member '__getitem__' of a type (line 810)
                    getitem___2922 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 810, 23), label_2921, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 810)
                    subscript_call_result_2923 = invoke(stypy.reporting.localization.Localization(__file__, 810, 23), getitem___2922, subscript_call_result_2920)
                    
                    int_2924 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 810, 46), 'int')
                    # Applying the binary operator '==' (line 810)
                    result_eq_2925 = python_operator(stypy.reporting.localization.Localization(__file__, 810, 23), '==', subscript_call_result_2923, int_2924)
                    
                    # Testing if the type of an if condition is none (line 810)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 810, 20), result_eq_2925):
                        
                        
                        # Obtaining the type of the subscript
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'v' (line 813)
                        v_2936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 41), 'v')
                        # Getting the type of 'inblossom' (line 813)
                        inblossom_2937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 31), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 813)
                        getitem___2938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 31), inblossom_2937, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 813)
                        subscript_call_result_2939 = invoke(stypy.reporting.localization.Localization(__file__, 813, 31), getitem___2938, v_2936)
                        
                        # Getting the type of 'label' (line 813)
                        label_2940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 25), 'label')
                        # Obtaining the member '__getitem__' of a type (line 813)
                        getitem___2941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 25), label_2940, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 813)
                        subscript_call_result_2942 = invoke(stypy.reporting.localization.Localization(__file__, 813, 25), getitem___2941, subscript_call_result_2939)
                        
                        int_2943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 48), 'int')
                        # Applying the binary operator '==' (line 813)
                        result_eq_2944 = python_operator(stypy.reporting.localization.Localization(__file__, 813, 25), '==', subscript_call_result_2942, int_2943)
                        
                        # Testing if the type of an if condition is none (line 813)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 813, 25), result_eq_2944):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 813)
                            if_condition_2945 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 813, 25), result_eq_2944)
                            # Assigning a type to the variable 'if_condition_2945' (line 813)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 813, 25), 'if_condition_2945', if_condition_2945)
                            # SSA begins for if statement (line 813)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'dualvar' (line 815)
                            dualvar_2946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 24), 'dualvar')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'v' (line 815)
                            v_2947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 32), 'v')
                            # Getting the type of 'dualvar' (line 815)
                            dualvar_2948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 24), 'dualvar')
                            # Obtaining the member '__getitem__' of a type (line 815)
                            getitem___2949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 815, 24), dualvar_2948, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 815)
                            subscript_call_result_2950 = invoke(stypy.reporting.localization.Localization(__file__, 815, 24), getitem___2949, v_2947)
                            
                            # Getting the type of 'delta' (line 815)
                            delta_2951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 38), 'delta')
                            # Applying the binary operator '+=' (line 815)
                            result_iadd_2952 = python_operator(stypy.reporting.localization.Localization(__file__, 815, 24), '+=', subscript_call_result_2950, delta_2951)
                            # Getting the type of 'dualvar' (line 815)
                            dualvar_2953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 24), 'dualvar')
                            # Getting the type of 'v' (line 815)
                            v_2954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 32), 'v')
                            # Storing an element on a container (line 815)
                            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 24), dualvar_2953, (v_2954, result_iadd_2952))
                            
                            # SSA join for if statement (line 813)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 810)
                        if_condition_2926 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 810, 20), result_eq_2925)
                        # Assigning a type to the variable 'if_condition_2926' (line 810)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 810, 20), 'if_condition_2926', if_condition_2926)
                        # SSA begins for if statement (line 810)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Getting the type of 'dualvar' (line 812)
                        dualvar_2927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 24), 'dualvar')
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'v' (line 812)
                        v_2928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 32), 'v')
                        # Getting the type of 'dualvar' (line 812)
                        dualvar_2929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 24), 'dualvar')
                        # Obtaining the member '__getitem__' of a type (line 812)
                        getitem___2930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 812, 24), dualvar_2929, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 812)
                        subscript_call_result_2931 = invoke(stypy.reporting.localization.Localization(__file__, 812, 24), getitem___2930, v_2928)
                        
                        # Getting the type of 'delta' (line 812)
                        delta_2932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 38), 'delta')
                        # Applying the binary operator '-=' (line 812)
                        result_isub_2933 = python_operator(stypy.reporting.localization.Localization(__file__, 812, 24), '-=', subscript_call_result_2931, delta_2932)
                        # Getting the type of 'dualvar' (line 812)
                        dualvar_2934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 24), 'dualvar')
                        # Getting the type of 'v' (line 812)
                        v_2935 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 812, 32), 'v')
                        # Storing an element on a container (line 812)
                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 812, 24), dualvar_2934, (v_2935, result_isub_2933))
                        
                        # SSA branch for the else part of an if statement (line 810)
                        module_type_store.open_ssa_branch('else')
                        
                        
                        # Obtaining the type of the subscript
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'v' (line 813)
                        v_2936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 41), 'v')
                        # Getting the type of 'inblossom' (line 813)
                        inblossom_2937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 31), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 813)
                        getitem___2938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 31), inblossom_2937, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 813)
                        subscript_call_result_2939 = invoke(stypy.reporting.localization.Localization(__file__, 813, 31), getitem___2938, v_2936)
                        
                        # Getting the type of 'label' (line 813)
                        label_2940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 25), 'label')
                        # Obtaining the member '__getitem__' of a type (line 813)
                        getitem___2941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 25), label_2940, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 813)
                        subscript_call_result_2942 = invoke(stypy.reporting.localization.Localization(__file__, 813, 25), getitem___2941, subscript_call_result_2939)
                        
                        int_2943 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 813, 48), 'int')
                        # Applying the binary operator '==' (line 813)
                        result_eq_2944 = python_operator(stypy.reporting.localization.Localization(__file__, 813, 25), '==', subscript_call_result_2942, int_2943)
                        
                        # Testing if the type of an if condition is none (line 813)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 813, 25), result_eq_2944):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 813)
                            if_condition_2945 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 813, 25), result_eq_2944)
                            # Assigning a type to the variable 'if_condition_2945' (line 813)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 813, 25), 'if_condition_2945', if_condition_2945)
                            # SSA begins for if statement (line 813)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'dualvar' (line 815)
                            dualvar_2946 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 24), 'dualvar')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'v' (line 815)
                            v_2947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 32), 'v')
                            # Getting the type of 'dualvar' (line 815)
                            dualvar_2948 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 24), 'dualvar')
                            # Obtaining the member '__getitem__' of a type (line 815)
                            getitem___2949 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 815, 24), dualvar_2948, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 815)
                            subscript_call_result_2950 = invoke(stypy.reporting.localization.Localization(__file__, 815, 24), getitem___2949, v_2947)
                            
                            # Getting the type of 'delta' (line 815)
                            delta_2951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 38), 'delta')
                            # Applying the binary operator '+=' (line 815)
                            result_iadd_2952 = python_operator(stypy.reporting.localization.Localization(__file__, 815, 24), '+=', subscript_call_result_2950, delta_2951)
                            # Getting the type of 'dualvar' (line 815)
                            dualvar_2953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 24), 'dualvar')
                            # Getting the type of 'v' (line 815)
                            v_2954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 815, 32), 'v')
                            # Storing an element on a container (line 815)
                            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 815, 24), dualvar_2953, (v_2954, result_iadd_2952))
                            
                            # SSA join for if statement (line 813)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 810)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                
                
                # Call to xrange(...): (line 816)
                # Processing the call arguments (line 816)
                # Getting the type of 'nvertex' (line 816)
                nvertex_2956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 32), 'nvertex', False)
                int_2957 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 816, 41), 'int')
                # Getting the type of 'nvertex' (line 816)
                nvertex_2958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 45), 'nvertex', False)
                # Applying the binary operator '*' (line 816)
                result_mul_2959 = python_operator(stypy.reporting.localization.Localization(__file__, 816, 41), '*', int_2957, nvertex_2958)
                
                # Processing the call keyword arguments (line 816)
                kwargs_2960 = {}
                # Getting the type of 'xrange' (line 816)
                xrange_2955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 816, 25), 'xrange', False)
                # Calling xrange(args, kwargs) (line 816)
                xrange_call_result_2961 = invoke(stypy.reporting.localization.Localization(__file__, 816, 25), xrange_2955, *[nvertex_2956, result_mul_2959], **kwargs_2960)
                
                # Testing if the for loop is going to be iterated (line 816)
                # Testing the type of a for loop iterable (line 816)
                is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 816, 16), xrange_call_result_2961)

                if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 816, 16), xrange_call_result_2961):
                    # Getting the type of the for loop variable (line 816)
                    for_loop_var_2962 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 816, 16), xrange_call_result_2961)
                    # Assigning a type to the variable 'b' (line 816)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 816, 16), 'b', for_loop_var_2962)
                    # SSA begins for a for statement (line 816)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                    
                    # Evaluating a boolean operation
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 817)
                    b_2963 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 35), 'b')
                    # Getting the type of 'blossombase' (line 817)
                    blossombase_2964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 23), 'blossombase')
                    # Obtaining the member '__getitem__' of a type (line 817)
                    getitem___2965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 23), blossombase_2964, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 817)
                    subscript_call_result_2966 = invoke(stypy.reporting.localization.Localization(__file__, 817, 23), getitem___2965, b_2963)
                    
                    int_2967 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 41), 'int')
                    # Applying the binary operator '>=' (line 817)
                    result_ge_2968 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 23), '>=', subscript_call_result_2966, int_2967)
                    
                    
                    
                    # Obtaining the type of the subscript
                    # Getting the type of 'b' (line 817)
                    b_2969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 61), 'b')
                    # Getting the type of 'blossomparent' (line 817)
                    blossomparent_2970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 817, 47), 'blossomparent')
                    # Obtaining the member '__getitem__' of a type (line 817)
                    getitem___2971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 817, 47), blossomparent_2970, '__getitem__')
                    # Calling the subscript (__getitem__) to obtain the elements type (line 817)
                    subscript_call_result_2972 = invoke(stypy.reporting.localization.Localization(__file__, 817, 47), getitem___2971, b_2969)
                    
                    int_2973 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 817, 67), 'int')
                    # Applying the binary operator '==' (line 817)
                    result_eq_2974 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 47), '==', subscript_call_result_2972, int_2973)
                    
                    # Applying the binary operator 'and' (line 817)
                    result_and_keyword_2975 = python_operator(stypy.reporting.localization.Localization(__file__, 817, 23), 'and', result_ge_2968, result_eq_2974)
                    
                    # Testing if the type of an if condition is none (line 817)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 817, 20), result_and_keyword_2975):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 817)
                        if_condition_2976 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 817, 20), result_and_keyword_2975)
                        # Assigning a type to the variable 'if_condition_2976' (line 817)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 817, 20), 'if_condition_2976', if_condition_2976)
                        # SSA begins for if statement (line 817)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'b' (line 818)
                        b_2977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 33), 'b')
                        # Getting the type of 'label' (line 818)
                        label_2978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 27), 'label')
                        # Obtaining the member '__getitem__' of a type (line 818)
                        getitem___2979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 818, 27), label_2978, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 818)
                        subscript_call_result_2980 = invoke(stypy.reporting.localization.Localization(__file__, 818, 27), getitem___2979, b_2977)
                        
                        int_2981 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 818, 39), 'int')
                        # Applying the binary operator '==' (line 818)
                        result_eq_2982 = python_operator(stypy.reporting.localization.Localization(__file__, 818, 27), '==', subscript_call_result_2980, int_2981)
                        
                        # Testing if the type of an if condition is none (line 818)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 818, 24), result_eq_2982):
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'b' (line 821)
                            b_2993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 35), 'b')
                            # Getting the type of 'label' (line 821)
                            label_2994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 29), 'label')
                            # Obtaining the member '__getitem__' of a type (line 821)
                            getitem___2995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 29), label_2994, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 821)
                            subscript_call_result_2996 = invoke(stypy.reporting.localization.Localization(__file__, 821, 29), getitem___2995, b_2993)
                            
                            int_2997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 41), 'int')
                            # Applying the binary operator '==' (line 821)
                            result_eq_2998 = python_operator(stypy.reporting.localization.Localization(__file__, 821, 29), '==', subscript_call_result_2996, int_2997)
                            
                            # Testing if the type of an if condition is none (line 821)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 821, 29), result_eq_2998):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 821)
                                if_condition_2999 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 821, 29), result_eq_2998)
                                # Assigning a type to the variable 'if_condition_2999' (line 821)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 29), 'if_condition_2999', if_condition_2999)
                                # SSA begins for if statement (line 821)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'dualvar' (line 823)
                                dualvar_3000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 28), 'dualvar')
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'b' (line 823)
                                b_3001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 36), 'b')
                                # Getting the type of 'dualvar' (line 823)
                                dualvar_3002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 28), 'dualvar')
                                # Obtaining the member '__getitem__' of a type (line 823)
                                getitem___3003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 28), dualvar_3002, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 823)
                                subscript_call_result_3004 = invoke(stypy.reporting.localization.Localization(__file__, 823, 28), getitem___3003, b_3001)
                                
                                # Getting the type of 'delta' (line 823)
                                delta_3005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 42), 'delta')
                                # Applying the binary operator '-=' (line 823)
                                result_isub_3006 = python_operator(stypy.reporting.localization.Localization(__file__, 823, 28), '-=', subscript_call_result_3004, delta_3005)
                                # Getting the type of 'dualvar' (line 823)
                                dualvar_3007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 28), 'dualvar')
                                # Getting the type of 'b' (line 823)
                                b_3008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 36), 'b')
                                # Storing an element on a container (line 823)
                                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 823, 28), dualvar_3007, (b_3008, result_isub_3006))
                                
                                # SSA join for if statement (line 821)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 818)
                            if_condition_2983 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 818, 24), result_eq_2982)
                            # Assigning a type to the variable 'if_condition_2983' (line 818)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 818, 24), 'if_condition_2983', if_condition_2983)
                            # SSA begins for if statement (line 818)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Getting the type of 'dualvar' (line 820)
                            dualvar_2984 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 28), 'dualvar')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'b' (line 820)
                            b_2985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 36), 'b')
                            # Getting the type of 'dualvar' (line 820)
                            dualvar_2986 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 28), 'dualvar')
                            # Obtaining the member '__getitem__' of a type (line 820)
                            getitem___2987 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 820, 28), dualvar_2986, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 820)
                            subscript_call_result_2988 = invoke(stypy.reporting.localization.Localization(__file__, 820, 28), getitem___2987, b_2985)
                            
                            # Getting the type of 'delta' (line 820)
                            delta_2989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 42), 'delta')
                            # Applying the binary operator '+=' (line 820)
                            result_iadd_2990 = python_operator(stypy.reporting.localization.Localization(__file__, 820, 28), '+=', subscript_call_result_2988, delta_2989)
                            # Getting the type of 'dualvar' (line 820)
                            dualvar_2991 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 28), 'dualvar')
                            # Getting the type of 'b' (line 820)
                            b_2992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 820, 36), 'b')
                            # Storing an element on a container (line 820)
                            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 820, 28), dualvar_2991, (b_2992, result_iadd_2990))
                            
                            # SSA branch for the else part of an if statement (line 818)
                            module_type_store.open_ssa_branch('else')
                            
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'b' (line 821)
                            b_2993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 35), 'b')
                            # Getting the type of 'label' (line 821)
                            label_2994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 29), 'label')
                            # Obtaining the member '__getitem__' of a type (line 821)
                            getitem___2995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 29), label_2994, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 821)
                            subscript_call_result_2996 = invoke(stypy.reporting.localization.Localization(__file__, 821, 29), getitem___2995, b_2993)
                            
                            int_2997 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 821, 41), 'int')
                            # Applying the binary operator '==' (line 821)
                            result_eq_2998 = python_operator(stypy.reporting.localization.Localization(__file__, 821, 29), '==', subscript_call_result_2996, int_2997)
                            
                            # Testing if the type of an if condition is none (line 821)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 821, 29), result_eq_2998):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 821)
                                if_condition_2999 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 821, 29), result_eq_2998)
                                # Assigning a type to the variable 'if_condition_2999' (line 821)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 29), 'if_condition_2999', if_condition_2999)
                                # SSA begins for if statement (line 821)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Getting the type of 'dualvar' (line 823)
                                dualvar_3000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 28), 'dualvar')
                                
                                # Obtaining the type of the subscript
                                # Getting the type of 'b' (line 823)
                                b_3001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 36), 'b')
                                # Getting the type of 'dualvar' (line 823)
                                dualvar_3002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 28), 'dualvar')
                                # Obtaining the member '__getitem__' of a type (line 823)
                                getitem___3003 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 28), dualvar_3002, '__getitem__')
                                # Calling the subscript (__getitem__) to obtain the elements type (line 823)
                                subscript_call_result_3004 = invoke(stypy.reporting.localization.Localization(__file__, 823, 28), getitem___3003, b_3001)
                                
                                # Getting the type of 'delta' (line 823)
                                delta_3005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 42), 'delta')
                                # Applying the binary operator '-=' (line 823)
                                result_isub_3006 = python_operator(stypy.reporting.localization.Localization(__file__, 823, 28), '-=', subscript_call_result_3004, delta_3005)
                                # Getting the type of 'dualvar' (line 823)
                                dualvar_3007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 28), 'dualvar')
                                # Getting the type of 'b' (line 823)
                                b_3008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 36), 'b')
                                # Storing an element on a container (line 823)
                                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 823, 28), dualvar_3007, (b_3008, result_isub_3006))
                                
                                # SSA join for if statement (line 821)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 818)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 817)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for a for statement
                    module_type_store = module_type_store.join_ssa_context()

                
                # Getting the type of 'DEBUG' (line 826)
                DEBUG_3009 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 19), 'DEBUG')
                # Testing if the type of an if condition is none (line 826)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 826, 16), DEBUG_3009):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 826)
                    if_condition_3010 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 826, 16), DEBUG_3009)
                    # Assigning a type to the variable 'if_condition_3010' (line 826)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 826, 16), 'if_condition_3010', if_condition_3010)
                    # SSA begins for if statement (line 826)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to DEBUG(...): (line 826)
                    # Processing the call arguments (line 826)
                    str_3012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 32), 'str', 'delta%d=%f')
                    
                    # Obtaining an instance of the builtin type 'tuple' (line 826)
                    tuple_3013 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 826, 48), 'tuple')
                    # Adding type elements to the builtin type 'tuple' instance (line 826)
                    # Adding element type (line 826)
                    # Getting the type of 'deltatype' (line 826)
                    deltatype_3014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 48), 'deltatype', False)
                    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 48), tuple_3013, deltatype_3014)
                    # Adding element type (line 826)
                    # Getting the type of 'delta' (line 826)
                    delta_3015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 59), 'delta', False)
                    add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 826, 48), tuple_3013, delta_3015)
                    
                    # Applying the binary operator '%' (line 826)
                    result_mod_3016 = python_operator(stypy.reporting.localization.Localization(__file__, 826, 32), '%', str_3012, tuple_3013)
                    
                    # Processing the call keyword arguments (line 826)
                    kwargs_3017 = {}
                    # Getting the type of 'DEBUG' (line 826)
                    DEBUG_3011 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 826, 26), 'DEBUG', False)
                    # Calling DEBUG(args, kwargs) (line 826)
                    DEBUG_call_result_3018 = invoke(stypy.reporting.localization.Localization(__file__, 826, 26), DEBUG_3011, *[result_mod_3016], **kwargs_3017)
                    
                    # SSA join for if statement (line 826)
                    module_type_store = module_type_store.join_ssa_context()
                    

                
                # Getting the type of 'deltatype' (line 827)
                deltatype_3019 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 19), 'deltatype')
                int_3020 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 827, 32), 'int')
                # Applying the binary operator '==' (line 827)
                result_eq_3021 = python_operator(stypy.reporting.localization.Localization(__file__, 827, 19), '==', deltatype_3019, int_3020)
                
                # Testing if the type of an if condition is none (line 827)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 827, 16), result_eq_3021):
                    
                    # Getting the type of 'deltatype' (line 830)
                    deltatype_3023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 21), 'deltatype')
                    int_3024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 34), 'int')
                    # Applying the binary operator '==' (line 830)
                    result_eq_3025 = python_operator(stypy.reporting.localization.Localization(__file__, 830, 21), '==', deltatype_3023, int_3024)
                    
                    # Testing if the type of an if condition is none (line 830)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 830, 21), result_eq_3025):
                        
                        # Getting the type of 'deltatype' (line 838)
                        deltatype_3082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'deltatype')
                        int_3083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 34), 'int')
                        # Applying the binary operator '==' (line 838)
                        result_eq_3084 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 21), '==', deltatype_3082, int_3083)
                        
                        # Testing if the type of an if condition is none (line 838)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084):
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 838)
                            if_condition_3085 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084)
                            # Assigning a type to the variable 'if_condition_3085' (line 838)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'if_condition_3085', if_condition_3085)
                            # SSA begins for if statement (line 838)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Subscript (line 840):
                            
                            # Assigning a Name to a Subscript (line 840):
                            # Getting the type of 'True' (line 840)
                            True_3086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 43), 'True')
                            # Getting the type of 'allowedge' (line 840)
                            allowedge_3087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 20), 'allowedge')
                            # Getting the type of 'deltaedge' (line 840)
                            deltaedge_3088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 30), 'deltaedge')
                            # Storing an element on a container (line 840)
                            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 20), allowedge_3087, (deltaedge_3088, True_3086))
                            
                            # Assigning a Subscript to a Tuple (line 841):
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3091, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3093 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3092, deltaedge_3090)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3093, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3095 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3094, int_3089)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_31' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31', subscript_call_result_3095)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3098, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3100 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3099, deltaedge_3097)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3100, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3102 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3101, int_3096)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_32' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32', subscript_call_result_3102)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3105, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3107 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3106, deltaedge_3104)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3107, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3109 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3108, int_3103)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_33' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33', subscript_call_result_3109)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_31' (line 841)
                            tuple_var_assignment_31_3110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31')
                            # Assigning a type to the variable 'i' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 21), 'i', tuple_var_assignment_31_3110)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_32' (line 841)
                            tuple_var_assignment_32_3111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32')
                            # Assigning a type to the variable 'j' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 24), 'j', tuple_var_assignment_32_3111)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_33' (line 841)
                            tuple_var_assignment_33_3112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33')
                            # Assigning a type to the variable 'wt' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 27), 'wt', tuple_var_assignment_33_3112)
                            # Evaluating assert statement condition
                            
                            
                            # Obtaining the type of the subscript
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'i' (line 842)
                            i_3113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 43), 'i')
                            # Getting the type of 'inblossom' (line 842)
                            inblossom_3114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 33), 'inblossom')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 33), inblossom_3114, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3116 = invoke(stypy.reporting.localization.Localization(__file__, 842, 33), getitem___3115, i_3113)
                            
                            # Getting the type of 'label' (line 842)
                            label_3117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 27), 'label')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 27), label_3117, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3119 = invoke(stypy.reporting.localization.Localization(__file__, 842, 27), getitem___3118, subscript_call_result_3116)
                            
                            int_3120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 50), 'int')
                            # Applying the binary operator '==' (line 842)
                            result_eq_3121 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 27), '==', subscript_call_result_3119, int_3120)
                            
                            
                            # Call to append(...): (line 843)
                            # Processing the call arguments (line 843)
                            # Getting the type of 'i' (line 843)
                            i_3124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 33), 'i', False)
                            # Processing the call keyword arguments (line 843)
                            kwargs_3125 = {}
                            # Getting the type of 'queue' (line 843)
                            queue_3122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 20), 'queue', False)
                            # Obtaining the member 'append' of a type (line 843)
                            append_3123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 20), queue_3122, 'append')
                            # Calling append(args, kwargs) (line 843)
                            append_call_result_3126 = invoke(stypy.reporting.localization.Localization(__file__, 843, 20), append_3123, *[i_3124], **kwargs_3125)
                            
                            # SSA branch for the else part of an if statement (line 838)
                            module_type_store.open_ssa_branch('else')
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 838)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 830)
                        if_condition_3026 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 830, 21), result_eq_3025)
                        # Assigning a type to the variable 'if_condition_3026' (line 830)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 21), 'if_condition_3026', if_condition_3026)
                        # SSA begins for if statement (line 830)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Name to a Subscript (line 832):
                        
                        # Assigning a Name to a Subscript (line 832):
                        # Getting the type of 'True' (line 832)
                        True_3027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 43), 'True')
                        # Getting the type of 'allowedge' (line 832)
                        allowedge_3028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 20), 'allowedge')
                        # Getting the type of 'deltaedge' (line 832)
                        deltaedge_3029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 30), 'deltaedge')
                        # Storing an element on a container (line 832)
                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 20), allowedge_3028, (deltaedge_3029, True_3027))
                        
                        # Assigning a Subscript to a Tuple (line 833):
                        
                        # Assigning a Subscript to a Name (line 833):
                        
                        # Obtaining the type of the subscript
                        int_3030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 20), 'int')
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'deltaedge' (line 833)
                        deltaedge_3031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 39), 'deltaedge')
                        # Getting the type of 'edges' (line 833)
                        edges_3032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 33), 'edges')
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 33), edges_3032, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3034 = invoke(stypy.reporting.localization.Localization(__file__, 833, 33), getitem___3033, deltaedge_3031)
                        
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 20), subscript_call_result_3034, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3036 = invoke(stypy.reporting.localization.Localization(__file__, 833, 20), getitem___3035, int_3030)
                        
                        # Assigning a type to the variable 'tuple_var_assignment_26' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_26', subscript_call_result_3036)
                        
                        # Assigning a Subscript to a Name (line 833):
                        
                        # Obtaining the type of the subscript
                        int_3037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 20), 'int')
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'deltaedge' (line 833)
                        deltaedge_3038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 39), 'deltaedge')
                        # Getting the type of 'edges' (line 833)
                        edges_3039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 33), 'edges')
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 33), edges_3039, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3041 = invoke(stypy.reporting.localization.Localization(__file__, 833, 33), getitem___3040, deltaedge_3038)
                        
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 20), subscript_call_result_3041, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3043 = invoke(stypy.reporting.localization.Localization(__file__, 833, 20), getitem___3042, int_3037)
                        
                        # Assigning a type to the variable 'tuple_var_assignment_27' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_27', subscript_call_result_3043)
                        
                        # Assigning a Subscript to a Name (line 833):
                        
                        # Obtaining the type of the subscript
                        int_3044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 20), 'int')
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'deltaedge' (line 833)
                        deltaedge_3045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 39), 'deltaedge')
                        # Getting the type of 'edges' (line 833)
                        edges_3046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 33), 'edges')
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 33), edges_3046, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3048 = invoke(stypy.reporting.localization.Localization(__file__, 833, 33), getitem___3047, deltaedge_3045)
                        
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 20), subscript_call_result_3048, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3050 = invoke(stypy.reporting.localization.Localization(__file__, 833, 20), getitem___3049, int_3044)
                        
                        # Assigning a type to the variable 'tuple_var_assignment_28' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_28', subscript_call_result_3050)
                        
                        # Assigning a Name to a Name (line 833):
                        # Getting the type of 'tuple_var_assignment_26' (line 833)
                        tuple_var_assignment_26_3051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_26')
                        # Assigning a type to the variable 'i' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 21), 'i', tuple_var_assignment_26_3051)
                        
                        # Assigning a Name to a Name (line 833):
                        # Getting the type of 'tuple_var_assignment_27' (line 833)
                        tuple_var_assignment_27_3052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_27')
                        # Assigning a type to the variable 'j' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 24), 'j', tuple_var_assignment_27_3052)
                        
                        # Assigning a Name to a Name (line 833):
                        # Getting the type of 'tuple_var_assignment_28' (line 833)
                        tuple_var_assignment_28_3053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_28')
                        # Assigning a type to the variable 'wt' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 27), 'wt', tuple_var_assignment_28_3053)
                        
                        
                        # Obtaining the type of the subscript
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'i' (line 834)
                        i_3054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 39), 'i')
                        # Getting the type of 'inblossom' (line 834)
                        inblossom_3055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 29), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 834)
                        getitem___3056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 29), inblossom_3055, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 834)
                        subscript_call_result_3057 = invoke(stypy.reporting.localization.Localization(__file__, 834, 29), getitem___3056, i_3054)
                        
                        # Getting the type of 'label' (line 834)
                        label_3058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 23), 'label')
                        # Obtaining the member '__getitem__' of a type (line 834)
                        getitem___3059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 23), label_3058, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 834)
                        subscript_call_result_3060 = invoke(stypy.reporting.localization.Localization(__file__, 834, 23), getitem___3059, subscript_call_result_3057)
                        
                        int_3061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 46), 'int')
                        # Applying the binary operator '==' (line 834)
                        result_eq_3062 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 23), '==', subscript_call_result_3060, int_3061)
                        
                        # Testing if the type of an if condition is none (line 834)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 834, 20), result_eq_3062):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 834)
                            if_condition_3063 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 834, 20), result_eq_3062)
                            # Assigning a type to the variable 'if_condition_3063' (line 834)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 20), 'if_condition_3063', if_condition_3063)
                            # SSA begins for if statement (line 834)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Tuple to a Tuple (line 835):
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'j' (line 835)
                            j_3064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 31), 'j')
                            # Assigning a type to the variable 'tuple_assignment_29' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_29', j_3064)
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'i' (line 835)
                            i_3065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 34), 'i')
                            # Assigning a type to the variable 'tuple_assignment_30' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_30', i_3065)
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'tuple_assignment_29' (line 835)
                            tuple_assignment_29_3066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_29')
                            # Assigning a type to the variable 'i' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'i', tuple_assignment_29_3066)
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'tuple_assignment_30' (line 835)
                            tuple_assignment_30_3067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_30')
                            # Assigning a type to the variable 'j' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 27), 'j', tuple_assignment_30_3067)
                            # SSA join for if statement (line 834)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # Evaluating assert statement condition
                        
                        
                        # Obtaining the type of the subscript
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'i' (line 836)
                        i_3068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 43), 'i')
                        # Getting the type of 'inblossom' (line 836)
                        inblossom_3069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 33), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 836)
                        getitem___3070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 33), inblossom_3069, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 836)
                        subscript_call_result_3071 = invoke(stypy.reporting.localization.Localization(__file__, 836, 33), getitem___3070, i_3068)
                        
                        # Getting the type of 'label' (line 836)
                        label_3072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 27), 'label')
                        # Obtaining the member '__getitem__' of a type (line 836)
                        getitem___3073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 27), label_3072, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 836)
                        subscript_call_result_3074 = invoke(stypy.reporting.localization.Localization(__file__, 836, 27), getitem___3073, subscript_call_result_3071)
                        
                        int_3075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 50), 'int')
                        # Applying the binary operator '==' (line 836)
                        result_eq_3076 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 27), '==', subscript_call_result_3074, int_3075)
                        
                        
                        # Call to append(...): (line 837)
                        # Processing the call arguments (line 837)
                        # Getting the type of 'i' (line 837)
                        i_3079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 33), 'i', False)
                        # Processing the call keyword arguments (line 837)
                        kwargs_3080 = {}
                        # Getting the type of 'queue' (line 837)
                        queue_3077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 20), 'queue', False)
                        # Obtaining the member 'append' of a type (line 837)
                        append_3078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 20), queue_3077, 'append')
                        # Calling append(args, kwargs) (line 837)
                        append_call_result_3081 = invoke(stypy.reporting.localization.Localization(__file__, 837, 20), append_3078, *[i_3079], **kwargs_3080)
                        
                        # SSA branch for the else part of an if statement (line 830)
                        module_type_store.open_ssa_branch('else')
                        
                        # Getting the type of 'deltatype' (line 838)
                        deltatype_3082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'deltatype')
                        int_3083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 34), 'int')
                        # Applying the binary operator '==' (line 838)
                        result_eq_3084 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 21), '==', deltatype_3082, int_3083)
                        
                        # Testing if the type of an if condition is none (line 838)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084):
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 838)
                            if_condition_3085 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084)
                            # Assigning a type to the variable 'if_condition_3085' (line 838)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'if_condition_3085', if_condition_3085)
                            # SSA begins for if statement (line 838)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Subscript (line 840):
                            
                            # Assigning a Name to a Subscript (line 840):
                            # Getting the type of 'True' (line 840)
                            True_3086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 43), 'True')
                            # Getting the type of 'allowedge' (line 840)
                            allowedge_3087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 20), 'allowedge')
                            # Getting the type of 'deltaedge' (line 840)
                            deltaedge_3088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 30), 'deltaedge')
                            # Storing an element on a container (line 840)
                            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 20), allowedge_3087, (deltaedge_3088, True_3086))
                            
                            # Assigning a Subscript to a Tuple (line 841):
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3091, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3093 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3092, deltaedge_3090)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3093, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3095 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3094, int_3089)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_31' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31', subscript_call_result_3095)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3098, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3100 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3099, deltaedge_3097)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3100, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3102 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3101, int_3096)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_32' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32', subscript_call_result_3102)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3105, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3107 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3106, deltaedge_3104)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3107, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3109 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3108, int_3103)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_33' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33', subscript_call_result_3109)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_31' (line 841)
                            tuple_var_assignment_31_3110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31')
                            # Assigning a type to the variable 'i' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 21), 'i', tuple_var_assignment_31_3110)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_32' (line 841)
                            tuple_var_assignment_32_3111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32')
                            # Assigning a type to the variable 'j' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 24), 'j', tuple_var_assignment_32_3111)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_33' (line 841)
                            tuple_var_assignment_33_3112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33')
                            # Assigning a type to the variable 'wt' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 27), 'wt', tuple_var_assignment_33_3112)
                            # Evaluating assert statement condition
                            
                            
                            # Obtaining the type of the subscript
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'i' (line 842)
                            i_3113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 43), 'i')
                            # Getting the type of 'inblossom' (line 842)
                            inblossom_3114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 33), 'inblossom')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 33), inblossom_3114, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3116 = invoke(stypy.reporting.localization.Localization(__file__, 842, 33), getitem___3115, i_3113)
                            
                            # Getting the type of 'label' (line 842)
                            label_3117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 27), 'label')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 27), label_3117, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3119 = invoke(stypy.reporting.localization.Localization(__file__, 842, 27), getitem___3118, subscript_call_result_3116)
                            
                            int_3120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 50), 'int')
                            # Applying the binary operator '==' (line 842)
                            result_eq_3121 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 27), '==', subscript_call_result_3119, int_3120)
                            
                            
                            # Call to append(...): (line 843)
                            # Processing the call arguments (line 843)
                            # Getting the type of 'i' (line 843)
                            i_3124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 33), 'i', False)
                            # Processing the call keyword arguments (line 843)
                            kwargs_3125 = {}
                            # Getting the type of 'queue' (line 843)
                            queue_3122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 20), 'queue', False)
                            # Obtaining the member 'append' of a type (line 843)
                            append_3123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 20), queue_3122, 'append')
                            # Calling append(args, kwargs) (line 843)
                            append_call_result_3126 = invoke(stypy.reporting.localization.Localization(__file__, 843, 20), append_3123, *[i_3124], **kwargs_3125)
                            
                            # SSA branch for the else part of an if statement (line 838)
                            module_type_store.open_ssa_branch('else')
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 838)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 830)
                        module_type_store = module_type_store.join_ssa_context()
                        

                else:
                    
                    # Testing the type of an if condition (line 827)
                    if_condition_3022 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 827, 16), result_eq_3021)
                    # Assigning a type to the variable 'if_condition_3022' (line 827)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 827, 16), 'if_condition_3022', if_condition_3022)
                    # SSA begins for if statement (line 827)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    # SSA branch for the else part of an if statement (line 827)
                    module_type_store.open_ssa_branch('else')
                    
                    # Getting the type of 'deltatype' (line 830)
                    deltatype_3023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 21), 'deltatype')
                    int_3024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 34), 'int')
                    # Applying the binary operator '==' (line 830)
                    result_eq_3025 = python_operator(stypy.reporting.localization.Localization(__file__, 830, 21), '==', deltatype_3023, int_3024)
                    
                    # Testing if the type of an if condition is none (line 830)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 830, 21), result_eq_3025):
                        
                        # Getting the type of 'deltatype' (line 838)
                        deltatype_3082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'deltatype')
                        int_3083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 34), 'int')
                        # Applying the binary operator '==' (line 838)
                        result_eq_3084 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 21), '==', deltatype_3082, int_3083)
                        
                        # Testing if the type of an if condition is none (line 838)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084):
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 838)
                            if_condition_3085 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084)
                            # Assigning a type to the variable 'if_condition_3085' (line 838)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'if_condition_3085', if_condition_3085)
                            # SSA begins for if statement (line 838)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Subscript (line 840):
                            
                            # Assigning a Name to a Subscript (line 840):
                            # Getting the type of 'True' (line 840)
                            True_3086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 43), 'True')
                            # Getting the type of 'allowedge' (line 840)
                            allowedge_3087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 20), 'allowedge')
                            # Getting the type of 'deltaedge' (line 840)
                            deltaedge_3088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 30), 'deltaedge')
                            # Storing an element on a container (line 840)
                            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 20), allowedge_3087, (deltaedge_3088, True_3086))
                            
                            # Assigning a Subscript to a Tuple (line 841):
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3091, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3093 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3092, deltaedge_3090)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3093, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3095 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3094, int_3089)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_31' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31', subscript_call_result_3095)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3098, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3100 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3099, deltaedge_3097)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3100, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3102 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3101, int_3096)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_32' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32', subscript_call_result_3102)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3105, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3107 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3106, deltaedge_3104)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3107, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3109 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3108, int_3103)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_33' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33', subscript_call_result_3109)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_31' (line 841)
                            tuple_var_assignment_31_3110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31')
                            # Assigning a type to the variable 'i' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 21), 'i', tuple_var_assignment_31_3110)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_32' (line 841)
                            tuple_var_assignment_32_3111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32')
                            # Assigning a type to the variable 'j' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 24), 'j', tuple_var_assignment_32_3111)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_33' (line 841)
                            tuple_var_assignment_33_3112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33')
                            # Assigning a type to the variable 'wt' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 27), 'wt', tuple_var_assignment_33_3112)
                            # Evaluating assert statement condition
                            
                            
                            # Obtaining the type of the subscript
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'i' (line 842)
                            i_3113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 43), 'i')
                            # Getting the type of 'inblossom' (line 842)
                            inblossom_3114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 33), 'inblossom')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 33), inblossom_3114, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3116 = invoke(stypy.reporting.localization.Localization(__file__, 842, 33), getitem___3115, i_3113)
                            
                            # Getting the type of 'label' (line 842)
                            label_3117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 27), 'label')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 27), label_3117, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3119 = invoke(stypy.reporting.localization.Localization(__file__, 842, 27), getitem___3118, subscript_call_result_3116)
                            
                            int_3120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 50), 'int')
                            # Applying the binary operator '==' (line 842)
                            result_eq_3121 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 27), '==', subscript_call_result_3119, int_3120)
                            
                            
                            # Call to append(...): (line 843)
                            # Processing the call arguments (line 843)
                            # Getting the type of 'i' (line 843)
                            i_3124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 33), 'i', False)
                            # Processing the call keyword arguments (line 843)
                            kwargs_3125 = {}
                            # Getting the type of 'queue' (line 843)
                            queue_3122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 20), 'queue', False)
                            # Obtaining the member 'append' of a type (line 843)
                            append_3123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 20), queue_3122, 'append')
                            # Calling append(args, kwargs) (line 843)
                            append_call_result_3126 = invoke(stypy.reporting.localization.Localization(__file__, 843, 20), append_3123, *[i_3124], **kwargs_3125)
                            
                            # SSA branch for the else part of an if statement (line 838)
                            module_type_store.open_ssa_branch('else')
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 838)
                            module_type_store = module_type_store.join_ssa_context()
                            

                    else:
                        
                        # Testing the type of an if condition (line 830)
                        if_condition_3026 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 830, 21), result_eq_3025)
                        # Assigning a type to the variable 'if_condition_3026' (line 830)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 21), 'if_condition_3026', if_condition_3026)
                        # SSA begins for if statement (line 830)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Assigning a Name to a Subscript (line 832):
                        
                        # Assigning a Name to a Subscript (line 832):
                        # Getting the type of 'True' (line 832)
                        True_3027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 43), 'True')
                        # Getting the type of 'allowedge' (line 832)
                        allowedge_3028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 20), 'allowedge')
                        # Getting the type of 'deltaedge' (line 832)
                        deltaedge_3029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 30), 'deltaedge')
                        # Storing an element on a container (line 832)
                        set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 832, 20), allowedge_3028, (deltaedge_3029, True_3027))
                        
                        # Assigning a Subscript to a Tuple (line 833):
                        
                        # Assigning a Subscript to a Name (line 833):
                        
                        # Obtaining the type of the subscript
                        int_3030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 20), 'int')
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'deltaedge' (line 833)
                        deltaedge_3031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 39), 'deltaedge')
                        # Getting the type of 'edges' (line 833)
                        edges_3032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 33), 'edges')
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 33), edges_3032, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3034 = invoke(stypy.reporting.localization.Localization(__file__, 833, 33), getitem___3033, deltaedge_3031)
                        
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3035 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 20), subscript_call_result_3034, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3036 = invoke(stypy.reporting.localization.Localization(__file__, 833, 20), getitem___3035, int_3030)
                        
                        # Assigning a type to the variable 'tuple_var_assignment_26' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_26', subscript_call_result_3036)
                        
                        # Assigning a Subscript to a Name (line 833):
                        
                        # Obtaining the type of the subscript
                        int_3037 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 20), 'int')
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'deltaedge' (line 833)
                        deltaedge_3038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 39), 'deltaedge')
                        # Getting the type of 'edges' (line 833)
                        edges_3039 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 33), 'edges')
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3040 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 33), edges_3039, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3041 = invoke(stypy.reporting.localization.Localization(__file__, 833, 33), getitem___3040, deltaedge_3038)
                        
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 20), subscript_call_result_3041, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3043 = invoke(stypy.reporting.localization.Localization(__file__, 833, 20), getitem___3042, int_3037)
                        
                        # Assigning a type to the variable 'tuple_var_assignment_27' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_27', subscript_call_result_3043)
                        
                        # Assigning a Subscript to a Name (line 833):
                        
                        # Obtaining the type of the subscript
                        int_3044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 20), 'int')
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'deltaedge' (line 833)
                        deltaedge_3045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 39), 'deltaedge')
                        # Getting the type of 'edges' (line 833)
                        edges_3046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 33), 'edges')
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 33), edges_3046, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3048 = invoke(stypy.reporting.localization.Localization(__file__, 833, 33), getitem___3047, deltaedge_3045)
                        
                        # Obtaining the member '__getitem__' of a type (line 833)
                        getitem___3049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 20), subscript_call_result_3048, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 833)
                        subscript_call_result_3050 = invoke(stypy.reporting.localization.Localization(__file__, 833, 20), getitem___3049, int_3044)
                        
                        # Assigning a type to the variable 'tuple_var_assignment_28' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_28', subscript_call_result_3050)
                        
                        # Assigning a Name to a Name (line 833):
                        # Getting the type of 'tuple_var_assignment_26' (line 833)
                        tuple_var_assignment_26_3051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_26')
                        # Assigning a type to the variable 'i' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 21), 'i', tuple_var_assignment_26_3051)
                        
                        # Assigning a Name to a Name (line 833):
                        # Getting the type of 'tuple_var_assignment_27' (line 833)
                        tuple_var_assignment_27_3052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_27')
                        # Assigning a type to the variable 'j' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 24), 'j', tuple_var_assignment_27_3052)
                        
                        # Assigning a Name to a Name (line 833):
                        # Getting the type of 'tuple_var_assignment_28' (line 833)
                        tuple_var_assignment_28_3053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 20), 'tuple_var_assignment_28')
                        # Assigning a type to the variable 'wt' (line 833)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 27), 'wt', tuple_var_assignment_28_3053)
                        
                        
                        # Obtaining the type of the subscript
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'i' (line 834)
                        i_3054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 39), 'i')
                        # Getting the type of 'inblossom' (line 834)
                        inblossom_3055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 29), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 834)
                        getitem___3056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 29), inblossom_3055, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 834)
                        subscript_call_result_3057 = invoke(stypy.reporting.localization.Localization(__file__, 834, 29), getitem___3056, i_3054)
                        
                        # Getting the type of 'label' (line 834)
                        label_3058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 23), 'label')
                        # Obtaining the member '__getitem__' of a type (line 834)
                        getitem___3059 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 23), label_3058, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 834)
                        subscript_call_result_3060 = invoke(stypy.reporting.localization.Localization(__file__, 834, 23), getitem___3059, subscript_call_result_3057)
                        
                        int_3061 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 834, 46), 'int')
                        # Applying the binary operator '==' (line 834)
                        result_eq_3062 = python_operator(stypy.reporting.localization.Localization(__file__, 834, 23), '==', subscript_call_result_3060, int_3061)
                        
                        # Testing if the type of an if condition is none (line 834)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 834, 20), result_eq_3062):
                            pass
                        else:
                            
                            # Testing the type of an if condition (line 834)
                            if_condition_3063 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 834, 20), result_eq_3062)
                            # Assigning a type to the variable 'if_condition_3063' (line 834)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 834, 20), 'if_condition_3063', if_condition_3063)
                            # SSA begins for if statement (line 834)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Tuple to a Tuple (line 835):
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'j' (line 835)
                            j_3064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 31), 'j')
                            # Assigning a type to the variable 'tuple_assignment_29' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_29', j_3064)
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'i' (line 835)
                            i_3065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 34), 'i')
                            # Assigning a type to the variable 'tuple_assignment_30' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_30', i_3065)
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'tuple_assignment_29' (line 835)
                            tuple_assignment_29_3066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_29')
                            # Assigning a type to the variable 'i' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'i', tuple_assignment_29_3066)
                            
                            # Assigning a Name to a Name (line 835):
                            # Getting the type of 'tuple_assignment_30' (line 835)
                            tuple_assignment_30_3067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 835, 24), 'tuple_assignment_30')
                            # Assigning a type to the variable 'j' (line 835)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 835, 27), 'j', tuple_assignment_30_3067)
                            # SSA join for if statement (line 834)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # Evaluating assert statement condition
                        
                        
                        # Obtaining the type of the subscript
                        
                        # Obtaining the type of the subscript
                        # Getting the type of 'i' (line 836)
                        i_3068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 43), 'i')
                        # Getting the type of 'inblossom' (line 836)
                        inblossom_3069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 33), 'inblossom')
                        # Obtaining the member '__getitem__' of a type (line 836)
                        getitem___3070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 33), inblossom_3069, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 836)
                        subscript_call_result_3071 = invoke(stypy.reporting.localization.Localization(__file__, 836, 33), getitem___3070, i_3068)
                        
                        # Getting the type of 'label' (line 836)
                        label_3072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 27), 'label')
                        # Obtaining the member '__getitem__' of a type (line 836)
                        getitem___3073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 27), label_3072, '__getitem__')
                        # Calling the subscript (__getitem__) to obtain the elements type (line 836)
                        subscript_call_result_3074 = invoke(stypy.reporting.localization.Localization(__file__, 836, 27), getitem___3073, subscript_call_result_3071)
                        
                        int_3075 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 836, 50), 'int')
                        # Applying the binary operator '==' (line 836)
                        result_eq_3076 = python_operator(stypy.reporting.localization.Localization(__file__, 836, 27), '==', subscript_call_result_3074, int_3075)
                        
                        
                        # Call to append(...): (line 837)
                        # Processing the call arguments (line 837)
                        # Getting the type of 'i' (line 837)
                        i_3079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 33), 'i', False)
                        # Processing the call keyword arguments (line 837)
                        kwargs_3080 = {}
                        # Getting the type of 'queue' (line 837)
                        queue_3077 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 837, 20), 'queue', False)
                        # Obtaining the member 'append' of a type (line 837)
                        append_3078 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 837, 20), queue_3077, 'append')
                        # Calling append(args, kwargs) (line 837)
                        append_call_result_3081 = invoke(stypy.reporting.localization.Localization(__file__, 837, 20), append_3078, *[i_3079], **kwargs_3080)
                        
                        # SSA branch for the else part of an if statement (line 830)
                        module_type_store.open_ssa_branch('else')
                        
                        # Getting the type of 'deltatype' (line 838)
                        deltatype_3082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'deltatype')
                        int_3083 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 838, 34), 'int')
                        # Applying the binary operator '==' (line 838)
                        result_eq_3084 = python_operator(stypy.reporting.localization.Localization(__file__, 838, 21), '==', deltatype_3082, int_3083)
                        
                        # Testing if the type of an if condition is none (line 838)

                        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084):
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                        else:
                            
                            # Testing the type of an if condition (line 838)
                            if_condition_3085 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 838, 21), result_eq_3084)
                            # Assigning a type to the variable 'if_condition_3085' (line 838)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 838, 21), 'if_condition_3085', if_condition_3085)
                            # SSA begins for if statement (line 838)
                            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                            
                            # Assigning a Name to a Subscript (line 840):
                            
                            # Assigning a Name to a Subscript (line 840):
                            # Getting the type of 'True' (line 840)
                            True_3086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 43), 'True')
                            # Getting the type of 'allowedge' (line 840)
                            allowedge_3087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 20), 'allowedge')
                            # Getting the type of 'deltaedge' (line 840)
                            deltaedge_3088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 30), 'deltaedge')
                            # Storing an element on a container (line 840)
                            set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 840, 20), allowedge_3087, (deltaedge_3088, True_3086))
                            
                            # Assigning a Subscript to a Tuple (line 841):
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3089 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3090 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3091, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3093 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3092, deltaedge_3090)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3093, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3095 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3094, int_3089)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_31' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31', subscript_call_result_3095)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3096 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3097 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3098, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3100 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3099, deltaedge_3097)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3100, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3102 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3101, int_3096)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_32' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32', subscript_call_result_3102)
                            
                            # Assigning a Subscript to a Name (line 841):
                            
                            # Obtaining the type of the subscript
                            int_3103 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 841, 20), 'int')
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'deltaedge' (line 841)
                            deltaedge_3104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 39), 'deltaedge')
                            # Getting the type of 'edges' (line 841)
                            edges_3105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 33), 'edges')
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3106 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 33), edges_3105, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3107 = invoke(stypy.reporting.localization.Localization(__file__, 841, 33), getitem___3106, deltaedge_3104)
                            
                            # Obtaining the member '__getitem__' of a type (line 841)
                            getitem___3108 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 841, 20), subscript_call_result_3107, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 841)
                            subscript_call_result_3109 = invoke(stypy.reporting.localization.Localization(__file__, 841, 20), getitem___3108, int_3103)
                            
                            # Assigning a type to the variable 'tuple_var_assignment_33' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33', subscript_call_result_3109)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_31' (line 841)
                            tuple_var_assignment_31_3110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_31')
                            # Assigning a type to the variable 'i' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 21), 'i', tuple_var_assignment_31_3110)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_32' (line 841)
                            tuple_var_assignment_32_3111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_32')
                            # Assigning a type to the variable 'j' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 24), 'j', tuple_var_assignment_32_3111)
                            
                            # Assigning a Name to a Name (line 841):
                            # Getting the type of 'tuple_var_assignment_33' (line 841)
                            tuple_var_assignment_33_3112 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 841, 20), 'tuple_var_assignment_33')
                            # Assigning a type to the variable 'wt' (line 841)
                            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 27), 'wt', tuple_var_assignment_33_3112)
                            # Evaluating assert statement condition
                            
                            
                            # Obtaining the type of the subscript
                            
                            # Obtaining the type of the subscript
                            # Getting the type of 'i' (line 842)
                            i_3113 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 43), 'i')
                            # Getting the type of 'inblossom' (line 842)
                            inblossom_3114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 33), 'inblossom')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 33), inblossom_3114, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3116 = invoke(stypy.reporting.localization.Localization(__file__, 842, 33), getitem___3115, i_3113)
                            
                            # Getting the type of 'label' (line 842)
                            label_3117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 842, 27), 'label')
                            # Obtaining the member '__getitem__' of a type (line 842)
                            getitem___3118 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 842, 27), label_3117, '__getitem__')
                            # Calling the subscript (__getitem__) to obtain the elements type (line 842)
                            subscript_call_result_3119 = invoke(stypy.reporting.localization.Localization(__file__, 842, 27), getitem___3118, subscript_call_result_3116)
                            
                            int_3120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 50), 'int')
                            # Applying the binary operator '==' (line 842)
                            result_eq_3121 = python_operator(stypy.reporting.localization.Localization(__file__, 842, 27), '==', subscript_call_result_3119, int_3120)
                            
                            
                            # Call to append(...): (line 843)
                            # Processing the call arguments (line 843)
                            # Getting the type of 'i' (line 843)
                            i_3124 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 33), 'i', False)
                            # Processing the call keyword arguments (line 843)
                            kwargs_3125 = {}
                            # Getting the type of 'queue' (line 843)
                            queue_3122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 843, 20), 'queue', False)
                            # Obtaining the member 'append' of a type (line 843)
                            append_3123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 843, 20), queue_3122, 'append')
                            # Calling append(args, kwargs) (line 843)
                            append_call_result_3126 = invoke(stypy.reporting.localization.Localization(__file__, 843, 20), append_3123, *[i_3124], **kwargs_3125)
                            
                            # SSA branch for the else part of an if statement (line 838)
                            module_type_store.open_ssa_branch('else')
                            
                            # Getting the type of 'deltatype' (line 844)
                            deltatype_3127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'deltatype')
                            int_3128 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 844, 34), 'int')
                            # Applying the binary operator '==' (line 844)
                            result_eq_3129 = python_operator(stypy.reporting.localization.Localization(__file__, 844, 21), '==', deltatype_3127, int_3128)
                            
                            # Testing if the type of an if condition is none (line 844)

                            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129):
                                pass
                            else:
                                
                                # Testing the type of an if condition (line 844)
                                if_condition_3130 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 844, 21), result_eq_3129)
                                # Assigning a type to the variable 'if_condition_3130' (line 844)
                                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 844, 21), 'if_condition_3130', if_condition_3130)
                                # SSA begins for if statement (line 844)
                                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                                
                                # Call to expandBlossom(...): (line 846)
                                # Processing the call arguments (line 846)
                                # Getting the type of 'deltablossom' (line 846)
                                deltablossom_3132 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 34), 'deltablossom', False)
                                # Getting the type of 'False' (line 846)
                                False_3133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 48), 'False', False)
                                # Processing the call keyword arguments (line 846)
                                kwargs_3134 = {}
                                # Getting the type of 'expandBlossom' (line 846)
                                expandBlossom_3131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 846, 20), 'expandBlossom', False)
                                # Calling expandBlossom(args, kwargs) (line 846)
                                expandBlossom_call_result_3135 = invoke(stypy.reporting.localization.Localization(__file__, 846, 20), expandBlossom_3131, *[deltablossom_3132, False_3133], **kwargs_3134)
                                
                                # SSA join for if statement (line 844)
                                module_type_store = module_type_store.join_ssa_context()
                                

                            # SSA join for if statement (line 838)
                            module_type_store = module_type_store.join_ssa_context()
                            

                        # SSA join for if statement (line 830)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 827)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for while statement (line 672)
                module_type_store = module_type_store.join_ssa_context()

            
            
            # Getting the type of 'augmented' (line 851)
            augmented_3136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 851, 19), 'augmented')
            # Applying the 'not' unary operator (line 851)
            result_not__3137 = python_operator(stypy.reporting.localization.Localization(__file__, 851, 15), 'not', augmented_3136)
            
            # Testing if the type of an if condition is none (line 851)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 851, 12), result_not__3137):
                pass
            else:
                
                # Testing the type of an if condition (line 851)
                if_condition_3138 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 851, 12), result_not__3137)
                # Assigning a type to the variable 'if_condition_3138' (line 851)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 12), 'if_condition_3138', if_condition_3138)
                # SSA begins for if statement (line 851)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                # SSA join for if statement (line 851)
                module_type_store = module_type_store.join_ssa_context()
                

            
            
            # Call to xrange(...): (line 855)
            # Processing the call arguments (line 855)
            # Getting the type of 'nvertex' (line 855)
            nvertex_3140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 28), 'nvertex', False)
            int_3141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 855, 37), 'int')
            # Getting the type of 'nvertex' (line 855)
            nvertex_3142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 41), 'nvertex', False)
            # Applying the binary operator '*' (line 855)
            result_mul_3143 = python_operator(stypy.reporting.localization.Localization(__file__, 855, 37), '*', int_3141, nvertex_3142)
            
            # Processing the call keyword arguments (line 855)
            kwargs_3144 = {}
            # Getting the type of 'xrange' (line 855)
            xrange_3139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 21), 'xrange', False)
            # Calling xrange(args, kwargs) (line 855)
            xrange_call_result_3145 = invoke(stypy.reporting.localization.Localization(__file__, 855, 21), xrange_3139, *[nvertex_3140, result_mul_3143], **kwargs_3144)
            
            # Testing if the for loop is going to be iterated (line 855)
            # Testing the type of a for loop iterable (line 855)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 855, 12), xrange_call_result_3145)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 855, 12), xrange_call_result_3145):
                # Getting the type of the for loop variable (line 855)
                for_loop_var_3146 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 855, 12), xrange_call_result_3145)
                # Assigning a type to the variable 'b' (line 855)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 12), 'b', for_loop_var_3146)
                # SSA begins for a for statement (line 855)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Evaluating a boolean operation
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 856)
                b_3147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 34), 'b')
                # Getting the type of 'blossomparent' (line 856)
                blossomparent_3148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 20), 'blossomparent')
                # Obtaining the member '__getitem__' of a type (line 856)
                getitem___3149 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 20), blossomparent_3148, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 856)
                subscript_call_result_3150 = invoke(stypy.reporting.localization.Localization(__file__, 856, 20), getitem___3149, b_3147)
                
                int_3151 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 40), 'int')
                # Applying the binary operator '==' (line 856)
                result_eq_3152 = python_operator(stypy.reporting.localization.Localization(__file__, 856, 20), '==', subscript_call_result_3150, int_3151)
                
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 856)
                b_3153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 59), 'b')
                # Getting the type of 'blossombase' (line 856)
                blossombase_3154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 856, 47), 'blossombase')
                # Obtaining the member '__getitem__' of a type (line 856)
                getitem___3155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 856, 47), blossombase_3154, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 856)
                subscript_call_result_3156 = invoke(stypy.reporting.localization.Localization(__file__, 856, 47), getitem___3155, b_3153)
                
                int_3157 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 856, 65), 'int')
                # Applying the binary operator '>=' (line 856)
                result_ge_3158 = python_operator(stypy.reporting.localization.Localization(__file__, 856, 47), '>=', subscript_call_result_3156, int_3157)
                
                # Applying the binary operator 'and' (line 856)
                result_and_keyword_3159 = python_operator(stypy.reporting.localization.Localization(__file__, 856, 20), 'and', result_eq_3152, result_ge_3158)
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 857)
                b_3160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 30), 'b')
                # Getting the type of 'label' (line 857)
                label_3161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 24), 'label')
                # Obtaining the member '__getitem__' of a type (line 857)
                getitem___3162 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 24), label_3161, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 857)
                subscript_call_result_3163 = invoke(stypy.reporting.localization.Localization(__file__, 857, 24), getitem___3162, b_3160)
                
                int_3164 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 36), 'int')
                # Applying the binary operator '==' (line 857)
                result_eq_3165 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 24), '==', subscript_call_result_3163, int_3164)
                
                # Applying the binary operator 'and' (line 856)
                result_and_keyword_3166 = python_operator(stypy.reporting.localization.Localization(__file__, 856, 20), 'and', result_and_keyword_3159, result_eq_3165)
                
                
                # Obtaining the type of the subscript
                # Getting the type of 'b' (line 857)
                b_3167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 50), 'b')
                # Getting the type of 'dualvar' (line 857)
                dualvar_3168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 42), 'dualvar')
                # Obtaining the member '__getitem__' of a type (line 857)
                getitem___3169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 42), dualvar_3168, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 857)
                subscript_call_result_3170 = invoke(stypy.reporting.localization.Localization(__file__, 857, 42), getitem___3169, b_3167)
                
                int_3171 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 857, 56), 'int')
                # Applying the binary operator '==' (line 857)
                result_eq_3172 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 42), '==', subscript_call_result_3170, int_3171)
                
                # Applying the binary operator 'and' (line 856)
                result_and_keyword_3173 = python_operator(stypy.reporting.localization.Localization(__file__, 856, 20), 'and', result_and_keyword_3166, result_eq_3172)
                
                # Testing if the type of an if condition is none (line 856)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 856, 16), result_and_keyword_3173):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 856)
                    if_condition_3174 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 856, 16), result_and_keyword_3173)
                    # Assigning a type to the variable 'if_condition_3174' (line 856)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 856, 16), 'if_condition_3174', if_condition_3174)
                    # SSA begins for if statement (line 856)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Call to expandBlossom(...): (line 858)
                    # Processing the call arguments (line 858)
                    # Getting the type of 'b' (line 858)
                    b_3176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 34), 'b', False)
                    # Getting the type of 'True' (line 858)
                    True_3177 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 37), 'True', False)
                    # Processing the call keyword arguments (line 858)
                    kwargs_3178 = {}
                    # Getting the type of 'expandBlossom' (line 858)
                    expandBlossom_3175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 20), 'expandBlossom', False)
                    # Calling expandBlossom(args, kwargs) (line 858)
                    expandBlossom_call_result_3179 = invoke(stypy.reporting.localization.Localization(__file__, 858, 20), expandBlossom_3175, *[b_3176, True_3177], **kwargs_3178)
                    
                    # SSA join for if statement (line 856)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'CHECK_OPTIMUM' (line 861)
        CHECK_OPTIMUM_3180 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 861, 11), 'CHECK_OPTIMUM')
        # Testing if the type of an if condition is none (line 861)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 861, 8), CHECK_OPTIMUM_3180):
            pass
        else:
            
            # Testing the type of an if condition (line 861)
            if_condition_3181 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 861, 8), CHECK_OPTIMUM_3180)
            # Assigning a type to the variable 'if_condition_3181' (line 861)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 861, 8), 'if_condition_3181', if_condition_3181)
            # SSA begins for if statement (line 861)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to verifyOptimum(...): (line 862)
            # Processing the call keyword arguments (line 862)
            kwargs_3183 = {}
            # Getting the type of 'verifyOptimum' (line 862)
            verifyOptimum_3182 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 862, 12), 'verifyOptimum', False)
            # Calling verifyOptimum(args, kwargs) (line 862)
            verifyOptimum_call_result_3184 = invoke(stypy.reporting.localization.Localization(__file__, 862, 12), verifyOptimum_3182, *[], **kwargs_3183)
            
            # SSA join for if statement (line 861)
            module_type_store = module_type_store.join_ssa_context()
            

        
        
        # Call to xrange(...): (line 865)
        # Processing the call arguments (line 865)
        # Getting the type of 'nvertex' (line 865)
        nvertex_3186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 24), 'nvertex', False)
        # Processing the call keyword arguments (line 865)
        kwargs_3187 = {}
        # Getting the type of 'xrange' (line 865)
        xrange_3185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 865)
        xrange_call_result_3188 = invoke(stypy.reporting.localization.Localization(__file__, 865, 17), xrange_3185, *[nvertex_3186], **kwargs_3187)
        
        # Testing if the for loop is going to be iterated (line 865)
        # Testing the type of a for loop iterable (line 865)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 865, 8), xrange_call_result_3188)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 865, 8), xrange_call_result_3188):
            # Getting the type of the for loop variable (line 865)
            for_loop_var_3189 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 865, 8), xrange_call_result_3188)
            # Assigning a type to the variable 'v' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 8), 'v', for_loop_var_3189)
            # SSA begins for a for statement (line 865)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 866)
            v_3190 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 20), 'v')
            # Getting the type of 'mate' (line 866)
            mate_3191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 866, 15), 'mate')
            # Obtaining the member '__getitem__' of a type (line 866)
            getitem___3192 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 866, 15), mate_3191, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 866)
            subscript_call_result_3193 = invoke(stypy.reporting.localization.Localization(__file__, 866, 15), getitem___3192, v_3190)
            
            int_3194 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 866, 26), 'int')
            # Applying the binary operator '>=' (line 866)
            result_ge_3195 = python_operator(stypy.reporting.localization.Localization(__file__, 866, 15), '>=', subscript_call_result_3193, int_3194)
            
            # Testing if the type of an if condition is none (line 866)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 866, 12), result_ge_3195):
                pass
            else:
                
                # Testing the type of an if condition (line 866)
                if_condition_3196 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 866, 12), result_ge_3195)
                # Assigning a type to the variable 'if_condition_3196' (line 866)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 866, 12), 'if_condition_3196', if_condition_3196)
                # SSA begins for if statement (line 866)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Subscript (line 867):
                
                # Assigning a Subscript to a Subscript (line 867):
                
                # Obtaining the type of the subscript
                
                # Obtaining the type of the subscript
                # Getting the type of 'v' (line 867)
                v_3197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 40), 'v')
                # Getting the type of 'mate' (line 867)
                mate_3198 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 35), 'mate')
                # Obtaining the member '__getitem__' of a type (line 867)
                getitem___3199 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 35), mate_3198, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 867)
                subscript_call_result_3200 = invoke(stypy.reporting.localization.Localization(__file__, 867, 35), getitem___3199, v_3197)
                
                # Getting the type of 'endpoint' (line 867)
                endpoint_3201 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 26), 'endpoint')
                # Obtaining the member '__getitem__' of a type (line 867)
                getitem___3202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 26), endpoint_3201, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 867)
                subscript_call_result_3203 = invoke(stypy.reporting.localization.Localization(__file__, 867, 26), getitem___3202, subscript_call_result_3200)
                
                # Getting the type of 'mate' (line 867)
                mate_3204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 16), 'mate')
                # Getting the type of 'v' (line 867)
                v_3205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 21), 'v')
                # Storing an element on a container (line 867)
                set_contained_elements_type(stypy.reporting.localization.Localization(__file__, 867, 16), mate_3204, (v_3205, subscript_call_result_3203))
                # SSA join for if statement (line 866)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        
        # Call to xrange(...): (line 868)
        # Processing the call arguments (line 868)
        # Getting the type of 'nvertex' (line 868)
        nvertex_3207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 24), 'nvertex', False)
        # Processing the call keyword arguments (line 868)
        kwargs_3208 = {}
        # Getting the type of 'xrange' (line 868)
        xrange_3206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 17), 'xrange', False)
        # Calling xrange(args, kwargs) (line 868)
        xrange_call_result_3209 = invoke(stypy.reporting.localization.Localization(__file__, 868, 17), xrange_3206, *[nvertex_3207], **kwargs_3208)
        
        # Testing if the for loop is going to be iterated (line 868)
        # Testing the type of a for loop iterable (line 868)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 868, 8), xrange_call_result_3209)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 868, 8), xrange_call_result_3209):
            # Getting the type of the for loop variable (line 868)
            for_loop_var_3210 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 868, 8), xrange_call_result_3209)
            # Assigning a type to the variable 'v' (line 868)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 868, 8), 'v', for_loop_var_3210)
            # SSA begins for a for statement (line 868)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            # Evaluating assert statement condition
            
            # Evaluating a boolean operation
            
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 869)
            v_3211 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 24), 'v')
            # Getting the type of 'mate' (line 869)
            mate_3212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 19), 'mate')
            # Obtaining the member '__getitem__' of a type (line 869)
            getitem___3213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 19), mate_3212, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 869)
            subscript_call_result_3214 = invoke(stypy.reporting.localization.Localization(__file__, 869, 19), getitem___3213, v_3211)
            
            int_3215 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 869, 30), 'int')
            # Applying the binary operator '==' (line 869)
            result_eq_3216 = python_operator(stypy.reporting.localization.Localization(__file__, 869, 19), '==', subscript_call_result_3214, int_3215)
            
            
            
            # Obtaining the type of the subscript
            
            # Obtaining the type of the subscript
            # Getting the type of 'v' (line 869)
            v_3217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 46), 'v')
            # Getting the type of 'mate' (line 869)
            mate_3218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 41), 'mate')
            # Obtaining the member '__getitem__' of a type (line 869)
            getitem___3219 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 41), mate_3218, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 869)
            subscript_call_result_3220 = invoke(stypy.reporting.localization.Localization(__file__, 869, 41), getitem___3219, v_3217)
            
            # Getting the type of 'mate' (line 869)
            mate_3221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 36), 'mate')
            # Obtaining the member '__getitem__' of a type (line 869)
            getitem___3222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 36), mate_3221, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 869)
            subscript_call_result_3223 = invoke(stypy.reporting.localization.Localization(__file__, 869, 36), getitem___3222, subscript_call_result_3220)
            
            # Getting the type of 'v' (line 869)
            v_3224 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 53), 'v')
            # Applying the binary operator '==' (line 869)
            result_eq_3225 = python_operator(stypy.reporting.localization.Localization(__file__, 869, 36), '==', subscript_call_result_3223, v_3224)
            
            # Applying the binary operator 'or' (line 869)
            result_or_keyword_3226 = python_operator(stypy.reporting.localization.Localization(__file__, 869, 19), 'or', result_eq_3216, result_eq_3225)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'True' (line 872)
        True_3227 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 15), 'True')
        # Assigning a type to the variable 'stypy_return_type' (line 872)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 8), 'stypy_return_type', True_3227)
        
        # ################# End of 'run(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'run' in the type store
        # Getting the type of 'stypy_return_type' (line 642)
        stypy_return_type_3228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 642, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_3228)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'run'
        return stypy_return_type_3228


    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 640, 0, False)
        # Assigning a type to the variable 'self' (line 641)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 641, 0), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'MWMatchingRun.__init__', [], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, [], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        pass
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


# Assigning a type to the variable 'MWMatchingRun' (line 640)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 640, 0), 'MWMatchingRun', MWMatchingRun)

@norecursion
def run(localization, *varargs, **kwargs):
    global module_type_store
    # Assign values to the parameters with defaults
    defaults = []
    # Create a new context for function 'run'
    module_type_store = module_type_store.open_function_context('run', 875, 0, False)
    
    # Passed parameters checking function
    run.stypy_localization = localization
    run.stypy_type_of_self = None
    run.stypy_type_store = module_type_store
    run.stypy_function_name = 'run'
    run.stypy_param_names_list = []
    run.stypy_varargs_param_name = None
    run.stypy_kwargs_param_name = None
    run.stypy_call_defaults = defaults
    run.stypy_call_varargs = varargs
    run.stypy_call_kwargs = kwargs
    arguments = process_argument_values(localization, None, module_type_store, 'run', [], None, None, defaults, varargs, kwargs)

    if is_error_type(arguments):
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        return arguments

    # Initialize method data
    init_call_information(module_type_store, 'run', localization, [], arguments)
    
    # Default return type storage variable (SSA)
    # Assigning a type to the variable 'stypy_return_type'
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
    
    
    # ################# Begin of 'run(...)' code ##################

    
    # Assigning a Call to a Name (line 876):
    
    # Assigning a Call to a Name (line 876):
    
    # Call to MWMatchingRun(...): (line 876)
    # Processing the call keyword arguments (line 876)
    kwargs_3230 = {}
    # Getting the type of 'MWMatchingRun' (line 876)
    MWMatchingRun_3229 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 876, 8), 'MWMatchingRun', False)
    # Calling MWMatchingRun(args, kwargs) (line 876)
    MWMatchingRun_call_result_3231 = invoke(stypy.reporting.localization.Localization(__file__, 876, 8), MWMatchingRun_3229, *[], **kwargs_3230)
    
    # Assigning a type to the variable 'm' (line 876)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 876, 4), 'm', MWMatchingRun_call_result_3231)
    
    # Call to run(...): (line 877)
    # Processing the call keyword arguments (line 877)
    kwargs_3234 = {}
    # Getting the type of 'm' (line 877)
    m_3232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 4), 'm', False)
    # Obtaining the member 'run' of a type (line 877)
    run_3233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 877, 4), m_3232, 'run')
    # Calling run(args, kwargs) (line 877)
    run_call_result_3235 = invoke(stypy.reporting.localization.Localization(__file__, 877, 4), run_3233, *[], **kwargs_3234)
    
    
    # ################# End of 'run(...)' code ##################

    # Teardown call information
    teardown_call_information(localization, arguments)
    
    # Storing the return type of function 'run' in the type store
    # Getting the type of 'stypy_return_type' (line 875)
    stypy_return_type_3236 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 0), 'stypy_return_type')
    module_type_store.store_return_type_of_current_context(stypy_return_type_3236)
    
    # Destroy the current context
    module_type_store = module_type_store.close_function_context()
    
    # Return type of the function 'run'
    return stypy_return_type_3236

# Assigning a type to the variable 'run' (line 875)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 0), 'run', run)

# Call to run(...): (line 880)
# Processing the call keyword arguments (line 880)
kwargs_3238 = {}
# Getting the type of 'run' (line 880)
run_3237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 880, 0), 'run', False)
# Calling run(args, kwargs) (line 880)
run_call_result_3239 = invoke(stypy.reporting.localization.Localization(__file__, 880, 0), run_3237, *[], **kwargs_3238)


# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
