
# -*- coding: utf-8 -*-

"""
ORIGINAL PROGRAM SOURCE CODE:
1: import os
2: 
3: from ...code_generation_copy.type_inference_programs_copy.aux_functions_copy import *
4: from ...visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, \
5:     conditional_statements_copy, idioms_copy
6: import value_visitor_copy
7: import ast
8: 
9: class StatementVisitor(ast.NodeVisitor):
10:     '''
11:     Visitor for statement nodes, that are AST nodes that return only statement lists. If when processing a statement
12:     node one of its children nodes is a value node, a ValueVisitor is automatically run to process this child node.
13:     '''
14: 
15:     def __init__(self, filename):
16:         self.file_name = filename
17: 
18:     def visit(self, node, context):
19:         '''Visit a node.'''
20:         method = 'visit_' + node.__class__.__name__
21:         visitor = getattr(self, method, self.generic_visit)
22:         if visitor == self.generic_visit:
23:             return visitor(node, context + [method])
24:         return visitor(node, context)
25: 
26:     def generic_visit(self, node, context):
27:         if hasattr(value_visitor_copy.ValueVisitor, context[-1]):
28:             return self.visit_value(node, context[:-1])
29:         else:
30:             raise Exception("SENTENCE VISITOR: " + context[-1] + " is not yet implemented")
31: 
32:     def __visit_instruction_body(self, body, context):
33:         new_stmts = []
34: 
35:         # Visit all body instructions
36:         v_visitor = value_visitor_copy.ValueVisitor(self.file_name)
37:         for stmt in body:
38:             stmts, temp = v_visitor.visit(stmt, context)
39:             if isinstance(stmts, list):
40:                 new_stmts.extend(stmts)
41:             else:
42:                 new_stmts.append(stmts)
43:                 # new_stmts = stypy_functions_copy.flatten_lists(new_stmts)
44: 
45:         return new_stmts
46: 
47:     def visit_value(self, node, context):
48:         v_visitor = value_visitor_copy.ValueVisitor(self.file_name)
49: 
50:         result, temp = v_visitor.visit(node, context)
51: 
52:         return result, temp
53: 
54:     # ######################################### MAIN MODULE #############################################
55: 
56:     def visit_Module(self, node, context):
57:         # print inspect.stack()[0][3]
58: 
59:         context.append(node)
60:         stmts = self.__visit_instruction_body(node.body, context)
61:         context.remove(node)
62: 
63:         return stmts
64: 
65:     # ######################################### functions_copy #############################################
66: 
67:     def visit_FunctionDef(self, node, context):
68:         # print inspect.stack()[0][3]
69: 
70:         self.building_function_name = node.name
71: 
72:         # Function declaration localization
73:         decl_localization = core_language_copy.create_Name('localization', False, line=node.lineno, column=node.col_offset)
74: 
75:         # Decorators are declarative properties of methods or functions_copy that give problems if directly ported to
76:         # type-inference equivalent code. For now, we only translate the @staticmethod decorator.
77:         decorator_list = []
78:         if len(node.decorator_list) > 0:
79:             for dec in node.decorator_list:
80:                 if isinstance(dec, ast.Name):
81:                     if dec.id == "staticmethod":
82:                         decorator_list.append(dec)
83: 
84:         # The 'norecursion' decorator, mandatory in every stypy code generation to enable the type inference program
85:         # to not to hang on recursive calls.
86:         decorator_list.append(core_language_copy.create_Name('norecursion', line=node.lineno - 1, column=node.col_offset))
87: 
88:         defaults_types = []
89:         defaults_stmts = []
90: 
91:         for elem in node.args.defaults:
92:             stmts, type_ = self.visit(elem, context)
93:             defaults_types.append(type_)
94:             defaults_stmts.append(stmts)
95: 
96:         # Create and add the function definition header
97:         function_def = functions_copy.create_function_def(node.name,
98:                                                      decl_localization,
99:                                                      decorator_list,
100:                                                      context,
101:                                                      line=node.lineno,
102:                                                      column=node.col_offset)
103: 
104:         # Defaults are stored in a variable at the beginning of the function
105:         function_def.body.append(stypy_functions_copy.create_src_comment("Assign values to the parameters with defaults"))
106:         function_def.body.append(stypy_functions_copy.create_set_unreferenced_var_check(False))
107:         function_def.body.append(defaults_stmts)
108:         function_def.body.append(stypy_functions_copy.create_set_unreferenced_var_check(True))
109:         function_def.body.append(core_language_copy.create_Assign(core_language_copy.create_Name("defaults"),
110:                                                              data_structures_copy.create_list(defaults_types)))
111: 
112:         # Generate code from setting a new context in the type store
113:         function_def.body.append(stypy_functions_copy.create_src_comment
114:                                  ("Create a new context for function '{0}'".format(node.name)))
115:         context_set = functions_copy.create_context_set(node.name, node.lineno,
116:                                                    node.col_offset)
117:         function_def.body.append(context_set)
118: 
119:         if functions_copy.is_method(context):
120:             function_def.body.append(
121:                 stypy_functions_copy.create_set_type_of('self', core_language_copy.create_Name('type_of_self'), node.lineno + 1,
122:                                                    node.col_offset))
123: 
124:         # Generate code for arity checking of the function arguments and assigning them to suitable local variables
125:         function_def.body.append(stypy_functions_copy.create_src_comment("Passed parameters checking function"))
126: 
127:         # Generate argument number test
128:         f_preamble = functions_copy.create_arg_number_test(node, context)
129: 
130:         function_def.body.append(f_preamble)
131: 
132:         # Generate code for create a new stack push for error reporting.
133:         function_def.body.append(stypy_functions_copy.create_src_comment("Stacktrace push for error reporting"))
134:         declared_arguments = functions_copy.obtain_arg_list(node.args, functions_copy.is_method(context))
135:         stack_push = functions_copy.create_stacktrace_push(node.name, declared_arguments)
136:         function_def.body.append(stack_push)
137: 
138:         # Initialize the variable where the return of the function will be stored.
139:         # This is needed due to a single return statement must exist within a function in order to not to conflict with
140:         # the SSA algorithm
141:         function_def.body.append(stypy_functions_copy.create_src_comment("Default return type storage variable (SSA)"))
142:         function_def.body.append(stypy_functions_copy.create_default_return_variable())
143: 
144:         function_def.body.append(stypy_functions_copy.create_blank_line())
145:         function_def.body.append(
146:             stypy_functions_copy.create_src_comment("Begin of the function '{0}' code".format(node.name)))
147: 
148:         context.append(node)
149:         # Visit the function body
150:         function_def.body.extend(self.__visit_instruction_body(node.body, context))
151:         context.remove(node)
152: 
153:         function_def.body.append(
154:             stypy_functions_copy.create_end_block_src_comment("End of the function '{0}' code".format(node.name)))
155: 
156:         # Pop the error reporting stack trace
157:         function_def.body.append(stypy_functions_copy.create_src_comment("Stacktrace pop (error reporting)"))
158:         stack_pop = functions_copy.create_stacktrace_pop()
159:         function_def.body.append(stack_pop)
160: 
161:         # Generate code for pop the function context.
162:         function_def.body.append(stypy_functions_copy.create_src_comment
163:                                  ("Destroy the context of function '{0}'".format(node.name)))
164: 
165:         function_def.body.append(stypy_functions_copy.create_store_return_from_function(node.lineno, node.col_offset))
166:         context_unset = functions_copy.create_context_unset()
167:         function_def.body.append(context_unset)
168: 
169:         # Finally, return the return value (contained in a predefined var name)
170:         # in the single return statement of each function.
171:         if not functions_copy.is_constructor(node):
172:             function_def.body.append(stypy_functions_copy.create_src_comment("Return type of the function"))
173:             function_def.body.append(stypy_functions_copy.create_return_from_function(node.lineno, 0))
174: 
175:         if not functions_copy.is_method(context):
176:             # Register the function type outside the function context
177:             register_expr = stypy_functions_copy.create_set_type_of(node.name, core_language_copy.create_Name(node.name),
178:                                                                node.lineno, node.col_offset)
179:         else:
180:             register_expr = []
181: 
182:         return stypy_functions_copy.flatten_lists(function_def, register_expr)
183: 
184:     def visit_Return(self, node, context):
185:         # print inspect.stack()[0][3]
186: 
187:         union_type = core_language_copy.create_attribute("union_type", "UnionType")
188:         union_add = core_language_copy.create_attribute(union_type, "add")
189:         default_function_ret_var = core_language_copy.create_Name(stypy_functions_copy.default_function_ret_var_name)
190:         if node.value is not None:
191:             get_value_stmts, value_var = self.visit_value(node.value, context)
192:         else:
193:             get_value_stmts, value_var = [], core_language_copy.create_Name("types.NoneType")
194: 
195:         union_call = functions_copy.create_call(union_add, [default_function_ret_var, value_var])
196: 
197:         # default_function_ret_var = core_language_copy.create_Name(stypy_functions_copy.default_function_ret_var_name)
198:         # ret_assign = core_language_copy.create_Assign(default_function_ret_var, union_call)
199:         ret_assign = stypy_functions_copy.assign_as_return_type(union_call)
200:         return stypy_functions_copy.flatten_lists(get_value_stmts, ret_assign)
201: 
202:     # ################################################ CLASSES ##########################################
203: 
204:     def visit_ClassDef(self, node, context):
205:         # print inspect.stack()[0][3]
206: 
207:         self.building_class_name = node.name
208: 
209:         # Writes the instruction: from stypy import *
210:         initial_comment = stypy_functions_copy.create_src_comment("Declaration of the '{0}' class".format(node.name))
211: 
212:         # Obtaining the type of the superclasses of this class (if they exist)
213:         superclass_inst = []
214:         new_bases = []
215:         for class_name in node.bases:
216:             superclass_, type_var = self.visit(class_name,
217:                                                context)  # stypy_functions_copy.create_get_type_of(class_name.id, node.lineno, node.col_offset)
218:             # superclass_type, superclass_var = stypy_functions_copy.create_temp_Assign(superclass_, node.lineno,
219:             #                                                                      node.col_offset)
220:             # superclass_inst.append(superclass_type)
221:             # new_bases.append(superclass_var)
222:             superclass_inst.append(superclass_)
223:             new_bases.append(type_var)
224: 
225:         node.bases = []
226: 
227:         # Remove class decorators (it may interfere in type inference generated code)
228:         node.decorator_list = []
229: 
230:         context.append(node)
231:         # Visit all body instructions
232:         node.body = self.__visit_instruction_body(node.body, context)
233: 
234:         context.remove(node)
235:         # Register the function type outside the function context
236:         register_expr = stypy_functions_copy.create_set_type_of(node.name, core_language_copy.create_Name(node.name),
237:                                                            node.lineno, node.col_offset)
238: 
239:         # Base type assignment
240:         if len(new_bases) > 0:
241:             class_obj_inst, class_var = stypy_functions_copy.create_get_type_of(node.name,
242:                                                                            node.lineno, node.col_offset)
243:             change_base_types_att = core_language_copy.create_attribute(class_var, 'change_base_types')
244:             bases_tuple = core_language_copy.create_type_tuple(*new_bases)
245:             localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
246:             change_bases_call = functions_copy.create_call_expression(change_base_types_att, [localization, bases_tuple])
247:             change_bases = [class_obj_inst, change_bases_call]
248:         else:
249:             change_bases = []
250: 
251:         return stypy_functions_copy.flatten_lists(initial_comment, superclass_inst, node,
252:                                              stypy_functions_copy.create_blank_line(), register_expr, change_bases)
253: 
254:     # ################################################ ASSIGNMENTS ###################################################
255: 
256:     def visit_Assign(self, node, context):
257:         # print inspect.stack()[0][3]
258: 
259:         get_value_stmts, temp_value = self.visit_value(node.value, context)
260: 
261:         if type(temp_value) is ast.Tuple:
262:             temp_value = temp_value.elts[0]
263: 
264:         if isinstance(node.targets[0], ast.Name):
265:             name = node.targets[0]
266:             set_type_of_stmts = stypy_functions_copy.create_set_type_of(name.id, temp_value, name.lineno,
267:                                                                    name.col_offset)
268:         else:
269:             get_target_stmts, target_var = self.visit(node.targets[0].value, context)
270:             if type(target_var) is ast.Tuple:
271:                 target_var = target_var.elts[0]
272: 
273:             if isinstance(node.targets[0], ast.Subscript):
274:                 # temp_value: type to add
275:                 # target_var: container
276:                 # node.slice: subscript to calculate
277:                 slice_stmts, slice_var = self.visit(node.targets[0].slice, context)
278:                 set_type_of_stmts = stypy_functions_copy.create_add_stored_type(target_var, slice_var, temp_value,
279:                                                                            node.targets[0].lineno,
280:                                                                            node.targets[0].col_offset)
281:                 set_type_of_stmts = stypy_functions_copy.flatten_lists(get_target_stmts, slice_stmts, set_type_of_stmts)
282: 
283:             else:
284:                 set_type_of_stmts = stypy_functions_copy.create_set_type_of_member(target_var, node.targets[0].attr,
285:                                                                               temp_value,
286:                                                                               node.targets[0].lineno,
287:                                                                               node.targets[0].col_offset)
288: 
289:                 set_type_of_stmts = stypy_functions_copy.flatten_lists(get_target_stmts, set_type_of_stmts)
290: 
291:         return stypy_functions_copy.flatten_lists(get_value_stmts, set_type_of_stmts)
292: 
293:     # ################################################ PASS NODES #####################################################
294: 
295:     def visit_Pass(self, node, context):
296:         return node
297: 
298:     # ################################################ IF #####################################################
299: 
300:     def visit_If(self, node, context):
301:         # print inspect.stack()[0][3]
302: 
303:         if_stmt_body = []
304:         if_stmt_orelse = []
305: 
306:         begin_if_comment = stypy_functions_copy.create_blank_line()
307: 
308:         is_an_idiom, left_stmts_tuple, rigth_stmts_tuple, idiom_name = idioms_copy.is_recognized_idiom(node.test, self,
309:                                                                                                   context)
310: 
311:         if is_an_idiom:
312:             condition_comment = stypy_functions_copy.create_src_comment(
313:                 "Type idiom detected: calculating its left and rigth part", node.lineno)
314:             # Statements for the left part of the idiom
315:             if_stmt_body += left_stmts_tuple[0]
316:             # Statements for the right part of the idiom
317:             if_stmt_body += rigth_stmts_tuple[0]
318: 
319:             test_condition_call = []
320:             condition_stmt = []
321:             if_stmt_body.append(stypy_functions_copy.create_blank_line())
322:         else:
323:             # Process conditional expression of the if
324:             condition_stmt, if_stmt_test = self.visit(node.test, context)
325: 
326:             # Test the type of the if condition
327:             condition_comment = stypy_functions_copy.create_src_comment("Testing the type of an if condition", node.lineno)
328:             attribute = core_language_copy.create_Name("is_suitable_condition")
329:             localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
330:             test_condition_call = functions_copy.create_call_expression(attribute, [localization, if_stmt_test])
331: 
332:         more_types_temp_var = None
333:         if is_an_idiom:
334:             idiom_if_func = core_language_copy.create_Name(idioms_copy.get_recognized_idiom_function(idiom_name), node.lineno,
335:                                                       node.col_offset)
336:             call_to_idiom_if_func = functions_copy.create_call(idiom_if_func, [left_stmts_tuple[1], rigth_stmts_tuple[1]])
337: 
338:             may_be_type_temp_var = stypy_functions_copy.new_temp_Name(False, idioms_copy.may_be_var_name, node.lineno,
339:                                                                  node.col_offset)
340:             more_types_temp_var = stypy_functions_copy.new_temp_Name(False, idioms_copy.more_types_var_name, node.lineno,
341:                                                                 node.col_offset)
342:             if_func_ret_type_tuple = core_language_copy.create_type_tuple(may_be_type_temp_var, more_types_temp_var)
343:             may_be_type_assignment = core_language_copy.create_Assign(if_func_ret_type_tuple, call_to_idiom_if_func)
344:             if_stmt_body.append(stypy_functions_copy.flatten_lists(may_be_type_assignment))
345: 
346:             # Create first idiom if
347:             idiom_first_if_body = []
348:             if_may_be = conditional_statements_copy.create_if(may_be_type_temp_var, idiom_first_if_body)
349:             if_stmt_body.append(if_may_be)
350: 
351:             # Create second idiom if
352:             idiom_more_types_body = []
353:             if_more_types = conditional_statements_copy.create_if(more_types_temp_var, idiom_more_types_body)
354: 
355:             # Begin the second if body
356:             idiom_more_types_body.append(stypy_functions_copy.create_src_comment("Runtime conditional SSA", node.lineno))
357:             clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
358:             idiom_more_types_body.append(clone_stmt1)
359: 
360:             # Needed to remove the "used before assignment" warning in the generated body: Basically we store the
361:             # existing type store into the temp var name instead of cloning it.
362:             may_be_type_assignment = core_language_copy.create_Assign(type_store_var1, core_language_copy.create_Name(
363:                 stypy_functions_copy.default_module_type_store_var_name))
364:             if_more_types.orelse = [may_be_type_assignment]
365: 
366:             idiom_first_if_body.append(if_more_types)  # Second if goes inside first one
367: 
368:             # Set the type of the condition var according to the identified idiom
369: 
370:             set_type = idioms_copy.set_type_of_idiom_var(idiom_name, "if", node.test, rigth_stmts_tuple[1], node.lineno,
371:                                                     node.col_offset)
372:             if not len(set_type) == 0:
373:                 idiom_first_if_body.append(set_type)
374: 
375:             body_stmts_location = idiom_first_if_body
376:         else:
377:             # Begin the if body
378:             if_stmt_body.append(stypy_functions_copy.create_src_comment("SSA begins for if statement", node.lineno))
379:             clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
380:             if_stmt_body.append(clone_stmt1)
381:             body_stmts_location = if_stmt_body
382: 
383:         # Process if body sentences
384:         body_stmts_location.extend(self.__visit_instruction_body(node.body, context))
385: 
386:         # Process else branch
387:         if len(node.orelse) > 0:
388:             if is_an_idiom:
389:                 idiom_more_types_body_2 = []
390:                 if_more_types_2 = conditional_statements_copy.create_if(more_types_temp_var, idiom_more_types_body_2)
391:                 # Begin the third if body
392:                 idiom_more_types_body_2.append(
393:                     stypy_functions_copy.create_src_comment("Runtime conditional SSA for else branch", node.lineno))
394:                 clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
395:                 idiom_more_types_body_2.append(clone_stmt2)
396:                 body_stmts_location.append(if_more_types_2)
397:                 body_stmts_location = if_stmt_body  # Return to the parent sentence trunk of the function
398: 
399:                 # Process else with idioms_copy part:
400:                 # Create first idiom if
401:                 idiom_first_if_body_else = []
402: 
403:                 or_cond = ast.BoolOp()
404:                 or_cond.op = ast.Or()
405:                 not_cond = ast.UnaryOp()
406:                 not_cond.op = ast.Not()
407:                 not_cond.operand = may_be_type_temp_var
408:                 or_cond.values = [not_cond, more_types_temp_var]
409: 
410:                 if_may_be = conditional_statements_copy.create_if(or_cond, idiom_first_if_body_else)
411:                 body_stmts_location.append(if_may_be)
412: 
413:                 # Create second idiom if
414:                 idiom_more_types_body_else = []
415: 
416:                 and_cond = ast.BoolOp()
417:                 and_cond.op = ast.And()
418:                 and_cond.values = [may_be_type_temp_var, more_types_temp_var]
419: 
420:                 if_more_types = conditional_statements_copy.create_if(and_cond, idiom_more_types_body_else)
421:                 # Begin the second if body
422:                 idiom_more_types_body_else.append(
423:                     stypy_functions_copy.create_src_comment("Runtime conditional SSA", node.lineno))
424:                 set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
425:                 idiom_more_types_body_else.append(set_type_store1)
426: 
427:                 idiom_first_if_body_else.append(if_more_types)  # Second if goes inside first one
428: 
429:                 # Set the type of the condition var according to the identified idiom in the else branch
430:                 set_type = idioms_copy.set_type_of_idiom_var(idiom_name, "else", node.test, rigth_stmts_tuple[1],
431:                                                         node.lineno,
432:                                                         node.col_offset)
433: 
434:                 idiom_first_if_body_else.append(set_type)
435:                 body_stmts_location = idiom_first_if_body_else
436:             else:
437:                 if_stmt_body.append(
438:                     stypy_functions_copy.create_src_comment("SSA branch for the else part of an if statement", node.lineno))
439:                 clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
440:                 if_stmt_body.append(clone_stmt2)
441: 
442:                 set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
443:                 if_stmt_body.append(set_type_store1)
444:                 body_stmts_location = if_stmt_body
445: 
446:             # Process else body sentences
447:             body_stmts_location.extend(self.__visit_instruction_body(node.orelse, context))
448: 
449:         else:
450:             clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
451:             body_stmts_location.append(clone_stmt2)
452:             # No else means that the after-if type store is the one that is currently on use and the
453:             # pre-if type store is the one cloned before. Else type store is None
454:             # type_store_var2 = core_language_copy.create_Name(stypy_functions_copy.default_module_type_store_var_name)
455:             type_store_var3 = core_language_copy.create_Name('None')
456: 
457:         if is_an_idiom:
458:             if len(node.orelse) == 0:
459:                 idiom_more_types_body_final = []
460:                 if_more_types_final = conditional_statements_copy.create_if(more_types_temp_var, idiom_more_types_body_final)
461:                 body_stmts_location.append(if_more_types_final)
462:                 final_stmts = idiom_more_types_body_final
463:             else:
464:                 idiom_more_types_body_final = []
465: 
466:                 and_cond = ast.BoolOp()
467:                 and_cond.op = ast.And()
468:                 and_cond.values = [may_be_type_temp_var, more_types_temp_var]
469: 
470:                 if_more_types_final = conditional_statements_copy.create_if(and_cond, idiom_more_types_body_final)
471:                 body_stmts_location.append(if_more_types_final)
472:                 clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
473:                 idiom_more_types_body_final.append(clone_stmt3)
474: 
475:                 final_stmts = idiom_more_types_body_final
476:         else:
477:             if len(node.orelse) > 0:
478:                 clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
479:                 if_stmt_body.append(clone_stmt3)
480:             final_stmts = if_stmt_body
481: 
482: 
483:         # Join if
484:         final_stmts.append(stypy_functions_copy.create_src_comment("SSA join for if statement", node.lineno))
485:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("ssa_join_with_else_branch",
486:                                                                              [type_store_var1, type_store_var2,
487:                                                                               type_store_var3])
488:         final_stmts.append(join_stmt)
489: 
490:         # Calculate the final type store
491:         set_type_store2 = stypy_functions_copy.create_set_type_store(final_type_store)
492:         final_stmts.append(set_type_store2)
493: 
494:         # Unify all if body statements
495:         all_if_stmts = if_stmt_body
496: 
497:         # Unify all if sentences
498:         if_stmt = stypy_functions_copy.flatten_lists(condition_comment, test_condition_call, all_if_stmts)
499: 
500:         end_if_comment = stypy_functions_copy.create_blank_line()
501: 
502:         return stypy_functions_copy.flatten_lists(begin_if_comment,
503:                                              condition_stmt,
504:                                              if_stmt,
505:                                              end_if_comment)
506: 
507:     # ################################################ FOR #####################################################
508: 
509:     def visit_For(self, node, context):
510:         # print inspect.stack()[0][3]
511: 
512:         for_stmt_body = []
513:         for_stmt_orelse = []
514: 
515:         begin_for_comment = stypy_functions_copy.create_blank_line()
516: 
517:         # Process for test
518:         iter_stmt, for_stmt_test = self.visit(node.iter, context)
519: 
520:         # Check if the for statement is suitable for iteration
521:         condition_comment = stypy_functions_copy.create_src_comment("Testing the type of a for loop iterable", node.lineno)
522:         loop_test_fname = core_language_copy.create_Name("is_suitable_for_loop_condition")
523:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
524:         condition_call = functions_copy.create_call_expression(loop_test_fname, [localization, for_stmt_test])
525: 
526:         # Get the type of the loop iteration variable and assign it
527:         get_target_comment = stypy_functions_copy.create_src_comment("Getting the type of the for loop variable",
528:                                                                 node.lineno)
529:         for_stmt_body.append(get_target_comment)
530:         loop_target_fname = core_language_copy.create_Name("get_type_of_for_loop_variable")
531:         target_assign_call = functions_copy.create_call(loop_target_fname, [localization, for_stmt_test])
532:         target_assign, target_assign_var = stypy_functions_copy.create_temp_Assign(target_assign_call, node.lineno,
533:                                                                               node.col_offset)
534:         for_stmt_body.append(target_assign)
535: 
536:         if isinstance(node.target, ast.Tuple):
537:             get_elements_call = core_language_copy.create_attribute(target_assign_var.id, "get_elements_type")
538:             assign_target_type = []
539:             for elt in node.target.elts:
540:                 call_to_elements = functions_copy.create_call(get_elements_call, [])
541:                 type_set = stypy_functions_copy.create_set_type_of(elt.id, call_to_elements, node.lineno,
542:                                                               node.col_offset)
543:                 assign_target_type.append(type_set)
544:         else:
545:             assign_target_type = stypy_functions_copy.create_set_type_of(node.target.id, target_assign_var, node.lineno,
546:                                                                     node.col_offset)
547: 
548:         for_stmt_body.append(assign_target_type)
549: 
550:         # For body
551:         for_stmt_body.append(stypy_functions_copy.create_src_comment("SSA begins for a for statement", node.lineno))
552:         clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
553:         for_stmt_body.append(clone_stmt1)
554: 
555:         # Process for body statements
556:         for_stmt_body.extend(self.__visit_instruction_body(node.body, context))
557: 
558:         for_stmt_body.append(
559:             stypy_functions_copy.create_src_comment("SSA branch for the else part of a for statement", node.lineno))
560:         clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
561:         for_stmt_body.append(clone_stmt2)
562: 
563:         # Else part of a for statement
564:         set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
565:         for_stmt_body.append(set_type_store1)
566: 
567:         for_stmt_orelse.extend(self.__visit_instruction_body(node.orelse, context))
568: 
569:         # Join and finish for
570:         for_stmt_orelse.append(stypy_functions_copy.create_src_comment("SSA join for a for statement"))
571:         clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
572:         for_stmt_orelse.append(clone_stmt3)
573: 
574:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("ssa_join_with_else_branch",
575:                                                                              [type_store_var1, type_store_var2,
576:                                                                               type_store_var3])
577:         for_stmt_orelse.append(join_stmt)
578: 
579:         # Assign final type store
580:         set_type_store2 = stypy_functions_copy.create_set_type_store(final_type_store)
581:         for_stmt_orelse.append(set_type_store2)
582: 
583:         for_stmts = for_stmt_body + for_stmt_orelse
584:         for_stmt = stypy_functions_copy.flatten_lists(condition_comment, condition_call, for_stmts)
585: 
586:         end_for_comment = stypy_functions_copy.create_blank_line()
587: 
588:         return stypy_functions_copy.flatten_lists(begin_for_comment,
589:                                              iter_stmt,
590:                                              for_stmt,
591:                                              end_for_comment)
592: 
593:     # ################################################ WHILE #####################################################
594: 
595:     def visit_While(self, node, context):
596:         # print inspect.stack()[0][3]
597: 
598:         while_stmt_body = []
599:         while_stmt_orelse = []
600: 
601:         begin_while_comment = stypy_functions_copy.create_blank_line()
602: 
603:         # Process the condition of the while statement
604:         condition_stmt, while_stmt_test = self.visit(node.test, context)
605: 
606:         # Test the type of the while condition
607:         condition_comment = stypy_functions_copy.create_src_comment("Testing the type of an if condition", node.lineno)
608:         attribute = core_language_copy.create_Name("is_suitable_condition")
609:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
610:         condition_call = functions_copy.create_call_expression(attribute, [localization, while_stmt_test])
611: 
612:         # Process the body of the while statement
613:         while_stmt_body.append(stypy_functions_copy.create_src_comment("SSA begins for while statement", node.lineno))
614:         clone_stmt1, type_store_var1 = stypy_functions_copy.create_clone_type_store()
615:         while_stmt_body.append(clone_stmt1)
616: 
617:         # While body
618:         while_stmt_body.extend(self.__visit_instruction_body(node.body, context))
619: 
620:         # Else part of the while statements
621:         while_stmt_body.append(
622:             stypy_functions_copy.create_src_comment("SSA branch for the else part of a while statement", node.lineno))
623:         clone_stmt2, type_store_var2 = stypy_functions_copy.create_clone_type_store()
624:         while_stmt_body.append(clone_stmt2)
625: 
626:         set_type_store1 = stypy_functions_copy.create_set_type_store(type_store_var1)
627:         while_stmt_body.append(set_type_store1)
628: 
629:         # While else part
630:         while_stmt_orelse.extend(self.__visit_instruction_body(node.orelse, context))
631: 
632:         # Join type stores and finish while
633:         while_stmt_orelse.append(stypy_functions_copy.create_src_comment("SSA join for while statement", node.lineno))
634:         clone_stmt3, type_store_var3 = stypy_functions_copy.create_clone_type_store()
635:         while_stmt_orelse.append(clone_stmt3)
636: 
637:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("ssa_join_with_else_branch",
638:                                                                              [type_store_var1, type_store_var2,
639:                                                                               type_store_var3])
640:         while_stmt_orelse.append(join_stmt)
641: 
642:         # Final type store
643:         set_type_store2 = stypy_functions_copy.create_set_type_store(final_type_store)
644:         while_stmt_orelse.append(set_type_store2)
645: 
646:         all_while_stmts = while_stmt_body + while_stmt_orelse
647:         while_stmt = stypy_functions_copy.flatten_lists(condition_comment, condition_call, all_while_stmts)
648: 
649:         end_while_comment = stypy_functions_copy.create_blank_line()
650:         return stypy_functions_copy.flatten_lists(begin_while_comment,
651:                                              condition_stmt,
652:                                              while_stmt,
653:                                              end_while_comment)
654: 
655:     # ################################################ EXCEPTIONS #####################################################
656: 
657:     def visit_TryExcept(self, node, context):
658:         # print inspect.stack()[0][3]
659: 
660:         try_except_stmts = []
661:         handler_type_stores = []
662:         begin_except_comment = stypy_functions_copy.create_blank_line()
663: 
664:         # Begin the exception body
665:         try_except_stmts.append(stypy_functions_copy.create_src_comment("SSA begins for try-except statement", node.lineno))
666:         clone_stmt1, pre_try_type_store = stypy_functions_copy.create_clone_type_store()
667:         try_except_stmts.append(clone_stmt1)
668: 
669:         # Process exception body sentences
670:         try_except_stmts.extend(self.__visit_instruction_body(node.body, context))
671: 
672:         try_except_stmts.append(
673:             stypy_functions_copy.create_src_comment("SSA branch for the except part of a try statement", node.lineno))
674:         clone_stmt2, post_try_type_store = stypy_functions_copy.create_clone_type_store()
675:         try_except_stmts.append(clone_stmt2)
676: 
677:         # Process all except handlers
678:         for handler in node.handlers:
679:             if handler.type is None:
680:                 except_handler = "<any exception>"
681:             else:
682:                 except_handler = handler.type.id
683: 
684:             try_except_stmts.append(stypy_functions_copy.create_src_comment(
685:                 "SSA branch for the except '{0}' branch of a try statement".format(except_handler), node.lineno))
686: 
687:             set_type_store_handler = stypy_functions_copy.create_set_type_store(pre_try_type_store)
688:             try_except_stmts.append(set_type_store_handler)
689: 
690:             if not handler.type is None and not handler.name is None:
691:                 try_except_stmts.append(stypy_functions_copy.create_src_comment("Storing handler type"))
692:                 handler_type_stmts, handle_type_var = self.visit(handler.type, context)
693:                 handler_name_assign = stypy_functions_copy.create_set_type_of(handler.name.id, handle_type_var,
694:                                                                          handler.lineno,
695:                                                                          handler.col_offset)
696:                 try_except_stmts.append(handler_type_stmts)
697:                 try_except_stmts.append(handler_name_assign)
698: 
699:             # Process except handler body sentences
700:             try_except_stmts.extend(self.__visit_instruction_body(handler.body, context))
701: 
702:             clone_stmt_handler, type_store_except_handler = stypy_functions_copy.create_clone_type_store()
703:             try_except_stmts.append(clone_stmt_handler)
704:             handler_type_stores.append(type_store_except_handler)
705: 
706:         # Else branch
707:         try_except_stmts.append(stypy_functions_copy.create_src_comment(
708:             "SSA branch for the else branch of a try statement", node.lineno))
709:         set_type_store_handler = stypy_functions_copy.create_set_type_store(pre_try_type_store)
710:         try_except_stmts.append(set_type_store_handler)
711: 
712:         # Process except handler body sentences
713:         if len(node.orelse) > 0:
714:             try_except_stmts.extend(self.__visit_instruction_body(node.orelse, context))
715: 
716:             clone_stmt_handler, type_store_else_handler = stypy_functions_copy.create_clone_type_store()
717:             try_except_stmts.append(clone_stmt_handler)
718:             handler_type_stores.append(type_store_else_handler)
719: 
720:         # Join try
721:         try_except_stmts.append(stypy_functions_copy.create_src_comment("SSA join for try-except statement", node.lineno))
722:         join_stmt, final_type_store = stypy_functions_copy.create_join_type_store("join_exception_block",
723:                                                                              [pre_try_type_store, post_try_type_store,
724:                                                                               core_language_copy.create_Name(
725:                                                                                   "None")] + handler_type_stores)
726:         try_except_stmts.append(join_stmt)
727: 
728:         # Calculate the final type store
729:         set_type_store_final = stypy_functions_copy.create_set_type_store(final_type_store)
730:         try_except_stmts.append(set_type_store_final)
731: 
732:         # Unify all if sentences
733:         all_try_except_stmt = stypy_functions_copy.flatten_lists(begin_except_comment, try_except_stmts)
734: 
735:         end_except_comment = stypy_functions_copy.create_blank_line()
736: 
737:         return stypy_functions_copy.flatten_lists(begin_except_comment,
738:                                              all_try_except_stmt,
739:                                              end_except_comment)
740: 
741:     def visit_TryFinally(self, node, context):
742:         # print inspect.stack()[0][3]
743:         try_finally_stmts = []
744: 
745:         initial_comment = stypy_functions_copy.create_src_comment("Try-finally block", node.lineno)
746:         try_finally_stmts.append(initial_comment)
747: 
748:         # Process exception body sentences
749:         try_finally_stmts.extend(self.__visit_instruction_body(node.body, context))
750: 
751:         try_finally_stmts.append(stypy_functions_copy.create_blank_line())
752:         finally_comment = stypy_functions_copy.create_src_comment("finally branch of the try-finally block",
753:                                                              node.lineno)
754:         try_finally_stmts.append(finally_comment)
755: 
756:         # Process exception body sentences
757:         try_finally_stmts.extend(self.__visit_instruction_body(node.finalbody, context))
758: 
759:         return stypy_functions_copy.flatten_lists(stypy_functions_copy.create_blank_line(),
760:                                              try_finally_stmts,
761:                                              stypy_functions_copy.create_blank_line())
762: 
763:     # ################################################ IMPORTS ##########################################
764: 
765:     def visit_Import(self, node, context):
766:         # print inspect.stack()[0][3]
767:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
768:         call_stmts = []
769: 
770:         import_func = core_language_copy.create_Name("import_elements_from_external_module")
771: 
772:         dir_name = os.path.dirname(self.file_name)
773:         alias_stmt = []
774:         for alias in node.names:
775:             call_stmts.append(
776:                 stypy_functions_copy.create_src_comment("Importing '{0}' module".format(alias.name), node.lineno))
777:             stypy_functions_copy.assign_line_and_column(alias, node)
778:             alias_stmt, alias_var = self.visit(alias, context)
779:             call = functions_copy.create_call_expression(import_func, [localization,
780:                                                                  # core_language_copy.create_str(dir_name),
781:                                                                   alias_var,  # core_language_copy.create_str(alias.name),
782:                                                                   core_language_copy.create_Name("type_store")])
783:             call_stmts.append(call)
784: 
785:         return stypy_functions_copy.flatten_lists(call_stmts, alias_stmt,
786:                                              stypy_functions_copy.create_blank_line())
787: 
788:     def visit_ImportFrom(self, node, context):
789:         # print inspect.stack()[0][3]
790:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
791:         call_stmts = []
792: 
793:         call_stmts.append(
794:             stypy_functions_copy.create_src_comment("Importing from '{0}' module".format(node.module), node.lineno))
795:         import_func = core_language_copy.create_Name("import_elements_from_external_module")
796: 
797:         dir_name = os.path.dirname(self.file_name)
798:         elements = []
799:         alias_stmt = []
800:         for alias in node.names:
801:             stypy_functions_copy.assign_line_and_column(alias, node)
802:             alias_stmt, alias_var = self.visit(alias, context)
803:             elements.append(alias_var)  # core_language_copy.create_str(alias.name))
804: 
805:         starargs = data_structures_copy.create_list(elements)
806:         call = functions_copy.create_call_expression(import_func, [localization,
807:                                                               #core_language_copy.create_str(dir_name),
808:                                                               core_language_copy.create_str(node.module),
809:                                                               core_language_copy.create_Name("type_store")],
810:                                                 starargs=starargs)
811:         call_stmts.append(call)
812: 
813:         return stypy_functions_copy.flatten_lists(call_stmts, alias_stmt,
814:                                              stypy_functions_copy.create_blank_line())
815: 
816:     # #################################################### PRINT ######################################################
817: 
818:     def visit_Print(self, node, context):
819:         # print inspect.stack()[0][3]
820: 
821:         print_stmts = self.__visit_instruction_body(node.values, context)
822: 
823:         return stypy_functions_copy.flatten_lists(print_stmts)
824: 
825:     # #################################################### GLOBAL #####################################################
826: 
827:     def visit_Global(self, node, context):
828:         # print inspect.stack()[0][3]
829:         global_stmts = [stypy_functions_copy.create_src_comment("Marking variables as global", node.lineno)]
830:         mark_function = core_language_copy.create_attribute('type_store', 'mark_as_global', node.lineno, node.col_offset)
831:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
832:         for name in node.names:
833:             mark_call = functions_copy.create_call_expression(mark_function, [localization, core_language_copy.create_str(name)])
834:             global_stmts.append(mark_call)
835: 
836:         return stypy_functions_copy.flatten_lists(global_stmts)
837: 
838:     # ######################################### BREAK AND CONTINUE ####################################################
839: 
840:     def visit_Break(self, node, context):
841:         # print inspect.stack()[0][3]
842:         return []
843: 
844:     def visit_Continue(self, node, context):
845:         # print inspect.stack()[0][3]
846:         return []
847: 
848:     # ######################################### DELETE #######################################################
849: 
850:     def visit_Delete(self, node, context):
851:         # print inspect.stack()[0][3]
852:         stmts = []
853: 
854:         comment = stypy_functions_copy.create_src_comment("Deleting a member")
855:         for target in node.targets:
856:             # Is an attribute of a class or module
857:             if type(target) is ast.Attribute:
858:                 parent = target.value.id
859:                 attr = core_language_copy.create_str(target.attr)
860:             else:
861:                 # Is a name (__builtins__)
862:                 parent = '__builtins__'
863:                 attr = target
864: 
865:             parent_stmts, parent_var = stypy_functions_copy.create_get_type_of(parent, node.lineno, node.col_offset)
866: 
867:             delete_func = core_language_copy.create_attribute(parent_var, 'delete_member',
868:                                                          line=node.lineno,
869:                                                          column=node.col_offset)
870: 
871:             localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
872:             delete_member_call = functions_copy.create_call_expression(delete_func,
873:                                                                   [localization, attr])
874: 
875:             stmts += stypy_functions_copy.flatten_lists(comment, parent_stmts, delete_member_call)
876: 
877:         return stmts
878: 
879:     # ######################################### ASSERT #######################################################
880: 
881:     def visit_Assert(self, node, context):
882:         comment = stypy_functions_copy.create_src_comment("Evaluating assert statement condition")
883:         stmts, var = self.visit(node.test, context)
884:         return stypy_functions_copy.flatten_lists(comment, stmts)
885: 
886:     def visit_Exec(self, node, context):
887:         src_comment = stypy_functions_copy.create_src_comment("Dynamic code evaluation using an exec statement")
888:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
889:         type_check_func = core_language_copy.create_Name('ensure_var_of_types',
890:                                                     line=node.lineno,
891:                                                     column=node.col_offset)
892: 
893:         body_stmts, body_var = self.visit(node.body, context)
894: 
895:         description = core_language_copy.create_str("exec parameter")
896:         string_type = core_language_copy.create_str("StringType")
897:         file_type = core_language_copy.create_str("FileType")
898:         code_type = core_language_copy.create_str("CodeType")
899:         check_params_call = functions_copy.create_call_expression(type_check_func,
900:                                                              [localization, body_var, description,
901:                                                               string_type,
902:                                                               file_type,
903:                                                               code_type])
904: 
905:         unsupported_feature_call = stypy_functions_copy.create_unsupported_feature_call(localization, "exec",
906:                                                                                    "Dynamic code evaluation using exec is not yet supported by stypy",
907:                                                                                    node.lineno, node.col_offset)
908: 
909:         return stypy_functions_copy.flatten_lists(src_comment, body_stmts, check_params_call, unsupported_feature_call)
910: 
911:     def visit_Yield(self, node, context):
912:         src_comment = stypy_functions_copy.create_src_comment("Creating a generator")
913:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
914:         generator_stored_type_stmts, generator_stored_type_var = self.visit(node.value, context)
915: 
916:         types_module = core_language_copy.create_str("types")
917:         generator_type = core_language_copy.create_str("GeneratorType")
918:         get_type_func = core_language_copy.create_Name("get_python_api_type")
919:         get_generator_call = functions_copy.create_call(get_type_func,
920:                                                    [localization, types_module, generator_type])
921: 
922:         generator_stmts, generator_type_var = stypy_functions_copy.create_temp_Assign(get_generator_call, node.lineno,
923:                                                                                  node.col_offset)
924: 
925:         # Assign to the generator its stored type
926:         store_type_func = core_language_copy.create_attribute(generator_type_var, 'set_elements_type',
927:                                                          line=node.lineno,
928:                                                          column=node.col_offset)
929: 
930:         store_type_call = functions_copy.create_call_expression(store_type_func, [localization, generator_stored_type_var])
931: 
932:         ret_assign = stypy_functions_copy.assign_as_return_type(generator_type_var)
933: 
934:         return stypy_functions_copy.flatten_lists(src_comment, generator_stored_type_stmts, generator_stmts, store_type_call,
935:                                              ret_assign)
936: 
937:     def visit_Raise(self, node, context):
938:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
939: 
940:         type_stmts, type_var = self.visit(node.type, context)
941: 
942:         type_check_func = core_language_copy.create_Name('ensure_var_of_types',
943:                                                     line=node.lineno,
944:                                                     column=node.col_offset)
945: 
946:         description = core_language_copy.create_str("raise parameter")
947:         admitted_type = core_language_copy.create_Name('Exception')
948: 
949:         check_params_call = functions_copy.create_call_expression(type_check_func,
950:                                                              [localization, type_var, description,
951:                                                               admitted_type])
952: 
953:         return stypy_functions_copy.flatten_lists(type_stmts, check_params_call)
954: 
955:     def visit_With(self, node, context):
956:         localization = stypy_functions_copy.create_localization(node.lineno, node.col_offset)
957:         type_check_func = core_language_copy.create_Name('ensure_var_has_members',
958:                                                     line=node.lineno,
959:                                                     column=node.col_offset)
960: 
961:         context_stmts, context_var = self.visit(node.context_expr, context)
962: 
963:         description = core_language_copy.create_str("with parameter")
964: 
965:         enter = core_language_copy.create_str("__enter__")
966:         exit = core_language_copy.create_str("__exit__")
967:         check_params_call = functions_copy.create_call(type_check_func,
968:                                                   [localization, context_var, description,
969:                                                    enter,
970:                                                    exit,
971:                                                    ])
972: 
973:         call_test_stmts, call_test_var = stypy_functions_copy.create_temp_Assign(check_params_call, line=node.lineno,
974:                                                                             column=node.col_offset)
975:         # Call __enter__
976:         enter_comment = stypy_functions_copy.create_src_comment("Calling the __enter__ method to initiate a with section")
977:         enter_method, enter_var = stypy_functions_copy.create_get_type_of_member(context_var, '__enter__', node.lineno,
978:                                                                             node.col_offset)
979:         enter_method_invoke = core_language_copy.create_attribute(enter_var, 'invoke', node.lineno, node.col_offset)
980:         enter_method_call, call_var = stypy_functions_copy.create_temp_Assign(
981:             functions_copy.create_call(enter_method_invoke, [localization]), node.lineno, node.col_offset)
982:         body_stmts = [enter_comment, enter_method, enter_method_call]
983:         if node.optional_vars is not None:
984:             assing_to_var = stypy_functions_copy.create_set_type_of(node.optional_vars.id, call_var, node.lineno,
985:                                                                node.col_offset)
986:             body_stmts += [assing_to_var]
987: 
988:         body_stmts += self.__visit_instruction_body(node.body, context)
989: 
990:         # Call __exit__
991:         exit_comment = stypy_functions_copy.create_src_comment("Calling the __exit__ method to finish a with section")
992:         exit_method, exit_var = stypy_functions_copy.create_get_type_of_member(context_var, '__exit__', node.lineno,
993:                                                                           node.col_offset)
994:         exit_method_invoke = core_language_copy.create_attribute(exit_var, 'invoke', node.lineno, node.col_offset)
995:         none_type = core_language_copy.create_Name('None')
996:         exit_method_call, call_var = stypy_functions_copy.create_temp_Assign(functions_copy.create_call(exit_method_invoke,
997:                                                                                               [localization,
998:                                                                                                none_type,
999:                                                                                                none_type,
1000:                                                                                                none_type]),
1001:                                                                         node.lineno, node.col_offset)
1002: 
1003:         body_stmts += [exit_comment, exit_method, exit_method_call]
1004: 
1005:         with_if = conditional_statements_copy.create_if(call_test_var, body_stmts)
1006: 
1007:         return stypy_functions_copy.flatten_lists(context_stmts, call_test_stmts, with_if)
1008: 
1009:     # Integrated into visit_FunctionDef
1010:     def visit_arguments(self, node, context):
1011:         return node
1012: 

"""

# Import the stypy library necessary elements
from stypy.type_inference_programs.type_inference_programs_imports import *

# Create the module type store
module_type_store = Context(None, __file__)

# ################# Begin of the type inference program ##################

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 1, 0))

# 'import os' statement (line 1)
import os

import_module(stypy.reporting.localization.Localization(__file__, 1, 0), 'os', os, module_type_store)

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 3, 0))

# 'from testing.test_programs.stypy_code_copy.stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import ' statement (line 3)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/test_programs/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_22408 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy')

if (type(import_22408) is not StypyTypeError):

    if (import_22408 != 'pyd_module'):
        __import__(import_22408)
        sys_modules_22409 = sys.modules[import_22408]
        import_from_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', sys_modules_22409.module_type_store, module_type_store, ['*'])
        nest_module(stypy.reporting.localization.Localization(__file__, 3, 0), __file__, sys_modules_22409, sys_modules_22409.module_type_store, module_type_store)
    else:
        from testing.test_programs.stypy_code_copy.stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy import *

        import_from_module(stypy.reporting.localization.Localization(__file__, 3, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', None, module_type_store, ['*'], None)

else:
    # Assigning a type to the variable 'testing.test_programs.stypy_code_copy.stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy' (line 3)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 3, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.code_generation_copy.type_inference_programs_copy.aux_functions_copy', import_22408)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/test_programs/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 4, 0))

# 'from testing.test_programs.stypy_code_copy.stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, conditional_statements_copy, idioms_copy' statement (line 4)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/test_programs/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_22410 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy')

if (type(import_22410) is not StypyTypeError):

    if (import_22410 != 'pyd_module'):
        __import__(import_22410)
        sys_modules_22411 = sys.modules[import_22410]
        import_from_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', sys_modules_22411.module_type_store, module_type_store, ['core_language_copy', 'functions_copy', 'stypy_functions_copy', 'data_structures_copy', 'conditional_statements_copy', 'idioms_copy'])
        nest_module(stypy.reporting.localization.Localization(__file__, 4, 0), __file__, sys_modules_22411, sys_modules_22411.module_type_store, module_type_store)
    else:
        from testing.test_programs.stypy_code_copy.stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy import core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, conditional_statements_copy, idioms_copy

        import_from_module(stypy.reporting.localization.Localization(__file__, 4, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', None, module_type_store, ['core_language_copy', 'functions_copy', 'stypy_functions_copy', 'data_structures_copy', 'conditional_statements_copy', 'idioms_copy'], [core_language_copy, functions_copy, stypy_functions_copy, data_structures_copy, conditional_statements_copy, idioms_copy])

else:
    # Assigning a type to the variable 'testing.test_programs.stypy_code_copy.stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy' (line 4)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 4, 0), 'testing.test_programs.stypy_code_copy.stypy_copy.visitor_copy.type_inference_copy.visitor_utils_copy', import_22410)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/test_programs/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 6, 0))

# 'import value_visitor_copy' statement (line 6)
update_path_to_current_file_folder('C:/Users/redon/PycharmProjects/stypyV2/testing/test_programs/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')
import_22412 = generate_type_inference_code_for_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy')

if (type(import_22412) is not StypyTypeError):

    if (import_22412 != 'pyd_module'):
        __import__(import_22412)
        sys_modules_22413 = sys.modules[import_22412]
        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy', sys_modules_22413.module_type_store, module_type_store)
    else:
        import value_visitor_copy

        import_module(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy', value_visitor_copy, module_type_store)

else:
    # Assigning a type to the variable 'value_visitor_copy' (line 6)
    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 6, 0), 'value_visitor_copy', import_22412)

remove_current_file_folder_from_path('C:/Users/redon/PycharmProjects/stypyV2/testing/test_programs/stypy_code_copy/stypy_copy/visitor_copy/type_inference_copy/')

stypy.reporting.localization.Localization.set_current(stypy.reporting.localization.Localization(__file__, 7, 0))

# 'import ast' statement (line 7)
import ast

import_module(stypy.reporting.localization.Localization(__file__, 7, 0), 'ast', ast, module_type_store)

# Declaration of the 'StatementVisitor' class
# Getting the type of 'ast' (line 9)
ast_22414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 9, 23), 'ast')
# Obtaining the member 'NodeVisitor' of a type (line 9)
NodeVisitor_22415 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 9, 23), ast_22414, 'NodeVisitor')

class StatementVisitor(NodeVisitor_22415, ):
    str_22416 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 13, (-1)), 'str', '\n    Visitor for statement nodes, that are AST nodes that return only statement lists. If when processing a statement\n    node one of its children nodes is a value node, a ValueVisitor is automatically run to process this child node.\n    ')

    @norecursion
    def __init__(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__init__'
        module_type_store = module_type_store.open_function_context('__init__', 15, 4, False)
        # Assigning a type to the variable 'self' (line 16)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 16, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.__init__', ['filename'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return

        # Initialize method data
        init_call_information(module_type_store, '__init__', localization, ['filename'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__init__(...)' code ##################

        
        # Assigning a Name to a Attribute (line 16):
        
        # Assigning a Name to a Attribute (line 16):
        # Getting the type of 'filename' (line 16)
        filename_22417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 25), 'filename')
        # Getting the type of 'self' (line 16)
        self_22418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 16, 8), 'self')
        # Setting the type of the member 'file_name' of a type (line 16)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 16, 8), self_22418, 'file_name', filename_22417)
        
        # ################# End of '__init__(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()


    @norecursion
    def visit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit'
        module_type_store = module_type_store.open_function_context('visit', 18, 4, False)
        # Assigning a type to the variable 'self' (line 19)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 19, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit')
        StatementVisitor.visit.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit(...)' code ##################

        str_22419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 19, 8), 'str', 'Visit a node.')
        
        # Assigning a BinOp to a Name (line 20):
        
        # Assigning a BinOp to a Name (line 20):
        str_22420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 20, 17), 'str', 'visit_')
        # Getting the type of 'node' (line 20)
        node_22421 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 20, 28), 'node')
        # Obtaining the member '__class__' of a type (line 20)
        class___22422 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 28), node_22421, '__class__')
        # Obtaining the member '__name__' of a type (line 20)
        name___22423 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 20, 28), class___22422, '__name__')
        # Applying the binary operator '+' (line 20)
        result_add_22424 = python_operator(stypy.reporting.localization.Localization(__file__, 20, 17), '+', str_22420, name___22423)
        
        # Assigning a type to the variable 'method' (line 20)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 20, 8), 'method', result_add_22424)
        
        # Assigning a Call to a Name (line 21):
        
        # Assigning a Call to a Name (line 21):
        
        # Call to getattr(...): (line 21)
        # Processing the call arguments (line 21)
        # Getting the type of 'self' (line 21)
        self_22426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 26), 'self', False)
        # Getting the type of 'method' (line 21)
        method_22427 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 32), 'method', False)
        # Getting the type of 'self' (line 21)
        self_22428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 40), 'self', False)
        # Obtaining the member 'generic_visit' of a type (line 21)
        generic_visit_22429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 21, 40), self_22428, 'generic_visit')
        # Processing the call keyword arguments (line 21)
        kwargs_22430 = {}
        # Getting the type of 'getattr' (line 21)
        getattr_22425 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 21, 18), 'getattr', False)
        # Calling getattr(args, kwargs) (line 21)
        getattr_call_result_22431 = invoke(stypy.reporting.localization.Localization(__file__, 21, 18), getattr_22425, *[self_22426, method_22427, generic_visit_22429], **kwargs_22430)
        
        # Assigning a type to the variable 'visitor' (line 21)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 21, 8), 'visitor', getattr_call_result_22431)
        
        # Getting the type of 'visitor' (line 22)
        visitor_22432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 11), 'visitor')
        # Getting the type of 'self' (line 22)
        self_22433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 22, 22), 'self')
        # Obtaining the member 'generic_visit' of a type (line 22)
        generic_visit_22434 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 22, 22), self_22433, 'generic_visit')
        # Applying the binary operator '==' (line 22)
        result_eq_22435 = python_operator(stypy.reporting.localization.Localization(__file__, 22, 11), '==', visitor_22432, generic_visit_22434)
        
        # Testing if the type of an if condition is none (line 22)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 22, 8), result_eq_22435):
            pass
        else:
            
            # Testing the type of an if condition (line 22)
            if_condition_22436 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 22, 8), result_eq_22435)
            # Assigning a type to the variable 'if_condition_22436' (line 22)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 22, 8), 'if_condition_22436', if_condition_22436)
            # SSA begins for if statement (line 22)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to visitor(...): (line 23)
            # Processing the call arguments (line 23)
            # Getting the type of 'node' (line 23)
            node_22438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 27), 'node', False)
            # Getting the type of 'context' (line 23)
            context_22439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 33), 'context', False)
            
            # Obtaining an instance of the builtin type 'list' (line 23)
            list_22440 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 23, 43), 'list')
            # Adding type elements to the builtin type 'list' instance (line 23)
            # Adding element type (line 23)
            # Getting the type of 'method' (line 23)
            method_22441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 44), 'method', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 23, 43), list_22440, method_22441)
            
            # Applying the binary operator '+' (line 23)
            result_add_22442 = python_operator(stypy.reporting.localization.Localization(__file__, 23, 33), '+', context_22439, list_22440)
            
            # Processing the call keyword arguments (line 23)
            kwargs_22443 = {}
            # Getting the type of 'visitor' (line 23)
            visitor_22437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 23, 19), 'visitor', False)
            # Calling visitor(args, kwargs) (line 23)
            visitor_call_result_22444 = invoke(stypy.reporting.localization.Localization(__file__, 23, 19), visitor_22437, *[node_22438, result_add_22442], **kwargs_22443)
            
            # Assigning a type to the variable 'stypy_return_type' (line 23)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 23, 12), 'stypy_return_type', visitor_call_result_22444)
            # SSA join for if statement (line 22)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to visitor(...): (line 24)
        # Processing the call arguments (line 24)
        # Getting the type of 'node' (line 24)
        node_22446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 23), 'node', False)
        # Getting the type of 'context' (line 24)
        context_22447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 29), 'context', False)
        # Processing the call keyword arguments (line 24)
        kwargs_22448 = {}
        # Getting the type of 'visitor' (line 24)
        visitor_22445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 24, 15), 'visitor', False)
        # Calling visitor(args, kwargs) (line 24)
        visitor_call_result_22449 = invoke(stypy.reporting.localization.Localization(__file__, 24, 15), visitor_22445, *[node_22446, context_22447], **kwargs_22448)
        
        # Assigning a type to the variable 'stypy_return_type' (line 24)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 24, 8), 'stypy_return_type', visitor_call_result_22449)
        
        # ################# End of 'visit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit' in the type store
        # Getting the type of 'stypy_return_type' (line 18)
        stypy_return_type_22450 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 18, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22450)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit'
        return stypy_return_type_22450


    @norecursion
    def generic_visit(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'generic_visit'
        module_type_store = module_type_store.open_function_context('generic_visit', 26, 4, False)
        # Assigning a type to the variable 'self' (line 27)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.generic_visit')
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.generic_visit.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.generic_visit', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'generic_visit', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'generic_visit(...)' code ##################

        
        # Call to hasattr(...): (line 27)
        # Processing the call arguments (line 27)
        # Getting the type of 'value_visitor_copy' (line 27)
        value_visitor_copy_22452 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 19), 'value_visitor_copy', False)
        # Obtaining the member 'ValueVisitor' of a type (line 27)
        ValueVisitor_22453 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 19), value_visitor_copy_22452, 'ValueVisitor')
        
        # Obtaining the type of the subscript
        int_22454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 27, 60), 'int')
        # Getting the type of 'context' (line 27)
        context_22455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 52), 'context', False)
        # Obtaining the member '__getitem__' of a type (line 27)
        getitem___22456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 27, 52), context_22455, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 27)
        subscript_call_result_22457 = invoke(stypy.reporting.localization.Localization(__file__, 27, 52), getitem___22456, int_22454)
        
        # Processing the call keyword arguments (line 27)
        kwargs_22458 = {}
        # Getting the type of 'hasattr' (line 27)
        hasattr_22451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 27, 11), 'hasattr', False)
        # Calling hasattr(args, kwargs) (line 27)
        hasattr_call_result_22459 = invoke(stypy.reporting.localization.Localization(__file__, 27, 11), hasattr_22451, *[ValueVisitor_22453, subscript_call_result_22457], **kwargs_22458)
        
        # Testing if the type of an if condition is none (line 27)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 27, 8), hasattr_call_result_22459):
            
            # Call to Exception(...): (line 30)
            # Processing the call arguments (line 30)
            str_22472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 28), 'str', 'SENTENCE VISITOR: ')
            
            # Obtaining the type of the subscript
            int_22473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 59), 'int')
            # Getting the type of 'context' (line 30)
            context_22474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 51), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 30)
            getitem___22475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 51), context_22474, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 30)
            subscript_call_result_22476 = invoke(stypy.reporting.localization.Localization(__file__, 30, 51), getitem___22475, int_22473)
            
            # Applying the binary operator '+' (line 30)
            result_add_22477 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 28), '+', str_22472, subscript_call_result_22476)
            
            str_22478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 65), 'str', ' is not yet implemented')
            # Applying the binary operator '+' (line 30)
            result_add_22479 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 63), '+', result_add_22477, str_22478)
            
            # Processing the call keyword arguments (line 30)
            kwargs_22480 = {}
            # Getting the type of 'Exception' (line 30)
            Exception_22471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 18), 'Exception', False)
            # Calling Exception(args, kwargs) (line 30)
            Exception_call_result_22481 = invoke(stypy.reporting.localization.Localization(__file__, 30, 18), Exception_22471, *[result_add_22479], **kwargs_22480)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 30, 12), Exception_call_result_22481, 'raise parameter', BaseException)
        else:
            
            # Testing the type of an if condition (line 27)
            if_condition_22460 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 27, 8), hasattr_call_result_22459)
            # Assigning a type to the variable 'if_condition_22460' (line 27)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 27, 8), 'if_condition_22460', if_condition_22460)
            # SSA begins for if statement (line 27)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to visit_value(...): (line 28)
            # Processing the call arguments (line 28)
            # Getting the type of 'node' (line 28)
            node_22463 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 36), 'node', False)
            
            # Obtaining the type of the subscript
            int_22464 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 28, 51), 'int')
            slice_22465 = ensure_slice_bounds(stypy.reporting.localization.Localization(__file__, 28, 42), None, int_22464, None)
            # Getting the type of 'context' (line 28)
            context_22466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 42), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 28)
            getitem___22467 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 42), context_22466, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 28)
            subscript_call_result_22468 = invoke(stypy.reporting.localization.Localization(__file__, 28, 42), getitem___22467, slice_22465)
            
            # Processing the call keyword arguments (line 28)
            kwargs_22469 = {}
            # Getting the type of 'self' (line 28)
            self_22461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 28, 19), 'self', False)
            # Obtaining the member 'visit_value' of a type (line 28)
            visit_value_22462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 28, 19), self_22461, 'visit_value')
            # Calling visit_value(args, kwargs) (line 28)
            visit_value_call_result_22470 = invoke(stypy.reporting.localization.Localization(__file__, 28, 19), visit_value_22462, *[node_22463, subscript_call_result_22468], **kwargs_22469)
            
            # Assigning a type to the variable 'stypy_return_type' (line 28)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 28, 12), 'stypy_return_type', visit_value_call_result_22470)
            # SSA branch for the else part of an if statement (line 27)
            module_type_store.open_ssa_branch('else')
            
            # Call to Exception(...): (line 30)
            # Processing the call arguments (line 30)
            str_22472 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 28), 'str', 'SENTENCE VISITOR: ')
            
            # Obtaining the type of the subscript
            int_22473 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 59), 'int')
            # Getting the type of 'context' (line 30)
            context_22474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 51), 'context', False)
            # Obtaining the member '__getitem__' of a type (line 30)
            getitem___22475 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 30, 51), context_22474, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 30)
            subscript_call_result_22476 = invoke(stypy.reporting.localization.Localization(__file__, 30, 51), getitem___22475, int_22473)
            
            # Applying the binary operator '+' (line 30)
            result_add_22477 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 28), '+', str_22472, subscript_call_result_22476)
            
            str_22478 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 30, 65), 'str', ' is not yet implemented')
            # Applying the binary operator '+' (line 30)
            result_add_22479 = python_operator(stypy.reporting.localization.Localization(__file__, 30, 63), '+', result_add_22477, str_22478)
            
            # Processing the call keyword arguments (line 30)
            kwargs_22480 = {}
            # Getting the type of 'Exception' (line 30)
            Exception_22471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 30, 18), 'Exception', False)
            # Calling Exception(args, kwargs) (line 30)
            Exception_call_result_22481 = invoke(stypy.reporting.localization.Localization(__file__, 30, 18), Exception_22471, *[result_add_22479], **kwargs_22480)
            
            ensure_var_of_types(stypy.reporting.localization.Localization(__file__, 30, 12), Exception_call_result_22481, 'raise parameter', BaseException)
            # SSA join for if statement (line 27)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # ################# End of 'generic_visit(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'generic_visit' in the type store
        # Getting the type of 'stypy_return_type' (line 26)
        stypy_return_type_22482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 26, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22482)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'generic_visit'
        return stypy_return_type_22482


    @norecursion
    def __visit_instruction_body(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function '__visit_instruction_body'
        module_type_store = module_type_store.open_function_context('__visit_instruction_body', 32, 4, False)
        # Assigning a type to the variable 'self' (line 33)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.__visit_instruction_body')
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_param_names_list', ['body', 'context'])
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.__visit_instruction_body.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.__visit_instruction_body', ['body', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, '__visit_instruction_body', localization, ['body', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of '__visit_instruction_body(...)' code ##################

        
        # Assigning a List to a Name (line 33):
        
        # Assigning a List to a Name (line 33):
        
        # Obtaining an instance of the builtin type 'list' (line 33)
        list_22483 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 33, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 33)
        
        # Assigning a type to the variable 'new_stmts' (line 33)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 33, 8), 'new_stmts', list_22483)
        
        # Assigning a Call to a Name (line 36):
        
        # Assigning a Call to a Name (line 36):
        
        # Call to ValueVisitor(...): (line 36)
        # Processing the call arguments (line 36)
        # Getting the type of 'self' (line 36)
        self_22486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 52), 'self', False)
        # Obtaining the member 'file_name' of a type (line 36)
        file_name_22487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 36, 52), self_22486, 'file_name')
        # Processing the call keyword arguments (line 36)
        kwargs_22488 = {}
        # Getting the type of 'value_visitor_copy' (line 36)
        value_visitor_copy_22484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 36, 20), 'value_visitor_copy', False)
        # Obtaining the member 'ValueVisitor' of a type (line 36)
        ValueVisitor_22485 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 36, 20), value_visitor_copy_22484, 'ValueVisitor')
        # Calling ValueVisitor(args, kwargs) (line 36)
        ValueVisitor_call_result_22489 = invoke(stypy.reporting.localization.Localization(__file__, 36, 20), ValueVisitor_22485, *[file_name_22487], **kwargs_22488)
        
        # Assigning a type to the variable 'v_visitor' (line 36)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 36, 8), 'v_visitor', ValueVisitor_call_result_22489)
        
        # Getting the type of 'body' (line 37)
        body_22490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 37, 20), 'body')
        # Assigning a type to the variable 'body_22490' (line 37)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 8), 'body_22490', body_22490)
        # Testing if the for loop is going to be iterated (line 37)
        # Testing the type of a for loop iterable (line 37)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 37, 8), body_22490)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 37, 8), body_22490):
            # Getting the type of the for loop variable (line 37)
            for_loop_var_22491 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 37, 8), body_22490)
            # Assigning a type to the variable 'stmt' (line 37)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 37, 8), 'stmt', for_loop_var_22491)
            # SSA begins for a for statement (line 37)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 38):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 38)
            # Processing the call arguments (line 38)
            # Getting the type of 'stmt' (line 38)
            stmt_22494 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 42), 'stmt', False)
            # Getting the type of 'context' (line 38)
            context_22495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 48), 'context', False)
            # Processing the call keyword arguments (line 38)
            kwargs_22496 = {}
            # Getting the type of 'v_visitor' (line 38)
            v_visitor_22492 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 26), 'v_visitor', False)
            # Obtaining the member 'visit' of a type (line 38)
            visit_22493 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 38, 26), v_visitor_22492, 'visit')
            # Calling visit(args, kwargs) (line 38)
            visit_call_result_22497 = invoke(stypy.reporting.localization.Localization(__file__, 38, 26), visit_22493, *[stmt_22494, context_22495], **kwargs_22496)
            
            # Assigning a type to the variable 'call_assignment_22254' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_22254', visit_call_result_22497)
            
            # Assigning a Call to a Name (line 38):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22254' (line 38)
            call_assignment_22254_22498 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_22254', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_22499 = stypy_get_value_from_tuple(call_assignment_22254_22498, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22255' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_22255', stypy_get_value_from_tuple_call_result_22499)
            
            # Assigning a Name to a Name (line 38):
            # Getting the type of 'call_assignment_22255' (line 38)
            call_assignment_22255_22500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_22255')
            # Assigning a type to the variable 'stmts' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'stmts', call_assignment_22255_22500)
            
            # Assigning a Call to a Name (line 38):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22254' (line 38)
            call_assignment_22254_22501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_22254', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_22502 = stypy_get_value_from_tuple(call_assignment_22254_22501, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22256' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_22256', stypy_get_value_from_tuple_call_result_22502)
            
            # Assigning a Name to a Name (line 38):
            # Getting the type of 'call_assignment_22256' (line 38)
            call_assignment_22256_22503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 38, 12), 'call_assignment_22256')
            # Assigning a type to the variable 'temp' (line 38)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 38, 19), 'temp', call_assignment_22256_22503)
            
            # Type idiom detected: calculating its left and rigth part (line 39)
            # Getting the type of 'list' (line 39)
            list_22504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 33), 'list')
            # Getting the type of 'stmts' (line 39)
            stmts_22505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 39, 26), 'stmts')
            
            (may_be_22506, more_types_in_union_22507) = may_be_subtype(list_22504, stmts_22505)

            if may_be_22506:

                if more_types_in_union_22507:
                    # Runtime conditional SSA (line 39)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                # Assigning a type to the variable 'stmts' (line 39)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 12), 'stmts', remove_not_subtype_from_union(stmts_22505, list))
                
                # Call to extend(...): (line 40)
                # Processing the call arguments (line 40)
                # Getting the type of 'stmts' (line 40)
                stmts_22510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 40, 33), 'stmts', False)
                # Processing the call keyword arguments (line 40)
                kwargs_22511 = {}
                # Getting the type of 'new_stmts' (line 40)
                new_stmts_22508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 40, 16), 'new_stmts', False)
                # Obtaining the member 'extend' of a type (line 40)
                extend_22509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 40, 16), new_stmts_22508, 'extend')
                # Calling extend(args, kwargs) (line 40)
                extend_call_result_22512 = invoke(stypy.reporting.localization.Localization(__file__, 40, 16), extend_22509, *[stmts_22510], **kwargs_22511)
                

                if more_types_in_union_22507:
                    # Runtime conditional SSA for else branch (line 39)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_22506) or more_types_in_union_22507):
                # Assigning a type to the variable 'stmts' (line 39)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 39, 12), 'stmts', remove_subtype_from_union(stmts_22505, list))
                
                # Call to append(...): (line 42)
                # Processing the call arguments (line 42)
                # Getting the type of 'stmts' (line 42)
                stmts_22515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 33), 'stmts', False)
                # Processing the call keyword arguments (line 42)
                kwargs_22516 = {}
                # Getting the type of 'new_stmts' (line 42)
                new_stmts_22513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 42, 16), 'new_stmts', False)
                # Obtaining the member 'append' of a type (line 42)
                append_22514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 42, 16), new_stmts_22513, 'append')
                # Calling append(args, kwargs) (line 42)
                append_call_result_22517 = invoke(stypy.reporting.localization.Localization(__file__, 42, 16), append_22514, *[stmts_22515], **kwargs_22516)
                

                if (may_be_22506 and more_types_in_union_22507):
                    # SSA join for if statement (line 39)
                    module_type_store = module_type_store.join_ssa_context()


            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'new_stmts' (line 45)
        new_stmts_22518 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 45, 15), 'new_stmts')
        # Assigning a type to the variable 'stypy_return_type' (line 45)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 45, 8), 'stypy_return_type', new_stmts_22518)
        
        # ################# End of '__visit_instruction_body(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function '__visit_instruction_body' in the type store
        # Getting the type of 'stypy_return_type' (line 32)
        stypy_return_type_22519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 32, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22519)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function '__visit_instruction_body'
        return stypy_return_type_22519


    @norecursion
    def visit_value(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_value'
        module_type_store = module_type_store.open_function_context('visit_value', 47, 4, False)
        # Assigning a type to the variable 'self' (line 48)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_value')
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_value.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_value', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_value', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_value(...)' code ##################

        
        # Assigning a Call to a Name (line 48):
        
        # Assigning a Call to a Name (line 48):
        
        # Call to ValueVisitor(...): (line 48)
        # Processing the call arguments (line 48)
        # Getting the type of 'self' (line 48)
        self_22522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 52), 'self', False)
        # Obtaining the member 'file_name' of a type (line 48)
        file_name_22523 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 52), self_22522, 'file_name')
        # Processing the call keyword arguments (line 48)
        kwargs_22524 = {}
        # Getting the type of 'value_visitor_copy' (line 48)
        value_visitor_copy_22520 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 48, 20), 'value_visitor_copy', False)
        # Obtaining the member 'ValueVisitor' of a type (line 48)
        ValueVisitor_22521 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 48, 20), value_visitor_copy_22520, 'ValueVisitor')
        # Calling ValueVisitor(args, kwargs) (line 48)
        ValueVisitor_call_result_22525 = invoke(stypy.reporting.localization.Localization(__file__, 48, 20), ValueVisitor_22521, *[file_name_22523], **kwargs_22524)
        
        # Assigning a type to the variable 'v_visitor' (line 48)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 48, 8), 'v_visitor', ValueVisitor_call_result_22525)
        
        # Assigning a Call to a Tuple (line 50):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 50)
        # Processing the call arguments (line 50)
        # Getting the type of 'node' (line 50)
        node_22528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 39), 'node', False)
        # Getting the type of 'context' (line 50)
        context_22529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 45), 'context', False)
        # Processing the call keyword arguments (line 50)
        kwargs_22530 = {}
        # Getting the type of 'v_visitor' (line 50)
        v_visitor_22526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 23), 'v_visitor', False)
        # Obtaining the member 'visit' of a type (line 50)
        visit_22527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 50, 23), v_visitor_22526, 'visit')
        # Calling visit(args, kwargs) (line 50)
        visit_call_result_22531 = invoke(stypy.reporting.localization.Localization(__file__, 50, 23), visit_22527, *[node_22528, context_22529], **kwargs_22530)
        
        # Assigning a type to the variable 'call_assignment_22257' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_22257', visit_call_result_22531)
        
        # Assigning a Call to a Name (line 50):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22257' (line 50)
        call_assignment_22257_22532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_22257', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_22533 = stypy_get_value_from_tuple(call_assignment_22257_22532, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22258' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_22258', stypy_get_value_from_tuple_call_result_22533)
        
        # Assigning a Name to a Name (line 50):
        # Getting the type of 'call_assignment_22258' (line 50)
        call_assignment_22258_22534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_22258')
        # Assigning a type to the variable 'result' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'result', call_assignment_22258_22534)
        
        # Assigning a Call to a Name (line 50):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22257' (line 50)
        call_assignment_22257_22535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_22257', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_22536 = stypy_get_value_from_tuple(call_assignment_22257_22535, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22259' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_22259', stypy_get_value_from_tuple_call_result_22536)
        
        # Assigning a Name to a Name (line 50):
        # Getting the type of 'call_assignment_22259' (line 50)
        call_assignment_22259_22537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 50, 8), 'call_assignment_22259')
        # Assigning a type to the variable 'temp' (line 50)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 50, 16), 'temp', call_assignment_22259_22537)
        
        # Obtaining an instance of the builtin type 'tuple' (line 52)
        tuple_22538 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 52, 15), 'tuple')
        # Adding type elements to the builtin type 'tuple' instance (line 52)
        # Adding element type (line 52)
        # Getting the type of 'result' (line 52)
        result_22539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 15), 'result')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 15), tuple_22538, result_22539)
        # Adding element type (line 52)
        # Getting the type of 'temp' (line 52)
        temp_22540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 52, 23), 'temp')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 52, 15), tuple_22538, temp_22540)
        
        # Assigning a type to the variable 'stypy_return_type' (line 52)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 52, 8), 'stypy_return_type', tuple_22538)
        
        # ################# End of 'visit_value(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_value' in the type store
        # Getting the type of 'stypy_return_type' (line 47)
        stypy_return_type_22541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 47, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22541)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_value'
        return stypy_return_type_22541


    @norecursion
    def visit_Module(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Module'
        module_type_store = module_type_store.open_function_context('visit_Module', 56, 4, False)
        # Assigning a type to the variable 'self' (line 57)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 57, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Module')
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Module.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Module', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Module', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Module(...)' code ##################

        
        # Call to append(...): (line 59)
        # Processing the call arguments (line 59)
        # Getting the type of 'node' (line 59)
        node_22544 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 23), 'node', False)
        # Processing the call keyword arguments (line 59)
        kwargs_22545 = {}
        # Getting the type of 'context' (line 59)
        context_22542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 59, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 59)
        append_22543 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 59, 8), context_22542, 'append')
        # Calling append(args, kwargs) (line 59)
        append_call_result_22546 = invoke(stypy.reporting.localization.Localization(__file__, 59, 8), append_22543, *[node_22544], **kwargs_22545)
        
        
        # Assigning a Call to a Name (line 60):
        
        # Assigning a Call to a Name (line 60):
        
        # Call to __visit_instruction_body(...): (line 60)
        # Processing the call arguments (line 60)
        # Getting the type of 'node' (line 60)
        node_22549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 46), 'node', False)
        # Obtaining the member 'body' of a type (line 60)
        body_22550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 60, 46), node_22549, 'body')
        # Getting the type of 'context' (line 60)
        context_22551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 57), 'context', False)
        # Processing the call keyword arguments (line 60)
        kwargs_22552 = {}
        # Getting the type of 'self' (line 60)
        self_22547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 60, 16), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 60)
        visit_instruction_body_22548 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 60, 16), self_22547, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 60)
        visit_instruction_body_call_result_22553 = invoke(stypy.reporting.localization.Localization(__file__, 60, 16), visit_instruction_body_22548, *[body_22550, context_22551], **kwargs_22552)
        
        # Assigning a type to the variable 'stmts' (line 60)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 60, 8), 'stmts', visit_instruction_body_call_result_22553)
        
        # Call to remove(...): (line 61)
        # Processing the call arguments (line 61)
        # Getting the type of 'node' (line 61)
        node_22556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 23), 'node', False)
        # Processing the call keyword arguments (line 61)
        kwargs_22557 = {}
        # Getting the type of 'context' (line 61)
        context_22554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 61, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 61)
        remove_22555 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 61, 8), context_22554, 'remove')
        # Calling remove(args, kwargs) (line 61)
        remove_call_result_22558 = invoke(stypy.reporting.localization.Localization(__file__, 61, 8), remove_22555, *[node_22556], **kwargs_22557)
        
        # Getting the type of 'stmts' (line 63)
        stmts_22559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 63, 15), 'stmts')
        # Assigning a type to the variable 'stypy_return_type' (line 63)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 63, 8), 'stypy_return_type', stmts_22559)
        
        # ################# End of 'visit_Module(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Module' in the type store
        # Getting the type of 'stypy_return_type' (line 56)
        stypy_return_type_22560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 56, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_22560)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Module'
        return stypy_return_type_22560


    @norecursion
    def visit_FunctionDef(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_FunctionDef'
        module_type_store = module_type_store.open_function_context('visit_FunctionDef', 67, 4, False)
        # Assigning a type to the variable 'self' (line 68)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 68, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_FunctionDef')
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_FunctionDef.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_FunctionDef', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_FunctionDef', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_FunctionDef(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 70):
        
        # Assigning a Attribute to a Attribute (line 70):
        # Getting the type of 'node' (line 70)
        node_22561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 38), 'node')
        # Obtaining the member 'name' of a type (line 70)
        name_22562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 38), node_22561, 'name')
        # Getting the type of 'self' (line 70)
        self_22563 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 70, 8), 'self')
        # Setting the type of the member 'building_function_name' of a type (line 70)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 70, 8), self_22563, 'building_function_name', name_22562)
        
        # Assigning a Call to a Name (line 73):
        
        # Assigning a Call to a Name (line 73):
        
        # Call to create_Name(...): (line 73)
        # Processing the call arguments (line 73)
        str_22566 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 73, 59), 'str', 'localization')
        # Getting the type of 'False' (line 73)
        False_22567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 75), 'False', False)
        # Processing the call keyword arguments (line 73)
        # Getting the type of 'node' (line 73)
        node_22568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 73)
        lineno_22569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 87), node_22568, 'lineno')
        keyword_22570 = lineno_22569
        # Getting the type of 'node' (line 73)
        node_22571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 107), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 73)
        col_offset_22572 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 107), node_22571, 'col_offset')
        keyword_22573 = col_offset_22572
        kwargs_22574 = {'column': keyword_22573, 'line': keyword_22570}
        # Getting the type of 'core_language_copy' (line 73)
        core_language_copy_22564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 73, 28), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 73)
        create_Name_22565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 73, 28), core_language_copy_22564, 'create_Name')
        # Calling create_Name(args, kwargs) (line 73)
        create_Name_call_result_22575 = invoke(stypy.reporting.localization.Localization(__file__, 73, 28), create_Name_22565, *[str_22566, False_22567], **kwargs_22574)
        
        # Assigning a type to the variable 'decl_localization' (line 73)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 73, 8), 'decl_localization', create_Name_call_result_22575)
        
        # Assigning a List to a Name (line 77):
        
        # Assigning a List to a Name (line 77):
        
        # Obtaining an instance of the builtin type 'list' (line 77)
        list_22576 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 77, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 77)
        
        # Assigning a type to the variable 'decorator_list' (line 77)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 77, 8), 'decorator_list', list_22576)
        
        
        # Call to len(...): (line 78)
        # Processing the call arguments (line 78)
        # Getting the type of 'node' (line 78)
        node_22578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 15), 'node', False)
        # Obtaining the member 'decorator_list' of a type (line 78)
        decorator_list_22579 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 78, 15), node_22578, 'decorator_list')
        # Processing the call keyword arguments (line 78)
        kwargs_22580 = {}
        # Getting the type of 'len' (line 78)
        len_22577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 78, 11), 'len', False)
        # Calling len(args, kwargs) (line 78)
        len_call_result_22581 = invoke(stypy.reporting.localization.Localization(__file__, 78, 11), len_22577, *[decorator_list_22579], **kwargs_22580)
        
        int_22582 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 78, 38), 'int')
        # Applying the binary operator '>' (line 78)
        result_gt_22583 = python_operator(stypy.reporting.localization.Localization(__file__, 78, 11), '>', len_call_result_22581, int_22582)
        
        # Testing if the type of an if condition is none (line 78)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 78, 8), result_gt_22583):
            pass
        else:
            
            # Testing the type of an if condition (line 78)
            if_condition_22584 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 78, 8), result_gt_22583)
            # Assigning a type to the variable 'if_condition_22584' (line 78)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 78, 8), 'if_condition_22584', if_condition_22584)
            # SSA begins for if statement (line 78)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Getting the type of 'node' (line 79)
            node_22585 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 79, 23), 'node')
            # Obtaining the member 'decorator_list' of a type (line 79)
            decorator_list_22586 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 79, 23), node_22585, 'decorator_list')
            # Assigning a type to the variable 'decorator_list_22586' (line 79)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 12), 'decorator_list_22586', decorator_list_22586)
            # Testing if the for loop is going to be iterated (line 79)
            # Testing the type of a for loop iterable (line 79)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 79, 12), decorator_list_22586)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 79, 12), decorator_list_22586):
                # Getting the type of the for loop variable (line 79)
                for_loop_var_22587 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 79, 12), decorator_list_22586)
                # Assigning a type to the variable 'dec' (line 79)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 79, 12), 'dec', for_loop_var_22587)
                # SSA begins for a for statement (line 79)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Call to isinstance(...): (line 80)
                # Processing the call arguments (line 80)
                # Getting the type of 'dec' (line 80)
                dec_22589 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 30), 'dec', False)
                # Getting the type of 'ast' (line 80)
                ast_22590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 35), 'ast', False)
                # Obtaining the member 'Name' of a type (line 80)
                Name_22591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 80, 35), ast_22590, 'Name')
                # Processing the call keyword arguments (line 80)
                kwargs_22592 = {}
                # Getting the type of 'isinstance' (line 80)
                isinstance_22588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 80, 19), 'isinstance', False)
                # Calling isinstance(args, kwargs) (line 80)
                isinstance_call_result_22593 = invoke(stypy.reporting.localization.Localization(__file__, 80, 19), isinstance_22588, *[dec_22589, Name_22591], **kwargs_22592)
                
                # Testing if the type of an if condition is none (line 80)

                if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 80, 16), isinstance_call_result_22593):
                    pass
                else:
                    
                    # Testing the type of an if condition (line 80)
                    if_condition_22594 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 80, 16), isinstance_call_result_22593)
                    # Assigning a type to the variable 'if_condition_22594' (line 80)
                    module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 80, 16), 'if_condition_22594', if_condition_22594)
                    # SSA begins for if statement (line 80)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                    
                    # Getting the type of 'dec' (line 81)
                    dec_22595 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 81, 23), 'dec')
                    # Obtaining the member 'id' of a type (line 81)
                    id_22596 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 81, 23), dec_22595, 'id')
                    str_22597 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 81, 33), 'str', 'staticmethod')
                    # Applying the binary operator '==' (line 81)
                    result_eq_22598 = python_operator(stypy.reporting.localization.Localization(__file__, 81, 23), '==', id_22596, str_22597)
                    
                    # Testing if the type of an if condition is none (line 81)

                    if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 81, 20), result_eq_22598):
                        pass
                    else:
                        
                        # Testing the type of an if condition (line 81)
                        if_condition_22599 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 81, 20), result_eq_22598)
                        # Assigning a type to the variable 'if_condition_22599' (line 81)
                        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 81, 20), 'if_condition_22599', if_condition_22599)
                        # SSA begins for if statement (line 81)
                        module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                        
                        # Call to append(...): (line 82)
                        # Processing the call arguments (line 82)
                        # Getting the type of 'dec' (line 82)
                        dec_22602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 46), 'dec', False)
                        # Processing the call keyword arguments (line 82)
                        kwargs_22603 = {}
                        # Getting the type of 'decorator_list' (line 82)
                        decorator_list_22600 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 82, 24), 'decorator_list', False)
                        # Obtaining the member 'append' of a type (line 82)
                        append_22601 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 82, 24), decorator_list_22600, 'append')
                        # Calling append(args, kwargs) (line 82)
                        append_call_result_22604 = invoke(stypy.reporting.localization.Localization(__file__, 82, 24), append_22601, *[dec_22602], **kwargs_22603)
                        
                        # SSA join for if statement (line 81)
                        module_type_store = module_type_store.join_ssa_context()
                        

                    # SSA join for if statement (line 80)
                    module_type_store = module_type_store.join_ssa_context()
                    

                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            # SSA join for if statement (line 78)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 86)
        # Processing the call arguments (line 86)
        
        # Call to create_Name(...): (line 86)
        # Processing the call arguments (line 86)
        str_22609 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 61), 'str', 'norecursion')
        # Processing the call keyword arguments (line 86)
        # Getting the type of 'node' (line 86)
        node_22610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 81), 'node', False)
        # Obtaining the member 'lineno' of a type (line 86)
        lineno_22611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 81), node_22610, 'lineno')
        int_22612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 86, 95), 'int')
        # Applying the binary operator '-' (line 86)
        result_sub_22613 = python_operator(stypy.reporting.localization.Localization(__file__, 86, 81), '-', lineno_22611, int_22612)
        
        keyword_22614 = result_sub_22613
        # Getting the type of 'node' (line 86)
        node_22615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 105), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 86)
        col_offset_22616 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 105), node_22615, 'col_offset')
        keyword_22617 = col_offset_22616
        kwargs_22618 = {'column': keyword_22617, 'line': keyword_22614}
        # Getting the type of 'core_language_copy' (line 86)
        core_language_copy_22607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 30), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 86)
        create_Name_22608 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 30), core_language_copy_22607, 'create_Name')
        # Calling create_Name(args, kwargs) (line 86)
        create_Name_call_result_22619 = invoke(stypy.reporting.localization.Localization(__file__, 86, 30), create_Name_22608, *[str_22609], **kwargs_22618)
        
        # Processing the call keyword arguments (line 86)
        kwargs_22620 = {}
        # Getting the type of 'decorator_list' (line 86)
        decorator_list_22605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 86, 8), 'decorator_list', False)
        # Obtaining the member 'append' of a type (line 86)
        append_22606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 86, 8), decorator_list_22605, 'append')
        # Calling append(args, kwargs) (line 86)
        append_call_result_22621 = invoke(stypy.reporting.localization.Localization(__file__, 86, 8), append_22606, *[create_Name_call_result_22619], **kwargs_22620)
        
        
        # Assigning a List to a Name (line 88):
        
        # Assigning a List to a Name (line 88):
        
        # Obtaining an instance of the builtin type 'list' (line 88)
        list_22622 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 88, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 88)
        
        # Assigning a type to the variable 'defaults_types' (line 88)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 88, 8), 'defaults_types', list_22622)
        
        # Assigning a List to a Name (line 89):
        
        # Assigning a List to a Name (line 89):
        
        # Obtaining an instance of the builtin type 'list' (line 89)
        list_22623 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 89, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 89)
        
        # Assigning a type to the variable 'defaults_stmts' (line 89)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 89, 8), 'defaults_stmts', list_22623)
        
        # Getting the type of 'node' (line 91)
        node_22624 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 91, 20), 'node')
        # Obtaining the member 'args' of a type (line 91)
        args_22625 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 20), node_22624, 'args')
        # Obtaining the member 'defaults' of a type (line 91)
        defaults_22626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 91, 20), args_22625, 'defaults')
        # Assigning a type to the variable 'defaults_22626' (line 91)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'defaults_22626', defaults_22626)
        # Testing if the for loop is going to be iterated (line 91)
        # Testing the type of a for loop iterable (line 91)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 91, 8), defaults_22626)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 91, 8), defaults_22626):
            # Getting the type of the for loop variable (line 91)
            for_loop_var_22627 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 91, 8), defaults_22626)
            # Assigning a type to the variable 'elem' (line 91)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 91, 8), 'elem', for_loop_var_22627)
            # SSA begins for a for statement (line 91)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 92):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 92)
            # Processing the call arguments (line 92)
            # Getting the type of 'elem' (line 92)
            elem_22630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 38), 'elem', False)
            # Getting the type of 'context' (line 92)
            context_22631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 44), 'context', False)
            # Processing the call keyword arguments (line 92)
            kwargs_22632 = {}
            # Getting the type of 'self' (line 92)
            self_22628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 27), 'self', False)
            # Obtaining the member 'visit' of a type (line 92)
            visit_22629 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 92, 27), self_22628, 'visit')
            # Calling visit(args, kwargs) (line 92)
            visit_call_result_22633 = invoke(stypy.reporting.localization.Localization(__file__, 92, 27), visit_22629, *[elem_22630, context_22631], **kwargs_22632)
            
            # Assigning a type to the variable 'call_assignment_22260' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_22260', visit_call_result_22633)
            
            # Assigning a Call to a Name (line 92):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22260' (line 92)
            call_assignment_22260_22634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_22260', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_22635 = stypy_get_value_from_tuple(call_assignment_22260_22634, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22261' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_22261', stypy_get_value_from_tuple_call_result_22635)
            
            # Assigning a Name to a Name (line 92):
            # Getting the type of 'call_assignment_22261' (line 92)
            call_assignment_22261_22636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_22261')
            # Assigning a type to the variable 'stmts' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'stmts', call_assignment_22261_22636)
            
            # Assigning a Call to a Name (line 92):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22260' (line 92)
            call_assignment_22260_22637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_22260', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_22638 = stypy_get_value_from_tuple(call_assignment_22260_22637, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22262' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_22262', stypy_get_value_from_tuple_call_result_22638)
            
            # Assigning a Name to a Name (line 92):
            # Getting the type of 'call_assignment_22262' (line 92)
            call_assignment_22262_22639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 92, 12), 'call_assignment_22262')
            # Assigning a type to the variable 'type_' (line 92)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 92, 19), 'type_', call_assignment_22262_22639)
            
            # Call to append(...): (line 93)
            # Processing the call arguments (line 93)
            # Getting the type of 'type_' (line 93)
            type__22642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 34), 'type_', False)
            # Processing the call keyword arguments (line 93)
            kwargs_22643 = {}
            # Getting the type of 'defaults_types' (line 93)
            defaults_types_22640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 93, 12), 'defaults_types', False)
            # Obtaining the member 'append' of a type (line 93)
            append_22641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 93, 12), defaults_types_22640, 'append')
            # Calling append(args, kwargs) (line 93)
            append_call_result_22644 = invoke(stypy.reporting.localization.Localization(__file__, 93, 12), append_22641, *[type__22642], **kwargs_22643)
            
            
            # Call to append(...): (line 94)
            # Processing the call arguments (line 94)
            # Getting the type of 'stmts' (line 94)
            stmts_22647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 34), 'stmts', False)
            # Processing the call keyword arguments (line 94)
            kwargs_22648 = {}
            # Getting the type of 'defaults_stmts' (line 94)
            defaults_stmts_22645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 94, 12), 'defaults_stmts', False)
            # Obtaining the member 'append' of a type (line 94)
            append_22646 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 94, 12), defaults_stmts_22645, 'append')
            # Calling append(args, kwargs) (line 94)
            append_call_result_22649 = invoke(stypy.reporting.localization.Localization(__file__, 94, 12), append_22646, *[stmts_22647], **kwargs_22648)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 97):
        
        # Assigning a Call to a Name (line 97):
        
        # Call to create_function_def(...): (line 97)
        # Processing the call arguments (line 97)
        # Getting the type of 'node' (line 97)
        node_22652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 58), 'node', False)
        # Obtaining the member 'name' of a type (line 97)
        name_22653 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 58), node_22652, 'name')
        # Getting the type of 'decl_localization' (line 98)
        decl_localization_22654 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 98, 53), 'decl_localization', False)
        # Getting the type of 'decorator_list' (line 99)
        decorator_list_22655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 99, 53), 'decorator_list', False)
        # Getting the type of 'context' (line 100)
        context_22656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 100, 53), 'context', False)
        # Processing the call keyword arguments (line 97)
        # Getting the type of 'node' (line 101)
        node_22657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 101, 58), 'node', False)
        # Obtaining the member 'lineno' of a type (line 101)
        lineno_22658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 101, 58), node_22657, 'lineno')
        keyword_22659 = lineno_22658
        # Getting the type of 'node' (line 102)
        node_22660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 102, 60), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 102)
        col_offset_22661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 102, 60), node_22660, 'col_offset')
        keyword_22662 = col_offset_22661
        kwargs_22663 = {'column': keyword_22662, 'line': keyword_22659}
        # Getting the type of 'functions_copy' (line 97)
        functions_copy_22650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 97, 23), 'functions_copy', False)
        # Obtaining the member 'create_function_def' of a type (line 97)
        create_function_def_22651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 97, 23), functions_copy_22650, 'create_function_def')
        # Calling create_function_def(args, kwargs) (line 97)
        create_function_def_call_result_22664 = invoke(stypy.reporting.localization.Localization(__file__, 97, 23), create_function_def_22651, *[name_22653, decl_localization_22654, decorator_list_22655, context_22656], **kwargs_22663)
        
        # Assigning a type to the variable 'function_def' (line 97)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 97, 8), 'function_def', create_function_def_call_result_22664)
        
        # Call to append(...): (line 105)
        # Processing the call arguments (line 105)
        
        # Call to create_src_comment(...): (line 105)
        # Processing the call arguments (line 105)
        str_22670 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 105, 73), 'str', 'Assign values to the parameters with defaults')
        # Processing the call keyword arguments (line 105)
        kwargs_22671 = {}
        # Getting the type of 'stypy_functions_copy' (line 105)
        stypy_functions_copy_22668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 105)
        create_src_comment_22669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 33), stypy_functions_copy_22668, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 105)
        create_src_comment_call_result_22672 = invoke(stypy.reporting.localization.Localization(__file__, 105, 33), create_src_comment_22669, *[str_22670], **kwargs_22671)
        
        # Processing the call keyword arguments (line 105)
        kwargs_22673 = {}
        # Getting the type of 'function_def' (line 105)
        function_def_22665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 105, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 105)
        body_22666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 8), function_def_22665, 'body')
        # Obtaining the member 'append' of a type (line 105)
        append_22667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 105, 8), body_22666, 'append')
        # Calling append(args, kwargs) (line 105)
        append_call_result_22674 = invoke(stypy.reporting.localization.Localization(__file__, 105, 8), append_22667, *[create_src_comment_call_result_22672], **kwargs_22673)
        
        
        # Call to append(...): (line 106)
        # Processing the call arguments (line 106)
        
        # Call to create_set_unreferenced_var_check(...): (line 106)
        # Processing the call arguments (line 106)
        # Getting the type of 'False' (line 106)
        False_22680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 88), 'False', False)
        # Processing the call keyword arguments (line 106)
        kwargs_22681 = {}
        # Getting the type of 'stypy_functions_copy' (line 106)
        stypy_functions_copy_22678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_unreferenced_var_check' of a type (line 106)
        create_set_unreferenced_var_check_22679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 33), stypy_functions_copy_22678, 'create_set_unreferenced_var_check')
        # Calling create_set_unreferenced_var_check(args, kwargs) (line 106)
        create_set_unreferenced_var_check_call_result_22682 = invoke(stypy.reporting.localization.Localization(__file__, 106, 33), create_set_unreferenced_var_check_22679, *[False_22680], **kwargs_22681)
        
        # Processing the call keyword arguments (line 106)
        kwargs_22683 = {}
        # Getting the type of 'function_def' (line 106)
        function_def_22675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 106, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 106)
        body_22676 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 8), function_def_22675, 'body')
        # Obtaining the member 'append' of a type (line 106)
        append_22677 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 106, 8), body_22676, 'append')
        # Calling append(args, kwargs) (line 106)
        append_call_result_22684 = invoke(stypy.reporting.localization.Localization(__file__, 106, 8), append_22677, *[create_set_unreferenced_var_check_call_result_22682], **kwargs_22683)
        
        
        # Call to append(...): (line 107)
        # Processing the call arguments (line 107)
        # Getting the type of 'defaults_stmts' (line 107)
        defaults_stmts_22688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 33), 'defaults_stmts', False)
        # Processing the call keyword arguments (line 107)
        kwargs_22689 = {}
        # Getting the type of 'function_def' (line 107)
        function_def_22685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 107, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 107)
        body_22686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), function_def_22685, 'body')
        # Obtaining the member 'append' of a type (line 107)
        append_22687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 107, 8), body_22686, 'append')
        # Calling append(args, kwargs) (line 107)
        append_call_result_22690 = invoke(stypy.reporting.localization.Localization(__file__, 107, 8), append_22687, *[defaults_stmts_22688], **kwargs_22689)
        
        
        # Call to append(...): (line 108)
        # Processing the call arguments (line 108)
        
        # Call to create_set_unreferenced_var_check(...): (line 108)
        # Processing the call arguments (line 108)
        # Getting the type of 'True' (line 108)
        True_22696 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 88), 'True', False)
        # Processing the call keyword arguments (line 108)
        kwargs_22697 = {}
        # Getting the type of 'stypy_functions_copy' (line 108)
        stypy_functions_copy_22694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_unreferenced_var_check' of a type (line 108)
        create_set_unreferenced_var_check_22695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 33), stypy_functions_copy_22694, 'create_set_unreferenced_var_check')
        # Calling create_set_unreferenced_var_check(args, kwargs) (line 108)
        create_set_unreferenced_var_check_call_result_22698 = invoke(stypy.reporting.localization.Localization(__file__, 108, 33), create_set_unreferenced_var_check_22695, *[True_22696], **kwargs_22697)
        
        # Processing the call keyword arguments (line 108)
        kwargs_22699 = {}
        # Getting the type of 'function_def' (line 108)
        function_def_22691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 108, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 108)
        body_22692 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 8), function_def_22691, 'body')
        # Obtaining the member 'append' of a type (line 108)
        append_22693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 108, 8), body_22692, 'append')
        # Calling append(args, kwargs) (line 108)
        append_call_result_22700 = invoke(stypy.reporting.localization.Localization(__file__, 108, 8), append_22693, *[create_set_unreferenced_var_check_call_result_22698], **kwargs_22699)
        
        
        # Call to append(...): (line 109)
        # Processing the call arguments (line 109)
        
        # Call to create_Assign(...): (line 109)
        # Processing the call arguments (line 109)
        
        # Call to create_Name(...): (line 109)
        # Processing the call arguments (line 109)
        str_22708 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 109, 97), 'str', 'defaults')
        # Processing the call keyword arguments (line 109)
        kwargs_22709 = {}
        # Getting the type of 'core_language_copy' (line 109)
        core_language_copy_22706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 66), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 109)
        create_Name_22707 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 66), core_language_copy_22706, 'create_Name')
        # Calling create_Name(args, kwargs) (line 109)
        create_Name_call_result_22710 = invoke(stypy.reporting.localization.Localization(__file__, 109, 66), create_Name_22707, *[str_22708], **kwargs_22709)
        
        
        # Call to create_list(...): (line 110)
        # Processing the call arguments (line 110)
        # Getting the type of 'defaults_types' (line 110)
        defaults_types_22713 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 94), 'defaults_types', False)
        # Processing the call keyword arguments (line 110)
        kwargs_22714 = {}
        # Getting the type of 'data_structures_copy' (line 110)
        data_structures_copy_22711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 110, 61), 'data_structures_copy', False)
        # Obtaining the member 'create_list' of a type (line 110)
        create_list_22712 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 110, 61), data_structures_copy_22711, 'create_list')
        # Calling create_list(args, kwargs) (line 110)
        create_list_call_result_22715 = invoke(stypy.reporting.localization.Localization(__file__, 110, 61), create_list_22712, *[defaults_types_22713], **kwargs_22714)
        
        # Processing the call keyword arguments (line 109)
        kwargs_22716 = {}
        # Getting the type of 'core_language_copy' (line 109)
        core_language_copy_22704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 33), 'core_language_copy', False)
        # Obtaining the member 'create_Assign' of a type (line 109)
        create_Assign_22705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 33), core_language_copy_22704, 'create_Assign')
        # Calling create_Assign(args, kwargs) (line 109)
        create_Assign_call_result_22717 = invoke(stypy.reporting.localization.Localization(__file__, 109, 33), create_Assign_22705, *[create_Name_call_result_22710, create_list_call_result_22715], **kwargs_22716)
        
        # Processing the call keyword arguments (line 109)
        kwargs_22718 = {}
        # Getting the type of 'function_def' (line 109)
        function_def_22701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 109, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 109)
        body_22702 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 8), function_def_22701, 'body')
        # Obtaining the member 'append' of a type (line 109)
        append_22703 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 109, 8), body_22702, 'append')
        # Calling append(args, kwargs) (line 109)
        append_call_result_22719 = invoke(stypy.reporting.localization.Localization(__file__, 109, 8), append_22703, *[create_Assign_call_result_22717], **kwargs_22718)
        
        
        # Call to append(...): (line 113)
        # Processing the call arguments (line 113)
        
        # Call to create_src_comment(...): (line 113)
        # Processing the call arguments (line 113)
        
        # Call to format(...): (line 114)
        # Processing the call arguments (line 114)
        # Getting the type of 'node' (line 114)
        node_22727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 114, 83), 'node', False)
        # Obtaining the member 'name' of a type (line 114)
        name_22728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 83), node_22727, 'name')
        # Processing the call keyword arguments (line 114)
        kwargs_22729 = {}
        str_22725 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 114, 34), 'str', "Create a new context for function '{0}'")
        # Obtaining the member 'format' of a type (line 114)
        format_22726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 114, 34), str_22725, 'format')
        # Calling format(args, kwargs) (line 114)
        format_call_result_22730 = invoke(stypy.reporting.localization.Localization(__file__, 114, 34), format_22726, *[name_22728], **kwargs_22729)
        
        # Processing the call keyword arguments (line 113)
        kwargs_22731 = {}
        # Getting the type of 'stypy_functions_copy' (line 113)
        stypy_functions_copy_22723 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 113)
        create_src_comment_22724 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 33), stypy_functions_copy_22723, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 113)
        create_src_comment_call_result_22732 = invoke(stypy.reporting.localization.Localization(__file__, 113, 33), create_src_comment_22724, *[format_call_result_22730], **kwargs_22731)
        
        # Processing the call keyword arguments (line 113)
        kwargs_22733 = {}
        # Getting the type of 'function_def' (line 113)
        function_def_22720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 113, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 113)
        body_22721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 8), function_def_22720, 'body')
        # Obtaining the member 'append' of a type (line 113)
        append_22722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 113, 8), body_22721, 'append')
        # Calling append(args, kwargs) (line 113)
        append_call_result_22734 = invoke(stypy.reporting.localization.Localization(__file__, 113, 8), append_22722, *[create_src_comment_call_result_22732], **kwargs_22733)
        
        
        # Assigning a Call to a Name (line 115):
        
        # Assigning a Call to a Name (line 115):
        
        # Call to create_context_set(...): (line 115)
        # Processing the call arguments (line 115)
        # Getting the type of 'node' (line 115)
        node_22737 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 56), 'node', False)
        # Obtaining the member 'name' of a type (line 115)
        name_22738 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 56), node_22737, 'name')
        # Getting the type of 'node' (line 115)
        node_22739 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 67), 'node', False)
        # Obtaining the member 'lineno' of a type (line 115)
        lineno_22740 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 67), node_22739, 'lineno')
        # Getting the type of 'node' (line 116)
        node_22741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 116, 51), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 116)
        col_offset_22742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 116, 51), node_22741, 'col_offset')
        # Processing the call keyword arguments (line 115)
        kwargs_22743 = {}
        # Getting the type of 'functions_copy' (line 115)
        functions_copy_22735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 115, 22), 'functions_copy', False)
        # Obtaining the member 'create_context_set' of a type (line 115)
        create_context_set_22736 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 115, 22), functions_copy_22735, 'create_context_set')
        # Calling create_context_set(args, kwargs) (line 115)
        create_context_set_call_result_22744 = invoke(stypy.reporting.localization.Localization(__file__, 115, 22), create_context_set_22736, *[name_22738, lineno_22740, col_offset_22742], **kwargs_22743)
        
        # Assigning a type to the variable 'context_set' (line 115)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 115, 8), 'context_set', create_context_set_call_result_22744)
        
        # Call to append(...): (line 117)
        # Processing the call arguments (line 117)
        # Getting the type of 'context_set' (line 117)
        context_set_22748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 33), 'context_set', False)
        # Processing the call keyword arguments (line 117)
        kwargs_22749 = {}
        # Getting the type of 'function_def' (line 117)
        function_def_22745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 117, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 117)
        body_22746 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 8), function_def_22745, 'body')
        # Obtaining the member 'append' of a type (line 117)
        append_22747 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 117, 8), body_22746, 'append')
        # Calling append(args, kwargs) (line 117)
        append_call_result_22750 = invoke(stypy.reporting.localization.Localization(__file__, 117, 8), append_22747, *[context_set_22748], **kwargs_22749)
        
        
        # Call to is_method(...): (line 119)
        # Processing the call arguments (line 119)
        # Getting the type of 'context' (line 119)
        context_22753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 36), 'context', False)
        # Processing the call keyword arguments (line 119)
        kwargs_22754 = {}
        # Getting the type of 'functions_copy' (line 119)
        functions_copy_22751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 119, 11), 'functions_copy', False)
        # Obtaining the member 'is_method' of a type (line 119)
        is_method_22752 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 119, 11), functions_copy_22751, 'is_method')
        # Calling is_method(args, kwargs) (line 119)
        is_method_call_result_22755 = invoke(stypy.reporting.localization.Localization(__file__, 119, 11), is_method_22752, *[context_22753], **kwargs_22754)
        
        # Testing if the type of an if condition is none (line 119)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 119, 8), is_method_call_result_22755):
            pass
        else:
            
            # Testing the type of an if condition (line 119)
            if_condition_22756 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 119, 8), is_method_call_result_22755)
            # Assigning a type to the variable 'if_condition_22756' (line 119)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 119, 8), 'if_condition_22756', if_condition_22756)
            # SSA begins for if statement (line 119)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 120)
            # Processing the call arguments (line 120)
            
            # Call to create_set_type_of(...): (line 121)
            # Processing the call arguments (line 121)
            str_22762 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 56), 'str', 'self')
            
            # Call to create_Name(...): (line 121)
            # Processing the call arguments (line 121)
            str_22765 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 95), 'str', 'type_of_self')
            # Processing the call keyword arguments (line 121)
            kwargs_22766 = {}
            # Getting the type of 'core_language_copy' (line 121)
            core_language_copy_22763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 64), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 121)
            create_Name_22764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 64), core_language_copy_22763, 'create_Name')
            # Calling create_Name(args, kwargs) (line 121)
            create_Name_call_result_22767 = invoke(stypy.reporting.localization.Localization(__file__, 121, 64), create_Name_22764, *[str_22765], **kwargs_22766)
            
            # Getting the type of 'node' (line 121)
            node_22768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 112), 'node', False)
            # Obtaining the member 'lineno' of a type (line 121)
            lineno_22769 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 112), node_22768, 'lineno')
            int_22770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 121, 126), 'int')
            # Applying the binary operator '+' (line 121)
            result_add_22771 = python_operator(stypy.reporting.localization.Localization(__file__, 121, 112), '+', lineno_22769, int_22770)
            
            # Getting the type of 'node' (line 122)
            node_22772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 122, 51), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 122)
            col_offset_22773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 122, 51), node_22772, 'col_offset')
            # Processing the call keyword arguments (line 121)
            kwargs_22774 = {}
            # Getting the type of 'stypy_functions_copy' (line 121)
            stypy_functions_copy_22760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 121, 16), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 121)
            create_set_type_of_22761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 121, 16), stypy_functions_copy_22760, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 121)
            create_set_type_of_call_result_22775 = invoke(stypy.reporting.localization.Localization(__file__, 121, 16), create_set_type_of_22761, *[str_22762, create_Name_call_result_22767, result_add_22771, col_offset_22773], **kwargs_22774)
            
            # Processing the call keyword arguments (line 120)
            kwargs_22776 = {}
            # Getting the type of 'function_def' (line 120)
            function_def_22757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 120, 12), 'function_def', False)
            # Obtaining the member 'body' of a type (line 120)
            body_22758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 12), function_def_22757, 'body')
            # Obtaining the member 'append' of a type (line 120)
            append_22759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 120, 12), body_22758, 'append')
            # Calling append(args, kwargs) (line 120)
            append_call_result_22777 = invoke(stypy.reporting.localization.Localization(__file__, 120, 12), append_22759, *[create_set_type_of_call_result_22775], **kwargs_22776)
            
            # SSA join for if statement (line 119)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 125)
        # Processing the call arguments (line 125)
        
        # Call to create_src_comment(...): (line 125)
        # Processing the call arguments (line 125)
        str_22783 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 125, 73), 'str', 'Passed parameters checking function')
        # Processing the call keyword arguments (line 125)
        kwargs_22784 = {}
        # Getting the type of 'stypy_functions_copy' (line 125)
        stypy_functions_copy_22781 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 125)
        create_src_comment_22782 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 33), stypy_functions_copy_22781, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 125)
        create_src_comment_call_result_22785 = invoke(stypy.reporting.localization.Localization(__file__, 125, 33), create_src_comment_22782, *[str_22783], **kwargs_22784)
        
        # Processing the call keyword arguments (line 125)
        kwargs_22786 = {}
        # Getting the type of 'function_def' (line 125)
        function_def_22778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 125, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 125)
        body_22779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 8), function_def_22778, 'body')
        # Obtaining the member 'append' of a type (line 125)
        append_22780 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 125, 8), body_22779, 'append')
        # Calling append(args, kwargs) (line 125)
        append_call_result_22787 = invoke(stypy.reporting.localization.Localization(__file__, 125, 8), append_22780, *[create_src_comment_call_result_22785], **kwargs_22786)
        
        
        # Assigning a Call to a Name (line 128):
        
        # Assigning a Call to a Name (line 128):
        
        # Call to create_arg_number_test(...): (line 128)
        # Processing the call arguments (line 128)
        # Getting the type of 'node' (line 128)
        node_22790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 59), 'node', False)
        # Getting the type of 'context' (line 128)
        context_22791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 65), 'context', False)
        # Processing the call keyword arguments (line 128)
        kwargs_22792 = {}
        # Getting the type of 'functions_copy' (line 128)
        functions_copy_22788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 128, 21), 'functions_copy', False)
        # Obtaining the member 'create_arg_number_test' of a type (line 128)
        create_arg_number_test_22789 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 128, 21), functions_copy_22788, 'create_arg_number_test')
        # Calling create_arg_number_test(args, kwargs) (line 128)
        create_arg_number_test_call_result_22793 = invoke(stypy.reporting.localization.Localization(__file__, 128, 21), create_arg_number_test_22789, *[node_22790, context_22791], **kwargs_22792)
        
        # Assigning a type to the variable 'f_preamble' (line 128)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 128, 8), 'f_preamble', create_arg_number_test_call_result_22793)
        
        # Call to append(...): (line 130)
        # Processing the call arguments (line 130)
        # Getting the type of 'f_preamble' (line 130)
        f_preamble_22797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 33), 'f_preamble', False)
        # Processing the call keyword arguments (line 130)
        kwargs_22798 = {}
        # Getting the type of 'function_def' (line 130)
        function_def_22794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 130, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 130)
        body_22795 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 130, 8), function_def_22794, 'body')
        # Obtaining the member 'append' of a type (line 130)
        append_22796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 130, 8), body_22795, 'append')
        # Calling append(args, kwargs) (line 130)
        append_call_result_22799 = invoke(stypy.reporting.localization.Localization(__file__, 130, 8), append_22796, *[f_preamble_22797], **kwargs_22798)
        
        
        # Call to append(...): (line 133)
        # Processing the call arguments (line 133)
        
        # Call to create_src_comment(...): (line 133)
        # Processing the call arguments (line 133)
        str_22805 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 133, 73), 'str', 'Stacktrace push for error reporting')
        # Processing the call keyword arguments (line 133)
        kwargs_22806 = {}
        # Getting the type of 'stypy_functions_copy' (line 133)
        stypy_functions_copy_22803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 133)
        create_src_comment_22804 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 33), stypy_functions_copy_22803, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 133)
        create_src_comment_call_result_22807 = invoke(stypy.reporting.localization.Localization(__file__, 133, 33), create_src_comment_22804, *[str_22805], **kwargs_22806)
        
        # Processing the call keyword arguments (line 133)
        kwargs_22808 = {}
        # Getting the type of 'function_def' (line 133)
        function_def_22800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 133, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 133)
        body_22801 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 8), function_def_22800, 'body')
        # Obtaining the member 'append' of a type (line 133)
        append_22802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 133, 8), body_22801, 'append')
        # Calling append(args, kwargs) (line 133)
        append_call_result_22809 = invoke(stypy.reporting.localization.Localization(__file__, 133, 8), append_22802, *[create_src_comment_call_result_22807], **kwargs_22808)
        
        
        # Assigning a Call to a Name (line 134):
        
        # Assigning a Call to a Name (line 134):
        
        # Call to obtain_arg_list(...): (line 134)
        # Processing the call arguments (line 134)
        # Getting the type of 'node' (line 134)
        node_22812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 60), 'node', False)
        # Obtaining the member 'args' of a type (line 134)
        args_22813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 60), node_22812, 'args')
        
        # Call to is_method(...): (line 134)
        # Processing the call arguments (line 134)
        # Getting the type of 'context' (line 134)
        context_22816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 96), 'context', False)
        # Processing the call keyword arguments (line 134)
        kwargs_22817 = {}
        # Getting the type of 'functions_copy' (line 134)
        functions_copy_22814 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 71), 'functions_copy', False)
        # Obtaining the member 'is_method' of a type (line 134)
        is_method_22815 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 71), functions_copy_22814, 'is_method')
        # Calling is_method(args, kwargs) (line 134)
        is_method_call_result_22818 = invoke(stypy.reporting.localization.Localization(__file__, 134, 71), is_method_22815, *[context_22816], **kwargs_22817)
        
        # Processing the call keyword arguments (line 134)
        kwargs_22819 = {}
        # Getting the type of 'functions_copy' (line 134)
        functions_copy_22810 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 134, 29), 'functions_copy', False)
        # Obtaining the member 'obtain_arg_list' of a type (line 134)
        obtain_arg_list_22811 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 134, 29), functions_copy_22810, 'obtain_arg_list')
        # Calling obtain_arg_list(args, kwargs) (line 134)
        obtain_arg_list_call_result_22820 = invoke(stypy.reporting.localization.Localization(__file__, 134, 29), obtain_arg_list_22811, *[args_22813, is_method_call_result_22818], **kwargs_22819)
        
        # Assigning a type to the variable 'declared_arguments' (line 134)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 134, 8), 'declared_arguments', obtain_arg_list_call_result_22820)
        
        # Assigning a Call to a Name (line 135):
        
        # Assigning a Call to a Name (line 135):
        
        # Call to create_stacktrace_push(...): (line 135)
        # Processing the call arguments (line 135)
        # Getting the type of 'node' (line 135)
        node_22823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 59), 'node', False)
        # Obtaining the member 'name' of a type (line 135)
        name_22824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 59), node_22823, 'name')
        # Getting the type of 'declared_arguments' (line 135)
        declared_arguments_22825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 70), 'declared_arguments', False)
        # Processing the call keyword arguments (line 135)
        kwargs_22826 = {}
        # Getting the type of 'functions_copy' (line 135)
        functions_copy_22821 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 135, 21), 'functions_copy', False)
        # Obtaining the member 'create_stacktrace_push' of a type (line 135)
        create_stacktrace_push_22822 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 135, 21), functions_copy_22821, 'create_stacktrace_push')
        # Calling create_stacktrace_push(args, kwargs) (line 135)
        create_stacktrace_push_call_result_22827 = invoke(stypy.reporting.localization.Localization(__file__, 135, 21), create_stacktrace_push_22822, *[name_22824, declared_arguments_22825], **kwargs_22826)
        
        # Assigning a type to the variable 'stack_push' (line 135)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 135, 8), 'stack_push', create_stacktrace_push_call_result_22827)
        
        # Call to append(...): (line 136)
        # Processing the call arguments (line 136)
        # Getting the type of 'stack_push' (line 136)
        stack_push_22831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 33), 'stack_push', False)
        # Processing the call keyword arguments (line 136)
        kwargs_22832 = {}
        # Getting the type of 'function_def' (line 136)
        function_def_22828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 136, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 136)
        body_22829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 136, 8), function_def_22828, 'body')
        # Obtaining the member 'append' of a type (line 136)
        append_22830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 136, 8), body_22829, 'append')
        # Calling append(args, kwargs) (line 136)
        append_call_result_22833 = invoke(stypy.reporting.localization.Localization(__file__, 136, 8), append_22830, *[stack_push_22831], **kwargs_22832)
        
        
        # Call to append(...): (line 141)
        # Processing the call arguments (line 141)
        
        # Call to create_src_comment(...): (line 141)
        # Processing the call arguments (line 141)
        str_22839 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 141, 73), 'str', 'Default return type storage variable (SSA)')
        # Processing the call keyword arguments (line 141)
        kwargs_22840 = {}
        # Getting the type of 'stypy_functions_copy' (line 141)
        stypy_functions_copy_22837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 141)
        create_src_comment_22838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 141, 33), stypy_functions_copy_22837, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 141)
        create_src_comment_call_result_22841 = invoke(stypy.reporting.localization.Localization(__file__, 141, 33), create_src_comment_22838, *[str_22839], **kwargs_22840)
        
        # Processing the call keyword arguments (line 141)
        kwargs_22842 = {}
        # Getting the type of 'function_def' (line 141)
        function_def_22834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 141, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 141)
        body_22835 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 141, 8), function_def_22834, 'body')
        # Obtaining the member 'append' of a type (line 141)
        append_22836 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 141, 8), body_22835, 'append')
        # Calling append(args, kwargs) (line 141)
        append_call_result_22843 = invoke(stypy.reporting.localization.Localization(__file__, 141, 8), append_22836, *[create_src_comment_call_result_22841], **kwargs_22842)
        
        
        # Call to append(...): (line 142)
        # Processing the call arguments (line 142)
        
        # Call to create_default_return_variable(...): (line 142)
        # Processing the call keyword arguments (line 142)
        kwargs_22849 = {}
        # Getting the type of 'stypy_functions_copy' (line 142)
        stypy_functions_copy_22847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_default_return_variable' of a type (line 142)
        create_default_return_variable_22848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 33), stypy_functions_copy_22847, 'create_default_return_variable')
        # Calling create_default_return_variable(args, kwargs) (line 142)
        create_default_return_variable_call_result_22850 = invoke(stypy.reporting.localization.Localization(__file__, 142, 33), create_default_return_variable_22848, *[], **kwargs_22849)
        
        # Processing the call keyword arguments (line 142)
        kwargs_22851 = {}
        # Getting the type of 'function_def' (line 142)
        function_def_22844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 142, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 142)
        body_22845 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 8), function_def_22844, 'body')
        # Obtaining the member 'append' of a type (line 142)
        append_22846 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 142, 8), body_22845, 'append')
        # Calling append(args, kwargs) (line 142)
        append_call_result_22852 = invoke(stypy.reporting.localization.Localization(__file__, 142, 8), append_22846, *[create_default_return_variable_call_result_22850], **kwargs_22851)
        
        
        # Call to append(...): (line 144)
        # Processing the call arguments (line 144)
        
        # Call to create_blank_line(...): (line 144)
        # Processing the call keyword arguments (line 144)
        kwargs_22858 = {}
        # Getting the type of 'stypy_functions_copy' (line 144)
        stypy_functions_copy_22856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 144)
        create_blank_line_22857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 33), stypy_functions_copy_22856, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 144)
        create_blank_line_call_result_22859 = invoke(stypy.reporting.localization.Localization(__file__, 144, 33), create_blank_line_22857, *[], **kwargs_22858)
        
        # Processing the call keyword arguments (line 144)
        kwargs_22860 = {}
        # Getting the type of 'function_def' (line 144)
        function_def_22853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 144, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 144)
        body_22854 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 8), function_def_22853, 'body')
        # Obtaining the member 'append' of a type (line 144)
        append_22855 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 144, 8), body_22854, 'append')
        # Calling append(args, kwargs) (line 144)
        append_call_result_22861 = invoke(stypy.reporting.localization.Localization(__file__, 144, 8), append_22855, *[create_blank_line_call_result_22859], **kwargs_22860)
        
        
        # Call to append(...): (line 145)
        # Processing the call arguments (line 145)
        
        # Call to create_src_comment(...): (line 146)
        # Processing the call arguments (line 146)
        
        # Call to format(...): (line 146)
        # Processing the call arguments (line 146)
        # Getting the type of 'node' (line 146)
        node_22869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 94), 'node', False)
        # Obtaining the member 'name' of a type (line 146)
        name_22870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 94), node_22869, 'name')
        # Processing the call keyword arguments (line 146)
        kwargs_22871 = {}
        str_22867 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 146, 52), 'str', "Begin of the function '{0}' code")
        # Obtaining the member 'format' of a type (line 146)
        format_22868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 52), str_22867, 'format')
        # Calling format(args, kwargs) (line 146)
        format_call_result_22872 = invoke(stypy.reporting.localization.Localization(__file__, 146, 52), format_22868, *[name_22870], **kwargs_22871)
        
        # Processing the call keyword arguments (line 146)
        kwargs_22873 = {}
        # Getting the type of 'stypy_functions_copy' (line 146)
        stypy_functions_copy_22865 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 146, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 146)
        create_src_comment_22866 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 146, 12), stypy_functions_copy_22865, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 146)
        create_src_comment_call_result_22874 = invoke(stypy.reporting.localization.Localization(__file__, 146, 12), create_src_comment_22866, *[format_call_result_22872], **kwargs_22873)
        
        # Processing the call keyword arguments (line 145)
        kwargs_22875 = {}
        # Getting the type of 'function_def' (line 145)
        function_def_22862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 145, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 145)
        body_22863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 145, 8), function_def_22862, 'body')
        # Obtaining the member 'append' of a type (line 145)
        append_22864 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 145, 8), body_22863, 'append')
        # Calling append(args, kwargs) (line 145)
        append_call_result_22876 = invoke(stypy.reporting.localization.Localization(__file__, 145, 8), append_22864, *[create_src_comment_call_result_22874], **kwargs_22875)
        
        
        # Call to append(...): (line 148)
        # Processing the call arguments (line 148)
        # Getting the type of 'node' (line 148)
        node_22879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 23), 'node', False)
        # Processing the call keyword arguments (line 148)
        kwargs_22880 = {}
        # Getting the type of 'context' (line 148)
        context_22877 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 148, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 148)
        append_22878 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 148, 8), context_22877, 'append')
        # Calling append(args, kwargs) (line 148)
        append_call_result_22881 = invoke(stypy.reporting.localization.Localization(__file__, 148, 8), append_22878, *[node_22879], **kwargs_22880)
        
        
        # Call to extend(...): (line 150)
        # Processing the call arguments (line 150)
        
        # Call to __visit_instruction_body(...): (line 150)
        # Processing the call arguments (line 150)
        # Getting the type of 'node' (line 150)
        node_22887 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 63), 'node', False)
        # Obtaining the member 'body' of a type (line 150)
        body_22888 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 63), node_22887, 'body')
        # Getting the type of 'context' (line 150)
        context_22889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 74), 'context', False)
        # Processing the call keyword arguments (line 150)
        kwargs_22890 = {}
        # Getting the type of 'self' (line 150)
        self_22885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 150)
        visit_instruction_body_22886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 33), self_22885, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 150)
        visit_instruction_body_call_result_22891 = invoke(stypy.reporting.localization.Localization(__file__, 150, 33), visit_instruction_body_22886, *[body_22888, context_22889], **kwargs_22890)
        
        # Processing the call keyword arguments (line 150)
        kwargs_22892 = {}
        # Getting the type of 'function_def' (line 150)
        function_def_22882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 150, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 150)
        body_22883 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 8), function_def_22882, 'body')
        # Obtaining the member 'extend' of a type (line 150)
        extend_22884 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 150, 8), body_22883, 'extend')
        # Calling extend(args, kwargs) (line 150)
        extend_call_result_22893 = invoke(stypy.reporting.localization.Localization(__file__, 150, 8), extend_22884, *[visit_instruction_body_call_result_22891], **kwargs_22892)
        
        
        # Call to remove(...): (line 151)
        # Processing the call arguments (line 151)
        # Getting the type of 'node' (line 151)
        node_22896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 23), 'node', False)
        # Processing the call keyword arguments (line 151)
        kwargs_22897 = {}
        # Getting the type of 'context' (line 151)
        context_22894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 151, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 151)
        remove_22895 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 151, 8), context_22894, 'remove')
        # Calling remove(args, kwargs) (line 151)
        remove_call_result_22898 = invoke(stypy.reporting.localization.Localization(__file__, 151, 8), remove_22895, *[node_22896], **kwargs_22897)
        
        
        # Call to append(...): (line 153)
        # Processing the call arguments (line 153)
        
        # Call to create_end_block_src_comment(...): (line 154)
        # Processing the call arguments (line 154)
        
        # Call to format(...): (line 154)
        # Processing the call arguments (line 154)
        # Getting the type of 'node' (line 154)
        node_22906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 102), 'node', False)
        # Obtaining the member 'name' of a type (line 154)
        name_22907 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 102), node_22906, 'name')
        # Processing the call keyword arguments (line 154)
        kwargs_22908 = {}
        str_22904 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 154, 62), 'str', "End of the function '{0}' code")
        # Obtaining the member 'format' of a type (line 154)
        format_22905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 62), str_22904, 'format')
        # Calling format(args, kwargs) (line 154)
        format_call_result_22909 = invoke(stypy.reporting.localization.Localization(__file__, 154, 62), format_22905, *[name_22907], **kwargs_22908)
        
        # Processing the call keyword arguments (line 154)
        kwargs_22910 = {}
        # Getting the type of 'stypy_functions_copy' (line 154)
        stypy_functions_copy_22902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 154, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_end_block_src_comment' of a type (line 154)
        create_end_block_src_comment_22903 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 154, 12), stypy_functions_copy_22902, 'create_end_block_src_comment')
        # Calling create_end_block_src_comment(args, kwargs) (line 154)
        create_end_block_src_comment_call_result_22911 = invoke(stypy.reporting.localization.Localization(__file__, 154, 12), create_end_block_src_comment_22903, *[format_call_result_22909], **kwargs_22910)
        
        # Processing the call keyword arguments (line 153)
        kwargs_22912 = {}
        # Getting the type of 'function_def' (line 153)
        function_def_22899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 153, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 153)
        body_22900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 8), function_def_22899, 'body')
        # Obtaining the member 'append' of a type (line 153)
        append_22901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 153, 8), body_22900, 'append')
        # Calling append(args, kwargs) (line 153)
        append_call_result_22913 = invoke(stypy.reporting.localization.Localization(__file__, 153, 8), append_22901, *[create_end_block_src_comment_call_result_22911], **kwargs_22912)
        
        
        # Call to append(...): (line 157)
        # Processing the call arguments (line 157)
        
        # Call to create_src_comment(...): (line 157)
        # Processing the call arguments (line 157)
        str_22919 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 157, 73), 'str', 'Stacktrace pop (error reporting)')
        # Processing the call keyword arguments (line 157)
        kwargs_22920 = {}
        # Getting the type of 'stypy_functions_copy' (line 157)
        stypy_functions_copy_22917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 157)
        create_src_comment_22918 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 33), stypy_functions_copy_22917, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 157)
        create_src_comment_call_result_22921 = invoke(stypy.reporting.localization.Localization(__file__, 157, 33), create_src_comment_22918, *[str_22919], **kwargs_22920)
        
        # Processing the call keyword arguments (line 157)
        kwargs_22922 = {}
        # Getting the type of 'function_def' (line 157)
        function_def_22914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 157, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 157)
        body_22915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 8), function_def_22914, 'body')
        # Obtaining the member 'append' of a type (line 157)
        append_22916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 157, 8), body_22915, 'append')
        # Calling append(args, kwargs) (line 157)
        append_call_result_22923 = invoke(stypy.reporting.localization.Localization(__file__, 157, 8), append_22916, *[create_src_comment_call_result_22921], **kwargs_22922)
        
        
        # Assigning a Call to a Name (line 158):
        
        # Assigning a Call to a Name (line 158):
        
        # Call to create_stacktrace_pop(...): (line 158)
        # Processing the call keyword arguments (line 158)
        kwargs_22926 = {}
        # Getting the type of 'functions_copy' (line 158)
        functions_copy_22924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 158, 20), 'functions_copy', False)
        # Obtaining the member 'create_stacktrace_pop' of a type (line 158)
        create_stacktrace_pop_22925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 158, 20), functions_copy_22924, 'create_stacktrace_pop')
        # Calling create_stacktrace_pop(args, kwargs) (line 158)
        create_stacktrace_pop_call_result_22927 = invoke(stypy.reporting.localization.Localization(__file__, 158, 20), create_stacktrace_pop_22925, *[], **kwargs_22926)
        
        # Assigning a type to the variable 'stack_pop' (line 158)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 158, 8), 'stack_pop', create_stacktrace_pop_call_result_22927)
        
        # Call to append(...): (line 159)
        # Processing the call arguments (line 159)
        # Getting the type of 'stack_pop' (line 159)
        stack_pop_22931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 33), 'stack_pop', False)
        # Processing the call keyword arguments (line 159)
        kwargs_22932 = {}
        # Getting the type of 'function_def' (line 159)
        function_def_22928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 159, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 159)
        body_22929 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 8), function_def_22928, 'body')
        # Obtaining the member 'append' of a type (line 159)
        append_22930 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 159, 8), body_22929, 'append')
        # Calling append(args, kwargs) (line 159)
        append_call_result_22933 = invoke(stypy.reporting.localization.Localization(__file__, 159, 8), append_22930, *[stack_pop_22931], **kwargs_22932)
        
        
        # Call to append(...): (line 162)
        # Processing the call arguments (line 162)
        
        # Call to create_src_comment(...): (line 162)
        # Processing the call arguments (line 162)
        
        # Call to format(...): (line 163)
        # Processing the call arguments (line 163)
        # Getting the type of 'node' (line 163)
        node_22941 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 163, 81), 'node', False)
        # Obtaining the member 'name' of a type (line 163)
        name_22942 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 81), node_22941, 'name')
        # Processing the call keyword arguments (line 163)
        kwargs_22943 = {}
        str_22939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 163, 34), 'str', "Destroy the context of function '{0}'")
        # Obtaining the member 'format' of a type (line 163)
        format_22940 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 163, 34), str_22939, 'format')
        # Calling format(args, kwargs) (line 163)
        format_call_result_22944 = invoke(stypy.reporting.localization.Localization(__file__, 163, 34), format_22940, *[name_22942], **kwargs_22943)
        
        # Processing the call keyword arguments (line 162)
        kwargs_22945 = {}
        # Getting the type of 'stypy_functions_copy' (line 162)
        stypy_functions_copy_22937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 162)
        create_src_comment_22938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 33), stypy_functions_copy_22937, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 162)
        create_src_comment_call_result_22946 = invoke(stypy.reporting.localization.Localization(__file__, 162, 33), create_src_comment_22938, *[format_call_result_22944], **kwargs_22945)
        
        # Processing the call keyword arguments (line 162)
        kwargs_22947 = {}
        # Getting the type of 'function_def' (line 162)
        function_def_22934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 162, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 162)
        body_22935 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 8), function_def_22934, 'body')
        # Obtaining the member 'append' of a type (line 162)
        append_22936 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 162, 8), body_22935, 'append')
        # Calling append(args, kwargs) (line 162)
        append_call_result_22948 = invoke(stypy.reporting.localization.Localization(__file__, 162, 8), append_22936, *[create_src_comment_call_result_22946], **kwargs_22947)
        
        
        # Call to append(...): (line 165)
        # Processing the call arguments (line 165)
        
        # Call to create_store_return_from_function(...): (line 165)
        # Processing the call arguments (line 165)
        # Getting the type of 'node' (line 165)
        node_22954 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 88), 'node', False)
        # Obtaining the member 'lineno' of a type (line 165)
        lineno_22955 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 88), node_22954, 'lineno')
        # Getting the type of 'node' (line 165)
        node_22956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 101), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 165)
        col_offset_22957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 101), node_22956, 'col_offset')
        # Processing the call keyword arguments (line 165)
        kwargs_22958 = {}
        # Getting the type of 'stypy_functions_copy' (line 165)
        stypy_functions_copy_22952 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_store_return_from_function' of a type (line 165)
        create_store_return_from_function_22953 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 33), stypy_functions_copy_22952, 'create_store_return_from_function')
        # Calling create_store_return_from_function(args, kwargs) (line 165)
        create_store_return_from_function_call_result_22959 = invoke(stypy.reporting.localization.Localization(__file__, 165, 33), create_store_return_from_function_22953, *[lineno_22955, col_offset_22957], **kwargs_22958)
        
        # Processing the call keyword arguments (line 165)
        kwargs_22960 = {}
        # Getting the type of 'function_def' (line 165)
        function_def_22949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 165, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 165)
        body_22950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 8), function_def_22949, 'body')
        # Obtaining the member 'append' of a type (line 165)
        append_22951 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 165, 8), body_22950, 'append')
        # Calling append(args, kwargs) (line 165)
        append_call_result_22961 = invoke(stypy.reporting.localization.Localization(__file__, 165, 8), append_22951, *[create_store_return_from_function_call_result_22959], **kwargs_22960)
        
        
        # Assigning a Call to a Name (line 166):
        
        # Assigning a Call to a Name (line 166):
        
        # Call to create_context_unset(...): (line 166)
        # Processing the call keyword arguments (line 166)
        kwargs_22964 = {}
        # Getting the type of 'functions_copy' (line 166)
        functions_copy_22962 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 166, 24), 'functions_copy', False)
        # Obtaining the member 'create_context_unset' of a type (line 166)
        create_context_unset_22963 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 166, 24), functions_copy_22962, 'create_context_unset')
        # Calling create_context_unset(args, kwargs) (line 166)
        create_context_unset_call_result_22965 = invoke(stypy.reporting.localization.Localization(__file__, 166, 24), create_context_unset_22963, *[], **kwargs_22964)
        
        # Assigning a type to the variable 'context_unset' (line 166)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 166, 8), 'context_unset', create_context_unset_call_result_22965)
        
        # Call to append(...): (line 167)
        # Processing the call arguments (line 167)
        # Getting the type of 'context_unset' (line 167)
        context_unset_22969 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 33), 'context_unset', False)
        # Processing the call keyword arguments (line 167)
        kwargs_22970 = {}
        # Getting the type of 'function_def' (line 167)
        function_def_22966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 167, 8), 'function_def', False)
        # Obtaining the member 'body' of a type (line 167)
        body_22967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 8), function_def_22966, 'body')
        # Obtaining the member 'append' of a type (line 167)
        append_22968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 167, 8), body_22967, 'append')
        # Calling append(args, kwargs) (line 167)
        append_call_result_22971 = invoke(stypy.reporting.localization.Localization(__file__, 167, 8), append_22968, *[context_unset_22969], **kwargs_22970)
        
        
        
        # Call to is_constructor(...): (line 171)
        # Processing the call arguments (line 171)
        # Getting the type of 'node' (line 171)
        node_22974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 45), 'node', False)
        # Processing the call keyword arguments (line 171)
        kwargs_22975 = {}
        # Getting the type of 'functions_copy' (line 171)
        functions_copy_22972 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 171, 15), 'functions_copy', False)
        # Obtaining the member 'is_constructor' of a type (line 171)
        is_constructor_22973 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 171, 15), functions_copy_22972, 'is_constructor')
        # Calling is_constructor(args, kwargs) (line 171)
        is_constructor_call_result_22976 = invoke(stypy.reporting.localization.Localization(__file__, 171, 15), is_constructor_22973, *[node_22974], **kwargs_22975)
        
        # Applying the 'not' unary operator (line 171)
        result_not__22977 = python_operator(stypy.reporting.localization.Localization(__file__, 171, 11), 'not', is_constructor_call_result_22976)
        
        # Testing if the type of an if condition is none (line 171)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 171, 8), result_not__22977):
            pass
        else:
            
            # Testing the type of an if condition (line 171)
            if_condition_22978 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 171, 8), result_not__22977)
            # Assigning a type to the variable 'if_condition_22978' (line 171)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 171, 8), 'if_condition_22978', if_condition_22978)
            # SSA begins for if statement (line 171)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to append(...): (line 172)
            # Processing the call arguments (line 172)
            
            # Call to create_src_comment(...): (line 172)
            # Processing the call arguments (line 172)
            str_22984 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 172, 77), 'str', 'Return type of the function')
            # Processing the call keyword arguments (line 172)
            kwargs_22985 = {}
            # Getting the type of 'stypy_functions_copy' (line 172)
            stypy_functions_copy_22982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 37), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 172)
            create_src_comment_22983 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 37), stypy_functions_copy_22982, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 172)
            create_src_comment_call_result_22986 = invoke(stypy.reporting.localization.Localization(__file__, 172, 37), create_src_comment_22983, *[str_22984], **kwargs_22985)
            
            # Processing the call keyword arguments (line 172)
            kwargs_22987 = {}
            # Getting the type of 'function_def' (line 172)
            function_def_22979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 172, 12), 'function_def', False)
            # Obtaining the member 'body' of a type (line 172)
            body_22980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 12), function_def_22979, 'body')
            # Obtaining the member 'append' of a type (line 172)
            append_22981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 172, 12), body_22980, 'append')
            # Calling append(args, kwargs) (line 172)
            append_call_result_22988 = invoke(stypy.reporting.localization.Localization(__file__, 172, 12), append_22981, *[create_src_comment_call_result_22986], **kwargs_22987)
            
            
            # Call to append(...): (line 173)
            # Processing the call arguments (line 173)
            
            # Call to create_return_from_function(...): (line 173)
            # Processing the call arguments (line 173)
            # Getting the type of 'node' (line 173)
            node_22994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 86), 'node', False)
            # Obtaining the member 'lineno' of a type (line 173)
            lineno_22995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 86), node_22994, 'lineno')
            int_22996 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 173, 99), 'int')
            # Processing the call keyword arguments (line 173)
            kwargs_22997 = {}
            # Getting the type of 'stypy_functions_copy' (line 173)
            stypy_functions_copy_22992 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 37), 'stypy_functions_copy', False)
            # Obtaining the member 'create_return_from_function' of a type (line 173)
            create_return_from_function_22993 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 37), stypy_functions_copy_22992, 'create_return_from_function')
            # Calling create_return_from_function(args, kwargs) (line 173)
            create_return_from_function_call_result_22998 = invoke(stypy.reporting.localization.Localization(__file__, 173, 37), create_return_from_function_22993, *[lineno_22995, int_22996], **kwargs_22997)
            
            # Processing the call keyword arguments (line 173)
            kwargs_22999 = {}
            # Getting the type of 'function_def' (line 173)
            function_def_22989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 173, 12), 'function_def', False)
            # Obtaining the member 'body' of a type (line 173)
            body_22990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 12), function_def_22989, 'body')
            # Obtaining the member 'append' of a type (line 173)
            append_22991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 173, 12), body_22990, 'append')
            # Calling append(args, kwargs) (line 173)
            append_call_result_23000 = invoke(stypy.reporting.localization.Localization(__file__, 173, 12), append_22991, *[create_return_from_function_call_result_22998], **kwargs_22999)
            
            # SSA join for if statement (line 171)
            module_type_store = module_type_store.join_ssa_context()
            

        
        
        # Call to is_method(...): (line 175)
        # Processing the call arguments (line 175)
        # Getting the type of 'context' (line 175)
        context_23003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 40), 'context', False)
        # Processing the call keyword arguments (line 175)
        kwargs_23004 = {}
        # Getting the type of 'functions_copy' (line 175)
        functions_copy_23001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 175, 15), 'functions_copy', False)
        # Obtaining the member 'is_method' of a type (line 175)
        is_method_23002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 175, 15), functions_copy_23001, 'is_method')
        # Calling is_method(args, kwargs) (line 175)
        is_method_call_result_23005 = invoke(stypy.reporting.localization.Localization(__file__, 175, 15), is_method_23002, *[context_23003], **kwargs_23004)
        
        # Applying the 'not' unary operator (line 175)
        result_not__23006 = python_operator(stypy.reporting.localization.Localization(__file__, 175, 11), 'not', is_method_call_result_23005)
        
        # Testing if the type of an if condition is none (line 175)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 175, 8), result_not__23006):
            
            # Assigning a List to a Name (line 180):
            
            # Assigning a List to a Name (line 180):
            
            # Obtaining an instance of the builtin type 'list' (line 180)
            list_23024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 28), 'list')
            # Adding type elements to the builtin type 'list' instance (line 180)
            
            # Assigning a type to the variable 'register_expr' (line 180)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 12), 'register_expr', list_23024)
        else:
            
            # Testing the type of an if condition (line 175)
            if_condition_23007 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 175, 8), result_not__23006)
            # Assigning a type to the variable 'if_condition_23007' (line 175)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 175, 8), 'if_condition_23007', if_condition_23007)
            # SSA begins for if statement (line 175)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 177):
            
            # Assigning a Call to a Name (line 177):
            
            # Call to create_set_type_of(...): (line 177)
            # Processing the call arguments (line 177)
            # Getting the type of 'node' (line 177)
            node_23010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 68), 'node', False)
            # Obtaining the member 'name' of a type (line 177)
            name_23011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 68), node_23010, 'name')
            
            # Call to create_Name(...): (line 177)
            # Processing the call arguments (line 177)
            # Getting the type of 'node' (line 177)
            node_23014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 110), 'node', False)
            # Obtaining the member 'name' of a type (line 177)
            name_23015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 110), node_23014, 'name')
            # Processing the call keyword arguments (line 177)
            kwargs_23016 = {}
            # Getting the type of 'core_language_copy' (line 177)
            core_language_copy_23012 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 79), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 177)
            create_Name_23013 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 79), core_language_copy_23012, 'create_Name')
            # Calling create_Name(args, kwargs) (line 177)
            create_Name_call_result_23017 = invoke(stypy.reporting.localization.Localization(__file__, 177, 79), create_Name_23013, *[name_23015], **kwargs_23016)
            
            # Getting the type of 'node' (line 178)
            node_23018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 63), 'node', False)
            # Obtaining the member 'lineno' of a type (line 178)
            lineno_23019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 63), node_23018, 'lineno')
            # Getting the type of 'node' (line 178)
            node_23020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 178, 76), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 178)
            col_offset_23021 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 178, 76), node_23020, 'col_offset')
            # Processing the call keyword arguments (line 177)
            kwargs_23022 = {}
            # Getting the type of 'stypy_functions_copy' (line 177)
            stypy_functions_copy_23008 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 177, 28), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 177)
            create_set_type_of_23009 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 177, 28), stypy_functions_copy_23008, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 177)
            create_set_type_of_call_result_23023 = invoke(stypy.reporting.localization.Localization(__file__, 177, 28), create_set_type_of_23009, *[name_23011, create_Name_call_result_23017, lineno_23019, col_offset_23021], **kwargs_23022)
            
            # Assigning a type to the variable 'register_expr' (line 177)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 177, 12), 'register_expr', create_set_type_of_call_result_23023)
            # SSA branch for the else part of an if statement (line 175)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a List to a Name (line 180):
            
            # Assigning a List to a Name (line 180):
            
            # Obtaining an instance of the builtin type 'list' (line 180)
            list_23024 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 180, 28), 'list')
            # Adding type elements to the builtin type 'list' instance (line 180)
            
            # Assigning a type to the variable 'register_expr' (line 180)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 180, 12), 'register_expr', list_23024)
            # SSA join for if statement (line 175)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to flatten_lists(...): (line 182)
        # Processing the call arguments (line 182)
        # Getting the type of 'function_def' (line 182)
        function_def_23027 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 50), 'function_def', False)
        # Getting the type of 'register_expr' (line 182)
        register_expr_23028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 64), 'register_expr', False)
        # Processing the call keyword arguments (line 182)
        kwargs_23029 = {}
        # Getting the type of 'stypy_functions_copy' (line 182)
        stypy_functions_copy_23025 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 182, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 182)
        flatten_lists_23026 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 182, 15), stypy_functions_copy_23025, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 182)
        flatten_lists_call_result_23030 = invoke(stypy.reporting.localization.Localization(__file__, 182, 15), flatten_lists_23026, *[function_def_23027, register_expr_23028], **kwargs_23029)
        
        # Assigning a type to the variable 'stypy_return_type' (line 182)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 182, 8), 'stypy_return_type', flatten_lists_call_result_23030)
        
        # ################# End of 'visit_FunctionDef(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_FunctionDef' in the type store
        # Getting the type of 'stypy_return_type' (line 67)
        stypy_return_type_23031 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 67, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23031)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_FunctionDef'
        return stypy_return_type_23031


    @norecursion
    def visit_Return(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Return'
        module_type_store = module_type_store.open_function_context('visit_Return', 184, 4, False)
        # Assigning a type to the variable 'self' (line 185)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 185, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Return')
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Return.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Return', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Return', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Return(...)' code ##################

        
        # Assigning a Call to a Name (line 187):
        
        # Assigning a Call to a Name (line 187):
        
        # Call to create_attribute(...): (line 187)
        # Processing the call arguments (line 187)
        str_23034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 57), 'str', 'union_type')
        str_23035 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 187, 71), 'str', 'UnionType')
        # Processing the call keyword arguments (line 187)
        kwargs_23036 = {}
        # Getting the type of 'core_language_copy' (line 187)
        core_language_copy_23032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 187, 21), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 187)
        create_attribute_23033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 187, 21), core_language_copy_23032, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 187)
        create_attribute_call_result_23037 = invoke(stypy.reporting.localization.Localization(__file__, 187, 21), create_attribute_23033, *[str_23034, str_23035], **kwargs_23036)
        
        # Assigning a type to the variable 'union_type' (line 187)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 187, 8), 'union_type', create_attribute_call_result_23037)
        
        # Assigning a Call to a Name (line 188):
        
        # Assigning a Call to a Name (line 188):
        
        # Call to create_attribute(...): (line 188)
        # Processing the call arguments (line 188)
        # Getting the type of 'union_type' (line 188)
        union_type_23040 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 56), 'union_type', False)
        str_23041 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 188, 68), 'str', 'add')
        # Processing the call keyword arguments (line 188)
        kwargs_23042 = {}
        # Getting the type of 'core_language_copy' (line 188)
        core_language_copy_23038 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 188, 20), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 188)
        create_attribute_23039 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 188, 20), core_language_copy_23038, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 188)
        create_attribute_call_result_23043 = invoke(stypy.reporting.localization.Localization(__file__, 188, 20), create_attribute_23039, *[union_type_23040, str_23041], **kwargs_23042)
        
        # Assigning a type to the variable 'union_add' (line 188)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 188, 8), 'union_add', create_attribute_call_result_23043)
        
        # Assigning a Call to a Name (line 189):
        
        # Assigning a Call to a Name (line 189):
        
        # Call to create_Name(...): (line 189)
        # Processing the call arguments (line 189)
        # Getting the type of 'stypy_functions_copy' (line 189)
        stypy_functions_copy_23046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 66), 'stypy_functions_copy', False)
        # Obtaining the member 'default_function_ret_var_name' of a type (line 189)
        default_function_ret_var_name_23047 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 66), stypy_functions_copy_23046, 'default_function_ret_var_name')
        # Processing the call keyword arguments (line 189)
        kwargs_23048 = {}
        # Getting the type of 'core_language_copy' (line 189)
        core_language_copy_23044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 189, 35), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 189)
        create_Name_23045 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 189, 35), core_language_copy_23044, 'create_Name')
        # Calling create_Name(args, kwargs) (line 189)
        create_Name_call_result_23049 = invoke(stypy.reporting.localization.Localization(__file__, 189, 35), create_Name_23045, *[default_function_ret_var_name_23047], **kwargs_23048)
        
        # Assigning a type to the variable 'default_function_ret_var' (line 189)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 189, 8), 'default_function_ret_var', create_Name_call_result_23049)
        
        # Getting the type of 'node' (line 190)
        node_23050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 11), 'node')
        # Obtaining the member 'value' of a type (line 190)
        value_23051 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 190, 11), node_23050, 'value')
        # Getting the type of 'None' (line 190)
        None_23052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 190, 29), 'None')
        # Applying the binary operator 'isnot' (line 190)
        result_is_not_23053 = python_operator(stypy.reporting.localization.Localization(__file__, 190, 11), 'isnot', value_23051, None_23052)
        
        # Testing if the type of an if condition is none (line 190)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 190, 8), result_is_not_23053):
            
            # Assigning a Tuple to a Tuple (line 193):
            
            # Assigning a List to a Name (line 193):
            
            # Obtaining an instance of the builtin type 'list' (line 193)
            list_23068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 41), 'list')
            # Adding type elements to the builtin type 'list' instance (line 193)
            
            # Assigning a type to the variable 'tuple_assignment_22266' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22266', list_23068)
            
            # Assigning a Call to a Name (line 193):
            
            # Call to create_Name(...): (line 193)
            # Processing the call arguments (line 193)
            str_23071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 76), 'str', 'types.NoneType')
            # Processing the call keyword arguments (line 193)
            kwargs_23072 = {}
            # Getting the type of 'core_language_copy' (line 193)
            core_language_copy_23069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 45), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 193)
            create_Name_23070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 45), core_language_copy_23069, 'create_Name')
            # Calling create_Name(args, kwargs) (line 193)
            create_Name_call_result_23073 = invoke(stypy.reporting.localization.Localization(__file__, 193, 45), create_Name_23070, *[str_23071], **kwargs_23072)
            
            # Assigning a type to the variable 'tuple_assignment_22267' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22267', create_Name_call_result_23073)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_22266' (line 193)
            tuple_assignment_22266_23074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22266')
            # Assigning a type to the variable 'get_value_stmts' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'get_value_stmts', tuple_assignment_22266_23074)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_22267' (line 193)
            tuple_assignment_22267_23075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22267')
            # Assigning a type to the variable 'value_var' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 29), 'value_var', tuple_assignment_22267_23075)
        else:
            
            # Testing the type of an if condition (line 190)
            if_condition_23054 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 190, 8), result_is_not_23053)
            # Assigning a type to the variable 'if_condition_23054' (line 190)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 190, 8), 'if_condition_23054', if_condition_23054)
            # SSA begins for if statement (line 190)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 191):
            
            # Assigning a Call to a Name:
            
            # Call to visit_value(...): (line 191)
            # Processing the call arguments (line 191)
            # Getting the type of 'node' (line 191)
            node_23057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 58), 'node', False)
            # Obtaining the member 'value' of a type (line 191)
            value_23058 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 58), node_23057, 'value')
            # Getting the type of 'context' (line 191)
            context_23059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 70), 'context', False)
            # Processing the call keyword arguments (line 191)
            kwargs_23060 = {}
            # Getting the type of 'self' (line 191)
            self_23055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 41), 'self', False)
            # Obtaining the member 'visit_value' of a type (line 191)
            visit_value_23056 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 191, 41), self_23055, 'visit_value')
            # Calling visit_value(args, kwargs) (line 191)
            visit_value_call_result_23061 = invoke(stypy.reporting.localization.Localization(__file__, 191, 41), visit_value_23056, *[value_23058, context_23059], **kwargs_23060)
            
            # Assigning a type to the variable 'call_assignment_22263' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_22263', visit_value_call_result_23061)
            
            # Assigning a Call to a Name (line 191):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22263' (line 191)
            call_assignment_22263_23062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_22263', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23063 = stypy_get_value_from_tuple(call_assignment_22263_23062, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22264' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_22264', stypy_get_value_from_tuple_call_result_23063)
            
            # Assigning a Name to a Name (line 191):
            # Getting the type of 'call_assignment_22264' (line 191)
            call_assignment_22264_23064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_22264')
            # Assigning a type to the variable 'get_value_stmts' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'get_value_stmts', call_assignment_22264_23064)
            
            # Assigning a Call to a Name (line 191):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22263' (line 191)
            call_assignment_22263_23065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_22263', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23066 = stypy_get_value_from_tuple(call_assignment_22263_23065, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22265' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_22265', stypy_get_value_from_tuple_call_result_23066)
            
            # Assigning a Name to a Name (line 191):
            # Getting the type of 'call_assignment_22265' (line 191)
            call_assignment_22265_23067 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 191, 12), 'call_assignment_22265')
            # Assigning a type to the variable 'value_var' (line 191)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 191, 29), 'value_var', call_assignment_22265_23067)
            # SSA branch for the else part of an if statement (line 190)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Tuple to a Tuple (line 193):
            
            # Assigning a List to a Name (line 193):
            
            # Obtaining an instance of the builtin type 'list' (line 193)
            list_23068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 41), 'list')
            # Adding type elements to the builtin type 'list' instance (line 193)
            
            # Assigning a type to the variable 'tuple_assignment_22266' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22266', list_23068)
            
            # Assigning a Call to a Name (line 193):
            
            # Call to create_Name(...): (line 193)
            # Processing the call arguments (line 193)
            str_23071 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 193, 76), 'str', 'types.NoneType')
            # Processing the call keyword arguments (line 193)
            kwargs_23072 = {}
            # Getting the type of 'core_language_copy' (line 193)
            core_language_copy_23069 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 45), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 193)
            create_Name_23070 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 193, 45), core_language_copy_23069, 'create_Name')
            # Calling create_Name(args, kwargs) (line 193)
            create_Name_call_result_23073 = invoke(stypy.reporting.localization.Localization(__file__, 193, 45), create_Name_23070, *[str_23071], **kwargs_23072)
            
            # Assigning a type to the variable 'tuple_assignment_22267' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22267', create_Name_call_result_23073)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_22266' (line 193)
            tuple_assignment_22266_23074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22266')
            # Assigning a type to the variable 'get_value_stmts' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'get_value_stmts', tuple_assignment_22266_23074)
            
            # Assigning a Name to a Name (line 193):
            # Getting the type of 'tuple_assignment_22267' (line 193)
            tuple_assignment_22267_23075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 193, 12), 'tuple_assignment_22267')
            # Assigning a type to the variable 'value_var' (line 193)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 193, 29), 'value_var', tuple_assignment_22267_23075)
            # SSA join for if statement (line 190)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Call to a Name (line 195):
        
        # Assigning a Call to a Name (line 195):
        
        # Call to create_call(...): (line 195)
        # Processing the call arguments (line 195)
        # Getting the type of 'union_add' (line 195)
        union_add_23078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 48), 'union_add', False)
        
        # Obtaining an instance of the builtin type 'list' (line 195)
        list_23079 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 195, 59), 'list')
        # Adding type elements to the builtin type 'list' instance (line 195)
        # Adding element type (line 195)
        # Getting the type of 'default_function_ret_var' (line 195)
        default_function_ret_var_23080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 60), 'default_function_ret_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 59), list_23079, default_function_ret_var_23080)
        # Adding element type (line 195)
        # Getting the type of 'value_var' (line 195)
        value_var_23081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 86), 'value_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 195, 59), list_23079, value_var_23081)
        
        # Processing the call keyword arguments (line 195)
        kwargs_23082 = {}
        # Getting the type of 'functions_copy' (line 195)
        functions_copy_23076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 195, 21), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 195)
        create_call_23077 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 195, 21), functions_copy_23076, 'create_call')
        # Calling create_call(args, kwargs) (line 195)
        create_call_call_result_23083 = invoke(stypy.reporting.localization.Localization(__file__, 195, 21), create_call_23077, *[union_add_23078, list_23079], **kwargs_23082)
        
        # Assigning a type to the variable 'union_call' (line 195)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 195, 8), 'union_call', create_call_call_result_23083)
        
        # Assigning a Call to a Name (line 199):
        
        # Assigning a Call to a Name (line 199):
        
        # Call to assign_as_return_type(...): (line 199)
        # Processing the call arguments (line 199)
        # Getting the type of 'union_call' (line 199)
        union_call_23086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 64), 'union_call', False)
        # Processing the call keyword arguments (line 199)
        kwargs_23087 = {}
        # Getting the type of 'stypy_functions_copy' (line 199)
        stypy_functions_copy_23084 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 199, 21), 'stypy_functions_copy', False)
        # Obtaining the member 'assign_as_return_type' of a type (line 199)
        assign_as_return_type_23085 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 199, 21), stypy_functions_copy_23084, 'assign_as_return_type')
        # Calling assign_as_return_type(args, kwargs) (line 199)
        assign_as_return_type_call_result_23088 = invoke(stypy.reporting.localization.Localization(__file__, 199, 21), assign_as_return_type_23085, *[union_call_23086], **kwargs_23087)
        
        # Assigning a type to the variable 'ret_assign' (line 199)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 199, 8), 'ret_assign', assign_as_return_type_call_result_23088)
        
        # Call to flatten_lists(...): (line 200)
        # Processing the call arguments (line 200)
        # Getting the type of 'get_value_stmts' (line 200)
        get_value_stmts_23091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 50), 'get_value_stmts', False)
        # Getting the type of 'ret_assign' (line 200)
        ret_assign_23092 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 67), 'ret_assign', False)
        # Processing the call keyword arguments (line 200)
        kwargs_23093 = {}
        # Getting the type of 'stypy_functions_copy' (line 200)
        stypy_functions_copy_23089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 200, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 200)
        flatten_lists_23090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 200, 15), stypy_functions_copy_23089, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 200)
        flatten_lists_call_result_23094 = invoke(stypy.reporting.localization.Localization(__file__, 200, 15), flatten_lists_23090, *[get_value_stmts_23091, ret_assign_23092], **kwargs_23093)
        
        # Assigning a type to the variable 'stypy_return_type' (line 200)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 200, 8), 'stypy_return_type', flatten_lists_call_result_23094)
        
        # ################# End of 'visit_Return(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Return' in the type store
        # Getting the type of 'stypy_return_type' (line 184)
        stypy_return_type_23095 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 184, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23095)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Return'
        return stypy_return_type_23095


    @norecursion
    def visit_ClassDef(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_ClassDef'
        module_type_store = module_type_store.open_function_context('visit_ClassDef', 204, 4, False)
        # Assigning a type to the variable 'self' (line 205)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 205, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_ClassDef')
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_ClassDef.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_ClassDef', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_ClassDef', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_ClassDef(...)' code ##################

        
        # Assigning a Attribute to a Attribute (line 207):
        
        # Assigning a Attribute to a Attribute (line 207):
        # Getting the type of 'node' (line 207)
        node_23096 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 35), 'node')
        # Obtaining the member 'name' of a type (line 207)
        name_23097 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 35), node_23096, 'name')
        # Getting the type of 'self' (line 207)
        self_23098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 207, 8), 'self')
        # Setting the type of the member 'building_class_name' of a type (line 207)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 207, 8), self_23098, 'building_class_name', name_23097)
        
        # Assigning a Call to a Name (line 210):
        
        # Assigning a Call to a Name (line 210):
        
        # Call to create_src_comment(...): (line 210)
        # Processing the call arguments (line 210)
        
        # Call to format(...): (line 210)
        # Processing the call arguments (line 210)
        # Getting the type of 'node' (line 210)
        node_23103 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 106), 'node', False)
        # Obtaining the member 'name' of a type (line 210)
        name_23104 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 106), node_23103, 'name')
        # Processing the call keyword arguments (line 210)
        kwargs_23105 = {}
        str_23101 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 210, 66), 'str', "Declaration of the '{0}' class")
        # Obtaining the member 'format' of a type (line 210)
        format_23102 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 66), str_23101, 'format')
        # Calling format(args, kwargs) (line 210)
        format_call_result_23106 = invoke(stypy.reporting.localization.Localization(__file__, 210, 66), format_23102, *[name_23104], **kwargs_23105)
        
        # Processing the call keyword arguments (line 210)
        kwargs_23107 = {}
        # Getting the type of 'stypy_functions_copy' (line 210)
        stypy_functions_copy_23099 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 210, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 210)
        create_src_comment_23100 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 210, 26), stypy_functions_copy_23099, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 210)
        create_src_comment_call_result_23108 = invoke(stypy.reporting.localization.Localization(__file__, 210, 26), create_src_comment_23100, *[format_call_result_23106], **kwargs_23107)
        
        # Assigning a type to the variable 'initial_comment' (line 210)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 210, 8), 'initial_comment', create_src_comment_call_result_23108)
        
        # Assigning a List to a Name (line 213):
        
        # Assigning a List to a Name (line 213):
        
        # Obtaining an instance of the builtin type 'list' (line 213)
        list_23109 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 213, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 213)
        
        # Assigning a type to the variable 'superclass_inst' (line 213)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 213, 8), 'superclass_inst', list_23109)
        
        # Assigning a List to a Name (line 214):
        
        # Assigning a List to a Name (line 214):
        
        # Obtaining an instance of the builtin type 'list' (line 214)
        list_23110 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 214, 20), 'list')
        # Adding type elements to the builtin type 'list' instance (line 214)
        
        # Assigning a type to the variable 'new_bases' (line 214)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 214, 8), 'new_bases', list_23110)
        
        # Getting the type of 'node' (line 215)
        node_23111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 215, 26), 'node')
        # Obtaining the member 'bases' of a type (line 215)
        bases_23112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 215, 26), node_23111, 'bases')
        # Assigning a type to the variable 'bases_23112' (line 215)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'bases_23112', bases_23112)
        # Testing if the for loop is going to be iterated (line 215)
        # Testing the type of a for loop iterable (line 215)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 215, 8), bases_23112)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 215, 8), bases_23112):
            # Getting the type of the for loop variable (line 215)
            for_loop_var_23113 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 215, 8), bases_23112)
            # Assigning a type to the variable 'class_name' (line 215)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 215, 8), 'class_name', for_loop_var_23113)
            # SSA begins for a for statement (line 215)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Tuple (line 216):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 216)
            # Processing the call arguments (line 216)
            # Getting the type of 'class_name' (line 216)
            class_name_23116 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 47), 'class_name', False)
            # Getting the type of 'context' (line 217)
            context_23117 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 217, 47), 'context', False)
            # Processing the call keyword arguments (line 216)
            kwargs_23118 = {}
            # Getting the type of 'self' (line 216)
            self_23114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 216)
            visit_23115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 216, 36), self_23114, 'visit')
            # Calling visit(args, kwargs) (line 216)
            visit_call_result_23119 = invoke(stypy.reporting.localization.Localization(__file__, 216, 36), visit_23115, *[class_name_23116, context_23117], **kwargs_23118)
            
            # Assigning a type to the variable 'call_assignment_22268' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_22268', visit_call_result_23119)
            
            # Assigning a Call to a Name (line 216):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22268' (line 216)
            call_assignment_22268_23120 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_22268', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23121 = stypy_get_value_from_tuple(call_assignment_22268_23120, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22269' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_22269', stypy_get_value_from_tuple_call_result_23121)
            
            # Assigning a Name to a Name (line 216):
            # Getting the type of 'call_assignment_22269' (line 216)
            call_assignment_22269_23122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_22269')
            # Assigning a type to the variable 'superclass_' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'superclass_', call_assignment_22269_23122)
            
            # Assigning a Call to a Name (line 216):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22268' (line 216)
            call_assignment_22268_23123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_22268', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23124 = stypy_get_value_from_tuple(call_assignment_22268_23123, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22270' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_22270', stypy_get_value_from_tuple_call_result_23124)
            
            # Assigning a Name to a Name (line 216):
            # Getting the type of 'call_assignment_22270' (line 216)
            call_assignment_22270_23125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 216, 12), 'call_assignment_22270')
            # Assigning a type to the variable 'type_var' (line 216)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 216, 25), 'type_var', call_assignment_22270_23125)
            
            # Call to append(...): (line 222)
            # Processing the call arguments (line 222)
            # Getting the type of 'superclass_' (line 222)
            superclass__23128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 35), 'superclass_', False)
            # Processing the call keyword arguments (line 222)
            kwargs_23129 = {}
            # Getting the type of 'superclass_inst' (line 222)
            superclass_inst_23126 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 222, 12), 'superclass_inst', False)
            # Obtaining the member 'append' of a type (line 222)
            append_23127 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 222, 12), superclass_inst_23126, 'append')
            # Calling append(args, kwargs) (line 222)
            append_call_result_23130 = invoke(stypy.reporting.localization.Localization(__file__, 222, 12), append_23127, *[superclass__23128], **kwargs_23129)
            
            
            # Call to append(...): (line 223)
            # Processing the call arguments (line 223)
            # Getting the type of 'type_var' (line 223)
            type_var_23133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 29), 'type_var', False)
            # Processing the call keyword arguments (line 223)
            kwargs_23134 = {}
            # Getting the type of 'new_bases' (line 223)
            new_bases_23131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 223, 12), 'new_bases', False)
            # Obtaining the member 'append' of a type (line 223)
            append_23132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 223, 12), new_bases_23131, 'append')
            # Calling append(args, kwargs) (line 223)
            append_call_result_23135 = invoke(stypy.reporting.localization.Localization(__file__, 223, 12), append_23132, *[type_var_23133], **kwargs_23134)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a List to a Attribute (line 225):
        
        # Assigning a List to a Attribute (line 225):
        
        # Obtaining an instance of the builtin type 'list' (line 225)
        list_23136 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 225, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 225)
        
        # Getting the type of 'node' (line 225)
        node_23137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 225, 8), 'node')
        # Setting the type of the member 'bases' of a type (line 225)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 225, 8), node_23137, 'bases', list_23136)
        
        # Assigning a List to a Attribute (line 228):
        
        # Assigning a List to a Attribute (line 228):
        
        # Obtaining an instance of the builtin type 'list' (line 228)
        list_23138 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 228, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 228)
        
        # Getting the type of 'node' (line 228)
        node_23139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 228, 8), 'node')
        # Setting the type of the member 'decorator_list' of a type (line 228)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 228, 8), node_23139, 'decorator_list', list_23138)
        
        # Call to append(...): (line 230)
        # Processing the call arguments (line 230)
        # Getting the type of 'node' (line 230)
        node_23142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 23), 'node', False)
        # Processing the call keyword arguments (line 230)
        kwargs_23143 = {}
        # Getting the type of 'context' (line 230)
        context_23140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 230, 8), 'context', False)
        # Obtaining the member 'append' of a type (line 230)
        append_23141 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 230, 8), context_23140, 'append')
        # Calling append(args, kwargs) (line 230)
        append_call_result_23144 = invoke(stypy.reporting.localization.Localization(__file__, 230, 8), append_23141, *[node_23142], **kwargs_23143)
        
        
        # Assigning a Call to a Attribute (line 232):
        
        # Assigning a Call to a Attribute (line 232):
        
        # Call to __visit_instruction_body(...): (line 232)
        # Processing the call arguments (line 232)
        # Getting the type of 'node' (line 232)
        node_23147 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 50), 'node', False)
        # Obtaining the member 'body' of a type (line 232)
        body_23148 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 50), node_23147, 'body')
        # Getting the type of 'context' (line 232)
        context_23149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 61), 'context', False)
        # Processing the call keyword arguments (line 232)
        kwargs_23150 = {}
        # Getting the type of 'self' (line 232)
        self_23145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 20), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 232)
        visit_instruction_body_23146 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 20), self_23145, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 232)
        visit_instruction_body_call_result_23151 = invoke(stypy.reporting.localization.Localization(__file__, 232, 20), visit_instruction_body_23146, *[body_23148, context_23149], **kwargs_23150)
        
        # Getting the type of 'node' (line 232)
        node_23152 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 232, 8), 'node')
        # Setting the type of the member 'body' of a type (line 232)
        module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 232, 8), node_23152, 'body', visit_instruction_body_call_result_23151)
        
        # Call to remove(...): (line 234)
        # Processing the call arguments (line 234)
        # Getting the type of 'node' (line 234)
        node_23155 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 23), 'node', False)
        # Processing the call keyword arguments (line 234)
        kwargs_23156 = {}
        # Getting the type of 'context' (line 234)
        context_23153 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 234, 8), 'context', False)
        # Obtaining the member 'remove' of a type (line 234)
        remove_23154 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 234, 8), context_23153, 'remove')
        # Calling remove(args, kwargs) (line 234)
        remove_call_result_23157 = invoke(stypy.reporting.localization.Localization(__file__, 234, 8), remove_23154, *[node_23155], **kwargs_23156)
        
        
        # Assigning a Call to a Name (line 236):
        
        # Assigning a Call to a Name (line 236):
        
        # Call to create_set_type_of(...): (line 236)
        # Processing the call arguments (line 236)
        # Getting the type of 'node' (line 236)
        node_23160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 64), 'node', False)
        # Obtaining the member 'name' of a type (line 236)
        name_23161 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 64), node_23160, 'name')
        
        # Call to create_Name(...): (line 236)
        # Processing the call arguments (line 236)
        # Getting the type of 'node' (line 236)
        node_23164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 106), 'node', False)
        # Obtaining the member 'name' of a type (line 236)
        name_23165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 106), node_23164, 'name')
        # Processing the call keyword arguments (line 236)
        kwargs_23166 = {}
        # Getting the type of 'core_language_copy' (line 236)
        core_language_copy_23162 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 75), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 236)
        create_Name_23163 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 75), core_language_copy_23162, 'create_Name')
        # Calling create_Name(args, kwargs) (line 236)
        create_Name_call_result_23167 = invoke(stypy.reporting.localization.Localization(__file__, 236, 75), create_Name_23163, *[name_23165], **kwargs_23166)
        
        # Getting the type of 'node' (line 237)
        node_23168 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 59), 'node', False)
        # Obtaining the member 'lineno' of a type (line 237)
        lineno_23169 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 59), node_23168, 'lineno')
        # Getting the type of 'node' (line 237)
        node_23170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 237, 72), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 237)
        col_offset_23171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 237, 72), node_23170, 'col_offset')
        # Processing the call keyword arguments (line 236)
        kwargs_23172 = {}
        # Getting the type of 'stypy_functions_copy' (line 236)
        stypy_functions_copy_23158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 236, 24), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_of' of a type (line 236)
        create_set_type_of_23159 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 236, 24), stypy_functions_copy_23158, 'create_set_type_of')
        # Calling create_set_type_of(args, kwargs) (line 236)
        create_set_type_of_call_result_23173 = invoke(stypy.reporting.localization.Localization(__file__, 236, 24), create_set_type_of_23159, *[name_23161, create_Name_call_result_23167, lineno_23169, col_offset_23171], **kwargs_23172)
        
        # Assigning a type to the variable 'register_expr' (line 236)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 236, 8), 'register_expr', create_set_type_of_call_result_23173)
        
        
        # Call to len(...): (line 240)
        # Processing the call arguments (line 240)
        # Getting the type of 'new_bases' (line 240)
        new_bases_23175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 15), 'new_bases', False)
        # Processing the call keyword arguments (line 240)
        kwargs_23176 = {}
        # Getting the type of 'len' (line 240)
        len_23174 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 240, 11), 'len', False)
        # Calling len(args, kwargs) (line 240)
        len_call_result_23177 = invoke(stypy.reporting.localization.Localization(__file__, 240, 11), len_23174, *[new_bases_23175], **kwargs_23176)
        
        int_23178 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 240, 28), 'int')
        # Applying the binary operator '>' (line 240)
        result_gt_23179 = python_operator(stypy.reporting.localization.Localization(__file__, 240, 11), '>', len_call_result_23177, int_23178)
        
        # Testing if the type of an if condition is none (line 240)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 240, 8), result_gt_23179):
            
            # Assigning a List to a Name (line 249):
            
            # Assigning a List to a Name (line 249):
            
            # Obtaining an instance of the builtin type 'list' (line 249)
            list_23227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 27), 'list')
            # Adding type elements to the builtin type 'list' instance (line 249)
            
            # Assigning a type to the variable 'change_bases' (line 249)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'change_bases', list_23227)
        else:
            
            # Testing the type of an if condition (line 240)
            if_condition_23180 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 240, 8), result_gt_23179)
            # Assigning a type to the variable 'if_condition_23180' (line 240)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 240, 8), 'if_condition_23180', if_condition_23180)
            # SSA begins for if statement (line 240)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Tuple (line 241):
            
            # Assigning a Call to a Name:
            
            # Call to create_get_type_of(...): (line 241)
            # Processing the call arguments (line 241)
            # Getting the type of 'node' (line 241)
            node_23183 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 80), 'node', False)
            # Obtaining the member 'name' of a type (line 241)
            name_23184 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 80), node_23183, 'name')
            # Getting the type of 'node' (line 242)
            node_23185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 75), 'node', False)
            # Obtaining the member 'lineno' of a type (line 242)
            lineno_23186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 75), node_23185, 'lineno')
            # Getting the type of 'node' (line 242)
            node_23187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 242, 88), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 242)
            col_offset_23188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 242, 88), node_23187, 'col_offset')
            # Processing the call keyword arguments (line 241)
            kwargs_23189 = {}
            # Getting the type of 'stypy_functions_copy' (line 241)
            stypy_functions_copy_23181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 40), 'stypy_functions_copy', False)
            # Obtaining the member 'create_get_type_of' of a type (line 241)
            create_get_type_of_23182 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 241, 40), stypy_functions_copy_23181, 'create_get_type_of')
            # Calling create_get_type_of(args, kwargs) (line 241)
            create_get_type_of_call_result_23190 = invoke(stypy.reporting.localization.Localization(__file__, 241, 40), create_get_type_of_23182, *[name_23184, lineno_23186, col_offset_23188], **kwargs_23189)
            
            # Assigning a type to the variable 'call_assignment_22271' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_22271', create_get_type_of_call_result_23190)
            
            # Assigning a Call to a Name (line 241):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22271' (line 241)
            call_assignment_22271_23191 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_22271', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23192 = stypy_get_value_from_tuple(call_assignment_22271_23191, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22272' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_22272', stypy_get_value_from_tuple_call_result_23192)
            
            # Assigning a Name to a Name (line 241):
            # Getting the type of 'call_assignment_22272' (line 241)
            call_assignment_22272_23193 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_22272')
            # Assigning a type to the variable 'class_obj_inst' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'class_obj_inst', call_assignment_22272_23193)
            
            # Assigning a Call to a Name (line 241):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22271' (line 241)
            call_assignment_22271_23194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_22271', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23195 = stypy_get_value_from_tuple(call_assignment_22271_23194, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22273' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_22273', stypy_get_value_from_tuple_call_result_23195)
            
            # Assigning a Name to a Name (line 241):
            # Getting the type of 'call_assignment_22273' (line 241)
            call_assignment_22273_23196 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 241, 12), 'call_assignment_22273')
            # Assigning a type to the variable 'class_var' (line 241)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 241, 28), 'class_var', call_assignment_22273_23196)
            
            # Assigning a Call to a Name (line 243):
            
            # Assigning a Call to a Name (line 243):
            
            # Call to create_attribute(...): (line 243)
            # Processing the call arguments (line 243)
            # Getting the type of 'class_var' (line 243)
            class_var_23199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 72), 'class_var', False)
            str_23200 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 243, 83), 'str', 'change_base_types')
            # Processing the call keyword arguments (line 243)
            kwargs_23201 = {}
            # Getting the type of 'core_language_copy' (line 243)
            core_language_copy_23197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 243, 36), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 243)
            create_attribute_23198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 243, 36), core_language_copy_23197, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 243)
            create_attribute_call_result_23202 = invoke(stypy.reporting.localization.Localization(__file__, 243, 36), create_attribute_23198, *[class_var_23199, str_23200], **kwargs_23201)
            
            # Assigning a type to the variable 'change_base_types_att' (line 243)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 243, 12), 'change_base_types_att', create_attribute_call_result_23202)
            
            # Assigning a Call to a Name (line 244):
            
            # Assigning a Call to a Name (line 244):
            
            # Call to create_type_tuple(...): (line 244)
            # Getting the type of 'new_bases' (line 244)
            new_bases_23205 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 64), 'new_bases', False)
            # Processing the call keyword arguments (line 244)
            kwargs_23206 = {}
            # Getting the type of 'core_language_copy' (line 244)
            core_language_copy_23203 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 244, 26), 'core_language_copy', False)
            # Obtaining the member 'create_type_tuple' of a type (line 244)
            create_type_tuple_23204 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 244, 26), core_language_copy_23203, 'create_type_tuple')
            # Calling create_type_tuple(args, kwargs) (line 244)
            create_type_tuple_call_result_23207 = invoke(stypy.reporting.localization.Localization(__file__, 244, 26), create_type_tuple_23204, *[new_bases_23205], **kwargs_23206)
            
            # Assigning a type to the variable 'bases_tuple' (line 244)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 244, 12), 'bases_tuple', create_type_tuple_call_result_23207)
            
            # Assigning a Call to a Name (line 245):
            
            # Assigning a Call to a Name (line 245):
            
            # Call to create_localization(...): (line 245)
            # Processing the call arguments (line 245)
            # Getting the type of 'node' (line 245)
            node_23210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 245)
            lineno_23211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 68), node_23210, 'lineno')
            # Getting the type of 'node' (line 245)
            node_23212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 245)
            col_offset_23213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 81), node_23212, 'col_offset')
            # Processing the call keyword arguments (line 245)
            kwargs_23214 = {}
            # Getting the type of 'stypy_functions_copy' (line 245)
            stypy_functions_copy_23208 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 245, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 245)
            create_localization_23209 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 245, 27), stypy_functions_copy_23208, 'create_localization')
            # Calling create_localization(args, kwargs) (line 245)
            create_localization_call_result_23215 = invoke(stypy.reporting.localization.Localization(__file__, 245, 27), create_localization_23209, *[lineno_23211, col_offset_23213], **kwargs_23214)
            
            # Assigning a type to the variable 'localization' (line 245)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 245, 12), 'localization', create_localization_call_result_23215)
            
            # Assigning a Call to a Name (line 246):
            
            # Assigning a Call to a Name (line 246):
            
            # Call to create_call_expression(...): (line 246)
            # Processing the call arguments (line 246)
            # Getting the type of 'change_base_types_att' (line 246)
            change_base_types_att_23218 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 70), 'change_base_types_att', False)
            
            # Obtaining an instance of the builtin type 'list' (line 246)
            list_23219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 246, 93), 'list')
            # Adding type elements to the builtin type 'list' instance (line 246)
            # Adding element type (line 246)
            # Getting the type of 'localization' (line 246)
            localization_23220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 94), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 93), list_23219, localization_23220)
            # Adding element type (line 246)
            # Getting the type of 'bases_tuple' (line 246)
            bases_tuple_23221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 108), 'bases_tuple', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 246, 93), list_23219, bases_tuple_23221)
            
            # Processing the call keyword arguments (line 246)
            kwargs_23222 = {}
            # Getting the type of 'functions_copy' (line 246)
            functions_copy_23216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 246, 32), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 246)
            create_call_expression_23217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 246, 32), functions_copy_23216, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 246)
            create_call_expression_call_result_23223 = invoke(stypy.reporting.localization.Localization(__file__, 246, 32), create_call_expression_23217, *[change_base_types_att_23218, list_23219], **kwargs_23222)
            
            # Assigning a type to the variable 'change_bases_call' (line 246)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 246, 12), 'change_bases_call', create_call_expression_call_result_23223)
            
            # Assigning a List to a Name (line 247):
            
            # Assigning a List to a Name (line 247):
            
            # Obtaining an instance of the builtin type 'list' (line 247)
            list_23224 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 247, 27), 'list')
            # Adding type elements to the builtin type 'list' instance (line 247)
            # Adding element type (line 247)
            # Getting the type of 'class_obj_inst' (line 247)
            class_obj_inst_23225 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 28), 'class_obj_inst')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), list_23224, class_obj_inst_23225)
            # Adding element type (line 247)
            # Getting the type of 'change_bases_call' (line 247)
            change_bases_call_23226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 247, 44), 'change_bases_call')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 247, 27), list_23224, change_bases_call_23226)
            
            # Assigning a type to the variable 'change_bases' (line 247)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 247, 12), 'change_bases', list_23224)
            # SSA branch for the else part of an if statement (line 240)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a List to a Name (line 249):
            
            # Assigning a List to a Name (line 249):
            
            # Obtaining an instance of the builtin type 'list' (line 249)
            list_23227 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 249, 27), 'list')
            # Adding type elements to the builtin type 'list' instance (line 249)
            
            # Assigning a type to the variable 'change_bases' (line 249)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 249, 12), 'change_bases', list_23227)
            # SSA join for if statement (line 240)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to flatten_lists(...): (line 251)
        # Processing the call arguments (line 251)
        # Getting the type of 'initial_comment' (line 251)
        initial_comment_23230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 50), 'initial_comment', False)
        # Getting the type of 'superclass_inst' (line 251)
        superclass_inst_23231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 67), 'superclass_inst', False)
        # Getting the type of 'node' (line 251)
        node_23232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 84), 'node', False)
        
        # Call to create_blank_line(...): (line 252)
        # Processing the call keyword arguments (line 252)
        kwargs_23235 = {}
        # Getting the type of 'stypy_functions_copy' (line 252)
        stypy_functions_copy_23233 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 252)
        create_blank_line_23234 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 252, 45), stypy_functions_copy_23233, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 252)
        create_blank_line_call_result_23236 = invoke(stypy.reporting.localization.Localization(__file__, 252, 45), create_blank_line_23234, *[], **kwargs_23235)
        
        # Getting the type of 'register_expr' (line 252)
        register_expr_23237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 87), 'register_expr', False)
        # Getting the type of 'change_bases' (line 252)
        change_bases_23238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 252, 102), 'change_bases', False)
        # Processing the call keyword arguments (line 251)
        kwargs_23239 = {}
        # Getting the type of 'stypy_functions_copy' (line 251)
        stypy_functions_copy_23228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 251, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 251)
        flatten_lists_23229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 251, 15), stypy_functions_copy_23228, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 251)
        flatten_lists_call_result_23240 = invoke(stypy.reporting.localization.Localization(__file__, 251, 15), flatten_lists_23229, *[initial_comment_23230, superclass_inst_23231, node_23232, create_blank_line_call_result_23236, register_expr_23237, change_bases_23238], **kwargs_23239)
        
        # Assigning a type to the variable 'stypy_return_type' (line 251)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 251, 8), 'stypy_return_type', flatten_lists_call_result_23240)
        
        # ################# End of 'visit_ClassDef(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_ClassDef' in the type store
        # Getting the type of 'stypy_return_type' (line 204)
        stypy_return_type_23241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 204, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23241)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_ClassDef'
        return stypy_return_type_23241


    @norecursion
    def visit_Assign(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Assign'
        module_type_store = module_type_store.open_function_context('visit_Assign', 256, 4, False)
        # Assigning a type to the variable 'self' (line 257)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 257, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Assign')
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Assign.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Assign', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Assign', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Assign(...)' code ##################

        
        # Assigning a Call to a Tuple (line 259):
        
        # Assigning a Call to a Name:
        
        # Call to visit_value(...): (line 259)
        # Processing the call arguments (line 259)
        # Getting the type of 'node' (line 259)
        node_23244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 55), 'node', False)
        # Obtaining the member 'value' of a type (line 259)
        value_23245 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 55), node_23244, 'value')
        # Getting the type of 'context' (line 259)
        context_23246 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 67), 'context', False)
        # Processing the call keyword arguments (line 259)
        kwargs_23247 = {}
        # Getting the type of 'self' (line 259)
        self_23242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 38), 'self', False)
        # Obtaining the member 'visit_value' of a type (line 259)
        visit_value_23243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 259, 38), self_23242, 'visit_value')
        # Calling visit_value(args, kwargs) (line 259)
        visit_value_call_result_23248 = invoke(stypy.reporting.localization.Localization(__file__, 259, 38), visit_value_23243, *[value_23245, context_23246], **kwargs_23247)
        
        # Assigning a type to the variable 'call_assignment_22274' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_22274', visit_value_call_result_23248)
        
        # Assigning a Call to a Name (line 259):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22274' (line 259)
        call_assignment_22274_23249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_22274', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_23250 = stypy_get_value_from_tuple(call_assignment_22274_23249, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22275' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_22275', stypy_get_value_from_tuple_call_result_23250)
        
        # Assigning a Name to a Name (line 259):
        # Getting the type of 'call_assignment_22275' (line 259)
        call_assignment_22275_23251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_22275')
        # Assigning a type to the variable 'get_value_stmts' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'get_value_stmts', call_assignment_22275_23251)
        
        # Assigning a Call to a Name (line 259):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22274' (line 259)
        call_assignment_22274_23252 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_22274', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_23253 = stypy_get_value_from_tuple(call_assignment_22274_23252, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22276' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_22276', stypy_get_value_from_tuple_call_result_23253)
        
        # Assigning a Name to a Name (line 259):
        # Getting the type of 'call_assignment_22276' (line 259)
        call_assignment_22276_23254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 259, 8), 'call_assignment_22276')
        # Assigning a type to the variable 'temp_value' (line 259)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 259, 25), 'temp_value', call_assignment_22276_23254)
        
        
        # Call to type(...): (line 261)
        # Processing the call arguments (line 261)
        # Getting the type of 'temp_value' (line 261)
        temp_value_23256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 16), 'temp_value', False)
        # Processing the call keyword arguments (line 261)
        kwargs_23257 = {}
        # Getting the type of 'type' (line 261)
        type_23255 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 11), 'type', False)
        # Calling type(args, kwargs) (line 261)
        type_call_result_23258 = invoke(stypy.reporting.localization.Localization(__file__, 261, 11), type_23255, *[temp_value_23256], **kwargs_23257)
        
        # Getting the type of 'ast' (line 261)
        ast_23259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 261, 31), 'ast')
        # Obtaining the member 'Tuple' of a type (line 261)
        Tuple_23260 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 261, 31), ast_23259, 'Tuple')
        # Applying the binary operator 'is' (line 261)
        result_is__23261 = python_operator(stypy.reporting.localization.Localization(__file__, 261, 11), 'is', type_call_result_23258, Tuple_23260)
        
        # Testing if the type of an if condition is none (line 261)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 261, 8), result_is__23261):
            pass
        else:
            
            # Testing the type of an if condition (line 261)
            if_condition_23262 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 261, 8), result_is__23261)
            # Assigning a type to the variable 'if_condition_23262' (line 261)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 261, 8), 'if_condition_23262', if_condition_23262)
            # SSA begins for if statement (line 261)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 262):
            
            # Assigning a Subscript to a Name (line 262):
            
            # Obtaining the type of the subscript
            int_23263 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 262, 41), 'int')
            # Getting the type of 'temp_value' (line 262)
            temp_value_23264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 262, 25), 'temp_value')
            # Obtaining the member 'elts' of a type (line 262)
            elts_23265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 25), temp_value_23264, 'elts')
            # Obtaining the member '__getitem__' of a type (line 262)
            getitem___23266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 262, 25), elts_23265, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 262)
            subscript_call_result_23267 = invoke(stypy.reporting.localization.Localization(__file__, 262, 25), getitem___23266, int_23263)
            
            # Assigning a type to the variable 'temp_value' (line 262)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 262, 12), 'temp_value', subscript_call_result_23267)
            # SSA join for if statement (line 261)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to isinstance(...): (line 264)
        # Processing the call arguments (line 264)
        
        # Obtaining the type of the subscript
        int_23269 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 264, 35), 'int')
        # Getting the type of 'node' (line 264)
        node_23270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 22), 'node', False)
        # Obtaining the member 'targets' of a type (line 264)
        targets_23271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 22), node_23270, 'targets')
        # Obtaining the member '__getitem__' of a type (line 264)
        getitem___23272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 22), targets_23271, '__getitem__')
        # Calling the subscript (__getitem__) to obtain the elements type (line 264)
        subscript_call_result_23273 = invoke(stypy.reporting.localization.Localization(__file__, 264, 22), getitem___23272, int_23269)
        
        # Getting the type of 'ast' (line 264)
        ast_23274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 39), 'ast', False)
        # Obtaining the member 'Name' of a type (line 264)
        Name_23275 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 264, 39), ast_23274, 'Name')
        # Processing the call keyword arguments (line 264)
        kwargs_23276 = {}
        # Getting the type of 'isinstance' (line 264)
        isinstance_23268 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 264, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 264)
        isinstance_call_result_23277 = invoke(stypy.reporting.localization.Localization(__file__, 264, 11), isinstance_23268, *[subscript_call_result_23273, Name_23275], **kwargs_23276)
        
        # Testing if the type of an if condition is none (line 264)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 264, 8), isinstance_call_result_23277):
            
            # Assigning a Call to a Tuple (line 269):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 269)
            # Processing the call arguments (line 269)
            
            # Obtaining the type of the subscript
            int_23297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 67), 'int')
            # Getting the type of 'node' (line 269)
            node_23298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 54), 'node', False)
            # Obtaining the member 'targets' of a type (line 269)
            targets_23299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), node_23298, 'targets')
            # Obtaining the member '__getitem__' of a type (line 269)
            getitem___23300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), targets_23299, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 269)
            subscript_call_result_23301 = invoke(stypy.reporting.localization.Localization(__file__, 269, 54), getitem___23300, int_23297)
            
            # Obtaining the member 'value' of a type (line 269)
            value_23302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), subscript_call_result_23301, 'value')
            # Getting the type of 'context' (line 269)
            context_23303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 77), 'context', False)
            # Processing the call keyword arguments (line 269)
            kwargs_23304 = {}
            # Getting the type of 'self' (line 269)
            self_23295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 269)
            visit_23296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 43), self_23295, 'visit')
            # Calling visit(args, kwargs) (line 269)
            visit_call_result_23305 = invoke(stypy.reporting.localization.Localization(__file__, 269, 43), visit_23296, *[value_23302, context_23303], **kwargs_23304)
            
            # Assigning a type to the variable 'call_assignment_22277' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22277', visit_call_result_23305)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22277' (line 269)
            call_assignment_22277_23306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22277', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23307 = stypy_get_value_from_tuple(call_assignment_22277_23306, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22278' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22278', stypy_get_value_from_tuple_call_result_23307)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_22278' (line 269)
            call_assignment_22278_23308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22278')
            # Assigning a type to the variable 'get_target_stmts' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'get_target_stmts', call_assignment_22278_23308)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22277' (line 269)
            call_assignment_22277_23309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22277', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23310 = stypy_get_value_from_tuple(call_assignment_22277_23309, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22279' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22279', stypy_get_value_from_tuple_call_result_23310)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_22279' (line 269)
            call_assignment_22279_23311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22279')
            # Assigning a type to the variable 'target_var' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 30), 'target_var', call_assignment_22279_23311)
            
            
            # Call to type(...): (line 270)
            # Processing the call arguments (line 270)
            # Getting the type of 'target_var' (line 270)
            target_var_23313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 20), 'target_var', False)
            # Processing the call keyword arguments (line 270)
            kwargs_23314 = {}
            # Getting the type of 'type' (line 270)
            type_23312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 15), 'type', False)
            # Calling type(args, kwargs) (line 270)
            type_call_result_23315 = invoke(stypy.reporting.localization.Localization(__file__, 270, 15), type_23312, *[target_var_23313], **kwargs_23314)
            
            # Getting the type of 'ast' (line 270)
            ast_23316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 35), 'ast')
            # Obtaining the member 'Tuple' of a type (line 270)
            Tuple_23317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 35), ast_23316, 'Tuple')
            # Applying the binary operator 'is' (line 270)
            result_is__23318 = python_operator(stypy.reporting.localization.Localization(__file__, 270, 15), 'is', type_call_result_23315, Tuple_23317)
            
            # Testing if the type of an if condition is none (line 270)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__23318):
                pass
            else:
                
                # Testing the type of an if condition (line 270)
                if_condition_23319 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__23318)
                # Assigning a type to the variable 'if_condition_23319' (line 270)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'if_condition_23319', if_condition_23319)
                # SSA begins for if statement (line 270)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Name (line 271):
                
                # Assigning a Subscript to a Name (line 271):
                
                # Obtaining the type of the subscript
                int_23320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 45), 'int')
                # Getting the type of 'target_var' (line 271)
                target_var_23321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 29), 'target_var')
                # Obtaining the member 'elts' of a type (line 271)
                elts_23322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), target_var_23321, 'elts')
                # Obtaining the member '__getitem__' of a type (line 271)
                getitem___23323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), elts_23322, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 271)
                subscript_call_result_23324 = invoke(stypy.reporting.localization.Localization(__file__, 271, 29), getitem___23323, int_23320)
                
                # Assigning a type to the variable 'target_var' (line 271)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'target_var', subscript_call_result_23324)
                # SSA join for if statement (line 270)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to isinstance(...): (line 273)
            # Processing the call arguments (line 273)
            
            # Obtaining the type of the subscript
            int_23326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 39), 'int')
            # Getting the type of 'node' (line 273)
            node_23327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 26), 'node', False)
            # Obtaining the member 'targets' of a type (line 273)
            targets_23328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), node_23327, 'targets')
            # Obtaining the member '__getitem__' of a type (line 273)
            getitem___23329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), targets_23328, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 273)
            subscript_call_result_23330 = invoke(stypy.reporting.localization.Localization(__file__, 273, 26), getitem___23329, int_23326)
            
            # Getting the type of 'ast' (line 273)
            ast_23331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 43), 'ast', False)
            # Obtaining the member 'Subscript' of a type (line 273)
            Subscript_23332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 43), ast_23331, 'Subscript')
            # Processing the call keyword arguments (line 273)
            kwargs_23333 = {}
            # Getting the type of 'isinstance' (line 273)
            isinstance_23325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 15), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 273)
            isinstance_call_result_23334 = invoke(stypy.reporting.localization.Localization(__file__, 273, 15), isinstance_23325, *[subscript_call_result_23330, Subscript_23332], **kwargs_23333)
            
            # Testing if the type of an if condition is none (line 273)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_23334):
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_23381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_23382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_23383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_23384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_23383, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___23385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_23384, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_23386 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___23385, int_23382)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_23387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_23386, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_23388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_23389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_23390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_23391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_23390, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___23392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_23391, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_23393 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___23392, int_23389)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_23394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_23393, 'lineno')
                
                # Obtaining the type of the subscript
                int_23395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_23396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_23397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_23396, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___23398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_23397, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_23399 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___23398, int_23395)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_23400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_23399, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_23401 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_23379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_23380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_23379, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_23402 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_23380, *[target_var_23381, attr_23387, temp_value_23388, lineno_23394, col_offset_23400], **kwargs_23401)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_23402)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_23405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_23406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_23407 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_23403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_23404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_23403, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_23408 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_23404, *[get_target_stmts_23405, set_type_of_stmts_23406], **kwargs_23407)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_23408)
            else:
                
                # Testing the type of an if condition (line 273)
                if_condition_23335 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_23334)
                # Assigning a type to the variable 'if_condition_23335' (line 273)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 273, 12), 'if_condition_23335', if_condition_23335)
                # SSA begins for if statement (line 273)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 277):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 277)
                # Processing the call arguments (line 277)
                
                # Obtaining the type of the subscript
                int_23338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 65), 'int')
                # Getting the type of 'node' (line 277)
                node_23339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 52), 'node', False)
                # Obtaining the member 'targets' of a type (line 277)
                targets_23340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), node_23339, 'targets')
                # Obtaining the member '__getitem__' of a type (line 277)
                getitem___23341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), targets_23340, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 277)
                subscript_call_result_23342 = invoke(stypy.reporting.localization.Localization(__file__, 277, 52), getitem___23341, int_23338)
                
                # Obtaining the member 'slice' of a type (line 277)
                slice_23343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), subscript_call_result_23342, 'slice')
                # Getting the type of 'context' (line 277)
                context_23344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 75), 'context', False)
                # Processing the call keyword arguments (line 277)
                kwargs_23345 = {}
                # Getting the type of 'self' (line 277)
                self_23336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 277)
                visit_23337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 41), self_23336, 'visit')
                # Calling visit(args, kwargs) (line 277)
                visit_call_result_23346 = invoke(stypy.reporting.localization.Localization(__file__, 277, 41), visit_23337, *[slice_23343, context_23344], **kwargs_23345)
                
                # Assigning a type to the variable 'call_assignment_22280' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22280', visit_call_result_23346)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22280' (line 277)
                call_assignment_22280_23347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22280', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23348 = stypy_get_value_from_tuple(call_assignment_22280_23347, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22281' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22281', stypy_get_value_from_tuple_call_result_23348)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_22281' (line 277)
                call_assignment_22281_23349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22281')
                # Assigning a type to the variable 'slice_stmts' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'slice_stmts', call_assignment_22281_23349)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22280' (line 277)
                call_assignment_22280_23350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22280', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23351 = stypy_get_value_from_tuple(call_assignment_22280_23350, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22282' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22282', stypy_get_value_from_tuple_call_result_23351)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_22282' (line 277)
                call_assignment_22282_23352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22282')
                # Assigning a type to the variable 'slice_var' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 29), 'slice_var', call_assignment_22282_23352)
                
                # Assigning a Call to a Name (line 278):
                
                # Assigning a Call to a Name (line 278):
                
                # Call to create_add_stored_type(...): (line 278)
                # Processing the call arguments (line 278)
                # Getting the type of 'target_var' (line 278)
                target_var_23355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 278)
                slice_var_23356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 92), 'slice_var', False)
                # Getting the type of 'temp_value' (line 278)
                temp_value_23357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 103), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_23358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 88), 'int')
                # Getting the type of 'node' (line 279)
                node_23359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 279)
                targets_23360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), node_23359, 'targets')
                # Obtaining the member '__getitem__' of a type (line 279)
                getitem___23361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), targets_23360, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 279)
                subscript_call_result_23362 = invoke(stypy.reporting.localization.Localization(__file__, 279, 75), getitem___23361, int_23358)
                
                # Obtaining the member 'lineno' of a type (line 279)
                lineno_23363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), subscript_call_result_23362, 'lineno')
                
                # Obtaining the type of the subscript
                int_23364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 88), 'int')
                # Getting the type of 'node' (line 280)
                node_23365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 280)
                targets_23366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), node_23365, 'targets')
                # Obtaining the member '__getitem__' of a type (line 280)
                getitem___23367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), targets_23366, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 280)
                subscript_call_result_23368 = invoke(stypy.reporting.localization.Localization(__file__, 280, 75), getitem___23367, int_23364)
                
                # Obtaining the member 'col_offset' of a type (line 280)
                col_offset_23369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), subscript_call_result_23368, 'col_offset')
                # Processing the call keyword arguments (line 278)
                kwargs_23370 = {}
                # Getting the type of 'stypy_functions_copy' (line 278)
                stypy_functions_copy_23353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 278)
                create_add_stored_type_23354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 36), stypy_functions_copy_23353, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 278)
                create_add_stored_type_call_result_23371 = invoke(stypy.reporting.localization.Localization(__file__, 278, 36), create_add_stored_type_23354, *[target_var_23355, slice_var_23356, temp_value_23357, lineno_23363, col_offset_23369], **kwargs_23370)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 278)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 16), 'set_type_of_stmts', create_add_stored_type_call_result_23371)
                
                # Assigning a Call to a Name (line 281):
                
                # Assigning a Call to a Name (line 281):
                
                # Call to flatten_lists(...): (line 281)
                # Processing the call arguments (line 281)
                # Getting the type of 'get_target_stmts' (line 281)
                get_target_stmts_23374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 71), 'get_target_stmts', False)
                # Getting the type of 'slice_stmts' (line 281)
                slice_stmts_23375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 89), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 281)
                set_type_of_stmts_23376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 102), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 281)
                kwargs_23377 = {}
                # Getting the type of 'stypy_functions_copy' (line 281)
                stypy_functions_copy_23372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 281)
                flatten_lists_23373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 36), stypy_functions_copy_23372, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 281)
                flatten_lists_call_result_23378 = invoke(stypy.reporting.localization.Localization(__file__, 281, 36), flatten_lists_23373, *[get_target_stmts_23374, slice_stmts_23375, set_type_of_stmts_23376], **kwargs_23377)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 281)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 16), 'set_type_of_stmts', flatten_lists_call_result_23378)
                # SSA branch for the else part of an if statement (line 273)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_23381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_23382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_23383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_23384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_23383, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___23385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_23384, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_23386 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___23385, int_23382)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_23387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_23386, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_23388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_23389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_23390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_23391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_23390, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___23392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_23391, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_23393 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___23392, int_23389)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_23394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_23393, 'lineno')
                
                # Obtaining the type of the subscript
                int_23395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_23396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_23397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_23396, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___23398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_23397, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_23399 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___23398, int_23395)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_23400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_23399, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_23401 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_23379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_23380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_23379, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_23402 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_23380, *[target_var_23381, attr_23387, temp_value_23388, lineno_23394, col_offset_23400], **kwargs_23401)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_23402)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_23405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_23406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_23407 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_23403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_23404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_23403, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_23408 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_23404, *[get_target_stmts_23405, set_type_of_stmts_23406], **kwargs_23407)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_23408)
                # SSA join for if statement (line 273)
                module_type_store = module_type_store.join_ssa_context()
                

        else:
            
            # Testing the type of an if condition (line 264)
            if_condition_23278 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 264, 8), isinstance_call_result_23277)
            # Assigning a type to the variable 'if_condition_23278' (line 264)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 264, 8), 'if_condition_23278', if_condition_23278)
            # SSA begins for if statement (line 264)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Subscript to a Name (line 265):
            
            # Assigning a Subscript to a Name (line 265):
            
            # Obtaining the type of the subscript
            int_23279 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 265, 32), 'int')
            # Getting the type of 'node' (line 265)
            node_23280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 265, 19), 'node')
            # Obtaining the member 'targets' of a type (line 265)
            targets_23281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 19), node_23280, 'targets')
            # Obtaining the member '__getitem__' of a type (line 265)
            getitem___23282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 265, 19), targets_23281, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 265)
            subscript_call_result_23283 = invoke(stypy.reporting.localization.Localization(__file__, 265, 19), getitem___23282, int_23279)
            
            # Assigning a type to the variable 'name' (line 265)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 265, 12), 'name', subscript_call_result_23283)
            
            # Assigning a Call to a Name (line 266):
            
            # Assigning a Call to a Name (line 266):
            
            # Call to create_set_type_of(...): (line 266)
            # Processing the call arguments (line 266)
            # Getting the type of 'name' (line 266)
            name_23286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 72), 'name', False)
            # Obtaining the member 'id' of a type (line 266)
            id_23287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 72), name_23286, 'id')
            # Getting the type of 'temp_value' (line 266)
            temp_value_23288 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 81), 'temp_value', False)
            # Getting the type of 'name' (line 266)
            name_23289 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 93), 'name', False)
            # Obtaining the member 'lineno' of a type (line 266)
            lineno_23290 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 93), name_23289, 'lineno')
            # Getting the type of 'name' (line 267)
            name_23291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 267, 67), 'name', False)
            # Obtaining the member 'col_offset' of a type (line 267)
            col_offset_23292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 267, 67), name_23291, 'col_offset')
            # Processing the call keyword arguments (line 266)
            kwargs_23293 = {}
            # Getting the type of 'stypy_functions_copy' (line 266)
            stypy_functions_copy_23284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 266, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 266)
            create_set_type_of_23285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 266, 32), stypy_functions_copy_23284, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 266)
            create_set_type_of_call_result_23294 = invoke(stypy.reporting.localization.Localization(__file__, 266, 32), create_set_type_of_23285, *[id_23287, temp_value_23288, lineno_23290, col_offset_23292], **kwargs_23293)
            
            # Assigning a type to the variable 'set_type_of_stmts' (line 266)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 266, 12), 'set_type_of_stmts', create_set_type_of_call_result_23294)
            # SSA branch for the else part of an if statement (line 264)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 269):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 269)
            # Processing the call arguments (line 269)
            
            # Obtaining the type of the subscript
            int_23297 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 269, 67), 'int')
            # Getting the type of 'node' (line 269)
            node_23298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 54), 'node', False)
            # Obtaining the member 'targets' of a type (line 269)
            targets_23299 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), node_23298, 'targets')
            # Obtaining the member '__getitem__' of a type (line 269)
            getitem___23300 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), targets_23299, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 269)
            subscript_call_result_23301 = invoke(stypy.reporting.localization.Localization(__file__, 269, 54), getitem___23300, int_23297)
            
            # Obtaining the member 'value' of a type (line 269)
            value_23302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 54), subscript_call_result_23301, 'value')
            # Getting the type of 'context' (line 269)
            context_23303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 77), 'context', False)
            # Processing the call keyword arguments (line 269)
            kwargs_23304 = {}
            # Getting the type of 'self' (line 269)
            self_23295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 269)
            visit_23296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 269, 43), self_23295, 'visit')
            # Calling visit(args, kwargs) (line 269)
            visit_call_result_23305 = invoke(stypy.reporting.localization.Localization(__file__, 269, 43), visit_23296, *[value_23302, context_23303], **kwargs_23304)
            
            # Assigning a type to the variable 'call_assignment_22277' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22277', visit_call_result_23305)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22277' (line 269)
            call_assignment_22277_23306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22277', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23307 = stypy_get_value_from_tuple(call_assignment_22277_23306, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22278' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22278', stypy_get_value_from_tuple_call_result_23307)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_22278' (line 269)
            call_assignment_22278_23308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22278')
            # Assigning a type to the variable 'get_target_stmts' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'get_target_stmts', call_assignment_22278_23308)
            
            # Assigning a Call to a Name (line 269):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22277' (line 269)
            call_assignment_22277_23309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22277', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23310 = stypy_get_value_from_tuple(call_assignment_22277_23309, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22279' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22279', stypy_get_value_from_tuple_call_result_23310)
            
            # Assigning a Name to a Name (line 269):
            # Getting the type of 'call_assignment_22279' (line 269)
            call_assignment_22279_23311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 269, 12), 'call_assignment_22279')
            # Assigning a type to the variable 'target_var' (line 269)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 269, 30), 'target_var', call_assignment_22279_23311)
            
            
            # Call to type(...): (line 270)
            # Processing the call arguments (line 270)
            # Getting the type of 'target_var' (line 270)
            target_var_23313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 20), 'target_var', False)
            # Processing the call keyword arguments (line 270)
            kwargs_23314 = {}
            # Getting the type of 'type' (line 270)
            type_23312 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 15), 'type', False)
            # Calling type(args, kwargs) (line 270)
            type_call_result_23315 = invoke(stypy.reporting.localization.Localization(__file__, 270, 15), type_23312, *[target_var_23313], **kwargs_23314)
            
            # Getting the type of 'ast' (line 270)
            ast_23316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 270, 35), 'ast')
            # Obtaining the member 'Tuple' of a type (line 270)
            Tuple_23317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 270, 35), ast_23316, 'Tuple')
            # Applying the binary operator 'is' (line 270)
            result_is__23318 = python_operator(stypy.reporting.localization.Localization(__file__, 270, 15), 'is', type_call_result_23315, Tuple_23317)
            
            # Testing if the type of an if condition is none (line 270)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__23318):
                pass
            else:
                
                # Testing the type of an if condition (line 270)
                if_condition_23319 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 270, 12), result_is__23318)
                # Assigning a type to the variable 'if_condition_23319' (line 270)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 270, 12), 'if_condition_23319', if_condition_23319)
                # SSA begins for if statement (line 270)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Subscript to a Name (line 271):
                
                # Assigning a Subscript to a Name (line 271):
                
                # Obtaining the type of the subscript
                int_23320 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 271, 45), 'int')
                # Getting the type of 'target_var' (line 271)
                target_var_23321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 271, 29), 'target_var')
                # Obtaining the member 'elts' of a type (line 271)
                elts_23322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), target_var_23321, 'elts')
                # Obtaining the member '__getitem__' of a type (line 271)
                getitem___23323 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 271, 29), elts_23322, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 271)
                subscript_call_result_23324 = invoke(stypy.reporting.localization.Localization(__file__, 271, 29), getitem___23323, int_23320)
                
                # Assigning a type to the variable 'target_var' (line 271)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 271, 16), 'target_var', subscript_call_result_23324)
                # SSA join for if statement (line 270)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to isinstance(...): (line 273)
            # Processing the call arguments (line 273)
            
            # Obtaining the type of the subscript
            int_23326 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 273, 39), 'int')
            # Getting the type of 'node' (line 273)
            node_23327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 26), 'node', False)
            # Obtaining the member 'targets' of a type (line 273)
            targets_23328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), node_23327, 'targets')
            # Obtaining the member '__getitem__' of a type (line 273)
            getitem___23329 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 26), targets_23328, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 273)
            subscript_call_result_23330 = invoke(stypy.reporting.localization.Localization(__file__, 273, 26), getitem___23329, int_23326)
            
            # Getting the type of 'ast' (line 273)
            ast_23331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 43), 'ast', False)
            # Obtaining the member 'Subscript' of a type (line 273)
            Subscript_23332 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 273, 43), ast_23331, 'Subscript')
            # Processing the call keyword arguments (line 273)
            kwargs_23333 = {}
            # Getting the type of 'isinstance' (line 273)
            isinstance_23325 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 273, 15), 'isinstance', False)
            # Calling isinstance(args, kwargs) (line 273)
            isinstance_call_result_23334 = invoke(stypy.reporting.localization.Localization(__file__, 273, 15), isinstance_23325, *[subscript_call_result_23330, Subscript_23332], **kwargs_23333)
            
            # Testing if the type of an if condition is none (line 273)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_23334):
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_23381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_23382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_23383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_23384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_23383, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___23385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_23384, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_23386 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___23385, int_23382)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_23387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_23386, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_23388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_23389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_23390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_23391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_23390, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___23392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_23391, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_23393 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___23392, int_23389)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_23394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_23393, 'lineno')
                
                # Obtaining the type of the subscript
                int_23395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_23396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_23397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_23396, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___23398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_23397, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_23399 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___23398, int_23395)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_23400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_23399, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_23401 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_23379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_23380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_23379, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_23402 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_23380, *[target_var_23381, attr_23387, temp_value_23388, lineno_23394, col_offset_23400], **kwargs_23401)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_23402)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_23405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_23406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_23407 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_23403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_23404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_23403, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_23408 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_23404, *[get_target_stmts_23405, set_type_of_stmts_23406], **kwargs_23407)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_23408)
            else:
                
                # Testing the type of an if condition (line 273)
                if_condition_23335 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 273, 12), isinstance_call_result_23334)
                # Assigning a type to the variable 'if_condition_23335' (line 273)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 273, 12), 'if_condition_23335', if_condition_23335)
                # SSA begins for if statement (line 273)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 277):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 277)
                # Processing the call arguments (line 277)
                
                # Obtaining the type of the subscript
                int_23338 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 277, 65), 'int')
                # Getting the type of 'node' (line 277)
                node_23339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 52), 'node', False)
                # Obtaining the member 'targets' of a type (line 277)
                targets_23340 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), node_23339, 'targets')
                # Obtaining the member '__getitem__' of a type (line 277)
                getitem___23341 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), targets_23340, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 277)
                subscript_call_result_23342 = invoke(stypy.reporting.localization.Localization(__file__, 277, 52), getitem___23341, int_23338)
                
                # Obtaining the member 'slice' of a type (line 277)
                slice_23343 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 52), subscript_call_result_23342, 'slice')
                # Getting the type of 'context' (line 277)
                context_23344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 75), 'context', False)
                # Processing the call keyword arguments (line 277)
                kwargs_23345 = {}
                # Getting the type of 'self' (line 277)
                self_23336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 41), 'self', False)
                # Obtaining the member 'visit' of a type (line 277)
                visit_23337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 277, 41), self_23336, 'visit')
                # Calling visit(args, kwargs) (line 277)
                visit_call_result_23346 = invoke(stypy.reporting.localization.Localization(__file__, 277, 41), visit_23337, *[slice_23343, context_23344], **kwargs_23345)
                
                # Assigning a type to the variable 'call_assignment_22280' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22280', visit_call_result_23346)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22280' (line 277)
                call_assignment_22280_23347 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22280', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23348 = stypy_get_value_from_tuple(call_assignment_22280_23347, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22281' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22281', stypy_get_value_from_tuple_call_result_23348)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_22281' (line 277)
                call_assignment_22281_23349 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22281')
                # Assigning a type to the variable 'slice_stmts' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'slice_stmts', call_assignment_22281_23349)
                
                # Assigning a Call to a Name (line 277):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22280' (line 277)
                call_assignment_22280_23350 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22280', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23351 = stypy_get_value_from_tuple(call_assignment_22280_23350, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22282' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22282', stypy_get_value_from_tuple_call_result_23351)
                
                # Assigning a Name to a Name (line 277):
                # Getting the type of 'call_assignment_22282' (line 277)
                call_assignment_22282_23352 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 277, 16), 'call_assignment_22282')
                # Assigning a type to the variable 'slice_var' (line 277)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 277, 29), 'slice_var', call_assignment_22282_23352)
                
                # Assigning a Call to a Name (line 278):
                
                # Assigning a Call to a Name (line 278):
                
                # Call to create_add_stored_type(...): (line 278)
                # Processing the call arguments (line 278)
                # Getting the type of 'target_var' (line 278)
                target_var_23355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 80), 'target_var', False)
                # Getting the type of 'slice_var' (line 278)
                slice_var_23356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 92), 'slice_var', False)
                # Getting the type of 'temp_value' (line 278)
                temp_value_23357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 103), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_23358 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 279, 88), 'int')
                # Getting the type of 'node' (line 279)
                node_23359 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 279, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 279)
                targets_23360 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), node_23359, 'targets')
                # Obtaining the member '__getitem__' of a type (line 279)
                getitem___23361 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), targets_23360, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 279)
                subscript_call_result_23362 = invoke(stypy.reporting.localization.Localization(__file__, 279, 75), getitem___23361, int_23358)
                
                # Obtaining the member 'lineno' of a type (line 279)
                lineno_23363 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 279, 75), subscript_call_result_23362, 'lineno')
                
                # Obtaining the type of the subscript
                int_23364 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 280, 88), 'int')
                # Getting the type of 'node' (line 280)
                node_23365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 280, 75), 'node', False)
                # Obtaining the member 'targets' of a type (line 280)
                targets_23366 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), node_23365, 'targets')
                # Obtaining the member '__getitem__' of a type (line 280)
                getitem___23367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), targets_23366, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 280)
                subscript_call_result_23368 = invoke(stypy.reporting.localization.Localization(__file__, 280, 75), getitem___23367, int_23364)
                
                # Obtaining the member 'col_offset' of a type (line 280)
                col_offset_23369 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 280, 75), subscript_call_result_23368, 'col_offset')
                # Processing the call keyword arguments (line 278)
                kwargs_23370 = {}
                # Getting the type of 'stypy_functions_copy' (line 278)
                stypy_functions_copy_23353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 278, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_add_stored_type' of a type (line 278)
                create_add_stored_type_23354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 278, 36), stypy_functions_copy_23353, 'create_add_stored_type')
                # Calling create_add_stored_type(args, kwargs) (line 278)
                create_add_stored_type_call_result_23371 = invoke(stypy.reporting.localization.Localization(__file__, 278, 36), create_add_stored_type_23354, *[target_var_23355, slice_var_23356, temp_value_23357, lineno_23363, col_offset_23369], **kwargs_23370)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 278)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 278, 16), 'set_type_of_stmts', create_add_stored_type_call_result_23371)
                
                # Assigning a Call to a Name (line 281):
                
                # Assigning a Call to a Name (line 281):
                
                # Call to flatten_lists(...): (line 281)
                # Processing the call arguments (line 281)
                # Getting the type of 'get_target_stmts' (line 281)
                get_target_stmts_23374 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 71), 'get_target_stmts', False)
                # Getting the type of 'slice_stmts' (line 281)
                slice_stmts_23375 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 89), 'slice_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 281)
                set_type_of_stmts_23376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 102), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 281)
                kwargs_23377 = {}
                # Getting the type of 'stypy_functions_copy' (line 281)
                stypy_functions_copy_23372 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 281, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 281)
                flatten_lists_23373 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 281, 36), stypy_functions_copy_23372, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 281)
                flatten_lists_call_result_23378 = invoke(stypy.reporting.localization.Localization(__file__, 281, 36), flatten_lists_23373, *[get_target_stmts_23374, slice_stmts_23375, set_type_of_stmts_23376], **kwargs_23377)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 281)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 281, 16), 'set_type_of_stmts', flatten_lists_call_result_23378)
                # SSA branch for the else part of an if statement (line 273)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Call to a Name (line 284):
                
                # Assigning a Call to a Name (line 284):
                
                # Call to create_set_type_of_member(...): (line 284)
                # Processing the call arguments (line 284)
                # Getting the type of 'target_var' (line 284)
                target_var_23381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 83), 'target_var', False)
                
                # Obtaining the type of the subscript
                int_23382 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 284, 108), 'int')
                # Getting the type of 'node' (line 284)
                node_23383 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 95), 'node', False)
                # Obtaining the member 'targets' of a type (line 284)
                targets_23384 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), node_23383, 'targets')
                # Obtaining the member '__getitem__' of a type (line 284)
                getitem___23385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), targets_23384, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 284)
                subscript_call_result_23386 = invoke(stypy.reporting.localization.Localization(__file__, 284, 95), getitem___23385, int_23382)
                
                # Obtaining the member 'attr' of a type (line 284)
                attr_23387 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 95), subscript_call_result_23386, 'attr')
                # Getting the type of 'temp_value' (line 285)
                temp_value_23388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 285, 78), 'temp_value', False)
                
                # Obtaining the type of the subscript
                int_23389 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 286, 91), 'int')
                # Getting the type of 'node' (line 286)
                node_23390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 286, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 286)
                targets_23391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), node_23390, 'targets')
                # Obtaining the member '__getitem__' of a type (line 286)
                getitem___23392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), targets_23391, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 286)
                subscript_call_result_23393 = invoke(stypy.reporting.localization.Localization(__file__, 286, 78), getitem___23392, int_23389)
                
                # Obtaining the member 'lineno' of a type (line 286)
                lineno_23394 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 286, 78), subscript_call_result_23393, 'lineno')
                
                # Obtaining the type of the subscript
                int_23395 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 287, 91), 'int')
                # Getting the type of 'node' (line 287)
                node_23396 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 287, 78), 'node', False)
                # Obtaining the member 'targets' of a type (line 287)
                targets_23397 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), node_23396, 'targets')
                # Obtaining the member '__getitem__' of a type (line 287)
                getitem___23398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), targets_23397, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 287)
                subscript_call_result_23399 = invoke(stypy.reporting.localization.Localization(__file__, 287, 78), getitem___23398, int_23395)
                
                # Obtaining the member 'col_offset' of a type (line 287)
                col_offset_23400 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 287, 78), subscript_call_result_23399, 'col_offset')
                # Processing the call keyword arguments (line 284)
                kwargs_23401 = {}
                # Getting the type of 'stypy_functions_copy' (line 284)
                stypy_functions_copy_23379 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 284, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of_member' of a type (line 284)
                create_set_type_of_member_23380 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 284, 36), stypy_functions_copy_23379, 'create_set_type_of_member')
                # Calling create_set_type_of_member(args, kwargs) (line 284)
                create_set_type_of_member_call_result_23402 = invoke(stypy.reporting.localization.Localization(__file__, 284, 36), create_set_type_of_member_23380, *[target_var_23381, attr_23387, temp_value_23388, lineno_23394, col_offset_23400], **kwargs_23401)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 284)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 284, 16), 'set_type_of_stmts', create_set_type_of_member_call_result_23402)
                
                # Assigning a Call to a Name (line 289):
                
                # Assigning a Call to a Name (line 289):
                
                # Call to flatten_lists(...): (line 289)
                # Processing the call arguments (line 289)
                # Getting the type of 'get_target_stmts' (line 289)
                get_target_stmts_23405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 71), 'get_target_stmts', False)
                # Getting the type of 'set_type_of_stmts' (line 289)
                set_type_of_stmts_23406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 89), 'set_type_of_stmts', False)
                # Processing the call keyword arguments (line 289)
                kwargs_23407 = {}
                # Getting the type of 'stypy_functions_copy' (line 289)
                stypy_functions_copy_23403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 289, 36), 'stypy_functions_copy', False)
                # Obtaining the member 'flatten_lists' of a type (line 289)
                flatten_lists_23404 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 289, 36), stypy_functions_copy_23403, 'flatten_lists')
                # Calling flatten_lists(args, kwargs) (line 289)
                flatten_lists_call_result_23408 = invoke(stypy.reporting.localization.Localization(__file__, 289, 36), flatten_lists_23404, *[get_target_stmts_23405, set_type_of_stmts_23406], **kwargs_23407)
                
                # Assigning a type to the variable 'set_type_of_stmts' (line 289)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 289, 16), 'set_type_of_stmts', flatten_lists_call_result_23408)
                # SSA join for if statement (line 273)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA join for if statement (line 264)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to flatten_lists(...): (line 291)
        # Processing the call arguments (line 291)
        # Getting the type of 'get_value_stmts' (line 291)
        get_value_stmts_23411 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 50), 'get_value_stmts', False)
        # Getting the type of 'set_type_of_stmts' (line 291)
        set_type_of_stmts_23412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 67), 'set_type_of_stmts', False)
        # Processing the call keyword arguments (line 291)
        kwargs_23413 = {}
        # Getting the type of 'stypy_functions_copy' (line 291)
        stypy_functions_copy_23409 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 291, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 291)
        flatten_lists_23410 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 291, 15), stypy_functions_copy_23409, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 291)
        flatten_lists_call_result_23414 = invoke(stypy.reporting.localization.Localization(__file__, 291, 15), flatten_lists_23410, *[get_value_stmts_23411, set_type_of_stmts_23412], **kwargs_23413)
        
        # Assigning a type to the variable 'stypy_return_type' (line 291)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 291, 8), 'stypy_return_type', flatten_lists_call_result_23414)
        
        # ################# End of 'visit_Assign(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Assign' in the type store
        # Getting the type of 'stypy_return_type' (line 256)
        stypy_return_type_23415 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 256, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23415)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Assign'
        return stypy_return_type_23415


    @norecursion
    def visit_Pass(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Pass'
        module_type_store = module_type_store.open_function_context('visit_Pass', 295, 4, False)
        # Assigning a type to the variable 'self' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Pass')
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Pass.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Pass', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Pass', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Pass(...)' code ##################

        # Getting the type of 'node' (line 296)
        node_23416 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 296, 15), 'node')
        # Assigning a type to the variable 'stypy_return_type' (line 296)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 296, 8), 'stypy_return_type', node_23416)
        
        # ################# End of 'visit_Pass(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Pass' in the type store
        # Getting the type of 'stypy_return_type' (line 295)
        stypy_return_type_23417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 295, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_23417)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Pass'
        return stypy_return_type_23417


    @norecursion
    def visit_If(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_If'
        module_type_store = module_type_store.open_function_context('visit_If', 300, 4, False)
        # Assigning a type to the variable 'self' (line 301)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 301, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_If')
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_If.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_If', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_If', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_If(...)' code ##################

        
        # Assigning a List to a Name (line 303):
        
        # Assigning a List to a Name (line 303):
        
        # Obtaining an instance of the builtin type 'list' (line 303)
        list_23418 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 303, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 303)
        
        # Assigning a type to the variable 'if_stmt_body' (line 303)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 303, 8), 'if_stmt_body', list_23418)
        
        # Assigning a List to a Name (line 304):
        
        # Assigning a List to a Name (line 304):
        
        # Obtaining an instance of the builtin type 'list' (line 304)
        list_23419 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 304, 25), 'list')
        # Adding type elements to the builtin type 'list' instance (line 304)
        
        # Assigning a type to the variable 'if_stmt_orelse' (line 304)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 304, 8), 'if_stmt_orelse', list_23419)
        
        # Assigning a Call to a Name (line 306):
        
        # Assigning a Call to a Name (line 306):
        
        # Call to create_blank_line(...): (line 306)
        # Processing the call keyword arguments (line 306)
        kwargs_23422 = {}
        # Getting the type of 'stypy_functions_copy' (line 306)
        stypy_functions_copy_23420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 306, 27), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 306)
        create_blank_line_23421 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 306, 27), stypy_functions_copy_23420, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 306)
        create_blank_line_call_result_23423 = invoke(stypy.reporting.localization.Localization(__file__, 306, 27), create_blank_line_23421, *[], **kwargs_23422)
        
        # Assigning a type to the variable 'begin_if_comment' (line 306)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 306, 8), 'begin_if_comment', create_blank_line_call_result_23423)
        
        # Assigning a Call to a Tuple (line 308):
        
        # Assigning a Call to a Name:
        
        # Call to is_recognized_idiom(...): (line 308)
        # Processing the call arguments (line 308)
        # Getting the type of 'node' (line 308)
        node_23426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 103), 'node', False)
        # Obtaining the member 'test' of a type (line 308)
        test_23427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 103), node_23426, 'test')
        # Getting the type of 'self' (line 308)
        self_23428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 114), 'self', False)
        # Getting the type of 'context' (line 309)
        context_23429 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 309, 98), 'context', False)
        # Processing the call keyword arguments (line 308)
        kwargs_23430 = {}
        # Getting the type of 'idioms_copy' (line 308)
        idioms_copy_23424 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 71), 'idioms_copy', False)
        # Obtaining the member 'is_recognized_idiom' of a type (line 308)
        is_recognized_idiom_23425 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 308, 71), idioms_copy_23424, 'is_recognized_idiom')
        # Calling is_recognized_idiom(args, kwargs) (line 308)
        is_recognized_idiom_call_result_23431 = invoke(stypy.reporting.localization.Localization(__file__, 308, 71), is_recognized_idiom_23425, *[test_23427, self_23428, context_23429], **kwargs_23430)
        
        # Assigning a type to the variable 'call_assignment_22283' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22283', is_recognized_idiom_call_result_23431)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22283' (line 308)
        call_assignment_22283_23432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22283', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_23433 = stypy_get_value_from_tuple(call_assignment_22283_23432, 4, 0)
        
        # Assigning a type to the variable 'call_assignment_22284' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22284', stypy_get_value_from_tuple_call_result_23433)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_22284' (line 308)
        call_assignment_22284_23434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22284')
        # Assigning a type to the variable 'is_an_idiom' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'is_an_idiom', call_assignment_22284_23434)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22283' (line 308)
        call_assignment_22283_23435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22283', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_23436 = stypy_get_value_from_tuple(call_assignment_22283_23435, 4, 1)
        
        # Assigning a type to the variable 'call_assignment_22285' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22285', stypy_get_value_from_tuple_call_result_23436)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_22285' (line 308)
        call_assignment_22285_23437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22285')
        # Assigning a type to the variable 'left_stmts_tuple' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 21), 'left_stmts_tuple', call_assignment_22285_23437)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22283' (line 308)
        call_assignment_22283_23438 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22283', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_23439 = stypy_get_value_from_tuple(call_assignment_22283_23438, 4, 2)
        
        # Assigning a type to the variable 'call_assignment_22286' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22286', stypy_get_value_from_tuple_call_result_23439)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_22286' (line 308)
        call_assignment_22286_23440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22286')
        # Assigning a type to the variable 'rigth_stmts_tuple' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 39), 'rigth_stmts_tuple', call_assignment_22286_23440)
        
        # Assigning a Call to a Name (line 308):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22283' (line 308)
        call_assignment_22283_23441 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22283', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_23442 = stypy_get_value_from_tuple(call_assignment_22283_23441, 4, 3)
        
        # Assigning a type to the variable 'call_assignment_22287' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22287', stypy_get_value_from_tuple_call_result_23442)
        
        # Assigning a Name to a Name (line 308):
        # Getting the type of 'call_assignment_22287' (line 308)
        call_assignment_22287_23443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 308, 8), 'call_assignment_22287')
        # Assigning a type to the variable 'idiom_name' (line 308)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 308, 58), 'idiom_name', call_assignment_22287_23443)
        # Getting the type of 'is_an_idiom' (line 311)
        is_an_idiom_23444 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 311, 11), 'is_an_idiom')
        # Testing if the type of an if condition is none (line 311)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 311, 8), is_an_idiom_23444):
            
            # Assigning a Call to a Tuple (line 324):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 324)
            # Processing the call arguments (line 324)
            # Getting the type of 'node' (line 324)
            node_23477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 54), 'node', False)
            # Obtaining the member 'test' of a type (line 324)
            test_23478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 54), node_23477, 'test')
            # Getting the type of 'context' (line 324)
            context_23479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 65), 'context', False)
            # Processing the call keyword arguments (line 324)
            kwargs_23480 = {}
            # Getting the type of 'self' (line 324)
            self_23475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 324)
            visit_23476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 43), self_23475, 'visit')
            # Calling visit(args, kwargs) (line 324)
            visit_call_result_23481 = invoke(stypy.reporting.localization.Localization(__file__, 324, 43), visit_23476, *[test_23478, context_23479], **kwargs_23480)
            
            # Assigning a type to the variable 'call_assignment_22288' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22288', visit_call_result_23481)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22288' (line 324)
            call_assignment_22288_23482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22288', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23483 = stypy_get_value_from_tuple(call_assignment_22288_23482, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22289' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22289', stypy_get_value_from_tuple_call_result_23483)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_22289' (line 324)
            call_assignment_22289_23484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22289')
            # Assigning a type to the variable 'condition_stmt' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'condition_stmt', call_assignment_22289_23484)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22288' (line 324)
            call_assignment_22288_23485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22288', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23486 = stypy_get_value_from_tuple(call_assignment_22288_23485, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22290' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22290', stypy_get_value_from_tuple_call_result_23486)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_22290' (line 324)
            call_assignment_22290_23487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22290')
            # Assigning a type to the variable 'if_stmt_test' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 28), 'if_stmt_test', call_assignment_22290_23487)
            
            # Assigning a Call to a Name (line 327):
            
            # Assigning a Call to a Name (line 327):
            
            # Call to create_src_comment(...): (line 327)
            # Processing the call arguments (line 327)
            str_23490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 72), 'str', 'Testing the type of an if condition')
            # Getting the type of 'node' (line 327)
            node_23491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 111), 'node', False)
            # Obtaining the member 'lineno' of a type (line 327)
            lineno_23492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 111), node_23491, 'lineno')
            # Processing the call keyword arguments (line 327)
            kwargs_23493 = {}
            # Getting the type of 'stypy_functions_copy' (line 327)
            stypy_functions_copy_23488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 327)
            create_src_comment_23489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 32), stypy_functions_copy_23488, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 327)
            create_src_comment_call_result_23494 = invoke(stypy.reporting.localization.Localization(__file__, 327, 32), create_src_comment_23489, *[str_23490, lineno_23492], **kwargs_23493)
            
            # Assigning a type to the variable 'condition_comment' (line 327)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 12), 'condition_comment', create_src_comment_call_result_23494)
            
            # Assigning a Call to a Name (line 328):
            
            # Assigning a Call to a Name (line 328):
            
            # Call to create_Name(...): (line 328)
            # Processing the call arguments (line 328)
            str_23497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 55), 'str', 'is_suitable_condition')
            # Processing the call keyword arguments (line 328)
            kwargs_23498 = {}
            # Getting the type of 'core_language_copy' (line 328)
            core_language_copy_23495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 24), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 328)
            create_Name_23496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 24), core_language_copy_23495, 'create_Name')
            # Calling create_Name(args, kwargs) (line 328)
            create_Name_call_result_23499 = invoke(stypy.reporting.localization.Localization(__file__, 328, 24), create_Name_23496, *[str_23497], **kwargs_23498)
            
            # Assigning a type to the variable 'attribute' (line 328)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 12), 'attribute', create_Name_call_result_23499)
            
            # Assigning a Call to a Name (line 329):
            
            # Assigning a Call to a Name (line 329):
            
            # Call to create_localization(...): (line 329)
            # Processing the call arguments (line 329)
            # Getting the type of 'node' (line 329)
            node_23502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 329)
            lineno_23503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 68), node_23502, 'lineno')
            # Getting the type of 'node' (line 329)
            node_23504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 329)
            col_offset_23505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 81), node_23504, 'col_offset')
            # Processing the call keyword arguments (line 329)
            kwargs_23506 = {}
            # Getting the type of 'stypy_functions_copy' (line 329)
            stypy_functions_copy_23500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 329)
            create_localization_23501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 27), stypy_functions_copy_23500, 'create_localization')
            # Calling create_localization(args, kwargs) (line 329)
            create_localization_call_result_23507 = invoke(stypy.reporting.localization.Localization(__file__, 329, 27), create_localization_23501, *[lineno_23503, col_offset_23505], **kwargs_23506)
            
            # Assigning a type to the variable 'localization' (line 329)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 12), 'localization', create_localization_call_result_23507)
            
            # Assigning a Call to a Name (line 330):
            
            # Assigning a Call to a Name (line 330):
            
            # Call to create_call_expression(...): (line 330)
            # Processing the call arguments (line 330)
            # Getting the type of 'attribute' (line 330)
            attribute_23510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 72), 'attribute', False)
            
            # Obtaining an instance of the builtin type 'list' (line 330)
            list_23511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 83), 'list')
            # Adding type elements to the builtin type 'list' instance (line 330)
            # Adding element type (line 330)
            # Getting the type of 'localization' (line 330)
            localization_23512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 84), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_23511, localization_23512)
            # Adding element type (line 330)
            # Getting the type of 'if_stmt_test' (line 330)
            if_stmt_test_23513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 98), 'if_stmt_test', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_23511, if_stmt_test_23513)
            
            # Processing the call keyword arguments (line 330)
            kwargs_23514 = {}
            # Getting the type of 'functions_copy' (line 330)
            functions_copy_23508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 34), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 330)
            create_call_expression_23509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 34), functions_copy_23508, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 330)
            create_call_expression_call_result_23515 = invoke(stypy.reporting.localization.Localization(__file__, 330, 34), create_call_expression_23509, *[attribute_23510, list_23511], **kwargs_23514)
            
            # Assigning a type to the variable 'test_condition_call' (line 330)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'test_condition_call', create_call_expression_call_result_23515)
        else:
            
            # Testing the type of an if condition (line 311)
            if_condition_23445 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 311, 8), is_an_idiom_23444)
            # Assigning a type to the variable 'if_condition_23445' (line 311)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 311, 8), 'if_condition_23445', if_condition_23445)
            # SSA begins for if statement (line 311)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 312):
            
            # Assigning a Call to a Name (line 312):
            
            # Call to create_src_comment(...): (line 312)
            # Processing the call arguments (line 312)
            str_23448 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 313, 16), 'str', 'Type idiom detected: calculating its left and rigth part')
            # Getting the type of 'node' (line 313)
            node_23449 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 313, 76), 'node', False)
            # Obtaining the member 'lineno' of a type (line 313)
            lineno_23450 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 313, 76), node_23449, 'lineno')
            # Processing the call keyword arguments (line 312)
            kwargs_23451 = {}
            # Getting the type of 'stypy_functions_copy' (line 312)
            stypy_functions_copy_23446 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 312, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 312)
            create_src_comment_23447 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 312, 32), stypy_functions_copy_23446, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 312)
            create_src_comment_call_result_23452 = invoke(stypy.reporting.localization.Localization(__file__, 312, 32), create_src_comment_23447, *[str_23448, lineno_23450], **kwargs_23451)
            
            # Assigning a type to the variable 'condition_comment' (line 312)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 312, 12), 'condition_comment', create_src_comment_call_result_23452)
            
            # Getting the type of 'if_stmt_body' (line 315)
            if_stmt_body_23453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 12), 'if_stmt_body')
            
            # Obtaining the type of the subscript
            int_23454 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 315, 45), 'int')
            # Getting the type of 'left_stmts_tuple' (line 315)
            left_stmts_tuple_23455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 315, 28), 'left_stmts_tuple')
            # Obtaining the member '__getitem__' of a type (line 315)
            getitem___23456 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 315, 28), left_stmts_tuple_23455, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 315)
            subscript_call_result_23457 = invoke(stypy.reporting.localization.Localization(__file__, 315, 28), getitem___23456, int_23454)
            
            # Applying the binary operator '+=' (line 315)
            result_iadd_23458 = python_operator(stypy.reporting.localization.Localization(__file__, 315, 12), '+=', if_stmt_body_23453, subscript_call_result_23457)
            # Assigning a type to the variable 'if_stmt_body' (line 315)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 315, 12), 'if_stmt_body', result_iadd_23458)
            
            
            # Getting the type of 'if_stmt_body' (line 317)
            if_stmt_body_23459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 12), 'if_stmt_body')
            
            # Obtaining the type of the subscript
            int_23460 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 317, 46), 'int')
            # Getting the type of 'rigth_stmts_tuple' (line 317)
            rigth_stmts_tuple_23461 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 317, 28), 'rigth_stmts_tuple')
            # Obtaining the member '__getitem__' of a type (line 317)
            getitem___23462 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 317, 28), rigth_stmts_tuple_23461, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 317)
            subscript_call_result_23463 = invoke(stypy.reporting.localization.Localization(__file__, 317, 28), getitem___23462, int_23460)
            
            # Applying the binary operator '+=' (line 317)
            result_iadd_23464 = python_operator(stypy.reporting.localization.Localization(__file__, 317, 12), '+=', if_stmt_body_23459, subscript_call_result_23463)
            # Assigning a type to the variable 'if_stmt_body' (line 317)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 317, 12), 'if_stmt_body', result_iadd_23464)
            
            
            # Assigning a List to a Name (line 319):
            
            # Assigning a List to a Name (line 319):
            
            # Obtaining an instance of the builtin type 'list' (line 319)
            list_23465 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 319, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 319)
            
            # Assigning a type to the variable 'test_condition_call' (line 319)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 319, 12), 'test_condition_call', list_23465)
            
            # Assigning a List to a Name (line 320):
            
            # Assigning a List to a Name (line 320):
            
            # Obtaining an instance of the builtin type 'list' (line 320)
            list_23466 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 320, 29), 'list')
            # Adding type elements to the builtin type 'list' instance (line 320)
            
            # Assigning a type to the variable 'condition_stmt' (line 320)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 320, 12), 'condition_stmt', list_23466)
            
            # Call to append(...): (line 321)
            # Processing the call arguments (line 321)
            
            # Call to create_blank_line(...): (line 321)
            # Processing the call keyword arguments (line 321)
            kwargs_23471 = {}
            # Getting the type of 'stypy_functions_copy' (line 321)
            stypy_functions_copy_23469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_blank_line' of a type (line 321)
            create_blank_line_23470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 32), stypy_functions_copy_23469, 'create_blank_line')
            # Calling create_blank_line(args, kwargs) (line 321)
            create_blank_line_call_result_23472 = invoke(stypy.reporting.localization.Localization(__file__, 321, 32), create_blank_line_23470, *[], **kwargs_23471)
            
            # Processing the call keyword arguments (line 321)
            kwargs_23473 = {}
            # Getting the type of 'if_stmt_body' (line 321)
            if_stmt_body_23467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 321, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 321)
            append_23468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 321, 12), if_stmt_body_23467, 'append')
            # Calling append(args, kwargs) (line 321)
            append_call_result_23474 = invoke(stypy.reporting.localization.Localization(__file__, 321, 12), append_23468, *[create_blank_line_call_result_23472], **kwargs_23473)
            
            # SSA branch for the else part of an if statement (line 311)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 324):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 324)
            # Processing the call arguments (line 324)
            # Getting the type of 'node' (line 324)
            node_23477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 54), 'node', False)
            # Obtaining the member 'test' of a type (line 324)
            test_23478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 54), node_23477, 'test')
            # Getting the type of 'context' (line 324)
            context_23479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 65), 'context', False)
            # Processing the call keyword arguments (line 324)
            kwargs_23480 = {}
            # Getting the type of 'self' (line 324)
            self_23475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 43), 'self', False)
            # Obtaining the member 'visit' of a type (line 324)
            visit_23476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 324, 43), self_23475, 'visit')
            # Calling visit(args, kwargs) (line 324)
            visit_call_result_23481 = invoke(stypy.reporting.localization.Localization(__file__, 324, 43), visit_23476, *[test_23478, context_23479], **kwargs_23480)
            
            # Assigning a type to the variable 'call_assignment_22288' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22288', visit_call_result_23481)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22288' (line 324)
            call_assignment_22288_23482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22288', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23483 = stypy_get_value_from_tuple(call_assignment_22288_23482, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22289' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22289', stypy_get_value_from_tuple_call_result_23483)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_22289' (line 324)
            call_assignment_22289_23484 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22289')
            # Assigning a type to the variable 'condition_stmt' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'condition_stmt', call_assignment_22289_23484)
            
            # Assigning a Call to a Name (line 324):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22288' (line 324)
            call_assignment_22288_23485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22288', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23486 = stypy_get_value_from_tuple(call_assignment_22288_23485, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22290' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22290', stypy_get_value_from_tuple_call_result_23486)
            
            # Assigning a Name to a Name (line 324):
            # Getting the type of 'call_assignment_22290' (line 324)
            call_assignment_22290_23487 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 324, 12), 'call_assignment_22290')
            # Assigning a type to the variable 'if_stmt_test' (line 324)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 324, 28), 'if_stmt_test', call_assignment_22290_23487)
            
            # Assigning a Call to a Name (line 327):
            
            # Assigning a Call to a Name (line 327):
            
            # Call to create_src_comment(...): (line 327)
            # Processing the call arguments (line 327)
            str_23490 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 327, 72), 'str', 'Testing the type of an if condition')
            # Getting the type of 'node' (line 327)
            node_23491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 111), 'node', False)
            # Obtaining the member 'lineno' of a type (line 327)
            lineno_23492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 111), node_23491, 'lineno')
            # Processing the call keyword arguments (line 327)
            kwargs_23493 = {}
            # Getting the type of 'stypy_functions_copy' (line 327)
            stypy_functions_copy_23488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 327, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 327)
            create_src_comment_23489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 327, 32), stypy_functions_copy_23488, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 327)
            create_src_comment_call_result_23494 = invoke(stypy.reporting.localization.Localization(__file__, 327, 32), create_src_comment_23489, *[str_23490, lineno_23492], **kwargs_23493)
            
            # Assigning a type to the variable 'condition_comment' (line 327)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 327, 12), 'condition_comment', create_src_comment_call_result_23494)
            
            # Assigning a Call to a Name (line 328):
            
            # Assigning a Call to a Name (line 328):
            
            # Call to create_Name(...): (line 328)
            # Processing the call arguments (line 328)
            str_23497 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 328, 55), 'str', 'is_suitable_condition')
            # Processing the call keyword arguments (line 328)
            kwargs_23498 = {}
            # Getting the type of 'core_language_copy' (line 328)
            core_language_copy_23495 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 328, 24), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 328)
            create_Name_23496 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 328, 24), core_language_copy_23495, 'create_Name')
            # Calling create_Name(args, kwargs) (line 328)
            create_Name_call_result_23499 = invoke(stypy.reporting.localization.Localization(__file__, 328, 24), create_Name_23496, *[str_23497], **kwargs_23498)
            
            # Assigning a type to the variable 'attribute' (line 328)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 328, 12), 'attribute', create_Name_call_result_23499)
            
            # Assigning a Call to a Name (line 329):
            
            # Assigning a Call to a Name (line 329):
            
            # Call to create_localization(...): (line 329)
            # Processing the call arguments (line 329)
            # Getting the type of 'node' (line 329)
            node_23502 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 329)
            lineno_23503 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 68), node_23502, 'lineno')
            # Getting the type of 'node' (line 329)
            node_23504 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 329)
            col_offset_23505 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 81), node_23504, 'col_offset')
            # Processing the call keyword arguments (line 329)
            kwargs_23506 = {}
            # Getting the type of 'stypy_functions_copy' (line 329)
            stypy_functions_copy_23500 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 329, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 329)
            create_localization_23501 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 329, 27), stypy_functions_copy_23500, 'create_localization')
            # Calling create_localization(args, kwargs) (line 329)
            create_localization_call_result_23507 = invoke(stypy.reporting.localization.Localization(__file__, 329, 27), create_localization_23501, *[lineno_23503, col_offset_23505], **kwargs_23506)
            
            # Assigning a type to the variable 'localization' (line 329)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 329, 12), 'localization', create_localization_call_result_23507)
            
            # Assigning a Call to a Name (line 330):
            
            # Assigning a Call to a Name (line 330):
            
            # Call to create_call_expression(...): (line 330)
            # Processing the call arguments (line 330)
            # Getting the type of 'attribute' (line 330)
            attribute_23510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 72), 'attribute', False)
            
            # Obtaining an instance of the builtin type 'list' (line 330)
            list_23511 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 330, 83), 'list')
            # Adding type elements to the builtin type 'list' instance (line 330)
            # Adding element type (line 330)
            # Getting the type of 'localization' (line 330)
            localization_23512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 84), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_23511, localization_23512)
            # Adding element type (line 330)
            # Getting the type of 'if_stmt_test' (line 330)
            if_stmt_test_23513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 98), 'if_stmt_test', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 330, 83), list_23511, if_stmt_test_23513)
            
            # Processing the call keyword arguments (line 330)
            kwargs_23514 = {}
            # Getting the type of 'functions_copy' (line 330)
            functions_copy_23508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 330, 34), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 330)
            create_call_expression_23509 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 330, 34), functions_copy_23508, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 330)
            create_call_expression_call_result_23515 = invoke(stypy.reporting.localization.Localization(__file__, 330, 34), create_call_expression_23509, *[attribute_23510, list_23511], **kwargs_23514)
            
            # Assigning a type to the variable 'test_condition_call' (line 330)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 330, 12), 'test_condition_call', create_call_expression_call_result_23515)
            # SSA join for if statement (line 311)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Assigning a Name to a Name (line 332):
        
        # Assigning a Name to a Name (line 332):
        # Getting the type of 'None' (line 332)
        None_23516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 332, 30), 'None')
        # Assigning a type to the variable 'more_types_temp_var' (line 332)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 332, 8), 'more_types_temp_var', None_23516)
        # Getting the type of 'is_an_idiom' (line 333)
        is_an_idiom_23517 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 333, 11), 'is_an_idiom')
        # Testing if the type of an if condition is none (line 333)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 333, 8), is_an_idiom_23517):
            
            # Call to append(...): (line 378)
            # Processing the call arguments (line 378)
            
            # Call to create_src_comment(...): (line 378)
            # Processing the call arguments (line 378)
            str_23687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 72), 'str', 'SSA begins for if statement')
            # Getting the type of 'node' (line 378)
            node_23688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 103), 'node', False)
            # Obtaining the member 'lineno' of a type (line 378)
            lineno_23689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 103), node_23688, 'lineno')
            # Processing the call keyword arguments (line 378)
            kwargs_23690 = {}
            # Getting the type of 'stypy_functions_copy' (line 378)
            stypy_functions_copy_23685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 378)
            create_src_comment_23686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 32), stypy_functions_copy_23685, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 378)
            create_src_comment_call_result_23691 = invoke(stypy.reporting.localization.Localization(__file__, 378, 32), create_src_comment_23686, *[str_23687, lineno_23689], **kwargs_23690)
            
            # Processing the call keyword arguments (line 378)
            kwargs_23692 = {}
            # Getting the type of 'if_stmt_body' (line 378)
            if_stmt_body_23683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 378)
            append_23684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 12), if_stmt_body_23683, 'append')
            # Calling append(args, kwargs) (line 378)
            append_call_result_23693 = invoke(stypy.reporting.localization.Localization(__file__, 378, 12), append_23684, *[create_src_comment_call_result_23691], **kwargs_23692)
            
            
            # Assigning a Call to a Tuple (line 379):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 379)
            # Processing the call keyword arguments (line 379)
            kwargs_23696 = {}
            # Getting the type of 'stypy_functions_copy' (line 379)
            stypy_functions_copy_23694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 379)
            create_clone_type_store_23695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 43), stypy_functions_copy_23694, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 379)
            create_clone_type_store_call_result_23697 = invoke(stypy.reporting.localization.Localization(__file__, 379, 43), create_clone_type_store_23695, *[], **kwargs_23696)
            
            # Assigning a type to the variable 'call_assignment_22294' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22294', create_clone_type_store_call_result_23697)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22294' (line 379)
            call_assignment_22294_23698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22294', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23699 = stypy_get_value_from_tuple(call_assignment_22294_23698, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22295' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22295', stypy_get_value_from_tuple_call_result_23699)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_22295' (line 379)
            call_assignment_22295_23700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22295')
            # Assigning a type to the variable 'clone_stmt1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'clone_stmt1', call_assignment_22295_23700)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22294' (line 379)
            call_assignment_22294_23701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22294', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23702 = stypy_get_value_from_tuple(call_assignment_22294_23701, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22296' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22296', stypy_get_value_from_tuple_call_result_23702)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_22296' (line 379)
            call_assignment_22296_23703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22296')
            # Assigning a type to the variable 'type_store_var1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 25), 'type_store_var1', call_assignment_22296_23703)
            
            # Call to append(...): (line 380)
            # Processing the call arguments (line 380)
            # Getting the type of 'clone_stmt1' (line 380)
            clone_stmt1_23706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 32), 'clone_stmt1', False)
            # Processing the call keyword arguments (line 380)
            kwargs_23707 = {}
            # Getting the type of 'if_stmt_body' (line 380)
            if_stmt_body_23704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 380)
            append_23705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 12), if_stmt_body_23704, 'append')
            # Calling append(args, kwargs) (line 380)
            append_call_result_23708 = invoke(stypy.reporting.localization.Localization(__file__, 380, 12), append_23705, *[clone_stmt1_23706], **kwargs_23707)
            
            
            # Assigning a Name to a Name (line 381):
            
            # Assigning a Name to a Name (line 381):
            # Getting the type of 'if_stmt_body' (line 381)
            if_stmt_body_23709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 34), 'if_stmt_body')
            # Assigning a type to the variable 'body_stmts_location' (line 381)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 12), 'body_stmts_location', if_stmt_body_23709)
        else:
            
            # Testing the type of an if condition (line 333)
            if_condition_23518 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 333, 8), is_an_idiom_23517)
            # Assigning a type to the variable 'if_condition_23518' (line 333)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 333, 8), 'if_condition_23518', if_condition_23518)
            # SSA begins for if statement (line 333)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 334):
            
            # Assigning a Call to a Name (line 334):
            
            # Call to create_Name(...): (line 334)
            # Processing the call arguments (line 334)
            
            # Call to get_recognized_idiom_function(...): (line 334)
            # Processing the call arguments (line 334)
            # Getting the type of 'idiom_name' (line 334)
            idiom_name_23523 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 101), 'idiom_name', False)
            # Processing the call keyword arguments (line 334)
            kwargs_23524 = {}
            # Getting the type of 'idioms_copy' (line 334)
            idioms_copy_23521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 59), 'idioms_copy', False)
            # Obtaining the member 'get_recognized_idiom_function' of a type (line 334)
            get_recognized_idiom_function_23522 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 59), idioms_copy_23521, 'get_recognized_idiom_function')
            # Calling get_recognized_idiom_function(args, kwargs) (line 334)
            get_recognized_idiom_function_call_result_23525 = invoke(stypy.reporting.localization.Localization(__file__, 334, 59), get_recognized_idiom_function_23522, *[idiom_name_23523], **kwargs_23524)
            
            # Getting the type of 'node' (line 334)
            node_23526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 114), 'node', False)
            # Obtaining the member 'lineno' of a type (line 334)
            lineno_23527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 114), node_23526, 'lineno')
            # Getting the type of 'node' (line 335)
            node_23528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 335, 54), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 335)
            col_offset_23529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 335, 54), node_23528, 'col_offset')
            # Processing the call keyword arguments (line 334)
            kwargs_23530 = {}
            # Getting the type of 'core_language_copy' (line 334)
            core_language_copy_23519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 334, 28), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 334)
            create_Name_23520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 334, 28), core_language_copy_23519, 'create_Name')
            # Calling create_Name(args, kwargs) (line 334)
            create_Name_call_result_23531 = invoke(stypy.reporting.localization.Localization(__file__, 334, 28), create_Name_23520, *[get_recognized_idiom_function_call_result_23525, lineno_23527, col_offset_23529], **kwargs_23530)
            
            # Assigning a type to the variable 'idiom_if_func' (line 334)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 334, 12), 'idiom_if_func', create_Name_call_result_23531)
            
            # Assigning a Call to a Name (line 336):
            
            # Assigning a Call to a Name (line 336):
            
            # Call to create_call(...): (line 336)
            # Processing the call arguments (line 336)
            # Getting the type of 'idiom_if_func' (line 336)
            idiom_if_func_23534 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 63), 'idiom_if_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 336)
            list_23535 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 78), 'list')
            # Adding type elements to the builtin type 'list' instance (line 336)
            # Adding element type (line 336)
            
            # Obtaining the type of the subscript
            int_23536 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 96), 'int')
            # Getting the type of 'left_stmts_tuple' (line 336)
            left_stmts_tuple_23537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 79), 'left_stmts_tuple', False)
            # Obtaining the member '__getitem__' of a type (line 336)
            getitem___23538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 79), left_stmts_tuple_23537, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 336)
            subscript_call_result_23539 = invoke(stypy.reporting.localization.Localization(__file__, 336, 79), getitem___23538, int_23536)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 336, 78), list_23535, subscript_call_result_23539)
            # Adding element type (line 336)
            
            # Obtaining the type of the subscript
            int_23540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 336, 118), 'int')
            # Getting the type of 'rigth_stmts_tuple' (line 336)
            rigth_stmts_tuple_23541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 100), 'rigth_stmts_tuple', False)
            # Obtaining the member '__getitem__' of a type (line 336)
            getitem___23542 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 100), rigth_stmts_tuple_23541, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 336)
            subscript_call_result_23543 = invoke(stypy.reporting.localization.Localization(__file__, 336, 100), getitem___23542, int_23540)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 336, 78), list_23535, subscript_call_result_23543)
            
            # Processing the call keyword arguments (line 336)
            kwargs_23544 = {}
            # Getting the type of 'functions_copy' (line 336)
            functions_copy_23532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 336, 36), 'functions_copy', False)
            # Obtaining the member 'create_call' of a type (line 336)
            create_call_23533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 336, 36), functions_copy_23532, 'create_call')
            # Calling create_call(args, kwargs) (line 336)
            create_call_call_result_23545 = invoke(stypy.reporting.localization.Localization(__file__, 336, 36), create_call_23533, *[idiom_if_func_23534, list_23535], **kwargs_23544)
            
            # Assigning a type to the variable 'call_to_idiom_if_func' (line 336)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 336, 12), 'call_to_idiom_if_func', create_call_call_result_23545)
            
            # Assigning a Call to a Name (line 338):
            
            # Assigning a Call to a Name (line 338):
            
            # Call to new_temp_Name(...): (line 338)
            # Processing the call arguments (line 338)
            # Getting the type of 'False' (line 338)
            False_23548 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 70), 'False', False)
            # Getting the type of 'idioms_copy' (line 338)
            idioms_copy_23549 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 77), 'idioms_copy', False)
            # Obtaining the member 'may_be_var_name' of a type (line 338)
            may_be_var_name_23550 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 77), idioms_copy_23549, 'may_be_var_name')
            # Getting the type of 'node' (line 338)
            node_23551 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 106), 'node', False)
            # Obtaining the member 'lineno' of a type (line 338)
            lineno_23552 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 106), node_23551, 'lineno')
            # Getting the type of 'node' (line 339)
            node_23553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 339, 65), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 339)
            col_offset_23554 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 339, 65), node_23553, 'col_offset')
            # Processing the call keyword arguments (line 338)
            kwargs_23555 = {}
            # Getting the type of 'stypy_functions_copy' (line 338)
            stypy_functions_copy_23546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 338, 35), 'stypy_functions_copy', False)
            # Obtaining the member 'new_temp_Name' of a type (line 338)
            new_temp_Name_23547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 338, 35), stypy_functions_copy_23546, 'new_temp_Name')
            # Calling new_temp_Name(args, kwargs) (line 338)
            new_temp_Name_call_result_23556 = invoke(stypy.reporting.localization.Localization(__file__, 338, 35), new_temp_Name_23547, *[False_23548, may_be_var_name_23550, lineno_23552, col_offset_23554], **kwargs_23555)
            
            # Assigning a type to the variable 'may_be_type_temp_var' (line 338)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 338, 12), 'may_be_type_temp_var', new_temp_Name_call_result_23556)
            
            # Assigning a Call to a Name (line 340):
            
            # Assigning a Call to a Name (line 340):
            
            # Call to new_temp_Name(...): (line 340)
            # Processing the call arguments (line 340)
            # Getting the type of 'False' (line 340)
            False_23559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 69), 'False', False)
            # Getting the type of 'idioms_copy' (line 340)
            idioms_copy_23560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 76), 'idioms_copy', False)
            # Obtaining the member 'more_types_var_name' of a type (line 340)
            more_types_var_name_23561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 76), idioms_copy_23560, 'more_types_var_name')
            # Getting the type of 'node' (line 340)
            node_23562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 109), 'node', False)
            # Obtaining the member 'lineno' of a type (line 340)
            lineno_23563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 109), node_23562, 'lineno')
            # Getting the type of 'node' (line 341)
            node_23564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 341, 64), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 341)
            col_offset_23565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 341, 64), node_23564, 'col_offset')
            # Processing the call keyword arguments (line 340)
            kwargs_23566 = {}
            # Getting the type of 'stypy_functions_copy' (line 340)
            stypy_functions_copy_23557 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 340, 34), 'stypy_functions_copy', False)
            # Obtaining the member 'new_temp_Name' of a type (line 340)
            new_temp_Name_23558 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 340, 34), stypy_functions_copy_23557, 'new_temp_Name')
            # Calling new_temp_Name(args, kwargs) (line 340)
            new_temp_Name_call_result_23567 = invoke(stypy.reporting.localization.Localization(__file__, 340, 34), new_temp_Name_23558, *[False_23559, more_types_var_name_23561, lineno_23563, col_offset_23565], **kwargs_23566)
            
            # Assigning a type to the variable 'more_types_temp_var' (line 340)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 340, 12), 'more_types_temp_var', new_temp_Name_call_result_23567)
            
            # Assigning a Call to a Name (line 342):
            
            # Assigning a Call to a Name (line 342):
            
            # Call to create_type_tuple(...): (line 342)
            # Processing the call arguments (line 342)
            # Getting the type of 'may_be_type_temp_var' (line 342)
            may_be_type_temp_var_23570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 74), 'may_be_type_temp_var', False)
            # Getting the type of 'more_types_temp_var' (line 342)
            more_types_temp_var_23571 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 96), 'more_types_temp_var', False)
            # Processing the call keyword arguments (line 342)
            kwargs_23572 = {}
            # Getting the type of 'core_language_copy' (line 342)
            core_language_copy_23568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 342, 37), 'core_language_copy', False)
            # Obtaining the member 'create_type_tuple' of a type (line 342)
            create_type_tuple_23569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 342, 37), core_language_copy_23568, 'create_type_tuple')
            # Calling create_type_tuple(args, kwargs) (line 342)
            create_type_tuple_call_result_23573 = invoke(stypy.reporting.localization.Localization(__file__, 342, 37), create_type_tuple_23569, *[may_be_type_temp_var_23570, more_types_temp_var_23571], **kwargs_23572)
            
            # Assigning a type to the variable 'if_func_ret_type_tuple' (line 342)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 342, 12), 'if_func_ret_type_tuple', create_type_tuple_call_result_23573)
            
            # Assigning a Call to a Name (line 343):
            
            # Assigning a Call to a Name (line 343):
            
            # Call to create_Assign(...): (line 343)
            # Processing the call arguments (line 343)
            # Getting the type of 'if_func_ret_type_tuple' (line 343)
            if_func_ret_type_tuple_23576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 70), 'if_func_ret_type_tuple', False)
            # Getting the type of 'call_to_idiom_if_func' (line 343)
            call_to_idiom_if_func_23577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 94), 'call_to_idiom_if_func', False)
            # Processing the call keyword arguments (line 343)
            kwargs_23578 = {}
            # Getting the type of 'core_language_copy' (line 343)
            core_language_copy_23574 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 343, 37), 'core_language_copy', False)
            # Obtaining the member 'create_Assign' of a type (line 343)
            create_Assign_23575 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 343, 37), core_language_copy_23574, 'create_Assign')
            # Calling create_Assign(args, kwargs) (line 343)
            create_Assign_call_result_23579 = invoke(stypy.reporting.localization.Localization(__file__, 343, 37), create_Assign_23575, *[if_func_ret_type_tuple_23576, call_to_idiom_if_func_23577], **kwargs_23578)
            
            # Assigning a type to the variable 'may_be_type_assignment' (line 343)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 343, 12), 'may_be_type_assignment', create_Assign_call_result_23579)
            
            # Call to append(...): (line 344)
            # Processing the call arguments (line 344)
            
            # Call to flatten_lists(...): (line 344)
            # Processing the call arguments (line 344)
            # Getting the type of 'may_be_type_assignment' (line 344)
            may_be_type_assignment_23584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 67), 'may_be_type_assignment', False)
            # Processing the call keyword arguments (line 344)
            kwargs_23585 = {}
            # Getting the type of 'stypy_functions_copy' (line 344)
            stypy_functions_copy_23582 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 344)
            flatten_lists_23583 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 32), stypy_functions_copy_23582, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 344)
            flatten_lists_call_result_23586 = invoke(stypy.reporting.localization.Localization(__file__, 344, 32), flatten_lists_23583, *[may_be_type_assignment_23584], **kwargs_23585)
            
            # Processing the call keyword arguments (line 344)
            kwargs_23587 = {}
            # Getting the type of 'if_stmt_body' (line 344)
            if_stmt_body_23580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 344, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 344)
            append_23581 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 344, 12), if_stmt_body_23580, 'append')
            # Calling append(args, kwargs) (line 344)
            append_call_result_23588 = invoke(stypy.reporting.localization.Localization(__file__, 344, 12), append_23581, *[flatten_lists_call_result_23586], **kwargs_23587)
            
            
            # Assigning a List to a Name (line 347):
            
            # Assigning a List to a Name (line 347):
            
            # Obtaining an instance of the builtin type 'list' (line 347)
            list_23589 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 347, 34), 'list')
            # Adding type elements to the builtin type 'list' instance (line 347)
            
            # Assigning a type to the variable 'idiom_first_if_body' (line 347)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 347, 12), 'idiom_first_if_body', list_23589)
            
            # Assigning a Call to a Name (line 348):
            
            # Assigning a Call to a Name (line 348):
            
            # Call to create_if(...): (line 348)
            # Processing the call arguments (line 348)
            # Getting the type of 'may_be_type_temp_var' (line 348)
            may_be_type_temp_var_23592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 62), 'may_be_type_temp_var', False)
            # Getting the type of 'idiom_first_if_body' (line 348)
            idiom_first_if_body_23593 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 84), 'idiom_first_if_body', False)
            # Processing the call keyword arguments (line 348)
            kwargs_23594 = {}
            # Getting the type of 'conditional_statements_copy' (line 348)
            conditional_statements_copy_23590 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 348, 24), 'conditional_statements_copy', False)
            # Obtaining the member 'create_if' of a type (line 348)
            create_if_23591 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 348, 24), conditional_statements_copy_23590, 'create_if')
            # Calling create_if(args, kwargs) (line 348)
            create_if_call_result_23595 = invoke(stypy.reporting.localization.Localization(__file__, 348, 24), create_if_23591, *[may_be_type_temp_var_23592, idiom_first_if_body_23593], **kwargs_23594)
            
            # Assigning a type to the variable 'if_may_be' (line 348)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 348, 12), 'if_may_be', create_if_call_result_23595)
            
            # Call to append(...): (line 349)
            # Processing the call arguments (line 349)
            # Getting the type of 'if_may_be' (line 349)
            if_may_be_23598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 32), 'if_may_be', False)
            # Processing the call keyword arguments (line 349)
            kwargs_23599 = {}
            # Getting the type of 'if_stmt_body' (line 349)
            if_stmt_body_23596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 349, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 349)
            append_23597 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 349, 12), if_stmt_body_23596, 'append')
            # Calling append(args, kwargs) (line 349)
            append_call_result_23600 = invoke(stypy.reporting.localization.Localization(__file__, 349, 12), append_23597, *[if_may_be_23598], **kwargs_23599)
            
            
            # Assigning a List to a Name (line 352):
            
            # Assigning a List to a Name (line 352):
            
            # Obtaining an instance of the builtin type 'list' (line 352)
            list_23601 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 352, 36), 'list')
            # Adding type elements to the builtin type 'list' instance (line 352)
            
            # Assigning a type to the variable 'idiom_more_types_body' (line 352)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 352, 12), 'idiom_more_types_body', list_23601)
            
            # Assigning a Call to a Name (line 353):
            
            # Assigning a Call to a Name (line 353):
            
            # Call to create_if(...): (line 353)
            # Processing the call arguments (line 353)
            # Getting the type of 'more_types_temp_var' (line 353)
            more_types_temp_var_23604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 66), 'more_types_temp_var', False)
            # Getting the type of 'idiom_more_types_body' (line 353)
            idiom_more_types_body_23605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 87), 'idiom_more_types_body', False)
            # Processing the call keyword arguments (line 353)
            kwargs_23606 = {}
            # Getting the type of 'conditional_statements_copy' (line 353)
            conditional_statements_copy_23602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 353, 28), 'conditional_statements_copy', False)
            # Obtaining the member 'create_if' of a type (line 353)
            create_if_23603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 353, 28), conditional_statements_copy_23602, 'create_if')
            # Calling create_if(args, kwargs) (line 353)
            create_if_call_result_23607 = invoke(stypy.reporting.localization.Localization(__file__, 353, 28), create_if_23603, *[more_types_temp_var_23604, idiom_more_types_body_23605], **kwargs_23606)
            
            # Assigning a type to the variable 'if_more_types' (line 353)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 353, 12), 'if_more_types', create_if_call_result_23607)
            
            # Call to append(...): (line 356)
            # Processing the call arguments (line 356)
            
            # Call to create_src_comment(...): (line 356)
            # Processing the call arguments (line 356)
            str_23612 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 356, 81), 'str', 'Runtime conditional SSA')
            # Getting the type of 'node' (line 356)
            node_23613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 356)
            lineno_23614 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 108), node_23613, 'lineno')
            # Processing the call keyword arguments (line 356)
            kwargs_23615 = {}
            # Getting the type of 'stypy_functions_copy' (line 356)
            stypy_functions_copy_23610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 41), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 356)
            create_src_comment_23611 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 41), stypy_functions_copy_23610, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 356)
            create_src_comment_call_result_23616 = invoke(stypy.reporting.localization.Localization(__file__, 356, 41), create_src_comment_23611, *[str_23612, lineno_23614], **kwargs_23615)
            
            # Processing the call keyword arguments (line 356)
            kwargs_23617 = {}
            # Getting the type of 'idiom_more_types_body' (line 356)
            idiom_more_types_body_23608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 356, 12), 'idiom_more_types_body', False)
            # Obtaining the member 'append' of a type (line 356)
            append_23609 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 356, 12), idiom_more_types_body_23608, 'append')
            # Calling append(args, kwargs) (line 356)
            append_call_result_23618 = invoke(stypy.reporting.localization.Localization(__file__, 356, 12), append_23609, *[create_src_comment_call_result_23616], **kwargs_23617)
            
            
            # Assigning a Call to a Tuple (line 357):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 357)
            # Processing the call keyword arguments (line 357)
            kwargs_23621 = {}
            # Getting the type of 'stypy_functions_copy' (line 357)
            stypy_functions_copy_23619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 357)
            create_clone_type_store_23620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 357, 43), stypy_functions_copy_23619, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 357)
            create_clone_type_store_call_result_23622 = invoke(stypy.reporting.localization.Localization(__file__, 357, 43), create_clone_type_store_23620, *[], **kwargs_23621)
            
            # Assigning a type to the variable 'call_assignment_22291' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_22291', create_clone_type_store_call_result_23622)
            
            # Assigning a Call to a Name (line 357):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22291' (line 357)
            call_assignment_22291_23623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_22291', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23624 = stypy_get_value_from_tuple(call_assignment_22291_23623, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22292' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_22292', stypy_get_value_from_tuple_call_result_23624)
            
            # Assigning a Name to a Name (line 357):
            # Getting the type of 'call_assignment_22292' (line 357)
            call_assignment_22292_23625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_22292')
            # Assigning a type to the variable 'clone_stmt1' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'clone_stmt1', call_assignment_22292_23625)
            
            # Assigning a Call to a Name (line 357):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22291' (line 357)
            call_assignment_22291_23626 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_22291', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23627 = stypy_get_value_from_tuple(call_assignment_22291_23626, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22293' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_22293', stypy_get_value_from_tuple_call_result_23627)
            
            # Assigning a Name to a Name (line 357):
            # Getting the type of 'call_assignment_22293' (line 357)
            call_assignment_22293_23628 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 357, 12), 'call_assignment_22293')
            # Assigning a type to the variable 'type_store_var1' (line 357)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 357, 25), 'type_store_var1', call_assignment_22293_23628)
            
            # Call to append(...): (line 358)
            # Processing the call arguments (line 358)
            # Getting the type of 'clone_stmt1' (line 358)
            clone_stmt1_23631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 41), 'clone_stmt1', False)
            # Processing the call keyword arguments (line 358)
            kwargs_23632 = {}
            # Getting the type of 'idiom_more_types_body' (line 358)
            idiom_more_types_body_23629 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 358, 12), 'idiom_more_types_body', False)
            # Obtaining the member 'append' of a type (line 358)
            append_23630 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 358, 12), idiom_more_types_body_23629, 'append')
            # Calling append(args, kwargs) (line 358)
            append_call_result_23633 = invoke(stypy.reporting.localization.Localization(__file__, 358, 12), append_23630, *[clone_stmt1_23631], **kwargs_23632)
            
            
            # Assigning a Call to a Name (line 362):
            
            # Assigning a Call to a Name (line 362):
            
            # Call to create_Assign(...): (line 362)
            # Processing the call arguments (line 362)
            # Getting the type of 'type_store_var1' (line 362)
            type_store_var1_23636 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 70), 'type_store_var1', False)
            
            # Call to create_Name(...): (line 362)
            # Processing the call arguments (line 362)
            # Getting the type of 'stypy_functions_copy' (line 363)
            stypy_functions_copy_23639 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 363, 16), 'stypy_functions_copy', False)
            # Obtaining the member 'default_module_type_store_var_name' of a type (line 363)
            default_module_type_store_var_name_23640 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 363, 16), stypy_functions_copy_23639, 'default_module_type_store_var_name')
            # Processing the call keyword arguments (line 362)
            kwargs_23641 = {}
            # Getting the type of 'core_language_copy' (line 362)
            core_language_copy_23637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 87), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 362)
            create_Name_23638 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 87), core_language_copy_23637, 'create_Name')
            # Calling create_Name(args, kwargs) (line 362)
            create_Name_call_result_23642 = invoke(stypy.reporting.localization.Localization(__file__, 362, 87), create_Name_23638, *[default_module_type_store_var_name_23640], **kwargs_23641)
            
            # Processing the call keyword arguments (line 362)
            kwargs_23643 = {}
            # Getting the type of 'core_language_copy' (line 362)
            core_language_copy_23634 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 362, 37), 'core_language_copy', False)
            # Obtaining the member 'create_Assign' of a type (line 362)
            create_Assign_23635 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 362, 37), core_language_copy_23634, 'create_Assign')
            # Calling create_Assign(args, kwargs) (line 362)
            create_Assign_call_result_23644 = invoke(stypy.reporting.localization.Localization(__file__, 362, 37), create_Assign_23635, *[type_store_var1_23636, create_Name_call_result_23642], **kwargs_23643)
            
            # Assigning a type to the variable 'may_be_type_assignment' (line 362)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 362, 12), 'may_be_type_assignment', create_Assign_call_result_23644)
            
            # Assigning a List to a Attribute (line 364):
            
            # Assigning a List to a Attribute (line 364):
            
            # Obtaining an instance of the builtin type 'list' (line 364)
            list_23645 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 364, 35), 'list')
            # Adding type elements to the builtin type 'list' instance (line 364)
            # Adding element type (line 364)
            # Getting the type of 'may_be_type_assignment' (line 364)
            may_be_type_assignment_23646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 36), 'may_be_type_assignment')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 364, 35), list_23645, may_be_type_assignment_23646)
            
            # Getting the type of 'if_more_types' (line 364)
            if_more_types_23647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 364, 12), 'if_more_types')
            # Setting the type of the member 'orelse' of a type (line 364)
            module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 364, 12), if_more_types_23647, 'orelse', list_23645)
            
            # Call to append(...): (line 366)
            # Processing the call arguments (line 366)
            # Getting the type of 'if_more_types' (line 366)
            if_more_types_23650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 39), 'if_more_types', False)
            # Processing the call keyword arguments (line 366)
            kwargs_23651 = {}
            # Getting the type of 'idiom_first_if_body' (line 366)
            idiom_first_if_body_23648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 366, 12), 'idiom_first_if_body', False)
            # Obtaining the member 'append' of a type (line 366)
            append_23649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 366, 12), idiom_first_if_body_23648, 'append')
            # Calling append(args, kwargs) (line 366)
            append_call_result_23652 = invoke(stypy.reporting.localization.Localization(__file__, 366, 12), append_23649, *[if_more_types_23650], **kwargs_23651)
            
            
            # Assigning a Call to a Name (line 370):
            
            # Assigning a Call to a Name (line 370):
            
            # Call to set_type_of_idiom_var(...): (line 370)
            # Processing the call arguments (line 370)
            # Getting the type of 'idiom_name' (line 370)
            idiom_name_23655 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 57), 'idiom_name', False)
            str_23656 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 69), 'str', 'if')
            # Getting the type of 'node' (line 370)
            node_23657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 75), 'node', False)
            # Obtaining the member 'test' of a type (line 370)
            test_23658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 75), node_23657, 'test')
            
            # Obtaining the type of the subscript
            int_23659 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 370, 104), 'int')
            # Getting the type of 'rigth_stmts_tuple' (line 370)
            rigth_stmts_tuple_23660 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 86), 'rigth_stmts_tuple', False)
            # Obtaining the member '__getitem__' of a type (line 370)
            getitem___23661 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 86), rigth_stmts_tuple_23660, '__getitem__')
            # Calling the subscript (__getitem__) to obtain the elements type (line 370)
            subscript_call_result_23662 = invoke(stypy.reporting.localization.Localization(__file__, 370, 86), getitem___23661, int_23659)
            
            # Getting the type of 'node' (line 370)
            node_23663 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 370)
            lineno_23664 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 108), node_23663, 'lineno')
            # Getting the type of 'node' (line 371)
            node_23665 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 371, 52), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 371)
            col_offset_23666 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 371, 52), node_23665, 'col_offset')
            # Processing the call keyword arguments (line 370)
            kwargs_23667 = {}
            # Getting the type of 'idioms_copy' (line 370)
            idioms_copy_23653 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 370, 23), 'idioms_copy', False)
            # Obtaining the member 'set_type_of_idiom_var' of a type (line 370)
            set_type_of_idiom_var_23654 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 370, 23), idioms_copy_23653, 'set_type_of_idiom_var')
            # Calling set_type_of_idiom_var(args, kwargs) (line 370)
            set_type_of_idiom_var_call_result_23668 = invoke(stypy.reporting.localization.Localization(__file__, 370, 23), set_type_of_idiom_var_23654, *[idiom_name_23655, str_23656, test_23658, subscript_call_result_23662, lineno_23664, col_offset_23666], **kwargs_23667)
            
            # Assigning a type to the variable 'set_type' (line 370)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 370, 12), 'set_type', set_type_of_idiom_var_call_result_23668)
            
            
            
            # Call to len(...): (line 372)
            # Processing the call arguments (line 372)
            # Getting the type of 'set_type' (line 372)
            set_type_23670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 23), 'set_type', False)
            # Processing the call keyword arguments (line 372)
            kwargs_23671 = {}
            # Getting the type of 'len' (line 372)
            len_23669 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 372, 19), 'len', False)
            # Calling len(args, kwargs) (line 372)
            len_call_result_23672 = invoke(stypy.reporting.localization.Localization(__file__, 372, 19), len_23669, *[set_type_23670], **kwargs_23671)
            
            int_23673 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 372, 36), 'int')
            # Applying the binary operator '==' (line 372)
            result_eq_23674 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 19), '==', len_call_result_23672, int_23673)
            
            # Applying the 'not' unary operator (line 372)
            result_not__23675 = python_operator(stypy.reporting.localization.Localization(__file__, 372, 15), 'not', result_eq_23674)
            
            # Testing if the type of an if condition is none (line 372)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 372, 12), result_not__23675):
                pass
            else:
                
                # Testing the type of an if condition (line 372)
                if_condition_23676 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 372, 12), result_not__23675)
                # Assigning a type to the variable 'if_condition_23676' (line 372)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 372, 12), 'if_condition_23676', if_condition_23676)
                # SSA begins for if statement (line 372)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 373)
                # Processing the call arguments (line 373)
                # Getting the type of 'set_type' (line 373)
                set_type_23679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 43), 'set_type', False)
                # Processing the call keyword arguments (line 373)
                kwargs_23680 = {}
                # Getting the type of 'idiom_first_if_body' (line 373)
                idiom_first_if_body_23677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 373, 16), 'idiom_first_if_body', False)
                # Obtaining the member 'append' of a type (line 373)
                append_23678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 373, 16), idiom_first_if_body_23677, 'append')
                # Calling append(args, kwargs) (line 373)
                append_call_result_23681 = invoke(stypy.reporting.localization.Localization(__file__, 373, 16), append_23678, *[set_type_23679], **kwargs_23680)
                
                # SSA join for if statement (line 372)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Name (line 375):
            
            # Assigning a Name to a Name (line 375):
            # Getting the type of 'idiom_first_if_body' (line 375)
            idiom_first_if_body_23682 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 375, 34), 'idiom_first_if_body')
            # Assigning a type to the variable 'body_stmts_location' (line 375)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 375, 12), 'body_stmts_location', idiom_first_if_body_23682)
            # SSA branch for the else part of an if statement (line 333)
            module_type_store.open_ssa_branch('else')
            
            # Call to append(...): (line 378)
            # Processing the call arguments (line 378)
            
            # Call to create_src_comment(...): (line 378)
            # Processing the call arguments (line 378)
            str_23687 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 378, 72), 'str', 'SSA begins for if statement')
            # Getting the type of 'node' (line 378)
            node_23688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 103), 'node', False)
            # Obtaining the member 'lineno' of a type (line 378)
            lineno_23689 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 103), node_23688, 'lineno')
            # Processing the call keyword arguments (line 378)
            kwargs_23690 = {}
            # Getting the type of 'stypy_functions_copy' (line 378)
            stypy_functions_copy_23685 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 32), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 378)
            create_src_comment_23686 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 32), stypy_functions_copy_23685, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 378)
            create_src_comment_call_result_23691 = invoke(stypy.reporting.localization.Localization(__file__, 378, 32), create_src_comment_23686, *[str_23687, lineno_23689], **kwargs_23690)
            
            # Processing the call keyword arguments (line 378)
            kwargs_23692 = {}
            # Getting the type of 'if_stmt_body' (line 378)
            if_stmt_body_23683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 378, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 378)
            append_23684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 378, 12), if_stmt_body_23683, 'append')
            # Calling append(args, kwargs) (line 378)
            append_call_result_23693 = invoke(stypy.reporting.localization.Localization(__file__, 378, 12), append_23684, *[create_src_comment_call_result_23691], **kwargs_23692)
            
            
            # Assigning a Call to a Tuple (line 379):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 379)
            # Processing the call keyword arguments (line 379)
            kwargs_23696 = {}
            # Getting the type of 'stypy_functions_copy' (line 379)
            stypy_functions_copy_23694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 379)
            create_clone_type_store_23695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 379, 43), stypy_functions_copy_23694, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 379)
            create_clone_type_store_call_result_23697 = invoke(stypy.reporting.localization.Localization(__file__, 379, 43), create_clone_type_store_23695, *[], **kwargs_23696)
            
            # Assigning a type to the variable 'call_assignment_22294' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22294', create_clone_type_store_call_result_23697)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22294' (line 379)
            call_assignment_22294_23698 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22294', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23699 = stypy_get_value_from_tuple(call_assignment_22294_23698, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22295' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22295', stypy_get_value_from_tuple_call_result_23699)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_22295' (line 379)
            call_assignment_22295_23700 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22295')
            # Assigning a type to the variable 'clone_stmt1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'clone_stmt1', call_assignment_22295_23700)
            
            # Assigning a Call to a Name (line 379):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22294' (line 379)
            call_assignment_22294_23701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22294', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23702 = stypy_get_value_from_tuple(call_assignment_22294_23701, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22296' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22296', stypy_get_value_from_tuple_call_result_23702)
            
            # Assigning a Name to a Name (line 379):
            # Getting the type of 'call_assignment_22296' (line 379)
            call_assignment_22296_23703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 379, 12), 'call_assignment_22296')
            # Assigning a type to the variable 'type_store_var1' (line 379)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 379, 25), 'type_store_var1', call_assignment_22296_23703)
            
            # Call to append(...): (line 380)
            # Processing the call arguments (line 380)
            # Getting the type of 'clone_stmt1' (line 380)
            clone_stmt1_23706 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 32), 'clone_stmt1', False)
            # Processing the call keyword arguments (line 380)
            kwargs_23707 = {}
            # Getting the type of 'if_stmt_body' (line 380)
            if_stmt_body_23704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 380, 12), 'if_stmt_body', False)
            # Obtaining the member 'append' of a type (line 380)
            append_23705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 380, 12), if_stmt_body_23704, 'append')
            # Calling append(args, kwargs) (line 380)
            append_call_result_23708 = invoke(stypy.reporting.localization.Localization(__file__, 380, 12), append_23705, *[clone_stmt1_23706], **kwargs_23707)
            
            
            # Assigning a Name to a Name (line 381):
            
            # Assigning a Name to a Name (line 381):
            # Getting the type of 'if_stmt_body' (line 381)
            if_stmt_body_23709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 381, 34), 'if_stmt_body')
            # Assigning a type to the variable 'body_stmts_location' (line 381)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 381, 12), 'body_stmts_location', if_stmt_body_23709)
            # SSA join for if statement (line 333)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to extend(...): (line 384)
        # Processing the call arguments (line 384)
        
        # Call to __visit_instruction_body(...): (line 384)
        # Processing the call arguments (line 384)
        # Getting the type of 'node' (line 384)
        node_23714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 65), 'node', False)
        # Obtaining the member 'body' of a type (line 384)
        body_23715 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 65), node_23714, 'body')
        # Getting the type of 'context' (line 384)
        context_23716 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 76), 'context', False)
        # Processing the call keyword arguments (line 384)
        kwargs_23717 = {}
        # Getting the type of 'self' (line 384)
        self_23712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 35), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 384)
        visit_instruction_body_23713 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 35), self_23712, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 384)
        visit_instruction_body_call_result_23718 = invoke(stypy.reporting.localization.Localization(__file__, 384, 35), visit_instruction_body_23713, *[body_23715, context_23716], **kwargs_23717)
        
        # Processing the call keyword arguments (line 384)
        kwargs_23719 = {}
        # Getting the type of 'body_stmts_location' (line 384)
        body_stmts_location_23710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 384, 8), 'body_stmts_location', False)
        # Obtaining the member 'extend' of a type (line 384)
        extend_23711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 384, 8), body_stmts_location_23710, 'extend')
        # Calling extend(args, kwargs) (line 384)
        extend_call_result_23720 = invoke(stypy.reporting.localization.Localization(__file__, 384, 8), extend_23711, *[visit_instruction_body_call_result_23718], **kwargs_23719)
        
        
        
        # Call to len(...): (line 387)
        # Processing the call arguments (line 387)
        # Getting the type of 'node' (line 387)
        node_23722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 15), 'node', False)
        # Obtaining the member 'orelse' of a type (line 387)
        orelse_23723 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 387, 15), node_23722, 'orelse')
        # Processing the call keyword arguments (line 387)
        kwargs_23724 = {}
        # Getting the type of 'len' (line 387)
        len_23721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 387, 11), 'len', False)
        # Calling len(args, kwargs) (line 387)
        len_call_result_23725 = invoke(stypy.reporting.localization.Localization(__file__, 387, 11), len_23721, *[orelse_23723], **kwargs_23724)
        
        int_23726 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 387, 30), 'int')
        # Applying the binary operator '>' (line 387)
        result_gt_23727 = python_operator(stypy.reporting.localization.Localization(__file__, 387, 11), '>', len_call_result_23725, int_23726)
        
        # Testing if the type of an if condition is none (line 387)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 387, 8), result_gt_23727):
            
            # Assigning a Call to a Tuple (line 450):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 450)
            # Processing the call keyword arguments (line 450)
            kwargs_23924 = {}
            # Getting the type of 'stypy_functions_copy' (line 450)
            stypy_functions_copy_23922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 450)
            create_clone_type_store_23923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 43), stypy_functions_copy_23922, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 450)
            create_clone_type_store_call_result_23925 = invoke(stypy.reporting.localization.Localization(__file__, 450, 43), create_clone_type_store_23923, *[], **kwargs_23924)
            
            # Assigning a type to the variable 'call_assignment_22303' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22303', create_clone_type_store_call_result_23925)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22303' (line 450)
            call_assignment_22303_23926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22303', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23927 = stypy_get_value_from_tuple(call_assignment_22303_23926, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22304' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22304', stypy_get_value_from_tuple_call_result_23927)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_22304' (line 450)
            call_assignment_22304_23928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22304')
            # Assigning a type to the variable 'clone_stmt2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'clone_stmt2', call_assignment_22304_23928)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22303' (line 450)
            call_assignment_22303_23929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22303', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23930 = stypy_get_value_from_tuple(call_assignment_22303_23929, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22305' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22305', stypy_get_value_from_tuple_call_result_23930)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_22305' (line 450)
            call_assignment_22305_23931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22305')
            # Assigning a type to the variable 'type_store_var2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 25), 'type_store_var2', call_assignment_22305_23931)
            
            # Call to append(...): (line 451)
            # Processing the call arguments (line 451)
            # Getting the type of 'clone_stmt2' (line 451)
            clone_stmt2_23934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 39), 'clone_stmt2', False)
            # Processing the call keyword arguments (line 451)
            kwargs_23935 = {}
            # Getting the type of 'body_stmts_location' (line 451)
            body_stmts_location_23932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 12), 'body_stmts_location', False)
            # Obtaining the member 'append' of a type (line 451)
            append_23933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 12), body_stmts_location_23932, 'append')
            # Calling append(args, kwargs) (line 451)
            append_call_result_23936 = invoke(stypy.reporting.localization.Localization(__file__, 451, 12), append_23933, *[clone_stmt2_23934], **kwargs_23935)
            
            
            # Assigning a Call to a Name (line 455):
            
            # Assigning a Call to a Name (line 455):
            
            # Call to create_Name(...): (line 455)
            # Processing the call arguments (line 455)
            str_23939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 61), 'str', 'None')
            # Processing the call keyword arguments (line 455)
            kwargs_23940 = {}
            # Getting the type of 'core_language_copy' (line 455)
            core_language_copy_23937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 30), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 455)
            create_Name_23938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 30), core_language_copy_23937, 'create_Name')
            # Calling create_Name(args, kwargs) (line 455)
            create_Name_call_result_23941 = invoke(stypy.reporting.localization.Localization(__file__, 455, 30), create_Name_23938, *[str_23939], **kwargs_23940)
            
            # Assigning a type to the variable 'type_store_var3' (line 455)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 12), 'type_store_var3', create_Name_call_result_23941)
        else:
            
            # Testing the type of an if condition (line 387)
            if_condition_23728 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 387, 8), result_gt_23727)
            # Assigning a type to the variable 'if_condition_23728' (line 387)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 387, 8), 'if_condition_23728', if_condition_23728)
            # SSA begins for if statement (line 387)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            # Getting the type of 'is_an_idiom' (line 388)
            is_an_idiom_23729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 388, 15), 'is_an_idiom')
            # Testing if the type of an if condition is none (line 388)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 388, 12), is_an_idiom_23729):
                
                # Call to append(...): (line 437)
                # Processing the call arguments (line 437)
                
                # Call to create_src_comment(...): (line 438)
                # Processing the call arguments (line 438)
                str_23878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 60), 'str', 'SSA branch for the else part of an if statement')
                # Getting the type of 'node' (line 438)
                node_23879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 111), 'node', False)
                # Obtaining the member 'lineno' of a type (line 438)
                lineno_23880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 111), node_23879, 'lineno')
                # Processing the call keyword arguments (line 438)
                kwargs_23881 = {}
                # Getting the type of 'stypy_functions_copy' (line 438)
                stypy_functions_copy_23876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 438)
                create_src_comment_23877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 20), stypy_functions_copy_23876, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 438)
                create_src_comment_call_result_23882 = invoke(stypy.reporting.localization.Localization(__file__, 438, 20), create_src_comment_23877, *[str_23878, lineno_23880], **kwargs_23881)
                
                # Processing the call keyword arguments (line 437)
                kwargs_23883 = {}
                # Getting the type of 'if_stmt_body' (line 437)
                if_stmt_body_23874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 437)
                append_23875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 16), if_stmt_body_23874, 'append')
                # Calling append(args, kwargs) (line 437)
                append_call_result_23884 = invoke(stypy.reporting.localization.Localization(__file__, 437, 16), append_23875, *[create_src_comment_call_result_23882], **kwargs_23883)
                
                
                # Assigning a Call to a Tuple (line 439):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 439)
                # Processing the call keyword arguments (line 439)
                kwargs_23887 = {}
                # Getting the type of 'stypy_functions_copy' (line 439)
                stypy_functions_copy_23885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 439)
                create_clone_type_store_23886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 47), stypy_functions_copy_23885, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 439)
                create_clone_type_store_call_result_23888 = invoke(stypy.reporting.localization.Localization(__file__, 439, 47), create_clone_type_store_23886, *[], **kwargs_23887)
                
                # Assigning a type to the variable 'call_assignment_22300' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22300', create_clone_type_store_call_result_23888)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22300' (line 439)
                call_assignment_22300_23889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22300', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23890 = stypy_get_value_from_tuple(call_assignment_22300_23889, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22301' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22301', stypy_get_value_from_tuple_call_result_23890)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_22301' (line 439)
                call_assignment_22301_23891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22301')
                # Assigning a type to the variable 'clone_stmt2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'clone_stmt2', call_assignment_22301_23891)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22300' (line 439)
                call_assignment_22300_23892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22300', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23893 = stypy_get_value_from_tuple(call_assignment_22300_23892, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22302' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22302', stypy_get_value_from_tuple_call_result_23893)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_22302' (line 439)
                call_assignment_22302_23894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22302')
                # Assigning a type to the variable 'type_store_var2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 29), 'type_store_var2', call_assignment_22302_23894)
                
                # Call to append(...): (line 440)
                # Processing the call arguments (line 440)
                # Getting the type of 'clone_stmt2' (line 440)
                clone_stmt2_23897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 36), 'clone_stmt2', False)
                # Processing the call keyword arguments (line 440)
                kwargs_23898 = {}
                # Getting the type of 'if_stmt_body' (line 440)
                if_stmt_body_23895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 440)
                append_23896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 16), if_stmt_body_23895, 'append')
                # Calling append(args, kwargs) (line 440)
                append_call_result_23899 = invoke(stypy.reporting.localization.Localization(__file__, 440, 16), append_23896, *[clone_stmt2_23897], **kwargs_23898)
                
                
                # Assigning a Call to a Name (line 442):
                
                # Assigning a Call to a Name (line 442):
                
                # Call to create_set_type_store(...): (line 442)
                # Processing the call arguments (line 442)
                # Getting the type of 'type_store_var1' (line 442)
                type_store_var1_23902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 77), 'type_store_var1', False)
                # Processing the call keyword arguments (line 442)
                kwargs_23903 = {}
                # Getting the type of 'stypy_functions_copy' (line 442)
                stypy_functions_copy_23900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 34), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_store' of a type (line 442)
                create_set_type_store_23901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 34), stypy_functions_copy_23900, 'create_set_type_store')
                # Calling create_set_type_store(args, kwargs) (line 442)
                create_set_type_store_call_result_23904 = invoke(stypy.reporting.localization.Localization(__file__, 442, 34), create_set_type_store_23901, *[type_store_var1_23902], **kwargs_23903)
                
                # Assigning a type to the variable 'set_type_store1' (line 442)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'set_type_store1', create_set_type_store_call_result_23904)
                
                # Call to append(...): (line 443)
                # Processing the call arguments (line 443)
                # Getting the type of 'set_type_store1' (line 443)
                set_type_store1_23907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 36), 'set_type_store1', False)
                # Processing the call keyword arguments (line 443)
                kwargs_23908 = {}
                # Getting the type of 'if_stmt_body' (line 443)
                if_stmt_body_23905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 443)
                append_23906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 16), if_stmt_body_23905, 'append')
                # Calling append(args, kwargs) (line 443)
                append_call_result_23909 = invoke(stypy.reporting.localization.Localization(__file__, 443, 16), append_23906, *[set_type_store1_23907], **kwargs_23908)
                
                
                # Assigning a Name to a Name (line 444):
                
                # Assigning a Name to a Name (line 444):
                # Getting the type of 'if_stmt_body' (line 444)
                if_stmt_body_23910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 38), 'if_stmt_body')
                # Assigning a type to the variable 'body_stmts_location' (line 444)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'body_stmts_location', if_stmt_body_23910)
            else:
                
                # Testing the type of an if condition (line 388)
                if_condition_23730 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 388, 12), is_an_idiom_23729)
                # Assigning a type to the variable 'if_condition_23730' (line 388)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 388, 12), 'if_condition_23730', if_condition_23730)
                # SSA begins for if statement (line 388)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a List to a Name (line 389):
                
                # Assigning a List to a Name (line 389):
                
                # Obtaining an instance of the builtin type 'list' (line 389)
                list_23731 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 389, 42), 'list')
                # Adding type elements to the builtin type 'list' instance (line 389)
                
                # Assigning a type to the variable 'idiom_more_types_body_2' (line 389)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 389, 16), 'idiom_more_types_body_2', list_23731)
                
                # Assigning a Call to a Name (line 390):
                
                # Assigning a Call to a Name (line 390):
                
                # Call to create_if(...): (line 390)
                # Processing the call arguments (line 390)
                # Getting the type of 'more_types_temp_var' (line 390)
                more_types_temp_var_23734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 72), 'more_types_temp_var', False)
                # Getting the type of 'idiom_more_types_body_2' (line 390)
                idiom_more_types_body_2_23735 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 93), 'idiom_more_types_body_2', False)
                # Processing the call keyword arguments (line 390)
                kwargs_23736 = {}
                # Getting the type of 'conditional_statements_copy' (line 390)
                conditional_statements_copy_23732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 390, 34), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 390)
                create_if_23733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 390, 34), conditional_statements_copy_23732, 'create_if')
                # Calling create_if(args, kwargs) (line 390)
                create_if_call_result_23737 = invoke(stypy.reporting.localization.Localization(__file__, 390, 34), create_if_23733, *[more_types_temp_var_23734, idiom_more_types_body_2_23735], **kwargs_23736)
                
                # Assigning a type to the variable 'if_more_types_2' (line 390)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 390, 16), 'if_more_types_2', create_if_call_result_23737)
                
                # Call to append(...): (line 392)
                # Processing the call arguments (line 392)
                
                # Call to create_src_comment(...): (line 393)
                # Processing the call arguments (line 393)
                str_23742 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 393, 60), 'str', 'Runtime conditional SSA for else branch')
                # Getting the type of 'node' (line 393)
                node_23743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 103), 'node', False)
                # Obtaining the member 'lineno' of a type (line 393)
                lineno_23744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 103), node_23743, 'lineno')
                # Processing the call keyword arguments (line 393)
                kwargs_23745 = {}
                # Getting the type of 'stypy_functions_copy' (line 393)
                stypy_functions_copy_23740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 393, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 393)
                create_src_comment_23741 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 393, 20), stypy_functions_copy_23740, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 393)
                create_src_comment_call_result_23746 = invoke(stypy.reporting.localization.Localization(__file__, 393, 20), create_src_comment_23741, *[str_23742, lineno_23744], **kwargs_23745)
                
                # Processing the call keyword arguments (line 392)
                kwargs_23747 = {}
                # Getting the type of 'idiom_more_types_body_2' (line 392)
                idiom_more_types_body_2_23738 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 392, 16), 'idiom_more_types_body_2', False)
                # Obtaining the member 'append' of a type (line 392)
                append_23739 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 392, 16), idiom_more_types_body_2_23738, 'append')
                # Calling append(args, kwargs) (line 392)
                append_call_result_23748 = invoke(stypy.reporting.localization.Localization(__file__, 392, 16), append_23739, *[create_src_comment_call_result_23746], **kwargs_23747)
                
                
                # Assigning a Call to a Tuple (line 394):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 394)
                # Processing the call keyword arguments (line 394)
                kwargs_23751 = {}
                # Getting the type of 'stypy_functions_copy' (line 394)
                stypy_functions_copy_23749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 394)
                create_clone_type_store_23750 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 394, 47), stypy_functions_copy_23749, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 394)
                create_clone_type_store_call_result_23752 = invoke(stypy.reporting.localization.Localization(__file__, 394, 47), create_clone_type_store_23750, *[], **kwargs_23751)
                
                # Assigning a type to the variable 'call_assignment_22297' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_22297', create_clone_type_store_call_result_23752)
                
                # Assigning a Call to a Name (line 394):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22297' (line 394)
                call_assignment_22297_23753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_22297', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23754 = stypy_get_value_from_tuple(call_assignment_22297_23753, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22298' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_22298', stypy_get_value_from_tuple_call_result_23754)
                
                # Assigning a Name to a Name (line 394):
                # Getting the type of 'call_assignment_22298' (line 394)
                call_assignment_22298_23755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_22298')
                # Assigning a type to the variable 'clone_stmt2' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'clone_stmt2', call_assignment_22298_23755)
                
                # Assigning a Call to a Name (line 394):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22297' (line 394)
                call_assignment_22297_23756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_22297', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23757 = stypy_get_value_from_tuple(call_assignment_22297_23756, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22299' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_22299', stypy_get_value_from_tuple_call_result_23757)
                
                # Assigning a Name to a Name (line 394):
                # Getting the type of 'call_assignment_22299' (line 394)
                call_assignment_22299_23758 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 394, 16), 'call_assignment_22299')
                # Assigning a type to the variable 'type_store_var2' (line 394)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 394, 29), 'type_store_var2', call_assignment_22299_23758)
                
                # Call to append(...): (line 395)
                # Processing the call arguments (line 395)
                # Getting the type of 'clone_stmt2' (line 395)
                clone_stmt2_23761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 47), 'clone_stmt2', False)
                # Processing the call keyword arguments (line 395)
                kwargs_23762 = {}
                # Getting the type of 'idiom_more_types_body_2' (line 395)
                idiom_more_types_body_2_23759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 395, 16), 'idiom_more_types_body_2', False)
                # Obtaining the member 'append' of a type (line 395)
                append_23760 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 395, 16), idiom_more_types_body_2_23759, 'append')
                # Calling append(args, kwargs) (line 395)
                append_call_result_23763 = invoke(stypy.reporting.localization.Localization(__file__, 395, 16), append_23760, *[clone_stmt2_23761], **kwargs_23762)
                
                
                # Call to append(...): (line 396)
                # Processing the call arguments (line 396)
                # Getting the type of 'if_more_types_2' (line 396)
                if_more_types_2_23766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 43), 'if_more_types_2', False)
                # Processing the call keyword arguments (line 396)
                kwargs_23767 = {}
                # Getting the type of 'body_stmts_location' (line 396)
                body_stmts_location_23764 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 396, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 396)
                append_23765 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 396, 16), body_stmts_location_23764, 'append')
                # Calling append(args, kwargs) (line 396)
                append_call_result_23768 = invoke(stypy.reporting.localization.Localization(__file__, 396, 16), append_23765, *[if_more_types_2_23766], **kwargs_23767)
                
                
                # Assigning a Name to a Name (line 397):
                
                # Assigning a Name to a Name (line 397):
                # Getting the type of 'if_stmt_body' (line 397)
                if_stmt_body_23769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 397, 38), 'if_stmt_body')
                # Assigning a type to the variable 'body_stmts_location' (line 397)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 397, 16), 'body_stmts_location', if_stmt_body_23769)
                
                # Assigning a List to a Name (line 401):
                
                # Assigning a List to a Name (line 401):
                
                # Obtaining an instance of the builtin type 'list' (line 401)
                list_23770 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 401, 43), 'list')
                # Adding type elements to the builtin type 'list' instance (line 401)
                
                # Assigning a type to the variable 'idiom_first_if_body_else' (line 401)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 401, 16), 'idiom_first_if_body_else', list_23770)
                
                # Assigning a Call to a Name (line 403):
                
                # Assigning a Call to a Name (line 403):
                
                # Call to BoolOp(...): (line 403)
                # Processing the call keyword arguments (line 403)
                kwargs_23773 = {}
                # Getting the type of 'ast' (line 403)
                ast_23771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 403, 26), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 403)
                BoolOp_23772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 403, 26), ast_23771, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 403)
                BoolOp_call_result_23774 = invoke(stypy.reporting.localization.Localization(__file__, 403, 26), BoolOp_23772, *[], **kwargs_23773)
                
                # Assigning a type to the variable 'or_cond' (line 403)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 403, 16), 'or_cond', BoolOp_call_result_23774)
                
                # Assigning a Call to a Attribute (line 404):
                
                # Assigning a Call to a Attribute (line 404):
                
                # Call to Or(...): (line 404)
                # Processing the call keyword arguments (line 404)
                kwargs_23777 = {}
                # Getting the type of 'ast' (line 404)
                ast_23775 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 29), 'ast', False)
                # Obtaining the member 'Or' of a type (line 404)
                Or_23776 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 29), ast_23775, 'Or')
                # Calling Or(args, kwargs) (line 404)
                Or_call_result_23778 = invoke(stypy.reporting.localization.Localization(__file__, 404, 29), Or_23776, *[], **kwargs_23777)
                
                # Getting the type of 'or_cond' (line 404)
                or_cond_23779 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 404, 16), 'or_cond')
                # Setting the type of the member 'op' of a type (line 404)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 404, 16), or_cond_23779, 'op', Or_call_result_23778)
                
                # Assigning a Call to a Name (line 405):
                
                # Assigning a Call to a Name (line 405):
                
                # Call to UnaryOp(...): (line 405)
                # Processing the call keyword arguments (line 405)
                kwargs_23782 = {}
                # Getting the type of 'ast' (line 405)
                ast_23780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 405, 27), 'ast', False)
                # Obtaining the member 'UnaryOp' of a type (line 405)
                UnaryOp_23781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 405, 27), ast_23780, 'UnaryOp')
                # Calling UnaryOp(args, kwargs) (line 405)
                UnaryOp_call_result_23783 = invoke(stypy.reporting.localization.Localization(__file__, 405, 27), UnaryOp_23781, *[], **kwargs_23782)
                
                # Assigning a type to the variable 'not_cond' (line 405)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 405, 16), 'not_cond', UnaryOp_call_result_23783)
                
                # Assigning a Call to a Attribute (line 406):
                
                # Assigning a Call to a Attribute (line 406):
                
                # Call to Not(...): (line 406)
                # Processing the call keyword arguments (line 406)
                kwargs_23786 = {}
                # Getting the type of 'ast' (line 406)
                ast_23784 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 30), 'ast', False)
                # Obtaining the member 'Not' of a type (line 406)
                Not_23785 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 30), ast_23784, 'Not')
                # Calling Not(args, kwargs) (line 406)
                Not_call_result_23787 = invoke(stypy.reporting.localization.Localization(__file__, 406, 30), Not_23785, *[], **kwargs_23786)
                
                # Getting the type of 'not_cond' (line 406)
                not_cond_23788 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 406, 16), 'not_cond')
                # Setting the type of the member 'op' of a type (line 406)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 406, 16), not_cond_23788, 'op', Not_call_result_23787)
                
                # Assigning a Name to a Attribute (line 407):
                
                # Assigning a Name to a Attribute (line 407):
                # Getting the type of 'may_be_type_temp_var' (line 407)
                may_be_type_temp_var_23789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 35), 'may_be_type_temp_var')
                # Getting the type of 'not_cond' (line 407)
                not_cond_23790 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 407, 16), 'not_cond')
                # Setting the type of the member 'operand' of a type (line 407)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 407, 16), not_cond_23790, 'operand', may_be_type_temp_var_23789)
                
                # Assigning a List to a Attribute (line 408):
                
                # Assigning a List to a Attribute (line 408):
                
                # Obtaining an instance of the builtin type 'list' (line 408)
                list_23791 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 408, 33), 'list')
                # Adding type elements to the builtin type 'list' instance (line 408)
                # Adding element type (line 408)
                # Getting the type of 'not_cond' (line 408)
                not_cond_23792 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 34), 'not_cond')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 33), list_23791, not_cond_23792)
                # Adding element type (line 408)
                # Getting the type of 'more_types_temp_var' (line 408)
                more_types_temp_var_23793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 44), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 408, 33), list_23791, more_types_temp_var_23793)
                
                # Getting the type of 'or_cond' (line 408)
                or_cond_23794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 408, 16), 'or_cond')
                # Setting the type of the member 'values' of a type (line 408)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 408, 16), or_cond_23794, 'values', list_23791)
                
                # Assigning a Call to a Name (line 410):
                
                # Assigning a Call to a Name (line 410):
                
                # Call to create_if(...): (line 410)
                # Processing the call arguments (line 410)
                # Getting the type of 'or_cond' (line 410)
                or_cond_23797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 66), 'or_cond', False)
                # Getting the type of 'idiom_first_if_body_else' (line 410)
                idiom_first_if_body_else_23798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 75), 'idiom_first_if_body_else', False)
                # Processing the call keyword arguments (line 410)
                kwargs_23799 = {}
                # Getting the type of 'conditional_statements_copy' (line 410)
                conditional_statements_copy_23795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 410, 28), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 410)
                create_if_23796 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 410, 28), conditional_statements_copy_23795, 'create_if')
                # Calling create_if(args, kwargs) (line 410)
                create_if_call_result_23800 = invoke(stypy.reporting.localization.Localization(__file__, 410, 28), create_if_23796, *[or_cond_23797, idiom_first_if_body_else_23798], **kwargs_23799)
                
                # Assigning a type to the variable 'if_may_be' (line 410)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 410, 16), 'if_may_be', create_if_call_result_23800)
                
                # Call to append(...): (line 411)
                # Processing the call arguments (line 411)
                # Getting the type of 'if_may_be' (line 411)
                if_may_be_23803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 43), 'if_may_be', False)
                # Processing the call keyword arguments (line 411)
                kwargs_23804 = {}
                # Getting the type of 'body_stmts_location' (line 411)
                body_stmts_location_23801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 411, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 411)
                append_23802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 411, 16), body_stmts_location_23801, 'append')
                # Calling append(args, kwargs) (line 411)
                append_call_result_23805 = invoke(stypy.reporting.localization.Localization(__file__, 411, 16), append_23802, *[if_may_be_23803], **kwargs_23804)
                
                
                # Assigning a List to a Name (line 414):
                
                # Assigning a List to a Name (line 414):
                
                # Obtaining an instance of the builtin type 'list' (line 414)
                list_23806 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 414, 45), 'list')
                # Adding type elements to the builtin type 'list' instance (line 414)
                
                # Assigning a type to the variable 'idiom_more_types_body_else' (line 414)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 414, 16), 'idiom_more_types_body_else', list_23806)
                
                # Assigning a Call to a Name (line 416):
                
                # Assigning a Call to a Name (line 416):
                
                # Call to BoolOp(...): (line 416)
                # Processing the call keyword arguments (line 416)
                kwargs_23809 = {}
                # Getting the type of 'ast' (line 416)
                ast_23807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 416, 27), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 416)
                BoolOp_23808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 416, 27), ast_23807, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 416)
                BoolOp_call_result_23810 = invoke(stypy.reporting.localization.Localization(__file__, 416, 27), BoolOp_23808, *[], **kwargs_23809)
                
                # Assigning a type to the variable 'and_cond' (line 416)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 416, 16), 'and_cond', BoolOp_call_result_23810)
                
                # Assigning a Call to a Attribute (line 417):
                
                # Assigning a Call to a Attribute (line 417):
                
                # Call to And(...): (line 417)
                # Processing the call keyword arguments (line 417)
                kwargs_23813 = {}
                # Getting the type of 'ast' (line 417)
                ast_23811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 30), 'ast', False)
                # Obtaining the member 'And' of a type (line 417)
                And_23812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 30), ast_23811, 'And')
                # Calling And(args, kwargs) (line 417)
                And_call_result_23814 = invoke(stypy.reporting.localization.Localization(__file__, 417, 30), And_23812, *[], **kwargs_23813)
                
                # Getting the type of 'and_cond' (line 417)
                and_cond_23815 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 417, 16), 'and_cond')
                # Setting the type of the member 'op' of a type (line 417)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 417, 16), and_cond_23815, 'op', And_call_result_23814)
                
                # Assigning a List to a Attribute (line 418):
                
                # Assigning a List to a Attribute (line 418):
                
                # Obtaining an instance of the builtin type 'list' (line 418)
                list_23816 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 418, 34), 'list')
                # Adding type elements to the builtin type 'list' instance (line 418)
                # Adding element type (line 418)
                # Getting the type of 'may_be_type_temp_var' (line 418)
                may_be_type_temp_var_23817 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 35), 'may_be_type_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 34), list_23816, may_be_type_temp_var_23817)
                # Adding element type (line 418)
                # Getting the type of 'more_types_temp_var' (line 418)
                more_types_temp_var_23818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 57), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 418, 34), list_23816, more_types_temp_var_23818)
                
                # Getting the type of 'and_cond' (line 418)
                and_cond_23819 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 418, 16), 'and_cond')
                # Setting the type of the member 'values' of a type (line 418)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 418, 16), and_cond_23819, 'values', list_23816)
                
                # Assigning a Call to a Name (line 420):
                
                # Assigning a Call to a Name (line 420):
                
                # Call to create_if(...): (line 420)
                # Processing the call arguments (line 420)
                # Getting the type of 'and_cond' (line 420)
                and_cond_23822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 70), 'and_cond', False)
                # Getting the type of 'idiom_more_types_body_else' (line 420)
                idiom_more_types_body_else_23823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 80), 'idiom_more_types_body_else', False)
                # Processing the call keyword arguments (line 420)
                kwargs_23824 = {}
                # Getting the type of 'conditional_statements_copy' (line 420)
                conditional_statements_copy_23820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 420, 32), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 420)
                create_if_23821 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 420, 32), conditional_statements_copy_23820, 'create_if')
                # Calling create_if(args, kwargs) (line 420)
                create_if_call_result_23825 = invoke(stypy.reporting.localization.Localization(__file__, 420, 32), create_if_23821, *[and_cond_23822, idiom_more_types_body_else_23823], **kwargs_23824)
                
                # Assigning a type to the variable 'if_more_types' (line 420)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 420, 16), 'if_more_types', create_if_call_result_23825)
                
                # Call to append(...): (line 422)
                # Processing the call arguments (line 422)
                
                # Call to create_src_comment(...): (line 423)
                # Processing the call arguments (line 423)
                str_23830 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 423, 60), 'str', 'Runtime conditional SSA')
                # Getting the type of 'node' (line 423)
                node_23831 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 87), 'node', False)
                # Obtaining the member 'lineno' of a type (line 423)
                lineno_23832 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 87), node_23831, 'lineno')
                # Processing the call keyword arguments (line 423)
                kwargs_23833 = {}
                # Getting the type of 'stypy_functions_copy' (line 423)
                stypy_functions_copy_23828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 423, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 423)
                create_src_comment_23829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 423, 20), stypy_functions_copy_23828, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 423)
                create_src_comment_call_result_23834 = invoke(stypy.reporting.localization.Localization(__file__, 423, 20), create_src_comment_23829, *[str_23830, lineno_23832], **kwargs_23833)
                
                # Processing the call keyword arguments (line 422)
                kwargs_23835 = {}
                # Getting the type of 'idiom_more_types_body_else' (line 422)
                idiom_more_types_body_else_23826 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 422, 16), 'idiom_more_types_body_else', False)
                # Obtaining the member 'append' of a type (line 422)
                append_23827 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 422, 16), idiom_more_types_body_else_23826, 'append')
                # Calling append(args, kwargs) (line 422)
                append_call_result_23836 = invoke(stypy.reporting.localization.Localization(__file__, 422, 16), append_23827, *[create_src_comment_call_result_23834], **kwargs_23835)
                
                
                # Assigning a Call to a Name (line 424):
                
                # Assigning a Call to a Name (line 424):
                
                # Call to create_set_type_store(...): (line 424)
                # Processing the call arguments (line 424)
                # Getting the type of 'type_store_var1' (line 424)
                type_store_var1_23839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 77), 'type_store_var1', False)
                # Processing the call keyword arguments (line 424)
                kwargs_23840 = {}
                # Getting the type of 'stypy_functions_copy' (line 424)
                stypy_functions_copy_23837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 424, 34), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_store' of a type (line 424)
                create_set_type_store_23838 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 424, 34), stypy_functions_copy_23837, 'create_set_type_store')
                # Calling create_set_type_store(args, kwargs) (line 424)
                create_set_type_store_call_result_23841 = invoke(stypy.reporting.localization.Localization(__file__, 424, 34), create_set_type_store_23838, *[type_store_var1_23839], **kwargs_23840)
                
                # Assigning a type to the variable 'set_type_store1' (line 424)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 424, 16), 'set_type_store1', create_set_type_store_call_result_23841)
                
                # Call to append(...): (line 425)
                # Processing the call arguments (line 425)
                # Getting the type of 'set_type_store1' (line 425)
                set_type_store1_23844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 50), 'set_type_store1', False)
                # Processing the call keyword arguments (line 425)
                kwargs_23845 = {}
                # Getting the type of 'idiom_more_types_body_else' (line 425)
                idiom_more_types_body_else_23842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 425, 16), 'idiom_more_types_body_else', False)
                # Obtaining the member 'append' of a type (line 425)
                append_23843 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 425, 16), idiom_more_types_body_else_23842, 'append')
                # Calling append(args, kwargs) (line 425)
                append_call_result_23846 = invoke(stypy.reporting.localization.Localization(__file__, 425, 16), append_23843, *[set_type_store1_23844], **kwargs_23845)
                
                
                # Call to append(...): (line 427)
                # Processing the call arguments (line 427)
                # Getting the type of 'if_more_types' (line 427)
                if_more_types_23849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 48), 'if_more_types', False)
                # Processing the call keyword arguments (line 427)
                kwargs_23850 = {}
                # Getting the type of 'idiom_first_if_body_else' (line 427)
                idiom_first_if_body_else_23847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 427, 16), 'idiom_first_if_body_else', False)
                # Obtaining the member 'append' of a type (line 427)
                append_23848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 427, 16), idiom_first_if_body_else_23847, 'append')
                # Calling append(args, kwargs) (line 427)
                append_call_result_23851 = invoke(stypy.reporting.localization.Localization(__file__, 427, 16), append_23848, *[if_more_types_23849], **kwargs_23850)
                
                
                # Assigning a Call to a Name (line 430):
                
                # Assigning a Call to a Name (line 430):
                
                # Call to set_type_of_idiom_var(...): (line 430)
                # Processing the call arguments (line 430)
                # Getting the type of 'idiom_name' (line 430)
                idiom_name_23854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 61), 'idiom_name', False)
                str_23855 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 73), 'str', 'else')
                # Getting the type of 'node' (line 430)
                node_23856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 81), 'node', False)
                # Obtaining the member 'test' of a type (line 430)
                test_23857 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 81), node_23856, 'test')
                
                # Obtaining the type of the subscript
                int_23858 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 430, 110), 'int')
                # Getting the type of 'rigth_stmts_tuple' (line 430)
                rigth_stmts_tuple_23859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 92), 'rigth_stmts_tuple', False)
                # Obtaining the member '__getitem__' of a type (line 430)
                getitem___23860 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 92), rigth_stmts_tuple_23859, '__getitem__')
                # Calling the subscript (__getitem__) to obtain the elements type (line 430)
                subscript_call_result_23861 = invoke(stypy.reporting.localization.Localization(__file__, 430, 92), getitem___23860, int_23858)
                
                # Getting the type of 'node' (line 431)
                node_23862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 431, 56), 'node', False)
                # Obtaining the member 'lineno' of a type (line 431)
                lineno_23863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 431, 56), node_23862, 'lineno')
                # Getting the type of 'node' (line 432)
                node_23864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 432, 56), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 432)
                col_offset_23865 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 432, 56), node_23864, 'col_offset')
                # Processing the call keyword arguments (line 430)
                kwargs_23866 = {}
                # Getting the type of 'idioms_copy' (line 430)
                idioms_copy_23852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 430, 27), 'idioms_copy', False)
                # Obtaining the member 'set_type_of_idiom_var' of a type (line 430)
                set_type_of_idiom_var_23853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 430, 27), idioms_copy_23852, 'set_type_of_idiom_var')
                # Calling set_type_of_idiom_var(args, kwargs) (line 430)
                set_type_of_idiom_var_call_result_23867 = invoke(stypy.reporting.localization.Localization(__file__, 430, 27), set_type_of_idiom_var_23853, *[idiom_name_23854, str_23855, test_23857, subscript_call_result_23861, lineno_23863, col_offset_23865], **kwargs_23866)
                
                # Assigning a type to the variable 'set_type' (line 430)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 430, 16), 'set_type', set_type_of_idiom_var_call_result_23867)
                
                # Call to append(...): (line 434)
                # Processing the call arguments (line 434)
                # Getting the type of 'set_type' (line 434)
                set_type_23870 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 48), 'set_type', False)
                # Processing the call keyword arguments (line 434)
                kwargs_23871 = {}
                # Getting the type of 'idiom_first_if_body_else' (line 434)
                idiom_first_if_body_else_23868 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 434, 16), 'idiom_first_if_body_else', False)
                # Obtaining the member 'append' of a type (line 434)
                append_23869 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 434, 16), idiom_first_if_body_else_23868, 'append')
                # Calling append(args, kwargs) (line 434)
                append_call_result_23872 = invoke(stypy.reporting.localization.Localization(__file__, 434, 16), append_23869, *[set_type_23870], **kwargs_23871)
                
                
                # Assigning a Name to a Name (line 435):
                
                # Assigning a Name to a Name (line 435):
                # Getting the type of 'idiom_first_if_body_else' (line 435)
                idiom_first_if_body_else_23873 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 435, 38), 'idiom_first_if_body_else')
                # Assigning a type to the variable 'body_stmts_location' (line 435)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 435, 16), 'body_stmts_location', idiom_first_if_body_else_23873)
                # SSA branch for the else part of an if statement (line 388)
                module_type_store.open_ssa_branch('else')
                
                # Call to append(...): (line 437)
                # Processing the call arguments (line 437)
                
                # Call to create_src_comment(...): (line 438)
                # Processing the call arguments (line 438)
                str_23878 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 438, 60), 'str', 'SSA branch for the else part of an if statement')
                # Getting the type of 'node' (line 438)
                node_23879 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 111), 'node', False)
                # Obtaining the member 'lineno' of a type (line 438)
                lineno_23880 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 111), node_23879, 'lineno')
                # Processing the call keyword arguments (line 438)
                kwargs_23881 = {}
                # Getting the type of 'stypy_functions_copy' (line 438)
                stypy_functions_copy_23876 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 438, 20), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 438)
                create_src_comment_23877 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 438, 20), stypy_functions_copy_23876, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 438)
                create_src_comment_call_result_23882 = invoke(stypy.reporting.localization.Localization(__file__, 438, 20), create_src_comment_23877, *[str_23878, lineno_23880], **kwargs_23881)
                
                # Processing the call keyword arguments (line 437)
                kwargs_23883 = {}
                # Getting the type of 'if_stmt_body' (line 437)
                if_stmt_body_23874 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 437, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 437)
                append_23875 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 437, 16), if_stmt_body_23874, 'append')
                # Calling append(args, kwargs) (line 437)
                append_call_result_23884 = invoke(stypy.reporting.localization.Localization(__file__, 437, 16), append_23875, *[create_src_comment_call_result_23882], **kwargs_23883)
                
                
                # Assigning a Call to a Tuple (line 439):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 439)
                # Processing the call keyword arguments (line 439)
                kwargs_23887 = {}
                # Getting the type of 'stypy_functions_copy' (line 439)
                stypy_functions_copy_23885 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 439)
                create_clone_type_store_23886 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 439, 47), stypy_functions_copy_23885, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 439)
                create_clone_type_store_call_result_23888 = invoke(stypy.reporting.localization.Localization(__file__, 439, 47), create_clone_type_store_23886, *[], **kwargs_23887)
                
                # Assigning a type to the variable 'call_assignment_22300' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22300', create_clone_type_store_call_result_23888)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22300' (line 439)
                call_assignment_22300_23889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22300', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23890 = stypy_get_value_from_tuple(call_assignment_22300_23889, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22301' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22301', stypy_get_value_from_tuple_call_result_23890)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_22301' (line 439)
                call_assignment_22301_23891 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22301')
                # Assigning a type to the variable 'clone_stmt2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'clone_stmt2', call_assignment_22301_23891)
                
                # Assigning a Call to a Name (line 439):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22300' (line 439)
                call_assignment_22300_23892 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22300', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23893 = stypy_get_value_from_tuple(call_assignment_22300_23892, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22302' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22302', stypy_get_value_from_tuple_call_result_23893)
                
                # Assigning a Name to a Name (line 439):
                # Getting the type of 'call_assignment_22302' (line 439)
                call_assignment_22302_23894 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 439, 16), 'call_assignment_22302')
                # Assigning a type to the variable 'type_store_var2' (line 439)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 439, 29), 'type_store_var2', call_assignment_22302_23894)
                
                # Call to append(...): (line 440)
                # Processing the call arguments (line 440)
                # Getting the type of 'clone_stmt2' (line 440)
                clone_stmt2_23897 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 36), 'clone_stmt2', False)
                # Processing the call keyword arguments (line 440)
                kwargs_23898 = {}
                # Getting the type of 'if_stmt_body' (line 440)
                if_stmt_body_23895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 440, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 440)
                append_23896 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 440, 16), if_stmt_body_23895, 'append')
                # Calling append(args, kwargs) (line 440)
                append_call_result_23899 = invoke(stypy.reporting.localization.Localization(__file__, 440, 16), append_23896, *[clone_stmt2_23897], **kwargs_23898)
                
                
                # Assigning a Call to a Name (line 442):
                
                # Assigning a Call to a Name (line 442):
                
                # Call to create_set_type_store(...): (line 442)
                # Processing the call arguments (line 442)
                # Getting the type of 'type_store_var1' (line 442)
                type_store_var1_23902 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 77), 'type_store_var1', False)
                # Processing the call keyword arguments (line 442)
                kwargs_23903 = {}
                # Getting the type of 'stypy_functions_copy' (line 442)
                stypy_functions_copy_23900 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 442, 34), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_store' of a type (line 442)
                create_set_type_store_23901 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 442, 34), stypy_functions_copy_23900, 'create_set_type_store')
                # Calling create_set_type_store(args, kwargs) (line 442)
                create_set_type_store_call_result_23904 = invoke(stypy.reporting.localization.Localization(__file__, 442, 34), create_set_type_store_23901, *[type_store_var1_23902], **kwargs_23903)
                
                # Assigning a type to the variable 'set_type_store1' (line 442)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 442, 16), 'set_type_store1', create_set_type_store_call_result_23904)
                
                # Call to append(...): (line 443)
                # Processing the call arguments (line 443)
                # Getting the type of 'set_type_store1' (line 443)
                set_type_store1_23907 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 36), 'set_type_store1', False)
                # Processing the call keyword arguments (line 443)
                kwargs_23908 = {}
                # Getting the type of 'if_stmt_body' (line 443)
                if_stmt_body_23905 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 443, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 443)
                append_23906 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 443, 16), if_stmt_body_23905, 'append')
                # Calling append(args, kwargs) (line 443)
                append_call_result_23909 = invoke(stypy.reporting.localization.Localization(__file__, 443, 16), append_23906, *[set_type_store1_23907], **kwargs_23908)
                
                
                # Assigning a Name to a Name (line 444):
                
                # Assigning a Name to a Name (line 444):
                # Getting the type of 'if_stmt_body' (line 444)
                if_stmt_body_23910 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 444, 38), 'if_stmt_body')
                # Assigning a type to the variable 'body_stmts_location' (line 444)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 444, 16), 'body_stmts_location', if_stmt_body_23910)
                # SSA join for if statement (line 388)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to extend(...): (line 447)
            # Processing the call arguments (line 447)
            
            # Call to __visit_instruction_body(...): (line 447)
            # Processing the call arguments (line 447)
            # Getting the type of 'node' (line 447)
            node_23915 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 69), 'node', False)
            # Obtaining the member 'orelse' of a type (line 447)
            orelse_23916 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 69), node_23915, 'orelse')
            # Getting the type of 'context' (line 447)
            context_23917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 82), 'context', False)
            # Processing the call keyword arguments (line 447)
            kwargs_23918 = {}
            # Getting the type of 'self' (line 447)
            self_23913 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 39), 'self', False)
            # Obtaining the member '__visit_instruction_body' of a type (line 447)
            visit_instruction_body_23914 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 39), self_23913, '__visit_instruction_body')
            # Calling __visit_instruction_body(args, kwargs) (line 447)
            visit_instruction_body_call_result_23919 = invoke(stypy.reporting.localization.Localization(__file__, 447, 39), visit_instruction_body_23914, *[orelse_23916, context_23917], **kwargs_23918)
            
            # Processing the call keyword arguments (line 447)
            kwargs_23920 = {}
            # Getting the type of 'body_stmts_location' (line 447)
            body_stmts_location_23911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 447, 12), 'body_stmts_location', False)
            # Obtaining the member 'extend' of a type (line 447)
            extend_23912 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 447, 12), body_stmts_location_23911, 'extend')
            # Calling extend(args, kwargs) (line 447)
            extend_call_result_23921 = invoke(stypy.reporting.localization.Localization(__file__, 447, 12), extend_23912, *[visit_instruction_body_call_result_23919], **kwargs_23920)
            
            # SSA branch for the else part of an if statement (line 387)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Tuple (line 450):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 450)
            # Processing the call keyword arguments (line 450)
            kwargs_23924 = {}
            # Getting the type of 'stypy_functions_copy' (line 450)
            stypy_functions_copy_23922 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 43), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 450)
            create_clone_type_store_23923 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 450, 43), stypy_functions_copy_23922, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 450)
            create_clone_type_store_call_result_23925 = invoke(stypy.reporting.localization.Localization(__file__, 450, 43), create_clone_type_store_23923, *[], **kwargs_23924)
            
            # Assigning a type to the variable 'call_assignment_22303' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22303', create_clone_type_store_call_result_23925)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22303' (line 450)
            call_assignment_22303_23926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22303', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23927 = stypy_get_value_from_tuple(call_assignment_22303_23926, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22304' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22304', stypy_get_value_from_tuple_call_result_23927)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_22304' (line 450)
            call_assignment_22304_23928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22304')
            # Assigning a type to the variable 'clone_stmt2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'clone_stmt2', call_assignment_22304_23928)
            
            # Assigning a Call to a Name (line 450):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22303' (line 450)
            call_assignment_22303_23929 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22303', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_23930 = stypy_get_value_from_tuple(call_assignment_22303_23929, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22305' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22305', stypy_get_value_from_tuple_call_result_23930)
            
            # Assigning a Name to a Name (line 450):
            # Getting the type of 'call_assignment_22305' (line 450)
            call_assignment_22305_23931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 450, 12), 'call_assignment_22305')
            # Assigning a type to the variable 'type_store_var2' (line 450)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 450, 25), 'type_store_var2', call_assignment_22305_23931)
            
            # Call to append(...): (line 451)
            # Processing the call arguments (line 451)
            # Getting the type of 'clone_stmt2' (line 451)
            clone_stmt2_23934 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 39), 'clone_stmt2', False)
            # Processing the call keyword arguments (line 451)
            kwargs_23935 = {}
            # Getting the type of 'body_stmts_location' (line 451)
            body_stmts_location_23932 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 451, 12), 'body_stmts_location', False)
            # Obtaining the member 'append' of a type (line 451)
            append_23933 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 451, 12), body_stmts_location_23932, 'append')
            # Calling append(args, kwargs) (line 451)
            append_call_result_23936 = invoke(stypy.reporting.localization.Localization(__file__, 451, 12), append_23933, *[clone_stmt2_23934], **kwargs_23935)
            
            
            # Assigning a Call to a Name (line 455):
            
            # Assigning a Call to a Name (line 455):
            
            # Call to create_Name(...): (line 455)
            # Processing the call arguments (line 455)
            str_23939 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 455, 61), 'str', 'None')
            # Processing the call keyword arguments (line 455)
            kwargs_23940 = {}
            # Getting the type of 'core_language_copy' (line 455)
            core_language_copy_23937 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 455, 30), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 455)
            create_Name_23938 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 455, 30), core_language_copy_23937, 'create_Name')
            # Calling create_Name(args, kwargs) (line 455)
            create_Name_call_result_23941 = invoke(stypy.reporting.localization.Localization(__file__, 455, 30), create_Name_23938, *[str_23939], **kwargs_23940)
            
            # Assigning a type to the variable 'type_store_var3' (line 455)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 455, 12), 'type_store_var3', create_Name_call_result_23941)
            # SSA join for if statement (line 387)
            module_type_store = module_type_store.join_ssa_context()
            

        # Getting the type of 'is_an_idiom' (line 457)
        is_an_idiom_23942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 457, 11), 'is_an_idiom')
        # Testing if the type of an if condition is none (line 457)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 457, 8), is_an_idiom_23942):
            
            
            # Call to len(...): (line 477)
            # Processing the call arguments (line 477)
            # Getting the type of 'node' (line 477)
            node_24007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 19), 'node', False)
            # Obtaining the member 'orelse' of a type (line 477)
            orelse_24008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 19), node_24007, 'orelse')
            # Processing the call keyword arguments (line 477)
            kwargs_24009 = {}
            # Getting the type of 'len' (line 477)
            len_24006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 15), 'len', False)
            # Calling len(args, kwargs) (line 477)
            len_call_result_24010 = invoke(stypy.reporting.localization.Localization(__file__, 477, 15), len_24006, *[orelse_24008], **kwargs_24009)
            
            int_24011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 34), 'int')
            # Applying the binary operator '>' (line 477)
            result_gt_24012 = python_operator(stypy.reporting.localization.Localization(__file__, 477, 15), '>', len_call_result_24010, int_24011)
            
            # Testing if the type of an if condition is none (line 477)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_24012):
                pass
            else:
                
                # Testing the type of an if condition (line 477)
                if_condition_24013 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_24012)
                # Assigning a type to the variable 'if_condition_24013' (line 477)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 12), 'if_condition_24013', if_condition_24013)
                # SSA begins for if statement (line 477)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 478):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 478)
                # Processing the call keyword arguments (line 478)
                kwargs_24016 = {}
                # Getting the type of 'stypy_functions_copy' (line 478)
                stypy_functions_copy_24014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 478)
                create_clone_type_store_24015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 47), stypy_functions_copy_24014, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 478)
                create_clone_type_store_call_result_24017 = invoke(stypy.reporting.localization.Localization(__file__, 478, 47), create_clone_type_store_24015, *[], **kwargs_24016)
                
                # Assigning a type to the variable 'call_assignment_22309' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22309', create_clone_type_store_call_result_24017)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22309' (line 478)
                call_assignment_22309_24018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22309', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_24019 = stypy_get_value_from_tuple(call_assignment_22309_24018, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22310' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22310', stypy_get_value_from_tuple_call_result_24019)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_22310' (line 478)
                call_assignment_22310_24020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22310')
                # Assigning a type to the variable 'clone_stmt3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'clone_stmt3', call_assignment_22310_24020)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22309' (line 478)
                call_assignment_22309_24021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22309', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_24022 = stypy_get_value_from_tuple(call_assignment_22309_24021, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22311' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22311', stypy_get_value_from_tuple_call_result_24022)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_22311' (line 478)
                call_assignment_22311_24023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22311')
                # Assigning a type to the variable 'type_store_var3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 29), 'type_store_var3', call_assignment_22311_24023)
                
                # Call to append(...): (line 479)
                # Processing the call arguments (line 479)
                # Getting the type of 'clone_stmt3' (line 479)
                clone_stmt3_24026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 36), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 479)
                kwargs_24027 = {}
                # Getting the type of 'if_stmt_body' (line 479)
                if_stmt_body_24024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 479)
                append_24025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 16), if_stmt_body_24024, 'append')
                # Calling append(args, kwargs) (line 479)
                append_call_result_24028 = invoke(stypy.reporting.localization.Localization(__file__, 479, 16), append_24025, *[clone_stmt3_24026], **kwargs_24027)
                
                # SSA join for if statement (line 477)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Name (line 480):
            
            # Assigning a Name to a Name (line 480):
            # Getting the type of 'if_stmt_body' (line 480)
            if_stmt_body_24029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 26), 'if_stmt_body')
            # Assigning a type to the variable 'final_stmts' (line 480)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'final_stmts', if_stmt_body_24029)
        else:
            
            # Testing the type of an if condition (line 457)
            if_condition_23943 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 457, 8), is_an_idiom_23942)
            # Assigning a type to the variable 'if_condition_23943' (line 457)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 457, 8), 'if_condition_23943', if_condition_23943)
            # SSA begins for if statement (line 457)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            
            # Call to len(...): (line 458)
            # Processing the call arguments (line 458)
            # Getting the type of 'node' (line 458)
            node_23945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 19), 'node', False)
            # Obtaining the member 'orelse' of a type (line 458)
            orelse_23946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 458, 19), node_23945, 'orelse')
            # Processing the call keyword arguments (line 458)
            kwargs_23947 = {}
            # Getting the type of 'len' (line 458)
            len_23944 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 458, 15), 'len', False)
            # Calling len(args, kwargs) (line 458)
            len_call_result_23948 = invoke(stypy.reporting.localization.Localization(__file__, 458, 15), len_23944, *[orelse_23946], **kwargs_23947)
            
            int_23949 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 458, 35), 'int')
            # Applying the binary operator '==' (line 458)
            result_eq_23950 = python_operator(stypy.reporting.localization.Localization(__file__, 458, 15), '==', len_call_result_23948, int_23949)
            
            # Testing if the type of an if condition is none (line 458)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 458, 12), result_eq_23950):
                
                # Assigning a List to a Name (line 464):
                
                # Assigning a List to a Name (line 464):
                
                # Obtaining an instance of the builtin type 'list' (line 464)
                list_23965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 46), 'list')
                # Adding type elements to the builtin type 'list' instance (line 464)
                
                # Assigning a type to the variable 'idiom_more_types_body_final' (line 464)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 16), 'idiom_more_types_body_final', list_23965)
                
                # Assigning a Call to a Name (line 466):
                
                # Assigning a Call to a Name (line 466):
                
                # Call to BoolOp(...): (line 466)
                # Processing the call keyword arguments (line 466)
                kwargs_23968 = {}
                # Getting the type of 'ast' (line 466)
                ast_23966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 27), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 466)
                BoolOp_23967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 27), ast_23966, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 466)
                BoolOp_call_result_23969 = invoke(stypy.reporting.localization.Localization(__file__, 466, 27), BoolOp_23967, *[], **kwargs_23968)
                
                # Assigning a type to the variable 'and_cond' (line 466)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 16), 'and_cond', BoolOp_call_result_23969)
                
                # Assigning a Call to a Attribute (line 467):
                
                # Assigning a Call to a Attribute (line 467):
                
                # Call to And(...): (line 467)
                # Processing the call keyword arguments (line 467)
                kwargs_23972 = {}
                # Getting the type of 'ast' (line 467)
                ast_23970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 30), 'ast', False)
                # Obtaining the member 'And' of a type (line 467)
                And_23971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 30), ast_23970, 'And')
                # Calling And(args, kwargs) (line 467)
                And_call_result_23973 = invoke(stypy.reporting.localization.Localization(__file__, 467, 30), And_23971, *[], **kwargs_23972)
                
                # Getting the type of 'and_cond' (line 467)
                and_cond_23974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 16), 'and_cond')
                # Setting the type of the member 'op' of a type (line 467)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 16), and_cond_23974, 'op', And_call_result_23973)
                
                # Assigning a List to a Attribute (line 468):
                
                # Assigning a List to a Attribute (line 468):
                
                # Obtaining an instance of the builtin type 'list' (line 468)
                list_23975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 34), 'list')
                # Adding type elements to the builtin type 'list' instance (line 468)
                # Adding element type (line 468)
                # Getting the type of 'may_be_type_temp_var' (line 468)
                may_be_type_temp_var_23976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 35), 'may_be_type_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_23975, may_be_type_temp_var_23976)
                # Adding element type (line 468)
                # Getting the type of 'more_types_temp_var' (line 468)
                more_types_temp_var_23977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 57), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_23975, more_types_temp_var_23977)
                
                # Getting the type of 'and_cond' (line 468)
                and_cond_23978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 16), 'and_cond')
                # Setting the type of the member 'values' of a type (line 468)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 16), and_cond_23978, 'values', list_23975)
                
                # Assigning a Call to a Name (line 470):
                
                # Assigning a Call to a Name (line 470):
                
                # Call to create_if(...): (line 470)
                # Processing the call arguments (line 470)
                # Getting the type of 'and_cond' (line 470)
                and_cond_23981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 76), 'and_cond', False)
                # Getting the type of 'idiom_more_types_body_final' (line 470)
                idiom_more_types_body_final_23982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 86), 'idiom_more_types_body_final', False)
                # Processing the call keyword arguments (line 470)
                kwargs_23983 = {}
                # Getting the type of 'conditional_statements_copy' (line 470)
                conditional_statements_copy_23979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 38), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 470)
                create_if_23980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 38), conditional_statements_copy_23979, 'create_if')
                # Calling create_if(args, kwargs) (line 470)
                create_if_call_result_23984 = invoke(stypy.reporting.localization.Localization(__file__, 470, 38), create_if_23980, *[and_cond_23981, idiom_more_types_body_final_23982], **kwargs_23983)
                
                # Assigning a type to the variable 'if_more_types_final' (line 470)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'if_more_types_final', create_if_call_result_23984)
                
                # Call to append(...): (line 471)
                # Processing the call arguments (line 471)
                # Getting the type of 'if_more_types_final' (line 471)
                if_more_types_final_23987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 43), 'if_more_types_final', False)
                # Processing the call keyword arguments (line 471)
                kwargs_23988 = {}
                # Getting the type of 'body_stmts_location' (line 471)
                body_stmts_location_23985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 471)
                append_23986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 16), body_stmts_location_23985, 'append')
                # Calling append(args, kwargs) (line 471)
                append_call_result_23989 = invoke(stypy.reporting.localization.Localization(__file__, 471, 16), append_23986, *[if_more_types_final_23987], **kwargs_23988)
                
                
                # Assigning a Call to a Tuple (line 472):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 472)
                # Processing the call keyword arguments (line 472)
                kwargs_23992 = {}
                # Getting the type of 'stypy_functions_copy' (line 472)
                stypy_functions_copy_23990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 472)
                create_clone_type_store_23991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 47), stypy_functions_copy_23990, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 472)
                create_clone_type_store_call_result_23993 = invoke(stypy.reporting.localization.Localization(__file__, 472, 47), create_clone_type_store_23991, *[], **kwargs_23992)
                
                # Assigning a type to the variable 'call_assignment_22306' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22306', create_clone_type_store_call_result_23993)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22306' (line 472)
                call_assignment_22306_23994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22306', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23995 = stypy_get_value_from_tuple(call_assignment_22306_23994, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22307' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22307', stypy_get_value_from_tuple_call_result_23995)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_22307' (line 472)
                call_assignment_22307_23996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22307')
                # Assigning a type to the variable 'clone_stmt3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'clone_stmt3', call_assignment_22307_23996)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22306' (line 472)
                call_assignment_22306_23997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22306', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23998 = stypy_get_value_from_tuple(call_assignment_22306_23997, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22308' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22308', stypy_get_value_from_tuple_call_result_23998)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_22308' (line 472)
                call_assignment_22308_23999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22308')
                # Assigning a type to the variable 'type_store_var3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 29), 'type_store_var3', call_assignment_22308_23999)
                
                # Call to append(...): (line 473)
                # Processing the call arguments (line 473)
                # Getting the type of 'clone_stmt3' (line 473)
                clone_stmt3_24002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 51), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 473)
                kwargs_24003 = {}
                # Getting the type of 'idiom_more_types_body_final' (line 473)
                idiom_more_types_body_final_24000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 16), 'idiom_more_types_body_final', False)
                # Obtaining the member 'append' of a type (line 473)
                append_24001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 16), idiom_more_types_body_final_24000, 'append')
                # Calling append(args, kwargs) (line 473)
                append_call_result_24004 = invoke(stypy.reporting.localization.Localization(__file__, 473, 16), append_24001, *[clone_stmt3_24002], **kwargs_24003)
                
                
                # Assigning a Name to a Name (line 475):
                
                # Assigning a Name to a Name (line 475):
                # Getting the type of 'idiom_more_types_body_final' (line 475)
                idiom_more_types_body_final_24005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 30), 'idiom_more_types_body_final')
                # Assigning a type to the variable 'final_stmts' (line 475)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 16), 'final_stmts', idiom_more_types_body_final_24005)
            else:
                
                # Testing the type of an if condition (line 458)
                if_condition_23951 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 458, 12), result_eq_23950)
                # Assigning a type to the variable 'if_condition_23951' (line 458)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 458, 12), 'if_condition_23951', if_condition_23951)
                # SSA begins for if statement (line 458)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a List to a Name (line 459):
                
                # Assigning a List to a Name (line 459):
                
                # Obtaining an instance of the builtin type 'list' (line 459)
                list_23952 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 459, 46), 'list')
                # Adding type elements to the builtin type 'list' instance (line 459)
                
                # Assigning a type to the variable 'idiom_more_types_body_final' (line 459)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 459, 16), 'idiom_more_types_body_final', list_23952)
                
                # Assigning a Call to a Name (line 460):
                
                # Assigning a Call to a Name (line 460):
                
                # Call to create_if(...): (line 460)
                # Processing the call arguments (line 460)
                # Getting the type of 'more_types_temp_var' (line 460)
                more_types_temp_var_23955 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 76), 'more_types_temp_var', False)
                # Getting the type of 'idiom_more_types_body_final' (line 460)
                idiom_more_types_body_final_23956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 97), 'idiom_more_types_body_final', False)
                # Processing the call keyword arguments (line 460)
                kwargs_23957 = {}
                # Getting the type of 'conditional_statements_copy' (line 460)
                conditional_statements_copy_23953 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 460, 38), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 460)
                create_if_23954 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 460, 38), conditional_statements_copy_23953, 'create_if')
                # Calling create_if(args, kwargs) (line 460)
                create_if_call_result_23958 = invoke(stypy.reporting.localization.Localization(__file__, 460, 38), create_if_23954, *[more_types_temp_var_23955, idiom_more_types_body_final_23956], **kwargs_23957)
                
                # Assigning a type to the variable 'if_more_types_final' (line 460)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 460, 16), 'if_more_types_final', create_if_call_result_23958)
                
                # Call to append(...): (line 461)
                # Processing the call arguments (line 461)
                # Getting the type of 'if_more_types_final' (line 461)
                if_more_types_final_23961 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 43), 'if_more_types_final', False)
                # Processing the call keyword arguments (line 461)
                kwargs_23962 = {}
                # Getting the type of 'body_stmts_location' (line 461)
                body_stmts_location_23959 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 461, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 461)
                append_23960 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 461, 16), body_stmts_location_23959, 'append')
                # Calling append(args, kwargs) (line 461)
                append_call_result_23963 = invoke(stypy.reporting.localization.Localization(__file__, 461, 16), append_23960, *[if_more_types_final_23961], **kwargs_23962)
                
                
                # Assigning a Name to a Name (line 462):
                
                # Assigning a Name to a Name (line 462):
                # Getting the type of 'idiom_more_types_body_final' (line 462)
                idiom_more_types_body_final_23964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 462, 30), 'idiom_more_types_body_final')
                # Assigning a type to the variable 'final_stmts' (line 462)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 462, 16), 'final_stmts', idiom_more_types_body_final_23964)
                # SSA branch for the else part of an if statement (line 458)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a List to a Name (line 464):
                
                # Assigning a List to a Name (line 464):
                
                # Obtaining an instance of the builtin type 'list' (line 464)
                list_23965 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 464, 46), 'list')
                # Adding type elements to the builtin type 'list' instance (line 464)
                
                # Assigning a type to the variable 'idiom_more_types_body_final' (line 464)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 464, 16), 'idiom_more_types_body_final', list_23965)
                
                # Assigning a Call to a Name (line 466):
                
                # Assigning a Call to a Name (line 466):
                
                # Call to BoolOp(...): (line 466)
                # Processing the call keyword arguments (line 466)
                kwargs_23968 = {}
                # Getting the type of 'ast' (line 466)
                ast_23966 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 466, 27), 'ast', False)
                # Obtaining the member 'BoolOp' of a type (line 466)
                BoolOp_23967 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 466, 27), ast_23966, 'BoolOp')
                # Calling BoolOp(args, kwargs) (line 466)
                BoolOp_call_result_23969 = invoke(stypy.reporting.localization.Localization(__file__, 466, 27), BoolOp_23967, *[], **kwargs_23968)
                
                # Assigning a type to the variable 'and_cond' (line 466)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 466, 16), 'and_cond', BoolOp_call_result_23969)
                
                # Assigning a Call to a Attribute (line 467):
                
                # Assigning a Call to a Attribute (line 467):
                
                # Call to And(...): (line 467)
                # Processing the call keyword arguments (line 467)
                kwargs_23972 = {}
                # Getting the type of 'ast' (line 467)
                ast_23970 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 30), 'ast', False)
                # Obtaining the member 'And' of a type (line 467)
                And_23971 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 30), ast_23970, 'And')
                # Calling And(args, kwargs) (line 467)
                And_call_result_23973 = invoke(stypy.reporting.localization.Localization(__file__, 467, 30), And_23971, *[], **kwargs_23972)
                
                # Getting the type of 'and_cond' (line 467)
                and_cond_23974 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 467, 16), 'and_cond')
                # Setting the type of the member 'op' of a type (line 467)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 467, 16), and_cond_23974, 'op', And_call_result_23973)
                
                # Assigning a List to a Attribute (line 468):
                
                # Assigning a List to a Attribute (line 468):
                
                # Obtaining an instance of the builtin type 'list' (line 468)
                list_23975 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 468, 34), 'list')
                # Adding type elements to the builtin type 'list' instance (line 468)
                # Adding element type (line 468)
                # Getting the type of 'may_be_type_temp_var' (line 468)
                may_be_type_temp_var_23976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 35), 'may_be_type_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_23975, may_be_type_temp_var_23976)
                # Adding element type (line 468)
                # Getting the type of 'more_types_temp_var' (line 468)
                more_types_temp_var_23977 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 57), 'more_types_temp_var')
                add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 468, 34), list_23975, more_types_temp_var_23977)
                
                # Getting the type of 'and_cond' (line 468)
                and_cond_23978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 468, 16), 'and_cond')
                # Setting the type of the member 'values' of a type (line 468)
                module_type_store.set_type_of_member(stypy.reporting.localization.Localization(__file__, 468, 16), and_cond_23978, 'values', list_23975)
                
                # Assigning a Call to a Name (line 470):
                
                # Assigning a Call to a Name (line 470):
                
                # Call to create_if(...): (line 470)
                # Processing the call arguments (line 470)
                # Getting the type of 'and_cond' (line 470)
                and_cond_23981 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 76), 'and_cond', False)
                # Getting the type of 'idiom_more_types_body_final' (line 470)
                idiom_more_types_body_final_23982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 86), 'idiom_more_types_body_final', False)
                # Processing the call keyword arguments (line 470)
                kwargs_23983 = {}
                # Getting the type of 'conditional_statements_copy' (line 470)
                conditional_statements_copy_23979 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 470, 38), 'conditional_statements_copy', False)
                # Obtaining the member 'create_if' of a type (line 470)
                create_if_23980 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 470, 38), conditional_statements_copy_23979, 'create_if')
                # Calling create_if(args, kwargs) (line 470)
                create_if_call_result_23984 = invoke(stypy.reporting.localization.Localization(__file__, 470, 38), create_if_23980, *[and_cond_23981, idiom_more_types_body_final_23982], **kwargs_23983)
                
                # Assigning a type to the variable 'if_more_types_final' (line 470)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 470, 16), 'if_more_types_final', create_if_call_result_23984)
                
                # Call to append(...): (line 471)
                # Processing the call arguments (line 471)
                # Getting the type of 'if_more_types_final' (line 471)
                if_more_types_final_23987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 43), 'if_more_types_final', False)
                # Processing the call keyword arguments (line 471)
                kwargs_23988 = {}
                # Getting the type of 'body_stmts_location' (line 471)
                body_stmts_location_23985 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 471, 16), 'body_stmts_location', False)
                # Obtaining the member 'append' of a type (line 471)
                append_23986 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 471, 16), body_stmts_location_23985, 'append')
                # Calling append(args, kwargs) (line 471)
                append_call_result_23989 = invoke(stypy.reporting.localization.Localization(__file__, 471, 16), append_23986, *[if_more_types_final_23987], **kwargs_23988)
                
                
                # Assigning a Call to a Tuple (line 472):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 472)
                # Processing the call keyword arguments (line 472)
                kwargs_23992 = {}
                # Getting the type of 'stypy_functions_copy' (line 472)
                stypy_functions_copy_23990 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 472)
                create_clone_type_store_23991 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 472, 47), stypy_functions_copy_23990, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 472)
                create_clone_type_store_call_result_23993 = invoke(stypy.reporting.localization.Localization(__file__, 472, 47), create_clone_type_store_23991, *[], **kwargs_23992)
                
                # Assigning a type to the variable 'call_assignment_22306' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22306', create_clone_type_store_call_result_23993)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22306' (line 472)
                call_assignment_22306_23994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22306', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23995 = stypy_get_value_from_tuple(call_assignment_22306_23994, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22307' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22307', stypy_get_value_from_tuple_call_result_23995)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_22307' (line 472)
                call_assignment_22307_23996 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22307')
                # Assigning a type to the variable 'clone_stmt3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'clone_stmt3', call_assignment_22307_23996)
                
                # Assigning a Call to a Name (line 472):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22306' (line 472)
                call_assignment_22306_23997 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22306', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_23998 = stypy_get_value_from_tuple(call_assignment_22306_23997, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22308' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22308', stypy_get_value_from_tuple_call_result_23998)
                
                # Assigning a Name to a Name (line 472):
                # Getting the type of 'call_assignment_22308' (line 472)
                call_assignment_22308_23999 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 472, 16), 'call_assignment_22308')
                # Assigning a type to the variable 'type_store_var3' (line 472)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 472, 29), 'type_store_var3', call_assignment_22308_23999)
                
                # Call to append(...): (line 473)
                # Processing the call arguments (line 473)
                # Getting the type of 'clone_stmt3' (line 473)
                clone_stmt3_24002 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 51), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 473)
                kwargs_24003 = {}
                # Getting the type of 'idiom_more_types_body_final' (line 473)
                idiom_more_types_body_final_24000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 473, 16), 'idiom_more_types_body_final', False)
                # Obtaining the member 'append' of a type (line 473)
                append_24001 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 473, 16), idiom_more_types_body_final_24000, 'append')
                # Calling append(args, kwargs) (line 473)
                append_call_result_24004 = invoke(stypy.reporting.localization.Localization(__file__, 473, 16), append_24001, *[clone_stmt3_24002], **kwargs_24003)
                
                
                # Assigning a Name to a Name (line 475):
                
                # Assigning a Name to a Name (line 475):
                # Getting the type of 'idiom_more_types_body_final' (line 475)
                idiom_more_types_body_final_24005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 475, 30), 'idiom_more_types_body_final')
                # Assigning a type to the variable 'final_stmts' (line 475)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 475, 16), 'final_stmts', idiom_more_types_body_final_24005)
                # SSA join for if statement (line 458)
                module_type_store = module_type_store.join_ssa_context()
                

            # SSA branch for the else part of an if statement (line 457)
            module_type_store.open_ssa_branch('else')
            
            
            # Call to len(...): (line 477)
            # Processing the call arguments (line 477)
            # Getting the type of 'node' (line 477)
            node_24007 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 19), 'node', False)
            # Obtaining the member 'orelse' of a type (line 477)
            orelse_24008 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 477, 19), node_24007, 'orelse')
            # Processing the call keyword arguments (line 477)
            kwargs_24009 = {}
            # Getting the type of 'len' (line 477)
            len_24006 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 477, 15), 'len', False)
            # Calling len(args, kwargs) (line 477)
            len_call_result_24010 = invoke(stypy.reporting.localization.Localization(__file__, 477, 15), len_24006, *[orelse_24008], **kwargs_24009)
            
            int_24011 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 477, 34), 'int')
            # Applying the binary operator '>' (line 477)
            result_gt_24012 = python_operator(stypy.reporting.localization.Localization(__file__, 477, 15), '>', len_call_result_24010, int_24011)
            
            # Testing if the type of an if condition is none (line 477)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_24012):
                pass
            else:
                
                # Testing the type of an if condition (line 477)
                if_condition_24013 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 477, 12), result_gt_24012)
                # Assigning a type to the variable 'if_condition_24013' (line 477)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 477, 12), 'if_condition_24013', if_condition_24013)
                # SSA begins for if statement (line 477)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Call to a Tuple (line 478):
                
                # Assigning a Call to a Name:
                
                # Call to create_clone_type_store(...): (line 478)
                # Processing the call keyword arguments (line 478)
                kwargs_24016 = {}
                # Getting the type of 'stypy_functions_copy' (line 478)
                stypy_functions_copy_24014 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 47), 'stypy_functions_copy', False)
                # Obtaining the member 'create_clone_type_store' of a type (line 478)
                create_clone_type_store_24015 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 478, 47), stypy_functions_copy_24014, 'create_clone_type_store')
                # Calling create_clone_type_store(args, kwargs) (line 478)
                create_clone_type_store_call_result_24017 = invoke(stypy.reporting.localization.Localization(__file__, 478, 47), create_clone_type_store_24015, *[], **kwargs_24016)
                
                # Assigning a type to the variable 'call_assignment_22309' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22309', create_clone_type_store_call_result_24017)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22309' (line 478)
                call_assignment_22309_24018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22309', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_24019 = stypy_get_value_from_tuple(call_assignment_22309_24018, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22310' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22310', stypy_get_value_from_tuple_call_result_24019)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_22310' (line 478)
                call_assignment_22310_24020 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22310')
                # Assigning a type to the variable 'clone_stmt3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'clone_stmt3', call_assignment_22310_24020)
                
                # Assigning a Call to a Name (line 478):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22309' (line 478)
                call_assignment_22309_24021 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22309', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_24022 = stypy_get_value_from_tuple(call_assignment_22309_24021, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22311' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22311', stypy_get_value_from_tuple_call_result_24022)
                
                # Assigning a Name to a Name (line 478):
                # Getting the type of 'call_assignment_22311' (line 478)
                call_assignment_22311_24023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 478, 16), 'call_assignment_22311')
                # Assigning a type to the variable 'type_store_var3' (line 478)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 478, 29), 'type_store_var3', call_assignment_22311_24023)
                
                # Call to append(...): (line 479)
                # Processing the call arguments (line 479)
                # Getting the type of 'clone_stmt3' (line 479)
                clone_stmt3_24026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 36), 'clone_stmt3', False)
                # Processing the call keyword arguments (line 479)
                kwargs_24027 = {}
                # Getting the type of 'if_stmt_body' (line 479)
                if_stmt_body_24024 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 479, 16), 'if_stmt_body', False)
                # Obtaining the member 'append' of a type (line 479)
                append_24025 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 479, 16), if_stmt_body_24024, 'append')
                # Calling append(args, kwargs) (line 479)
                append_call_result_24028 = invoke(stypy.reporting.localization.Localization(__file__, 479, 16), append_24025, *[clone_stmt3_24026], **kwargs_24027)
                
                # SSA join for if statement (line 477)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Name to a Name (line 480):
            
            # Assigning a Name to a Name (line 480):
            # Getting the type of 'if_stmt_body' (line 480)
            if_stmt_body_24029 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 480, 26), 'if_stmt_body')
            # Assigning a type to the variable 'final_stmts' (line 480)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 480, 12), 'final_stmts', if_stmt_body_24029)
            # SSA join for if statement (line 457)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 484)
        # Processing the call arguments (line 484)
        
        # Call to create_src_comment(...): (line 484)
        # Processing the call arguments (line 484)
        str_24034 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 484, 67), 'str', 'SSA join for if statement')
        # Getting the type of 'node' (line 484)
        node_24035 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 96), 'node', False)
        # Obtaining the member 'lineno' of a type (line 484)
        lineno_24036 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 96), node_24035, 'lineno')
        # Processing the call keyword arguments (line 484)
        kwargs_24037 = {}
        # Getting the type of 'stypy_functions_copy' (line 484)
        stypy_functions_copy_24032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 27), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 484)
        create_src_comment_24033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 27), stypy_functions_copy_24032, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 484)
        create_src_comment_call_result_24038 = invoke(stypy.reporting.localization.Localization(__file__, 484, 27), create_src_comment_24033, *[str_24034, lineno_24036], **kwargs_24037)
        
        # Processing the call keyword arguments (line 484)
        kwargs_24039 = {}
        # Getting the type of 'final_stmts' (line 484)
        final_stmts_24030 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 484, 8), 'final_stmts', False)
        # Obtaining the member 'append' of a type (line 484)
        append_24031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 484, 8), final_stmts_24030, 'append')
        # Calling append(args, kwargs) (line 484)
        append_call_result_24040 = invoke(stypy.reporting.localization.Localization(__file__, 484, 8), append_24031, *[create_src_comment_call_result_24038], **kwargs_24039)
        
        
        # Assigning a Call to a Tuple (line 485):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 485)
        # Processing the call arguments (line 485)
        str_24043 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 485, 82), 'str', 'ssa_join_with_else_branch')
        
        # Obtaining an instance of the builtin type 'list' (line 486)
        list_24044 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 486, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 486)
        # Adding element type (line 486)
        # Getting the type of 'type_store_var1' (line 486)
        type_store_var1_24045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 78), 'type_store_var1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 77), list_24044, type_store_var1_24045)
        # Adding element type (line 486)
        # Getting the type of 'type_store_var2' (line 486)
        type_store_var2_24046 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 486, 95), 'type_store_var2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 77), list_24044, type_store_var2_24046)
        # Adding element type (line 486)
        # Getting the type of 'type_store_var3' (line 487)
        type_store_var3_24047 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 487, 78), 'type_store_var3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 486, 77), list_24044, type_store_var3_24047)
        
        # Processing the call keyword arguments (line 485)
        kwargs_24048 = {}
        # Getting the type of 'stypy_functions_copy' (line 485)
        stypy_functions_copy_24041 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 485)
        create_join_type_store_24042 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 485, 38), stypy_functions_copy_24041, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 485)
        create_join_type_store_call_result_24049 = invoke(stypy.reporting.localization.Localization(__file__, 485, 38), create_join_type_store_24042, *[str_24043, list_24044], **kwargs_24048)
        
        # Assigning a type to the variable 'call_assignment_22312' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_22312', create_join_type_store_call_result_24049)
        
        # Assigning a Call to a Name (line 485):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22312' (line 485)
        call_assignment_22312_24050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_22312', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24051 = stypy_get_value_from_tuple(call_assignment_22312_24050, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22313' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_22313', stypy_get_value_from_tuple_call_result_24051)
        
        # Assigning a Name to a Name (line 485):
        # Getting the type of 'call_assignment_22313' (line 485)
        call_assignment_22313_24052 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_22313')
        # Assigning a type to the variable 'join_stmt' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'join_stmt', call_assignment_22313_24052)
        
        # Assigning a Call to a Name (line 485):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22312' (line 485)
        call_assignment_22312_24053 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_22312', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24054 = stypy_get_value_from_tuple(call_assignment_22312_24053, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22314' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_22314', stypy_get_value_from_tuple_call_result_24054)
        
        # Assigning a Name to a Name (line 485):
        # Getting the type of 'call_assignment_22314' (line 485)
        call_assignment_22314_24055 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 485, 8), 'call_assignment_22314')
        # Assigning a type to the variable 'final_type_store' (line 485)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 485, 19), 'final_type_store', call_assignment_22314_24055)
        
        # Call to append(...): (line 488)
        # Processing the call arguments (line 488)
        # Getting the type of 'join_stmt' (line 488)
        join_stmt_24058 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 27), 'join_stmt', False)
        # Processing the call keyword arguments (line 488)
        kwargs_24059 = {}
        # Getting the type of 'final_stmts' (line 488)
        final_stmts_24056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 488, 8), 'final_stmts', False)
        # Obtaining the member 'append' of a type (line 488)
        append_24057 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 488, 8), final_stmts_24056, 'append')
        # Calling append(args, kwargs) (line 488)
        append_call_result_24060 = invoke(stypy.reporting.localization.Localization(__file__, 488, 8), append_24057, *[join_stmt_24058], **kwargs_24059)
        
        
        # Assigning a Call to a Name (line 491):
        
        # Assigning a Call to a Name (line 491):
        
        # Call to create_set_type_store(...): (line 491)
        # Processing the call arguments (line 491)
        # Getting the type of 'final_type_store' (line 491)
        final_type_store_24063 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 69), 'final_type_store', False)
        # Processing the call keyword arguments (line 491)
        kwargs_24064 = {}
        # Getting the type of 'stypy_functions_copy' (line 491)
        stypy_functions_copy_24061 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 491, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 491)
        create_set_type_store_24062 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 491, 26), stypy_functions_copy_24061, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 491)
        create_set_type_store_call_result_24065 = invoke(stypy.reporting.localization.Localization(__file__, 491, 26), create_set_type_store_24062, *[final_type_store_24063], **kwargs_24064)
        
        # Assigning a type to the variable 'set_type_store2' (line 491)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 491, 8), 'set_type_store2', create_set_type_store_call_result_24065)
        
        # Call to append(...): (line 492)
        # Processing the call arguments (line 492)
        # Getting the type of 'set_type_store2' (line 492)
        set_type_store2_24068 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 27), 'set_type_store2', False)
        # Processing the call keyword arguments (line 492)
        kwargs_24069 = {}
        # Getting the type of 'final_stmts' (line 492)
        final_stmts_24066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 492, 8), 'final_stmts', False)
        # Obtaining the member 'append' of a type (line 492)
        append_24067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 492, 8), final_stmts_24066, 'append')
        # Calling append(args, kwargs) (line 492)
        append_call_result_24070 = invoke(stypy.reporting.localization.Localization(__file__, 492, 8), append_24067, *[set_type_store2_24068], **kwargs_24069)
        
        
        # Assigning a Name to a Name (line 495):
        
        # Assigning a Name to a Name (line 495):
        # Getting the type of 'if_stmt_body' (line 495)
        if_stmt_body_24071 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 495, 23), 'if_stmt_body')
        # Assigning a type to the variable 'all_if_stmts' (line 495)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 495, 8), 'all_if_stmts', if_stmt_body_24071)
        
        # Assigning a Call to a Name (line 498):
        
        # Assigning a Call to a Name (line 498):
        
        # Call to flatten_lists(...): (line 498)
        # Processing the call arguments (line 498)
        # Getting the type of 'condition_comment' (line 498)
        condition_comment_24074 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 53), 'condition_comment', False)
        # Getting the type of 'test_condition_call' (line 498)
        test_condition_call_24075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 72), 'test_condition_call', False)
        # Getting the type of 'all_if_stmts' (line 498)
        all_if_stmts_24076 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 93), 'all_if_stmts', False)
        # Processing the call keyword arguments (line 498)
        kwargs_24077 = {}
        # Getting the type of 'stypy_functions_copy' (line 498)
        stypy_functions_copy_24072 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 498, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 498)
        flatten_lists_24073 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 498, 18), stypy_functions_copy_24072, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 498)
        flatten_lists_call_result_24078 = invoke(stypy.reporting.localization.Localization(__file__, 498, 18), flatten_lists_24073, *[condition_comment_24074, test_condition_call_24075, all_if_stmts_24076], **kwargs_24077)
        
        # Assigning a type to the variable 'if_stmt' (line 498)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 498, 8), 'if_stmt', flatten_lists_call_result_24078)
        
        # Assigning a Call to a Name (line 500):
        
        # Assigning a Call to a Name (line 500):
        
        # Call to create_blank_line(...): (line 500)
        # Processing the call keyword arguments (line 500)
        kwargs_24081 = {}
        # Getting the type of 'stypy_functions_copy' (line 500)
        stypy_functions_copy_24079 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 500, 25), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 500)
        create_blank_line_24080 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 500, 25), stypy_functions_copy_24079, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 500)
        create_blank_line_call_result_24082 = invoke(stypy.reporting.localization.Localization(__file__, 500, 25), create_blank_line_24080, *[], **kwargs_24081)
        
        # Assigning a type to the variable 'end_if_comment' (line 500)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 500, 8), 'end_if_comment', create_blank_line_call_result_24082)
        
        # Call to flatten_lists(...): (line 502)
        # Processing the call arguments (line 502)
        # Getting the type of 'begin_if_comment' (line 502)
        begin_if_comment_24085 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 50), 'begin_if_comment', False)
        # Getting the type of 'condition_stmt' (line 503)
        condition_stmt_24086 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 503, 45), 'condition_stmt', False)
        # Getting the type of 'if_stmt' (line 504)
        if_stmt_24087 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 504, 45), 'if_stmt', False)
        # Getting the type of 'end_if_comment' (line 505)
        end_if_comment_24088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 505, 45), 'end_if_comment', False)
        # Processing the call keyword arguments (line 502)
        kwargs_24089 = {}
        # Getting the type of 'stypy_functions_copy' (line 502)
        stypy_functions_copy_24083 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 502, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 502)
        flatten_lists_24084 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 502, 15), stypy_functions_copy_24083, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 502)
        flatten_lists_call_result_24090 = invoke(stypy.reporting.localization.Localization(__file__, 502, 15), flatten_lists_24084, *[begin_if_comment_24085, condition_stmt_24086, if_stmt_24087, end_if_comment_24088], **kwargs_24089)
        
        # Assigning a type to the variable 'stypy_return_type' (line 502)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 502, 8), 'stypy_return_type', flatten_lists_call_result_24090)
        
        # ################# End of 'visit_If(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_If' in the type store
        # Getting the type of 'stypy_return_type' (line 300)
        stypy_return_type_24091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 300, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_24091)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_If'
        return stypy_return_type_24091


    @norecursion
    def visit_For(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_For'
        module_type_store = module_type_store.open_function_context('visit_For', 509, 4, False)
        # Assigning a type to the variable 'self' (line 510)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 510, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_For')
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_For.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_For', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_For', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_For(...)' code ##################

        
        # Assigning a List to a Name (line 512):
        
        # Assigning a List to a Name (line 512):
        
        # Obtaining an instance of the builtin type 'list' (line 512)
        list_24092 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 512, 24), 'list')
        # Adding type elements to the builtin type 'list' instance (line 512)
        
        # Assigning a type to the variable 'for_stmt_body' (line 512)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 512, 8), 'for_stmt_body', list_24092)
        
        # Assigning a List to a Name (line 513):
        
        # Assigning a List to a Name (line 513):
        
        # Obtaining an instance of the builtin type 'list' (line 513)
        list_24093 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 513, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 513)
        
        # Assigning a type to the variable 'for_stmt_orelse' (line 513)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 513, 8), 'for_stmt_orelse', list_24093)
        
        # Assigning a Call to a Name (line 515):
        
        # Assigning a Call to a Name (line 515):
        
        # Call to create_blank_line(...): (line 515)
        # Processing the call keyword arguments (line 515)
        kwargs_24096 = {}
        # Getting the type of 'stypy_functions_copy' (line 515)
        stypy_functions_copy_24094 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 515, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 515)
        create_blank_line_24095 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 515, 28), stypy_functions_copy_24094, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 515)
        create_blank_line_call_result_24097 = invoke(stypy.reporting.localization.Localization(__file__, 515, 28), create_blank_line_24095, *[], **kwargs_24096)
        
        # Assigning a type to the variable 'begin_for_comment' (line 515)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 515, 8), 'begin_for_comment', create_blank_line_call_result_24097)
        
        # Assigning a Call to a Tuple (line 518):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 518)
        # Processing the call arguments (line 518)
        # Getting the type of 'node' (line 518)
        node_24100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 46), 'node', False)
        # Obtaining the member 'iter' of a type (line 518)
        iter_24101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 46), node_24100, 'iter')
        # Getting the type of 'context' (line 518)
        context_24102 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 57), 'context', False)
        # Processing the call keyword arguments (line 518)
        kwargs_24103 = {}
        # Getting the type of 'self' (line 518)
        self_24098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 35), 'self', False)
        # Obtaining the member 'visit' of a type (line 518)
        visit_24099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 518, 35), self_24098, 'visit')
        # Calling visit(args, kwargs) (line 518)
        visit_call_result_24104 = invoke(stypy.reporting.localization.Localization(__file__, 518, 35), visit_24099, *[iter_24101, context_24102], **kwargs_24103)
        
        # Assigning a type to the variable 'call_assignment_22315' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_22315', visit_call_result_24104)
        
        # Assigning a Call to a Name (line 518):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22315' (line 518)
        call_assignment_22315_24105 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_22315', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24106 = stypy_get_value_from_tuple(call_assignment_22315_24105, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22316' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_22316', stypy_get_value_from_tuple_call_result_24106)
        
        # Assigning a Name to a Name (line 518):
        # Getting the type of 'call_assignment_22316' (line 518)
        call_assignment_22316_24107 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_22316')
        # Assigning a type to the variable 'iter_stmt' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'iter_stmt', call_assignment_22316_24107)
        
        # Assigning a Call to a Name (line 518):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22315' (line 518)
        call_assignment_22315_24108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_22315', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24109 = stypy_get_value_from_tuple(call_assignment_22315_24108, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22317' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_22317', stypy_get_value_from_tuple_call_result_24109)
        
        # Assigning a Name to a Name (line 518):
        # Getting the type of 'call_assignment_22317' (line 518)
        call_assignment_22317_24110 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 518, 8), 'call_assignment_22317')
        # Assigning a type to the variable 'for_stmt_test' (line 518)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 518, 19), 'for_stmt_test', call_assignment_22317_24110)
        
        # Assigning a Call to a Name (line 521):
        
        # Assigning a Call to a Name (line 521):
        
        # Call to create_src_comment(...): (line 521)
        # Processing the call arguments (line 521)
        str_24113 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 521, 68), 'str', 'Testing the type of a for loop iterable')
        # Getting the type of 'node' (line 521)
        node_24114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 111), 'node', False)
        # Obtaining the member 'lineno' of a type (line 521)
        lineno_24115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 111), node_24114, 'lineno')
        # Processing the call keyword arguments (line 521)
        kwargs_24116 = {}
        # Getting the type of 'stypy_functions_copy' (line 521)
        stypy_functions_copy_24111 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 521, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 521)
        create_src_comment_24112 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 521, 28), stypy_functions_copy_24111, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 521)
        create_src_comment_call_result_24117 = invoke(stypy.reporting.localization.Localization(__file__, 521, 28), create_src_comment_24112, *[str_24113, lineno_24115], **kwargs_24116)
        
        # Assigning a type to the variable 'condition_comment' (line 521)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 521, 8), 'condition_comment', create_src_comment_call_result_24117)
        
        # Assigning a Call to a Name (line 522):
        
        # Assigning a Call to a Name (line 522):
        
        # Call to create_Name(...): (line 522)
        # Processing the call arguments (line 522)
        str_24120 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 522, 57), 'str', 'is_suitable_for_loop_condition')
        # Processing the call keyword arguments (line 522)
        kwargs_24121 = {}
        # Getting the type of 'core_language_copy' (line 522)
        core_language_copy_24118 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 522, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 522)
        create_Name_24119 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 522, 26), core_language_copy_24118, 'create_Name')
        # Calling create_Name(args, kwargs) (line 522)
        create_Name_call_result_24122 = invoke(stypy.reporting.localization.Localization(__file__, 522, 26), create_Name_24119, *[str_24120], **kwargs_24121)
        
        # Assigning a type to the variable 'loop_test_fname' (line 522)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 522, 8), 'loop_test_fname', create_Name_call_result_24122)
        
        # Assigning a Call to a Name (line 523):
        
        # Assigning a Call to a Name (line 523):
        
        # Call to create_localization(...): (line 523)
        # Processing the call arguments (line 523)
        # Getting the type of 'node' (line 523)
        node_24125 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 523)
        lineno_24126 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 64), node_24125, 'lineno')
        # Getting the type of 'node' (line 523)
        node_24127 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 523)
        col_offset_24128 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 77), node_24127, 'col_offset')
        # Processing the call keyword arguments (line 523)
        kwargs_24129 = {}
        # Getting the type of 'stypy_functions_copy' (line 523)
        stypy_functions_copy_24123 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 523, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 523)
        create_localization_24124 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 523, 23), stypy_functions_copy_24123, 'create_localization')
        # Calling create_localization(args, kwargs) (line 523)
        create_localization_call_result_24130 = invoke(stypy.reporting.localization.Localization(__file__, 523, 23), create_localization_24124, *[lineno_24126, col_offset_24128], **kwargs_24129)
        
        # Assigning a type to the variable 'localization' (line 523)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 523, 8), 'localization', create_localization_call_result_24130)
        
        # Assigning a Call to a Name (line 524):
        
        # Assigning a Call to a Name (line 524):
        
        # Call to create_call_expression(...): (line 524)
        # Processing the call arguments (line 524)
        # Getting the type of 'loop_test_fname' (line 524)
        loop_test_fname_24133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 63), 'loop_test_fname', False)
        
        # Obtaining an instance of the builtin type 'list' (line 524)
        list_24134 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 524, 80), 'list')
        # Adding type elements to the builtin type 'list' instance (line 524)
        # Adding element type (line 524)
        # Getting the type of 'localization' (line 524)
        localization_24135 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 81), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 80), list_24134, localization_24135)
        # Adding element type (line 524)
        # Getting the type of 'for_stmt_test' (line 524)
        for_stmt_test_24136 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 95), 'for_stmt_test', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 524, 80), list_24134, for_stmt_test_24136)
        
        # Processing the call keyword arguments (line 524)
        kwargs_24137 = {}
        # Getting the type of 'functions_copy' (line 524)
        functions_copy_24131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 524, 25), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 524)
        create_call_expression_24132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 524, 25), functions_copy_24131, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 524)
        create_call_expression_call_result_24138 = invoke(stypy.reporting.localization.Localization(__file__, 524, 25), create_call_expression_24132, *[loop_test_fname_24133, list_24134], **kwargs_24137)
        
        # Assigning a type to the variable 'condition_call' (line 524)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 524, 8), 'condition_call', create_call_expression_call_result_24138)
        
        # Assigning a Call to a Name (line 527):
        
        # Assigning a Call to a Name (line 527):
        
        # Call to create_src_comment(...): (line 527)
        # Processing the call arguments (line 527)
        str_24141 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 527, 69), 'str', 'Getting the type of the for loop variable')
        # Getting the type of 'node' (line 528)
        node_24142 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 528, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 528)
        lineno_24143 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 528, 64), node_24142, 'lineno')
        # Processing the call keyword arguments (line 527)
        kwargs_24144 = {}
        # Getting the type of 'stypy_functions_copy' (line 527)
        stypy_functions_copy_24139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 527, 29), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 527)
        create_src_comment_24140 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 527, 29), stypy_functions_copy_24139, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 527)
        create_src_comment_call_result_24145 = invoke(stypy.reporting.localization.Localization(__file__, 527, 29), create_src_comment_24140, *[str_24141, lineno_24143], **kwargs_24144)
        
        # Assigning a type to the variable 'get_target_comment' (line 527)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 527, 8), 'get_target_comment', create_src_comment_call_result_24145)
        
        # Call to append(...): (line 529)
        # Processing the call arguments (line 529)
        # Getting the type of 'get_target_comment' (line 529)
        get_target_comment_24148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 29), 'get_target_comment', False)
        # Processing the call keyword arguments (line 529)
        kwargs_24149 = {}
        # Getting the type of 'for_stmt_body' (line 529)
        for_stmt_body_24146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 529, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 529)
        append_24147 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 529, 8), for_stmt_body_24146, 'append')
        # Calling append(args, kwargs) (line 529)
        append_call_result_24150 = invoke(stypy.reporting.localization.Localization(__file__, 529, 8), append_24147, *[get_target_comment_24148], **kwargs_24149)
        
        
        # Assigning a Call to a Name (line 530):
        
        # Assigning a Call to a Name (line 530):
        
        # Call to create_Name(...): (line 530)
        # Processing the call arguments (line 530)
        str_24153 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 530, 59), 'str', 'get_type_of_for_loop_variable')
        # Processing the call keyword arguments (line 530)
        kwargs_24154 = {}
        # Getting the type of 'core_language_copy' (line 530)
        core_language_copy_24151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 530, 28), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 530)
        create_Name_24152 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 530, 28), core_language_copy_24151, 'create_Name')
        # Calling create_Name(args, kwargs) (line 530)
        create_Name_call_result_24155 = invoke(stypy.reporting.localization.Localization(__file__, 530, 28), create_Name_24152, *[str_24153], **kwargs_24154)
        
        # Assigning a type to the variable 'loop_target_fname' (line 530)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 530, 8), 'loop_target_fname', create_Name_call_result_24155)
        
        # Assigning a Call to a Name (line 531):
        
        # Assigning a Call to a Name (line 531):
        
        # Call to create_call(...): (line 531)
        # Processing the call arguments (line 531)
        # Getting the type of 'loop_target_fname' (line 531)
        loop_target_fname_24158 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 56), 'loop_target_fname', False)
        
        # Obtaining an instance of the builtin type 'list' (line 531)
        list_24159 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 531, 75), 'list')
        # Adding type elements to the builtin type 'list' instance (line 531)
        # Adding element type (line 531)
        # Getting the type of 'localization' (line 531)
        localization_24160 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 76), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 75), list_24159, localization_24160)
        # Adding element type (line 531)
        # Getting the type of 'for_stmt_test' (line 531)
        for_stmt_test_24161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 90), 'for_stmt_test', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 531, 75), list_24159, for_stmt_test_24161)
        
        # Processing the call keyword arguments (line 531)
        kwargs_24162 = {}
        # Getting the type of 'functions_copy' (line 531)
        functions_copy_24156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 531, 29), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 531)
        create_call_24157 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 531, 29), functions_copy_24156, 'create_call')
        # Calling create_call(args, kwargs) (line 531)
        create_call_call_result_24163 = invoke(stypy.reporting.localization.Localization(__file__, 531, 29), create_call_24157, *[loop_target_fname_24158, list_24159], **kwargs_24162)
        
        # Assigning a type to the variable 'target_assign_call' (line 531)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 531, 8), 'target_assign_call', create_call_call_result_24163)
        
        # Assigning a Call to a Tuple (line 532):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 532)
        # Processing the call arguments (line 532)
        # Getting the type of 'target_assign_call' (line 532)
        target_assign_call_24166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 83), 'target_assign_call', False)
        # Getting the type of 'node' (line 532)
        node_24167 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 532)
        lineno_24168 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 103), node_24167, 'lineno')
        # Getting the type of 'node' (line 533)
        node_24169 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 533, 78), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 533)
        col_offset_24170 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 533, 78), node_24169, 'col_offset')
        # Processing the call keyword arguments (line 532)
        kwargs_24171 = {}
        # Getting the type of 'stypy_functions_copy' (line 532)
        stypy_functions_copy_24164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 43), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 532)
        create_temp_Assign_24165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 532, 43), stypy_functions_copy_24164, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 532)
        create_temp_Assign_call_result_24172 = invoke(stypy.reporting.localization.Localization(__file__, 532, 43), create_temp_Assign_24165, *[target_assign_call_24166, lineno_24168, col_offset_24170], **kwargs_24171)
        
        # Assigning a type to the variable 'call_assignment_22318' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_22318', create_temp_Assign_call_result_24172)
        
        # Assigning a Call to a Name (line 532):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22318' (line 532)
        call_assignment_22318_24173 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_22318', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24174 = stypy_get_value_from_tuple(call_assignment_22318_24173, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22319' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_22319', stypy_get_value_from_tuple_call_result_24174)
        
        # Assigning a Name to a Name (line 532):
        # Getting the type of 'call_assignment_22319' (line 532)
        call_assignment_22319_24175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_22319')
        # Assigning a type to the variable 'target_assign' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'target_assign', call_assignment_22319_24175)
        
        # Assigning a Call to a Name (line 532):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22318' (line 532)
        call_assignment_22318_24176 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_22318', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24177 = stypy_get_value_from_tuple(call_assignment_22318_24176, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22320' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_22320', stypy_get_value_from_tuple_call_result_24177)
        
        # Assigning a Name to a Name (line 532):
        # Getting the type of 'call_assignment_22320' (line 532)
        call_assignment_22320_24178 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 532, 8), 'call_assignment_22320')
        # Assigning a type to the variable 'target_assign_var' (line 532)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 532, 23), 'target_assign_var', call_assignment_22320_24178)
        
        # Call to append(...): (line 534)
        # Processing the call arguments (line 534)
        # Getting the type of 'target_assign' (line 534)
        target_assign_24181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 29), 'target_assign', False)
        # Processing the call keyword arguments (line 534)
        kwargs_24182 = {}
        # Getting the type of 'for_stmt_body' (line 534)
        for_stmt_body_24179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 534, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 534)
        append_24180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 534, 8), for_stmt_body_24179, 'append')
        # Calling append(args, kwargs) (line 534)
        append_call_result_24183 = invoke(stypy.reporting.localization.Localization(__file__, 534, 8), append_24180, *[target_assign_24181], **kwargs_24182)
        
        
        # Call to isinstance(...): (line 536)
        # Processing the call arguments (line 536)
        # Getting the type of 'node' (line 536)
        node_24185 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 22), 'node', False)
        # Obtaining the member 'target' of a type (line 536)
        target_24186 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 22), node_24185, 'target')
        # Getting the type of 'ast' (line 536)
        ast_24187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 35), 'ast', False)
        # Obtaining the member 'Tuple' of a type (line 536)
        Tuple_24188 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 536, 35), ast_24187, 'Tuple')
        # Processing the call keyword arguments (line 536)
        kwargs_24189 = {}
        # Getting the type of 'isinstance' (line 536)
        isinstance_24184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 536, 11), 'isinstance', False)
        # Calling isinstance(args, kwargs) (line 536)
        isinstance_call_result_24190 = invoke(stypy.reporting.localization.Localization(__file__, 536, 11), isinstance_24184, *[target_24186, Tuple_24188], **kwargs_24189)
        
        # Testing if the type of an if condition is none (line 536)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 536, 8), isinstance_call_result_24190):
            
            # Assigning a Call to a Name (line 545):
            
            # Assigning a Call to a Name (line 545):
            
            # Call to create_set_type_of(...): (line 545)
            # Processing the call arguments (line 545)
            # Getting the type of 'node' (line 545)
            node_24228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 73), 'node', False)
            # Obtaining the member 'target' of a type (line 545)
            target_24229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), node_24228, 'target')
            # Obtaining the member 'id' of a type (line 545)
            id_24230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), target_24229, 'id')
            # Getting the type of 'target_assign_var' (line 545)
            target_assign_var_24231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 89), 'target_assign_var', False)
            # Getting the type of 'node' (line 545)
            node_24232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 545)
            lineno_24233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 108), node_24232, 'lineno')
            # Getting the type of 'node' (line 546)
            node_24234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 68), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 546)
            col_offset_24235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 68), node_24234, 'col_offset')
            # Processing the call keyword arguments (line 545)
            kwargs_24236 = {}
            # Getting the type of 'stypy_functions_copy' (line 545)
            stypy_functions_copy_24226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 33), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 545)
            create_set_type_of_24227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 33), stypy_functions_copy_24226, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 545)
            create_set_type_of_call_result_24237 = invoke(stypy.reporting.localization.Localization(__file__, 545, 33), create_set_type_of_24227, *[id_24230, target_assign_var_24231, lineno_24233, col_offset_24235], **kwargs_24236)
            
            # Assigning a type to the variable 'assign_target_type' (line 545)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'assign_target_type', create_set_type_of_call_result_24237)
        else:
            
            # Testing the type of an if condition (line 536)
            if_condition_24191 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 536, 8), isinstance_call_result_24190)
            # Assigning a type to the variable 'if_condition_24191' (line 536)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 536, 8), 'if_condition_24191', if_condition_24191)
            # SSA begins for if statement (line 536)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 537):
            
            # Assigning a Call to a Name (line 537):
            
            # Call to create_attribute(...): (line 537)
            # Processing the call arguments (line 537)
            # Getting the type of 'target_assign_var' (line 537)
            target_assign_var_24194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 68), 'target_assign_var', False)
            # Obtaining the member 'id' of a type (line 537)
            id_24195 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 68), target_assign_var_24194, 'id')
            str_24196 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 537, 90), 'str', 'get_elements_type')
            # Processing the call keyword arguments (line 537)
            kwargs_24197 = {}
            # Getting the type of 'core_language_copy' (line 537)
            core_language_copy_24192 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 537, 32), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 537)
            create_attribute_24193 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 537, 32), core_language_copy_24192, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 537)
            create_attribute_call_result_24198 = invoke(stypy.reporting.localization.Localization(__file__, 537, 32), create_attribute_24193, *[id_24195, str_24196], **kwargs_24197)
            
            # Assigning a type to the variable 'get_elements_call' (line 537)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 537, 12), 'get_elements_call', create_attribute_call_result_24198)
            
            # Assigning a List to a Name (line 538):
            
            # Assigning a List to a Name (line 538):
            
            # Obtaining an instance of the builtin type 'list' (line 538)
            list_24199 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 538, 33), 'list')
            # Adding type elements to the builtin type 'list' instance (line 538)
            
            # Assigning a type to the variable 'assign_target_type' (line 538)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 538, 12), 'assign_target_type', list_24199)
            
            # Getting the type of 'node' (line 539)
            node_24200 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 539, 23), 'node')
            # Obtaining the member 'target' of a type (line 539)
            target_24201 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 23), node_24200, 'target')
            # Obtaining the member 'elts' of a type (line 539)
            elts_24202 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 539, 23), target_24201, 'elts')
            # Assigning a type to the variable 'elts_24202' (line 539)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'elts_24202', elts_24202)
            # Testing if the for loop is going to be iterated (line 539)
            # Testing the type of a for loop iterable (line 539)
            is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 539, 12), elts_24202)

            if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 539, 12), elts_24202):
                # Getting the type of the for loop variable (line 539)
                for_loop_var_24203 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 539, 12), elts_24202)
                # Assigning a type to the variable 'elt' (line 539)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 539, 12), 'elt', for_loop_var_24203)
                # SSA begins for a for statement (line 539)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
                
                # Assigning a Call to a Name (line 540):
                
                # Assigning a Call to a Name (line 540):
                
                # Call to create_call(...): (line 540)
                # Processing the call arguments (line 540)
                # Getting the type of 'get_elements_call' (line 540)
                get_elements_call_24206 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 62), 'get_elements_call', False)
                
                # Obtaining an instance of the builtin type 'list' (line 540)
                list_24207 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 540, 81), 'list')
                # Adding type elements to the builtin type 'list' instance (line 540)
                
                # Processing the call keyword arguments (line 540)
                kwargs_24208 = {}
                # Getting the type of 'functions_copy' (line 540)
                functions_copy_24204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 540, 35), 'functions_copy', False)
                # Obtaining the member 'create_call' of a type (line 540)
                create_call_24205 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 540, 35), functions_copy_24204, 'create_call')
                # Calling create_call(args, kwargs) (line 540)
                create_call_call_result_24209 = invoke(stypy.reporting.localization.Localization(__file__, 540, 35), create_call_24205, *[get_elements_call_24206, list_24207], **kwargs_24208)
                
                # Assigning a type to the variable 'call_to_elements' (line 540)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 540, 16), 'call_to_elements', create_call_call_result_24209)
                
                # Assigning a Call to a Name (line 541):
                
                # Assigning a Call to a Name (line 541):
                
                # Call to create_set_type_of(...): (line 541)
                # Processing the call arguments (line 541)
                # Getting the type of 'elt' (line 541)
                elt_24212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 67), 'elt', False)
                # Obtaining the member 'id' of a type (line 541)
                id_24213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 67), elt_24212, 'id')
                # Getting the type of 'call_to_elements' (line 541)
                call_to_elements_24214 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 75), 'call_to_elements', False)
                # Getting the type of 'node' (line 541)
                node_24215 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 93), 'node', False)
                # Obtaining the member 'lineno' of a type (line 541)
                lineno_24216 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 93), node_24215, 'lineno')
                # Getting the type of 'node' (line 542)
                node_24217 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 542, 62), 'node', False)
                # Obtaining the member 'col_offset' of a type (line 542)
                col_offset_24218 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 542, 62), node_24217, 'col_offset')
                # Processing the call keyword arguments (line 541)
                kwargs_24219 = {}
                # Getting the type of 'stypy_functions_copy' (line 541)
                stypy_functions_copy_24210 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 541, 27), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of' of a type (line 541)
                create_set_type_of_24211 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 541, 27), stypy_functions_copy_24210, 'create_set_type_of')
                # Calling create_set_type_of(args, kwargs) (line 541)
                create_set_type_of_call_result_24220 = invoke(stypy.reporting.localization.Localization(__file__, 541, 27), create_set_type_of_24211, *[id_24213, call_to_elements_24214, lineno_24216, col_offset_24218], **kwargs_24219)
                
                # Assigning a type to the variable 'type_set' (line 541)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 541, 16), 'type_set', create_set_type_of_call_result_24220)
                
                # Call to append(...): (line 543)
                # Processing the call arguments (line 543)
                # Getting the type of 'type_set' (line 543)
                type_set_24223 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 42), 'type_set', False)
                # Processing the call keyword arguments (line 543)
                kwargs_24224 = {}
                # Getting the type of 'assign_target_type' (line 543)
                assign_target_type_24221 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 543, 16), 'assign_target_type', False)
                # Obtaining the member 'append' of a type (line 543)
                append_24222 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 543, 16), assign_target_type_24221, 'append')
                # Calling append(args, kwargs) (line 543)
                append_call_result_24225 = invoke(stypy.reporting.localization.Localization(__file__, 543, 16), append_24222, *[type_set_24223], **kwargs_24224)
                
                # SSA join for a for statement
                module_type_store = module_type_store.join_ssa_context()

            
            # SSA branch for the else part of an if statement (line 536)
            module_type_store.open_ssa_branch('else')
            
            # Assigning a Call to a Name (line 545):
            
            # Assigning a Call to a Name (line 545):
            
            # Call to create_set_type_of(...): (line 545)
            # Processing the call arguments (line 545)
            # Getting the type of 'node' (line 545)
            node_24228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 73), 'node', False)
            # Obtaining the member 'target' of a type (line 545)
            target_24229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), node_24228, 'target')
            # Obtaining the member 'id' of a type (line 545)
            id_24230 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 73), target_24229, 'id')
            # Getting the type of 'target_assign_var' (line 545)
            target_assign_var_24231 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 89), 'target_assign_var', False)
            # Getting the type of 'node' (line 545)
            node_24232 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 108), 'node', False)
            # Obtaining the member 'lineno' of a type (line 545)
            lineno_24233 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 108), node_24232, 'lineno')
            # Getting the type of 'node' (line 546)
            node_24234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 546, 68), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 546)
            col_offset_24235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 546, 68), node_24234, 'col_offset')
            # Processing the call keyword arguments (line 545)
            kwargs_24236 = {}
            # Getting the type of 'stypy_functions_copy' (line 545)
            stypy_functions_copy_24226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 545, 33), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 545)
            create_set_type_of_24227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 545, 33), stypy_functions_copy_24226, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 545)
            create_set_type_of_call_result_24237 = invoke(stypy.reporting.localization.Localization(__file__, 545, 33), create_set_type_of_24227, *[id_24230, target_assign_var_24231, lineno_24233, col_offset_24235], **kwargs_24236)
            
            # Assigning a type to the variable 'assign_target_type' (line 545)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 545, 12), 'assign_target_type', create_set_type_of_call_result_24237)
            # SSA join for if statement (line 536)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 548)
        # Processing the call arguments (line 548)
        # Getting the type of 'assign_target_type' (line 548)
        assign_target_type_24240 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 29), 'assign_target_type', False)
        # Processing the call keyword arguments (line 548)
        kwargs_24241 = {}
        # Getting the type of 'for_stmt_body' (line 548)
        for_stmt_body_24238 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 548, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 548)
        append_24239 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 548, 8), for_stmt_body_24238, 'append')
        # Calling append(args, kwargs) (line 548)
        append_call_result_24242 = invoke(stypy.reporting.localization.Localization(__file__, 548, 8), append_24239, *[assign_target_type_24240], **kwargs_24241)
        
        
        # Call to append(...): (line 551)
        # Processing the call arguments (line 551)
        
        # Call to create_src_comment(...): (line 551)
        # Processing the call arguments (line 551)
        str_24247 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 551, 69), 'str', 'SSA begins for a for statement')
        # Getting the type of 'node' (line 551)
        node_24248 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 551)
        lineno_24249 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 103), node_24248, 'lineno')
        # Processing the call keyword arguments (line 551)
        kwargs_24250 = {}
        # Getting the type of 'stypy_functions_copy' (line 551)
        stypy_functions_copy_24245 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 29), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 551)
        create_src_comment_24246 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 29), stypy_functions_copy_24245, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 551)
        create_src_comment_call_result_24251 = invoke(stypy.reporting.localization.Localization(__file__, 551, 29), create_src_comment_24246, *[str_24247, lineno_24249], **kwargs_24250)
        
        # Processing the call keyword arguments (line 551)
        kwargs_24252 = {}
        # Getting the type of 'for_stmt_body' (line 551)
        for_stmt_body_24243 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 551, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 551)
        append_24244 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 551, 8), for_stmt_body_24243, 'append')
        # Calling append(args, kwargs) (line 551)
        append_call_result_24253 = invoke(stypy.reporting.localization.Localization(__file__, 551, 8), append_24244, *[create_src_comment_call_result_24251], **kwargs_24252)
        
        
        # Assigning a Call to a Tuple (line 552):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 552)
        # Processing the call keyword arguments (line 552)
        kwargs_24256 = {}
        # Getting the type of 'stypy_functions_copy' (line 552)
        stypy_functions_copy_24254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 552)
        create_clone_type_store_24255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 552, 39), stypy_functions_copy_24254, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 552)
        create_clone_type_store_call_result_24257 = invoke(stypy.reporting.localization.Localization(__file__, 552, 39), create_clone_type_store_24255, *[], **kwargs_24256)
        
        # Assigning a type to the variable 'call_assignment_22321' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_22321', create_clone_type_store_call_result_24257)
        
        # Assigning a Call to a Name (line 552):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22321' (line 552)
        call_assignment_22321_24258 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_22321', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24259 = stypy_get_value_from_tuple(call_assignment_22321_24258, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22322' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_22322', stypy_get_value_from_tuple_call_result_24259)
        
        # Assigning a Name to a Name (line 552):
        # Getting the type of 'call_assignment_22322' (line 552)
        call_assignment_22322_24260 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_22322')
        # Assigning a type to the variable 'clone_stmt1' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'clone_stmt1', call_assignment_22322_24260)
        
        # Assigning a Call to a Name (line 552):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22321' (line 552)
        call_assignment_22321_24261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_22321', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24262 = stypy_get_value_from_tuple(call_assignment_22321_24261, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22323' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_22323', stypy_get_value_from_tuple_call_result_24262)
        
        # Assigning a Name to a Name (line 552):
        # Getting the type of 'call_assignment_22323' (line 552)
        call_assignment_22323_24263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 552, 8), 'call_assignment_22323')
        # Assigning a type to the variable 'type_store_var1' (line 552)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 552, 21), 'type_store_var1', call_assignment_22323_24263)
        
        # Call to append(...): (line 553)
        # Processing the call arguments (line 553)
        # Getting the type of 'clone_stmt1' (line 553)
        clone_stmt1_24266 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 29), 'clone_stmt1', False)
        # Processing the call keyword arguments (line 553)
        kwargs_24267 = {}
        # Getting the type of 'for_stmt_body' (line 553)
        for_stmt_body_24264 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 553, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 553)
        append_24265 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 553, 8), for_stmt_body_24264, 'append')
        # Calling append(args, kwargs) (line 553)
        append_call_result_24268 = invoke(stypy.reporting.localization.Localization(__file__, 553, 8), append_24265, *[clone_stmt1_24266], **kwargs_24267)
        
        
        # Call to extend(...): (line 556)
        # Processing the call arguments (line 556)
        
        # Call to __visit_instruction_body(...): (line 556)
        # Processing the call arguments (line 556)
        # Getting the type of 'node' (line 556)
        node_24273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 59), 'node', False)
        # Obtaining the member 'body' of a type (line 556)
        body_24274 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 59), node_24273, 'body')
        # Getting the type of 'context' (line 556)
        context_24275 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 70), 'context', False)
        # Processing the call keyword arguments (line 556)
        kwargs_24276 = {}
        # Getting the type of 'self' (line 556)
        self_24271 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 29), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 556)
        visit_instruction_body_24272 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 29), self_24271, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 556)
        visit_instruction_body_call_result_24277 = invoke(stypy.reporting.localization.Localization(__file__, 556, 29), visit_instruction_body_24272, *[body_24274, context_24275], **kwargs_24276)
        
        # Processing the call keyword arguments (line 556)
        kwargs_24278 = {}
        # Getting the type of 'for_stmt_body' (line 556)
        for_stmt_body_24269 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 556, 8), 'for_stmt_body', False)
        # Obtaining the member 'extend' of a type (line 556)
        extend_24270 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 556, 8), for_stmt_body_24269, 'extend')
        # Calling extend(args, kwargs) (line 556)
        extend_call_result_24279 = invoke(stypy.reporting.localization.Localization(__file__, 556, 8), extend_24270, *[visit_instruction_body_call_result_24277], **kwargs_24278)
        
        
        # Call to append(...): (line 558)
        # Processing the call arguments (line 558)
        
        # Call to create_src_comment(...): (line 559)
        # Processing the call arguments (line 559)
        str_24284 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 559, 52), 'str', 'SSA branch for the else part of a for statement')
        # Getting the type of 'node' (line 559)
        node_24285 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 559)
        lineno_24286 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 103), node_24285, 'lineno')
        # Processing the call keyword arguments (line 559)
        kwargs_24287 = {}
        # Getting the type of 'stypy_functions_copy' (line 559)
        stypy_functions_copy_24282 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 559, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 559)
        create_src_comment_24283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 559, 12), stypy_functions_copy_24282, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 559)
        create_src_comment_call_result_24288 = invoke(stypy.reporting.localization.Localization(__file__, 559, 12), create_src_comment_24283, *[str_24284, lineno_24286], **kwargs_24287)
        
        # Processing the call keyword arguments (line 558)
        kwargs_24289 = {}
        # Getting the type of 'for_stmt_body' (line 558)
        for_stmt_body_24280 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 558, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 558)
        append_24281 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 558, 8), for_stmt_body_24280, 'append')
        # Calling append(args, kwargs) (line 558)
        append_call_result_24290 = invoke(stypy.reporting.localization.Localization(__file__, 558, 8), append_24281, *[create_src_comment_call_result_24288], **kwargs_24289)
        
        
        # Assigning a Call to a Tuple (line 560):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 560)
        # Processing the call keyword arguments (line 560)
        kwargs_24293 = {}
        # Getting the type of 'stypy_functions_copy' (line 560)
        stypy_functions_copy_24291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 560)
        create_clone_type_store_24292 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 560, 39), stypy_functions_copy_24291, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 560)
        create_clone_type_store_call_result_24294 = invoke(stypy.reporting.localization.Localization(__file__, 560, 39), create_clone_type_store_24292, *[], **kwargs_24293)
        
        # Assigning a type to the variable 'call_assignment_22324' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_22324', create_clone_type_store_call_result_24294)
        
        # Assigning a Call to a Name (line 560):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22324' (line 560)
        call_assignment_22324_24295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_22324', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24296 = stypy_get_value_from_tuple(call_assignment_22324_24295, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22325' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_22325', stypy_get_value_from_tuple_call_result_24296)
        
        # Assigning a Name to a Name (line 560):
        # Getting the type of 'call_assignment_22325' (line 560)
        call_assignment_22325_24297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_22325')
        # Assigning a type to the variable 'clone_stmt2' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'clone_stmt2', call_assignment_22325_24297)
        
        # Assigning a Call to a Name (line 560):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22324' (line 560)
        call_assignment_22324_24298 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_22324', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24299 = stypy_get_value_from_tuple(call_assignment_22324_24298, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22326' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_22326', stypy_get_value_from_tuple_call_result_24299)
        
        # Assigning a Name to a Name (line 560):
        # Getting the type of 'call_assignment_22326' (line 560)
        call_assignment_22326_24300 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 560, 8), 'call_assignment_22326')
        # Assigning a type to the variable 'type_store_var2' (line 560)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 560, 21), 'type_store_var2', call_assignment_22326_24300)
        
        # Call to append(...): (line 561)
        # Processing the call arguments (line 561)
        # Getting the type of 'clone_stmt2' (line 561)
        clone_stmt2_24303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 29), 'clone_stmt2', False)
        # Processing the call keyword arguments (line 561)
        kwargs_24304 = {}
        # Getting the type of 'for_stmt_body' (line 561)
        for_stmt_body_24301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 561, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 561)
        append_24302 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 561, 8), for_stmt_body_24301, 'append')
        # Calling append(args, kwargs) (line 561)
        append_call_result_24305 = invoke(stypy.reporting.localization.Localization(__file__, 561, 8), append_24302, *[clone_stmt2_24303], **kwargs_24304)
        
        
        # Assigning a Call to a Name (line 564):
        
        # Assigning a Call to a Name (line 564):
        
        # Call to create_set_type_store(...): (line 564)
        # Processing the call arguments (line 564)
        # Getting the type of 'type_store_var1' (line 564)
        type_store_var1_24308 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 69), 'type_store_var1', False)
        # Processing the call keyword arguments (line 564)
        kwargs_24309 = {}
        # Getting the type of 'stypy_functions_copy' (line 564)
        stypy_functions_copy_24306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 564, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 564)
        create_set_type_store_24307 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 564, 26), stypy_functions_copy_24306, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 564)
        create_set_type_store_call_result_24310 = invoke(stypy.reporting.localization.Localization(__file__, 564, 26), create_set_type_store_24307, *[type_store_var1_24308], **kwargs_24309)
        
        # Assigning a type to the variable 'set_type_store1' (line 564)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 564, 8), 'set_type_store1', create_set_type_store_call_result_24310)
        
        # Call to append(...): (line 565)
        # Processing the call arguments (line 565)
        # Getting the type of 'set_type_store1' (line 565)
        set_type_store1_24313 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 29), 'set_type_store1', False)
        # Processing the call keyword arguments (line 565)
        kwargs_24314 = {}
        # Getting the type of 'for_stmt_body' (line 565)
        for_stmt_body_24311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 565, 8), 'for_stmt_body', False)
        # Obtaining the member 'append' of a type (line 565)
        append_24312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 565, 8), for_stmt_body_24311, 'append')
        # Calling append(args, kwargs) (line 565)
        append_call_result_24315 = invoke(stypy.reporting.localization.Localization(__file__, 565, 8), append_24312, *[set_type_store1_24313], **kwargs_24314)
        
        
        # Call to extend(...): (line 567)
        # Processing the call arguments (line 567)
        
        # Call to __visit_instruction_body(...): (line 567)
        # Processing the call arguments (line 567)
        # Getting the type of 'node' (line 567)
        node_24320 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 61), 'node', False)
        # Obtaining the member 'orelse' of a type (line 567)
        orelse_24321 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 61), node_24320, 'orelse')
        # Getting the type of 'context' (line 567)
        context_24322 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 74), 'context', False)
        # Processing the call keyword arguments (line 567)
        kwargs_24323 = {}
        # Getting the type of 'self' (line 567)
        self_24318 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 31), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 567)
        visit_instruction_body_24319 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 31), self_24318, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 567)
        visit_instruction_body_call_result_24324 = invoke(stypy.reporting.localization.Localization(__file__, 567, 31), visit_instruction_body_24319, *[orelse_24321, context_24322], **kwargs_24323)
        
        # Processing the call keyword arguments (line 567)
        kwargs_24325 = {}
        # Getting the type of 'for_stmt_orelse' (line 567)
        for_stmt_orelse_24316 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 567, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'extend' of a type (line 567)
        extend_24317 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 567, 8), for_stmt_orelse_24316, 'extend')
        # Calling extend(args, kwargs) (line 567)
        extend_call_result_24326 = invoke(stypy.reporting.localization.Localization(__file__, 567, 8), extend_24317, *[visit_instruction_body_call_result_24324], **kwargs_24325)
        
        
        # Call to append(...): (line 570)
        # Processing the call arguments (line 570)
        
        # Call to create_src_comment(...): (line 570)
        # Processing the call arguments (line 570)
        str_24331 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 570, 71), 'str', 'SSA join for a for statement')
        # Processing the call keyword arguments (line 570)
        kwargs_24332 = {}
        # Getting the type of 'stypy_functions_copy' (line 570)
        stypy_functions_copy_24329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 570)
        create_src_comment_24330 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 31), stypy_functions_copy_24329, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 570)
        create_src_comment_call_result_24333 = invoke(stypy.reporting.localization.Localization(__file__, 570, 31), create_src_comment_24330, *[str_24331], **kwargs_24332)
        
        # Processing the call keyword arguments (line 570)
        kwargs_24334 = {}
        # Getting the type of 'for_stmt_orelse' (line 570)
        for_stmt_orelse_24327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 570, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 570)
        append_24328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 570, 8), for_stmt_orelse_24327, 'append')
        # Calling append(args, kwargs) (line 570)
        append_call_result_24335 = invoke(stypy.reporting.localization.Localization(__file__, 570, 8), append_24328, *[create_src_comment_call_result_24333], **kwargs_24334)
        
        
        # Assigning a Call to a Tuple (line 571):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 571)
        # Processing the call keyword arguments (line 571)
        kwargs_24338 = {}
        # Getting the type of 'stypy_functions_copy' (line 571)
        stypy_functions_copy_24336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 571)
        create_clone_type_store_24337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 571, 39), stypy_functions_copy_24336, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 571)
        create_clone_type_store_call_result_24339 = invoke(stypy.reporting.localization.Localization(__file__, 571, 39), create_clone_type_store_24337, *[], **kwargs_24338)
        
        # Assigning a type to the variable 'call_assignment_22327' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_22327', create_clone_type_store_call_result_24339)
        
        # Assigning a Call to a Name (line 571):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22327' (line 571)
        call_assignment_22327_24340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_22327', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24341 = stypy_get_value_from_tuple(call_assignment_22327_24340, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22328' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_22328', stypy_get_value_from_tuple_call_result_24341)
        
        # Assigning a Name to a Name (line 571):
        # Getting the type of 'call_assignment_22328' (line 571)
        call_assignment_22328_24342 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_22328')
        # Assigning a type to the variable 'clone_stmt3' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'clone_stmt3', call_assignment_22328_24342)
        
        # Assigning a Call to a Name (line 571):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22327' (line 571)
        call_assignment_22327_24343 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_22327', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24344 = stypy_get_value_from_tuple(call_assignment_22327_24343, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22329' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_22329', stypy_get_value_from_tuple_call_result_24344)
        
        # Assigning a Name to a Name (line 571):
        # Getting the type of 'call_assignment_22329' (line 571)
        call_assignment_22329_24345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 571, 8), 'call_assignment_22329')
        # Assigning a type to the variable 'type_store_var3' (line 571)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 571, 21), 'type_store_var3', call_assignment_22329_24345)
        
        # Call to append(...): (line 572)
        # Processing the call arguments (line 572)
        # Getting the type of 'clone_stmt3' (line 572)
        clone_stmt3_24348 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 31), 'clone_stmt3', False)
        # Processing the call keyword arguments (line 572)
        kwargs_24349 = {}
        # Getting the type of 'for_stmt_orelse' (line 572)
        for_stmt_orelse_24346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 572, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 572)
        append_24347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 572, 8), for_stmt_orelse_24346, 'append')
        # Calling append(args, kwargs) (line 572)
        append_call_result_24350 = invoke(stypy.reporting.localization.Localization(__file__, 572, 8), append_24347, *[clone_stmt3_24348], **kwargs_24349)
        
        
        # Assigning a Call to a Tuple (line 574):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 574)
        # Processing the call arguments (line 574)
        str_24353 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 574, 82), 'str', 'ssa_join_with_else_branch')
        
        # Obtaining an instance of the builtin type 'list' (line 575)
        list_24354 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 575, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 575)
        # Adding element type (line 575)
        # Getting the type of 'type_store_var1' (line 575)
        type_store_var1_24355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 78), 'type_store_var1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 77), list_24354, type_store_var1_24355)
        # Adding element type (line 575)
        # Getting the type of 'type_store_var2' (line 575)
        type_store_var2_24356 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 575, 95), 'type_store_var2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 77), list_24354, type_store_var2_24356)
        # Adding element type (line 575)
        # Getting the type of 'type_store_var3' (line 576)
        type_store_var3_24357 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 576, 78), 'type_store_var3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 575, 77), list_24354, type_store_var3_24357)
        
        # Processing the call keyword arguments (line 574)
        kwargs_24358 = {}
        # Getting the type of 'stypy_functions_copy' (line 574)
        stypy_functions_copy_24351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 574)
        create_join_type_store_24352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 574, 38), stypy_functions_copy_24351, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 574)
        create_join_type_store_call_result_24359 = invoke(stypy.reporting.localization.Localization(__file__, 574, 38), create_join_type_store_24352, *[str_24353, list_24354], **kwargs_24358)
        
        # Assigning a type to the variable 'call_assignment_22330' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_22330', create_join_type_store_call_result_24359)
        
        # Assigning a Call to a Name (line 574):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22330' (line 574)
        call_assignment_22330_24360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_22330', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24361 = stypy_get_value_from_tuple(call_assignment_22330_24360, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22331' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_22331', stypy_get_value_from_tuple_call_result_24361)
        
        # Assigning a Name to a Name (line 574):
        # Getting the type of 'call_assignment_22331' (line 574)
        call_assignment_22331_24362 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_22331')
        # Assigning a type to the variable 'join_stmt' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'join_stmt', call_assignment_22331_24362)
        
        # Assigning a Call to a Name (line 574):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22330' (line 574)
        call_assignment_22330_24363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_22330', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24364 = stypy_get_value_from_tuple(call_assignment_22330_24363, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22332' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_22332', stypy_get_value_from_tuple_call_result_24364)
        
        # Assigning a Name to a Name (line 574):
        # Getting the type of 'call_assignment_22332' (line 574)
        call_assignment_22332_24365 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 574, 8), 'call_assignment_22332')
        # Assigning a type to the variable 'final_type_store' (line 574)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 574, 19), 'final_type_store', call_assignment_22332_24365)
        
        # Call to append(...): (line 577)
        # Processing the call arguments (line 577)
        # Getting the type of 'join_stmt' (line 577)
        join_stmt_24368 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 31), 'join_stmt', False)
        # Processing the call keyword arguments (line 577)
        kwargs_24369 = {}
        # Getting the type of 'for_stmt_orelse' (line 577)
        for_stmt_orelse_24366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 577, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 577)
        append_24367 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 577, 8), for_stmt_orelse_24366, 'append')
        # Calling append(args, kwargs) (line 577)
        append_call_result_24370 = invoke(stypy.reporting.localization.Localization(__file__, 577, 8), append_24367, *[join_stmt_24368], **kwargs_24369)
        
        
        # Assigning a Call to a Name (line 580):
        
        # Assigning a Call to a Name (line 580):
        
        # Call to create_set_type_store(...): (line 580)
        # Processing the call arguments (line 580)
        # Getting the type of 'final_type_store' (line 580)
        final_type_store_24373 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 69), 'final_type_store', False)
        # Processing the call keyword arguments (line 580)
        kwargs_24374 = {}
        # Getting the type of 'stypy_functions_copy' (line 580)
        stypy_functions_copy_24371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 580, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 580)
        create_set_type_store_24372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 580, 26), stypy_functions_copy_24371, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 580)
        create_set_type_store_call_result_24375 = invoke(stypy.reporting.localization.Localization(__file__, 580, 26), create_set_type_store_24372, *[final_type_store_24373], **kwargs_24374)
        
        # Assigning a type to the variable 'set_type_store2' (line 580)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 580, 8), 'set_type_store2', create_set_type_store_call_result_24375)
        
        # Call to append(...): (line 581)
        # Processing the call arguments (line 581)
        # Getting the type of 'set_type_store2' (line 581)
        set_type_store2_24378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 31), 'set_type_store2', False)
        # Processing the call keyword arguments (line 581)
        kwargs_24379 = {}
        # Getting the type of 'for_stmt_orelse' (line 581)
        for_stmt_orelse_24376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 581, 8), 'for_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 581)
        append_24377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 581, 8), for_stmt_orelse_24376, 'append')
        # Calling append(args, kwargs) (line 581)
        append_call_result_24380 = invoke(stypy.reporting.localization.Localization(__file__, 581, 8), append_24377, *[set_type_store2_24378], **kwargs_24379)
        
        
        # Assigning a BinOp to a Name (line 583):
        
        # Assigning a BinOp to a Name (line 583):
        # Getting the type of 'for_stmt_body' (line 583)
        for_stmt_body_24381 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 20), 'for_stmt_body')
        # Getting the type of 'for_stmt_orelse' (line 583)
        for_stmt_orelse_24382 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 583, 36), 'for_stmt_orelse')
        # Applying the binary operator '+' (line 583)
        result_add_24383 = python_operator(stypy.reporting.localization.Localization(__file__, 583, 20), '+', for_stmt_body_24381, for_stmt_orelse_24382)
        
        # Assigning a type to the variable 'for_stmts' (line 583)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 583, 8), 'for_stmts', result_add_24383)
        
        # Assigning a Call to a Name (line 584):
        
        # Assigning a Call to a Name (line 584):
        
        # Call to flatten_lists(...): (line 584)
        # Processing the call arguments (line 584)
        # Getting the type of 'condition_comment' (line 584)
        condition_comment_24386 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 54), 'condition_comment', False)
        # Getting the type of 'condition_call' (line 584)
        condition_call_24387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 73), 'condition_call', False)
        # Getting the type of 'for_stmts' (line 584)
        for_stmts_24388 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 89), 'for_stmts', False)
        # Processing the call keyword arguments (line 584)
        kwargs_24389 = {}
        # Getting the type of 'stypy_functions_copy' (line 584)
        stypy_functions_copy_24384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 584, 19), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 584)
        flatten_lists_24385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 584, 19), stypy_functions_copy_24384, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 584)
        flatten_lists_call_result_24390 = invoke(stypy.reporting.localization.Localization(__file__, 584, 19), flatten_lists_24385, *[condition_comment_24386, condition_call_24387, for_stmts_24388], **kwargs_24389)
        
        # Assigning a type to the variable 'for_stmt' (line 584)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 584, 8), 'for_stmt', flatten_lists_call_result_24390)
        
        # Assigning a Call to a Name (line 586):
        
        # Assigning a Call to a Name (line 586):
        
        # Call to create_blank_line(...): (line 586)
        # Processing the call keyword arguments (line 586)
        kwargs_24393 = {}
        # Getting the type of 'stypy_functions_copy' (line 586)
        stypy_functions_copy_24391 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 586, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 586)
        create_blank_line_24392 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 586, 26), stypy_functions_copy_24391, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 586)
        create_blank_line_call_result_24394 = invoke(stypy.reporting.localization.Localization(__file__, 586, 26), create_blank_line_24392, *[], **kwargs_24393)
        
        # Assigning a type to the variable 'end_for_comment' (line 586)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 586, 8), 'end_for_comment', create_blank_line_call_result_24394)
        
        # Call to flatten_lists(...): (line 588)
        # Processing the call arguments (line 588)
        # Getting the type of 'begin_for_comment' (line 588)
        begin_for_comment_24397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 50), 'begin_for_comment', False)
        # Getting the type of 'iter_stmt' (line 589)
        iter_stmt_24398 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 589, 45), 'iter_stmt', False)
        # Getting the type of 'for_stmt' (line 590)
        for_stmt_24399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 590, 45), 'for_stmt', False)
        # Getting the type of 'end_for_comment' (line 591)
        end_for_comment_24400 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 591, 45), 'end_for_comment', False)
        # Processing the call keyword arguments (line 588)
        kwargs_24401 = {}
        # Getting the type of 'stypy_functions_copy' (line 588)
        stypy_functions_copy_24395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 588, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 588)
        flatten_lists_24396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 588, 15), stypy_functions_copy_24395, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 588)
        flatten_lists_call_result_24402 = invoke(stypy.reporting.localization.Localization(__file__, 588, 15), flatten_lists_24396, *[begin_for_comment_24397, iter_stmt_24398, for_stmt_24399, end_for_comment_24400], **kwargs_24401)
        
        # Assigning a type to the variable 'stypy_return_type' (line 588)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 588, 8), 'stypy_return_type', flatten_lists_call_result_24402)
        
        # ################# End of 'visit_For(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_For' in the type store
        # Getting the type of 'stypy_return_type' (line 509)
        stypy_return_type_24403 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 509, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_24403)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_For'
        return stypy_return_type_24403


    @norecursion
    def visit_While(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_While'
        module_type_store = module_type_store.open_function_context('visit_While', 595, 4, False)
        # Assigning a type to the variable 'self' (line 596)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 596, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_While')
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_While.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_While', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_While', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_While(...)' code ##################

        
        # Assigning a List to a Name (line 598):
        
        # Assigning a List to a Name (line 598):
        
        # Obtaining an instance of the builtin type 'list' (line 598)
        list_24404 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 598, 26), 'list')
        # Adding type elements to the builtin type 'list' instance (line 598)
        
        # Assigning a type to the variable 'while_stmt_body' (line 598)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 598, 8), 'while_stmt_body', list_24404)
        
        # Assigning a List to a Name (line 599):
        
        # Assigning a List to a Name (line 599):
        
        # Obtaining an instance of the builtin type 'list' (line 599)
        list_24405 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 599, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 599)
        
        # Assigning a type to the variable 'while_stmt_orelse' (line 599)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 599, 8), 'while_stmt_orelse', list_24405)
        
        # Assigning a Call to a Name (line 601):
        
        # Assigning a Call to a Name (line 601):
        
        # Call to create_blank_line(...): (line 601)
        # Processing the call keyword arguments (line 601)
        kwargs_24408 = {}
        # Getting the type of 'stypy_functions_copy' (line 601)
        stypy_functions_copy_24406 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 601, 30), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 601)
        create_blank_line_24407 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 601, 30), stypy_functions_copy_24406, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 601)
        create_blank_line_call_result_24409 = invoke(stypy.reporting.localization.Localization(__file__, 601, 30), create_blank_line_24407, *[], **kwargs_24408)
        
        # Assigning a type to the variable 'begin_while_comment' (line 601)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 601, 8), 'begin_while_comment', create_blank_line_call_result_24409)
        
        # Assigning a Call to a Tuple (line 604):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 604)
        # Processing the call arguments (line 604)
        # Getting the type of 'node' (line 604)
        node_24412 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 53), 'node', False)
        # Obtaining the member 'test' of a type (line 604)
        test_24413 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 53), node_24412, 'test')
        # Getting the type of 'context' (line 604)
        context_24414 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 64), 'context', False)
        # Processing the call keyword arguments (line 604)
        kwargs_24415 = {}
        # Getting the type of 'self' (line 604)
        self_24410 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 42), 'self', False)
        # Obtaining the member 'visit' of a type (line 604)
        visit_24411 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 604, 42), self_24410, 'visit')
        # Calling visit(args, kwargs) (line 604)
        visit_call_result_24416 = invoke(stypy.reporting.localization.Localization(__file__, 604, 42), visit_24411, *[test_24413, context_24414], **kwargs_24415)
        
        # Assigning a type to the variable 'call_assignment_22333' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_22333', visit_call_result_24416)
        
        # Assigning a Call to a Name (line 604):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22333' (line 604)
        call_assignment_22333_24417 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_22333', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24418 = stypy_get_value_from_tuple(call_assignment_22333_24417, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22334' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_22334', stypy_get_value_from_tuple_call_result_24418)
        
        # Assigning a Name to a Name (line 604):
        # Getting the type of 'call_assignment_22334' (line 604)
        call_assignment_22334_24419 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_22334')
        # Assigning a type to the variable 'condition_stmt' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'condition_stmt', call_assignment_22334_24419)
        
        # Assigning a Call to a Name (line 604):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22333' (line 604)
        call_assignment_22333_24420 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_22333', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24421 = stypy_get_value_from_tuple(call_assignment_22333_24420, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22335' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_22335', stypy_get_value_from_tuple_call_result_24421)
        
        # Assigning a Name to a Name (line 604):
        # Getting the type of 'call_assignment_22335' (line 604)
        call_assignment_22335_24422 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 604, 8), 'call_assignment_22335')
        # Assigning a type to the variable 'while_stmt_test' (line 604)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 604, 24), 'while_stmt_test', call_assignment_22335_24422)
        
        # Assigning a Call to a Name (line 607):
        
        # Assigning a Call to a Name (line 607):
        
        # Call to create_src_comment(...): (line 607)
        # Processing the call arguments (line 607)
        str_24425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 607, 68), 'str', 'Testing the type of an if condition')
        # Getting the type of 'node' (line 607)
        node_24426 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 107), 'node', False)
        # Obtaining the member 'lineno' of a type (line 607)
        lineno_24427 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 107), node_24426, 'lineno')
        # Processing the call keyword arguments (line 607)
        kwargs_24428 = {}
        # Getting the type of 'stypy_functions_copy' (line 607)
        stypy_functions_copy_24423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 607, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 607)
        create_src_comment_24424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 607, 28), stypy_functions_copy_24423, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 607)
        create_src_comment_call_result_24429 = invoke(stypy.reporting.localization.Localization(__file__, 607, 28), create_src_comment_24424, *[str_24425, lineno_24427], **kwargs_24428)
        
        # Assigning a type to the variable 'condition_comment' (line 607)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 607, 8), 'condition_comment', create_src_comment_call_result_24429)
        
        # Assigning a Call to a Name (line 608):
        
        # Assigning a Call to a Name (line 608):
        
        # Call to create_Name(...): (line 608)
        # Processing the call arguments (line 608)
        str_24432 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 608, 51), 'str', 'is_suitable_condition')
        # Processing the call keyword arguments (line 608)
        kwargs_24433 = {}
        # Getting the type of 'core_language_copy' (line 608)
        core_language_copy_24430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 608, 20), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 608)
        create_Name_24431 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 608, 20), core_language_copy_24430, 'create_Name')
        # Calling create_Name(args, kwargs) (line 608)
        create_Name_call_result_24434 = invoke(stypy.reporting.localization.Localization(__file__, 608, 20), create_Name_24431, *[str_24432], **kwargs_24433)
        
        # Assigning a type to the variable 'attribute' (line 608)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 608, 8), 'attribute', create_Name_call_result_24434)
        
        # Assigning a Call to a Name (line 609):
        
        # Assigning a Call to a Name (line 609):
        
        # Call to create_localization(...): (line 609)
        # Processing the call arguments (line 609)
        # Getting the type of 'node' (line 609)
        node_24437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 609)
        lineno_24438 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 64), node_24437, 'lineno')
        # Getting the type of 'node' (line 609)
        node_24439 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 609)
        col_offset_24440 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 77), node_24439, 'col_offset')
        # Processing the call keyword arguments (line 609)
        kwargs_24441 = {}
        # Getting the type of 'stypy_functions_copy' (line 609)
        stypy_functions_copy_24435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 609, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 609)
        create_localization_24436 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 609, 23), stypy_functions_copy_24435, 'create_localization')
        # Calling create_localization(args, kwargs) (line 609)
        create_localization_call_result_24442 = invoke(stypy.reporting.localization.Localization(__file__, 609, 23), create_localization_24436, *[lineno_24438, col_offset_24440], **kwargs_24441)
        
        # Assigning a type to the variable 'localization' (line 609)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 609, 8), 'localization', create_localization_call_result_24442)
        
        # Assigning a Call to a Name (line 610):
        
        # Assigning a Call to a Name (line 610):
        
        # Call to create_call_expression(...): (line 610)
        # Processing the call arguments (line 610)
        # Getting the type of 'attribute' (line 610)
        attribute_24445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 63), 'attribute', False)
        
        # Obtaining an instance of the builtin type 'list' (line 610)
        list_24446 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 610, 74), 'list')
        # Adding type elements to the builtin type 'list' instance (line 610)
        # Adding element type (line 610)
        # Getting the type of 'localization' (line 610)
        localization_24447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 75), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 74), list_24446, localization_24447)
        # Adding element type (line 610)
        # Getting the type of 'while_stmt_test' (line 610)
        while_stmt_test_24448 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 89), 'while_stmt_test', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 610, 74), list_24446, while_stmt_test_24448)
        
        # Processing the call keyword arguments (line 610)
        kwargs_24449 = {}
        # Getting the type of 'functions_copy' (line 610)
        functions_copy_24443 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 610, 25), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 610)
        create_call_expression_24444 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 610, 25), functions_copy_24443, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 610)
        create_call_expression_call_result_24450 = invoke(stypy.reporting.localization.Localization(__file__, 610, 25), create_call_expression_24444, *[attribute_24445, list_24446], **kwargs_24449)
        
        # Assigning a type to the variable 'condition_call' (line 610)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 610, 8), 'condition_call', create_call_expression_call_result_24450)
        
        # Call to append(...): (line 613)
        # Processing the call arguments (line 613)
        
        # Call to create_src_comment(...): (line 613)
        # Processing the call arguments (line 613)
        str_24455 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 613, 71), 'str', 'SSA begins for while statement')
        # Getting the type of 'node' (line 613)
        node_24456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 613)
        lineno_24457 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 105), node_24456, 'lineno')
        # Processing the call keyword arguments (line 613)
        kwargs_24458 = {}
        # Getting the type of 'stypy_functions_copy' (line 613)
        stypy_functions_copy_24453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 613)
        create_src_comment_24454 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 31), stypy_functions_copy_24453, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 613)
        create_src_comment_call_result_24459 = invoke(stypy.reporting.localization.Localization(__file__, 613, 31), create_src_comment_24454, *[str_24455, lineno_24457], **kwargs_24458)
        
        # Processing the call keyword arguments (line 613)
        kwargs_24460 = {}
        # Getting the type of 'while_stmt_body' (line 613)
        while_stmt_body_24451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 613, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 613)
        append_24452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 613, 8), while_stmt_body_24451, 'append')
        # Calling append(args, kwargs) (line 613)
        append_call_result_24461 = invoke(stypy.reporting.localization.Localization(__file__, 613, 8), append_24452, *[create_src_comment_call_result_24459], **kwargs_24460)
        
        
        # Assigning a Call to a Tuple (line 614):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 614)
        # Processing the call keyword arguments (line 614)
        kwargs_24464 = {}
        # Getting the type of 'stypy_functions_copy' (line 614)
        stypy_functions_copy_24462 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 614)
        create_clone_type_store_24463 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 614, 39), stypy_functions_copy_24462, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 614)
        create_clone_type_store_call_result_24465 = invoke(stypy.reporting.localization.Localization(__file__, 614, 39), create_clone_type_store_24463, *[], **kwargs_24464)
        
        # Assigning a type to the variable 'call_assignment_22336' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_22336', create_clone_type_store_call_result_24465)
        
        # Assigning a Call to a Name (line 614):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22336' (line 614)
        call_assignment_22336_24466 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_22336', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24467 = stypy_get_value_from_tuple(call_assignment_22336_24466, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22337' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_22337', stypy_get_value_from_tuple_call_result_24467)
        
        # Assigning a Name to a Name (line 614):
        # Getting the type of 'call_assignment_22337' (line 614)
        call_assignment_22337_24468 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_22337')
        # Assigning a type to the variable 'clone_stmt1' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'clone_stmt1', call_assignment_22337_24468)
        
        # Assigning a Call to a Name (line 614):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22336' (line 614)
        call_assignment_22336_24469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_22336', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24470 = stypy_get_value_from_tuple(call_assignment_22336_24469, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22338' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_22338', stypy_get_value_from_tuple_call_result_24470)
        
        # Assigning a Name to a Name (line 614):
        # Getting the type of 'call_assignment_22338' (line 614)
        call_assignment_22338_24471 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 614, 8), 'call_assignment_22338')
        # Assigning a type to the variable 'type_store_var1' (line 614)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 614, 21), 'type_store_var1', call_assignment_22338_24471)
        
        # Call to append(...): (line 615)
        # Processing the call arguments (line 615)
        # Getting the type of 'clone_stmt1' (line 615)
        clone_stmt1_24474 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 31), 'clone_stmt1', False)
        # Processing the call keyword arguments (line 615)
        kwargs_24475 = {}
        # Getting the type of 'while_stmt_body' (line 615)
        while_stmt_body_24472 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 615, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 615)
        append_24473 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 615, 8), while_stmt_body_24472, 'append')
        # Calling append(args, kwargs) (line 615)
        append_call_result_24476 = invoke(stypy.reporting.localization.Localization(__file__, 615, 8), append_24473, *[clone_stmt1_24474], **kwargs_24475)
        
        
        # Call to extend(...): (line 618)
        # Processing the call arguments (line 618)
        
        # Call to __visit_instruction_body(...): (line 618)
        # Processing the call arguments (line 618)
        # Getting the type of 'node' (line 618)
        node_24481 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 61), 'node', False)
        # Obtaining the member 'body' of a type (line 618)
        body_24482 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 61), node_24481, 'body')
        # Getting the type of 'context' (line 618)
        context_24483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 72), 'context', False)
        # Processing the call keyword arguments (line 618)
        kwargs_24484 = {}
        # Getting the type of 'self' (line 618)
        self_24479 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 31), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 618)
        visit_instruction_body_24480 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 31), self_24479, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 618)
        visit_instruction_body_call_result_24485 = invoke(stypy.reporting.localization.Localization(__file__, 618, 31), visit_instruction_body_24480, *[body_24482, context_24483], **kwargs_24484)
        
        # Processing the call keyword arguments (line 618)
        kwargs_24486 = {}
        # Getting the type of 'while_stmt_body' (line 618)
        while_stmt_body_24477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 618, 8), 'while_stmt_body', False)
        # Obtaining the member 'extend' of a type (line 618)
        extend_24478 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 618, 8), while_stmt_body_24477, 'extend')
        # Calling extend(args, kwargs) (line 618)
        extend_call_result_24487 = invoke(stypy.reporting.localization.Localization(__file__, 618, 8), extend_24478, *[visit_instruction_body_call_result_24485], **kwargs_24486)
        
        
        # Call to append(...): (line 621)
        # Processing the call arguments (line 621)
        
        # Call to create_src_comment(...): (line 622)
        # Processing the call arguments (line 622)
        str_24492 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 622, 52), 'str', 'SSA branch for the else part of a while statement')
        # Getting the type of 'node' (line 622)
        node_24493 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 622)
        lineno_24494 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 105), node_24493, 'lineno')
        # Processing the call keyword arguments (line 622)
        kwargs_24495 = {}
        # Getting the type of 'stypy_functions_copy' (line 622)
        stypy_functions_copy_24490 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 622, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 622)
        create_src_comment_24491 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 622, 12), stypy_functions_copy_24490, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 622)
        create_src_comment_call_result_24496 = invoke(stypy.reporting.localization.Localization(__file__, 622, 12), create_src_comment_24491, *[str_24492, lineno_24494], **kwargs_24495)
        
        # Processing the call keyword arguments (line 621)
        kwargs_24497 = {}
        # Getting the type of 'while_stmt_body' (line 621)
        while_stmt_body_24488 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 621, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 621)
        append_24489 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 621, 8), while_stmt_body_24488, 'append')
        # Calling append(args, kwargs) (line 621)
        append_call_result_24498 = invoke(stypy.reporting.localization.Localization(__file__, 621, 8), append_24489, *[create_src_comment_call_result_24496], **kwargs_24497)
        
        
        # Assigning a Call to a Tuple (line 623):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 623)
        # Processing the call keyword arguments (line 623)
        kwargs_24501 = {}
        # Getting the type of 'stypy_functions_copy' (line 623)
        stypy_functions_copy_24499 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 623)
        create_clone_type_store_24500 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 623, 39), stypy_functions_copy_24499, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 623)
        create_clone_type_store_call_result_24502 = invoke(stypy.reporting.localization.Localization(__file__, 623, 39), create_clone_type_store_24500, *[], **kwargs_24501)
        
        # Assigning a type to the variable 'call_assignment_22339' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_22339', create_clone_type_store_call_result_24502)
        
        # Assigning a Call to a Name (line 623):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22339' (line 623)
        call_assignment_22339_24503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_22339', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24504 = stypy_get_value_from_tuple(call_assignment_22339_24503, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22340' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_22340', stypy_get_value_from_tuple_call_result_24504)
        
        # Assigning a Name to a Name (line 623):
        # Getting the type of 'call_assignment_22340' (line 623)
        call_assignment_22340_24505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_22340')
        # Assigning a type to the variable 'clone_stmt2' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'clone_stmt2', call_assignment_22340_24505)
        
        # Assigning a Call to a Name (line 623):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22339' (line 623)
        call_assignment_22339_24506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_22339', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24507 = stypy_get_value_from_tuple(call_assignment_22339_24506, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22341' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_22341', stypy_get_value_from_tuple_call_result_24507)
        
        # Assigning a Name to a Name (line 623):
        # Getting the type of 'call_assignment_22341' (line 623)
        call_assignment_22341_24508 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 623, 8), 'call_assignment_22341')
        # Assigning a type to the variable 'type_store_var2' (line 623)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 623, 21), 'type_store_var2', call_assignment_22341_24508)
        
        # Call to append(...): (line 624)
        # Processing the call arguments (line 624)
        # Getting the type of 'clone_stmt2' (line 624)
        clone_stmt2_24511 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 31), 'clone_stmt2', False)
        # Processing the call keyword arguments (line 624)
        kwargs_24512 = {}
        # Getting the type of 'while_stmt_body' (line 624)
        while_stmt_body_24509 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 624, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 624)
        append_24510 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 624, 8), while_stmt_body_24509, 'append')
        # Calling append(args, kwargs) (line 624)
        append_call_result_24513 = invoke(stypy.reporting.localization.Localization(__file__, 624, 8), append_24510, *[clone_stmt2_24511], **kwargs_24512)
        
        
        # Assigning a Call to a Name (line 626):
        
        # Assigning a Call to a Name (line 626):
        
        # Call to create_set_type_store(...): (line 626)
        # Processing the call arguments (line 626)
        # Getting the type of 'type_store_var1' (line 626)
        type_store_var1_24516 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 69), 'type_store_var1', False)
        # Processing the call keyword arguments (line 626)
        kwargs_24517 = {}
        # Getting the type of 'stypy_functions_copy' (line 626)
        stypy_functions_copy_24514 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 626, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 626)
        create_set_type_store_24515 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 626, 26), stypy_functions_copy_24514, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 626)
        create_set_type_store_call_result_24518 = invoke(stypy.reporting.localization.Localization(__file__, 626, 26), create_set_type_store_24515, *[type_store_var1_24516], **kwargs_24517)
        
        # Assigning a type to the variable 'set_type_store1' (line 626)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 626, 8), 'set_type_store1', create_set_type_store_call_result_24518)
        
        # Call to append(...): (line 627)
        # Processing the call arguments (line 627)
        # Getting the type of 'set_type_store1' (line 627)
        set_type_store1_24521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 31), 'set_type_store1', False)
        # Processing the call keyword arguments (line 627)
        kwargs_24522 = {}
        # Getting the type of 'while_stmt_body' (line 627)
        while_stmt_body_24519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 627, 8), 'while_stmt_body', False)
        # Obtaining the member 'append' of a type (line 627)
        append_24520 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 627, 8), while_stmt_body_24519, 'append')
        # Calling append(args, kwargs) (line 627)
        append_call_result_24523 = invoke(stypy.reporting.localization.Localization(__file__, 627, 8), append_24520, *[set_type_store1_24521], **kwargs_24522)
        
        
        # Call to extend(...): (line 630)
        # Processing the call arguments (line 630)
        
        # Call to __visit_instruction_body(...): (line 630)
        # Processing the call arguments (line 630)
        # Getting the type of 'node' (line 630)
        node_24528 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 63), 'node', False)
        # Obtaining the member 'orelse' of a type (line 630)
        orelse_24529 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 63), node_24528, 'orelse')
        # Getting the type of 'context' (line 630)
        context_24530 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 76), 'context', False)
        # Processing the call keyword arguments (line 630)
        kwargs_24531 = {}
        # Getting the type of 'self' (line 630)
        self_24526 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 630)
        visit_instruction_body_24527 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 33), self_24526, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 630)
        visit_instruction_body_call_result_24532 = invoke(stypy.reporting.localization.Localization(__file__, 630, 33), visit_instruction_body_24527, *[orelse_24529, context_24530], **kwargs_24531)
        
        # Processing the call keyword arguments (line 630)
        kwargs_24533 = {}
        # Getting the type of 'while_stmt_orelse' (line 630)
        while_stmt_orelse_24524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 630, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'extend' of a type (line 630)
        extend_24525 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 630, 8), while_stmt_orelse_24524, 'extend')
        # Calling extend(args, kwargs) (line 630)
        extend_call_result_24534 = invoke(stypy.reporting.localization.Localization(__file__, 630, 8), extend_24525, *[visit_instruction_body_call_result_24532], **kwargs_24533)
        
        
        # Call to append(...): (line 633)
        # Processing the call arguments (line 633)
        
        # Call to create_src_comment(...): (line 633)
        # Processing the call arguments (line 633)
        str_24539 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 633, 73), 'str', 'SSA join for while statement')
        # Getting the type of 'node' (line 633)
        node_24540 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 633)
        lineno_24541 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 105), node_24540, 'lineno')
        # Processing the call keyword arguments (line 633)
        kwargs_24542 = {}
        # Getting the type of 'stypy_functions_copy' (line 633)
        stypy_functions_copy_24537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 633)
        create_src_comment_24538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 33), stypy_functions_copy_24537, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 633)
        create_src_comment_call_result_24543 = invoke(stypy.reporting.localization.Localization(__file__, 633, 33), create_src_comment_24538, *[str_24539, lineno_24541], **kwargs_24542)
        
        # Processing the call keyword arguments (line 633)
        kwargs_24544 = {}
        # Getting the type of 'while_stmt_orelse' (line 633)
        while_stmt_orelse_24535 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 633, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 633)
        append_24536 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 633, 8), while_stmt_orelse_24535, 'append')
        # Calling append(args, kwargs) (line 633)
        append_call_result_24545 = invoke(stypy.reporting.localization.Localization(__file__, 633, 8), append_24536, *[create_src_comment_call_result_24543], **kwargs_24544)
        
        
        # Assigning a Call to a Tuple (line 634):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 634)
        # Processing the call keyword arguments (line 634)
        kwargs_24548 = {}
        # Getting the type of 'stypy_functions_copy' (line 634)
        stypy_functions_copy_24546 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 39), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 634)
        create_clone_type_store_24547 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 634, 39), stypy_functions_copy_24546, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 634)
        create_clone_type_store_call_result_24549 = invoke(stypy.reporting.localization.Localization(__file__, 634, 39), create_clone_type_store_24547, *[], **kwargs_24548)
        
        # Assigning a type to the variable 'call_assignment_22342' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_22342', create_clone_type_store_call_result_24549)
        
        # Assigning a Call to a Name (line 634):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22342' (line 634)
        call_assignment_22342_24550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_22342', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24551 = stypy_get_value_from_tuple(call_assignment_22342_24550, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22343' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_22343', stypy_get_value_from_tuple_call_result_24551)
        
        # Assigning a Name to a Name (line 634):
        # Getting the type of 'call_assignment_22343' (line 634)
        call_assignment_22343_24552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_22343')
        # Assigning a type to the variable 'clone_stmt3' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'clone_stmt3', call_assignment_22343_24552)
        
        # Assigning a Call to a Name (line 634):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22342' (line 634)
        call_assignment_22342_24553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_22342', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24554 = stypy_get_value_from_tuple(call_assignment_22342_24553, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22344' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_22344', stypy_get_value_from_tuple_call_result_24554)
        
        # Assigning a Name to a Name (line 634):
        # Getting the type of 'call_assignment_22344' (line 634)
        call_assignment_22344_24555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 634, 8), 'call_assignment_22344')
        # Assigning a type to the variable 'type_store_var3' (line 634)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 634, 21), 'type_store_var3', call_assignment_22344_24555)
        
        # Call to append(...): (line 635)
        # Processing the call arguments (line 635)
        # Getting the type of 'clone_stmt3' (line 635)
        clone_stmt3_24558 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 33), 'clone_stmt3', False)
        # Processing the call keyword arguments (line 635)
        kwargs_24559 = {}
        # Getting the type of 'while_stmt_orelse' (line 635)
        while_stmt_orelse_24556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 635, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 635)
        append_24557 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 635, 8), while_stmt_orelse_24556, 'append')
        # Calling append(args, kwargs) (line 635)
        append_call_result_24560 = invoke(stypy.reporting.localization.Localization(__file__, 635, 8), append_24557, *[clone_stmt3_24558], **kwargs_24559)
        
        
        # Assigning a Call to a Tuple (line 637):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 637)
        # Processing the call arguments (line 637)
        str_24563 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 637, 82), 'str', 'ssa_join_with_else_branch')
        
        # Obtaining an instance of the builtin type 'list' (line 638)
        list_24564 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 638, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 638)
        # Adding element type (line 638)
        # Getting the type of 'type_store_var1' (line 638)
        type_store_var1_24565 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 78), 'type_store_var1', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 77), list_24564, type_store_var1_24565)
        # Adding element type (line 638)
        # Getting the type of 'type_store_var2' (line 638)
        type_store_var2_24566 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 638, 95), 'type_store_var2', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 77), list_24564, type_store_var2_24566)
        # Adding element type (line 638)
        # Getting the type of 'type_store_var3' (line 639)
        type_store_var3_24567 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 639, 78), 'type_store_var3', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 638, 77), list_24564, type_store_var3_24567)
        
        # Processing the call keyword arguments (line 637)
        kwargs_24568 = {}
        # Getting the type of 'stypy_functions_copy' (line 637)
        stypy_functions_copy_24561 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 637)
        create_join_type_store_24562 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 637, 38), stypy_functions_copy_24561, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 637)
        create_join_type_store_call_result_24569 = invoke(stypy.reporting.localization.Localization(__file__, 637, 38), create_join_type_store_24562, *[str_24563, list_24564], **kwargs_24568)
        
        # Assigning a type to the variable 'call_assignment_22345' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_22345', create_join_type_store_call_result_24569)
        
        # Assigning a Call to a Name (line 637):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22345' (line 637)
        call_assignment_22345_24570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_22345', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24571 = stypy_get_value_from_tuple(call_assignment_22345_24570, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22346' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_22346', stypy_get_value_from_tuple_call_result_24571)
        
        # Assigning a Name to a Name (line 637):
        # Getting the type of 'call_assignment_22346' (line 637)
        call_assignment_22346_24572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_22346')
        # Assigning a type to the variable 'join_stmt' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'join_stmt', call_assignment_22346_24572)
        
        # Assigning a Call to a Name (line 637):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22345' (line 637)
        call_assignment_22345_24573 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_22345', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24574 = stypy_get_value_from_tuple(call_assignment_22345_24573, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22347' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_22347', stypy_get_value_from_tuple_call_result_24574)
        
        # Assigning a Name to a Name (line 637):
        # Getting the type of 'call_assignment_22347' (line 637)
        call_assignment_22347_24575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 637, 8), 'call_assignment_22347')
        # Assigning a type to the variable 'final_type_store' (line 637)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 637, 19), 'final_type_store', call_assignment_22347_24575)
        
        # Call to append(...): (line 640)
        # Processing the call arguments (line 640)
        # Getting the type of 'join_stmt' (line 640)
        join_stmt_24578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 33), 'join_stmt', False)
        # Processing the call keyword arguments (line 640)
        kwargs_24579 = {}
        # Getting the type of 'while_stmt_orelse' (line 640)
        while_stmt_orelse_24576 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 640, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 640)
        append_24577 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 640, 8), while_stmt_orelse_24576, 'append')
        # Calling append(args, kwargs) (line 640)
        append_call_result_24580 = invoke(stypy.reporting.localization.Localization(__file__, 640, 8), append_24577, *[join_stmt_24578], **kwargs_24579)
        
        
        # Assigning a Call to a Name (line 643):
        
        # Assigning a Call to a Name (line 643):
        
        # Call to create_set_type_store(...): (line 643)
        # Processing the call arguments (line 643)
        # Getting the type of 'final_type_store' (line 643)
        final_type_store_24583 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 69), 'final_type_store', False)
        # Processing the call keyword arguments (line 643)
        kwargs_24584 = {}
        # Getting the type of 'stypy_functions_copy' (line 643)
        stypy_functions_copy_24581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 643, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 643)
        create_set_type_store_24582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 643, 26), stypy_functions_copy_24581, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 643)
        create_set_type_store_call_result_24585 = invoke(stypy.reporting.localization.Localization(__file__, 643, 26), create_set_type_store_24582, *[final_type_store_24583], **kwargs_24584)
        
        # Assigning a type to the variable 'set_type_store2' (line 643)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 643, 8), 'set_type_store2', create_set_type_store_call_result_24585)
        
        # Call to append(...): (line 644)
        # Processing the call arguments (line 644)
        # Getting the type of 'set_type_store2' (line 644)
        set_type_store2_24588 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 33), 'set_type_store2', False)
        # Processing the call keyword arguments (line 644)
        kwargs_24589 = {}
        # Getting the type of 'while_stmt_orelse' (line 644)
        while_stmt_orelse_24586 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 644, 8), 'while_stmt_orelse', False)
        # Obtaining the member 'append' of a type (line 644)
        append_24587 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 644, 8), while_stmt_orelse_24586, 'append')
        # Calling append(args, kwargs) (line 644)
        append_call_result_24590 = invoke(stypy.reporting.localization.Localization(__file__, 644, 8), append_24587, *[set_type_store2_24588], **kwargs_24589)
        
        
        # Assigning a BinOp to a Name (line 646):
        
        # Assigning a BinOp to a Name (line 646):
        # Getting the type of 'while_stmt_body' (line 646)
        while_stmt_body_24591 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 26), 'while_stmt_body')
        # Getting the type of 'while_stmt_orelse' (line 646)
        while_stmt_orelse_24592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 646, 44), 'while_stmt_orelse')
        # Applying the binary operator '+' (line 646)
        result_add_24593 = python_operator(stypy.reporting.localization.Localization(__file__, 646, 26), '+', while_stmt_body_24591, while_stmt_orelse_24592)
        
        # Assigning a type to the variable 'all_while_stmts' (line 646)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 646, 8), 'all_while_stmts', result_add_24593)
        
        # Assigning a Call to a Name (line 647):
        
        # Assigning a Call to a Name (line 647):
        
        # Call to flatten_lists(...): (line 647)
        # Processing the call arguments (line 647)
        # Getting the type of 'condition_comment' (line 647)
        condition_comment_24596 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 56), 'condition_comment', False)
        # Getting the type of 'condition_call' (line 647)
        condition_call_24597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 75), 'condition_call', False)
        # Getting the type of 'all_while_stmts' (line 647)
        all_while_stmts_24598 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 91), 'all_while_stmts', False)
        # Processing the call keyword arguments (line 647)
        kwargs_24599 = {}
        # Getting the type of 'stypy_functions_copy' (line 647)
        stypy_functions_copy_24594 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 647, 21), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 647)
        flatten_lists_24595 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 647, 21), stypy_functions_copy_24594, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 647)
        flatten_lists_call_result_24600 = invoke(stypy.reporting.localization.Localization(__file__, 647, 21), flatten_lists_24595, *[condition_comment_24596, condition_call_24597, all_while_stmts_24598], **kwargs_24599)
        
        # Assigning a type to the variable 'while_stmt' (line 647)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 647, 8), 'while_stmt', flatten_lists_call_result_24600)
        
        # Assigning a Call to a Name (line 649):
        
        # Assigning a Call to a Name (line 649):
        
        # Call to create_blank_line(...): (line 649)
        # Processing the call keyword arguments (line 649)
        kwargs_24603 = {}
        # Getting the type of 'stypy_functions_copy' (line 649)
        stypy_functions_copy_24601 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 649, 28), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 649)
        create_blank_line_24602 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 649, 28), stypy_functions_copy_24601, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 649)
        create_blank_line_call_result_24604 = invoke(stypy.reporting.localization.Localization(__file__, 649, 28), create_blank_line_24602, *[], **kwargs_24603)
        
        # Assigning a type to the variable 'end_while_comment' (line 649)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 649, 8), 'end_while_comment', create_blank_line_call_result_24604)
        
        # Call to flatten_lists(...): (line 650)
        # Processing the call arguments (line 650)
        # Getting the type of 'begin_while_comment' (line 650)
        begin_while_comment_24607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 50), 'begin_while_comment', False)
        # Getting the type of 'condition_stmt' (line 651)
        condition_stmt_24608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 651, 45), 'condition_stmt', False)
        # Getting the type of 'while_stmt' (line 652)
        while_stmt_24609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 652, 45), 'while_stmt', False)
        # Getting the type of 'end_while_comment' (line 653)
        end_while_comment_24610 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 653, 45), 'end_while_comment', False)
        # Processing the call keyword arguments (line 650)
        kwargs_24611 = {}
        # Getting the type of 'stypy_functions_copy' (line 650)
        stypy_functions_copy_24605 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 650, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 650)
        flatten_lists_24606 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 650, 15), stypy_functions_copy_24605, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 650)
        flatten_lists_call_result_24612 = invoke(stypy.reporting.localization.Localization(__file__, 650, 15), flatten_lists_24606, *[begin_while_comment_24607, condition_stmt_24608, while_stmt_24609, end_while_comment_24610], **kwargs_24611)
        
        # Assigning a type to the variable 'stypy_return_type' (line 650)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 650, 8), 'stypy_return_type', flatten_lists_call_result_24612)
        
        # ################# End of 'visit_While(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_While' in the type store
        # Getting the type of 'stypy_return_type' (line 595)
        stypy_return_type_24613 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 595, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_24613)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_While'
        return stypy_return_type_24613


    @norecursion
    def visit_TryExcept(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_TryExcept'
        module_type_store = module_type_store.open_function_context('visit_TryExcept', 657, 4, False)
        # Assigning a type to the variable 'self' (line 658)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 658, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_TryExcept')
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_TryExcept.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_TryExcept', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_TryExcept', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_TryExcept(...)' code ##################

        
        # Assigning a List to a Name (line 660):
        
        # Assigning a List to a Name (line 660):
        
        # Obtaining an instance of the builtin type 'list' (line 660)
        list_24614 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 660, 27), 'list')
        # Adding type elements to the builtin type 'list' instance (line 660)
        
        # Assigning a type to the variable 'try_except_stmts' (line 660)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 660, 8), 'try_except_stmts', list_24614)
        
        # Assigning a List to a Name (line 661):
        
        # Assigning a List to a Name (line 661):
        
        # Obtaining an instance of the builtin type 'list' (line 661)
        list_24615 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 661, 30), 'list')
        # Adding type elements to the builtin type 'list' instance (line 661)
        
        # Assigning a type to the variable 'handler_type_stores' (line 661)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 661, 8), 'handler_type_stores', list_24615)
        
        # Assigning a Call to a Name (line 662):
        
        # Assigning a Call to a Name (line 662):
        
        # Call to create_blank_line(...): (line 662)
        # Processing the call keyword arguments (line 662)
        kwargs_24618 = {}
        # Getting the type of 'stypy_functions_copy' (line 662)
        stypy_functions_copy_24616 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 662, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 662)
        create_blank_line_24617 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 662, 31), stypy_functions_copy_24616, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 662)
        create_blank_line_call_result_24619 = invoke(stypy.reporting.localization.Localization(__file__, 662, 31), create_blank_line_24617, *[], **kwargs_24618)
        
        # Assigning a type to the variable 'begin_except_comment' (line 662)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 662, 8), 'begin_except_comment', create_blank_line_call_result_24619)
        
        # Call to append(...): (line 665)
        # Processing the call arguments (line 665)
        
        # Call to create_src_comment(...): (line 665)
        # Processing the call arguments (line 665)
        str_24624 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 665, 72), 'str', 'SSA begins for try-except statement')
        # Getting the type of 'node' (line 665)
        node_24625 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 111), 'node', False)
        # Obtaining the member 'lineno' of a type (line 665)
        lineno_24626 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 111), node_24625, 'lineno')
        # Processing the call keyword arguments (line 665)
        kwargs_24627 = {}
        # Getting the type of 'stypy_functions_copy' (line 665)
        stypy_functions_copy_24622 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 665)
        create_src_comment_24623 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 32), stypy_functions_copy_24622, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 665)
        create_src_comment_call_result_24628 = invoke(stypy.reporting.localization.Localization(__file__, 665, 32), create_src_comment_24623, *[str_24624, lineno_24626], **kwargs_24627)
        
        # Processing the call keyword arguments (line 665)
        kwargs_24629 = {}
        # Getting the type of 'try_except_stmts' (line 665)
        try_except_stmts_24620 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 665, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 665)
        append_24621 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 665, 8), try_except_stmts_24620, 'append')
        # Calling append(args, kwargs) (line 665)
        append_call_result_24630 = invoke(stypy.reporting.localization.Localization(__file__, 665, 8), append_24621, *[create_src_comment_call_result_24628], **kwargs_24629)
        
        
        # Assigning a Call to a Tuple (line 666):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 666)
        # Processing the call keyword arguments (line 666)
        kwargs_24633 = {}
        # Getting the type of 'stypy_functions_copy' (line 666)
        stypy_functions_copy_24631 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 42), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 666)
        create_clone_type_store_24632 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 666, 42), stypy_functions_copy_24631, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 666)
        create_clone_type_store_call_result_24634 = invoke(stypy.reporting.localization.Localization(__file__, 666, 42), create_clone_type_store_24632, *[], **kwargs_24633)
        
        # Assigning a type to the variable 'call_assignment_22348' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_22348', create_clone_type_store_call_result_24634)
        
        # Assigning a Call to a Name (line 666):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22348' (line 666)
        call_assignment_22348_24635 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_22348', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24636 = stypy_get_value_from_tuple(call_assignment_22348_24635, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22349' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_22349', stypy_get_value_from_tuple_call_result_24636)
        
        # Assigning a Name to a Name (line 666):
        # Getting the type of 'call_assignment_22349' (line 666)
        call_assignment_22349_24637 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_22349')
        # Assigning a type to the variable 'clone_stmt1' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'clone_stmt1', call_assignment_22349_24637)
        
        # Assigning a Call to a Name (line 666):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22348' (line 666)
        call_assignment_22348_24638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_22348', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24639 = stypy_get_value_from_tuple(call_assignment_22348_24638, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22350' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_22350', stypy_get_value_from_tuple_call_result_24639)
        
        # Assigning a Name to a Name (line 666):
        # Getting the type of 'call_assignment_22350' (line 666)
        call_assignment_22350_24640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 666, 8), 'call_assignment_22350')
        # Assigning a type to the variable 'pre_try_type_store' (line 666)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 666, 21), 'pre_try_type_store', call_assignment_22350_24640)
        
        # Call to append(...): (line 667)
        # Processing the call arguments (line 667)
        # Getting the type of 'clone_stmt1' (line 667)
        clone_stmt1_24643 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 32), 'clone_stmt1', False)
        # Processing the call keyword arguments (line 667)
        kwargs_24644 = {}
        # Getting the type of 'try_except_stmts' (line 667)
        try_except_stmts_24641 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 667, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 667)
        append_24642 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 667, 8), try_except_stmts_24641, 'append')
        # Calling append(args, kwargs) (line 667)
        append_call_result_24645 = invoke(stypy.reporting.localization.Localization(__file__, 667, 8), append_24642, *[clone_stmt1_24643], **kwargs_24644)
        
        
        # Call to extend(...): (line 670)
        # Processing the call arguments (line 670)
        
        # Call to __visit_instruction_body(...): (line 670)
        # Processing the call arguments (line 670)
        # Getting the type of 'node' (line 670)
        node_24650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 62), 'node', False)
        # Obtaining the member 'body' of a type (line 670)
        body_24651 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 62), node_24650, 'body')
        # Getting the type of 'context' (line 670)
        context_24652 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 73), 'context', False)
        # Processing the call keyword arguments (line 670)
        kwargs_24653 = {}
        # Getting the type of 'self' (line 670)
        self_24648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 32), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 670)
        visit_instruction_body_24649 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 32), self_24648, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 670)
        visit_instruction_body_call_result_24654 = invoke(stypy.reporting.localization.Localization(__file__, 670, 32), visit_instruction_body_24649, *[body_24651, context_24652], **kwargs_24653)
        
        # Processing the call keyword arguments (line 670)
        kwargs_24655 = {}
        # Getting the type of 'try_except_stmts' (line 670)
        try_except_stmts_24646 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 670, 8), 'try_except_stmts', False)
        # Obtaining the member 'extend' of a type (line 670)
        extend_24647 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 670, 8), try_except_stmts_24646, 'extend')
        # Calling extend(args, kwargs) (line 670)
        extend_call_result_24656 = invoke(stypy.reporting.localization.Localization(__file__, 670, 8), extend_24647, *[visit_instruction_body_call_result_24654], **kwargs_24655)
        
        
        # Call to append(...): (line 672)
        # Processing the call arguments (line 672)
        
        # Call to create_src_comment(...): (line 673)
        # Processing the call arguments (line 673)
        str_24661 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 673, 52), 'str', 'SSA branch for the except part of a try statement')
        # Getting the type of 'node' (line 673)
        node_24662 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 673)
        lineno_24663 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 105), node_24662, 'lineno')
        # Processing the call keyword arguments (line 673)
        kwargs_24664 = {}
        # Getting the type of 'stypy_functions_copy' (line 673)
        stypy_functions_copy_24659 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 673, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 673)
        create_src_comment_24660 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 673, 12), stypy_functions_copy_24659, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 673)
        create_src_comment_call_result_24665 = invoke(stypy.reporting.localization.Localization(__file__, 673, 12), create_src_comment_24660, *[str_24661, lineno_24663], **kwargs_24664)
        
        # Processing the call keyword arguments (line 672)
        kwargs_24666 = {}
        # Getting the type of 'try_except_stmts' (line 672)
        try_except_stmts_24657 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 672, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 672)
        append_24658 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 672, 8), try_except_stmts_24657, 'append')
        # Calling append(args, kwargs) (line 672)
        append_call_result_24667 = invoke(stypy.reporting.localization.Localization(__file__, 672, 8), append_24658, *[create_src_comment_call_result_24665], **kwargs_24666)
        
        
        # Assigning a Call to a Tuple (line 674):
        
        # Assigning a Call to a Name:
        
        # Call to create_clone_type_store(...): (line 674)
        # Processing the call keyword arguments (line 674)
        kwargs_24670 = {}
        # Getting the type of 'stypy_functions_copy' (line 674)
        stypy_functions_copy_24668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 43), 'stypy_functions_copy', False)
        # Obtaining the member 'create_clone_type_store' of a type (line 674)
        create_clone_type_store_24669 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 674, 43), stypy_functions_copy_24668, 'create_clone_type_store')
        # Calling create_clone_type_store(args, kwargs) (line 674)
        create_clone_type_store_call_result_24671 = invoke(stypy.reporting.localization.Localization(__file__, 674, 43), create_clone_type_store_24669, *[], **kwargs_24670)
        
        # Assigning a type to the variable 'call_assignment_22351' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_22351', create_clone_type_store_call_result_24671)
        
        # Assigning a Call to a Name (line 674):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22351' (line 674)
        call_assignment_22351_24672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_22351', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24673 = stypy_get_value_from_tuple(call_assignment_22351_24672, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22352' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_22352', stypy_get_value_from_tuple_call_result_24673)
        
        # Assigning a Name to a Name (line 674):
        # Getting the type of 'call_assignment_22352' (line 674)
        call_assignment_22352_24674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_22352')
        # Assigning a type to the variable 'clone_stmt2' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'clone_stmt2', call_assignment_22352_24674)
        
        # Assigning a Call to a Name (line 674):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22351' (line 674)
        call_assignment_22351_24675 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_22351', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24676 = stypy_get_value_from_tuple(call_assignment_22351_24675, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22353' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_22353', stypy_get_value_from_tuple_call_result_24676)
        
        # Assigning a Name to a Name (line 674):
        # Getting the type of 'call_assignment_22353' (line 674)
        call_assignment_22353_24677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 674, 8), 'call_assignment_22353')
        # Assigning a type to the variable 'post_try_type_store' (line 674)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 674, 21), 'post_try_type_store', call_assignment_22353_24677)
        
        # Call to append(...): (line 675)
        # Processing the call arguments (line 675)
        # Getting the type of 'clone_stmt2' (line 675)
        clone_stmt2_24680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 32), 'clone_stmt2', False)
        # Processing the call keyword arguments (line 675)
        kwargs_24681 = {}
        # Getting the type of 'try_except_stmts' (line 675)
        try_except_stmts_24678 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 675, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 675)
        append_24679 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 675, 8), try_except_stmts_24678, 'append')
        # Calling append(args, kwargs) (line 675)
        append_call_result_24682 = invoke(stypy.reporting.localization.Localization(__file__, 675, 8), append_24679, *[clone_stmt2_24680], **kwargs_24681)
        
        
        # Getting the type of 'node' (line 678)
        node_24683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 678, 23), 'node')
        # Obtaining the member 'handlers' of a type (line 678)
        handlers_24684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 678, 23), node_24683, 'handlers')
        # Assigning a type to the variable 'handlers_24684' (line 678)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'handlers_24684', handlers_24684)
        # Testing if the for loop is going to be iterated (line 678)
        # Testing the type of a for loop iterable (line 678)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 678, 8), handlers_24684)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 678, 8), handlers_24684):
            # Getting the type of the for loop variable (line 678)
            for_loop_var_24685 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 678, 8), handlers_24684)
            # Assigning a type to the variable 'handler' (line 678)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 678, 8), 'handler', for_loop_var_24685)
            # SSA begins for a for statement (line 678)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Type idiom detected: calculating its left and rigth part (line 679)
            # Getting the type of 'handler' (line 679)
            handler_24686 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 15), 'handler')
            # Obtaining the member 'type' of a type (line 679)
            type_24687 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 679, 15), handler_24686, 'type')
            # Getting the type of 'None' (line 679)
            None_24688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 679, 31), 'None')
            
            (may_be_24689, more_types_in_union_24690) = may_be_none(type_24687, None_24688)

            if may_be_24689:

                if more_types_in_union_24690:
                    # Runtime conditional SSA (line 679)
                    module_type_store = SSAContext.create_ssa_context(module_type_store, 'idiom if')
                else:
                    module_type_store = module_type_store

                
                # Assigning a Str to a Name (line 680):
                
                # Assigning a Str to a Name (line 680):
                str_24691 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 680, 33), 'str', '<any exception>')
                # Assigning a type to the variable 'except_handler' (line 680)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 680, 16), 'except_handler', str_24691)

                if more_types_in_union_24690:
                    # Runtime conditional SSA for else branch (line 679)
                    module_type_store.open_ssa_branch('idiom else')



            if ((not may_be_24689) or more_types_in_union_24690):
                
                # Assigning a Attribute to a Name (line 682):
                
                # Assigning a Attribute to a Name (line 682):
                # Getting the type of 'handler' (line 682)
                handler_24692 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 682, 33), 'handler')
                # Obtaining the member 'type' of a type (line 682)
                type_24693 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 33), handler_24692, 'type')
                # Obtaining the member 'id' of a type (line 682)
                id_24694 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 682, 33), type_24693, 'id')
                # Assigning a type to the variable 'except_handler' (line 682)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 682, 16), 'except_handler', id_24694)

                if (may_be_24689 and more_types_in_union_24690):
                    # SSA join for if statement (line 679)
                    module_type_store = module_type_store.join_ssa_context()


            
            
            # Call to append(...): (line 684)
            # Processing the call arguments (line 684)
            
            # Call to create_src_comment(...): (line 684)
            # Processing the call arguments (line 684)
            
            # Call to format(...): (line 685)
            # Processing the call arguments (line 685)
            # Getting the type of 'except_handler' (line 685)
            except_handler_24701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 83), 'except_handler', False)
            # Processing the call keyword arguments (line 685)
            kwargs_24702 = {}
            str_24699 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 685, 16), 'str', "SSA branch for the except '{0}' branch of a try statement")
            # Obtaining the member 'format' of a type (line 685)
            format_24700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 16), str_24699, 'format')
            # Calling format(args, kwargs) (line 685)
            format_call_result_24703 = invoke(stypy.reporting.localization.Localization(__file__, 685, 16), format_24700, *[except_handler_24701], **kwargs_24702)
            
            # Getting the type of 'node' (line 685)
            node_24704 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 685, 100), 'node', False)
            # Obtaining the member 'lineno' of a type (line 685)
            lineno_24705 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 685, 100), node_24704, 'lineno')
            # Processing the call keyword arguments (line 684)
            kwargs_24706 = {}
            # Getting the type of 'stypy_functions_copy' (line 684)
            stypy_functions_copy_24697 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 36), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 684)
            create_src_comment_24698 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 36), stypy_functions_copy_24697, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 684)
            create_src_comment_call_result_24707 = invoke(stypy.reporting.localization.Localization(__file__, 684, 36), create_src_comment_24698, *[format_call_result_24703, lineno_24705], **kwargs_24706)
            
            # Processing the call keyword arguments (line 684)
            kwargs_24708 = {}
            # Getting the type of 'try_except_stmts' (line 684)
            try_except_stmts_24695 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 684, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 684)
            append_24696 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 684, 12), try_except_stmts_24695, 'append')
            # Calling append(args, kwargs) (line 684)
            append_call_result_24709 = invoke(stypy.reporting.localization.Localization(__file__, 684, 12), append_24696, *[create_src_comment_call_result_24707], **kwargs_24708)
            
            
            # Assigning a Call to a Name (line 687):
            
            # Assigning a Call to a Name (line 687):
            
            # Call to create_set_type_store(...): (line 687)
            # Processing the call arguments (line 687)
            # Getting the type of 'pre_try_type_store' (line 687)
            pre_try_type_store_24712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 80), 'pre_try_type_store', False)
            # Processing the call keyword arguments (line 687)
            kwargs_24713 = {}
            # Getting the type of 'stypy_functions_copy' (line 687)
            stypy_functions_copy_24710 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 687, 37), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_store' of a type (line 687)
            create_set_type_store_24711 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 687, 37), stypy_functions_copy_24710, 'create_set_type_store')
            # Calling create_set_type_store(args, kwargs) (line 687)
            create_set_type_store_call_result_24714 = invoke(stypy.reporting.localization.Localization(__file__, 687, 37), create_set_type_store_24711, *[pre_try_type_store_24712], **kwargs_24713)
            
            # Assigning a type to the variable 'set_type_store_handler' (line 687)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 687, 12), 'set_type_store_handler', create_set_type_store_call_result_24714)
            
            # Call to append(...): (line 688)
            # Processing the call arguments (line 688)
            # Getting the type of 'set_type_store_handler' (line 688)
            set_type_store_handler_24717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 36), 'set_type_store_handler', False)
            # Processing the call keyword arguments (line 688)
            kwargs_24718 = {}
            # Getting the type of 'try_except_stmts' (line 688)
            try_except_stmts_24715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 688, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 688)
            append_24716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 688, 12), try_except_stmts_24715, 'append')
            # Calling append(args, kwargs) (line 688)
            append_call_result_24719 = invoke(stypy.reporting.localization.Localization(__file__, 688, 12), append_24716, *[set_type_store_handler_24717], **kwargs_24718)
            
            
            # Evaluating a boolean operation
            
            
            # Getting the type of 'handler' (line 690)
            handler_24720 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 19), 'handler')
            # Obtaining the member 'type' of a type (line 690)
            type_24721 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 19), handler_24720, 'type')
            # Getting the type of 'None' (line 690)
            None_24722 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 35), 'None')
            # Applying the binary operator 'is' (line 690)
            result_is__24723 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 19), 'is', type_24721, None_24722)
            
            # Applying the 'not' unary operator (line 690)
            result_not__24724 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 15), 'not', result_is__24723)
            
            
            
            # Getting the type of 'handler' (line 690)
            handler_24725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 48), 'handler')
            # Obtaining the member 'name' of a type (line 690)
            name_24726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 690, 48), handler_24725, 'name')
            # Getting the type of 'None' (line 690)
            None_24727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 690, 64), 'None')
            # Applying the binary operator 'is' (line 690)
            result_is__24728 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 48), 'is', name_24726, None_24727)
            
            # Applying the 'not' unary operator (line 690)
            result_not__24729 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 44), 'not', result_is__24728)
            
            # Applying the binary operator 'and' (line 690)
            result_and_keyword_24730 = python_operator(stypy.reporting.localization.Localization(__file__, 690, 15), 'and', result_not__24724, result_not__24729)
            
            # Testing if the type of an if condition is none (line 690)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 690, 12), result_and_keyword_24730):
                pass
            else:
                
                # Testing the type of an if condition (line 690)
                if_condition_24731 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 690, 12), result_and_keyword_24730)
                # Assigning a type to the variable 'if_condition_24731' (line 690)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 690, 12), 'if_condition_24731', if_condition_24731)
                # SSA begins for if statement (line 690)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Call to append(...): (line 691)
                # Processing the call arguments (line 691)
                
                # Call to create_src_comment(...): (line 691)
                # Processing the call arguments (line 691)
                str_24736 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 691, 80), 'str', 'Storing handler type')
                # Processing the call keyword arguments (line 691)
                kwargs_24737 = {}
                # Getting the type of 'stypy_functions_copy' (line 691)
                stypy_functions_copy_24734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 40), 'stypy_functions_copy', False)
                # Obtaining the member 'create_src_comment' of a type (line 691)
                create_src_comment_24735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 40), stypy_functions_copy_24734, 'create_src_comment')
                # Calling create_src_comment(args, kwargs) (line 691)
                create_src_comment_call_result_24738 = invoke(stypy.reporting.localization.Localization(__file__, 691, 40), create_src_comment_24735, *[str_24736], **kwargs_24737)
                
                # Processing the call keyword arguments (line 691)
                kwargs_24739 = {}
                # Getting the type of 'try_except_stmts' (line 691)
                try_except_stmts_24732 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 691, 16), 'try_except_stmts', False)
                # Obtaining the member 'append' of a type (line 691)
                append_24733 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 691, 16), try_except_stmts_24732, 'append')
                # Calling append(args, kwargs) (line 691)
                append_call_result_24740 = invoke(stypy.reporting.localization.Localization(__file__, 691, 16), append_24733, *[create_src_comment_call_result_24738], **kwargs_24739)
                
                
                # Assigning a Call to a Tuple (line 692):
                
                # Assigning a Call to a Name:
                
                # Call to visit(...): (line 692)
                # Processing the call arguments (line 692)
                # Getting the type of 'handler' (line 692)
                handler_24743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 65), 'handler', False)
                # Obtaining the member 'type' of a type (line 692)
                type_24744 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 65), handler_24743, 'type')
                # Getting the type of 'context' (line 692)
                context_24745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 79), 'context', False)
                # Processing the call keyword arguments (line 692)
                kwargs_24746 = {}
                # Getting the type of 'self' (line 692)
                self_24741 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 54), 'self', False)
                # Obtaining the member 'visit' of a type (line 692)
                visit_24742 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 692, 54), self_24741, 'visit')
                # Calling visit(args, kwargs) (line 692)
                visit_call_result_24747 = invoke(stypy.reporting.localization.Localization(__file__, 692, 54), visit_24742, *[type_24744, context_24745], **kwargs_24746)
                
                # Assigning a type to the variable 'call_assignment_22354' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_22354', visit_call_result_24747)
                
                # Assigning a Call to a Name (line 692):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22354' (line 692)
                call_assignment_22354_24748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_22354', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_24749 = stypy_get_value_from_tuple(call_assignment_22354_24748, 2, 0)
                
                # Assigning a type to the variable 'call_assignment_22355' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_22355', stypy_get_value_from_tuple_call_result_24749)
                
                # Assigning a Name to a Name (line 692):
                # Getting the type of 'call_assignment_22355' (line 692)
                call_assignment_22355_24750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_22355')
                # Assigning a type to the variable 'handler_type_stmts' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'handler_type_stmts', call_assignment_22355_24750)
                
                # Assigning a Call to a Name (line 692):
                
                # Call to stypy_get_value_from_tuple(...):
                # Processing the call arguments
                # Getting the type of 'call_assignment_22354' (line 692)
                call_assignment_22354_24751 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_22354', False)
                # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
                stypy_get_value_from_tuple_call_result_24752 = stypy_get_value_from_tuple(call_assignment_22354_24751, 2, 1)
                
                # Assigning a type to the variable 'call_assignment_22356' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_22356', stypy_get_value_from_tuple_call_result_24752)
                
                # Assigning a Name to a Name (line 692):
                # Getting the type of 'call_assignment_22356' (line 692)
                call_assignment_22356_24753 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 692, 16), 'call_assignment_22356')
                # Assigning a type to the variable 'handle_type_var' (line 692)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 692, 36), 'handle_type_var', call_assignment_22356_24753)
                
                # Assigning a Call to a Name (line 693):
                
                # Assigning a Call to a Name (line 693):
                
                # Call to create_set_type_of(...): (line 693)
                # Processing the call arguments (line 693)
                # Getting the type of 'handler' (line 693)
                handler_24756 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 78), 'handler', False)
                # Obtaining the member 'name' of a type (line 693)
                name_24757 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 78), handler_24756, 'name')
                # Obtaining the member 'id' of a type (line 693)
                id_24758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 78), name_24757, 'id')
                # Getting the type of 'handle_type_var' (line 693)
                handle_type_var_24759 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 95), 'handle_type_var', False)
                # Getting the type of 'handler' (line 694)
                handler_24760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 694, 73), 'handler', False)
                # Obtaining the member 'lineno' of a type (line 694)
                lineno_24761 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 694, 73), handler_24760, 'lineno')
                # Getting the type of 'handler' (line 695)
                handler_24762 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 695, 73), 'handler', False)
                # Obtaining the member 'col_offset' of a type (line 695)
                col_offset_24763 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 695, 73), handler_24762, 'col_offset')
                # Processing the call keyword arguments (line 693)
                kwargs_24764 = {}
                # Getting the type of 'stypy_functions_copy' (line 693)
                stypy_functions_copy_24754 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 693, 38), 'stypy_functions_copy', False)
                # Obtaining the member 'create_set_type_of' of a type (line 693)
                create_set_type_of_24755 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 693, 38), stypy_functions_copy_24754, 'create_set_type_of')
                # Calling create_set_type_of(args, kwargs) (line 693)
                create_set_type_of_call_result_24765 = invoke(stypy.reporting.localization.Localization(__file__, 693, 38), create_set_type_of_24755, *[id_24758, handle_type_var_24759, lineno_24761, col_offset_24763], **kwargs_24764)
                
                # Assigning a type to the variable 'handler_name_assign' (line 693)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 693, 16), 'handler_name_assign', create_set_type_of_call_result_24765)
                
                # Call to append(...): (line 696)
                # Processing the call arguments (line 696)
                # Getting the type of 'handler_type_stmts' (line 696)
                handler_type_stmts_24768 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 40), 'handler_type_stmts', False)
                # Processing the call keyword arguments (line 696)
                kwargs_24769 = {}
                # Getting the type of 'try_except_stmts' (line 696)
                try_except_stmts_24766 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 696, 16), 'try_except_stmts', False)
                # Obtaining the member 'append' of a type (line 696)
                append_24767 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 696, 16), try_except_stmts_24766, 'append')
                # Calling append(args, kwargs) (line 696)
                append_call_result_24770 = invoke(stypy.reporting.localization.Localization(__file__, 696, 16), append_24767, *[handler_type_stmts_24768], **kwargs_24769)
                
                
                # Call to append(...): (line 697)
                # Processing the call arguments (line 697)
                # Getting the type of 'handler_name_assign' (line 697)
                handler_name_assign_24773 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 40), 'handler_name_assign', False)
                # Processing the call keyword arguments (line 697)
                kwargs_24774 = {}
                # Getting the type of 'try_except_stmts' (line 697)
                try_except_stmts_24771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 697, 16), 'try_except_stmts', False)
                # Obtaining the member 'append' of a type (line 697)
                append_24772 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 697, 16), try_except_stmts_24771, 'append')
                # Calling append(args, kwargs) (line 697)
                append_call_result_24775 = invoke(stypy.reporting.localization.Localization(__file__, 697, 16), append_24772, *[handler_name_assign_24773], **kwargs_24774)
                
                # SSA join for if statement (line 690)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Call to extend(...): (line 700)
            # Processing the call arguments (line 700)
            
            # Call to __visit_instruction_body(...): (line 700)
            # Processing the call arguments (line 700)
            # Getting the type of 'handler' (line 700)
            handler_24780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 66), 'handler', False)
            # Obtaining the member 'body' of a type (line 700)
            body_24781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 66), handler_24780, 'body')
            # Getting the type of 'context' (line 700)
            context_24782 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 80), 'context', False)
            # Processing the call keyword arguments (line 700)
            kwargs_24783 = {}
            # Getting the type of 'self' (line 700)
            self_24778 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 36), 'self', False)
            # Obtaining the member '__visit_instruction_body' of a type (line 700)
            visit_instruction_body_24779 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 36), self_24778, '__visit_instruction_body')
            # Calling __visit_instruction_body(args, kwargs) (line 700)
            visit_instruction_body_call_result_24784 = invoke(stypy.reporting.localization.Localization(__file__, 700, 36), visit_instruction_body_24779, *[body_24781, context_24782], **kwargs_24783)
            
            # Processing the call keyword arguments (line 700)
            kwargs_24785 = {}
            # Getting the type of 'try_except_stmts' (line 700)
            try_except_stmts_24776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 700, 12), 'try_except_stmts', False)
            # Obtaining the member 'extend' of a type (line 700)
            extend_24777 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 700, 12), try_except_stmts_24776, 'extend')
            # Calling extend(args, kwargs) (line 700)
            extend_call_result_24786 = invoke(stypy.reporting.localization.Localization(__file__, 700, 12), extend_24777, *[visit_instruction_body_call_result_24784], **kwargs_24785)
            
            
            # Assigning a Call to a Tuple (line 702):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 702)
            # Processing the call keyword arguments (line 702)
            kwargs_24789 = {}
            # Getting the type of 'stypy_functions_copy' (line 702)
            stypy_functions_copy_24787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 60), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 702)
            create_clone_type_store_24788 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 702, 60), stypy_functions_copy_24787, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 702)
            create_clone_type_store_call_result_24790 = invoke(stypy.reporting.localization.Localization(__file__, 702, 60), create_clone_type_store_24788, *[], **kwargs_24789)
            
            # Assigning a type to the variable 'call_assignment_22357' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_22357', create_clone_type_store_call_result_24790)
            
            # Assigning a Call to a Name (line 702):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22357' (line 702)
            call_assignment_22357_24791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_22357', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_24792 = stypy_get_value_from_tuple(call_assignment_22357_24791, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22358' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_22358', stypy_get_value_from_tuple_call_result_24792)
            
            # Assigning a Name to a Name (line 702):
            # Getting the type of 'call_assignment_22358' (line 702)
            call_assignment_22358_24793 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_22358')
            # Assigning a type to the variable 'clone_stmt_handler' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'clone_stmt_handler', call_assignment_22358_24793)
            
            # Assigning a Call to a Name (line 702):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22357' (line 702)
            call_assignment_22357_24794 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_22357', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_24795 = stypy_get_value_from_tuple(call_assignment_22357_24794, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22359' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_22359', stypy_get_value_from_tuple_call_result_24795)
            
            # Assigning a Name to a Name (line 702):
            # Getting the type of 'call_assignment_22359' (line 702)
            call_assignment_22359_24796 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 702, 12), 'call_assignment_22359')
            # Assigning a type to the variable 'type_store_except_handler' (line 702)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 702, 32), 'type_store_except_handler', call_assignment_22359_24796)
            
            # Call to append(...): (line 703)
            # Processing the call arguments (line 703)
            # Getting the type of 'clone_stmt_handler' (line 703)
            clone_stmt_handler_24799 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 36), 'clone_stmt_handler', False)
            # Processing the call keyword arguments (line 703)
            kwargs_24800 = {}
            # Getting the type of 'try_except_stmts' (line 703)
            try_except_stmts_24797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 703, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 703)
            append_24798 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 703, 12), try_except_stmts_24797, 'append')
            # Calling append(args, kwargs) (line 703)
            append_call_result_24801 = invoke(stypy.reporting.localization.Localization(__file__, 703, 12), append_24798, *[clone_stmt_handler_24799], **kwargs_24800)
            
            
            # Call to append(...): (line 704)
            # Processing the call arguments (line 704)
            # Getting the type of 'type_store_except_handler' (line 704)
            type_store_except_handler_24804 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 39), 'type_store_except_handler', False)
            # Processing the call keyword arguments (line 704)
            kwargs_24805 = {}
            # Getting the type of 'handler_type_stores' (line 704)
            handler_type_stores_24802 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 704, 12), 'handler_type_stores', False)
            # Obtaining the member 'append' of a type (line 704)
            append_24803 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 704, 12), handler_type_stores_24802, 'append')
            # Calling append(args, kwargs) (line 704)
            append_call_result_24806 = invoke(stypy.reporting.localization.Localization(__file__, 704, 12), append_24803, *[type_store_except_handler_24804], **kwargs_24805)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to append(...): (line 707)
        # Processing the call arguments (line 707)
        
        # Call to create_src_comment(...): (line 707)
        # Processing the call arguments (line 707)
        str_24811 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 708, 12), 'str', 'SSA branch for the else branch of a try statement')
        # Getting the type of 'node' (line 708)
        node_24812 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 708, 65), 'node', False)
        # Obtaining the member 'lineno' of a type (line 708)
        lineno_24813 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 708, 65), node_24812, 'lineno')
        # Processing the call keyword arguments (line 707)
        kwargs_24814 = {}
        # Getting the type of 'stypy_functions_copy' (line 707)
        stypy_functions_copy_24809 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 707)
        create_src_comment_24810 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 32), stypy_functions_copy_24809, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 707)
        create_src_comment_call_result_24815 = invoke(stypy.reporting.localization.Localization(__file__, 707, 32), create_src_comment_24810, *[str_24811, lineno_24813], **kwargs_24814)
        
        # Processing the call keyword arguments (line 707)
        kwargs_24816 = {}
        # Getting the type of 'try_except_stmts' (line 707)
        try_except_stmts_24807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 707, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 707)
        append_24808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 707, 8), try_except_stmts_24807, 'append')
        # Calling append(args, kwargs) (line 707)
        append_call_result_24817 = invoke(stypy.reporting.localization.Localization(__file__, 707, 8), append_24808, *[create_src_comment_call_result_24815], **kwargs_24816)
        
        
        # Assigning a Call to a Name (line 709):
        
        # Assigning a Call to a Name (line 709):
        
        # Call to create_set_type_store(...): (line 709)
        # Processing the call arguments (line 709)
        # Getting the type of 'pre_try_type_store' (line 709)
        pre_try_type_store_24820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 76), 'pre_try_type_store', False)
        # Processing the call keyword arguments (line 709)
        kwargs_24821 = {}
        # Getting the type of 'stypy_functions_copy' (line 709)
        stypy_functions_copy_24818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 709, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 709)
        create_set_type_store_24819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 709, 33), stypy_functions_copy_24818, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 709)
        create_set_type_store_call_result_24822 = invoke(stypy.reporting.localization.Localization(__file__, 709, 33), create_set_type_store_24819, *[pre_try_type_store_24820], **kwargs_24821)
        
        # Assigning a type to the variable 'set_type_store_handler' (line 709)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 709, 8), 'set_type_store_handler', create_set_type_store_call_result_24822)
        
        # Call to append(...): (line 710)
        # Processing the call arguments (line 710)
        # Getting the type of 'set_type_store_handler' (line 710)
        set_type_store_handler_24825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 32), 'set_type_store_handler', False)
        # Processing the call keyword arguments (line 710)
        kwargs_24826 = {}
        # Getting the type of 'try_except_stmts' (line 710)
        try_except_stmts_24823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 710, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 710)
        append_24824 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 710, 8), try_except_stmts_24823, 'append')
        # Calling append(args, kwargs) (line 710)
        append_call_result_24827 = invoke(stypy.reporting.localization.Localization(__file__, 710, 8), append_24824, *[set_type_store_handler_24825], **kwargs_24826)
        
        
        
        # Call to len(...): (line 713)
        # Processing the call arguments (line 713)
        # Getting the type of 'node' (line 713)
        node_24829 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 15), 'node', False)
        # Obtaining the member 'orelse' of a type (line 713)
        orelse_24830 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 713, 15), node_24829, 'orelse')
        # Processing the call keyword arguments (line 713)
        kwargs_24831 = {}
        # Getting the type of 'len' (line 713)
        len_24828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 713, 11), 'len', False)
        # Calling len(args, kwargs) (line 713)
        len_call_result_24832 = invoke(stypy.reporting.localization.Localization(__file__, 713, 11), len_24828, *[orelse_24830], **kwargs_24831)
        
        int_24833 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 713, 30), 'int')
        # Applying the binary operator '>' (line 713)
        result_gt_24834 = python_operator(stypy.reporting.localization.Localization(__file__, 713, 11), '>', len_call_result_24832, int_24833)
        
        # Testing if the type of an if condition is none (line 713)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 713, 8), result_gt_24834):
            pass
        else:
            
            # Testing the type of an if condition (line 713)
            if_condition_24835 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 713, 8), result_gt_24834)
            # Assigning a type to the variable 'if_condition_24835' (line 713)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 713, 8), 'if_condition_24835', if_condition_24835)
            # SSA begins for if statement (line 713)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Call to extend(...): (line 714)
            # Processing the call arguments (line 714)
            
            # Call to __visit_instruction_body(...): (line 714)
            # Processing the call arguments (line 714)
            # Getting the type of 'node' (line 714)
            node_24840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 66), 'node', False)
            # Obtaining the member 'orelse' of a type (line 714)
            orelse_24841 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 66), node_24840, 'orelse')
            # Getting the type of 'context' (line 714)
            context_24842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 79), 'context', False)
            # Processing the call keyword arguments (line 714)
            kwargs_24843 = {}
            # Getting the type of 'self' (line 714)
            self_24838 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 36), 'self', False)
            # Obtaining the member '__visit_instruction_body' of a type (line 714)
            visit_instruction_body_24839 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 36), self_24838, '__visit_instruction_body')
            # Calling __visit_instruction_body(args, kwargs) (line 714)
            visit_instruction_body_call_result_24844 = invoke(stypy.reporting.localization.Localization(__file__, 714, 36), visit_instruction_body_24839, *[orelse_24841, context_24842], **kwargs_24843)
            
            # Processing the call keyword arguments (line 714)
            kwargs_24845 = {}
            # Getting the type of 'try_except_stmts' (line 714)
            try_except_stmts_24836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 714, 12), 'try_except_stmts', False)
            # Obtaining the member 'extend' of a type (line 714)
            extend_24837 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 714, 12), try_except_stmts_24836, 'extend')
            # Calling extend(args, kwargs) (line 714)
            extend_call_result_24846 = invoke(stypy.reporting.localization.Localization(__file__, 714, 12), extend_24837, *[visit_instruction_body_call_result_24844], **kwargs_24845)
            
            
            # Assigning a Call to a Tuple (line 716):
            
            # Assigning a Call to a Name:
            
            # Call to create_clone_type_store(...): (line 716)
            # Processing the call keyword arguments (line 716)
            kwargs_24849 = {}
            # Getting the type of 'stypy_functions_copy' (line 716)
            stypy_functions_copy_24847 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 58), 'stypy_functions_copy', False)
            # Obtaining the member 'create_clone_type_store' of a type (line 716)
            create_clone_type_store_24848 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 716, 58), stypy_functions_copy_24847, 'create_clone_type_store')
            # Calling create_clone_type_store(args, kwargs) (line 716)
            create_clone_type_store_call_result_24850 = invoke(stypy.reporting.localization.Localization(__file__, 716, 58), create_clone_type_store_24848, *[], **kwargs_24849)
            
            # Assigning a type to the variable 'call_assignment_22360' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_22360', create_clone_type_store_call_result_24850)
            
            # Assigning a Call to a Name (line 716):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22360' (line 716)
            call_assignment_22360_24851 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_22360', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_24852 = stypy_get_value_from_tuple(call_assignment_22360_24851, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22361' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_22361', stypy_get_value_from_tuple_call_result_24852)
            
            # Assigning a Name to a Name (line 716):
            # Getting the type of 'call_assignment_22361' (line 716)
            call_assignment_22361_24853 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_22361')
            # Assigning a type to the variable 'clone_stmt_handler' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'clone_stmt_handler', call_assignment_22361_24853)
            
            # Assigning a Call to a Name (line 716):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22360' (line 716)
            call_assignment_22360_24854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_22360', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_24855 = stypy_get_value_from_tuple(call_assignment_22360_24854, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22362' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_22362', stypy_get_value_from_tuple_call_result_24855)
            
            # Assigning a Name to a Name (line 716):
            # Getting the type of 'call_assignment_22362' (line 716)
            call_assignment_22362_24856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 716, 12), 'call_assignment_22362')
            # Assigning a type to the variable 'type_store_else_handler' (line 716)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 716, 32), 'type_store_else_handler', call_assignment_22362_24856)
            
            # Call to append(...): (line 717)
            # Processing the call arguments (line 717)
            # Getting the type of 'clone_stmt_handler' (line 717)
            clone_stmt_handler_24859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 36), 'clone_stmt_handler', False)
            # Processing the call keyword arguments (line 717)
            kwargs_24860 = {}
            # Getting the type of 'try_except_stmts' (line 717)
            try_except_stmts_24857 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 717, 12), 'try_except_stmts', False)
            # Obtaining the member 'append' of a type (line 717)
            append_24858 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 717, 12), try_except_stmts_24857, 'append')
            # Calling append(args, kwargs) (line 717)
            append_call_result_24861 = invoke(stypy.reporting.localization.Localization(__file__, 717, 12), append_24858, *[clone_stmt_handler_24859], **kwargs_24860)
            
            
            # Call to append(...): (line 718)
            # Processing the call arguments (line 718)
            # Getting the type of 'type_store_else_handler' (line 718)
            type_store_else_handler_24864 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 39), 'type_store_else_handler', False)
            # Processing the call keyword arguments (line 718)
            kwargs_24865 = {}
            # Getting the type of 'handler_type_stores' (line 718)
            handler_type_stores_24862 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 718, 12), 'handler_type_stores', False)
            # Obtaining the member 'append' of a type (line 718)
            append_24863 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 718, 12), handler_type_stores_24862, 'append')
            # Calling append(args, kwargs) (line 718)
            append_call_result_24866 = invoke(stypy.reporting.localization.Localization(__file__, 718, 12), append_24863, *[type_store_else_handler_24864], **kwargs_24865)
            
            # SSA join for if statement (line 713)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Call to append(...): (line 721)
        # Processing the call arguments (line 721)
        
        # Call to create_src_comment(...): (line 721)
        # Processing the call arguments (line 721)
        str_24871 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 721, 72), 'str', 'SSA join for try-except statement')
        # Getting the type of 'node' (line 721)
        node_24872 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 109), 'node', False)
        # Obtaining the member 'lineno' of a type (line 721)
        lineno_24873 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 109), node_24872, 'lineno')
        # Processing the call keyword arguments (line 721)
        kwargs_24874 = {}
        # Getting the type of 'stypy_functions_copy' (line 721)
        stypy_functions_copy_24869 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 721)
        create_src_comment_24870 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 32), stypy_functions_copy_24869, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 721)
        create_src_comment_call_result_24875 = invoke(stypy.reporting.localization.Localization(__file__, 721, 32), create_src_comment_24870, *[str_24871, lineno_24873], **kwargs_24874)
        
        # Processing the call keyword arguments (line 721)
        kwargs_24876 = {}
        # Getting the type of 'try_except_stmts' (line 721)
        try_except_stmts_24867 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 721, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 721)
        append_24868 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 721, 8), try_except_stmts_24867, 'append')
        # Calling append(args, kwargs) (line 721)
        append_call_result_24877 = invoke(stypy.reporting.localization.Localization(__file__, 721, 8), append_24868, *[create_src_comment_call_result_24875], **kwargs_24876)
        
        
        # Assigning a Call to a Tuple (line 722):
        
        # Assigning a Call to a Name:
        
        # Call to create_join_type_store(...): (line 722)
        # Processing the call arguments (line 722)
        str_24880 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 722, 82), 'str', 'join_exception_block')
        
        # Obtaining an instance of the builtin type 'list' (line 723)
        list_24881 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 723, 77), 'list')
        # Adding type elements to the builtin type 'list' instance (line 723)
        # Adding element type (line 723)
        # Getting the type of 'pre_try_type_store' (line 723)
        pre_try_type_store_24882 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 78), 'pre_try_type_store', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 77), list_24881, pre_try_type_store_24882)
        # Adding element type (line 723)
        # Getting the type of 'post_try_type_store' (line 723)
        post_try_type_store_24883 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 723, 98), 'post_try_type_store', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 77), list_24881, post_try_type_store_24883)
        # Adding element type (line 723)
        
        # Call to create_Name(...): (line 724)
        # Processing the call arguments (line 724)
        str_24886 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 725, 82), 'str', 'None')
        # Processing the call keyword arguments (line 724)
        kwargs_24887 = {}
        # Getting the type of 'core_language_copy' (line 724)
        core_language_copy_24884 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 724, 78), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 724)
        create_Name_24885 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 724, 78), core_language_copy_24884, 'create_Name')
        # Calling create_Name(args, kwargs) (line 724)
        create_Name_call_result_24888 = invoke(stypy.reporting.localization.Localization(__file__, 724, 78), create_Name_24885, *[str_24886], **kwargs_24887)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 723, 77), list_24881, create_Name_call_result_24888)
        
        # Getting the type of 'handler_type_stores' (line 725)
        handler_type_stores_24889 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 725, 93), 'handler_type_stores', False)
        # Applying the binary operator '+' (line 723)
        result_add_24890 = python_operator(stypy.reporting.localization.Localization(__file__, 723, 77), '+', list_24881, handler_type_stores_24889)
        
        # Processing the call keyword arguments (line 722)
        kwargs_24891 = {}
        # Getting the type of 'stypy_functions_copy' (line 722)
        stypy_functions_copy_24878 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_join_type_store' of a type (line 722)
        create_join_type_store_24879 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 722, 38), stypy_functions_copy_24878, 'create_join_type_store')
        # Calling create_join_type_store(args, kwargs) (line 722)
        create_join_type_store_call_result_24892 = invoke(stypy.reporting.localization.Localization(__file__, 722, 38), create_join_type_store_24879, *[str_24880, result_add_24890], **kwargs_24891)
        
        # Assigning a type to the variable 'call_assignment_22363' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_22363', create_join_type_store_call_result_24892)
        
        # Assigning a Call to a Name (line 722):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22363' (line 722)
        call_assignment_22363_24893 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_22363', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24894 = stypy_get_value_from_tuple(call_assignment_22363_24893, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22364' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_22364', stypy_get_value_from_tuple_call_result_24894)
        
        # Assigning a Name to a Name (line 722):
        # Getting the type of 'call_assignment_22364' (line 722)
        call_assignment_22364_24895 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_22364')
        # Assigning a type to the variable 'join_stmt' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'join_stmt', call_assignment_22364_24895)
        
        # Assigning a Call to a Name (line 722):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22363' (line 722)
        call_assignment_22363_24896 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_22363', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_24897 = stypy_get_value_from_tuple(call_assignment_22363_24896, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22365' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_22365', stypy_get_value_from_tuple_call_result_24897)
        
        # Assigning a Name to a Name (line 722):
        # Getting the type of 'call_assignment_22365' (line 722)
        call_assignment_22365_24898 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 722, 8), 'call_assignment_22365')
        # Assigning a type to the variable 'final_type_store' (line 722)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 722, 19), 'final_type_store', call_assignment_22365_24898)
        
        # Call to append(...): (line 726)
        # Processing the call arguments (line 726)
        # Getting the type of 'join_stmt' (line 726)
        join_stmt_24901 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 32), 'join_stmt', False)
        # Processing the call keyword arguments (line 726)
        kwargs_24902 = {}
        # Getting the type of 'try_except_stmts' (line 726)
        try_except_stmts_24899 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 726, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 726)
        append_24900 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 726, 8), try_except_stmts_24899, 'append')
        # Calling append(args, kwargs) (line 726)
        append_call_result_24903 = invoke(stypy.reporting.localization.Localization(__file__, 726, 8), append_24900, *[join_stmt_24901], **kwargs_24902)
        
        
        # Assigning a Call to a Name (line 729):
        
        # Assigning a Call to a Name (line 729):
        
        # Call to create_set_type_store(...): (line 729)
        # Processing the call arguments (line 729)
        # Getting the type of 'final_type_store' (line 729)
        final_type_store_24906 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 74), 'final_type_store', False)
        # Processing the call keyword arguments (line 729)
        kwargs_24907 = {}
        # Getting the type of 'stypy_functions_copy' (line 729)
        stypy_functions_copy_24904 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 729, 31), 'stypy_functions_copy', False)
        # Obtaining the member 'create_set_type_store' of a type (line 729)
        create_set_type_store_24905 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 729, 31), stypy_functions_copy_24904, 'create_set_type_store')
        # Calling create_set_type_store(args, kwargs) (line 729)
        create_set_type_store_call_result_24908 = invoke(stypy.reporting.localization.Localization(__file__, 729, 31), create_set_type_store_24905, *[final_type_store_24906], **kwargs_24907)
        
        # Assigning a type to the variable 'set_type_store_final' (line 729)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 729, 8), 'set_type_store_final', create_set_type_store_call_result_24908)
        
        # Call to append(...): (line 730)
        # Processing the call arguments (line 730)
        # Getting the type of 'set_type_store_final' (line 730)
        set_type_store_final_24911 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 32), 'set_type_store_final', False)
        # Processing the call keyword arguments (line 730)
        kwargs_24912 = {}
        # Getting the type of 'try_except_stmts' (line 730)
        try_except_stmts_24909 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 730, 8), 'try_except_stmts', False)
        # Obtaining the member 'append' of a type (line 730)
        append_24910 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 730, 8), try_except_stmts_24909, 'append')
        # Calling append(args, kwargs) (line 730)
        append_call_result_24913 = invoke(stypy.reporting.localization.Localization(__file__, 730, 8), append_24910, *[set_type_store_final_24911], **kwargs_24912)
        
        
        # Assigning a Call to a Name (line 733):
        
        # Assigning a Call to a Name (line 733):
        
        # Call to flatten_lists(...): (line 733)
        # Processing the call arguments (line 733)
        # Getting the type of 'begin_except_comment' (line 733)
        begin_except_comment_24916 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 65), 'begin_except_comment', False)
        # Getting the type of 'try_except_stmts' (line 733)
        try_except_stmts_24917 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 87), 'try_except_stmts', False)
        # Processing the call keyword arguments (line 733)
        kwargs_24918 = {}
        # Getting the type of 'stypy_functions_copy' (line 733)
        stypy_functions_copy_24914 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 733, 30), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 733)
        flatten_lists_24915 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 733, 30), stypy_functions_copy_24914, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 733)
        flatten_lists_call_result_24919 = invoke(stypy.reporting.localization.Localization(__file__, 733, 30), flatten_lists_24915, *[begin_except_comment_24916, try_except_stmts_24917], **kwargs_24918)
        
        # Assigning a type to the variable 'all_try_except_stmt' (line 733)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 733, 8), 'all_try_except_stmt', flatten_lists_call_result_24919)
        
        # Assigning a Call to a Name (line 735):
        
        # Assigning a Call to a Name (line 735):
        
        # Call to create_blank_line(...): (line 735)
        # Processing the call keyword arguments (line 735)
        kwargs_24922 = {}
        # Getting the type of 'stypy_functions_copy' (line 735)
        stypy_functions_copy_24920 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 735, 29), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 735)
        create_blank_line_24921 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 735, 29), stypy_functions_copy_24920, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 735)
        create_blank_line_call_result_24923 = invoke(stypy.reporting.localization.Localization(__file__, 735, 29), create_blank_line_24921, *[], **kwargs_24922)
        
        # Assigning a type to the variable 'end_except_comment' (line 735)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 735, 8), 'end_except_comment', create_blank_line_call_result_24923)
        
        # Call to flatten_lists(...): (line 737)
        # Processing the call arguments (line 737)
        # Getting the type of 'begin_except_comment' (line 737)
        begin_except_comment_24926 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 50), 'begin_except_comment', False)
        # Getting the type of 'all_try_except_stmt' (line 738)
        all_try_except_stmt_24927 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 738, 45), 'all_try_except_stmt', False)
        # Getting the type of 'end_except_comment' (line 739)
        end_except_comment_24928 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 739, 45), 'end_except_comment', False)
        # Processing the call keyword arguments (line 737)
        kwargs_24929 = {}
        # Getting the type of 'stypy_functions_copy' (line 737)
        stypy_functions_copy_24924 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 737, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 737)
        flatten_lists_24925 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 737, 15), stypy_functions_copy_24924, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 737)
        flatten_lists_call_result_24930 = invoke(stypy.reporting.localization.Localization(__file__, 737, 15), flatten_lists_24925, *[begin_except_comment_24926, all_try_except_stmt_24927, end_except_comment_24928], **kwargs_24929)
        
        # Assigning a type to the variable 'stypy_return_type' (line 737)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 737, 8), 'stypy_return_type', flatten_lists_call_result_24930)
        
        # ################# End of 'visit_TryExcept(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_TryExcept' in the type store
        # Getting the type of 'stypy_return_type' (line 657)
        stypy_return_type_24931 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 657, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_24931)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_TryExcept'
        return stypy_return_type_24931


    @norecursion
    def visit_TryFinally(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_TryFinally'
        module_type_store = module_type_store.open_function_context('visit_TryFinally', 741, 4, False)
        # Assigning a type to the variable 'self' (line 742)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 742, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_TryFinally')
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_TryFinally.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_TryFinally', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_TryFinally', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_TryFinally(...)' code ##################

        
        # Assigning a List to a Name (line 743):
        
        # Assigning a List to a Name (line 743):
        
        # Obtaining an instance of the builtin type 'list' (line 743)
        list_24932 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 743, 28), 'list')
        # Adding type elements to the builtin type 'list' instance (line 743)
        
        # Assigning a type to the variable 'try_finally_stmts' (line 743)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 743, 8), 'try_finally_stmts', list_24932)
        
        # Assigning a Call to a Name (line 745):
        
        # Assigning a Call to a Name (line 745):
        
        # Call to create_src_comment(...): (line 745)
        # Processing the call arguments (line 745)
        str_24935 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 745, 66), 'str', 'Try-finally block')
        # Getting the type of 'node' (line 745)
        node_24936 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 745)
        lineno_24937 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 87), node_24936, 'lineno')
        # Processing the call keyword arguments (line 745)
        kwargs_24938 = {}
        # Getting the type of 'stypy_functions_copy' (line 745)
        stypy_functions_copy_24933 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 745, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 745)
        create_src_comment_24934 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 745, 26), stypy_functions_copy_24933, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 745)
        create_src_comment_call_result_24939 = invoke(stypy.reporting.localization.Localization(__file__, 745, 26), create_src_comment_24934, *[str_24935, lineno_24937], **kwargs_24938)
        
        # Assigning a type to the variable 'initial_comment' (line 745)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 745, 8), 'initial_comment', create_src_comment_call_result_24939)
        
        # Call to append(...): (line 746)
        # Processing the call arguments (line 746)
        # Getting the type of 'initial_comment' (line 746)
        initial_comment_24942 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 33), 'initial_comment', False)
        # Processing the call keyword arguments (line 746)
        kwargs_24943 = {}
        # Getting the type of 'try_finally_stmts' (line 746)
        try_finally_stmts_24940 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 746, 8), 'try_finally_stmts', False)
        # Obtaining the member 'append' of a type (line 746)
        append_24941 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 746, 8), try_finally_stmts_24940, 'append')
        # Calling append(args, kwargs) (line 746)
        append_call_result_24944 = invoke(stypy.reporting.localization.Localization(__file__, 746, 8), append_24941, *[initial_comment_24942], **kwargs_24943)
        
        
        # Call to extend(...): (line 749)
        # Processing the call arguments (line 749)
        
        # Call to __visit_instruction_body(...): (line 749)
        # Processing the call arguments (line 749)
        # Getting the type of 'node' (line 749)
        node_24949 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 63), 'node', False)
        # Obtaining the member 'body' of a type (line 749)
        body_24950 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 63), node_24949, 'body')
        # Getting the type of 'context' (line 749)
        context_24951 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 74), 'context', False)
        # Processing the call keyword arguments (line 749)
        kwargs_24952 = {}
        # Getting the type of 'self' (line 749)
        self_24947 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 749)
        visit_instruction_body_24948 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 33), self_24947, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 749)
        visit_instruction_body_call_result_24953 = invoke(stypy.reporting.localization.Localization(__file__, 749, 33), visit_instruction_body_24948, *[body_24950, context_24951], **kwargs_24952)
        
        # Processing the call keyword arguments (line 749)
        kwargs_24954 = {}
        # Getting the type of 'try_finally_stmts' (line 749)
        try_finally_stmts_24945 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 749, 8), 'try_finally_stmts', False)
        # Obtaining the member 'extend' of a type (line 749)
        extend_24946 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 749, 8), try_finally_stmts_24945, 'extend')
        # Calling extend(args, kwargs) (line 749)
        extend_call_result_24955 = invoke(stypy.reporting.localization.Localization(__file__, 749, 8), extend_24946, *[visit_instruction_body_call_result_24953], **kwargs_24954)
        
        
        # Call to append(...): (line 751)
        # Processing the call arguments (line 751)
        
        # Call to create_blank_line(...): (line 751)
        # Processing the call keyword arguments (line 751)
        kwargs_24960 = {}
        # Getting the type of 'stypy_functions_copy' (line 751)
        stypy_functions_copy_24958 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 33), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 751)
        create_blank_line_24959 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 33), stypy_functions_copy_24958, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 751)
        create_blank_line_call_result_24961 = invoke(stypy.reporting.localization.Localization(__file__, 751, 33), create_blank_line_24959, *[], **kwargs_24960)
        
        # Processing the call keyword arguments (line 751)
        kwargs_24962 = {}
        # Getting the type of 'try_finally_stmts' (line 751)
        try_finally_stmts_24956 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 751, 8), 'try_finally_stmts', False)
        # Obtaining the member 'append' of a type (line 751)
        append_24957 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 751, 8), try_finally_stmts_24956, 'append')
        # Calling append(args, kwargs) (line 751)
        append_call_result_24963 = invoke(stypy.reporting.localization.Localization(__file__, 751, 8), append_24957, *[create_blank_line_call_result_24961], **kwargs_24962)
        
        
        # Assigning a Call to a Name (line 752):
        
        # Assigning a Call to a Name (line 752):
        
        # Call to create_src_comment(...): (line 752)
        # Processing the call arguments (line 752)
        str_24966 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 752, 66), 'str', 'finally branch of the try-finally block')
        # Getting the type of 'node' (line 753)
        node_24967 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 753, 61), 'node', False)
        # Obtaining the member 'lineno' of a type (line 753)
        lineno_24968 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 753, 61), node_24967, 'lineno')
        # Processing the call keyword arguments (line 752)
        kwargs_24969 = {}
        # Getting the type of 'stypy_functions_copy' (line 752)
        stypy_functions_copy_24964 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 752, 26), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 752)
        create_src_comment_24965 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 752, 26), stypy_functions_copy_24964, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 752)
        create_src_comment_call_result_24970 = invoke(stypy.reporting.localization.Localization(__file__, 752, 26), create_src_comment_24965, *[str_24966, lineno_24968], **kwargs_24969)
        
        # Assigning a type to the variable 'finally_comment' (line 752)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 752, 8), 'finally_comment', create_src_comment_call_result_24970)
        
        # Call to append(...): (line 754)
        # Processing the call arguments (line 754)
        # Getting the type of 'finally_comment' (line 754)
        finally_comment_24973 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 33), 'finally_comment', False)
        # Processing the call keyword arguments (line 754)
        kwargs_24974 = {}
        # Getting the type of 'try_finally_stmts' (line 754)
        try_finally_stmts_24971 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 754, 8), 'try_finally_stmts', False)
        # Obtaining the member 'append' of a type (line 754)
        append_24972 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 754, 8), try_finally_stmts_24971, 'append')
        # Calling append(args, kwargs) (line 754)
        append_call_result_24975 = invoke(stypy.reporting.localization.Localization(__file__, 754, 8), append_24972, *[finally_comment_24973], **kwargs_24974)
        
        
        # Call to extend(...): (line 757)
        # Processing the call arguments (line 757)
        
        # Call to __visit_instruction_body(...): (line 757)
        # Processing the call arguments (line 757)
        # Getting the type of 'node' (line 757)
        node_24980 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 63), 'node', False)
        # Obtaining the member 'finalbody' of a type (line 757)
        finalbody_24981 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 63), node_24980, 'finalbody')
        # Getting the type of 'context' (line 757)
        context_24982 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 79), 'context', False)
        # Processing the call keyword arguments (line 757)
        kwargs_24983 = {}
        # Getting the type of 'self' (line 757)
        self_24978 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 33), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 757)
        visit_instruction_body_24979 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 33), self_24978, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 757)
        visit_instruction_body_call_result_24984 = invoke(stypy.reporting.localization.Localization(__file__, 757, 33), visit_instruction_body_24979, *[finalbody_24981, context_24982], **kwargs_24983)
        
        # Processing the call keyword arguments (line 757)
        kwargs_24985 = {}
        # Getting the type of 'try_finally_stmts' (line 757)
        try_finally_stmts_24976 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 757, 8), 'try_finally_stmts', False)
        # Obtaining the member 'extend' of a type (line 757)
        extend_24977 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 757, 8), try_finally_stmts_24976, 'extend')
        # Calling extend(args, kwargs) (line 757)
        extend_call_result_24986 = invoke(stypy.reporting.localization.Localization(__file__, 757, 8), extend_24977, *[visit_instruction_body_call_result_24984], **kwargs_24985)
        
        
        # Call to flatten_lists(...): (line 759)
        # Processing the call arguments (line 759)
        
        # Call to create_blank_line(...): (line 759)
        # Processing the call keyword arguments (line 759)
        kwargs_24991 = {}
        # Getting the type of 'stypy_functions_copy' (line 759)
        stypy_functions_copy_24989 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 50), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 759)
        create_blank_line_24990 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 50), stypy_functions_copy_24989, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 759)
        create_blank_line_call_result_24992 = invoke(stypy.reporting.localization.Localization(__file__, 759, 50), create_blank_line_24990, *[], **kwargs_24991)
        
        # Getting the type of 'try_finally_stmts' (line 760)
        try_finally_stmts_24993 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 760, 45), 'try_finally_stmts', False)
        
        # Call to create_blank_line(...): (line 761)
        # Processing the call keyword arguments (line 761)
        kwargs_24996 = {}
        # Getting the type of 'stypy_functions_copy' (line 761)
        stypy_functions_copy_24994 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 761, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 761)
        create_blank_line_24995 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 761, 45), stypy_functions_copy_24994, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 761)
        create_blank_line_call_result_24997 = invoke(stypy.reporting.localization.Localization(__file__, 761, 45), create_blank_line_24995, *[], **kwargs_24996)
        
        # Processing the call keyword arguments (line 759)
        kwargs_24998 = {}
        # Getting the type of 'stypy_functions_copy' (line 759)
        stypy_functions_copy_24987 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 759, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 759)
        flatten_lists_24988 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 759, 15), stypy_functions_copy_24987, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 759)
        flatten_lists_call_result_24999 = invoke(stypy.reporting.localization.Localization(__file__, 759, 15), flatten_lists_24988, *[create_blank_line_call_result_24992, try_finally_stmts_24993, create_blank_line_call_result_24997], **kwargs_24998)
        
        # Assigning a type to the variable 'stypy_return_type' (line 759)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 759, 8), 'stypy_return_type', flatten_lists_call_result_24999)
        
        # ################# End of 'visit_TryFinally(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_TryFinally' in the type store
        # Getting the type of 'stypy_return_type' (line 741)
        stypy_return_type_25000 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 741, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25000)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_TryFinally'
        return stypy_return_type_25000


    @norecursion
    def visit_Import(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Import'
        module_type_store = module_type_store.open_function_context('visit_Import', 765, 4, False)
        # Assigning a type to the variable 'self' (line 766)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 766, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Import')
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Import.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Import', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Import', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Import(...)' code ##################

        
        # Assigning a Call to a Name (line 767):
        
        # Assigning a Call to a Name (line 767):
        
        # Call to create_localization(...): (line 767)
        # Processing the call arguments (line 767)
        # Getting the type of 'node' (line 767)
        node_25003 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 767)
        lineno_25004 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 64), node_25003, 'lineno')
        # Getting the type of 'node' (line 767)
        node_25005 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 767)
        col_offset_25006 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 77), node_25005, 'col_offset')
        # Processing the call keyword arguments (line 767)
        kwargs_25007 = {}
        # Getting the type of 'stypy_functions_copy' (line 767)
        stypy_functions_copy_25001 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 767, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 767)
        create_localization_25002 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 767, 23), stypy_functions_copy_25001, 'create_localization')
        # Calling create_localization(args, kwargs) (line 767)
        create_localization_call_result_25008 = invoke(stypy.reporting.localization.Localization(__file__, 767, 23), create_localization_25002, *[lineno_25004, col_offset_25006], **kwargs_25007)
        
        # Assigning a type to the variable 'localization' (line 767)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 767, 8), 'localization', create_localization_call_result_25008)
        
        # Assigning a List to a Name (line 768):
        
        # Assigning a List to a Name (line 768):
        
        # Obtaining an instance of the builtin type 'list' (line 768)
        list_25009 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 768, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 768)
        
        # Assigning a type to the variable 'call_stmts' (line 768)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 768, 8), 'call_stmts', list_25009)
        
        # Assigning a Call to a Name (line 770):
        
        # Assigning a Call to a Name (line 770):
        
        # Call to create_Name(...): (line 770)
        # Processing the call arguments (line 770)
        str_25012 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 770, 53), 'str', 'import_elements_from_external_module')
        # Processing the call keyword arguments (line 770)
        kwargs_25013 = {}
        # Getting the type of 'core_language_copy' (line 770)
        core_language_copy_25010 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 770, 22), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 770)
        create_Name_25011 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 770, 22), core_language_copy_25010, 'create_Name')
        # Calling create_Name(args, kwargs) (line 770)
        create_Name_call_result_25014 = invoke(stypy.reporting.localization.Localization(__file__, 770, 22), create_Name_25011, *[str_25012], **kwargs_25013)
        
        # Assigning a type to the variable 'import_func' (line 770)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 770, 8), 'import_func', create_Name_call_result_25014)
        
        # Assigning a Call to a Name (line 772):
        
        # Assigning a Call to a Name (line 772):
        
        # Call to dirname(...): (line 772)
        # Processing the call arguments (line 772)
        # Getting the type of 'self' (line 772)
        self_25018 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 35), 'self', False)
        # Obtaining the member 'file_name' of a type (line 772)
        file_name_25019 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 35), self_25018, 'file_name')
        # Processing the call keyword arguments (line 772)
        kwargs_25020 = {}
        # Getting the type of 'os' (line 772)
        os_25015 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 772, 19), 'os', False)
        # Obtaining the member 'path' of a type (line 772)
        path_25016 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 19), os_25015, 'path')
        # Obtaining the member 'dirname' of a type (line 772)
        dirname_25017 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 772, 19), path_25016, 'dirname')
        # Calling dirname(args, kwargs) (line 772)
        dirname_call_result_25021 = invoke(stypy.reporting.localization.Localization(__file__, 772, 19), dirname_25017, *[file_name_25019], **kwargs_25020)
        
        # Assigning a type to the variable 'dir_name' (line 772)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 772, 8), 'dir_name', dirname_call_result_25021)
        
        # Assigning a List to a Name (line 773):
        
        # Assigning a List to a Name (line 773):
        
        # Obtaining an instance of the builtin type 'list' (line 773)
        list_25022 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 773, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 773)
        
        # Assigning a type to the variable 'alias_stmt' (line 773)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 773, 8), 'alias_stmt', list_25022)
        
        # Getting the type of 'node' (line 774)
        node_25023 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 774, 21), 'node')
        # Obtaining the member 'names' of a type (line 774)
        names_25024 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 774, 21), node_25023, 'names')
        # Assigning a type to the variable 'names_25024' (line 774)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'names_25024', names_25024)
        # Testing if the for loop is going to be iterated (line 774)
        # Testing the type of a for loop iterable (line 774)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 774, 8), names_25024)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 774, 8), names_25024):
            # Getting the type of the for loop variable (line 774)
            for_loop_var_25025 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 774, 8), names_25024)
            # Assigning a type to the variable 'alias' (line 774)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 774, 8), 'alias', for_loop_var_25025)
            # SSA begins for a for statement (line 774)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to append(...): (line 775)
            # Processing the call arguments (line 775)
            
            # Call to create_src_comment(...): (line 776)
            # Processing the call arguments (line 776)
            
            # Call to format(...): (line 776)
            # Processing the call arguments (line 776)
            # Getting the type of 'alias' (line 776)
            alias_25032 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 88), 'alias', False)
            # Obtaining the member 'name' of a type (line 776)
            name_25033 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 88), alias_25032, 'name')
            # Processing the call keyword arguments (line 776)
            kwargs_25034 = {}
            str_25030 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 776, 56), 'str', "Importing '{0}' module")
            # Obtaining the member 'format' of a type (line 776)
            format_25031 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 56), str_25030, 'format')
            # Calling format(args, kwargs) (line 776)
            format_call_result_25035 = invoke(stypy.reporting.localization.Localization(__file__, 776, 56), format_25031, *[name_25033], **kwargs_25034)
            
            # Getting the type of 'node' (line 776)
            node_25036 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 101), 'node', False)
            # Obtaining the member 'lineno' of a type (line 776)
            lineno_25037 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 101), node_25036, 'lineno')
            # Processing the call keyword arguments (line 776)
            kwargs_25038 = {}
            # Getting the type of 'stypy_functions_copy' (line 776)
            stypy_functions_copy_25028 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 776, 16), 'stypy_functions_copy', False)
            # Obtaining the member 'create_src_comment' of a type (line 776)
            create_src_comment_25029 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 776, 16), stypy_functions_copy_25028, 'create_src_comment')
            # Calling create_src_comment(args, kwargs) (line 776)
            create_src_comment_call_result_25039 = invoke(stypy.reporting.localization.Localization(__file__, 776, 16), create_src_comment_25029, *[format_call_result_25035, lineno_25037], **kwargs_25038)
            
            # Processing the call keyword arguments (line 775)
            kwargs_25040 = {}
            # Getting the type of 'call_stmts' (line 775)
            call_stmts_25026 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 775, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 775)
            append_25027 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 775, 12), call_stmts_25026, 'append')
            # Calling append(args, kwargs) (line 775)
            append_call_result_25041 = invoke(stypy.reporting.localization.Localization(__file__, 775, 12), append_25027, *[create_src_comment_call_result_25039], **kwargs_25040)
            
            
            # Call to assign_line_and_column(...): (line 777)
            # Processing the call arguments (line 777)
            # Getting the type of 'alias' (line 777)
            alias_25044 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 56), 'alias', False)
            # Getting the type of 'node' (line 777)
            node_25045 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 63), 'node', False)
            # Processing the call keyword arguments (line 777)
            kwargs_25046 = {}
            # Getting the type of 'stypy_functions_copy' (line 777)
            stypy_functions_copy_25042 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 777, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 777)
            assign_line_and_column_25043 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 777, 12), stypy_functions_copy_25042, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 777)
            assign_line_and_column_call_result_25047 = invoke(stypy.reporting.localization.Localization(__file__, 777, 12), assign_line_and_column_25043, *[alias_25044, node_25045], **kwargs_25046)
            
            
            # Assigning a Call to a Tuple (line 778):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 778)
            # Processing the call arguments (line 778)
            # Getting the type of 'alias' (line 778)
            alias_25050 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 47), 'alias', False)
            # Getting the type of 'context' (line 778)
            context_25051 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 54), 'context', False)
            # Processing the call keyword arguments (line 778)
            kwargs_25052 = {}
            # Getting the type of 'self' (line 778)
            self_25048 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 778)
            visit_25049 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 778, 36), self_25048, 'visit')
            # Calling visit(args, kwargs) (line 778)
            visit_call_result_25053 = invoke(stypy.reporting.localization.Localization(__file__, 778, 36), visit_25049, *[alias_25050, context_25051], **kwargs_25052)
            
            # Assigning a type to the variable 'call_assignment_22366' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_22366', visit_call_result_25053)
            
            # Assigning a Call to a Name (line 778):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22366' (line 778)
            call_assignment_22366_25054 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_22366', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_25055 = stypy_get_value_from_tuple(call_assignment_22366_25054, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22367' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_22367', stypy_get_value_from_tuple_call_result_25055)
            
            # Assigning a Name to a Name (line 778):
            # Getting the type of 'call_assignment_22367' (line 778)
            call_assignment_22367_25056 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_22367')
            # Assigning a type to the variable 'alias_stmt' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'alias_stmt', call_assignment_22367_25056)
            
            # Assigning a Call to a Name (line 778):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22366' (line 778)
            call_assignment_22366_25057 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_22366', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_25058 = stypy_get_value_from_tuple(call_assignment_22366_25057, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22368' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_22368', stypy_get_value_from_tuple_call_result_25058)
            
            # Assigning a Name to a Name (line 778):
            # Getting the type of 'call_assignment_22368' (line 778)
            call_assignment_22368_25059 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 778, 12), 'call_assignment_22368')
            # Assigning a type to the variable 'alias_var' (line 778)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 778, 24), 'alias_var', call_assignment_22368_25059)
            
            # Assigning a Call to a Name (line 779):
            
            # Assigning a Call to a Name (line 779):
            
            # Call to create_call_expression(...): (line 779)
            # Processing the call arguments (line 779)
            # Getting the type of 'import_func' (line 779)
            import_func_25062 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 57), 'import_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 779)
            list_25063 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 779, 70), 'list')
            # Adding type elements to the builtin type 'list' instance (line 779)
            # Adding element type (line 779)
            # Getting the type of 'localization' (line 779)
            localization_25064 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 71), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 70), list_25063, localization_25064)
            # Adding element type (line 779)
            # Getting the type of 'alias_var' (line 781)
            alias_var_25065 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 781, 66), 'alias_var', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 70), list_25063, alias_var_25065)
            # Adding element type (line 779)
            
            # Call to create_Name(...): (line 782)
            # Processing the call arguments (line 782)
            str_25068 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 782, 97), 'str', 'type_store')
            # Processing the call keyword arguments (line 782)
            kwargs_25069 = {}
            # Getting the type of 'core_language_copy' (line 782)
            core_language_copy_25066 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 782, 66), 'core_language_copy', False)
            # Obtaining the member 'create_Name' of a type (line 782)
            create_Name_25067 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 782, 66), core_language_copy_25066, 'create_Name')
            # Calling create_Name(args, kwargs) (line 782)
            create_Name_call_result_25070 = invoke(stypy.reporting.localization.Localization(__file__, 782, 66), create_Name_25067, *[str_25068], **kwargs_25069)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 779, 70), list_25063, create_Name_call_result_25070)
            
            # Processing the call keyword arguments (line 779)
            kwargs_25071 = {}
            # Getting the type of 'functions_copy' (line 779)
            functions_copy_25060 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 779, 19), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 779)
            create_call_expression_25061 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 779, 19), functions_copy_25060, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 779)
            create_call_expression_call_result_25072 = invoke(stypy.reporting.localization.Localization(__file__, 779, 19), create_call_expression_25061, *[import_func_25062, list_25063], **kwargs_25071)
            
            # Assigning a type to the variable 'call' (line 779)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 779, 12), 'call', create_call_expression_call_result_25072)
            
            # Call to append(...): (line 783)
            # Processing the call arguments (line 783)
            # Getting the type of 'call' (line 783)
            call_25075 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 30), 'call', False)
            # Processing the call keyword arguments (line 783)
            kwargs_25076 = {}
            # Getting the type of 'call_stmts' (line 783)
            call_stmts_25073 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 783, 12), 'call_stmts', False)
            # Obtaining the member 'append' of a type (line 783)
            append_25074 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 783, 12), call_stmts_25073, 'append')
            # Calling append(args, kwargs) (line 783)
            append_call_result_25077 = invoke(stypy.reporting.localization.Localization(__file__, 783, 12), append_25074, *[call_25075], **kwargs_25076)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to flatten_lists(...): (line 785)
        # Processing the call arguments (line 785)
        # Getting the type of 'call_stmts' (line 785)
        call_stmts_25080 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 50), 'call_stmts', False)
        # Getting the type of 'alias_stmt' (line 785)
        alias_stmt_25081 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 62), 'alias_stmt', False)
        
        # Call to create_blank_line(...): (line 786)
        # Processing the call keyword arguments (line 786)
        kwargs_25084 = {}
        # Getting the type of 'stypy_functions_copy' (line 786)
        stypy_functions_copy_25082 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 786, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 786)
        create_blank_line_25083 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 786, 45), stypy_functions_copy_25082, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 786)
        create_blank_line_call_result_25085 = invoke(stypy.reporting.localization.Localization(__file__, 786, 45), create_blank_line_25083, *[], **kwargs_25084)
        
        # Processing the call keyword arguments (line 785)
        kwargs_25086 = {}
        # Getting the type of 'stypy_functions_copy' (line 785)
        stypy_functions_copy_25078 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 785, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 785)
        flatten_lists_25079 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 785, 15), stypy_functions_copy_25078, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 785)
        flatten_lists_call_result_25087 = invoke(stypy.reporting.localization.Localization(__file__, 785, 15), flatten_lists_25079, *[call_stmts_25080, alias_stmt_25081, create_blank_line_call_result_25085], **kwargs_25086)
        
        # Assigning a type to the variable 'stypy_return_type' (line 785)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 785, 8), 'stypy_return_type', flatten_lists_call_result_25087)
        
        # ################# End of 'visit_Import(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Import' in the type store
        # Getting the type of 'stypy_return_type' (line 765)
        stypy_return_type_25088 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 765, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25088)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Import'
        return stypy_return_type_25088


    @norecursion
    def visit_ImportFrom(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_ImportFrom'
        module_type_store = module_type_store.open_function_context('visit_ImportFrom', 788, 4, False)
        # Assigning a type to the variable 'self' (line 789)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 789, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_ImportFrom')
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_ImportFrom.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_ImportFrom', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_ImportFrom', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_ImportFrom(...)' code ##################

        
        # Assigning a Call to a Name (line 790):
        
        # Assigning a Call to a Name (line 790):
        
        # Call to create_localization(...): (line 790)
        # Processing the call arguments (line 790)
        # Getting the type of 'node' (line 790)
        node_25091 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 790)
        lineno_25092 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 64), node_25091, 'lineno')
        # Getting the type of 'node' (line 790)
        node_25093 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 790)
        col_offset_25094 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 77), node_25093, 'col_offset')
        # Processing the call keyword arguments (line 790)
        kwargs_25095 = {}
        # Getting the type of 'stypy_functions_copy' (line 790)
        stypy_functions_copy_25089 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 790, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 790)
        create_localization_25090 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 790, 23), stypy_functions_copy_25089, 'create_localization')
        # Calling create_localization(args, kwargs) (line 790)
        create_localization_call_result_25096 = invoke(stypy.reporting.localization.Localization(__file__, 790, 23), create_localization_25090, *[lineno_25092, col_offset_25094], **kwargs_25095)
        
        # Assigning a type to the variable 'localization' (line 790)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 790, 8), 'localization', create_localization_call_result_25096)
        
        # Assigning a List to a Name (line 791):
        
        # Assigning a List to a Name (line 791):
        
        # Obtaining an instance of the builtin type 'list' (line 791)
        list_25097 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 791, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 791)
        
        # Assigning a type to the variable 'call_stmts' (line 791)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 791, 8), 'call_stmts', list_25097)
        
        # Call to append(...): (line 793)
        # Processing the call arguments (line 793)
        
        # Call to create_src_comment(...): (line 794)
        # Processing the call arguments (line 794)
        
        # Call to format(...): (line 794)
        # Processing the call arguments (line 794)
        # Getting the type of 'node' (line 794)
        node_25104 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 89), 'node', False)
        # Obtaining the member 'module' of a type (line 794)
        module_25105 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 89), node_25104, 'module')
        # Processing the call keyword arguments (line 794)
        kwargs_25106 = {}
        str_25102 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 794, 52), 'str', "Importing from '{0}' module")
        # Obtaining the member 'format' of a type (line 794)
        format_25103 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 52), str_25102, 'format')
        # Calling format(args, kwargs) (line 794)
        format_call_result_25107 = invoke(stypy.reporting.localization.Localization(__file__, 794, 52), format_25103, *[module_25105], **kwargs_25106)
        
        # Getting the type of 'node' (line 794)
        node_25108 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 103), 'node', False)
        # Obtaining the member 'lineno' of a type (line 794)
        lineno_25109 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 103), node_25108, 'lineno')
        # Processing the call keyword arguments (line 794)
        kwargs_25110 = {}
        # Getting the type of 'stypy_functions_copy' (line 794)
        stypy_functions_copy_25100 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 794, 12), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 794)
        create_src_comment_25101 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 794, 12), stypy_functions_copy_25100, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 794)
        create_src_comment_call_result_25111 = invoke(stypy.reporting.localization.Localization(__file__, 794, 12), create_src_comment_25101, *[format_call_result_25107, lineno_25109], **kwargs_25110)
        
        # Processing the call keyword arguments (line 793)
        kwargs_25112 = {}
        # Getting the type of 'call_stmts' (line 793)
        call_stmts_25098 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 793, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 793)
        append_25099 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 793, 8), call_stmts_25098, 'append')
        # Calling append(args, kwargs) (line 793)
        append_call_result_25113 = invoke(stypy.reporting.localization.Localization(__file__, 793, 8), append_25099, *[create_src_comment_call_result_25111], **kwargs_25112)
        
        
        # Assigning a Call to a Name (line 795):
        
        # Assigning a Call to a Name (line 795):
        
        # Call to create_Name(...): (line 795)
        # Processing the call arguments (line 795)
        str_25116 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 795, 53), 'str', 'import_elements_from_external_module')
        # Processing the call keyword arguments (line 795)
        kwargs_25117 = {}
        # Getting the type of 'core_language_copy' (line 795)
        core_language_copy_25114 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 795, 22), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 795)
        create_Name_25115 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 795, 22), core_language_copy_25114, 'create_Name')
        # Calling create_Name(args, kwargs) (line 795)
        create_Name_call_result_25118 = invoke(stypy.reporting.localization.Localization(__file__, 795, 22), create_Name_25115, *[str_25116], **kwargs_25117)
        
        # Assigning a type to the variable 'import_func' (line 795)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 795, 8), 'import_func', create_Name_call_result_25118)
        
        # Assigning a Call to a Name (line 797):
        
        # Assigning a Call to a Name (line 797):
        
        # Call to dirname(...): (line 797)
        # Processing the call arguments (line 797)
        # Getting the type of 'self' (line 797)
        self_25122 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 35), 'self', False)
        # Obtaining the member 'file_name' of a type (line 797)
        file_name_25123 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 35), self_25122, 'file_name')
        # Processing the call keyword arguments (line 797)
        kwargs_25124 = {}
        # Getting the type of 'os' (line 797)
        os_25119 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 797, 19), 'os', False)
        # Obtaining the member 'path' of a type (line 797)
        path_25120 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 19), os_25119, 'path')
        # Obtaining the member 'dirname' of a type (line 797)
        dirname_25121 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 797, 19), path_25120, 'dirname')
        # Calling dirname(args, kwargs) (line 797)
        dirname_call_result_25125 = invoke(stypy.reporting.localization.Localization(__file__, 797, 19), dirname_25121, *[file_name_25123], **kwargs_25124)
        
        # Assigning a type to the variable 'dir_name' (line 797)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 797, 8), 'dir_name', dirname_call_result_25125)
        
        # Assigning a List to a Name (line 798):
        
        # Assigning a List to a Name (line 798):
        
        # Obtaining an instance of the builtin type 'list' (line 798)
        list_25126 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 798, 19), 'list')
        # Adding type elements to the builtin type 'list' instance (line 798)
        
        # Assigning a type to the variable 'elements' (line 798)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 798, 8), 'elements', list_25126)
        
        # Assigning a List to a Name (line 799):
        
        # Assigning a List to a Name (line 799):
        
        # Obtaining an instance of the builtin type 'list' (line 799)
        list_25127 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 799, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 799)
        
        # Assigning a type to the variable 'alias_stmt' (line 799)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 799, 8), 'alias_stmt', list_25127)
        
        # Getting the type of 'node' (line 800)
        node_25128 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 800, 21), 'node')
        # Obtaining the member 'names' of a type (line 800)
        names_25129 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 800, 21), node_25128, 'names')
        # Assigning a type to the variable 'names_25129' (line 800)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'names_25129', names_25129)
        # Testing if the for loop is going to be iterated (line 800)
        # Testing the type of a for loop iterable (line 800)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 800, 8), names_25129)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 800, 8), names_25129):
            # Getting the type of the for loop variable (line 800)
            for_loop_var_25130 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 800, 8), names_25129)
            # Assigning a type to the variable 'alias' (line 800)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 800, 8), 'alias', for_loop_var_25130)
            # SSA begins for a for statement (line 800)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Call to assign_line_and_column(...): (line 801)
            # Processing the call arguments (line 801)
            # Getting the type of 'alias' (line 801)
            alias_25133 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 56), 'alias', False)
            # Getting the type of 'node' (line 801)
            node_25134 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 63), 'node', False)
            # Processing the call keyword arguments (line 801)
            kwargs_25135 = {}
            # Getting the type of 'stypy_functions_copy' (line 801)
            stypy_functions_copy_25131 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 801, 12), 'stypy_functions_copy', False)
            # Obtaining the member 'assign_line_and_column' of a type (line 801)
            assign_line_and_column_25132 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 801, 12), stypy_functions_copy_25131, 'assign_line_and_column')
            # Calling assign_line_and_column(args, kwargs) (line 801)
            assign_line_and_column_call_result_25136 = invoke(stypy.reporting.localization.Localization(__file__, 801, 12), assign_line_and_column_25132, *[alias_25133, node_25134], **kwargs_25135)
            
            
            # Assigning a Call to a Tuple (line 802):
            
            # Assigning a Call to a Name:
            
            # Call to visit(...): (line 802)
            # Processing the call arguments (line 802)
            # Getting the type of 'alias' (line 802)
            alias_25139 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 47), 'alias', False)
            # Getting the type of 'context' (line 802)
            context_25140 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 54), 'context', False)
            # Processing the call keyword arguments (line 802)
            kwargs_25141 = {}
            # Getting the type of 'self' (line 802)
            self_25137 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 36), 'self', False)
            # Obtaining the member 'visit' of a type (line 802)
            visit_25138 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 802, 36), self_25137, 'visit')
            # Calling visit(args, kwargs) (line 802)
            visit_call_result_25142 = invoke(stypy.reporting.localization.Localization(__file__, 802, 36), visit_25138, *[alias_25139, context_25140], **kwargs_25141)
            
            # Assigning a type to the variable 'call_assignment_22369' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_22369', visit_call_result_25142)
            
            # Assigning a Call to a Name (line 802):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22369' (line 802)
            call_assignment_22369_25143 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_22369', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_25144 = stypy_get_value_from_tuple(call_assignment_22369_25143, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22370' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_22370', stypy_get_value_from_tuple_call_result_25144)
            
            # Assigning a Name to a Name (line 802):
            # Getting the type of 'call_assignment_22370' (line 802)
            call_assignment_22370_25145 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_22370')
            # Assigning a type to the variable 'alias_stmt' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'alias_stmt', call_assignment_22370_25145)
            
            # Assigning a Call to a Name (line 802):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22369' (line 802)
            call_assignment_22369_25146 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_22369', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_25147 = stypy_get_value_from_tuple(call_assignment_22369_25146, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22371' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_22371', stypy_get_value_from_tuple_call_result_25147)
            
            # Assigning a Name to a Name (line 802):
            # Getting the type of 'call_assignment_22371' (line 802)
            call_assignment_22371_25148 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 802, 12), 'call_assignment_22371')
            # Assigning a type to the variable 'alias_var' (line 802)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 802, 24), 'alias_var', call_assignment_22371_25148)
            
            # Call to append(...): (line 803)
            # Processing the call arguments (line 803)
            # Getting the type of 'alias_var' (line 803)
            alias_var_25151 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 28), 'alias_var', False)
            # Processing the call keyword arguments (line 803)
            kwargs_25152 = {}
            # Getting the type of 'elements' (line 803)
            elements_25149 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 803, 12), 'elements', False)
            # Obtaining the member 'append' of a type (line 803)
            append_25150 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 803, 12), elements_25149, 'append')
            # Calling append(args, kwargs) (line 803)
            append_call_result_25153 = invoke(stypy.reporting.localization.Localization(__file__, 803, 12), append_25150, *[alias_var_25151], **kwargs_25152)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Assigning a Call to a Name (line 805):
        
        # Assigning a Call to a Name (line 805):
        
        # Call to create_list(...): (line 805)
        # Processing the call arguments (line 805)
        # Getting the type of 'elements' (line 805)
        elements_25156 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 52), 'elements', False)
        # Processing the call keyword arguments (line 805)
        kwargs_25157 = {}
        # Getting the type of 'data_structures_copy' (line 805)
        data_structures_copy_25154 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 805, 19), 'data_structures_copy', False)
        # Obtaining the member 'create_list' of a type (line 805)
        create_list_25155 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 805, 19), data_structures_copy_25154, 'create_list')
        # Calling create_list(args, kwargs) (line 805)
        create_list_call_result_25158 = invoke(stypy.reporting.localization.Localization(__file__, 805, 19), create_list_25155, *[elements_25156], **kwargs_25157)
        
        # Assigning a type to the variable 'starargs' (line 805)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 805, 8), 'starargs', create_list_call_result_25158)
        
        # Assigning a Call to a Name (line 806):
        
        # Assigning a Call to a Name (line 806):
        
        # Call to create_call_expression(...): (line 806)
        # Processing the call arguments (line 806)
        # Getting the type of 'import_func' (line 806)
        import_func_25161 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 53), 'import_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 806)
        list_25162 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 806, 66), 'list')
        # Adding type elements to the builtin type 'list' instance (line 806)
        # Adding element type (line 806)
        # Getting the type of 'localization' (line 806)
        localization_25163 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 67), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 66), list_25162, localization_25163)
        # Adding element type (line 806)
        
        # Call to create_str(...): (line 808)
        # Processing the call arguments (line 808)
        # Getting the type of 'node' (line 808)
        node_25166 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 92), 'node', False)
        # Obtaining the member 'module' of a type (line 808)
        module_25167 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 92), node_25166, 'module')
        # Processing the call keyword arguments (line 808)
        kwargs_25168 = {}
        # Getting the type of 'core_language_copy' (line 808)
        core_language_copy_25164 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 808, 62), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 808)
        create_str_25165 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 808, 62), core_language_copy_25164, 'create_str')
        # Calling create_str(args, kwargs) (line 808)
        create_str_call_result_25169 = invoke(stypy.reporting.localization.Localization(__file__, 808, 62), create_str_25165, *[module_25167], **kwargs_25168)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 66), list_25162, create_str_call_result_25169)
        # Adding element type (line 806)
        
        # Call to create_Name(...): (line 809)
        # Processing the call arguments (line 809)
        str_25172 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 809, 93), 'str', 'type_store')
        # Processing the call keyword arguments (line 809)
        kwargs_25173 = {}
        # Getting the type of 'core_language_copy' (line 809)
        core_language_copy_25170 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 809, 62), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 809)
        create_Name_25171 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 809, 62), core_language_copy_25170, 'create_Name')
        # Calling create_Name(args, kwargs) (line 809)
        create_Name_call_result_25174 = invoke(stypy.reporting.localization.Localization(__file__, 809, 62), create_Name_25171, *[str_25172], **kwargs_25173)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 806, 66), list_25162, create_Name_call_result_25174)
        
        # Processing the call keyword arguments (line 806)
        # Getting the type of 'starargs' (line 810)
        starargs_25175 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 810, 57), 'starargs', False)
        keyword_25176 = starargs_25175
        kwargs_25177 = {'starargs': keyword_25176}
        # Getting the type of 'functions_copy' (line 806)
        functions_copy_25159 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 806, 15), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 806)
        create_call_expression_25160 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 806, 15), functions_copy_25159, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 806)
        create_call_expression_call_result_25178 = invoke(stypy.reporting.localization.Localization(__file__, 806, 15), create_call_expression_25160, *[import_func_25161, list_25162], **kwargs_25177)
        
        # Assigning a type to the variable 'call' (line 806)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 806, 8), 'call', create_call_expression_call_result_25178)
        
        # Call to append(...): (line 811)
        # Processing the call arguments (line 811)
        # Getting the type of 'call' (line 811)
        call_25181 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 26), 'call', False)
        # Processing the call keyword arguments (line 811)
        kwargs_25182 = {}
        # Getting the type of 'call_stmts' (line 811)
        call_stmts_25179 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 811, 8), 'call_stmts', False)
        # Obtaining the member 'append' of a type (line 811)
        append_25180 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 811, 8), call_stmts_25179, 'append')
        # Calling append(args, kwargs) (line 811)
        append_call_result_25183 = invoke(stypy.reporting.localization.Localization(__file__, 811, 8), append_25180, *[call_25181], **kwargs_25182)
        
        
        # Call to flatten_lists(...): (line 813)
        # Processing the call arguments (line 813)
        # Getting the type of 'call_stmts' (line 813)
        call_stmts_25186 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 50), 'call_stmts', False)
        # Getting the type of 'alias_stmt' (line 813)
        alias_stmt_25187 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 62), 'alias_stmt', False)
        
        # Call to create_blank_line(...): (line 814)
        # Processing the call keyword arguments (line 814)
        kwargs_25190 = {}
        # Getting the type of 'stypy_functions_copy' (line 814)
        stypy_functions_copy_25188 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 814, 45), 'stypy_functions_copy', False)
        # Obtaining the member 'create_blank_line' of a type (line 814)
        create_blank_line_25189 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 814, 45), stypy_functions_copy_25188, 'create_blank_line')
        # Calling create_blank_line(args, kwargs) (line 814)
        create_blank_line_call_result_25191 = invoke(stypy.reporting.localization.Localization(__file__, 814, 45), create_blank_line_25189, *[], **kwargs_25190)
        
        # Processing the call keyword arguments (line 813)
        kwargs_25192 = {}
        # Getting the type of 'stypy_functions_copy' (line 813)
        stypy_functions_copy_25184 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 813, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 813)
        flatten_lists_25185 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 813, 15), stypy_functions_copy_25184, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 813)
        flatten_lists_call_result_25193 = invoke(stypy.reporting.localization.Localization(__file__, 813, 15), flatten_lists_25185, *[call_stmts_25186, alias_stmt_25187, create_blank_line_call_result_25191], **kwargs_25192)
        
        # Assigning a type to the variable 'stypy_return_type' (line 813)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 813, 8), 'stypy_return_type', flatten_lists_call_result_25193)
        
        # ################# End of 'visit_ImportFrom(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_ImportFrom' in the type store
        # Getting the type of 'stypy_return_type' (line 788)
        stypy_return_type_25194 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 788, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25194)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_ImportFrom'
        return stypy_return_type_25194


    @norecursion
    def visit_Print(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Print'
        module_type_store = module_type_store.open_function_context('visit_Print', 818, 4, False)
        # Assigning a type to the variable 'self' (line 819)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 819, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Print')
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Print.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Print', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Print', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Print(...)' code ##################

        
        # Assigning a Call to a Name (line 821):
        
        # Assigning a Call to a Name (line 821):
        
        # Call to __visit_instruction_body(...): (line 821)
        # Processing the call arguments (line 821)
        # Getting the type of 'node' (line 821)
        node_25197 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 52), 'node', False)
        # Obtaining the member 'values' of a type (line 821)
        values_25198 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 52), node_25197, 'values')
        # Getting the type of 'context' (line 821)
        context_25199 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 65), 'context', False)
        # Processing the call keyword arguments (line 821)
        kwargs_25200 = {}
        # Getting the type of 'self' (line 821)
        self_25195 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 821, 22), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 821)
        visit_instruction_body_25196 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 821, 22), self_25195, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 821)
        visit_instruction_body_call_result_25201 = invoke(stypy.reporting.localization.Localization(__file__, 821, 22), visit_instruction_body_25196, *[values_25198, context_25199], **kwargs_25200)
        
        # Assigning a type to the variable 'print_stmts' (line 821)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 821, 8), 'print_stmts', visit_instruction_body_call_result_25201)
        
        # Call to flatten_lists(...): (line 823)
        # Processing the call arguments (line 823)
        # Getting the type of 'print_stmts' (line 823)
        print_stmts_25204 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 50), 'print_stmts', False)
        # Processing the call keyword arguments (line 823)
        kwargs_25205 = {}
        # Getting the type of 'stypy_functions_copy' (line 823)
        stypy_functions_copy_25202 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 823, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 823)
        flatten_lists_25203 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 823, 15), stypy_functions_copy_25202, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 823)
        flatten_lists_call_result_25206 = invoke(stypy.reporting.localization.Localization(__file__, 823, 15), flatten_lists_25203, *[print_stmts_25204], **kwargs_25205)
        
        # Assigning a type to the variable 'stypy_return_type' (line 823)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 823, 8), 'stypy_return_type', flatten_lists_call_result_25206)
        
        # ################# End of 'visit_Print(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Print' in the type store
        # Getting the type of 'stypy_return_type' (line 818)
        stypy_return_type_25207 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 818, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25207)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Print'
        return stypy_return_type_25207


    @norecursion
    def visit_Global(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Global'
        module_type_store = module_type_store.open_function_context('visit_Global', 827, 4, False)
        # Assigning a type to the variable 'self' (line 828)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 828, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Global')
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Global.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Global', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Global', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Global(...)' code ##################

        
        # Assigning a List to a Name (line 829):
        
        # Assigning a List to a Name (line 829):
        
        # Obtaining an instance of the builtin type 'list' (line 829)
        list_25208 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 23), 'list')
        # Adding type elements to the builtin type 'list' instance (line 829)
        # Adding element type (line 829)
        
        # Call to create_src_comment(...): (line 829)
        # Processing the call arguments (line 829)
        str_25211 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 829, 64), 'str', 'Marking variables as global')
        # Getting the type of 'node' (line 829)
        node_25212 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 95), 'node', False)
        # Obtaining the member 'lineno' of a type (line 829)
        lineno_25213 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 95), node_25212, 'lineno')
        # Processing the call keyword arguments (line 829)
        kwargs_25214 = {}
        # Getting the type of 'stypy_functions_copy' (line 829)
        stypy_functions_copy_25209 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 829, 24), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 829)
        create_src_comment_25210 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 829, 24), stypy_functions_copy_25209, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 829)
        create_src_comment_call_result_25215 = invoke(stypy.reporting.localization.Localization(__file__, 829, 24), create_src_comment_25210, *[str_25211, lineno_25213], **kwargs_25214)
        
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 829, 23), list_25208, create_src_comment_call_result_25215)
        
        # Assigning a type to the variable 'global_stmts' (line 829)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 829, 8), 'global_stmts', list_25208)
        
        # Assigning a Call to a Name (line 830):
        
        # Assigning a Call to a Name (line 830):
        
        # Call to create_attribute(...): (line 830)
        # Processing the call arguments (line 830)
        str_25218 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 60), 'str', 'type_store')
        str_25219 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 830, 74), 'str', 'mark_as_global')
        # Getting the type of 'node' (line 830)
        node_25220 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 92), 'node', False)
        # Obtaining the member 'lineno' of a type (line 830)
        lineno_25221 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 92), node_25220, 'lineno')
        # Getting the type of 'node' (line 830)
        node_25222 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 105), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 830)
        col_offset_25223 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 105), node_25222, 'col_offset')
        # Processing the call keyword arguments (line 830)
        kwargs_25224 = {}
        # Getting the type of 'core_language_copy' (line 830)
        core_language_copy_25216 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 830, 24), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 830)
        create_attribute_25217 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 830, 24), core_language_copy_25216, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 830)
        create_attribute_call_result_25225 = invoke(stypy.reporting.localization.Localization(__file__, 830, 24), create_attribute_25217, *[str_25218, str_25219, lineno_25221, col_offset_25223], **kwargs_25224)
        
        # Assigning a type to the variable 'mark_function' (line 830)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 830, 8), 'mark_function', create_attribute_call_result_25225)
        
        # Assigning a Call to a Name (line 831):
        
        # Assigning a Call to a Name (line 831):
        
        # Call to create_localization(...): (line 831)
        # Processing the call arguments (line 831)
        # Getting the type of 'node' (line 831)
        node_25228 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 831)
        lineno_25229 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 64), node_25228, 'lineno')
        # Getting the type of 'node' (line 831)
        node_25230 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 831)
        col_offset_25231 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 77), node_25230, 'col_offset')
        # Processing the call keyword arguments (line 831)
        kwargs_25232 = {}
        # Getting the type of 'stypy_functions_copy' (line 831)
        stypy_functions_copy_25226 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 831, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 831)
        create_localization_25227 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 831, 23), stypy_functions_copy_25226, 'create_localization')
        # Calling create_localization(args, kwargs) (line 831)
        create_localization_call_result_25233 = invoke(stypy.reporting.localization.Localization(__file__, 831, 23), create_localization_25227, *[lineno_25229, col_offset_25231], **kwargs_25232)
        
        # Assigning a type to the variable 'localization' (line 831)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 831, 8), 'localization', create_localization_call_result_25233)
        
        # Getting the type of 'node' (line 832)
        node_25234 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 832, 20), 'node')
        # Obtaining the member 'names' of a type (line 832)
        names_25235 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 832, 20), node_25234, 'names')
        # Assigning a type to the variable 'names_25235' (line 832)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'names_25235', names_25235)
        # Testing if the for loop is going to be iterated (line 832)
        # Testing the type of a for loop iterable (line 832)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 832, 8), names_25235)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 832, 8), names_25235):
            # Getting the type of the for loop variable (line 832)
            for_loop_var_25236 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 832, 8), names_25235)
            # Assigning a type to the variable 'name' (line 832)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 832, 8), 'name', for_loop_var_25236)
            # SSA begins for a for statement (line 832)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            # Assigning a Call to a Name (line 833):
            
            # Assigning a Call to a Name (line 833):
            
            # Call to create_call_expression(...): (line 833)
            # Processing the call arguments (line 833)
            # Getting the type of 'mark_function' (line 833)
            mark_function_25239 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 62), 'mark_function', False)
            
            # Obtaining an instance of the builtin type 'list' (line 833)
            list_25240 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 833, 77), 'list')
            # Adding type elements to the builtin type 'list' instance (line 833)
            # Adding element type (line 833)
            # Getting the type of 'localization' (line 833)
            localization_25241 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 78), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 77), list_25240, localization_25241)
            # Adding element type (line 833)
            
            # Call to create_str(...): (line 833)
            # Processing the call arguments (line 833)
            # Getting the type of 'name' (line 833)
            name_25244 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 122), 'name', False)
            # Processing the call keyword arguments (line 833)
            kwargs_25245 = {}
            # Getting the type of 'core_language_copy' (line 833)
            core_language_copy_25242 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 92), 'core_language_copy', False)
            # Obtaining the member 'create_str' of a type (line 833)
            create_str_25243 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 92), core_language_copy_25242, 'create_str')
            # Calling create_str(args, kwargs) (line 833)
            create_str_call_result_25246 = invoke(stypy.reporting.localization.Localization(__file__, 833, 92), create_str_25243, *[name_25244], **kwargs_25245)
            
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 833, 77), list_25240, create_str_call_result_25246)
            
            # Processing the call keyword arguments (line 833)
            kwargs_25247 = {}
            # Getting the type of 'functions_copy' (line 833)
            functions_copy_25237 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 833, 24), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 833)
            create_call_expression_25238 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 833, 24), functions_copy_25237, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 833)
            create_call_expression_call_result_25248 = invoke(stypy.reporting.localization.Localization(__file__, 833, 24), create_call_expression_25238, *[mark_function_25239, list_25240], **kwargs_25247)
            
            # Assigning a type to the variable 'mark_call' (line 833)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 833, 12), 'mark_call', create_call_expression_call_result_25248)
            
            # Call to append(...): (line 834)
            # Processing the call arguments (line 834)
            # Getting the type of 'mark_call' (line 834)
            mark_call_25251 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 32), 'mark_call', False)
            # Processing the call keyword arguments (line 834)
            kwargs_25252 = {}
            # Getting the type of 'global_stmts' (line 834)
            global_stmts_25249 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 834, 12), 'global_stmts', False)
            # Obtaining the member 'append' of a type (line 834)
            append_25250 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 834, 12), global_stmts_25249, 'append')
            # Calling append(args, kwargs) (line 834)
            append_call_result_25253 = invoke(stypy.reporting.localization.Localization(__file__, 834, 12), append_25250, *[mark_call_25251], **kwargs_25252)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        
        # Call to flatten_lists(...): (line 836)
        # Processing the call arguments (line 836)
        # Getting the type of 'global_stmts' (line 836)
        global_stmts_25256 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 50), 'global_stmts', False)
        # Processing the call keyword arguments (line 836)
        kwargs_25257 = {}
        # Getting the type of 'stypy_functions_copy' (line 836)
        stypy_functions_copy_25254 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 836, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 836)
        flatten_lists_25255 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 836, 15), stypy_functions_copy_25254, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 836)
        flatten_lists_call_result_25258 = invoke(stypy.reporting.localization.Localization(__file__, 836, 15), flatten_lists_25255, *[global_stmts_25256], **kwargs_25257)
        
        # Assigning a type to the variable 'stypy_return_type' (line 836)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 836, 8), 'stypy_return_type', flatten_lists_call_result_25258)
        
        # ################# End of 'visit_Global(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Global' in the type store
        # Getting the type of 'stypy_return_type' (line 827)
        stypy_return_type_25259 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 827, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25259)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Global'
        return stypy_return_type_25259


    @norecursion
    def visit_Break(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Break'
        module_type_store = module_type_store.open_function_context('visit_Break', 840, 4, False)
        # Assigning a type to the variable 'self' (line 841)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 841, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Break')
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Break.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Break', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Break', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Break(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 842)
        list_25260 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 842, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 842)
        
        # Assigning a type to the variable 'stypy_return_type' (line 842)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 842, 8), 'stypy_return_type', list_25260)
        
        # ################# End of 'visit_Break(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Break' in the type store
        # Getting the type of 'stypy_return_type' (line 840)
        stypy_return_type_25261 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 840, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25261)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Break'
        return stypy_return_type_25261


    @norecursion
    def visit_Continue(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Continue'
        module_type_store = module_type_store.open_function_context('visit_Continue', 844, 4, False)
        # Assigning a type to the variable 'self' (line 845)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 845, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Continue')
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Continue.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Continue', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Continue', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Continue(...)' code ##################

        
        # Obtaining an instance of the builtin type 'list' (line 846)
        list_25262 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 846, 15), 'list')
        # Adding type elements to the builtin type 'list' instance (line 846)
        
        # Assigning a type to the variable 'stypy_return_type' (line 846)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 846, 8), 'stypy_return_type', list_25262)
        
        # ################# End of 'visit_Continue(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Continue' in the type store
        # Getting the type of 'stypy_return_type' (line 844)
        stypy_return_type_25263 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 844, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25263)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Continue'
        return stypy_return_type_25263


    @norecursion
    def visit_Delete(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Delete'
        module_type_store = module_type_store.open_function_context('visit_Delete', 850, 4, False)
        # Assigning a type to the variable 'self' (line 851)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 851, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Delete')
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Delete.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Delete', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Delete', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Delete(...)' code ##################

        
        # Assigning a List to a Name (line 852):
        
        # Assigning a List to a Name (line 852):
        
        # Obtaining an instance of the builtin type 'list' (line 852)
        list_25264 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 852, 16), 'list')
        # Adding type elements to the builtin type 'list' instance (line 852)
        
        # Assigning a type to the variable 'stmts' (line 852)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 852, 8), 'stmts', list_25264)
        
        # Assigning a Call to a Name (line 854):
        
        # Assigning a Call to a Name (line 854):
        
        # Call to create_src_comment(...): (line 854)
        # Processing the call arguments (line 854)
        str_25267 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 854, 58), 'str', 'Deleting a member')
        # Processing the call keyword arguments (line 854)
        kwargs_25268 = {}
        # Getting the type of 'stypy_functions_copy' (line 854)
        stypy_functions_copy_25265 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 854, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 854)
        create_src_comment_25266 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 854, 18), stypy_functions_copy_25265, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 854)
        create_src_comment_call_result_25269 = invoke(stypy.reporting.localization.Localization(__file__, 854, 18), create_src_comment_25266, *[str_25267], **kwargs_25268)
        
        # Assigning a type to the variable 'comment' (line 854)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 854, 8), 'comment', create_src_comment_call_result_25269)
        
        # Getting the type of 'node' (line 855)
        node_25270 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 855, 22), 'node')
        # Obtaining the member 'targets' of a type (line 855)
        targets_25271 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 855, 22), node_25270, 'targets')
        # Assigning a type to the variable 'targets_25271' (line 855)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'targets_25271', targets_25271)
        # Testing if the for loop is going to be iterated (line 855)
        # Testing the type of a for loop iterable (line 855)
        is_suitable_for_loop_condition(stypy.reporting.localization.Localization(__file__, 855, 8), targets_25271)

        if will_iterate_loop(stypy.reporting.localization.Localization(__file__, 855, 8), targets_25271):
            # Getting the type of the for loop variable (line 855)
            for_loop_var_25272 = get_type_of_for_loop_variable(stypy.reporting.localization.Localization(__file__, 855, 8), targets_25271)
            # Assigning a type to the variable 'target' (line 855)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 855, 8), 'target', for_loop_var_25272)
            # SSA begins for a for statement (line 855)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'for loop')
            
            
            # Call to type(...): (line 857)
            # Processing the call arguments (line 857)
            # Getting the type of 'target' (line 857)
            target_25274 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 20), 'target', False)
            # Processing the call keyword arguments (line 857)
            kwargs_25275 = {}
            # Getting the type of 'type' (line 857)
            type_25273 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 15), 'type', False)
            # Calling type(args, kwargs) (line 857)
            type_call_result_25276 = invoke(stypy.reporting.localization.Localization(__file__, 857, 15), type_25273, *[target_25274], **kwargs_25275)
            
            # Getting the type of 'ast' (line 857)
            ast_25277 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 857, 31), 'ast')
            # Obtaining the member 'Attribute' of a type (line 857)
            Attribute_25278 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 857, 31), ast_25277, 'Attribute')
            # Applying the binary operator 'is' (line 857)
            result_is__25279 = python_operator(stypy.reporting.localization.Localization(__file__, 857, 15), 'is', type_call_result_25276, Attribute_25278)
            
            # Testing if the type of an if condition is none (line 857)

            if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 857, 12), result_is__25279):
                
                # Assigning a Str to a Name (line 862):
                
                # Assigning a Str to a Name (line 862):
                str_25290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 25), 'str', '__builtins__')
                # Assigning a type to the variable 'parent' (line 862)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 862, 16), 'parent', str_25290)
                
                # Assigning a Name to a Name (line 863):
                
                # Assigning a Name to a Name (line 863):
                # Getting the type of 'target' (line 863)
                target_25291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 23), 'target')
                # Assigning a type to the variable 'attr' (line 863)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'attr', target_25291)
            else:
                
                # Testing the type of an if condition (line 857)
                if_condition_25280 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 857, 12), result_is__25279)
                # Assigning a type to the variable 'if_condition_25280' (line 857)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 857, 12), 'if_condition_25280', if_condition_25280)
                # SSA begins for if statement (line 857)
                module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
                
                # Assigning a Attribute to a Name (line 858):
                
                # Assigning a Attribute to a Name (line 858):
                # Getting the type of 'target' (line 858)
                target_25281 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 858, 25), 'target')
                # Obtaining the member 'value' of a type (line 858)
                value_25282 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 25), target_25281, 'value')
                # Obtaining the member 'id' of a type (line 858)
                id_25283 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 858, 25), value_25282, 'id')
                # Assigning a type to the variable 'parent' (line 858)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 858, 16), 'parent', id_25283)
                
                # Assigning a Call to a Name (line 859):
                
                # Assigning a Call to a Name (line 859):
                
                # Call to create_str(...): (line 859)
                # Processing the call arguments (line 859)
                # Getting the type of 'target' (line 859)
                target_25286 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 53), 'target', False)
                # Obtaining the member 'attr' of a type (line 859)
                attr_25287 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 53), target_25286, 'attr')
                # Processing the call keyword arguments (line 859)
                kwargs_25288 = {}
                # Getting the type of 'core_language_copy' (line 859)
                core_language_copy_25284 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 859, 23), 'core_language_copy', False)
                # Obtaining the member 'create_str' of a type (line 859)
                create_str_25285 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 859, 23), core_language_copy_25284, 'create_str')
                # Calling create_str(args, kwargs) (line 859)
                create_str_call_result_25289 = invoke(stypy.reporting.localization.Localization(__file__, 859, 23), create_str_25285, *[attr_25287], **kwargs_25288)
                
                # Assigning a type to the variable 'attr' (line 859)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 859, 16), 'attr', create_str_call_result_25289)
                # SSA branch for the else part of an if statement (line 857)
                module_type_store.open_ssa_branch('else')
                
                # Assigning a Str to a Name (line 862):
                
                # Assigning a Str to a Name (line 862):
                str_25290 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 862, 25), 'str', '__builtins__')
                # Assigning a type to the variable 'parent' (line 862)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 862, 16), 'parent', str_25290)
                
                # Assigning a Name to a Name (line 863):
                
                # Assigning a Name to a Name (line 863):
                # Getting the type of 'target' (line 863)
                target_25291 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 863, 23), 'target')
                # Assigning a type to the variable 'attr' (line 863)
                module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 863, 16), 'attr', target_25291)
                # SSA join for if statement (line 857)
                module_type_store = module_type_store.join_ssa_context()
                

            
            # Assigning a Call to a Tuple (line 865):
            
            # Assigning a Call to a Name:
            
            # Call to create_get_type_of(...): (line 865)
            # Processing the call arguments (line 865)
            # Getting the type of 'parent' (line 865)
            parent_25294 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 79), 'parent', False)
            # Getting the type of 'node' (line 865)
            node_25295 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 87), 'node', False)
            # Obtaining the member 'lineno' of a type (line 865)
            lineno_25296 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 87), node_25295, 'lineno')
            # Getting the type of 'node' (line 865)
            node_25297 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 100), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 865)
            col_offset_25298 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 100), node_25297, 'col_offset')
            # Processing the call keyword arguments (line 865)
            kwargs_25299 = {}
            # Getting the type of 'stypy_functions_copy' (line 865)
            stypy_functions_copy_25292 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 39), 'stypy_functions_copy', False)
            # Obtaining the member 'create_get_type_of' of a type (line 865)
            create_get_type_of_25293 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 865, 39), stypy_functions_copy_25292, 'create_get_type_of')
            # Calling create_get_type_of(args, kwargs) (line 865)
            create_get_type_of_call_result_25300 = invoke(stypy.reporting.localization.Localization(__file__, 865, 39), create_get_type_of_25293, *[parent_25294, lineno_25296, col_offset_25298], **kwargs_25299)
            
            # Assigning a type to the variable 'call_assignment_22372' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_22372', create_get_type_of_call_result_25300)
            
            # Assigning a Call to a Name (line 865):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22372' (line 865)
            call_assignment_22372_25301 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_22372', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_25302 = stypy_get_value_from_tuple(call_assignment_22372_25301, 2, 0)
            
            # Assigning a type to the variable 'call_assignment_22373' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_22373', stypy_get_value_from_tuple_call_result_25302)
            
            # Assigning a Name to a Name (line 865):
            # Getting the type of 'call_assignment_22373' (line 865)
            call_assignment_22373_25303 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_22373')
            # Assigning a type to the variable 'parent_stmts' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'parent_stmts', call_assignment_22373_25303)
            
            # Assigning a Call to a Name (line 865):
            
            # Call to stypy_get_value_from_tuple(...):
            # Processing the call arguments
            # Getting the type of 'call_assignment_22372' (line 865)
            call_assignment_22372_25304 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_22372', False)
            # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
            stypy_get_value_from_tuple_call_result_25305 = stypy_get_value_from_tuple(call_assignment_22372_25304, 2, 1)
            
            # Assigning a type to the variable 'call_assignment_22374' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_22374', stypy_get_value_from_tuple_call_result_25305)
            
            # Assigning a Name to a Name (line 865):
            # Getting the type of 'call_assignment_22374' (line 865)
            call_assignment_22374_25306 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 865, 12), 'call_assignment_22374')
            # Assigning a type to the variable 'parent_var' (line 865)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 865, 26), 'parent_var', call_assignment_22374_25306)
            
            # Assigning a Call to a Name (line 867):
            
            # Assigning a Call to a Name (line 867):
            
            # Call to create_attribute(...): (line 867)
            # Processing the call arguments (line 867)
            # Getting the type of 'parent_var' (line 867)
            parent_var_25309 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 62), 'parent_var', False)
            str_25310 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 867, 74), 'str', 'delete_member')
            # Processing the call keyword arguments (line 867)
            # Getting the type of 'node' (line 868)
            node_25311 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 868, 62), 'node', False)
            # Obtaining the member 'lineno' of a type (line 868)
            lineno_25312 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 868, 62), node_25311, 'lineno')
            keyword_25313 = lineno_25312
            # Getting the type of 'node' (line 869)
            node_25314 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 869, 64), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 869)
            col_offset_25315 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 869, 64), node_25314, 'col_offset')
            keyword_25316 = col_offset_25315
            kwargs_25317 = {'column': keyword_25316, 'line': keyword_25313}
            # Getting the type of 'core_language_copy' (line 867)
            core_language_copy_25307 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 867, 26), 'core_language_copy', False)
            # Obtaining the member 'create_attribute' of a type (line 867)
            create_attribute_25308 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 867, 26), core_language_copy_25307, 'create_attribute')
            # Calling create_attribute(args, kwargs) (line 867)
            create_attribute_call_result_25318 = invoke(stypy.reporting.localization.Localization(__file__, 867, 26), create_attribute_25308, *[parent_var_25309, str_25310], **kwargs_25317)
            
            # Assigning a type to the variable 'delete_func' (line 867)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 867, 12), 'delete_func', create_attribute_call_result_25318)
            
            # Assigning a Call to a Name (line 871):
            
            # Assigning a Call to a Name (line 871):
            
            # Call to create_localization(...): (line 871)
            # Processing the call arguments (line 871)
            # Getting the type of 'node' (line 871)
            node_25321 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 68), 'node', False)
            # Obtaining the member 'lineno' of a type (line 871)
            lineno_25322 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 68), node_25321, 'lineno')
            # Getting the type of 'node' (line 871)
            node_25323 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 81), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 871)
            col_offset_25324 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 81), node_25323, 'col_offset')
            # Processing the call keyword arguments (line 871)
            kwargs_25325 = {}
            # Getting the type of 'stypy_functions_copy' (line 871)
            stypy_functions_copy_25319 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 871, 27), 'stypy_functions_copy', False)
            # Obtaining the member 'create_localization' of a type (line 871)
            create_localization_25320 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 871, 27), stypy_functions_copy_25319, 'create_localization')
            # Calling create_localization(args, kwargs) (line 871)
            create_localization_call_result_25326 = invoke(stypy.reporting.localization.Localization(__file__, 871, 27), create_localization_25320, *[lineno_25322, col_offset_25324], **kwargs_25325)
            
            # Assigning a type to the variable 'localization' (line 871)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 871, 12), 'localization', create_localization_call_result_25326)
            
            # Assigning a Call to a Name (line 872):
            
            # Assigning a Call to a Name (line 872):
            
            # Call to create_call_expression(...): (line 872)
            # Processing the call arguments (line 872)
            # Getting the type of 'delete_func' (line 872)
            delete_func_25329 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 71), 'delete_func', False)
            
            # Obtaining an instance of the builtin type 'list' (line 873)
            list_25330 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 873, 66), 'list')
            # Adding type elements to the builtin type 'list' instance (line 873)
            # Adding element type (line 873)
            # Getting the type of 'localization' (line 873)
            localization_25331 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 67), 'localization', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 873, 66), list_25330, localization_25331)
            # Adding element type (line 873)
            # Getting the type of 'attr' (line 873)
            attr_25332 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 873, 81), 'attr', False)
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 873, 66), list_25330, attr_25332)
            
            # Processing the call keyword arguments (line 872)
            kwargs_25333 = {}
            # Getting the type of 'functions_copy' (line 872)
            functions_copy_25327 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 872, 33), 'functions_copy', False)
            # Obtaining the member 'create_call_expression' of a type (line 872)
            create_call_expression_25328 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 872, 33), functions_copy_25327, 'create_call_expression')
            # Calling create_call_expression(args, kwargs) (line 872)
            create_call_expression_call_result_25334 = invoke(stypy.reporting.localization.Localization(__file__, 872, 33), create_call_expression_25328, *[delete_func_25329, list_25330], **kwargs_25333)
            
            # Assigning a type to the variable 'delete_member_call' (line 872)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 872, 12), 'delete_member_call', create_call_expression_call_result_25334)
            
            # Getting the type of 'stmts' (line 875)
            stmts_25335 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 12), 'stmts')
            
            # Call to flatten_lists(...): (line 875)
            # Processing the call arguments (line 875)
            # Getting the type of 'comment' (line 875)
            comment_25338 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 56), 'comment', False)
            # Getting the type of 'parent_stmts' (line 875)
            parent_stmts_25339 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 65), 'parent_stmts', False)
            # Getting the type of 'delete_member_call' (line 875)
            delete_member_call_25340 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 79), 'delete_member_call', False)
            # Processing the call keyword arguments (line 875)
            kwargs_25341 = {}
            # Getting the type of 'stypy_functions_copy' (line 875)
            stypy_functions_copy_25336 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 875, 21), 'stypy_functions_copy', False)
            # Obtaining the member 'flatten_lists' of a type (line 875)
            flatten_lists_25337 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 875, 21), stypy_functions_copy_25336, 'flatten_lists')
            # Calling flatten_lists(args, kwargs) (line 875)
            flatten_lists_call_result_25342 = invoke(stypy.reporting.localization.Localization(__file__, 875, 21), flatten_lists_25337, *[comment_25338, parent_stmts_25339, delete_member_call_25340], **kwargs_25341)
            
            # Applying the binary operator '+=' (line 875)
            result_iadd_25343 = python_operator(stypy.reporting.localization.Localization(__file__, 875, 12), '+=', stmts_25335, flatten_lists_call_result_25342)
            # Assigning a type to the variable 'stmts' (line 875)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 875, 12), 'stmts', result_iadd_25343)
            
            # SSA join for a for statement
            module_type_store = module_type_store.join_ssa_context()

        
        # Getting the type of 'stmts' (line 877)
        stmts_25344 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 877, 15), 'stmts')
        # Assigning a type to the variable 'stypy_return_type' (line 877)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 877, 8), 'stypy_return_type', stmts_25344)
        
        # ################# End of 'visit_Delete(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Delete' in the type store
        # Getting the type of 'stypy_return_type' (line 850)
        stypy_return_type_25345 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 850, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25345)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Delete'
        return stypy_return_type_25345


    @norecursion
    def visit_Assert(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Assert'
        module_type_store = module_type_store.open_function_context('visit_Assert', 881, 4, False)
        # Assigning a type to the variable 'self' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Assert')
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Assert.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Assert', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Assert', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Assert(...)' code ##################

        
        # Assigning a Call to a Name (line 882):
        
        # Assigning a Call to a Name (line 882):
        
        # Call to create_src_comment(...): (line 882)
        # Processing the call arguments (line 882)
        str_25348 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 882, 58), 'str', 'Evaluating assert statement condition')
        # Processing the call keyword arguments (line 882)
        kwargs_25349 = {}
        # Getting the type of 'stypy_functions_copy' (line 882)
        stypy_functions_copy_25346 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 882, 18), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 882)
        create_src_comment_25347 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 882, 18), stypy_functions_copy_25346, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 882)
        create_src_comment_call_result_25350 = invoke(stypy.reporting.localization.Localization(__file__, 882, 18), create_src_comment_25347, *[str_25348], **kwargs_25349)
        
        # Assigning a type to the variable 'comment' (line 882)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 882, 8), 'comment', create_src_comment_call_result_25350)
        
        # Assigning a Call to a Tuple (line 883):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 883)
        # Processing the call arguments (line 883)
        # Getting the type of 'node' (line 883)
        node_25353 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 32), 'node', False)
        # Obtaining the member 'test' of a type (line 883)
        test_25354 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 32), node_25353, 'test')
        # Getting the type of 'context' (line 883)
        context_25355 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 43), 'context', False)
        # Processing the call keyword arguments (line 883)
        kwargs_25356 = {}
        # Getting the type of 'self' (line 883)
        self_25351 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 21), 'self', False)
        # Obtaining the member 'visit' of a type (line 883)
        visit_25352 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 883, 21), self_25351, 'visit')
        # Calling visit(args, kwargs) (line 883)
        visit_call_result_25357 = invoke(stypy.reporting.localization.Localization(__file__, 883, 21), visit_25352, *[test_25354, context_25355], **kwargs_25356)
        
        # Assigning a type to the variable 'call_assignment_22375' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_22375', visit_call_result_25357)
        
        # Assigning a Call to a Name (line 883):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22375' (line 883)
        call_assignment_22375_25358 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_22375', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25359 = stypy_get_value_from_tuple(call_assignment_22375_25358, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22376' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_22376', stypy_get_value_from_tuple_call_result_25359)
        
        # Assigning a Name to a Name (line 883):
        # Getting the type of 'call_assignment_22376' (line 883)
        call_assignment_22376_25360 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_22376')
        # Assigning a type to the variable 'stmts' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'stmts', call_assignment_22376_25360)
        
        # Assigning a Call to a Name (line 883):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22375' (line 883)
        call_assignment_22375_25361 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_22375', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25362 = stypy_get_value_from_tuple(call_assignment_22375_25361, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22377' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_22377', stypy_get_value_from_tuple_call_result_25362)
        
        # Assigning a Name to a Name (line 883):
        # Getting the type of 'call_assignment_22377' (line 883)
        call_assignment_22377_25363 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 883, 8), 'call_assignment_22377')
        # Assigning a type to the variable 'var' (line 883)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 883, 15), 'var', call_assignment_22377_25363)
        
        # Call to flatten_lists(...): (line 884)
        # Processing the call arguments (line 884)
        # Getting the type of 'comment' (line 884)
        comment_25366 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 50), 'comment', False)
        # Getting the type of 'stmts' (line 884)
        stmts_25367 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 59), 'stmts', False)
        # Processing the call keyword arguments (line 884)
        kwargs_25368 = {}
        # Getting the type of 'stypy_functions_copy' (line 884)
        stypy_functions_copy_25364 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 884, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 884)
        flatten_lists_25365 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 884, 15), stypy_functions_copy_25364, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 884)
        flatten_lists_call_result_25369 = invoke(stypy.reporting.localization.Localization(__file__, 884, 15), flatten_lists_25365, *[comment_25366, stmts_25367], **kwargs_25368)
        
        # Assigning a type to the variable 'stypy_return_type' (line 884)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 884, 8), 'stypy_return_type', flatten_lists_call_result_25369)
        
        # ################# End of 'visit_Assert(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Assert' in the type store
        # Getting the type of 'stypy_return_type' (line 881)
        stypy_return_type_25370 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 881, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25370)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Assert'
        return stypy_return_type_25370


    @norecursion
    def visit_Exec(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Exec'
        module_type_store = module_type_store.open_function_context('visit_Exec', 886, 4, False)
        # Assigning a type to the variable 'self' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Exec')
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Exec.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Exec', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Exec', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Exec(...)' code ##################

        
        # Assigning a Call to a Name (line 887):
        
        # Assigning a Call to a Name (line 887):
        
        # Call to create_src_comment(...): (line 887)
        # Processing the call arguments (line 887)
        str_25373 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 887, 62), 'str', 'Dynamic code evaluation using an exec statement')
        # Processing the call keyword arguments (line 887)
        kwargs_25374 = {}
        # Getting the type of 'stypy_functions_copy' (line 887)
        stypy_functions_copy_25371 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 887, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 887)
        create_src_comment_25372 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 887, 22), stypy_functions_copy_25371, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 887)
        create_src_comment_call_result_25375 = invoke(stypy.reporting.localization.Localization(__file__, 887, 22), create_src_comment_25372, *[str_25373], **kwargs_25374)
        
        # Assigning a type to the variable 'src_comment' (line 887)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 887, 8), 'src_comment', create_src_comment_call_result_25375)
        
        # Assigning a Call to a Name (line 888):
        
        # Assigning a Call to a Name (line 888):
        
        # Call to create_localization(...): (line 888)
        # Processing the call arguments (line 888)
        # Getting the type of 'node' (line 888)
        node_25378 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 888)
        lineno_25379 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 64), node_25378, 'lineno')
        # Getting the type of 'node' (line 888)
        node_25380 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 888)
        col_offset_25381 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 77), node_25380, 'col_offset')
        # Processing the call keyword arguments (line 888)
        kwargs_25382 = {}
        # Getting the type of 'stypy_functions_copy' (line 888)
        stypy_functions_copy_25376 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 888, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 888)
        create_localization_25377 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 888, 23), stypy_functions_copy_25376, 'create_localization')
        # Calling create_localization(args, kwargs) (line 888)
        create_localization_call_result_25383 = invoke(stypy.reporting.localization.Localization(__file__, 888, 23), create_localization_25377, *[lineno_25379, col_offset_25381], **kwargs_25382)
        
        # Assigning a type to the variable 'localization' (line 888)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 888, 8), 'localization', create_localization_call_result_25383)
        
        # Assigning a Call to a Name (line 889):
        
        # Assigning a Call to a Name (line 889):
        
        # Call to create_Name(...): (line 889)
        # Processing the call arguments (line 889)
        str_25386 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 889, 57), 'str', 'ensure_var_of_types')
        # Processing the call keyword arguments (line 889)
        # Getting the type of 'node' (line 890)
        node_25387 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 890, 57), 'node', False)
        # Obtaining the member 'lineno' of a type (line 890)
        lineno_25388 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 890, 57), node_25387, 'lineno')
        keyword_25389 = lineno_25388
        # Getting the type of 'node' (line 891)
        node_25390 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 891, 59), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 891)
        col_offset_25391 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 891, 59), node_25390, 'col_offset')
        keyword_25392 = col_offset_25391
        kwargs_25393 = {'column': keyword_25392, 'line': keyword_25389}
        # Getting the type of 'core_language_copy' (line 889)
        core_language_copy_25384 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 889, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 889)
        create_Name_25385 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 889, 26), core_language_copy_25384, 'create_Name')
        # Calling create_Name(args, kwargs) (line 889)
        create_Name_call_result_25394 = invoke(stypy.reporting.localization.Localization(__file__, 889, 26), create_Name_25385, *[str_25386], **kwargs_25393)
        
        # Assigning a type to the variable 'type_check_func' (line 889)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 889, 8), 'type_check_func', create_Name_call_result_25394)
        
        # Assigning a Call to a Tuple (line 893):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 893)
        # Processing the call arguments (line 893)
        # Getting the type of 'node' (line 893)
        node_25397 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 42), 'node', False)
        # Obtaining the member 'body' of a type (line 893)
        body_25398 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 42), node_25397, 'body')
        # Getting the type of 'context' (line 893)
        context_25399 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 53), 'context', False)
        # Processing the call keyword arguments (line 893)
        kwargs_25400 = {}
        # Getting the type of 'self' (line 893)
        self_25395 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 893)
        visit_25396 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 893, 31), self_25395, 'visit')
        # Calling visit(args, kwargs) (line 893)
        visit_call_result_25401 = invoke(stypy.reporting.localization.Localization(__file__, 893, 31), visit_25396, *[body_25398, context_25399], **kwargs_25400)
        
        # Assigning a type to the variable 'call_assignment_22378' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_22378', visit_call_result_25401)
        
        # Assigning a Call to a Name (line 893):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22378' (line 893)
        call_assignment_22378_25402 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_22378', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25403 = stypy_get_value_from_tuple(call_assignment_22378_25402, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22379' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_22379', stypy_get_value_from_tuple_call_result_25403)
        
        # Assigning a Name to a Name (line 893):
        # Getting the type of 'call_assignment_22379' (line 893)
        call_assignment_22379_25404 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_22379')
        # Assigning a type to the variable 'body_stmts' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'body_stmts', call_assignment_22379_25404)
        
        # Assigning a Call to a Name (line 893):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22378' (line 893)
        call_assignment_22378_25405 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_22378', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25406 = stypy_get_value_from_tuple(call_assignment_22378_25405, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22380' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_22380', stypy_get_value_from_tuple_call_result_25406)
        
        # Assigning a Name to a Name (line 893):
        # Getting the type of 'call_assignment_22380' (line 893)
        call_assignment_22380_25407 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 893, 8), 'call_assignment_22380')
        # Assigning a type to the variable 'body_var' (line 893)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 893, 20), 'body_var', call_assignment_22380_25407)
        
        # Assigning a Call to a Name (line 895):
        
        # Assigning a Call to a Name (line 895):
        
        # Call to create_str(...): (line 895)
        # Processing the call arguments (line 895)
        str_25410 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 895, 52), 'str', 'exec parameter')
        # Processing the call keyword arguments (line 895)
        kwargs_25411 = {}
        # Getting the type of 'core_language_copy' (line 895)
        core_language_copy_25408 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 895, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 895)
        create_str_25409 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 895, 22), core_language_copy_25408, 'create_str')
        # Calling create_str(args, kwargs) (line 895)
        create_str_call_result_25412 = invoke(stypy.reporting.localization.Localization(__file__, 895, 22), create_str_25409, *[str_25410], **kwargs_25411)
        
        # Assigning a type to the variable 'description' (line 895)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 895, 8), 'description', create_str_call_result_25412)
        
        # Assigning a Call to a Name (line 896):
        
        # Assigning a Call to a Name (line 896):
        
        # Call to create_str(...): (line 896)
        # Processing the call arguments (line 896)
        str_25415 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 896, 52), 'str', 'StringType')
        # Processing the call keyword arguments (line 896)
        kwargs_25416 = {}
        # Getting the type of 'core_language_copy' (line 896)
        core_language_copy_25413 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 896, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 896)
        create_str_25414 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 896, 22), core_language_copy_25413, 'create_str')
        # Calling create_str(args, kwargs) (line 896)
        create_str_call_result_25417 = invoke(stypy.reporting.localization.Localization(__file__, 896, 22), create_str_25414, *[str_25415], **kwargs_25416)
        
        # Assigning a type to the variable 'string_type' (line 896)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 896, 8), 'string_type', create_str_call_result_25417)
        
        # Assigning a Call to a Name (line 897):
        
        # Assigning a Call to a Name (line 897):
        
        # Call to create_str(...): (line 897)
        # Processing the call arguments (line 897)
        str_25420 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 897, 50), 'str', 'FileType')
        # Processing the call keyword arguments (line 897)
        kwargs_25421 = {}
        # Getting the type of 'core_language_copy' (line 897)
        core_language_copy_25418 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 897, 20), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 897)
        create_str_25419 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 897, 20), core_language_copy_25418, 'create_str')
        # Calling create_str(args, kwargs) (line 897)
        create_str_call_result_25422 = invoke(stypy.reporting.localization.Localization(__file__, 897, 20), create_str_25419, *[str_25420], **kwargs_25421)
        
        # Assigning a type to the variable 'file_type' (line 897)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 897, 8), 'file_type', create_str_call_result_25422)
        
        # Assigning a Call to a Name (line 898):
        
        # Assigning a Call to a Name (line 898):
        
        # Call to create_str(...): (line 898)
        # Processing the call arguments (line 898)
        str_25425 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 898, 50), 'str', 'CodeType')
        # Processing the call keyword arguments (line 898)
        kwargs_25426 = {}
        # Getting the type of 'core_language_copy' (line 898)
        core_language_copy_25423 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 898, 20), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 898)
        create_str_25424 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 898, 20), core_language_copy_25423, 'create_str')
        # Calling create_str(args, kwargs) (line 898)
        create_str_call_result_25427 = invoke(stypy.reporting.localization.Localization(__file__, 898, 20), create_str_25424, *[str_25425], **kwargs_25426)
        
        # Assigning a type to the variable 'code_type' (line 898)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 898, 8), 'code_type', create_str_call_result_25427)
        
        # Assigning a Call to a Name (line 899):
        
        # Assigning a Call to a Name (line 899):
        
        # Call to create_call_expression(...): (line 899)
        # Processing the call arguments (line 899)
        # Getting the type of 'type_check_func' (line 899)
        type_check_func_25430 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 66), 'type_check_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 900)
        list_25431 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 900, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 900)
        # Adding element type (line 900)
        # Getting the type of 'localization' (line 900)
        localization_25432 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 62), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_25431, localization_25432)
        # Adding element type (line 900)
        # Getting the type of 'body_var' (line 900)
        body_var_25433 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 76), 'body_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_25431, body_var_25433)
        # Adding element type (line 900)
        # Getting the type of 'description' (line 900)
        description_25434 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 900, 86), 'description', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_25431, description_25434)
        # Adding element type (line 900)
        # Getting the type of 'string_type' (line 901)
        string_type_25435 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 901, 62), 'string_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_25431, string_type_25435)
        # Adding element type (line 900)
        # Getting the type of 'file_type' (line 902)
        file_type_25436 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 902, 62), 'file_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_25431, file_type_25436)
        # Adding element type (line 900)
        # Getting the type of 'code_type' (line 903)
        code_type_25437 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 903, 62), 'code_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 900, 61), list_25431, code_type_25437)
        
        # Processing the call keyword arguments (line 899)
        kwargs_25438 = {}
        # Getting the type of 'functions_copy' (line 899)
        functions_copy_25428 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 899, 28), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 899)
        create_call_expression_25429 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 899, 28), functions_copy_25428, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 899)
        create_call_expression_call_result_25439 = invoke(stypy.reporting.localization.Localization(__file__, 899, 28), create_call_expression_25429, *[type_check_func_25430, list_25431], **kwargs_25438)
        
        # Assigning a type to the variable 'check_params_call' (line 899)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 899, 8), 'check_params_call', create_call_expression_call_result_25439)
        
        # Assigning a Call to a Name (line 905):
        
        # Assigning a Call to a Name (line 905):
        
        # Call to create_unsupported_feature_call(...): (line 905)
        # Processing the call arguments (line 905)
        # Getting the type of 'localization' (line 905)
        localization_25442 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 88), 'localization', False)
        str_25443 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 905, 102), 'str', 'exec')
        str_25444 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 906, 83), 'str', 'Dynamic code evaluation using exec is not yet supported by stypy')
        # Getting the type of 'node' (line 907)
        node_25445 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 83), 'node', False)
        # Obtaining the member 'lineno' of a type (line 907)
        lineno_25446 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 83), node_25445, 'lineno')
        # Getting the type of 'node' (line 907)
        node_25447 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 907, 96), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 907)
        col_offset_25448 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 907, 96), node_25447, 'col_offset')
        # Processing the call keyword arguments (line 905)
        kwargs_25449 = {}
        # Getting the type of 'stypy_functions_copy' (line 905)
        stypy_functions_copy_25440 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 905, 35), 'stypy_functions_copy', False)
        # Obtaining the member 'create_unsupported_feature_call' of a type (line 905)
        create_unsupported_feature_call_25441 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 905, 35), stypy_functions_copy_25440, 'create_unsupported_feature_call')
        # Calling create_unsupported_feature_call(args, kwargs) (line 905)
        create_unsupported_feature_call_call_result_25450 = invoke(stypy.reporting.localization.Localization(__file__, 905, 35), create_unsupported_feature_call_25441, *[localization_25442, str_25443, str_25444, lineno_25446, col_offset_25448], **kwargs_25449)
        
        # Assigning a type to the variable 'unsupported_feature_call' (line 905)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 905, 8), 'unsupported_feature_call', create_unsupported_feature_call_call_result_25450)
        
        # Call to flatten_lists(...): (line 909)
        # Processing the call arguments (line 909)
        # Getting the type of 'src_comment' (line 909)
        src_comment_25453 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 50), 'src_comment', False)
        # Getting the type of 'body_stmts' (line 909)
        body_stmts_25454 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 63), 'body_stmts', False)
        # Getting the type of 'check_params_call' (line 909)
        check_params_call_25455 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 75), 'check_params_call', False)
        # Getting the type of 'unsupported_feature_call' (line 909)
        unsupported_feature_call_25456 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 94), 'unsupported_feature_call', False)
        # Processing the call keyword arguments (line 909)
        kwargs_25457 = {}
        # Getting the type of 'stypy_functions_copy' (line 909)
        stypy_functions_copy_25451 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 909, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 909)
        flatten_lists_25452 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 909, 15), stypy_functions_copy_25451, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 909)
        flatten_lists_call_result_25458 = invoke(stypy.reporting.localization.Localization(__file__, 909, 15), flatten_lists_25452, *[src_comment_25453, body_stmts_25454, check_params_call_25455, unsupported_feature_call_25456], **kwargs_25457)
        
        # Assigning a type to the variable 'stypy_return_type' (line 909)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 909, 8), 'stypy_return_type', flatten_lists_call_result_25458)
        
        # ################# End of 'visit_Exec(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Exec' in the type store
        # Getting the type of 'stypy_return_type' (line 886)
        stypy_return_type_25459 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 886, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25459)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Exec'
        return stypy_return_type_25459


    @norecursion
    def visit_Yield(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Yield'
        module_type_store = module_type_store.open_function_context('visit_Yield', 911, 4, False)
        # Assigning a type to the variable 'self' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Yield')
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Yield.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Yield', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Yield', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Yield(...)' code ##################

        
        # Assigning a Call to a Name (line 912):
        
        # Assigning a Call to a Name (line 912):
        
        # Call to create_src_comment(...): (line 912)
        # Processing the call arguments (line 912)
        str_25462 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 912, 62), 'str', 'Creating a generator')
        # Processing the call keyword arguments (line 912)
        kwargs_25463 = {}
        # Getting the type of 'stypy_functions_copy' (line 912)
        stypy_functions_copy_25460 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 912, 22), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 912)
        create_src_comment_25461 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 912, 22), stypy_functions_copy_25460, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 912)
        create_src_comment_call_result_25464 = invoke(stypy.reporting.localization.Localization(__file__, 912, 22), create_src_comment_25461, *[str_25462], **kwargs_25463)
        
        # Assigning a type to the variable 'src_comment' (line 912)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 912, 8), 'src_comment', create_src_comment_call_result_25464)
        
        # Assigning a Call to a Name (line 913):
        
        # Assigning a Call to a Name (line 913):
        
        # Call to create_localization(...): (line 913)
        # Processing the call arguments (line 913)
        # Getting the type of 'node' (line 913)
        node_25467 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 913)
        lineno_25468 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 64), node_25467, 'lineno')
        # Getting the type of 'node' (line 913)
        node_25469 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 913)
        col_offset_25470 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 77), node_25469, 'col_offset')
        # Processing the call keyword arguments (line 913)
        kwargs_25471 = {}
        # Getting the type of 'stypy_functions_copy' (line 913)
        stypy_functions_copy_25465 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 913, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 913)
        create_localization_25466 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 913, 23), stypy_functions_copy_25465, 'create_localization')
        # Calling create_localization(args, kwargs) (line 913)
        create_localization_call_result_25472 = invoke(stypy.reporting.localization.Localization(__file__, 913, 23), create_localization_25466, *[lineno_25468, col_offset_25470], **kwargs_25471)
        
        # Assigning a type to the variable 'localization' (line 913)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 913, 8), 'localization', create_localization_call_result_25472)
        
        # Assigning a Call to a Tuple (line 914):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 914)
        # Processing the call arguments (line 914)
        # Getting the type of 'node' (line 914)
        node_25475 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 76), 'node', False)
        # Obtaining the member 'value' of a type (line 914)
        value_25476 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 914, 76), node_25475, 'value')
        # Getting the type of 'context' (line 914)
        context_25477 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 88), 'context', False)
        # Processing the call keyword arguments (line 914)
        kwargs_25478 = {}
        # Getting the type of 'self' (line 914)
        self_25473 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 65), 'self', False)
        # Obtaining the member 'visit' of a type (line 914)
        visit_25474 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 914, 65), self_25473, 'visit')
        # Calling visit(args, kwargs) (line 914)
        visit_call_result_25479 = invoke(stypy.reporting.localization.Localization(__file__, 914, 65), visit_25474, *[value_25476, context_25477], **kwargs_25478)
        
        # Assigning a type to the variable 'call_assignment_22381' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_22381', visit_call_result_25479)
        
        # Assigning a Call to a Name (line 914):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22381' (line 914)
        call_assignment_22381_25480 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_22381', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25481 = stypy_get_value_from_tuple(call_assignment_22381_25480, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22382' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_22382', stypy_get_value_from_tuple_call_result_25481)
        
        # Assigning a Name to a Name (line 914):
        # Getting the type of 'call_assignment_22382' (line 914)
        call_assignment_22382_25482 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_22382')
        # Assigning a type to the variable 'generator_stored_type_stmts' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'generator_stored_type_stmts', call_assignment_22382_25482)
        
        # Assigning a Call to a Name (line 914):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22381' (line 914)
        call_assignment_22381_25483 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_22381', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25484 = stypy_get_value_from_tuple(call_assignment_22381_25483, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22383' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_22383', stypy_get_value_from_tuple_call_result_25484)
        
        # Assigning a Name to a Name (line 914):
        # Getting the type of 'call_assignment_22383' (line 914)
        call_assignment_22383_25485 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 914, 8), 'call_assignment_22383')
        # Assigning a type to the variable 'generator_stored_type_var' (line 914)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 914, 37), 'generator_stored_type_var', call_assignment_22383_25485)
        
        # Assigning a Call to a Name (line 916):
        
        # Assigning a Call to a Name (line 916):
        
        # Call to create_str(...): (line 916)
        # Processing the call arguments (line 916)
        str_25488 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 916, 53), 'str', 'types')
        # Processing the call keyword arguments (line 916)
        kwargs_25489 = {}
        # Getting the type of 'core_language_copy' (line 916)
        core_language_copy_25486 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 916, 23), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 916)
        create_str_25487 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 916, 23), core_language_copy_25486, 'create_str')
        # Calling create_str(args, kwargs) (line 916)
        create_str_call_result_25490 = invoke(stypy.reporting.localization.Localization(__file__, 916, 23), create_str_25487, *[str_25488], **kwargs_25489)
        
        # Assigning a type to the variable 'types_module' (line 916)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 916, 8), 'types_module', create_str_call_result_25490)
        
        # Assigning a Call to a Name (line 917):
        
        # Assigning a Call to a Name (line 917):
        
        # Call to create_str(...): (line 917)
        # Processing the call arguments (line 917)
        str_25493 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 917, 55), 'str', 'GeneratorType')
        # Processing the call keyword arguments (line 917)
        kwargs_25494 = {}
        # Getting the type of 'core_language_copy' (line 917)
        core_language_copy_25491 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 917, 25), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 917)
        create_str_25492 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 917, 25), core_language_copy_25491, 'create_str')
        # Calling create_str(args, kwargs) (line 917)
        create_str_call_result_25495 = invoke(stypy.reporting.localization.Localization(__file__, 917, 25), create_str_25492, *[str_25493], **kwargs_25494)
        
        # Assigning a type to the variable 'generator_type' (line 917)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 917, 8), 'generator_type', create_str_call_result_25495)
        
        # Assigning a Call to a Name (line 918):
        
        # Assigning a Call to a Name (line 918):
        
        # Call to create_Name(...): (line 918)
        # Processing the call arguments (line 918)
        str_25498 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 918, 55), 'str', 'get_python_api_type')
        # Processing the call keyword arguments (line 918)
        kwargs_25499 = {}
        # Getting the type of 'core_language_copy' (line 918)
        core_language_copy_25496 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 918, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 918)
        create_Name_25497 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 918, 24), core_language_copy_25496, 'create_Name')
        # Calling create_Name(args, kwargs) (line 918)
        create_Name_call_result_25500 = invoke(stypy.reporting.localization.Localization(__file__, 918, 24), create_Name_25497, *[str_25498], **kwargs_25499)
        
        # Assigning a type to the variable 'get_type_func' (line 918)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 918, 8), 'get_type_func', create_Name_call_result_25500)
        
        # Assigning a Call to a Name (line 919):
        
        # Assigning a Call to a Name (line 919):
        
        # Call to create_call(...): (line 919)
        # Processing the call arguments (line 919)
        # Getting the type of 'get_type_func' (line 919)
        get_type_func_25503 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 56), 'get_type_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 920)
        list_25504 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 920, 51), 'list')
        # Adding type elements to the builtin type 'list' instance (line 920)
        # Adding element type (line 920)
        # Getting the type of 'localization' (line 920)
        localization_25505 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 52), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 51), list_25504, localization_25505)
        # Adding element type (line 920)
        # Getting the type of 'types_module' (line 920)
        types_module_25506 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 66), 'types_module', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 51), list_25504, types_module_25506)
        # Adding element type (line 920)
        # Getting the type of 'generator_type' (line 920)
        generator_type_25507 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 920, 80), 'generator_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 920, 51), list_25504, generator_type_25507)
        
        # Processing the call keyword arguments (line 919)
        kwargs_25508 = {}
        # Getting the type of 'functions_copy' (line 919)
        functions_copy_25501 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 919, 29), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 919)
        create_call_25502 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 919, 29), functions_copy_25501, 'create_call')
        # Calling create_call(args, kwargs) (line 919)
        create_call_call_result_25509 = invoke(stypy.reporting.localization.Localization(__file__, 919, 29), create_call_25502, *[get_type_func_25503, list_25504], **kwargs_25508)
        
        # Assigning a type to the variable 'get_generator_call' (line 919)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 919, 8), 'get_generator_call', create_call_call_result_25509)
        
        # Assigning a Call to a Tuple (line 922):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 922)
        # Processing the call arguments (line 922)
        # Getting the type of 'get_generator_call' (line 922)
        get_generator_call_25512 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 86), 'get_generator_call', False)
        # Getting the type of 'node' (line 922)
        node_25513 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 106), 'node', False)
        # Obtaining the member 'lineno' of a type (line 922)
        lineno_25514 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 106), node_25513, 'lineno')
        # Getting the type of 'node' (line 923)
        node_25515 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 923, 81), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 923)
        col_offset_25516 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 923, 81), node_25515, 'col_offset')
        # Processing the call keyword arguments (line 922)
        kwargs_25517 = {}
        # Getting the type of 'stypy_functions_copy' (line 922)
        stypy_functions_copy_25510 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 46), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 922)
        create_temp_Assign_25511 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 922, 46), stypy_functions_copy_25510, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 922)
        create_temp_Assign_call_result_25518 = invoke(stypy.reporting.localization.Localization(__file__, 922, 46), create_temp_Assign_25511, *[get_generator_call_25512, lineno_25514, col_offset_25516], **kwargs_25517)
        
        # Assigning a type to the variable 'call_assignment_22384' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_22384', create_temp_Assign_call_result_25518)
        
        # Assigning a Call to a Name (line 922):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22384' (line 922)
        call_assignment_22384_25519 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_22384', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25520 = stypy_get_value_from_tuple(call_assignment_22384_25519, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22385' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_22385', stypy_get_value_from_tuple_call_result_25520)
        
        # Assigning a Name to a Name (line 922):
        # Getting the type of 'call_assignment_22385' (line 922)
        call_assignment_22385_25521 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_22385')
        # Assigning a type to the variable 'generator_stmts' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'generator_stmts', call_assignment_22385_25521)
        
        # Assigning a Call to a Name (line 922):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22384' (line 922)
        call_assignment_22384_25522 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_22384', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25523 = stypy_get_value_from_tuple(call_assignment_22384_25522, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22386' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_22386', stypy_get_value_from_tuple_call_result_25523)
        
        # Assigning a Name to a Name (line 922):
        # Getting the type of 'call_assignment_22386' (line 922)
        call_assignment_22386_25524 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 922, 8), 'call_assignment_22386')
        # Assigning a type to the variable 'generator_type_var' (line 922)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 922, 25), 'generator_type_var', call_assignment_22386_25524)
        
        # Assigning a Call to a Name (line 926):
        
        # Assigning a Call to a Name (line 926):
        
        # Call to create_attribute(...): (line 926)
        # Processing the call arguments (line 926)
        # Getting the type of 'generator_type_var' (line 926)
        generator_type_var_25527 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 62), 'generator_type_var', False)
        str_25528 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 926, 82), 'str', 'set_elements_type')
        # Processing the call keyword arguments (line 926)
        # Getting the type of 'node' (line 927)
        node_25529 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 927, 62), 'node', False)
        # Obtaining the member 'lineno' of a type (line 927)
        lineno_25530 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 927, 62), node_25529, 'lineno')
        keyword_25531 = lineno_25530
        # Getting the type of 'node' (line 928)
        node_25532 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 928, 64), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 928)
        col_offset_25533 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 928, 64), node_25532, 'col_offset')
        keyword_25534 = col_offset_25533
        kwargs_25535 = {'column': keyword_25534, 'line': keyword_25531}
        # Getting the type of 'core_language_copy' (line 926)
        core_language_copy_25525 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 926, 26), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 926)
        create_attribute_25526 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 926, 26), core_language_copy_25525, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 926)
        create_attribute_call_result_25536 = invoke(stypy.reporting.localization.Localization(__file__, 926, 26), create_attribute_25526, *[generator_type_var_25527, str_25528], **kwargs_25535)
        
        # Assigning a type to the variable 'store_type_func' (line 926)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 926, 8), 'store_type_func', create_attribute_call_result_25536)
        
        # Assigning a Call to a Name (line 930):
        
        # Assigning a Call to a Name (line 930):
        
        # Call to create_call_expression(...): (line 930)
        # Processing the call arguments (line 930)
        # Getting the type of 'store_type_func' (line 930)
        store_type_func_25539 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 64), 'store_type_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 930)
        list_25540 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 930, 81), 'list')
        # Adding type elements to the builtin type 'list' instance (line 930)
        # Adding element type (line 930)
        # Getting the type of 'localization' (line 930)
        localization_25541 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 82), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 81), list_25540, localization_25541)
        # Adding element type (line 930)
        # Getting the type of 'generator_stored_type_var' (line 930)
        generator_stored_type_var_25542 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 96), 'generator_stored_type_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 930, 81), list_25540, generator_stored_type_var_25542)
        
        # Processing the call keyword arguments (line 930)
        kwargs_25543 = {}
        # Getting the type of 'functions_copy' (line 930)
        functions_copy_25537 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 930, 26), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 930)
        create_call_expression_25538 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 930, 26), functions_copy_25537, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 930)
        create_call_expression_call_result_25544 = invoke(stypy.reporting.localization.Localization(__file__, 930, 26), create_call_expression_25538, *[store_type_func_25539, list_25540], **kwargs_25543)
        
        # Assigning a type to the variable 'store_type_call' (line 930)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 930, 8), 'store_type_call', create_call_expression_call_result_25544)
        
        # Assigning a Call to a Name (line 932):
        
        # Assigning a Call to a Name (line 932):
        
        # Call to assign_as_return_type(...): (line 932)
        # Processing the call arguments (line 932)
        # Getting the type of 'generator_type_var' (line 932)
        generator_type_var_25547 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 64), 'generator_type_var', False)
        # Processing the call keyword arguments (line 932)
        kwargs_25548 = {}
        # Getting the type of 'stypy_functions_copy' (line 932)
        stypy_functions_copy_25545 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 932, 21), 'stypy_functions_copy', False)
        # Obtaining the member 'assign_as_return_type' of a type (line 932)
        assign_as_return_type_25546 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 932, 21), stypy_functions_copy_25545, 'assign_as_return_type')
        # Calling assign_as_return_type(args, kwargs) (line 932)
        assign_as_return_type_call_result_25549 = invoke(stypy.reporting.localization.Localization(__file__, 932, 21), assign_as_return_type_25546, *[generator_type_var_25547], **kwargs_25548)
        
        # Assigning a type to the variable 'ret_assign' (line 932)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 932, 8), 'ret_assign', assign_as_return_type_call_result_25549)
        
        # Call to flatten_lists(...): (line 934)
        # Processing the call arguments (line 934)
        # Getting the type of 'src_comment' (line 934)
        src_comment_25552 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 50), 'src_comment', False)
        # Getting the type of 'generator_stored_type_stmts' (line 934)
        generator_stored_type_stmts_25553 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 63), 'generator_stored_type_stmts', False)
        # Getting the type of 'generator_stmts' (line 934)
        generator_stmts_25554 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 92), 'generator_stmts', False)
        # Getting the type of 'store_type_call' (line 934)
        store_type_call_25555 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 109), 'store_type_call', False)
        # Getting the type of 'ret_assign' (line 935)
        ret_assign_25556 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 935, 45), 'ret_assign', False)
        # Processing the call keyword arguments (line 934)
        kwargs_25557 = {}
        # Getting the type of 'stypy_functions_copy' (line 934)
        stypy_functions_copy_25550 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 934, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 934)
        flatten_lists_25551 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 934, 15), stypy_functions_copy_25550, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 934)
        flatten_lists_call_result_25558 = invoke(stypy.reporting.localization.Localization(__file__, 934, 15), flatten_lists_25551, *[src_comment_25552, generator_stored_type_stmts_25553, generator_stmts_25554, store_type_call_25555, ret_assign_25556], **kwargs_25557)
        
        # Assigning a type to the variable 'stypy_return_type' (line 934)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 934, 8), 'stypy_return_type', flatten_lists_call_result_25558)
        
        # ################# End of 'visit_Yield(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Yield' in the type store
        # Getting the type of 'stypy_return_type' (line 911)
        stypy_return_type_25559 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 911, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25559)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Yield'
        return stypy_return_type_25559


    @norecursion
    def visit_Raise(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_Raise'
        module_type_store = module_type_store.open_function_context('visit_Raise', 937, 4, False)
        # Assigning a type to the variable 'self' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_Raise')
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_Raise.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_Raise', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_Raise', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_Raise(...)' code ##################

        
        # Assigning a Call to a Name (line 938):
        
        # Assigning a Call to a Name (line 938):
        
        # Call to create_localization(...): (line 938)
        # Processing the call arguments (line 938)
        # Getting the type of 'node' (line 938)
        node_25562 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 938)
        lineno_25563 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 64), node_25562, 'lineno')
        # Getting the type of 'node' (line 938)
        node_25564 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 938)
        col_offset_25565 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 77), node_25564, 'col_offset')
        # Processing the call keyword arguments (line 938)
        kwargs_25566 = {}
        # Getting the type of 'stypy_functions_copy' (line 938)
        stypy_functions_copy_25560 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 938, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 938)
        create_localization_25561 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 938, 23), stypy_functions_copy_25560, 'create_localization')
        # Calling create_localization(args, kwargs) (line 938)
        create_localization_call_result_25567 = invoke(stypy.reporting.localization.Localization(__file__, 938, 23), create_localization_25561, *[lineno_25563, col_offset_25565], **kwargs_25566)
        
        # Assigning a type to the variable 'localization' (line 938)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 938, 8), 'localization', create_localization_call_result_25567)
        
        # Assigning a Call to a Tuple (line 940):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 940)
        # Processing the call arguments (line 940)
        # Getting the type of 'node' (line 940)
        node_25570 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 42), 'node', False)
        # Obtaining the member 'type' of a type (line 940)
        type_25571 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 940, 42), node_25570, 'type')
        # Getting the type of 'context' (line 940)
        context_25572 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 53), 'context', False)
        # Processing the call keyword arguments (line 940)
        kwargs_25573 = {}
        # Getting the type of 'self' (line 940)
        self_25568 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 31), 'self', False)
        # Obtaining the member 'visit' of a type (line 940)
        visit_25569 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 940, 31), self_25568, 'visit')
        # Calling visit(args, kwargs) (line 940)
        visit_call_result_25574 = invoke(stypy.reporting.localization.Localization(__file__, 940, 31), visit_25569, *[type_25571, context_25572], **kwargs_25573)
        
        # Assigning a type to the variable 'call_assignment_22387' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_22387', visit_call_result_25574)
        
        # Assigning a Call to a Name (line 940):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22387' (line 940)
        call_assignment_22387_25575 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_22387', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25576 = stypy_get_value_from_tuple(call_assignment_22387_25575, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22388' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_22388', stypy_get_value_from_tuple_call_result_25576)
        
        # Assigning a Name to a Name (line 940):
        # Getting the type of 'call_assignment_22388' (line 940)
        call_assignment_22388_25577 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_22388')
        # Assigning a type to the variable 'type_stmts' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'type_stmts', call_assignment_22388_25577)
        
        # Assigning a Call to a Name (line 940):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22387' (line 940)
        call_assignment_22387_25578 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_22387', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25579 = stypy_get_value_from_tuple(call_assignment_22387_25578, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22389' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_22389', stypy_get_value_from_tuple_call_result_25579)
        
        # Assigning a Name to a Name (line 940):
        # Getting the type of 'call_assignment_22389' (line 940)
        call_assignment_22389_25580 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 940, 8), 'call_assignment_22389')
        # Assigning a type to the variable 'type_var' (line 940)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 940, 20), 'type_var', call_assignment_22389_25580)
        
        # Assigning a Call to a Name (line 942):
        
        # Assigning a Call to a Name (line 942):
        
        # Call to create_Name(...): (line 942)
        # Processing the call arguments (line 942)
        str_25583 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 942, 57), 'str', 'ensure_var_of_types')
        # Processing the call keyword arguments (line 942)
        # Getting the type of 'node' (line 943)
        node_25584 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 943, 57), 'node', False)
        # Obtaining the member 'lineno' of a type (line 943)
        lineno_25585 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 943, 57), node_25584, 'lineno')
        keyword_25586 = lineno_25585
        # Getting the type of 'node' (line 944)
        node_25587 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 944, 59), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 944)
        col_offset_25588 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 944, 59), node_25587, 'col_offset')
        keyword_25589 = col_offset_25588
        kwargs_25590 = {'column': keyword_25589, 'line': keyword_25586}
        # Getting the type of 'core_language_copy' (line 942)
        core_language_copy_25581 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 942, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 942)
        create_Name_25582 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 942, 26), core_language_copy_25581, 'create_Name')
        # Calling create_Name(args, kwargs) (line 942)
        create_Name_call_result_25591 = invoke(stypy.reporting.localization.Localization(__file__, 942, 26), create_Name_25582, *[str_25583], **kwargs_25590)
        
        # Assigning a type to the variable 'type_check_func' (line 942)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 942, 8), 'type_check_func', create_Name_call_result_25591)
        
        # Assigning a Call to a Name (line 946):
        
        # Assigning a Call to a Name (line 946):
        
        # Call to create_str(...): (line 946)
        # Processing the call arguments (line 946)
        str_25594 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 946, 52), 'str', 'raise parameter')
        # Processing the call keyword arguments (line 946)
        kwargs_25595 = {}
        # Getting the type of 'core_language_copy' (line 946)
        core_language_copy_25592 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 946, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 946)
        create_str_25593 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 946, 22), core_language_copy_25592, 'create_str')
        # Calling create_str(args, kwargs) (line 946)
        create_str_call_result_25596 = invoke(stypy.reporting.localization.Localization(__file__, 946, 22), create_str_25593, *[str_25594], **kwargs_25595)
        
        # Assigning a type to the variable 'description' (line 946)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 946, 8), 'description', create_str_call_result_25596)
        
        # Assigning a Call to a Name (line 947):
        
        # Assigning a Call to a Name (line 947):
        
        # Call to create_Name(...): (line 947)
        # Processing the call arguments (line 947)
        str_25599 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 947, 55), 'str', 'Exception')
        # Processing the call keyword arguments (line 947)
        kwargs_25600 = {}
        # Getting the type of 'core_language_copy' (line 947)
        core_language_copy_25597 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 947, 24), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 947)
        create_Name_25598 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 947, 24), core_language_copy_25597, 'create_Name')
        # Calling create_Name(args, kwargs) (line 947)
        create_Name_call_result_25601 = invoke(stypy.reporting.localization.Localization(__file__, 947, 24), create_Name_25598, *[str_25599], **kwargs_25600)
        
        # Assigning a type to the variable 'admitted_type' (line 947)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 947, 8), 'admitted_type', create_Name_call_result_25601)
        
        # Assigning a Call to a Name (line 949):
        
        # Assigning a Call to a Name (line 949):
        
        # Call to create_call_expression(...): (line 949)
        # Processing the call arguments (line 949)
        # Getting the type of 'type_check_func' (line 949)
        type_check_func_25604 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 66), 'type_check_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 950)
        list_25605 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 950, 61), 'list')
        # Adding type elements to the builtin type 'list' instance (line 950)
        # Adding element type (line 950)
        # Getting the type of 'localization' (line 950)
        localization_25606 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 62), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_25605, localization_25606)
        # Adding element type (line 950)
        # Getting the type of 'type_var' (line 950)
        type_var_25607 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 76), 'type_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_25605, type_var_25607)
        # Adding element type (line 950)
        # Getting the type of 'description' (line 950)
        description_25608 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 950, 86), 'description', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_25605, description_25608)
        # Adding element type (line 950)
        # Getting the type of 'admitted_type' (line 951)
        admitted_type_25609 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 951, 62), 'admitted_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 950, 61), list_25605, admitted_type_25609)
        
        # Processing the call keyword arguments (line 949)
        kwargs_25610 = {}
        # Getting the type of 'functions_copy' (line 949)
        functions_copy_25602 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 949, 28), 'functions_copy', False)
        # Obtaining the member 'create_call_expression' of a type (line 949)
        create_call_expression_25603 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 949, 28), functions_copy_25602, 'create_call_expression')
        # Calling create_call_expression(args, kwargs) (line 949)
        create_call_expression_call_result_25611 = invoke(stypy.reporting.localization.Localization(__file__, 949, 28), create_call_expression_25603, *[type_check_func_25604, list_25605], **kwargs_25610)
        
        # Assigning a type to the variable 'check_params_call' (line 949)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 949, 8), 'check_params_call', create_call_expression_call_result_25611)
        
        # Call to flatten_lists(...): (line 953)
        # Processing the call arguments (line 953)
        # Getting the type of 'type_stmts' (line 953)
        type_stmts_25614 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 50), 'type_stmts', False)
        # Getting the type of 'check_params_call' (line 953)
        check_params_call_25615 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 62), 'check_params_call', False)
        # Processing the call keyword arguments (line 953)
        kwargs_25616 = {}
        # Getting the type of 'stypy_functions_copy' (line 953)
        stypy_functions_copy_25612 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 953, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 953)
        flatten_lists_25613 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 953, 15), stypy_functions_copy_25612, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 953)
        flatten_lists_call_result_25617 = invoke(stypy.reporting.localization.Localization(__file__, 953, 15), flatten_lists_25613, *[type_stmts_25614, check_params_call_25615], **kwargs_25616)
        
        # Assigning a type to the variable 'stypy_return_type' (line 953)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 953, 8), 'stypy_return_type', flatten_lists_call_result_25617)
        
        # ################# End of 'visit_Raise(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_Raise' in the type store
        # Getting the type of 'stypy_return_type' (line 937)
        stypy_return_type_25618 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 937, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25618)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_Raise'
        return stypy_return_type_25618


    @norecursion
    def visit_With(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_With'
        module_type_store = module_type_store.open_function_context('visit_With', 955, 4, False)
        # Assigning a type to the variable 'self' (line 956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_With')
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_With.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_With', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_With', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_With(...)' code ##################

        
        # Assigning a Call to a Name (line 956):
        
        # Assigning a Call to a Name (line 956):
        
        # Call to create_localization(...): (line 956)
        # Processing the call arguments (line 956)
        # Getting the type of 'node' (line 956)
        node_25621 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 64), 'node', False)
        # Obtaining the member 'lineno' of a type (line 956)
        lineno_25622 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 64), node_25621, 'lineno')
        # Getting the type of 'node' (line 956)
        node_25623 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 77), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 956)
        col_offset_25624 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 77), node_25623, 'col_offset')
        # Processing the call keyword arguments (line 956)
        kwargs_25625 = {}
        # Getting the type of 'stypy_functions_copy' (line 956)
        stypy_functions_copy_25619 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 956, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_localization' of a type (line 956)
        create_localization_25620 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 956, 23), stypy_functions_copy_25619, 'create_localization')
        # Calling create_localization(args, kwargs) (line 956)
        create_localization_call_result_25626 = invoke(stypy.reporting.localization.Localization(__file__, 956, 23), create_localization_25620, *[lineno_25622, col_offset_25624], **kwargs_25625)
        
        # Assigning a type to the variable 'localization' (line 956)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 956, 8), 'localization', create_localization_call_result_25626)
        
        # Assigning a Call to a Name (line 957):
        
        # Assigning a Call to a Name (line 957):
        
        # Call to create_Name(...): (line 957)
        # Processing the call arguments (line 957)
        str_25629 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 957, 57), 'str', 'ensure_var_has_members')
        # Processing the call keyword arguments (line 957)
        # Getting the type of 'node' (line 958)
        node_25630 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 958, 57), 'node', False)
        # Obtaining the member 'lineno' of a type (line 958)
        lineno_25631 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 958, 57), node_25630, 'lineno')
        keyword_25632 = lineno_25631
        # Getting the type of 'node' (line 959)
        node_25633 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 959, 59), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 959)
        col_offset_25634 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 959, 59), node_25633, 'col_offset')
        keyword_25635 = col_offset_25634
        kwargs_25636 = {'column': keyword_25635, 'line': keyword_25632}
        # Getting the type of 'core_language_copy' (line 957)
        core_language_copy_25627 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 957, 26), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 957)
        create_Name_25628 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 957, 26), core_language_copy_25627, 'create_Name')
        # Calling create_Name(args, kwargs) (line 957)
        create_Name_call_result_25637 = invoke(stypy.reporting.localization.Localization(__file__, 957, 26), create_Name_25628, *[str_25629], **kwargs_25636)
        
        # Assigning a type to the variable 'type_check_func' (line 957)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 957, 8), 'type_check_func', create_Name_call_result_25637)
        
        # Assigning a Call to a Tuple (line 961):
        
        # Assigning a Call to a Name:
        
        # Call to visit(...): (line 961)
        # Processing the call arguments (line 961)
        # Getting the type of 'node' (line 961)
        node_25640 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 48), 'node', False)
        # Obtaining the member 'context_expr' of a type (line 961)
        context_expr_25641 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 48), node_25640, 'context_expr')
        # Getting the type of 'context' (line 961)
        context_25642 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 67), 'context', False)
        # Processing the call keyword arguments (line 961)
        kwargs_25643 = {}
        # Getting the type of 'self' (line 961)
        self_25638 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 37), 'self', False)
        # Obtaining the member 'visit' of a type (line 961)
        visit_25639 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 961, 37), self_25638, 'visit')
        # Calling visit(args, kwargs) (line 961)
        visit_call_result_25644 = invoke(stypy.reporting.localization.Localization(__file__, 961, 37), visit_25639, *[context_expr_25641, context_25642], **kwargs_25643)
        
        # Assigning a type to the variable 'call_assignment_22390' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_22390', visit_call_result_25644)
        
        # Assigning a Call to a Name (line 961):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22390' (line 961)
        call_assignment_22390_25645 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_22390', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25646 = stypy_get_value_from_tuple(call_assignment_22390_25645, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22391' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_22391', stypy_get_value_from_tuple_call_result_25646)
        
        # Assigning a Name to a Name (line 961):
        # Getting the type of 'call_assignment_22391' (line 961)
        call_assignment_22391_25647 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_22391')
        # Assigning a type to the variable 'context_stmts' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'context_stmts', call_assignment_22391_25647)
        
        # Assigning a Call to a Name (line 961):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22390' (line 961)
        call_assignment_22390_25648 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_22390', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25649 = stypy_get_value_from_tuple(call_assignment_22390_25648, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22392' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_22392', stypy_get_value_from_tuple_call_result_25649)
        
        # Assigning a Name to a Name (line 961):
        # Getting the type of 'call_assignment_22392' (line 961)
        call_assignment_22392_25650 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 961, 8), 'call_assignment_22392')
        # Assigning a type to the variable 'context_var' (line 961)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 961, 23), 'context_var', call_assignment_22392_25650)
        
        # Assigning a Call to a Name (line 963):
        
        # Assigning a Call to a Name (line 963):
        
        # Call to create_str(...): (line 963)
        # Processing the call arguments (line 963)
        str_25653 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 963, 52), 'str', 'with parameter')
        # Processing the call keyword arguments (line 963)
        kwargs_25654 = {}
        # Getting the type of 'core_language_copy' (line 963)
        core_language_copy_25651 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 963, 22), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 963)
        create_str_25652 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 963, 22), core_language_copy_25651, 'create_str')
        # Calling create_str(args, kwargs) (line 963)
        create_str_call_result_25655 = invoke(stypy.reporting.localization.Localization(__file__, 963, 22), create_str_25652, *[str_25653], **kwargs_25654)
        
        # Assigning a type to the variable 'description' (line 963)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 963, 8), 'description', create_str_call_result_25655)
        
        # Assigning a Call to a Name (line 965):
        
        # Assigning a Call to a Name (line 965):
        
        # Call to create_str(...): (line 965)
        # Processing the call arguments (line 965)
        str_25658 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 965, 46), 'str', '__enter__')
        # Processing the call keyword arguments (line 965)
        kwargs_25659 = {}
        # Getting the type of 'core_language_copy' (line 965)
        core_language_copy_25656 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 965, 16), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 965)
        create_str_25657 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 965, 16), core_language_copy_25656, 'create_str')
        # Calling create_str(args, kwargs) (line 965)
        create_str_call_result_25660 = invoke(stypy.reporting.localization.Localization(__file__, 965, 16), create_str_25657, *[str_25658], **kwargs_25659)
        
        # Assigning a type to the variable 'enter' (line 965)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 965, 8), 'enter', create_str_call_result_25660)
        
        # Assigning a Call to a Name (line 966):
        
        # Assigning a Call to a Name (line 966):
        
        # Call to create_str(...): (line 966)
        # Processing the call arguments (line 966)
        str_25663 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 966, 45), 'str', '__exit__')
        # Processing the call keyword arguments (line 966)
        kwargs_25664 = {}
        # Getting the type of 'core_language_copy' (line 966)
        core_language_copy_25661 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 966, 15), 'core_language_copy', False)
        # Obtaining the member 'create_str' of a type (line 966)
        create_str_25662 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 966, 15), core_language_copy_25661, 'create_str')
        # Calling create_str(args, kwargs) (line 966)
        create_str_call_result_25665 = invoke(stypy.reporting.localization.Localization(__file__, 966, 15), create_str_25662, *[str_25663], **kwargs_25664)
        
        # Assigning a type to the variable 'exit' (line 966)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 966, 8), 'exit', create_str_call_result_25665)
        
        # Assigning a Call to a Name (line 967):
        
        # Assigning a Call to a Name (line 967):
        
        # Call to create_call(...): (line 967)
        # Processing the call arguments (line 967)
        # Getting the type of 'type_check_func' (line 967)
        type_check_func_25668 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 55), 'type_check_func', False)
        
        # Obtaining an instance of the builtin type 'list' (line 968)
        list_25669 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 968, 50), 'list')
        # Adding type elements to the builtin type 'list' instance (line 968)
        # Adding element type (line 968)
        # Getting the type of 'localization' (line 968)
        localization_25670 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 51), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_25669, localization_25670)
        # Adding element type (line 968)
        # Getting the type of 'context_var' (line 968)
        context_var_25671 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 65), 'context_var', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_25669, context_var_25671)
        # Adding element type (line 968)
        # Getting the type of 'description' (line 968)
        description_25672 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 968, 78), 'description', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_25669, description_25672)
        # Adding element type (line 968)
        # Getting the type of 'enter' (line 969)
        enter_25673 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 969, 51), 'enter', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_25669, enter_25673)
        # Adding element type (line 968)
        # Getting the type of 'exit' (line 970)
        exit_25674 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 970, 51), 'exit', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 968, 50), list_25669, exit_25674)
        
        # Processing the call keyword arguments (line 967)
        kwargs_25675 = {}
        # Getting the type of 'functions_copy' (line 967)
        functions_copy_25666 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 967, 28), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 967)
        create_call_25667 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 967, 28), functions_copy_25666, 'create_call')
        # Calling create_call(args, kwargs) (line 967)
        create_call_call_result_25676 = invoke(stypy.reporting.localization.Localization(__file__, 967, 28), create_call_25667, *[type_check_func_25668, list_25669], **kwargs_25675)
        
        # Assigning a type to the variable 'check_params_call' (line 967)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 967, 8), 'check_params_call', create_call_call_result_25676)
        
        # Assigning a Call to a Tuple (line 973):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 973)
        # Processing the call arguments (line 973)
        # Getting the type of 'check_params_call' (line 973)
        check_params_call_25679 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 81), 'check_params_call', False)
        # Processing the call keyword arguments (line 973)
        # Getting the type of 'node' (line 973)
        node_25680 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 105), 'node', False)
        # Obtaining the member 'lineno' of a type (line 973)
        lineno_25681 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 105), node_25680, 'lineno')
        keyword_25682 = lineno_25681
        # Getting the type of 'node' (line 974)
        node_25683 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 974, 83), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 974)
        col_offset_25684 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 974, 83), node_25683, 'col_offset')
        keyword_25685 = col_offset_25684
        kwargs_25686 = {'column': keyword_25685, 'line': keyword_25682}
        # Getting the type of 'stypy_functions_copy' (line 973)
        stypy_functions_copy_25677 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 41), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 973)
        create_temp_Assign_25678 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 973, 41), stypy_functions_copy_25677, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 973)
        create_temp_Assign_call_result_25687 = invoke(stypy.reporting.localization.Localization(__file__, 973, 41), create_temp_Assign_25678, *[check_params_call_25679], **kwargs_25686)
        
        # Assigning a type to the variable 'call_assignment_22393' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_22393', create_temp_Assign_call_result_25687)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22393' (line 973)
        call_assignment_22393_25688 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_22393', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25689 = stypy_get_value_from_tuple(call_assignment_22393_25688, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22394' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_22394', stypy_get_value_from_tuple_call_result_25689)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_22394' (line 973)
        call_assignment_22394_25690 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_22394')
        # Assigning a type to the variable 'call_test_stmts' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_test_stmts', call_assignment_22394_25690)
        
        # Assigning a Call to a Name (line 973):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22393' (line 973)
        call_assignment_22393_25691 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_22393', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25692 = stypy_get_value_from_tuple(call_assignment_22393_25691, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22395' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_22395', stypy_get_value_from_tuple_call_result_25692)
        
        # Assigning a Name to a Name (line 973):
        # Getting the type of 'call_assignment_22395' (line 973)
        call_assignment_22395_25693 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 973, 8), 'call_assignment_22395')
        # Assigning a type to the variable 'call_test_var' (line 973)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 973, 25), 'call_test_var', call_assignment_22395_25693)
        
        # Assigning a Call to a Name (line 976):
        
        # Assigning a Call to a Name (line 976):
        
        # Call to create_src_comment(...): (line 976)
        # Processing the call arguments (line 976)
        str_25696 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 976, 64), 'str', 'Calling the __enter__ method to initiate a with section')
        # Processing the call keyword arguments (line 976)
        kwargs_25697 = {}
        # Getting the type of 'stypy_functions_copy' (line 976)
        stypy_functions_copy_25694 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 976, 24), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 976)
        create_src_comment_25695 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 976, 24), stypy_functions_copy_25694, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 976)
        create_src_comment_call_result_25698 = invoke(stypy.reporting.localization.Localization(__file__, 976, 24), create_src_comment_25695, *[str_25696], **kwargs_25697)
        
        # Assigning a type to the variable 'enter_comment' (line 976)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 976, 8), 'enter_comment', create_src_comment_call_result_25698)
        
        # Assigning a Call to a Tuple (line 977):
        
        # Assigning a Call to a Name:
        
        # Call to create_get_type_of_member(...): (line 977)
        # Processing the call arguments (line 977)
        # Getting the type of 'context_var' (line 977)
        context_var_25701 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 81), 'context_var', False)
        str_25702 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 977, 94), 'str', '__enter__')
        # Getting the type of 'node' (line 977)
        node_25703 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 107), 'node', False)
        # Obtaining the member 'lineno' of a type (line 977)
        lineno_25704 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 107), node_25703, 'lineno')
        # Getting the type of 'node' (line 978)
        node_25705 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 978, 76), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 978)
        col_offset_25706 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 978, 76), node_25705, 'col_offset')
        # Processing the call keyword arguments (line 977)
        kwargs_25707 = {}
        # Getting the type of 'stypy_functions_copy' (line 977)
        stypy_functions_copy_25699 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 34), 'stypy_functions_copy', False)
        # Obtaining the member 'create_get_type_of_member' of a type (line 977)
        create_get_type_of_member_25700 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 977, 34), stypy_functions_copy_25699, 'create_get_type_of_member')
        # Calling create_get_type_of_member(args, kwargs) (line 977)
        create_get_type_of_member_call_result_25708 = invoke(stypy.reporting.localization.Localization(__file__, 977, 34), create_get_type_of_member_25700, *[context_var_25701, str_25702, lineno_25704, col_offset_25706], **kwargs_25707)
        
        # Assigning a type to the variable 'call_assignment_22396' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_22396', create_get_type_of_member_call_result_25708)
        
        # Assigning a Call to a Name (line 977):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22396' (line 977)
        call_assignment_22396_25709 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_22396', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25710 = stypy_get_value_from_tuple(call_assignment_22396_25709, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22397' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_22397', stypy_get_value_from_tuple_call_result_25710)
        
        # Assigning a Name to a Name (line 977):
        # Getting the type of 'call_assignment_22397' (line 977)
        call_assignment_22397_25711 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_22397')
        # Assigning a type to the variable 'enter_method' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'enter_method', call_assignment_22397_25711)
        
        # Assigning a Call to a Name (line 977):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22396' (line 977)
        call_assignment_22396_25712 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_22396', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25713 = stypy_get_value_from_tuple(call_assignment_22396_25712, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22398' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_22398', stypy_get_value_from_tuple_call_result_25713)
        
        # Assigning a Name to a Name (line 977):
        # Getting the type of 'call_assignment_22398' (line 977)
        call_assignment_22398_25714 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 977, 8), 'call_assignment_22398')
        # Assigning a type to the variable 'enter_var' (line 977)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 977, 22), 'enter_var', call_assignment_22398_25714)
        
        # Assigning a Call to a Name (line 979):
        
        # Assigning a Call to a Name (line 979):
        
        # Call to create_attribute(...): (line 979)
        # Processing the call arguments (line 979)
        # Getting the type of 'enter_var' (line 979)
        enter_var_25717 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 66), 'enter_var', False)
        str_25718 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 979, 77), 'str', 'invoke')
        # Getting the type of 'node' (line 979)
        node_25719 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 87), 'node', False)
        # Obtaining the member 'lineno' of a type (line 979)
        lineno_25720 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 87), node_25719, 'lineno')
        # Getting the type of 'node' (line 979)
        node_25721 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 100), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 979)
        col_offset_25722 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 100), node_25721, 'col_offset')
        # Processing the call keyword arguments (line 979)
        kwargs_25723 = {}
        # Getting the type of 'core_language_copy' (line 979)
        core_language_copy_25715 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 979, 30), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 979)
        create_attribute_25716 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 979, 30), core_language_copy_25715, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 979)
        create_attribute_call_result_25724 = invoke(stypy.reporting.localization.Localization(__file__, 979, 30), create_attribute_25716, *[enter_var_25717, str_25718, lineno_25720, col_offset_25722], **kwargs_25723)
        
        # Assigning a type to the variable 'enter_method_invoke' (line 979)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 979, 8), 'enter_method_invoke', create_attribute_call_result_25724)
        
        # Assigning a Call to a Tuple (line 980):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 980)
        # Processing the call arguments (line 980)
        
        # Call to create_call(...): (line 981)
        # Processing the call arguments (line 981)
        # Getting the type of 'enter_method_invoke' (line 981)
        enter_method_invoke_25729 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 39), 'enter_method_invoke', False)
        
        # Obtaining an instance of the builtin type 'list' (line 981)
        list_25730 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 981, 60), 'list')
        # Adding type elements to the builtin type 'list' instance (line 981)
        # Adding element type (line 981)
        # Getting the type of 'localization' (line 981)
        localization_25731 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 61), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 981, 60), list_25730, localization_25731)
        
        # Processing the call keyword arguments (line 981)
        kwargs_25732 = {}
        # Getting the type of 'functions_copy' (line 981)
        functions_copy_25727 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 12), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 981)
        create_call_25728 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 12), functions_copy_25727, 'create_call')
        # Calling create_call(args, kwargs) (line 981)
        create_call_call_result_25733 = invoke(stypy.reporting.localization.Localization(__file__, 981, 12), create_call_25728, *[enter_method_invoke_25729, list_25730], **kwargs_25732)
        
        # Getting the type of 'node' (line 981)
        node_25734 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 77), 'node', False)
        # Obtaining the member 'lineno' of a type (line 981)
        lineno_25735 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 77), node_25734, 'lineno')
        # Getting the type of 'node' (line 981)
        node_25736 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 981, 90), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 981)
        col_offset_25737 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 981, 90), node_25736, 'col_offset')
        # Processing the call keyword arguments (line 980)
        kwargs_25738 = {}
        # Getting the type of 'stypy_functions_copy' (line 980)
        stypy_functions_copy_25725 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 38), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 980)
        create_temp_Assign_25726 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 980, 38), stypy_functions_copy_25725, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 980)
        create_temp_Assign_call_result_25739 = invoke(stypy.reporting.localization.Localization(__file__, 980, 38), create_temp_Assign_25726, *[create_call_call_result_25733, lineno_25735, col_offset_25737], **kwargs_25738)
        
        # Assigning a type to the variable 'call_assignment_22399' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_22399', create_temp_Assign_call_result_25739)
        
        # Assigning a Call to a Name (line 980):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22399' (line 980)
        call_assignment_22399_25740 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_22399', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25741 = stypy_get_value_from_tuple(call_assignment_22399_25740, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22400' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_22400', stypy_get_value_from_tuple_call_result_25741)
        
        # Assigning a Name to a Name (line 980):
        # Getting the type of 'call_assignment_22400' (line 980)
        call_assignment_22400_25742 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_22400')
        # Assigning a type to the variable 'enter_method_call' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'enter_method_call', call_assignment_22400_25742)
        
        # Assigning a Call to a Name (line 980):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22399' (line 980)
        call_assignment_22399_25743 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_22399', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25744 = stypy_get_value_from_tuple(call_assignment_22399_25743, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22401' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_22401', stypy_get_value_from_tuple_call_result_25744)
        
        # Assigning a Name to a Name (line 980):
        # Getting the type of 'call_assignment_22401' (line 980)
        call_assignment_22401_25745 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 980, 8), 'call_assignment_22401')
        # Assigning a type to the variable 'call_var' (line 980)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 980, 27), 'call_var', call_assignment_22401_25745)
        
        # Assigning a List to a Name (line 982):
        
        # Assigning a List to a Name (line 982):
        
        # Obtaining an instance of the builtin type 'list' (line 982)
        list_25746 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 982, 21), 'list')
        # Adding type elements to the builtin type 'list' instance (line 982)
        # Adding element type (line 982)
        # Getting the type of 'enter_comment' (line 982)
        enter_comment_25747 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 22), 'enter_comment')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 21), list_25746, enter_comment_25747)
        # Adding element type (line 982)
        # Getting the type of 'enter_method' (line 982)
        enter_method_25748 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 37), 'enter_method')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 21), list_25746, enter_method_25748)
        # Adding element type (line 982)
        # Getting the type of 'enter_method_call' (line 982)
        enter_method_call_25749 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 982, 51), 'enter_method_call')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 982, 21), list_25746, enter_method_call_25749)
        
        # Assigning a type to the variable 'body_stmts' (line 982)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 982, 8), 'body_stmts', list_25746)
        
        # Getting the type of 'node' (line 983)
        node_25750 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 11), 'node')
        # Obtaining the member 'optional_vars' of a type (line 983)
        optional_vars_25751 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 983, 11), node_25750, 'optional_vars')
        # Getting the type of 'None' (line 983)
        None_25752 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 983, 37), 'None')
        # Applying the binary operator 'isnot' (line 983)
        result_is_not_25753 = python_operator(stypy.reporting.localization.Localization(__file__, 983, 11), 'isnot', optional_vars_25751, None_25752)
        
        # Testing if the type of an if condition is none (line 983)

        if evaluates_to_none(stypy.reporting.localization.Localization(__file__, 983, 8), result_is_not_25753):
            pass
        else:
            
            # Testing the type of an if condition (line 983)
            if_condition_25754 = is_suitable_condition(stypy.reporting.localization.Localization(__file__, 983, 8), result_is_not_25753)
            # Assigning a type to the variable 'if_condition_25754' (line 983)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 983, 8), 'if_condition_25754', if_condition_25754)
            # SSA begins for if statement (line 983)
            module_type_store = SSAContext.create_ssa_context(module_type_store, 'if')
            
            # Assigning a Call to a Name (line 984):
            
            # Assigning a Call to a Name (line 984):
            
            # Call to create_set_type_of(...): (line 984)
            # Processing the call arguments (line 984)
            # Getting the type of 'node' (line 984)
            node_25757 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 68), 'node', False)
            # Obtaining the member 'optional_vars' of a type (line 984)
            optional_vars_25758 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 68), node_25757, 'optional_vars')
            # Obtaining the member 'id' of a type (line 984)
            id_25759 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 68), optional_vars_25758, 'id')
            # Getting the type of 'call_var' (line 984)
            call_var_25760 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 91), 'call_var', False)
            # Getting the type of 'node' (line 984)
            node_25761 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 101), 'node', False)
            # Obtaining the member 'lineno' of a type (line 984)
            lineno_25762 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 101), node_25761, 'lineno')
            # Getting the type of 'node' (line 985)
            node_25763 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 985, 63), 'node', False)
            # Obtaining the member 'col_offset' of a type (line 985)
            col_offset_25764 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 985, 63), node_25763, 'col_offset')
            # Processing the call keyword arguments (line 984)
            kwargs_25765 = {}
            # Getting the type of 'stypy_functions_copy' (line 984)
            stypy_functions_copy_25755 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 984, 28), 'stypy_functions_copy', False)
            # Obtaining the member 'create_set_type_of' of a type (line 984)
            create_set_type_of_25756 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 984, 28), stypy_functions_copy_25755, 'create_set_type_of')
            # Calling create_set_type_of(args, kwargs) (line 984)
            create_set_type_of_call_result_25766 = invoke(stypy.reporting.localization.Localization(__file__, 984, 28), create_set_type_of_25756, *[id_25759, call_var_25760, lineno_25762, col_offset_25764], **kwargs_25765)
            
            # Assigning a type to the variable 'assing_to_var' (line 984)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 984, 12), 'assing_to_var', create_set_type_of_call_result_25766)
            
            # Getting the type of 'body_stmts' (line 986)
            body_stmts_25767 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 12), 'body_stmts')
            
            # Obtaining an instance of the builtin type 'list' (line 986)
            list_25768 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 986, 26), 'list')
            # Adding type elements to the builtin type 'list' instance (line 986)
            # Adding element type (line 986)
            # Getting the type of 'assing_to_var' (line 986)
            assing_to_var_25769 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 986, 27), 'assing_to_var')
            add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 986, 26), list_25768, assing_to_var_25769)
            
            # Applying the binary operator '+=' (line 986)
            result_iadd_25770 = python_operator(stypy.reporting.localization.Localization(__file__, 986, 12), '+=', body_stmts_25767, list_25768)
            # Assigning a type to the variable 'body_stmts' (line 986)
            module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 986, 12), 'body_stmts', result_iadd_25770)
            
            # SSA join for if statement (line 983)
            module_type_store = module_type_store.join_ssa_context()
            

        
        # Getting the type of 'body_stmts' (line 988)
        body_stmts_25771 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'body_stmts')
        
        # Call to __visit_instruction_body(...): (line 988)
        # Processing the call arguments (line 988)
        # Getting the type of 'node' (line 988)
        node_25774 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 52), 'node', False)
        # Obtaining the member 'body' of a type (line 988)
        body_25775 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 52), node_25774, 'body')
        # Getting the type of 'context' (line 988)
        context_25776 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 63), 'context', False)
        # Processing the call keyword arguments (line 988)
        kwargs_25777 = {}
        # Getting the type of 'self' (line 988)
        self_25772 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 988, 22), 'self', False)
        # Obtaining the member '__visit_instruction_body' of a type (line 988)
        visit_instruction_body_25773 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 988, 22), self_25772, '__visit_instruction_body')
        # Calling __visit_instruction_body(args, kwargs) (line 988)
        visit_instruction_body_call_result_25778 = invoke(stypy.reporting.localization.Localization(__file__, 988, 22), visit_instruction_body_25773, *[body_25775, context_25776], **kwargs_25777)
        
        # Applying the binary operator '+=' (line 988)
        result_iadd_25779 = python_operator(stypy.reporting.localization.Localization(__file__, 988, 8), '+=', body_stmts_25771, visit_instruction_body_call_result_25778)
        # Assigning a type to the variable 'body_stmts' (line 988)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 988, 8), 'body_stmts', result_iadd_25779)
        
        
        # Assigning a Call to a Name (line 991):
        
        # Assigning a Call to a Name (line 991):
        
        # Call to create_src_comment(...): (line 991)
        # Processing the call arguments (line 991)
        str_25782 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 991, 63), 'str', 'Calling the __exit__ method to finish a with section')
        # Processing the call keyword arguments (line 991)
        kwargs_25783 = {}
        # Getting the type of 'stypy_functions_copy' (line 991)
        stypy_functions_copy_25780 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 991, 23), 'stypy_functions_copy', False)
        # Obtaining the member 'create_src_comment' of a type (line 991)
        create_src_comment_25781 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 991, 23), stypy_functions_copy_25780, 'create_src_comment')
        # Calling create_src_comment(args, kwargs) (line 991)
        create_src_comment_call_result_25784 = invoke(stypy.reporting.localization.Localization(__file__, 991, 23), create_src_comment_25781, *[str_25782], **kwargs_25783)
        
        # Assigning a type to the variable 'exit_comment' (line 991)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 991, 8), 'exit_comment', create_src_comment_call_result_25784)
        
        # Assigning a Call to a Tuple (line 992):
        
        # Assigning a Call to a Name:
        
        # Call to create_get_type_of_member(...): (line 992)
        # Processing the call arguments (line 992)
        # Getting the type of 'context_var' (line 992)
        context_var_25787 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 79), 'context_var', False)
        str_25788 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 992, 92), 'str', '__exit__')
        # Getting the type of 'node' (line 992)
        node_25789 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 104), 'node', False)
        # Obtaining the member 'lineno' of a type (line 992)
        lineno_25790 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 104), node_25789, 'lineno')
        # Getting the type of 'node' (line 993)
        node_25791 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 993, 74), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 993)
        col_offset_25792 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 993, 74), node_25791, 'col_offset')
        # Processing the call keyword arguments (line 992)
        kwargs_25793 = {}
        # Getting the type of 'stypy_functions_copy' (line 992)
        stypy_functions_copy_25785 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 32), 'stypy_functions_copy', False)
        # Obtaining the member 'create_get_type_of_member' of a type (line 992)
        create_get_type_of_member_25786 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 992, 32), stypy_functions_copy_25785, 'create_get_type_of_member')
        # Calling create_get_type_of_member(args, kwargs) (line 992)
        create_get_type_of_member_call_result_25794 = invoke(stypy.reporting.localization.Localization(__file__, 992, 32), create_get_type_of_member_25786, *[context_var_25787, str_25788, lineno_25790, col_offset_25792], **kwargs_25793)
        
        # Assigning a type to the variable 'call_assignment_22402' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_22402', create_get_type_of_member_call_result_25794)
        
        # Assigning a Call to a Name (line 992):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22402' (line 992)
        call_assignment_22402_25795 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_22402', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25796 = stypy_get_value_from_tuple(call_assignment_22402_25795, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22403' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_22403', stypy_get_value_from_tuple_call_result_25796)
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'call_assignment_22403' (line 992)
        call_assignment_22403_25797 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_22403')
        # Assigning a type to the variable 'exit_method' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'exit_method', call_assignment_22403_25797)
        
        # Assigning a Call to a Name (line 992):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22402' (line 992)
        call_assignment_22402_25798 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_22402', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25799 = stypy_get_value_from_tuple(call_assignment_22402_25798, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22404' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_22404', stypy_get_value_from_tuple_call_result_25799)
        
        # Assigning a Name to a Name (line 992):
        # Getting the type of 'call_assignment_22404' (line 992)
        call_assignment_22404_25800 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 992, 8), 'call_assignment_22404')
        # Assigning a type to the variable 'exit_var' (line 992)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 992, 21), 'exit_var', call_assignment_22404_25800)
        
        # Assigning a Call to a Name (line 994):
        
        # Assigning a Call to a Name (line 994):
        
        # Call to create_attribute(...): (line 994)
        # Processing the call arguments (line 994)
        # Getting the type of 'exit_var' (line 994)
        exit_var_25803 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 65), 'exit_var', False)
        str_25804 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 994, 75), 'str', 'invoke')
        # Getting the type of 'node' (line 994)
        node_25805 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 85), 'node', False)
        # Obtaining the member 'lineno' of a type (line 994)
        lineno_25806 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 85), node_25805, 'lineno')
        # Getting the type of 'node' (line 994)
        node_25807 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 98), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 994)
        col_offset_25808 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 98), node_25807, 'col_offset')
        # Processing the call keyword arguments (line 994)
        kwargs_25809 = {}
        # Getting the type of 'core_language_copy' (line 994)
        core_language_copy_25801 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 994, 29), 'core_language_copy', False)
        # Obtaining the member 'create_attribute' of a type (line 994)
        create_attribute_25802 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 994, 29), core_language_copy_25801, 'create_attribute')
        # Calling create_attribute(args, kwargs) (line 994)
        create_attribute_call_result_25810 = invoke(stypy.reporting.localization.Localization(__file__, 994, 29), create_attribute_25802, *[exit_var_25803, str_25804, lineno_25806, col_offset_25808], **kwargs_25809)
        
        # Assigning a type to the variable 'exit_method_invoke' (line 994)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 994, 8), 'exit_method_invoke', create_attribute_call_result_25810)
        
        # Assigning a Call to a Name (line 995):
        
        # Assigning a Call to a Name (line 995):
        
        # Call to create_Name(...): (line 995)
        # Processing the call arguments (line 995)
        str_25813 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 995, 51), 'str', 'None')
        # Processing the call keyword arguments (line 995)
        kwargs_25814 = {}
        # Getting the type of 'core_language_copy' (line 995)
        core_language_copy_25811 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 995, 20), 'core_language_copy', False)
        # Obtaining the member 'create_Name' of a type (line 995)
        create_Name_25812 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 995, 20), core_language_copy_25811, 'create_Name')
        # Calling create_Name(args, kwargs) (line 995)
        create_Name_call_result_25815 = invoke(stypy.reporting.localization.Localization(__file__, 995, 20), create_Name_25812, *[str_25813], **kwargs_25814)
        
        # Assigning a type to the variable 'none_type' (line 995)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 995, 8), 'none_type', create_Name_call_result_25815)
        
        # Assigning a Call to a Tuple (line 996):
        
        # Assigning a Call to a Name:
        
        # Call to create_temp_Assign(...): (line 996)
        # Processing the call arguments (line 996)
        
        # Call to create_call(...): (line 996)
        # Processing the call arguments (line 996)
        # Getting the type of 'exit_method_invoke' (line 996)
        exit_method_invoke_25820 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 104), 'exit_method_invoke', False)
        
        # Obtaining an instance of the builtin type 'list' (line 997)
        list_25821 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 997, 94), 'list')
        # Adding type elements to the builtin type 'list' instance (line 997)
        # Adding element type (line 997)
        # Getting the type of 'localization' (line 997)
        localization_25822 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 997, 95), 'localization', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_25821, localization_25822)
        # Adding element type (line 997)
        # Getting the type of 'none_type' (line 998)
        none_type_25823 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 998, 95), 'none_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_25821, none_type_25823)
        # Adding element type (line 997)
        # Getting the type of 'none_type' (line 999)
        none_type_25824 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 999, 95), 'none_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_25821, none_type_25824)
        # Adding element type (line 997)
        # Getting the type of 'none_type' (line 1000)
        none_type_25825 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1000, 95), 'none_type', False)
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 997, 94), list_25821, none_type_25825)
        
        # Processing the call keyword arguments (line 996)
        kwargs_25826 = {}
        # Getting the type of 'functions_copy' (line 996)
        functions_copy_25818 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 77), 'functions_copy', False)
        # Obtaining the member 'create_call' of a type (line 996)
        create_call_25819 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 77), functions_copy_25818, 'create_call')
        # Calling create_call(args, kwargs) (line 996)
        create_call_call_result_25827 = invoke(stypy.reporting.localization.Localization(__file__, 996, 77), create_call_25819, *[exit_method_invoke_25820, list_25821], **kwargs_25826)
        
        # Getting the type of 'node' (line 1001)
        node_25828 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 72), 'node', False)
        # Obtaining the member 'lineno' of a type (line 1001)
        lineno_25829 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1001, 72), node_25828, 'lineno')
        # Getting the type of 'node' (line 1001)
        node_25830 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1001, 85), 'node', False)
        # Obtaining the member 'col_offset' of a type (line 1001)
        col_offset_25831 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1001, 85), node_25830, 'col_offset')
        # Processing the call keyword arguments (line 996)
        kwargs_25832 = {}
        # Getting the type of 'stypy_functions_copy' (line 996)
        stypy_functions_copy_25816 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 37), 'stypy_functions_copy', False)
        # Obtaining the member 'create_temp_Assign' of a type (line 996)
        create_temp_Assign_25817 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 996, 37), stypy_functions_copy_25816, 'create_temp_Assign')
        # Calling create_temp_Assign(args, kwargs) (line 996)
        create_temp_Assign_call_result_25833 = invoke(stypy.reporting.localization.Localization(__file__, 996, 37), create_temp_Assign_25817, *[create_call_call_result_25827, lineno_25829, col_offset_25831], **kwargs_25832)
        
        # Assigning a type to the variable 'call_assignment_22405' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_22405', create_temp_Assign_call_result_25833)
        
        # Assigning a Call to a Name (line 996):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22405' (line 996)
        call_assignment_22405_25834 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_22405', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25835 = stypy_get_value_from_tuple(call_assignment_22405_25834, 2, 0)
        
        # Assigning a type to the variable 'call_assignment_22406' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_22406', stypy_get_value_from_tuple_call_result_25835)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'call_assignment_22406' (line 996)
        call_assignment_22406_25836 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_22406')
        # Assigning a type to the variable 'exit_method_call' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'exit_method_call', call_assignment_22406_25836)
        
        # Assigning a Call to a Name (line 996):
        
        # Call to stypy_get_value_from_tuple(...):
        # Processing the call arguments
        # Getting the type of 'call_assignment_22405' (line 996)
        call_assignment_22405_25837 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_22405', False)
        # Calling stypy_get_value_from_tuple(tuple, tuple length, tuple pos)
        stypy_get_value_from_tuple_call_result_25838 = stypy_get_value_from_tuple(call_assignment_22405_25837, 2, 1)
        
        # Assigning a type to the variable 'call_assignment_22407' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_22407', stypy_get_value_from_tuple_call_result_25838)
        
        # Assigning a Name to a Name (line 996):
        # Getting the type of 'call_assignment_22407' (line 996)
        call_assignment_22407_25839 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 996, 8), 'call_assignment_22407')
        # Assigning a type to the variable 'call_var' (line 996)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 996, 26), 'call_var', call_assignment_22407_25839)
        
        # Getting the type of 'body_stmts' (line 1003)
        body_stmts_25840 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'body_stmts')
        
        # Obtaining an instance of the builtin type 'list' (line 1003)
        list_25841 = get_builtin_python_type_instance(stypy.reporting.localization.Localization(__file__, 1003, 22), 'list')
        # Adding type elements to the builtin type 'list' instance (line 1003)
        # Adding element type (line 1003)
        # Getting the type of 'exit_comment' (line 1003)
        exit_comment_25842 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 23), 'exit_comment')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 22), list_25841, exit_comment_25842)
        # Adding element type (line 1003)
        # Getting the type of 'exit_method' (line 1003)
        exit_method_25843 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 37), 'exit_method')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 22), list_25841, exit_method_25843)
        # Adding element type (line 1003)
        # Getting the type of 'exit_method_call' (line 1003)
        exit_method_call_25844 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1003, 50), 'exit_method_call')
        add_contained_elements_type(stypy.reporting.localization.Localization(__file__, 1003, 22), list_25841, exit_method_call_25844)
        
        # Applying the binary operator '+=' (line 1003)
        result_iadd_25845 = python_operator(stypy.reporting.localization.Localization(__file__, 1003, 8), '+=', body_stmts_25840, list_25841)
        # Assigning a type to the variable 'body_stmts' (line 1003)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1003, 8), 'body_stmts', result_iadd_25845)
        
        
        # Assigning a Call to a Name (line 1005):
        
        # Assigning a Call to a Name (line 1005):
        
        # Call to create_if(...): (line 1005)
        # Processing the call arguments (line 1005)
        # Getting the type of 'call_test_var' (line 1005)
        call_test_var_25848 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 56), 'call_test_var', False)
        # Getting the type of 'body_stmts' (line 1005)
        body_stmts_25849 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 71), 'body_stmts', False)
        # Processing the call keyword arguments (line 1005)
        kwargs_25850 = {}
        # Getting the type of 'conditional_statements_copy' (line 1005)
        conditional_statements_copy_25846 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1005, 18), 'conditional_statements_copy', False)
        # Obtaining the member 'create_if' of a type (line 1005)
        create_if_25847 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1005, 18), conditional_statements_copy_25846, 'create_if')
        # Calling create_if(args, kwargs) (line 1005)
        create_if_call_result_25851 = invoke(stypy.reporting.localization.Localization(__file__, 1005, 18), create_if_25847, *[call_test_var_25848, body_stmts_25849], **kwargs_25850)
        
        # Assigning a type to the variable 'with_if' (line 1005)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1005, 8), 'with_if', create_if_call_result_25851)
        
        # Call to flatten_lists(...): (line 1007)
        # Processing the call arguments (line 1007)
        # Getting the type of 'context_stmts' (line 1007)
        context_stmts_25854 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 50), 'context_stmts', False)
        # Getting the type of 'call_test_stmts' (line 1007)
        call_test_stmts_25855 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 65), 'call_test_stmts', False)
        # Getting the type of 'with_if' (line 1007)
        with_if_25856 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 82), 'with_if', False)
        # Processing the call keyword arguments (line 1007)
        kwargs_25857 = {}
        # Getting the type of 'stypy_functions_copy' (line 1007)
        stypy_functions_copy_25852 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1007, 15), 'stypy_functions_copy', False)
        # Obtaining the member 'flatten_lists' of a type (line 1007)
        flatten_lists_25853 = module_type_store.get_type_of_member(stypy.reporting.localization.Localization(__file__, 1007, 15), stypy_functions_copy_25852, 'flatten_lists')
        # Calling flatten_lists(args, kwargs) (line 1007)
        flatten_lists_call_result_25858 = invoke(stypy.reporting.localization.Localization(__file__, 1007, 15), flatten_lists_25853, *[context_stmts_25854, call_test_stmts_25855, with_if_25856], **kwargs_25857)
        
        # Assigning a type to the variable 'stypy_return_type' (line 1007)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1007, 8), 'stypy_return_type', flatten_lists_call_result_25858)
        
        # ################# End of 'visit_With(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_With' in the type store
        # Getting the type of 'stypy_return_type' (line 955)
        stypy_return_type_25859 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 955, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25859)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_With'
        return stypy_return_type_25859


    @norecursion
    def visit_arguments(type_of_self, localization, *varargs, **kwargs):
        global module_type_store
        # Assign values to the parameters with defaults
        defaults = []
        # Create a new context for function 'visit_arguments'
        module_type_store = module_type_store.open_function_context('visit_arguments', 1010, 4, False)
        # Assigning a type to the variable 'self' (line 1011)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 4), 'self', type_of_self)
        
        # Passed parameters checking function
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_localization', localization)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_type_of_self', type_of_self)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_type_store', module_type_store)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_function_name', 'StatementVisitor.visit_arguments')
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_param_names_list', ['node', 'context'])
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_varargs_param_name', None)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_kwargs_param_name', None)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_call_defaults', defaults)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_call_varargs', varargs)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_call_kwargs', kwargs)
        StatementVisitor.visit_arguments.__dict__.__setitem__('stypy_declared_arg_number', 3)
        arguments = process_argument_values(localization, type_of_self, module_type_store, 'StatementVisitor.visit_arguments', ['node', 'context'], None, None, defaults, varargs, kwargs)

        if is_error_type(arguments):
            # Destroy the current context
            module_type_store = module_type_store.close_function_context()
            return arguments

        # Initialize method data
        init_call_information(module_type_store, 'visit_arguments', localization, ['node', 'context'], arguments)
        
        # Default return type storage variable (SSA)
        # Assigning a type to the variable 'stypy_return_type'
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 0, 0), 'stypy_return_type', None)
        
        
        # ################# Begin of 'visit_arguments(...)' code ##################

        # Getting the type of 'node' (line 1011)
        node_25860 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1011, 15), 'node')
        # Assigning a type to the variable 'stypy_return_type' (line 1011)
        module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 1011, 8), 'stypy_return_type', node_25860)
        
        # ################# End of 'visit_arguments(...)' code ##################

        # Teardown call information
        teardown_call_information(localization, arguments)
        
        # Storing the return type of function 'visit_arguments' in the type store
        # Getting the type of 'stypy_return_type' (line 1010)
        stypy_return_type_25861 = module_type_store.get_type_of(stypy.reporting.localization.Localization(__file__, 1010, 4), 'stypy_return_type')
        module_type_store.store_return_type_of_current_context(stypy_return_type_25861)
        
        # Destroy the current context
        module_type_store = module_type_store.close_function_context()
        
        # Return type of the function 'visit_arguments'
        return stypy_return_type_25861


# Assigning a type to the variable 'StatementVisitor' (line 9)
module_type_store.set_type_of(stypy.reporting.localization.Localization(__file__, 9, 0), 'StatementVisitor', StatementVisitor)

# ################# End of the type inference program ##################

module_errors = stypy.errors.type_error.StypyTypeError.get_error_msgs()
module_warnings = stypy.errors.type_warning.TypeWarning.get_warning_msgs()
